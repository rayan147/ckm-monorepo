{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.cookBook.create()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/cookbook/cookbook.service.ts:19:41\n\n  16   data: Prisma.CookBookUncheckedCreateInput,\n  17 ): Promise<CookBook> {\n  18   try {\n→ 19     return await this.prisma.cookBook.create(\nForeign key constraint violated: `cookbook_restaurantId_fkey (index)`",
  "level": "error",
  "message": "Failed to create cookbook: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2024-11-07T19:13:21.537Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2024-12-16T18:11:59.292Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T12:25:29.356Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T12:29:49.940Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T12:30:30.270Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T12:30:40.500Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T12:30:56.411Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T13:26:09.745Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T13:26:51.016Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:01:32.331Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:14:15.127Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:14:26.155Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:15:44.053Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:35:21.735Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 1: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T14:35:30.678Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.prepBoard.delete()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/prep-board/prep-board.service.ts:84:48\n\n  81 \n  82 async deletePrepBoard(id: number): Promise<PrepBoard> {\n  83   try {\n→ 84     return await this.prisma.prepBoard.delete(\nForeign key constraint violated: `prepItem_prepBoardId_fkey (index)`",
  "level": "error",
  "message": "Failed to delete prep board with ID 3: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-01-08T19:14:16.425Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 23 not found or already deleted",
  "level": "error",
  "message": "Failed to delete recipe with ID 23: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-02-22T20:31:30.588Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.recipe.findMany()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/recipe/recipe.service.ts:211:28\n\n  208 \n  209 const [totalCount, recipes] = await Promise.all([\n  210   this.prisma.recipe.count({ where }),\n→ 211   this.prisma.recipe.findMany(\nThe column `recipe.imageUrl` does not exist in the current database.",
  "level": "error",
  "message": "Failed to fetch recipes: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-02-26T12:03:15.730Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.recipe.findMany()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/recipe/recipe.service.ts:211:28\n\n  208 \n  209 const [totalCount, recipes] = await Promise.all([\n  210   this.prisma.recipe.count({ where }),\n→ 211   this.prisma.recipe.findMany(\nThe column `recipe.imageUrl` does not exist in the current database.",
  "level": "error",
  "message": "Failed to fetch recipes: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-02-26T12:03:25.280Z"
}
{
  "context": "PrismaError",
  "error": "\nInvalid `this.prisma.recipe.findMany()` invocation in\n/home/rayan147/ckm-turborepo/apps/api/src/recipe/recipe.service.ts:211:28\n\n  208 \n  209 const [totalCount, recipes] = await Promise.all([\n  210   this.prisma.recipe.count({ where }),\n→ 211   this.prisma.recipe.findMany(\nThe column `recipe.imageUrl` does not exist in the current database.",
  "level": "error",
  "message": "Failed to fetch recipes: Prisma Error",
  "service": "LoggingService",
  "timestamp": "2025-02-26T12:03:35.883Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 187 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 187: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-02-28T20:48:27.130Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 187 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 187: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-02-28T20:48:29.316Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 187 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 187: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-02-28T20:48:30.329Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 187 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 187: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-02-28T20:48:52.752Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 220 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 220: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-01T04:35:31.216Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 232 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 232: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-03T21:33:21.121Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 232 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 232: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-03T21:33:23.705Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 339 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 339: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-03T22:35:45.507Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 373 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 373: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-03T22:47:28.361Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:02:17.214Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:03:42.163Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:04:23.502Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:07:37.489Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:12:14.210Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:13:03.940Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:13:29.135Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:15:59.512Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:17:49.696Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:18:25.785Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:19:00.882Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:19:44.723Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:19:57.398Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:20:30.976Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:20:41.601Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:20:54.903Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:22:05.533Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:22:40.393Z"
}
{
  "context": "ApplicationError",
  "error": "Recipe with ID 236 not found",
  "level": "error",
  "message": "Failed to fetch recipe with ID 236: Application Error",
  "service": "LoggingService",
  "timestamp": "2025-03-04T05:22:46.869Z"
}
