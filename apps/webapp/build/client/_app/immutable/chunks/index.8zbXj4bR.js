var yt;(function(o){o.assertEqual=c=>c;function a(c){}o.assertIs=a;function n(c){throw new Error}o.assertNever=n,o.arrayToEnum=c=>{const u={};for(const y of c)u[y]=y;return u},o.getValidEnumValues=c=>{const u=o.objectKeys(c).filter(m=>typeof c[c[m]]!="number"),y={};for(const m of u)y[m]=c[m];return o.objectValues(y)},o.objectValues=c=>o.objectKeys(c).map(function(u){return c[u]}),o.objectKeys=typeof Object.keys=="function"?c=>Object.keys(c):c=>{const u=[];for(const y in c)Object.prototype.hasOwnProperty.call(c,y)&&u.push(y);return u},o.find=(c,u)=>{for(const y of c)if(u(y))return y},o.isInteger=typeof Number.isInteger=="function"?c=>Number.isInteger(c):c=>typeof c=="number"&&isFinite(c)&&Math.floor(c)===c;function r(c,u=" | "){return c.map(y=>typeof y=="string"?`'${y}'`:y).join(u)}o.joinValues=r,o.jsonStringifyReplacer=(c,u)=>typeof u=="bigint"?u.toString():u})(yt||(yt={}));var mF;(function(o){o.mergeShapes=(a,n)=>({...a,...n})})(mF||(mF={}));const te=yt.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Lh=o=>{switch(typeof o){case"undefined":return te.undefined;case"string":return te.string;case"number":return isNaN(o)?te.nan:te.number;case"boolean":return te.boolean;case"function":return te.function;case"bigint":return te.bigint;case"symbol":return te.symbol;case"object":return Array.isArray(o)?te.array:o===null?te.null:o.then&&typeof o.then=="function"&&o.catch&&typeof o.catch=="function"?te.promise:typeof Map<"u"&&o instanceof Map?te.map:typeof Set<"u"&&o instanceof Set?te.set:typeof Date<"u"&&o instanceof Date?te.date:te.object;default:return te.unknown}},N=yt.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Pne=o=>JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:");let Tl=class L9 extends Error{constructor(a){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const n=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,n):this.__proto__=n,this.name="ZodError",this.issues=a}get errors(){return this.issues}format(a){const n=a||function(u){return u.message},r={_errors:[]},c=u=>{for(const y of u.issues)if(y.code==="invalid_union")y.unionErrors.map(c);else if(y.code==="invalid_return_type")c(y.returnTypeError);else if(y.code==="invalid_arguments")c(y.argumentsError);else if(y.path.length===0)r._errors.push(n(y));else{let m=r,g=0;for(;g<y.path.length;){const S=y.path[g];g===y.path.length-1?(m[S]=m[S]||{_errors:[]},m[S]._errors.push(n(y))):m[S]=m[S]||{_errors:[]},m=m[S],g++}}};return c(this),r}static assert(a){if(!(a instanceof L9))throw new Error(`Not a ZodError: ${a}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,yt.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(a=n=>n.message){const n={},r=[];for(const c of this.issues)c.path.length>0?(n[c.path[0]]=n[c.path[0]]||[],n[c.path[0]].push(a(c))):r.push(a(c));return{formErrors:r,fieldErrors:n}}get formErrors(){return this.flatten()}};Tl.create=o=>new Tl(o);const oS=(o,a)=>{let n;switch(o.code){case N.invalid_type:o.received===te.undefined?n="Required":n=`Expected ${o.expected}, received ${o.received}`;break;case N.invalid_literal:n=`Invalid literal value, expected ${JSON.stringify(o.expected,yt.jsonStringifyReplacer)}`;break;case N.unrecognized_keys:n=`Unrecognized key(s) in object: ${yt.joinValues(o.keys,", ")}`;break;case N.invalid_union:n="Invalid input";break;case N.invalid_union_discriminator:n=`Invalid discriminator value. Expected ${yt.joinValues(o.options)}`;break;case N.invalid_enum_value:n=`Invalid enum value. Expected ${yt.joinValues(o.options)}, received '${o.received}'`;break;case N.invalid_arguments:n="Invalid function arguments";break;case N.invalid_return_type:n="Invalid function return type";break;case N.invalid_date:n="Invalid date";break;case N.invalid_string:typeof o.validation=="object"?"includes"in o.validation?(n=`Invalid input: must include "${o.validation.includes}"`,typeof o.validation.position=="number"&&(n=`${n} at one or more positions greater than or equal to ${o.validation.position}`)):"startsWith"in o.validation?n=`Invalid input: must start with "${o.validation.startsWith}"`:"endsWith"in o.validation?n=`Invalid input: must end with "${o.validation.endsWith}"`:yt.assertNever(o.validation):o.validation!=="regex"?n=`Invalid ${o.validation}`:n="Invalid";break;case N.too_small:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at least":"more than"} ${o.minimum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at least":"over"} ${o.minimum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${o.minimum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(o.minimum))}`:n="Invalid input";break;case N.too_big:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at most":"less than"} ${o.maximum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at most":"under"} ${o.maximum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="bigint"?n=`BigInt must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly":o.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(o.maximum))}`:n="Invalid input";break;case N.custom:n="Invalid input";break;case N.invalid_intersection_types:n="Intersection results could not be merged";break;case N.not_multiple_of:n=`Number must be a multiple of ${o.multipleOf}`;break;case N.not_finite:n="Number must be finite";break;default:n=a.defaultError,yt.assertNever(o)}return{message:n}};let Z9=oS;function Nne(o){Z9=o}function aT(){return Z9}const nT=o=>{const{data:a,path:n,errorMaps:r,issueData:c}=o,u=[...n,...c.path||[]],y={...c,path:u};if(c.message!==void 0)return{...c,path:u,message:c.message};let m="";const g=r.filter(S=>!!S).slice().reverse();for(const S of g)m=S(y,{data:a,defaultError:m}).message;return{...c,path:u,message:m}},Bne=[];function J(o,a){const n=aT(),r=nT({issueData:a,data:o.data,path:o.path,errorMaps:[o.common.contextualErrorMap,o.schemaErrorMap,n,n===oS?void 0:oS].filter(c=>!!c)});o.common.issues.push(r)}let Vr=class $9{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(a,n){const r=[];for(const c of n){if(c.status==="aborted")return fe;c.status==="dirty"&&a.dirty(),r.push(c.value)}return{status:a.value,value:r}}static async mergeObjectAsync(a,n){const r=[];for(const c of n){const u=await c.key,y=await c.value;r.push({key:u,value:y})}return $9.mergeObjectSync(a,r)}static mergeObjectSync(a,n){const r={};for(const c of n){const{key:u,value:y}=c;if(u.status==="aborted"||y.status==="aborted")return fe;u.status==="dirty"&&a.dirty(),y.status==="dirty"&&a.dirty(),u.value!=="__proto__"&&(typeof y.value<"u"||c.alwaysSet)&&(r[u.value]=y.value)}return{status:a.value,value:r}}};const fe=Object.freeze({status:"aborted"}),tS=o=>({status:"dirty",value:o}),_i=o=>({status:"valid",value:o}),zF=o=>o.status==="aborted",hF=o=>o.status==="dirty",ES=o=>o.status==="valid",DS=o=>typeof Promise<"u"&&o instanceof Promise;function oT(o,a,n,r){if(n==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof a=="function"?o!==a||!r:!a.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?r:n==="a"?r.call(o):r?r.value:a.get(o)}function Q9(o,a,n,r,c){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!c)throw new TypeError("Private accessor was defined without a setter");if(typeof a=="function"?o!==a||!c:!a.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?c.call(o,n):c?c.value=n:a.set(o,n),n}var se;(function(o){o.errToObj=a=>typeof a=="string"?{message:a}:a||{},o.toString=a=>typeof a=="string"?a:a==null?void 0:a.message})(se||(se={}));var OS,wS;let Od=class{constructor(a,n,r,c){this._cachedPath=[],this.parent=a,this.data=n,this._path=r,this._key=c}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}};const q9=(o,a)=>{if(ES(a))return{success:!0,data:a.value};if(!o.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const n=new Tl(o.common.issues);return this._error=n,this._error}}};function De(o){if(!o)return{};const{errorMap:a,invalid_type_error:n,required_error:r,description:c}=o;if(a&&(n||r))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return a?{errorMap:a,description:c}:{errorMap:(y,m)=>{var g,S;const{message:C}=o;return y.code==="invalid_enum_value"?{message:C??m.defaultError}:typeof m.data>"u"?{message:(g=C??r)!==null&&g!==void 0?g:m.defaultError}:y.code!=="invalid_type"?{message:m.defaultError}:{message:(S=C??n)!==null&&S!==void 0?S:m.defaultError}},description:c}}let $e=class{constructor(a){this.spa=this.safeParseAsync,this._def=a,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(a){return Lh(a.data)}_getOrReturnCtx(a,n){return n||{common:a.parent.common,data:a.data,parsedType:Lh(a.data),schemaErrorMap:this._def.errorMap,path:a.path,parent:a.parent}}_processInputParams(a){return{status:new Vr,ctx:{common:a.parent.common,data:a.data,parsedType:Lh(a.data),schemaErrorMap:this._def.errorMap,path:a.path,parent:a.parent}}}_parseSync(a){const n=this._parse(a);if(DS(n))throw new Error("Synchronous parse encountered promise.");return n}_parseAsync(a){const n=this._parse(a);return Promise.resolve(n)}parse(a,n){const r=this.safeParse(a,n);if(r.success)return r.data;throw r.error}safeParse(a,n){var r;const c={common:{issues:[],async:(r=n==null?void 0:n.async)!==null&&r!==void 0?r:!1,contextualErrorMap:n==null?void 0:n.errorMap},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:a,parsedType:Lh(a)},u=this._parseSync({data:a,path:c.path,parent:c});return q9(c,u)}async parseAsync(a,n){const r=await this.safeParseAsync(a,n);if(r.success)return r.data;throw r.error}async safeParseAsync(a,n){const r={common:{issues:[],contextualErrorMap:n==null?void 0:n.errorMap,async:!0},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:a,parsedType:Lh(a)},c=this._parse({data:a,path:r.path,parent:r}),u=await(DS(c)?c:Promise.resolve(c));return q9(r,u)}refine(a,n){const r=c=>typeof n=="string"||typeof n>"u"?{message:n}:typeof n=="function"?n(c):n;return this._refinement((c,u)=>{const y=a(c),m=()=>u.addIssue({code:N.custom,...r(c)});return typeof Promise<"u"&&y instanceof Promise?y.then(g=>g?!0:(m(),!1)):y?!0:(m(),!1)})}refinement(a,n){return this._refinement((r,c)=>a(r)?!0:(c.addIssue(typeof n=="function"?n(r,c):n),!1))}_refinement(a){return new Bl({schema:this,typeName:Ue.ZodEffects,effect:{type:"refinement",refinement:a}})}superRefine(a){return this._refinement(a)}optional(){return fd.create(this,this._def)}nullable(){return Jh.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ag.create(this,this._def)}promise(){return lS.create(this,this._def)}or(a){return QS.create([this,a],this._def)}and(a){return GS.create(this,a,this._def)}transform(a){return new Bl({...De(this._def),schema:this,typeName:Ue.ZodEffects,effect:{type:"transform",transform:a}})}default(a){const n=typeof a=="function"?a:()=>a;return new XS({...De(this._def),innerType:this,defaultValue:n,typeName:Ue.ZodDefault})}brand(){return new nx({typeName:Ue.ZodBranded,type:this,...De(this._def)})}catch(a){const n=typeof a=="function"?a:()=>a;return new ev({...De(this._def),innerType:this,catchValue:n,typeName:Ue.ZodCatch})}describe(a){const n=this.constructor;return new n({...this._def,description:a})}pipe(a){return ox.create(this,a)}readonly(){return tv.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}};const _ne=/^c[^\s-]{8,}$/i,qne=/^[0-9a-z]+$/,Fne=/^[0-9A-HJKMNP-TV-Z]{26}$/,Ene=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Dne=/^[a-z0-9_-]{21}$/i,xne=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Vne=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Hne="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let pF;const Lne=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Zne=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,$ne=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,G9="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Qne=new RegExp(`^${G9}$`);function Y9(o){let a="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return o.precision?a=`${a}\\.\\d{${o.precision}}`:o.precision==null&&(a=`${a}(\\.\\d+)?`),a}function Gne(o){return new RegExp(`^${Y9(o)}$`)}function J9(o){let a=`${G9}T${Y9(o)}`;const n=[];return n.push(o.local?"Z?":"Z"),o.offset&&n.push("([+-]\\d{2}:?\\d{2})"),a=`${a}(${n.join("|")})`,new RegExp(`^${a}$`)}function Yne(o,a){return!!((a==="v4"||!a)&&Lne.test(o)||(a==="v6"||!a)&&Zne.test(o))}let iS=class TS extends $e{_parse(a){if(this._def.coerce&&(a.data=String(a.data)),this._getType(a)!==te.string){const u=this._getOrReturnCtx(a);return J(u,{code:N.invalid_type,expected:te.string,received:u.parsedType}),fe}const r=new Vr;let c;for(const u of this._def.checks)if(u.kind==="min")a.data.length<u.value&&(c=this._getOrReturnCtx(a,c),J(c,{code:N.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="max")a.data.length>u.value&&(c=this._getOrReturnCtx(a,c),J(c,{code:N.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="length"){const y=a.data.length>u.value,m=a.data.length<u.value;(y||m)&&(c=this._getOrReturnCtx(a,c),y?J(c,{code:N.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}):m&&J(c,{code:N.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}),r.dirty())}else if(u.kind==="email")Vne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"email",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="emoji")pF||(pF=new RegExp(Hne,"u")),pF.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"emoji",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="uuid")Ene.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"uuid",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="nanoid")Dne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"nanoid",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid")_ne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"cuid",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid2")qne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"cuid2",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="ulid")Fne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"ulid",code:N.invalid_string,message:u.message}),r.dirty());else if(u.kind==="url")try{new URL(a.data)}catch{c=this._getOrReturnCtx(a,c),J(c,{validation:"url",code:N.invalid_string,message:u.message}),r.dirty()}else u.kind==="regex"?(u.regex.lastIndex=0,u.regex.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"regex",code:N.invalid_string,message:u.message}),r.dirty())):u.kind==="trim"?a.data=a.data.trim():u.kind==="includes"?a.data.includes(u.value,u.position)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:{includes:u.value,position:u.position},message:u.message}),r.dirty()):u.kind==="toLowerCase"?a.data=a.data.toLowerCase():u.kind==="toUpperCase"?a.data=a.data.toUpperCase():u.kind==="startsWith"?a.data.startsWith(u.value)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:{startsWith:u.value},message:u.message}),r.dirty()):u.kind==="endsWith"?a.data.endsWith(u.value)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:{endsWith:u.value},message:u.message}),r.dirty()):u.kind==="datetime"?J9(u).test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:"datetime",message:u.message}),r.dirty()):u.kind==="date"?Qne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:"date",message:u.message}),r.dirty()):u.kind==="time"?Gne(u).test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{code:N.invalid_string,validation:"time",message:u.message}),r.dirty()):u.kind==="duration"?xne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"duration",code:N.invalid_string,message:u.message}),r.dirty()):u.kind==="ip"?Yne(a.data,u.version)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"ip",code:N.invalid_string,message:u.message}),r.dirty()):u.kind==="base64"?$ne.test(a.data)||(c=this._getOrReturnCtx(a,c),J(c,{validation:"base64",code:N.invalid_string,message:u.message}),r.dirty()):yt.assertNever(u);return{status:r.value,value:a.data}}_regex(a,n,r){return this.refinement(c=>a.test(c),{validation:n,code:N.invalid_string,...se.errToObj(r)})}_addCheck(a){return new TS({...this._def,checks:[...this._def.checks,a]})}email(a){return this._addCheck({kind:"email",...se.errToObj(a)})}url(a){return this._addCheck({kind:"url",...se.errToObj(a)})}emoji(a){return this._addCheck({kind:"emoji",...se.errToObj(a)})}uuid(a){return this._addCheck({kind:"uuid",...se.errToObj(a)})}nanoid(a){return this._addCheck({kind:"nanoid",...se.errToObj(a)})}cuid(a){return this._addCheck({kind:"cuid",...se.errToObj(a)})}cuid2(a){return this._addCheck({kind:"cuid2",...se.errToObj(a)})}ulid(a){return this._addCheck({kind:"ulid",...se.errToObj(a)})}base64(a){return this._addCheck({kind:"base64",...se.errToObj(a)})}ip(a){return this._addCheck({kind:"ip",...se.errToObj(a)})}datetime(a){var n,r;return typeof a=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:a}):this._addCheck({kind:"datetime",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,offset:(n=a==null?void 0:a.offset)!==null&&n!==void 0?n:!1,local:(r=a==null?void 0:a.local)!==null&&r!==void 0?r:!1,...se.errToObj(a==null?void 0:a.message)})}date(a){return this._addCheck({kind:"date",message:a})}time(a){return typeof a=="string"?this._addCheck({kind:"time",precision:null,message:a}):this._addCheck({kind:"time",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,...se.errToObj(a==null?void 0:a.message)})}duration(a){return this._addCheck({kind:"duration",...se.errToObj(a)})}regex(a,n){return this._addCheck({kind:"regex",regex:a,...se.errToObj(n)})}includes(a,n){return this._addCheck({kind:"includes",value:a,position:n==null?void 0:n.position,...se.errToObj(n==null?void 0:n.message)})}startsWith(a,n){return this._addCheck({kind:"startsWith",value:a,...se.errToObj(n)})}endsWith(a,n){return this._addCheck({kind:"endsWith",value:a,...se.errToObj(n)})}min(a,n){return this._addCheck({kind:"min",value:a,...se.errToObj(n)})}max(a,n){return this._addCheck({kind:"max",value:a,...se.errToObj(n)})}length(a,n){return this._addCheck({kind:"length",value:a,...se.errToObj(n)})}nonempty(a){return this.min(1,se.errToObj(a))}trim(){return new TS({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new TS({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new TS({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(a=>a.kind==="datetime")}get isDate(){return!!this._def.checks.find(a=>a.kind==="date")}get isTime(){return!!this._def.checks.find(a=>a.kind==="time")}get isDuration(){return!!this._def.checks.find(a=>a.kind==="duration")}get isEmail(){return!!this._def.checks.find(a=>a.kind==="email")}get isURL(){return!!this._def.checks.find(a=>a.kind==="url")}get isEmoji(){return!!this._def.checks.find(a=>a.kind==="emoji")}get isUUID(){return!!this._def.checks.find(a=>a.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(a=>a.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(a=>a.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(a=>a.kind==="cuid2")}get isULID(){return!!this._def.checks.find(a=>a.kind==="ulid")}get isIP(){return!!this._def.checks.find(a=>a.kind==="ip")}get isBase64(){return!!this._def.checks.find(a=>a.kind==="base64")}get minLength(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxLength(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};iS.create=o=>{var a;return new iS({checks:[],typeName:Ue.ZodString,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...De(o)})};function Jne(o,a){const n=(o.toString().split(".")[1]||"").length,r=(a.toString().split(".")[1]||"").length,c=n>r?n:r,u=parseInt(o.toFixed(c).replace(".","")),y=parseInt(a.toFixed(c).replace(".",""));return u%y/Math.pow(10,c)}let xS=class bF extends $e{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(a){if(this._def.coerce&&(a.data=Number(a.data)),this._getType(a)!==te.number){const u=this._getOrReturnCtx(a);return J(u,{code:N.invalid_type,expected:te.number,received:u.parsedType}),fe}let r;const c=new Vr;for(const u of this._def.checks)u.kind==="int"?yt.isInteger(a.data)||(r=this._getOrReturnCtx(a,r),J(r,{code:N.invalid_type,expected:"integer",received:"float",message:u.message}),c.dirty()):u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.too_small,minimum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.too_big,maximum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="multipleOf"?Jne(a.data,u.value)!==0&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):u.kind==="finite"?Number.isFinite(a.data)||(r=this._getOrReturnCtx(a,r),J(r,{code:N.not_finite,message:u.message}),c.dirty()):yt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,se.toString(n))}gt(a,n){return this.setLimit("min",a,!1,se.toString(n))}lte(a,n){return this.setLimit("max",a,!0,se.toString(n))}lt(a,n){return this.setLimit("max",a,!1,se.toString(n))}setLimit(a,n,r,c){return new bF({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:se.toString(c)}]})}_addCheck(a){return new bF({...this._def,checks:[...this._def.checks,a]})}int(a){return this._addCheck({kind:"int",message:se.toString(a)})}positive(a){return this._addCheck({kind:"min",value:0,inclusive:!1,message:se.toString(a)})}negative(a){return this._addCheck({kind:"max",value:0,inclusive:!1,message:se.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:0,inclusive:!0,message:se.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:0,inclusive:!0,message:se.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:se.toString(n)})}finite(a){return this._addCheck({kind:"finite",message:se.toString(a)})}safe(a){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:se.toString(a)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:se.toString(a)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}get isInt(){return!!this._def.checks.find(a=>a.kind==="int"||a.kind==="multipleOf"&&yt.isInteger(a.value))}get isFinite(){let a=null,n=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(n===null||r.value>n)&&(n=r.value):r.kind==="max"&&(a===null||r.value<a)&&(a=r.value)}return Number.isFinite(n)&&Number.isFinite(a)}};xS.create=o=>new xS({checks:[],typeName:Ue.ZodNumber,coerce:(o==null?void 0:o.coerce)||!1,...De(o)});let VS=class IF extends $e{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(a){if(this._def.coerce&&(a.data=BigInt(a.data)),this._getType(a)!==te.bigint){const u=this._getOrReturnCtx(a);return J(u,{code:N.invalid_type,expected:te.bigint,received:u.parsedType}),fe}let r;const c=new Vr;for(const u of this._def.checks)u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.too_small,type:"bigint",minimum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.too_big,type:"bigint",maximum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="multipleOf"?a.data%u.value!==BigInt(0)&&(r=this._getOrReturnCtx(a,r),J(r,{code:N.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):yt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,se.toString(n))}gt(a,n){return this.setLimit("min",a,!1,se.toString(n))}lte(a,n){return this.setLimit("max",a,!0,se.toString(n))}lt(a,n){return this.setLimit("max",a,!1,se.toString(n))}setLimit(a,n,r,c){return new IF({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:se.toString(c)}]})}_addCheck(a){return new IF({...this._def,checks:[...this._def.checks,a]})}positive(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:se.toString(a)})}negative(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:se.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:se.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:se.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:se.toString(n)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};VS.create=o=>{var a;return new VS({checks:[],typeName:Ue.ZodBigInt,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...De(o)})};let HS=class extends $e{_parse(a){if(this._def.coerce&&(a.data=!!a.data),this._getType(a)!==te.boolean){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.boolean,received:r.parsedType}),fe}return _i(a.data)}};HS.create=o=>new HS({typeName:Ue.ZodBoolean,coerce:(o==null?void 0:o.coerce)||!1,...De(o)});let LS=class K9 extends $e{_parse(a){if(this._def.coerce&&(a.data=new Date(a.data)),this._getType(a)!==te.date){const u=this._getOrReturnCtx(a);return J(u,{code:N.invalid_type,expected:te.date,received:u.parsedType}),fe}if(isNaN(a.data.getTime())){const u=this._getOrReturnCtx(a);return J(u,{code:N.invalid_date}),fe}const r=new Vr;let c;for(const u of this._def.checks)u.kind==="min"?a.data.getTime()<u.value&&(c=this._getOrReturnCtx(a,c),J(c,{code:N.too_small,message:u.message,inclusive:!0,exact:!1,minimum:u.value,type:"date"}),r.dirty()):u.kind==="max"?a.data.getTime()>u.value&&(c=this._getOrReturnCtx(a,c),J(c,{code:N.too_big,message:u.message,inclusive:!0,exact:!1,maximum:u.value,type:"date"}),r.dirty()):yt.assertNever(u);return{status:r.value,value:new Date(a.data.getTime())}}_addCheck(a){return new K9({...this._def,checks:[...this._def.checks,a]})}min(a,n){return this._addCheck({kind:"min",value:a.getTime(),message:se.toString(n)})}max(a,n){return this._addCheck({kind:"max",value:a.getTime(),message:se.toString(n)})}get minDate(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a!=null?new Date(a):null}get maxDate(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a!=null?new Date(a):null}};LS.create=o=>new LS({checks:[],coerce:(o==null?void 0:o.coerce)||!1,typeName:Ue.ZodDate,...De(o)});let iT=class extends $e{_parse(a){if(this._getType(a)!==te.symbol){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.symbol,received:r.parsedType}),fe}return _i(a.data)}};iT.create=o=>new iT({typeName:Ue.ZodSymbol,...De(o)});let ZS=class extends $e{_parse(a){if(this._getType(a)!==te.undefined){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.undefined,received:r.parsedType}),fe}return _i(a.data)}};ZS.create=o=>new ZS({typeName:Ue.ZodUndefined,...De(o)});let $S=class extends $e{_parse(a){if(this._getType(a)!==te.null){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.null,received:r.parsedType}),fe}return _i(a.data)}};$S.create=o=>new $S({typeName:Ue.ZodNull,...De(o)});let rS=class extends $e{constructor(){super(...arguments),this._any=!0}_parse(a){return _i(a.data)}};rS.create=o=>new rS({typeName:Ue.ZodAny,...De(o)});let XI=class extends $e{constructor(){super(...arguments),this._unknown=!0}_parse(a){return _i(a.data)}};XI.create=o=>new XI({typeName:Ue.ZodUnknown,...De(o)});let tm=class extends $e{_parse(a){const n=this._getOrReturnCtx(a);return J(n,{code:N.invalid_type,expected:te.never,received:n.parsedType}),fe}};tm.create=o=>new tm({typeName:Ue.ZodNever,...De(o)});let rT=class extends $e{_parse(a){if(this._getType(a)!==te.undefined){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.void,received:r.parsedType}),fe}return _i(a.data)}};rT.create=o=>new rT({typeName:Ue.ZodVoid,...De(o)});let ag=class Hw extends $e{_parse(a){const{ctx:n,status:r}=this._processInputParams(a),c=this._def;if(n.parsedType!==te.array)return J(n,{code:N.invalid_type,expected:te.array,received:n.parsedType}),fe;if(c.exactLength!==null){const y=n.data.length>c.exactLength.value,m=n.data.length<c.exactLength.value;(y||m)&&(J(n,{code:y?N.too_big:N.too_small,minimum:m?c.exactLength.value:void 0,maximum:y?c.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:c.exactLength.message}),r.dirty())}if(c.minLength!==null&&n.data.length<c.minLength.value&&(J(n,{code:N.too_small,minimum:c.minLength.value,type:"array",inclusive:!0,exact:!1,message:c.minLength.message}),r.dirty()),c.maxLength!==null&&n.data.length>c.maxLength.value&&(J(n,{code:N.too_big,maximum:c.maxLength.value,type:"array",inclusive:!0,exact:!1,message:c.maxLength.message}),r.dirty()),n.common.async)return Promise.all([...n.data].map((y,m)=>c.type._parseAsync(new Od(n,y,n.path,m)))).then(y=>Vr.mergeArray(r,y));const u=[...n.data].map((y,m)=>c.type._parseSync(new Od(n,y,n.path,m)));return Vr.mergeArray(r,u)}get element(){return this._def.type}min(a,n){return new Hw({...this._def,minLength:{value:a,message:se.toString(n)}})}max(a,n){return new Hw({...this._def,maxLength:{value:a,message:se.toString(n)}})}length(a,n){return new Hw({...this._def,exactLength:{value:a,message:se.toString(n)}})}nonempty(a){return this.min(1,a)}};ag.create=(o,a)=>new ag({type:o,minLength:null,maxLength:null,exactLength:null,typeName:Ue.ZodArray,...De(a)});function Yg(o){if(o instanceof il){const a={};for(const n in o.shape){const r=o.shape[n];a[n]=fd.create(Yg(r))}return new il({...o._def,shape:()=>a})}else return o instanceof ag?new ag({...o._def,type:Yg(o.element)}):o instanceof fd?fd.create(Yg(o.unwrap())):o instanceof Jh?Jh.create(Yg(o.unwrap())):o instanceof Yh?Yh.create(o.items.map(a=>Yg(a))):o}let il=class ul extends $e{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const a=this._def.shape(),n=yt.objectKeys(a);return this._cached={shape:a,keys:n}}_parse(a){if(this._getType(a)!==te.object){const S=this._getOrReturnCtx(a);return J(S,{code:N.invalid_type,expected:te.object,received:S.parsedType}),fe}const{status:r,ctx:c}=this._processInputParams(a),{shape:u,keys:y}=this._getCached(),m=[];if(!(this._def.catchall instanceof tm&&this._def.unknownKeys==="strip"))for(const S in c.data)y.includes(S)||m.push(S);const g=[];for(const S of y){const C=u[S],Ne=c.data[S];g.push({key:{status:"valid",value:S},value:C._parse(new Od(c,Ne,c.path,S)),alwaysSet:S in c.data})}if(this._def.catchall instanceof tm){const S=this._def.unknownKeys;if(S==="passthrough")for(const C of m)g.push({key:{status:"valid",value:C},value:{status:"valid",value:c.data[C]}});else if(S==="strict")m.length>0&&(J(c,{code:N.unrecognized_keys,keys:m}),r.dirty());else if(S!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const S=this._def.catchall;for(const C of m){const Ne=c.data[C];g.push({key:{status:"valid",value:C},value:S._parse(new Od(c,Ne,c.path,C)),alwaysSet:C in c.data})}}return c.common.async?Promise.resolve().then(async()=>{const S=[];for(const C of g){const Ne=await C.key,La=await C.value;S.push({key:Ne,value:La,alwaysSet:C.alwaysSet})}return S}).then(S=>Vr.mergeObjectSync(r,S)):Vr.mergeObjectSync(r,g)}get shape(){return this._def.shape()}strict(a){return se.errToObj,new ul({...this._def,unknownKeys:"strict",...a!==void 0?{errorMap:(n,r)=>{var c,u,y,m;const g=(y=(u=(c=this._def).errorMap)===null||u===void 0?void 0:u.call(c,n,r).message)!==null&&y!==void 0?y:r.defaultError;return n.code==="unrecognized_keys"?{message:(m=se.errToObj(a).message)!==null&&m!==void 0?m:g}:{message:g}}}:{}})}strip(){return new ul({...this._def,unknownKeys:"strip"})}passthrough(){return new ul({...this._def,unknownKeys:"passthrough"})}extend(a){return new ul({...this._def,shape:()=>({...this._def.shape(),...a})})}merge(a){return new ul({unknownKeys:a._def.unknownKeys,catchall:a._def.catchall,shape:()=>({...this._def.shape(),...a._def.shape()}),typeName:Ue.ZodObject})}setKey(a,n){return this.augment({[a]:n})}catchall(a){return new ul({...this._def,catchall:a})}pick(a){const n={};return yt.objectKeys(a).forEach(r=>{a[r]&&this.shape[r]&&(n[r]=this.shape[r])}),new ul({...this._def,shape:()=>n})}omit(a){const n={};return yt.objectKeys(this.shape).forEach(r=>{a[r]||(n[r]=this.shape[r])}),new ul({...this._def,shape:()=>n})}deepPartial(){return Yg(this)}partial(a){const n={};return yt.objectKeys(this.shape).forEach(r=>{const c=this.shape[r];a&&!a[r]?n[r]=c:n[r]=c.optional()}),new ul({...this._def,shape:()=>n})}required(a){const n={};return yt.objectKeys(this.shape).forEach(r=>{if(a&&!a[r])n[r]=this.shape[r];else{let u=this.shape[r];for(;u instanceof fd;)u=u._def.innerType;n[r]=u}}),new ul({...this._def,shape:()=>n})}keyof(){return o5(yt.objectKeys(this.shape))}};il.create=(o,a)=>new il({shape:()=>o,unknownKeys:"strip",catchall:tm.create(),typeName:Ue.ZodObject,...De(a)});il.strictCreate=(o,a)=>new il({shape:()=>o,unknownKeys:"strict",catchall:tm.create(),typeName:Ue.ZodObject,...De(a)});il.lazycreate=(o,a)=>new il({shape:o,unknownKeys:"strip",catchall:tm.create(),typeName:Ue.ZodObject,...De(a)});let QS=class extends $e{_parse(a){const{ctx:n}=this._processInputParams(a),r=this._def.options;function c(u){for(const m of u)if(m.result.status==="valid")return m.result;for(const m of u)if(m.result.status==="dirty")return n.common.issues.push(...m.ctx.common.issues),m.result;const y=u.map(m=>new Tl(m.ctx.common.issues));return J(n,{code:N.invalid_union,unionErrors:y}),fe}if(n.common.async)return Promise.all(r.map(async u=>{const y={...n,common:{...n.common,issues:[]},parent:null};return{result:await u._parseAsync({data:n.data,path:n.path,parent:y}),ctx:y}})).then(c);{let u;const y=[];for(const g of r){const S={...n,common:{...n.common,issues:[]},parent:null},C=g._parseSync({data:n.data,path:n.path,parent:S});if(C.status==="valid")return C;C.status==="dirty"&&!u&&(u={result:C,ctx:S}),S.common.issues.length&&y.push(S.common.issues)}if(u)return n.common.issues.push(...u.ctx.common.issues),u.result;const m=y.map(g=>new Tl(g));return J(n,{code:N.invalid_union,unionErrors:m}),fe}}get options(){return this._def.options}};QS.create=(o,a)=>new QS({options:o,typeName:Ue.ZodUnion,...De(a)});const Kd=o=>o instanceof YS?Kd(o.schema):o instanceof Bl?Kd(o.innerType()):o instanceof JS?[o.value]:o instanceof zR?o.options:o instanceof KS?yt.objectValues(o.enum):o instanceof XS?Kd(o._def.innerType):o instanceof ZS?[void 0]:o instanceof $S?[null]:o instanceof fd?[void 0,...Kd(o.unwrap())]:o instanceof Jh?[null,...Kd(o.unwrap())]:o instanceof nx||o instanceof tv?Kd(o.unwrap()):o instanceof ev?Kd(o._def.innerType):[];let X9=class e5 extends $e{_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==te.object)return J(n,{code:N.invalid_type,expected:te.object,received:n.parsedType}),fe;const r=this.discriminator,c=n.data[r],u=this.optionsMap.get(c);return u?n.common.async?u._parseAsync({data:n.data,path:n.path,parent:n}):u._parseSync({data:n.data,path:n.path,parent:n}):(J(n,{code:N.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),fe)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(a,n,r){const c=new Map;for(const u of n){const y=Kd(u.shape[a]);if(!y.length)throw new Error(`A discriminator value for key \`${a}\` could not be extracted from all schema options`);for(const m of y){if(c.has(m))throw new Error(`Discriminator property ${String(a)} has duplicate value ${String(m)}`);c.set(m,u)}}return new e5({typeName:Ue.ZodDiscriminatedUnion,discriminator:a,options:n,optionsMap:c,...De(r)})}};function gF(o,a){const n=Lh(o),r=Lh(a);if(o===a)return{valid:!0,data:o};if(n===te.object&&r===te.object){const c=yt.objectKeys(a),u=yt.objectKeys(o).filter(m=>c.indexOf(m)!==-1),y={...o,...a};for(const m of u){const g=gF(o[m],a[m]);if(!g.valid)return{valid:!1};y[m]=g.data}return{valid:!0,data:y}}else if(n===te.array&&r===te.array){if(o.length!==a.length)return{valid:!1};const c=[];for(let u=0;u<o.length;u++){const y=o[u],m=a[u],g=gF(y,m);if(!g.valid)return{valid:!1};c.push(g.data)}return{valid:!0,data:c}}else return n===te.date&&r===te.date&&+o==+a?{valid:!0,data:o}:{valid:!1}}let GS=class extends $e{_parse(a){const{status:n,ctx:r}=this._processInputParams(a),c=(u,y)=>{if(zF(u)||zF(y))return fe;const m=gF(u.value,y.value);return m.valid?((hF(u)||hF(y))&&n.dirty(),{status:n.value,value:m.data}):(J(r,{code:N.invalid_intersection_types}),fe)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then(([u,y])=>c(u,y)):c(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}};GS.create=(o,a,n)=>new GS({left:o,right:a,typeName:Ue.ZodIntersection,...De(n)});let Yh=class t5 extends $e{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==te.array)return J(r,{code:N.invalid_type,expected:te.array,received:r.parsedType}),fe;if(r.data.length<this._def.items.length)return J(r,{code:N.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),fe;!this._def.rest&&r.data.length>this._def.items.length&&(J(r,{code:N.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),n.dirty());const u=[...r.data].map((y,m)=>{const g=this._def.items[m]||this._def.rest;return g?g._parse(new Od(r,y,r.path,m)):null}).filter(y=>!!y);return r.common.async?Promise.all(u).then(y=>Vr.mergeArray(n,y)):Vr.mergeArray(n,u)}get items(){return this._def.items}rest(a){return new t5({...this._def,rest:a})}};Yh.create=(o,a)=>{if(!Array.isArray(o))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Yh({items:o,typeName:Ue.ZodTuple,rest:null,...De(a)})};let a5=class SF extends $e{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==te.object)return J(r,{code:N.invalid_type,expected:te.object,received:r.parsedType}),fe;const c=[],u=this._def.keyType,y=this._def.valueType;for(const m in r.data)c.push({key:u._parse(new Od(r,m,r.path,m)),value:y._parse(new Od(r,r.data[m],r.path,m)),alwaysSet:m in r.data});return r.common.async?Vr.mergeObjectAsync(n,c):Vr.mergeObjectSync(n,c)}get element(){return this._def.valueType}static create(a,n,r){return n instanceof $e?new SF({keyType:a,valueType:n,typeName:Ue.ZodRecord,...De(r)}):new SF({keyType:iS.create(),valueType:a,typeName:Ue.ZodRecord,...De(n)})}},lT=class extends $e{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==te.map)return J(r,{code:N.invalid_type,expected:te.map,received:r.parsedType}),fe;const c=this._def.keyType,u=this._def.valueType,y=[...r.data.entries()].map(([m,g],S)=>({key:c._parse(new Od(r,m,r.path,[S,"key"])),value:u._parse(new Od(r,g,r.path,[S,"value"]))}));if(r.common.async){const m=new Map;return Promise.resolve().then(async()=>{for(const g of y){const S=await g.key,C=await g.value;if(S.status==="aborted"||C.status==="aborted")return fe;(S.status==="dirty"||C.status==="dirty")&&n.dirty(),m.set(S.value,C.value)}return{status:n.value,value:m}})}else{const m=new Map;for(const g of y){const S=g.key,C=g.value;if(S.status==="aborted"||C.status==="aborted")return fe;(S.status==="dirty"||C.status==="dirty")&&n.dirty(),m.set(S.value,C.value)}return{status:n.value,value:m}}}};lT.create=(o,a,n)=>new lT({valueType:a,keyType:o,typeName:Ue.ZodMap,...De(n)});let cT=class vF extends $e{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==te.set)return J(r,{code:N.invalid_type,expected:te.set,received:r.parsedType}),fe;const c=this._def;c.minSize!==null&&r.data.size<c.minSize.value&&(J(r,{code:N.too_small,minimum:c.minSize.value,type:"set",inclusive:!0,exact:!1,message:c.minSize.message}),n.dirty()),c.maxSize!==null&&r.data.size>c.maxSize.value&&(J(r,{code:N.too_big,maximum:c.maxSize.value,type:"set",inclusive:!0,exact:!1,message:c.maxSize.message}),n.dirty());const u=this._def.valueType;function y(g){const S=new Set;for(const C of g){if(C.status==="aborted")return fe;C.status==="dirty"&&n.dirty(),S.add(C.value)}return{status:n.value,value:S}}const m=[...r.data.values()].map((g,S)=>u._parse(new Od(r,g,r.path,S)));return r.common.async?Promise.all(m).then(g=>y(g)):y(m)}min(a,n){return new vF({...this._def,minSize:{value:a,message:se.toString(n)}})}max(a,n){return new vF({...this._def,maxSize:{value:a,message:se.toString(n)}})}size(a,n){return this.min(a,n).max(a,n)}nonempty(a){return this.min(1,a)}};cT.create=(o,a)=>new cT({valueType:o,minSize:null,maxSize:null,typeName:Ue.ZodSet,...De(a)});let n5=class Lw extends $e{constructor(){super(...arguments),this.validate=this.implement}_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==te.function)return J(n,{code:N.invalid_type,expected:te.function,received:n.parsedType}),fe;function r(m,g){return nT({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,aT(),oS].filter(S=>!!S),issueData:{code:N.invalid_arguments,argumentsError:g}})}function c(m,g){return nT({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,aT(),oS].filter(S=>!!S),issueData:{code:N.invalid_return_type,returnTypeError:g}})}const u={errorMap:n.common.contextualErrorMap},y=n.data;if(this._def.returns instanceof lS){const m=this;return _i(async function(...g){const S=new Tl([]),C=await m._def.args.parseAsync(g,u).catch(pa=>{throw S.addIssue(r(g,pa)),S}),Ne=await Reflect.apply(y,this,C);return await m._def.returns._def.type.parseAsync(Ne,u).catch(pa=>{throw S.addIssue(c(Ne,pa)),S})})}else{const m=this;return _i(function(...g){const S=m._def.args.safeParse(g,u);if(!S.success)throw new Tl([r(g,S.error)]);const C=Reflect.apply(y,this,S.data),Ne=m._def.returns.safeParse(C,u);if(!Ne.success)throw new Tl([c(C,Ne.error)]);return Ne.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...a){return new Lw({...this._def,args:Yh.create(a).rest(XI.create())})}returns(a){return new Lw({...this._def,returns:a})}implement(a){return this.parse(a)}strictImplement(a){return this.parse(a)}static create(a,n,r){return new Lw({args:a||Yh.create([]).rest(XI.create()),returns:n||XI.create(),typeName:Ue.ZodFunction,...De(r)})}},YS=class extends $e{get schema(){return this._def.getter()}_parse(a){const{ctx:n}=this._processInputParams(a);return this._def.getter()._parse({data:n.data,path:n.path,parent:n})}};YS.create=(o,a)=>new YS({getter:o,typeName:Ue.ZodLazy,...De(a)});let JS=class extends $e{_parse(a){if(a.data!==this._def.value){const n=this._getOrReturnCtx(a);return J(n,{received:n.data,code:N.invalid_literal,expected:this._def.value}),fe}return{status:"valid",value:a.data}}get value(){return this._def.value}};JS.create=(o,a)=>new JS({value:o,typeName:Ue.ZodLiteral,...De(a)});function o5(o,a){return new zR({values:o,typeName:Ue.ZodEnum,...De(a)})}let zR=class AF extends $e{constructor(){super(...arguments),OS.set(this,void 0)}_parse(a){if(typeof a.data!="string"){const n=this._getOrReturnCtx(a),r=this._def.values;return J(n,{expected:yt.joinValues(r),received:n.parsedType,code:N.invalid_type}),fe}if(oT(this,OS,"f")||Q9(this,OS,new Set(this._def.values),"f"),!oT(this,OS,"f").has(a.data)){const n=this._getOrReturnCtx(a),r=this._def.values;return J(n,{received:n.data,code:N.invalid_enum_value,options:r}),fe}return _i(a.data)}get options(){return this._def.values}get enum(){const a={};for(const n of this._def.values)a[n]=n;return a}get Values(){const a={};for(const n of this._def.values)a[n]=n;return a}get Enum(){const a={};for(const n of this._def.values)a[n]=n;return a}extract(a,n=this._def){return AF.create(a,{...this._def,...n})}exclude(a,n=this._def){return AF.create(this.options.filter(r=>!a.includes(r)),{...this._def,...n})}};OS=new WeakMap;zR.create=o5;let KS=class extends $e{constructor(){super(...arguments),wS.set(this,void 0)}_parse(a){const n=yt.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(a);if(r.parsedType!==te.string&&r.parsedType!==te.number){const c=yt.objectValues(n);return J(r,{expected:yt.joinValues(c),received:r.parsedType,code:N.invalid_type}),fe}if(oT(this,wS,"f")||Q9(this,wS,new Set(yt.getValidEnumValues(this._def.values)),"f"),!oT(this,wS,"f").has(a.data)){const c=yt.objectValues(n);return J(r,{received:r.data,code:N.invalid_enum_value,options:c}),fe}return _i(a.data)}get enum(){return this._def.values}};wS=new WeakMap;KS.create=(o,a)=>new KS({values:o,typeName:Ue.ZodNativeEnum,...De(a)});let lS=class extends $e{unwrap(){return this._def.type}_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==te.promise&&n.common.async===!1)return J(n,{code:N.invalid_type,expected:te.promise,received:n.parsedType}),fe;const r=n.parsedType===te.promise?n.data:Promise.resolve(n.data);return _i(r.then(c=>this._def.type.parseAsync(c,{path:n.path,errorMap:n.common.contextualErrorMap})))}};lS.create=(o,a)=>new lS({type:o,typeName:Ue.ZodPromise,...De(a)});let Bl=class extends $e{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Ue.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(a){const{status:n,ctx:r}=this._processInputParams(a),c=this._def.effect||null,u={addIssue:y=>{J(r,y),y.fatal?n.abort():n.dirty()},get path(){return r.path}};if(u.addIssue=u.addIssue.bind(u),c.type==="preprocess"){const y=c.transform(r.data,u);if(r.common.async)return Promise.resolve(y).then(async m=>{if(n.value==="aborted")return fe;const g=await this._def.schema._parseAsync({data:m,path:r.path,parent:r});return g.status==="aborted"?fe:g.status==="dirty"||n.value==="dirty"?tS(g.value):g});{if(n.value==="aborted")return fe;const m=this._def.schema._parseSync({data:y,path:r.path,parent:r});return m.status==="aborted"?fe:m.status==="dirty"||n.value==="dirty"?tS(m.value):m}}if(c.type==="refinement"){const y=m=>{const g=c.refinement(m,u);if(r.common.async)return Promise.resolve(g);if(g instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return m};if(r.common.async===!1){const m=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return m.status==="aborted"?fe:(m.status==="dirty"&&n.dirty(),y(m.value),{status:n.value,value:m.value})}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(m=>m.status==="aborted"?fe:(m.status==="dirty"&&n.dirty(),y(m.value).then(()=>({status:n.value,value:m.value}))))}if(c.type==="transform")if(r.common.async===!1){const y=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!ES(y))return y;const m=c.transform(y.value,u);if(m instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:n.value,value:m}}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(y=>ES(y)?Promise.resolve(c.transform(y.value,u)).then(m=>({status:n.value,value:m})):y);yt.assertNever(c)}};Bl.create=(o,a,n)=>new Bl({schema:o,typeName:Ue.ZodEffects,effect:a,...De(n)});Bl.createWithPreprocess=(o,a,n)=>new Bl({schema:a,effect:{type:"preprocess",transform:o},typeName:Ue.ZodEffects,...De(n)});let fd=class extends $e{_parse(a){return this._getType(a)===te.undefined?_i(void 0):this._def.innerType._parse(a)}unwrap(){return this._def.innerType}};fd.create=(o,a)=>new fd({innerType:o,typeName:Ue.ZodOptional,...De(a)});let Jh=class extends $e{_parse(a){return this._getType(a)===te.null?_i(null):this._def.innerType._parse(a)}unwrap(){return this._def.innerType}};Jh.create=(o,a)=>new Jh({innerType:o,typeName:Ue.ZodNullable,...De(a)});let XS=class extends $e{_parse(a){const{ctx:n}=this._processInputParams(a);let r=n.data;return n.parsedType===te.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:n.path,parent:n})}removeDefault(){return this._def.innerType}};XS.create=(o,a)=>new XS({innerType:o,typeName:Ue.ZodDefault,defaultValue:typeof a.default=="function"?a.default:()=>a.default,...De(a)});let ev=class extends $e{_parse(a){const{ctx:n}=this._processInputParams(a),r={...n,common:{...n.common,issues:[]}},c=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return DS(c)?c.then(u=>({status:"valid",value:u.status==="valid"?u.value:this._def.catchValue({get error(){return new Tl(r.common.issues)},input:r.data})})):{status:"valid",value:c.status==="valid"?c.value:this._def.catchValue({get error(){return new Tl(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}};ev.create=(o,a)=>new ev({innerType:o,typeName:Ue.ZodCatch,catchValue:typeof a.catch=="function"?a.catch:()=>a.catch,...De(a)});let pT=class extends $e{_parse(a){if(this._getType(a)!==te.nan){const r=this._getOrReturnCtx(a);return J(r,{code:N.invalid_type,expected:te.nan,received:r.parsedType}),fe}return{status:"valid",value:a.data}}};pT.create=o=>new pT({typeName:Ue.ZodNaN,...De(o)});const Kne=Symbol("zod_brand");let nx=class extends $e{_parse(a){const{ctx:n}=this._processInputParams(a),r=n.data;return this._def.type._parse({data:r,path:n.path,parent:n})}unwrap(){return this._def.type}},ox=class i5 extends $e{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.common.async)return(async()=>{const u=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return u.status==="aborted"?fe:u.status==="dirty"?(n.dirty(),tS(u.value)):this._def.out._parseAsync({data:u.value,path:r.path,parent:r})})();{const c=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return c.status==="aborted"?fe:c.status==="dirty"?(n.dirty(),{status:"dirty",value:c.value}):this._def.out._parseSync({data:c.value,path:r.path,parent:r})}}static create(a,n){return new i5({in:a,out:n,typeName:Ue.ZodPipeline})}},tv=class extends $e{_parse(a){const n=this._def.innerType._parse(a),r=c=>(ES(c)&&(c.value=Object.freeze(c.value)),c);return DS(n)?n.then(c=>r(c)):r(n)}unwrap(){return this._def.innerType}};tv.create=(o,a)=>new tv({innerType:o,typeName:Ue.ZodReadonly,...De(a)});function r5(o,a={},n){return o?rS.create().superRefine((r,c)=>{var u,y;if(!o(r)){const m=typeof a=="function"?a(r):typeof a=="string"?{message:a}:a,g=(y=(u=m.fatal)!==null&&u!==void 0?u:n)!==null&&y!==void 0?y:!0,S=typeof m=="string"?{message:m}:m;c.addIssue({code:"custom",...S,fatal:g})}}):rS.create()}const Xne={object:il.lazycreate};var Ue;(function(o){o.ZodString="ZodString",o.ZodNumber="ZodNumber",o.ZodNaN="ZodNaN",o.ZodBigInt="ZodBigInt",o.ZodBoolean="ZodBoolean",o.ZodDate="ZodDate",o.ZodSymbol="ZodSymbol",o.ZodUndefined="ZodUndefined",o.ZodNull="ZodNull",o.ZodAny="ZodAny",o.ZodUnknown="ZodUnknown",o.ZodNever="ZodNever",o.ZodVoid="ZodVoid",o.ZodArray="ZodArray",o.ZodObject="ZodObject",o.ZodUnion="ZodUnion",o.ZodDiscriminatedUnion="ZodDiscriminatedUnion",o.ZodIntersection="ZodIntersection",o.ZodTuple="ZodTuple",o.ZodRecord="ZodRecord",o.ZodMap="ZodMap",o.ZodSet="ZodSet",o.ZodFunction="ZodFunction",o.ZodLazy="ZodLazy",o.ZodLiteral="ZodLiteral",o.ZodEnum="ZodEnum",o.ZodEffects="ZodEffects",o.ZodNativeEnum="ZodNativeEnum",o.ZodOptional="ZodOptional",o.ZodNullable="ZodNullable",o.ZodDefault="ZodDefault",o.ZodCatch="ZodCatch",o.ZodPromise="ZodPromise",o.ZodBranded="ZodBranded",o.ZodPipeline="ZodPipeline",o.ZodReadonly="ZodReadonly"})(Ue||(Ue={}));const eoe=(o,a={message:`Input not instance of ${o.name}`})=>r5(n=>n instanceof o,a),l5=iS.create,c5=xS.create,toe=pT.create,aoe=VS.create,p5=HS.create,noe=LS.create,ooe=iT.create,ioe=ZS.create,roe=$S.create,loe=rS.create,coe=XI.create,poe=tm.create,uoe=rT.create,soe=ag.create,yoe=il.create,doe=il.strictCreate,moe=QS.create,zoe=X9.create,hoe=GS.create,boe=Yh.create,Ioe=a5.create,goe=lT.create,Soe=cT.create,voe=n5.create,Aoe=YS.create,Coe=JS.create,Woe=zR.create,Uoe=KS.create,koe=lS.create,F9=Bl.create,Roe=fd.create,foe=Jh.create,joe=Bl.createWithPreprocess,Moe=ox.create,Ooe=()=>l5().optional(),woe=()=>c5().optional(),Toe=()=>p5().optional(),Poe={string:o=>iS.create({...o,coerce:!0}),number:o=>xS.create({...o,coerce:!0}),boolean:o=>HS.create({...o,coerce:!0}),bigint:o=>VS.create({...o,coerce:!0}),date:o=>LS.create({...o,coerce:!0})},Noe=fe;var e=Object.freeze({__proto__:null,defaultErrorMap:oS,setErrorMap:Nne,getErrorMap:aT,makeIssue:nT,EMPTY_PATH:Bne,addIssueToContext:J,ParseStatus:Vr,INVALID:fe,DIRTY:tS,OK:_i,isAborted:zF,isDirty:hF,isValid:ES,isAsync:DS,get util(){return yt},get objectUtil(){return mF},ZodParsedType:te,getParsedType:Lh,ZodType:$e,datetimeRegex:J9,ZodString:iS,ZodNumber:xS,ZodBigInt:VS,ZodBoolean:HS,ZodDate:LS,ZodSymbol:iT,ZodUndefined:ZS,ZodNull:$S,ZodAny:rS,ZodUnknown:XI,ZodNever:tm,ZodVoid:rT,ZodArray:ag,ZodObject:il,ZodUnion:QS,ZodDiscriminatedUnion:X9,ZodIntersection:GS,ZodTuple:Yh,ZodRecord:a5,ZodMap:lT,ZodSet:cT,ZodFunction:n5,ZodLazy:YS,ZodLiteral:JS,ZodEnum:zR,ZodNativeEnum:KS,ZodPromise:lS,ZodEffects:Bl,ZodTransformer:Bl,ZodOptional:fd,ZodNullable:Jh,ZodDefault:XS,ZodCatch:ev,ZodNaN:pT,BRAND:Kne,ZodBranded:nx,ZodPipeline:ox,ZodReadonly:tv,custom:r5,Schema:$e,ZodSchema:$e,late:Xne,get ZodFirstPartyTypeKind(){return Ue},coerce:Poe,any:loe,array:soe,bigint:aoe,boolean:p5,date:noe,discriminatedUnion:zoe,effect:F9,enum:Woe,function:voe,instanceof:eoe,intersection:hoe,lazy:Aoe,literal:Coe,map:goe,nan:toe,nativeEnum:Uoe,never:poe,null:roe,nullable:foe,number:c5,object:yoe,oboolean:Toe,onumber:woe,optional:Roe,ostring:Ooe,pipeline:Moe,preprocess:joe,promise:koe,record:Ioe,set:Soe,strictObject:doe,string:l5,symbol:ooe,transformer:F9,tuple:boe,undefined:ioe,union:moe,unknown:coe,void:uoe,NEVER:Noe,ZodIssueCode:N,quotelessJson:Pne,ZodError:Tl});const Boe=o=>typeof(o==null?void 0:o.safeParse)=="function";e.object({name:e.literal("ZodError"),issues:e.array(e.object({path:e.array(e.union([e.string(),e.number()])),message:e.string().optional(),code:e.nativeEnum(e.ZodIssueCode)}).catchall(e.any()))});const _oe=o=>"method"in o&&"path"in o,qoe=({path:o,params:a})=>o.replace(/:([^/]+)/g,(n,r)=>a[r]||"").replace(/\/\//g,"/"),Foe=(o,a=!1)=>{const n=a?Eoe(o):Doe(o);return(n==null?void 0:n.length)>0?"?"+n:""},Eoe=o=>o?Object.entries(o).filter(([,a])=>a!==void 0).map(([a,n])=>{let r;return typeof n=="string"&&!["true","false","null"].includes(n.trim())&&isNaN(Number(n))?r=n:r=JSON.stringify(n),`${encodeURIComponent(a)}=${encodeURIComponent(r)}`}).join("&"):"",Doe=o=>o?Object.keys(o).flatMap(a=>CF(a,o[a])).map(([a,n])=>`${encodeURIComponent(a)}=${encodeURIComponent(n)}`).join("&"):"",CF=(o,a)=>Array.isArray(a)?a.flatMap((n,r)=>CF(`${o}[${r}]`,n)):a instanceof Date?[[`${o}`,a.toISOString()]]:a===null?[[`${o}`,""]]:a===void 0?[]:typeof a=="object"?Object.keys(a).flatMap(n=>CF(`${o}[${n}]`,a[n])):[[`${o}`,`${a}`]];class xoe extends Error{constructor(a,n){const r=n.join(",");super(`Server returned unexpected response. Expected one of: ${r} got: ${a.status}`),this.response=a}}const Voe=async({route:o,path:a,method:n,headers:r,body:c,validateResponse:u,fetchOptions:y})=>{const m=await fetch(a,{...y,method:n,headers:r,body:c}),g=m.headers.get("content-type");if(g!=null&&g.includes("application/")&&(g!=null&&g.includes("json"))){const S={status:m.status,body:await m.json(),headers:m.headers},C=o.responses[S.status];return(u??o.validateResponseOnClient)&&Boe(C)?{...S,body:C.parse(S.body)}:S}return g!=null&&g.includes("text/")?{status:m.status,body:await m.text(),headers:m.headers}:{status:m.status,body:await m.blob(),headers:m.headers}},Hoe=o=>{const a=new FormData,n=(r,c)=>{c instanceof File?a.append(r,c):a.append(r,JSON.stringify(c))};return Object.entries(o).forEach(([r,c])=>{if(Array.isArray(c))for(const u of c)n(r,u);else n(r,c)}),a},E9=o=>Object.fromEntries(Object.entries(o).map(([a,n])=>[a.toLowerCase(),n])),Loe=o=>{const{path:a,clientArgs:n,route:r,body:c,query:u,extraInputArgs:y,headers:m,fetchOptions:g}=o,S=n.api||Voe,C=n.baseHeaders&&Object.fromEntries(Object.entries(n.baseHeaders).map(([pa,Vw])=>typeof Vw=="function"?[pa,Vw(o)]:[pa,Vw])),Ne={...C&&E9(C),...E9(m)};Object.keys(Ne).forEach(pa=>{Ne[pa]===void 0&&delete Ne[pa]});let La={route:r,path:a,method:r.method,headers:Ne,body:void 0,rawBody:c,rawQuery:u,contentType:void 0,validateResponse:n.validateResponse,fetchOptions:{...n.credentials&&{credentials:n.credentials},...g},...(g==null?void 0:g.signal)&&{signal:g.signal},...(g==null?void 0:g.cache)&&{cache:g.cache},...g&&"next"in g&&!!(g!=null&&g.next)&&{next:g.next}};return r.method!=="GET"&&("contentType"in r&&r.contentType==="multipart/form-data"?La={...La,contentType:"multipart/form-data",body:c instanceof FormData?c:Hoe(c)}:"contentType"in r&&r.contentType==="application/x-www-form-urlencoded"?La={...La,contentType:"application/x-www-form-urlencoded",headers:{"content-type":"application/x-www-form-urlencoded",...La.headers},body:typeof c=="string"?c:new URLSearchParams(c)}:c!=null&&(La={...La,contentType:"application/json",headers:{"content-type":"application/json",...La.headers},body:JSON.stringify(c)})),S({...La,...y})},Zoe=(o,a,n)=>{const{query:r,params:c,body:u,headers:y,extraHeaders:m,overrideClientOptions:g,fetchOptions:S,cache:C,next:Ne,...La}=n||{},pa={...a,...g};return{path:$oe(r,pa.baseUrl,c,o,!!pa.jsonQuery),clientArgs:pa,route:o,body:u,query:r,extraInputArgs:La,fetchOptions:{...C&&{cache:C},...Ne&&{next:Ne},...S},headers:{...m,...y}}},$oe=(o,a,n,r,c)=>{const u=qoe({path:r.path,params:n}),y=Foe(o,c);return`${a}${u}${y}`},Qoe=(o,a)=>{const n=Object.keys(o.responses);return async r=>{const c=Zoe(o,a,r),u=await Loe(c);if(!a.throwOnUnknownStatus||n.includes(u.status.toString()))return u;throw new xoe(u,n)}},u5=(o,a)=>Object.fromEntries(Object.entries(o).map(([n,r])=>_oe(r)?[n,Qoe(r,a)]:[n,u5(r,a)]));var Goe=Object.defineProperty,Yoe=(o,a)=>{for(var n in a)Goe(o,n,{get:a[n],enumerable:!0})},w={};Yoe(w,{AllergenAggregateArgsSchema:()=>$ce,AllergenArgsSchema:()=>gx,AllergenAvgOrderByAggregateInputSchema:()=>KY,AllergenCountOrderByAggregateInputSchema:()=>JY,AllergenCountOutputTypeArgsSchema:()=>Sx,AllergenCountOutputTypeSelectSchema:()=>v5,AllergenCreateArgsSchema:()=>zze,AllergenCreateInputSchema:()=>M0,AllergenCreateManyAndReturnArgsSchema:()=>Ize,AllergenCreateManyArgsSchema:()=>bze,AllergenCreateManyInputSchema:()=>Wv,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>h$,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>g2,AllergenCreateWithoutIngredientsInputSchema:()=>Yj,AllergenDeleteArgsSchema:()=>gze,AllergenDeleteManyArgsSchema:()=>Aze,AllergenFindFirstArgsSchema:()=>Hce,AllergenFindFirstOrThrowArgsSchema:()=>Lce,AllergenFindManyArgsSchema:()=>Zce,AllergenFindUniqueArgsSchema:()=>Gce,AllergenFindUniqueOrThrowArgsSchema:()=>Yce,AllergenGroupByArgsSchema:()=>Qce,AllergenIncludeSchema:()=>Hs,AllergenMaxOrderByAggregateInputSchema:()=>XY,AllergenMinOrderByAggregateInputSchema:()=>e8,AllergenOrderByWithAggregationInputSchema:()=>ZF,AllergenOrderByWithRelationInputSchema:()=>_d,AllergenRelationFilterSchema:()=>iZ,AllergenScalarFieldEnumSchema:()=>Sb,AllergenScalarWhereWithAggregatesInputSchema:()=>UI,AllergenSchema:()=>vie,AllergenSelectSchema:()=>Ls,AllergenSumOrderByAggregateInputSchema:()=>t8,AllergenUncheckedCreateInputSchema:()=>O0,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>Jj,AllergenUncheckedUpdateInputSchema:()=>T0,AllergenUncheckedUpdateManyInputSchema:()=>i6,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>Z_,AllergenUpdateArgsSchema:()=>Sze,AllergenUpdateInputSchema:()=>w0,AllergenUpdateManyArgsSchema:()=>vze,AllergenUpdateManyMutationInputSchema:()=>o6,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>I$,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>GX,AllergenUpdateWithoutIngredientsInputSchema:()=>L_,AllergenUpsertArgsSchema:()=>hze,AllergenUpsertWithoutIngredientsInputSchema:()=>QX,AllergenWhereInputSchema:()=>na,AllergenWhereUniqueInputSchema:()=>Xr,AvailabilityAggregateArgsSchema:()=>fce,AvailabilityArgsSchema:()=>rre,AvailabilityAvgOrderByAggregateInputSchema:()=>NY,AvailabilityCountOrderByAggregateInputSchema:()=>PY,AvailabilityCreateArgsSchema:()=>Lme,AvailabilityCreateInputSchema:()=>h0,AvailabilityCreateManyAndReturnArgsSchema:()=>Qme,AvailabilityCreateManyArgsSchema:()=>$me,AvailabilityCreateManyInputSchema:()=>vv,AvailabilityCreateManyUserInputEnvelopeSchema:()=>wM,AvailabilityCreateManyUserInputSchema:()=>tD,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>ln,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>dz,AvailabilityCreateWithoutUserInputSchema:()=>yp,AvailabilityDeleteArgsSchema:()=>Gme,AvailabilityDeleteManyArgsSchema:()=>Kme,AvailabilityFindFirstArgsSchema:()=>kce,AvailabilityFindFirstOrThrowArgsSchema:()=>Rce,AvailabilityFindManyArgsSchema:()=>S9,AvailabilityFindUniqueArgsSchema:()=>Mce,AvailabilityFindUniqueOrThrowArgsSchema:()=>Oce,AvailabilityGroupByArgsSchema:()=>jce,AvailabilityIncludeSchema:()=>qs,AvailabilityListRelationFilterSchema:()=>gZ,AvailabilityMaxOrderByAggregateInputSchema:()=>BY,AvailabilityMinOrderByAggregateInputSchema:()=>_Y,AvailabilityOrderByRelationAggregateInputSchema:()=>N8,AvailabilityOrderByWithAggregationInputSchema:()=>VF,AvailabilityOrderByWithRelationInputSchema:()=>dm,AvailabilityScalarFieldEnumSchema:()=>bb,AvailabilityScalarWhereInputSchema:()=>Cl,AvailabilityScalarWhereWithAggregatesInputSchema:()=>AI,AvailabilitySchema:()=>Iie,AvailabilitySelectSchema:()=>Fs,AvailabilitySumOrderByAggregateInputSchema:()=>qY,AvailabilityUncheckedCreateInputSchema:()=>b0,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>Cn,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>dp,AvailabilityUncheckedUpdateInputSchema:()=>g0,AvailabilityUncheckedUpdateManyInputSchema:()=>t6,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>Yte,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>no,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>fQ,AvailabilityUpdateArgsSchema:()=>Yme,AvailabilityUpdateInputSchema:()=>I0,AvailabilityUpdateManyArgsSchema:()=>Jme,AvailabilityUpdateManyMutationInputSchema:()=>S0,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>rW,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>Dn,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>iW,AvailabilityUpdateWithoutUserInputSchema:()=>RQ,AvailabilityUpsertArgsSchema:()=>Zme,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>oW,AvailabilityWhereInputSchema:()=>va,AvailabilityWhereUniqueInputSchema:()=>gt,BoolFieldUpdateOperationsInputSchema:()=>A,BoolFilterSchema:()=>oa,BoolWithAggregatesFilterSchema:()=>yh,ChecklistCompleteAggregateArgsSchema:()=>hle,ChecklistCompleteArgsSchema:()=>yx,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>M3,ChecklistCompleteCountOrderByAggregateInputSchema:()=>j3,ChecklistCompleteCountOutputTypeArgsSchema:()=>dx,ChecklistCompleteCountOutputTypeSelectSchema:()=>b5,ChecklistCompleteCreateArgsSchema:()=>sde,ChecklistCompleteCreateInputSchema:()=>WV,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>mde,ChecklistCompleteCreateManyArgsSchema:()=>dde,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>xf,ChecklistCompleteCreateManyChecklistInputSchema:()=>kE,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>NM,ChecklistCompleteCreateManyCompletedByInputSchema:()=>oD,ChecklistCompleteCreateManyInputSchema:()=>uv,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>vP,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>un,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>l$,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Nm,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>hz,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>Q1,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>ac,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>Ip,ChecklistCompleteCreateWithoutItemsInputSchema:()=>Jf,ChecklistCompleteDeleteArgsSchema:()=>zde,ChecklistCompleteDeleteManyArgsSchema:()=>Ide,ChecklistCompleteFindFirstArgsSchema:()=>mle,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>zle,ChecklistCompleteFindManyArgsSchema:()=>jw,ChecklistCompleteFindUniqueArgsSchema:()=>Ile,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>gle,ChecklistCompleteGroupByArgsSchema:()=>ble,ChecklistCompleteIncludeSchema:()=>hs,ChecklistCompleteListRelationFilterSchema:()=>qR,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>O3,ChecklistCompleteMinOrderByAggregateInputSchema:()=>w3,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>GL,ChecklistCompleteOrderByWithAggregationInputSchema:()=>wF,ChecklistCompleteOrderByWithRelationInputSchema:()=>Pd,ChecklistCompleteRelationFilterSchema:()=>JL,ChecklistCompleteScalarFieldEnumSchema:()=>rb,ChecklistCompleteScalarWhereInputSchema:()=>Wi,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>sI,ChecklistCompleteSchema:()=>lie,ChecklistCompleteSelectSchema:()=>bs,ChecklistCompleteSumOrderByAggregateInputSchema:()=>T3,ChecklistCompleteUncheckedCreateInputSchema:()=>UV,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>CP,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>kn,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>nc,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>gp,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>Kf,ChecklistCompleteUncheckedUpdateInputSchema:()=>RV,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>H5,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>Ite,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>fP,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>Xte,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>ro,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>I4,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>PQ,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>YB,ChecklistCompleteUpdateArgsSchema:()=>hde,ChecklistCompleteUpdateInputSchema:()=>kV,ChecklistCompleteUpdateManyArgsSchema:()=>bde,ChecklistCompleteUpdateManyMutationInputSchema:()=>jT,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>IA,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>zW,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>kP,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Hn,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>p$,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>XK,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>bA,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>mW,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>b4,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>TQ,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>GB,ChecklistCompleteUpsertArgsSchema:()=>yde,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>hA,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>dW,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>KK,ChecklistCompleteWhereInputSchema:()=>Dt,ChecklistCompleteWhereUniqueInputSchema:()=>le,ChecklistFrequencySchema:()=>qe,ChecklistItemAggregateArgsSchema:()=>ule,ChecklistItemArgsSchema:()=>ux,ChecklistItemAvgOrderByAggregateInputSchema:()=>W3,ChecklistItemCompleteAggregateArgsSchema:()=>Ale,ChecklistItemCompleteArgsSchema:()=>Kie,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>N3,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>P3,ChecklistItemCompleteCreateArgsSchema:()=>gde,ChecklistItemCompleteCreateInputSchema:()=>fV,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>Ade,ChecklistItemCompleteCreateManyArgsSchema:()=>vde,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>Yf,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>fE,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>Lf,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>RE,ChecklistItemCompleteCreateManyInputSchema:()=>sv,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>OP,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>a$,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>_m,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>Bm,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>rc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>oc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Yd,ChecklistItemCompleteDeleteArgsSchema:()=>Cde,ChecklistItemCompleteDeleteManyArgsSchema:()=>kde,ChecklistItemCompleteFindFirstArgsSchema:()=>Sle,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>vle,ChecklistItemCompleteFindManyArgsSchema:()=>Mw,ChecklistItemCompleteFindUniqueArgsSchema:()=>Wle,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>Ule,ChecklistItemCompleteGroupByArgsSchema:()=>Cle,ChecklistItemCompleteIncludeSchema:()=>Is,ChecklistItemCompleteListRelationFilterSchema:()=>ER,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>B3,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>_3,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>YL,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>TF,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>im,ChecklistItemCompleteScalarFieldEnumSchema:()=>lb,ChecklistItemCompleteScalarWhereInputSchema:()=>Ui,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>yI,ChecklistItemCompleteSchema:()=>cie,ChecklistItemCompleteSelectSchema:()=>gs,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>q3,ChecklistItemCompleteUncheckedCreateInputSchema:()=>jV,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>wP,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>n$,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>lc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>ic,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>OV,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>L5,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Ste,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>BP,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>gte,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>r$,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>A4,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>S4,ChecklistItemCompleteUpdateArgsSchema:()=>Wde,ChecklistItemCompleteUpdateInputSchema:()=>MV,ChecklistItemCompleteUpdateManyArgsSchema:()=>Ude,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>MT,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>WA,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>vA,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>NP,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>i$,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>CA,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>SA,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>v4,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>g4,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>Ly,ChecklistItemCompleteUpsertArgsSchema:()=>Sde,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>AA,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>gA,ChecklistItemCompleteWhereInputSchema:()=>da,ChecklistItemCompleteWhereUniqueInputSchema:()=>he,ChecklistItemCountOrderByAggregateInputSchema:()=>C3,ChecklistItemCountOutputTypeArgsSchema:()=>sx,ChecklistItemCountOutputTypeSelectSchema:()=>h5,ChecklistItemCreateArgsSchema:()=>nde,ChecklistItemCreateInputSchema:()=>gV,ChecklistItemCreateManyAndReturnArgsSchema:()=>rde,ChecklistItemCreateManyArgsSchema:()=>ide,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>Df,ChecklistItemCreateManyChecklistInputSchema:()=>UE,ChecklistItemCreateManyInputSchema:()=>pv,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>SP,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>c$,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>Pm,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>G1,ChecklistItemCreateWithoutChecklistInputSchema:()=>ec,ChecklistItemCreateWithoutCompletionsInputSchema:()=>Xf,ChecklistItemDeleteArgsSchema:()=>lde,ChecklistItemDeleteManyArgsSchema:()=>ude,ChecklistItemFindFirstArgsSchema:()=>cle,ChecklistItemFindFirstOrThrowArgsSchema:()=>ple,ChecklistItemFindManyArgsSchema:()=>b9,ChecklistItemFindUniqueArgsSchema:()=>yle,ChecklistItemFindUniqueOrThrowArgsSchema:()=>dle,ChecklistItemGroupByArgsSchema:()=>sle,ChecklistItemIncludeSchema:()=>ms,ChecklistItemListRelationFilterSchema:()=>QL,ChecklistItemMaxOrderByAggregateInputSchema:()=>U3,ChecklistItemMinOrderByAggregateInputSchema:()=>k3,ChecklistItemOrderByRelationAggregateInputSchema:()=>h3,ChecklistItemOrderByWithAggregationInputSchema:()=>OF,ChecklistItemOrderByWithRelationInputSchema:()=>Td,ChecklistItemRelationFilterSchema:()=>KL,ChecklistItemScalarFieldEnumSchema:()=>ib,ChecklistItemScalarWhereInputSchema:()=>ml,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>uI,ChecklistItemSchema:()=>rie,ChecklistItemSelectSchema:()=>zs,ChecklistItemSumOrderByAggregateInputSchema:()=>R3,ChecklistItemTypeSchema:()=>Le,ChecklistItemUncheckedCreateInputSchema:()=>SV,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>AP,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>tc,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>ej,ChecklistItemUncheckedUpdateInputSchema:()=>AV,ChecklistItemUncheckedUpdateManyInputSchema:()=>V5,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>bte,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>RP,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>h4,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>KB,ChecklistItemUpdateArgsSchema:()=>cde,ChecklistItemUpdateInputSchema:()=>vV,ChecklistItemUpdateManyArgsSchema:()=>pde,ChecklistItemUpdateManyMutationInputSchema:()=>CV,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>zA,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>UP,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>u$,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>tX,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>mA,ChecklistItemUpdateWithoutChecklistInputSchema:()=>z4,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>JB,ChecklistItemUpsertArgsSchema:()=>ode,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>dA,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>eX,ChecklistItemWhereInputSchema:()=>Et,ChecklistItemWhereUniqueInputSchema:()=>at,ChecklistStatusSchema:()=>xe,ConstraintTypeSchema:()=>ut,CookBookAggregateArgsSchema:()=>Vpe,CookBookArgsSchema:()=>Wx,CookBookAvgOrderByAggregateInputSchema:()=>G8,CookBookCountOrderByAggregateInputSchema:()=>Q8,CookBookCountOutputTypeArgsSchema:()=>Ux,CookBookCountOutputTypeSelectSchema:()=>U5,CookBookCreateArgsSchema:()=>Uhe,CookBookCreateInputSchema:()=>sH,CookBookCreateManyAndReturnArgsSchema:()=>fhe,CookBookCreateManyArgsSchema:()=>Rhe,CookBookCreateManyInputSchema:()=>wv,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>iM,CookBookCreateManyRestaurantInputSchema:()=>NE,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>Li,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>bo,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>j2,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>$m,CookBookCreateWithoutRecipesInputSchema:()=>ZM,CookBookCreateWithoutRestaurantInputSchema:()=>kc,CookBookDeleteArgsSchema:()=>jhe,CookBookDeleteManyArgsSchema:()=>whe,CookBookFindFirstArgsSchema:()=>Dpe,CookBookFindFirstOrThrowArgsSchema:()=>xpe,CookBookFindManyArgsSchema:()=>U9,CookBookFindUniqueArgsSchema:()=>Lpe,CookBookFindUniqueOrThrowArgsSchema:()=>Zpe,CookBookGroupByArgsSchema:()=>Hpe,CookBookIncludeSchema:()=>oy,CookBookListRelationFilterSchema:()=>cZ,CookBookMaxOrderByAggregateInputSchema:()=>Y8,CookBookMinOrderByAggregateInputSchema:()=>J8,CookBookOrderByRelationAggregateInputSchema:()=>C8,CookBookOrderByWithAggregationInputSchema:()=>eE,CookBookOrderByWithRelationInputSchema:()=>qd,CookBookRelationFilterSchema:()=>vZ,CookBookScalarFieldEnumSchema:()=>fb,CookBookScalarWhereInputSchema:()=>hl,CookBookScalarWhereWithAggregatesInputSchema:()=>TI,CookBookSchema:()=>jie,CookBookSelectSchema:()=>iy,CookBookSumOrderByAggregateInputSchema:()=>K8,CookBookUncheckedCreateInputSchema:()=>yH,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>or,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>$M,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>Rc,CookBookUncheckedUpdateInputSchema:()=>mH,CookBookUncheckedUpdateManyInputSchema:()=>z6,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Mte,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>cq,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>x4,CookBookUpdateArgsSchema:()=>Mhe,CookBookUpdateInputSchema:()=>dH,CookBookUpdateManyArgsSchema:()=>Ohe,CookBookUpdateManyMutationInputSchema:()=>zH,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>eC,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>Ir,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>$o,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>see,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>XA,CookBookUpdateWithoutRecipesInputSchema:()=>lq,CookBookUpdateWithoutRestaurantInputSchema:()=>D4,CookBookUpsertArgsSchema:()=>khe,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>KA,CookBookUpsertWithoutRecipesInputSchema:()=>uee,CookBookWhereInputSchema:()=>Vt,CookBookWhereUniqueInputSchema:()=>nt,CustomerFeedbackAggregateArgsSchema:()=>Ple,CustomerFeedbackArgsSchema:()=>ere,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>Z3,CustomerFeedbackCountOrderByAggregateInputSchema:()=>L3,CustomerFeedbackCreateArgsSchema:()=>Nde,CustomerFeedbackCreateInputSchema:()=>BV,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>qde,CustomerFeedbackCreateManyArgsSchema:()=>_de,CustomerFeedbackCreateManyInputSchema:()=>dv,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>Iw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>qD,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>BM,CustomerFeedbackCreateManyRespondedByInputSchema:()=>iD,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>hM,CustomerFeedbackCreateManyRestaurantInputSchema:()=>LE,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>ed,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>sn,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>ar,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>oh,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>bz,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>nz,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>Qu,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Sp,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>Zc,CustomerFeedbackCreatetagsInputSchema:()=>al,CustomerFeedbackDeleteArgsSchema:()=>Fde,CustomerFeedbackDeleteManyArgsSchema:()=>xde,CustomerFeedbackFindFirstArgsSchema:()=>wle,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>Tle,CustomerFeedbackFindManyArgsSchema:()=>xg,CustomerFeedbackFindUniqueArgsSchema:()=>Ble,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>_le,CustomerFeedbackGroupByArgsSchema:()=>Nle,CustomerFeedbackIncludeSchema:()=>As,CustomerFeedbackListRelationFilterSchema:()=>Tg,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>$3,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Q3,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>aP,CustomerFeedbackOrderByWithAggregationInputSchema:()=>NF,CustomerFeedbackOrderByWithRelationInputSchema:()=>lm,CustomerFeedbackScalarFieldEnumSchema:()=>pb,CustomerFeedbackScalarWhereInputSchema:()=>Fa,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>mI,CustomerFeedbackSchema:()=>uie,CustomerFeedbackSelectSchema:()=>Cs,CustomerFeedbackSumOrderByAggregateInputSchema:()=>G3,CustomerFeedbackUncheckedCreateInputSchema:()=>_V,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>cd,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>Rn,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>zr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>Gu,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>vp,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>$c,CustomerFeedbackUncheckedUpdateInputSchema:()=>FV,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>$5,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Dae,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>kd,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>eae,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>lo,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Ete,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>u9,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>BQ,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>cQ,CustomerFeedbackUpdateArgsSchema:()=>Ede,CustomerFeedbackUpdateInputSchema:()=>qV,CustomerFeedbackUpdateManyArgsSchema:()=>Dde,CustomerFeedbackUpdateManyMutationInputSchema:()=>UR,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Tk,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>IW,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>MC,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>Id,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>Ln,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>wk,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>bW,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>jC,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>p9,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>NQ,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>lQ,CustomerFeedbackUpdatetagsInputSchema:()=>$r,CustomerFeedbackUpsertArgsSchema:()=>Bde,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ok,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>hW,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>fC,CustomerFeedbackWhereInputSchema:()=>za,CustomerFeedbackWhereUniqueInputSchema:()=>V,DateTimeFieldUpdateOperationsInputSchema:()=>i,DateTimeFilterSchema:()=>h,DateTimeNullableFilterSchema:()=>la,DateTimeNullableWithAggregatesFilterSchema:()=>Gh,DateTimeWithAggregatesFilterSchema:()=>T,DayOfWeekSchema:()=>pt,DietaryRestrictionAggregateArgsSchema:()=>Ele,DietaryRestrictionArgsSchema:()=>mx,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>X3,DietaryRestrictionCountOrderByAggregateInputSchema:()=>K3,DietaryRestrictionCountOutputTypeArgsSchema:()=>zx,DietaryRestrictionCountOutputTypeSelectSchema:()=>I5,DietaryRestrictionCreateArgsSchema:()=>Vde,DietaryRestrictionCreateInputSchema:()=>EV,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>Zde,DietaryRestrictionCreateManyArgsSchema:()=>Lde,DietaryRestrictionCreateManyInputSchema:()=>mv,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>td,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Oo,DietaryRestrictionCreateNestedOneWithoutIngredientsInputSchema:()=>vh,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>M2,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>ih,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>Pz,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>uO,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Yu,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>eu,DietaryRestrictionDeleteArgsSchema:()=>$de,DietaryRestrictionDeleteManyArgsSchema:()=>Yde,DietaryRestrictionFindFirstArgsSchema:()=>qle,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>Fle,DietaryRestrictionFindManyArgsSchema:()=>ww,DietaryRestrictionFindUniqueArgsSchema:()=>xle,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>Vle,DietaryRestrictionGroupByArgsSchema:()=>Dle,DietaryRestrictionIncludeSchema:()=>Ws,DietaryRestrictionListRelationFilterSchema:()=>KR,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>eY,DietaryRestrictionMinOrderByAggregateInputSchema:()=>tY,DietaryRestrictionNullableRelationFilterSchema:()=>jZ,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>RZ,DietaryRestrictionOrderByWithAggregationInputSchema:()=>BF,DietaryRestrictionOrderByWithRelationInputSchema:()=>Nd,DietaryRestrictionScalarFieldEnumSchema:()=>ub,DietaryRestrictionScalarWhereInputSchema:()=>Ti,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>zI,DietaryRestrictionSchema:()=>sie,DietaryRestrictionSelectSchema:()=>Us,DietaryRestrictionSumOrderByAggregateInputSchema:()=>aY,DietaryRestrictionUncheckedCreateInputSchema:()=>DV,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>pd,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Lo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>sO,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Ju,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>tu,DietaryRestrictionUncheckedUpdateInputSchema:()=>VV,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>Q5,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>xae,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Rd,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>bae,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>vi,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>uq,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>y9,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>hG,DietaryRestrictionUpdateArgsSchema:()=>Qde,DietaryRestrictionUpdateInputSchema:()=>xV,DietaryRestrictionUpdateManyArgsSchema:()=>Gde,DietaryRestrictionUpdateManyMutationInputSchema:()=>wT,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Bk,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>zU,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>gd,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>li,DietaryRestrictionUpdateOneWithoutIngredientsNestedInputSchema:()=>Bh,DietaryRestrictionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>dee,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Nk,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>mU,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>pq,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>s9,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>zG,DietaryRestrictionUpsertArgsSchema:()=>Hde,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Pk,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>dU,DietaryRestrictionUpsertWithoutIngredientsInputSchema:()=>yee,DietaryRestrictionWhereInputSchema:()=>Pt,DietaryRestrictionWhereUniqueInputSchema:()=>ce,EarlyAccessAggregateArgsSchema:()=>ype,EarlyAccessAvgOrderByAggregateInputSchema:()=>d8,EarlyAccessCountOrderByAggregateInputSchema:()=>y8,EarlyAccessCreateArgsSchema:()=>Fze,EarlyAccessCreateInputSchema:()=>V0,EarlyAccessCreateManyAndReturnArgsSchema:()=>xze,EarlyAccessCreateManyArgsSchema:()=>Dze,EarlyAccessCreateManyInputSchema:()=>Rv,EarlyAccessDeleteArgsSchema:()=>Vze,EarlyAccessDeleteManyArgsSchema:()=>Zze,EarlyAccessFindFirstArgsSchema:()=>ppe,EarlyAccessFindFirstOrThrowArgsSchema:()=>upe,EarlyAccessFindManyArgsSchema:()=>spe,EarlyAccessFindUniqueArgsSchema:()=>mpe,EarlyAccessFindUniqueOrThrowArgsSchema:()=>zpe,EarlyAccessGroupByArgsSchema:()=>dpe,EarlyAccessMaxOrderByAggregateInputSchema:()=>m8,EarlyAccessMinOrderByAggregateInputSchema:()=>z8,EarlyAccessOrderByWithAggregationInputSchema:()=>GF,EarlyAccessOrderByWithRelationInputSchema:()=>Im,EarlyAccessScalarFieldEnumSchema:()=>Cb,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>fI,EarlyAccessSchema:()=>Wie,EarlyAccessSelectSchema:()=>Zd,EarlyAccessSumOrderByAggregateInputSchema:()=>h8,EarlyAccessUncheckedCreateInputSchema:()=>H0,EarlyAccessUncheckedUpdateInputSchema:()=>Z0,EarlyAccessUncheckedUpdateManyInputSchema:()=>p6,EarlyAccessUpdateArgsSchema:()=>Hze,EarlyAccessUpdateInputSchema:()=>L0,EarlyAccessUpdateManyArgsSchema:()=>Lze,EarlyAccessUpdateManyMutationInputSchema:()=>c6,EarlyAccessUpsertArgsSchema:()=>Eze,EarlyAccessWhereInputSchema:()=>uo,EarlyAccessWhereUniqueInputSchema:()=>$d,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>pl,EnumChecklistFrequencyFilterSchema:()=>LT,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>A3,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>Gd,EnumChecklistItemTypeFilterSchema:()=>ZT,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>f3,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>Hy,EnumChecklistStatusFilterSchema:()=>$T,EnumChecklistStatusWithAggregatesFilterSchema:()=>F3,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>aI,EnumConstraintTypeFilterSchema:()=>XT,EnumConstraintTypeWithAggregatesFilterSchema:()=>LY,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>tI,EnumDayOfWeekFilterSchema:()=>KT,EnumDayOfWeekWithAggregatesFilterSchema:()=>FY,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>cl,EnumEquipmentStatusFilterSchema:()=>xT,EnumEquipmentStatusWithAggregatesFilterSchema:()=>o3,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>Zr,EnumFeedbackSourceFilterSchema:()=>QT,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Y3,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Qr,EnumFeedbackStatusFilterSchema:()=>GT,EnumFeedbackStatusWithAggregatesFilterSchema:()=>J3,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>Xb,EnumMaintenanceTypeFilterSchema:()=>VT,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>z3,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>nl,EnumOrderStatusFilterSchema:()=>lP,EnumOrderStatusWithAggregatesFilterSchema:()=>FJ,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>ra,EnumPrepStatusFilterSchema:()=>_g,EnumPrepStatusWithAggregatesFilterSchema:()=>NZ,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>Jd,EnumShiftStatusFilterSchema:()=>cP,EnumShiftStatusWithAggregatesFilterSchema:()=>a7,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>eI,EnumTaskTypeFilterSchema:()=>JT,EnumTaskTypeWithAggregatesFilterSchema:()=>TY,EnumUserRoleFieldUpdateOperationsInputSchema:()=>Fe,EnumUserRoleFilterSchema:()=>nP,EnumUserRoleWithAggregatesFilterSchema:()=>x8,EquipmentAggregateArgsSchema:()=>Ere,EquipmentArgsSchema:()=>IR,EquipmentAvgOrderByAggregateInputSchema:()=>e3,EquipmentCountOrderByAggregateInputSchema:()=>X6,EquipmentCountOutputTypeArgsSchema:()=>cx,EquipmentCountOutputTypeSelectSchema:()=>m5,EquipmentCreateArgsSchema:()=>Uye,EquipmentCreateInputSchema:()=>eV,EquipmentCreateManyAndReturnArgsSchema:()=>fye,EquipmentCreateManyArgsSchema:()=>Rye,EquipmentCreateManyInputSchema:()=>iv,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>mM,EquipmentCreateManyRestaurantInputSchema:()=>VE,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>er,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>Y7,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>KZ,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>V1,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>x1,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>tz,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>_f,EquipmentCreateWithoutRecipesInputSchema:()=>Nf,EquipmentCreateWithoutRestaurantInputSchema:()=>xc,EquipmentDeleteArgsSchema:()=>jye,EquipmentDeleteManyArgsSchema:()=>wye,EquipmentFindFirstArgsSchema:()=>qre,EquipmentFindFirstOrThrowArgsSchema:()=>Fre,EquipmentFindManyArgsSchema:()=>m9,EquipmentFindUniqueArgsSchema:()=>xre,EquipmentFindUniqueOrThrowArgsSchema:()=>Vre,EquipmentGroupByArgsSchema:()=>Dre,EquipmentIncludeSchema:()=>rs,EquipmentListRelationFilterSchema:()=>sZ,EquipmentMaxOrderByAggregateInputSchema:()=>t3,EquipmentMinOrderByAggregateInputSchema:()=>a3,EquipmentOrderByRelationAggregateInputSchema:()=>U8,EquipmentOrderByWithAggregationInputSchema:()=>RF,EquipmentOrderByWithRelationInputSchema:()=>ql,EquipmentRelationFilterSchema:()=>_R,EquipmentScalarFieldEnumSchema:()=>tb,EquipmentScalarWhereInputSchema:()=>Il,EquipmentScalarWhereWithAggregatesInputSchema:()=>rI,EquipmentSchema:()=>aie,EquipmentSelectSchema:()=>ls,EquipmentStatusSchema:()=>_e,EquipmentSumOrderByAggregateInputSchema:()=>n3,EquipmentUncheckedCreateInputSchema:()=>tV,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>dr,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>qf,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>Bf,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,EquipmentUncheckedUpdateInputSchema:()=>nV,EquipmentUncheckedUpdateManyInputSchema:()=>F5,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>qte,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Er,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>EB,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>qB,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>oQ,EquipmentUpdateArgsSchema:()=>Mye,EquipmentUpdateInputSchema:()=>aV,EquipmentUpdateManyArgsSchema:()=>Oye,EquipmentUpdateManyMutationInputSchema:()=>oV,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>WC,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>J7,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>e$,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>VK,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>DK,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>CC,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>FB,EquipmentUpdateWithoutRecipesInputSchema:()=>_B,EquipmentUpdateWithoutRestaurantInputSchema:()=>nQ,EquipmentUpsertArgsSchema:()=>kye,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AC,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>xK,EquipmentUpsertWithoutRecipesInputSchema:()=>EK,EquipmentWhereInputSchema:()=>ft,EquipmentWhereUniqueInputSchema:()=>Ye,FeedbackSourceSchema:()=>Oe,FeedbackStatusSchema:()=>we,FloatFieldUpdateOperationsInputSchema:()=>b,FloatFilterSchema:()=>re,FloatNullableFilterSchema:()=>Qd,FloatNullableListFilterSchema:()=>fm,FloatNullableWithAggregatesFilterSchema:()=>HT,FloatWithAggregatesFilterSchema:()=>Gt,FoodCostHistoryAggregateArgsSchema:()=>Lse,FoodCostHistoryArgsSchema:()=>Ire,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>D7,FoodCostHistoryCountOrderByAggregateInputSchema:()=>E7,FoodCostHistoryCreateArgsSchema:()=>lge,FoodCostHistoryCreateInputSchema:()=>NL,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>uge,FoodCostHistoryCreateManyArgsSchema:()=>pge,FoodCostHistoryCreateManyInputSchema:()=>Yv,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>YM,FoodCostHistoryCreateManyRecipeInputSchema:()=>sD,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>vo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Wz,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>Pp,FoodCostHistoryDeleteArgsSchema:()=>sge,FoodCostHistoryDeleteManyArgsSchema:()=>mge,FoodCostHistoryFindFirstArgsSchema:()=>Vse,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>Hse,FoodCostHistoryFindManyArgsSchema:()=>O9,FoodCostHistoryFindUniqueArgsSchema:()=>$se,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>Qse,FoodCostHistoryGroupByArgsSchema:()=>Zse,FoodCostHistoryIncludeSchema:()=>Ey,FoodCostHistoryListRelationFilterSchema:()=>AZ,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>x7,FoodCostHistoryMinOrderByAggregateInputSchema:()=>V7,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>X8,FoodCostHistoryOrderByWithAggregationInputSchema:()=>IE,FoodCostHistoryOrderByWithRelationInputSchema:()=>km,FoodCostHistoryScalarFieldEnumSchema:()=>Zb,FoodCostHistoryScalarWhereInputSchema:()=>Ul,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>JI,FoodCostHistorySchema:()=>$ie,FoodCostHistorySelectSchema:()=>Dy,FoodCostHistorySumOrderByAggregateInputSchema:()=>H7,FoodCostHistoryUncheckedCreateInputSchema:()=>BL,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>No,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Np,FoodCostHistoryUncheckedUpdateInputSchema:()=>qL,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>N6,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>lae,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>si,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>YQ,FoodCostHistoryUpdateArgsSchema:()=>yge,FoodCostHistoryUpdateInputSchema:()=>_L,FoodCostHistoryUpdateManyArgsSchema:()=>dge,FoodCostHistoryUpdateManyMutationInputSchema:()=>FL,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>FW,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>Jo,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>qW,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>GQ,FoodCostHistoryUpsertArgsSchema:()=>cge,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>_W,FoodCostHistoryWhereInputSchema:()=>Ta,FoodCostHistoryWhereUniqueInputSchema:()=>Wt,IngredientAggregateArgsSchema:()=>tue,IngredientAllergenAggregateArgsSchema:()=>Xce,IngredientAllergenArgsSchema:()=>pre,IngredientAllergenAvgOrderByAggregateInputSchema:()=>n8,IngredientAllergenCountOrderByAggregateInputSchema:()=>a8,IngredientAllergenCreateArgsSchema:()=>Cze,IngredientAllergenCreateInputSchema:()=>P0,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>$j,IngredientAllergenCreateManyAllergenInputSchema:()=>OE,IngredientAllergenCreateManyAndReturnArgsSchema:()=>kze,IngredientAllergenCreateManyArgsSchema:()=>Uze,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>cO,IngredientAllergenCreateManyIngredientInputSchema:()=>CD,IngredientAllergenCreateManyInputSchema:()=>Uv,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>cK,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>gh,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>Vm,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>Ez,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Ic,IngredientAllergenCreateWithoutIngredientInputSchema:()=>yu,IngredientAllergenDeleteArgsSchema:()=>Rze,IngredientAllergenDeleteManyArgsSchema:()=>Mze,IngredientAllergenFindFirstArgsSchema:()=>Jce,IngredientAllergenFindFirstOrThrowArgsSchema:()=>Kce,IngredientAllergenFindManyArgsSchema:()=>Pw,IngredientAllergenFindUniqueArgsSchema:()=>tpe,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>ape,IngredientAllergenGroupByArgsSchema:()=>epe,IngredientAllergenIncludeSchema:()=>Zs,IngredientAllergenListRelationFilterSchema:()=>HR,IngredientAllergenMaxOrderByAggregateInputSchema:()=>o8,IngredientAllergenMinOrderByAggregateInputSchema:()=>i8,IngredientAllergenOrderByRelationAggregateInputSchema:()=>oZ,IngredientAllergenOrderByWithAggregationInputSchema:()=>$F,IngredientAllergenOrderByWithRelationInputSchema:()=>hm,IngredientAllergenScalarFieldEnumSchema:()=>vb,IngredientAllergenScalarWhereInputSchema:()=>Ri,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>kI,IngredientAllergenSchema:()=>Aie,IngredientAllergenSelectSchema:()=>$s,IngredientAllergenSumOrderByAggregateInputSchema:()=>r8,IngredientAllergenUncheckedCreateInputSchema:()=>N0,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>pK,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>Rh,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>gc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>du,IngredientAllergenUncheckedUpdateInputSchema:()=>_0,IngredientAllergenUncheckedUpdateManyInputSchema:()=>r6,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>kte,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>sK,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Cae,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>xh,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>P4,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>fG,IngredientAllergenUpdateArgsSchema:()=>fze,IngredientAllergenUpdateInputSchema:()=>B0,IngredientAllergenUpdateManyArgsSchema:()=>jze,IngredientAllergenUpdateManyMutationInputSchema:()=>PT,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>xA,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>TU,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>uK,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>Ph,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>DA,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>wU,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>T4,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>RG,IngredientAllergenUpsertArgsSchema:()=>Wze,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>EA,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>OU,IngredientAllergenWhereInputSchema:()=>Wa,IngredientAllergenWhereUniqueInputSchema:()=>Ie,IngredientArgsSchema:()=>Jr,IngredientAvgOrderByAggregateInputSchema:()=>uJ,IngredientCountOrderByAggregateInputSchema:()=>pJ,IngredientCountOutputTypeArgsSchema:()=>Rx,IngredientCountOutputTypeSelectSchema:()=>R5,IngredientCreateArgsSchema:()=>Dhe,IngredientCreateInputSchema:()=>SH,IngredientCreateManyAndReturnArgsSchema:()=>Hhe,IngredientCreateManyArgsSchema:()=>Vhe,IngredientCreateManyDietaryRestrictionInputEnvelopeSchema:()=>sj,IngredientCreateManyDietaryRestrictionInputSchema:()=>jE,IngredientCreateManyInputSchema:()=>Pv,IngredientCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>LP,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>QN,IngredientCreateNestedOneWithoutIngredientAllergenInputSchema:()=>z$,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>of,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>H$,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>PN,IngredientCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>y$,IngredientCreateNestedOneWithoutWasteRecordInputSchema:()=>cN,IngredientCreateOrConnectWithoutDietaryRestrictionInputSchema:()=>Em,IngredientCreateOrConnectWithoutIngredientAllergenInputSchema:()=>I2,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>q2,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>V2,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>w2,IngredientCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>J1,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>Zz,IngredientCreateOrConnectWithoutWasteRecordInputSchema:()=>i2,IngredientCreateWithoutDietaryRestrictionInputSchema:()=>yc,IngredientCreateWithoutIngredientAllergenInputSchema:()=>Qj,IngredientCreateWithoutInventoryItemsInputSchema:()=>RO,IngredientCreateWithoutOrderItemsInputSchema:()=>FO,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>mO,IngredientCreateWithoutSupplierPriceHistoryInputSchema:()=>nj,IngredientCreateWithoutVendorsInputSchema:()=>Wu,IngredientCreateWithoutWasteRecordInputSchema:()=>Sj,IngredientDeleteArgsSchema:()=>Lhe,IngredientDeleteManyArgsSchema:()=>Qhe,IngredientFindFirstArgsSchema:()=>Xpe,IngredientFindFirstOrThrowArgsSchema:()=>eue,IngredientFindManyArgsSchema:()=>Bw,IngredientFindUniqueArgsSchema:()=>nue,IngredientFindUniqueOrThrowArgsSchema:()=>oue,IngredientGroupByArgsSchema:()=>aue,IngredientIncludeSchema:()=>cy,IngredientListRelationFilterSchema:()=>VR,IngredientMaxOrderByAggregateInputSchema:()=>sJ,IngredientMinOrderByAggregateInputSchema:()=>yJ,IngredientOrderByRelationAggregateInputSchema:()=>XL,IngredientOrderByWithAggregationInputSchema:()=>aE,IngredientOrderByWithRelationInputSchema:()=>qi,IngredientRelationFilterSchema:()=>el,IngredientScalarFieldEnumSchema:()=>Mb,IngredientScalarWhereInputSchema:()=>ki,IngredientScalarWhereWithAggregatesInputSchema:()=>NI,IngredientSchema:()=>Oie,IngredientSelectSchema:()=>py,IngredientSumOrderByAggregateInputSchema:()=>dJ,IngredientUncheckedCreateInputSchema:()=>vH,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>QP,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>JN,IngredientUncheckedCreateWithoutDietaryRestrictionInputSchema:()=>dc,IngredientUncheckedCreateWithoutIngredientAllergenInputSchema:()=>Gj,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>fO,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>EO,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>zO,IngredientUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>oj,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>Uu,IngredientUncheckedCreateWithoutWasteRecordInputSchema:()=>vj,IngredientUncheckedUpdateInputSchema:()=>CH,IngredientUncheckedUpdateManyInputSchema:()=>b6,IngredientUncheckedUpdateManyWithoutDietaryRestrictionInputSchema:()=>Cte,IngredientUncheckedUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>eN,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>jae,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>nB,IngredientUncheckedUpdateWithoutDietaryRestrictionInputSchema:()=>f4,IngredientUncheckedUpdateWithoutIngredientAllergenInputSchema:()=>H_,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>kq,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>Bq,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>mq,IngredientUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>a_,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>EG,IngredientUncheckedUpdateWithoutWasteRecordInputSchema:()=>I_,IngredientUpdateArgsSchema:()=>Zhe,IngredientUpdateInputSchema:()=>AH,IngredientUpdateManyArgsSchema:()=>$he,IngredientUpdateManyMutationInputSchema:()=>BT,IngredientUpdateManyWithWhereWithoutDietaryRestrictionInputSchema:()=>TA,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>JU,IngredientUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>JP,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>eB,IngredientUpdateOneRequiredWithoutIngredientAllergenNestedInputSchema:()=>b$,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>uf,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>Z$,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>_N,IngredientUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>m$,IngredientUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>sN,IngredientUpdateToOneWithWhereWithoutIngredientAllergenInputSchema:()=>$X,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>jee,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Fee,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>bee,IngredientUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>iX,IngredientUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>vX,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>wA,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>YU,IngredientUpdateWithoutDietaryRestrictionInputSchema:()=>R4,IngredientUpdateWithoutIngredientAllergenInputSchema:()=>V_,IngredientUpdateWithoutInventoryItemsInputSchema:()=>Uq,IngredientUpdateWithoutOrderItemsInputSchema:()=>Nq,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>dq,IngredientUpdateWithoutSupplierPriceHistoryInputSchema:()=>t_,IngredientUpdateWithoutVendorsInputSchema:()=>FG,IngredientUpdateWithoutWasteRecordInputSchema:()=>b_,IngredientUpsertArgsSchema:()=>xhe,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>OA,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>GU,IngredientUpsertWithoutIngredientAllergenInputSchema:()=>ZX,IngredientUpsertWithoutInventoryItemsInputSchema:()=>fee,IngredientUpsertWithoutOrderItemsInputSchema:()=>qee,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>hee,IngredientUpsertWithoutSupplierPriceHistoryInputSchema:()=>oX,IngredientUpsertWithoutWasteRecordInputSchema:()=>SX,IngredientWhereInputSchema:()=>Te,IngredientWhereUniqueInputSchema:()=>Y,IntFieldUpdateOperationsInputSchema:()=>l,IntFilterSchema:()=>z,IntNullableFilterSchema:()=>Ce,IntNullableListFilterSchema:()=>af,IntNullableWithAggregatesFilterSchema:()=>Za,IntWithAggregatesFilterSchema:()=>k,InventoryAggregateArgsSchema:()=>Sue,InventoryArgsSchema:()=>vR,InventoryAvgOrderByAggregateInputSchema:()=>UJ,InventoryCountOrderByAggregateInputSchema:()=>WJ,InventoryCountOutputTypeArgsSchema:()=>fx,InventoryCountOutputTypeSelectSchema:()=>f5,InventoryCreateArgsSchema:()=>sbe,InventoryCreateInputSchema:()=>wH,InventoryCreateManyAndReturnArgsSchema:()=>mbe,InventoryCreateManyArgsSchema:()=>dbe,InventoryCreateManyInputSchema:()=>_v,InventoryCreateNestedOneWithoutItemsInputSchema:()=>nf,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Zi,InventoryCreateOrConnectWithoutItemsInputSchema:()=>_2,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>rM,InventoryCreateWithoutItemsInputSchema:()=>UO,InventoryCreateWithoutRestaurantInputSchema:()=>qg,InventoryDeleteArgsSchema:()=>zbe,InventoryDeleteManyArgsSchema:()=>Ibe,InventoryFindFirstArgsSchema:()=>bue,InventoryFindFirstOrThrowArgsSchema:()=>Iue,InventoryFindManyArgsSchema:()=>gue,InventoryFindUniqueArgsSchema:()=>Aue,InventoryFindUniqueOrThrowArgsSchema:()=>Cue,InventoryGroupByArgsSchema:()=>vue,InventoryIncludeSchema:()=>my,InventoryItemAggregateArgsSchema:()=>kue,InventoryItemArgsSchema:()=>jx,InventoryItemAvgOrderByAggregateInputSchema:()=>MJ,InventoryItemCountOrderByAggregateInputSchema:()=>jJ,InventoryItemCountOutputTypeArgsSchema:()=>Mx,InventoryItemCountOutputTypeSelectSchema:()=>j5,InventoryItemCreateArgsSchema:()=>gbe,InventoryItemCreateInputSchema:()=>BH,InventoryItemCreateManyAndReturnArgsSchema:()=>Abe,InventoryItemCreateManyArgsSchema:()=>vbe,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>iO,InventoryItemCreateManyIngredientInputSchema:()=>SD,InventoryItemCreateManyInputSchema:()=>qv,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>WO,InventoryItemCreateManyInventoryInputSchema:()=>UD,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>UM,InventoryItemCreateManyLastUpdatedByInputSchema:()=>QE,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>zh,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>q$,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Xa,InventoryItemCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>RN,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>Bz,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>xz,InventoryItemCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>z2,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>rz,InventoryItemCreateWithoutIngredientInputSchema:()=>ou,InventoryItemCreateWithoutInventoryInputSchema:()=>hu,InventoryItemCreateWithoutInventoryWithdrawalInputSchema:()=>Dj,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>Kc,InventoryItemDeleteArgsSchema:()=>Cbe,InventoryItemDeleteManyArgsSchema:()=>kbe,InventoryItemFindFirstArgsSchema:()=>Wue,InventoryItemFindFirstOrThrowArgsSchema:()=>Uue,InventoryItemFindManyArgsSchema:()=>Qg,InventoryItemFindUniqueArgsSchema:()=>fue,InventoryItemFindUniqueOrThrowArgsSchema:()=>jue,InventoryItemGroupByArgsSchema:()=>Rue,InventoryItemIncludeSchema:()=>hy,InventoryItemListRelationFilterSchema:()=>Ng,InventoryItemMaxOrderByAggregateInputSchema:()=>OJ,InventoryItemMinOrderByAggregateInputSchema:()=>wJ,InventoryItemOrderByRelationAggregateInputSchema:()=>iP,InventoryItemOrderByWithAggregationInputSchema:()=>rE,InventoryItemOrderByWithRelationInputSchema:()=>Fd,InventoryItemRelationFilterSchema:()=>aZ,InventoryItemScalarFieldEnumSchema:()=>Pb,InventoryItemScalarWhereInputSchema:()=>Da,InventoryItemScalarWhereWithAggregatesInputSchema:()=>FI,InventoryItemSchema:()=>Nie,InventoryItemSelectSchema:()=>by,InventoryItemSumOrderByAggregateInputSchema:()=>TJ,InventoryItemUncheckedCreateInputSchema:()=>_H,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>Ch,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>F$,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>hn,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>iu,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>bu,InventoryItemUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>xj,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>Xc,InventoryItemUncheckedUpdateInputSchema:()=>FH,InventoryItemUncheckedUpdateManyInputSchema:()=>A6,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>gae,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>qh,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>Uae,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>x$,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Vte,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Yn,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>SG,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>wG,InventoryItemUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>q_,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>mQ,InventoryItemUpdateArgsSchema:()=>Wbe,InventoryItemUpdateInputSchema:()=>qH,InventoryItemUpdateManyArgsSchema:()=>Ube,InventoryItemUpdateManyMutationInputSchema:()=>OR,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>vU,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>FU,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>FC,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>Mh,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>D$,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Pn,InventoryItemUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>MN,InventoryItemUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>DX,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>SU,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>qU,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>qC,InventoryItemUpdateWithoutIngredientInputSchema:()=>gG,InventoryItemUpdateWithoutInventoryInputSchema:()=>OG,InventoryItemUpdateWithoutInventoryWithdrawalInputSchema:()=>__,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>dQ,InventoryItemUpsertArgsSchema:()=>Sbe,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>gU,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>_U,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>_C,InventoryItemUpsertWithoutInventoryWithdrawalInputSchema:()=>EX,InventoryItemWhereInputSchema:()=>Ht,InventoryItemWhereUniqueInputSchema:()=>D,InventoryMaxOrderByAggregateInputSchema:()=>kJ,InventoryMinOrderByAggregateInputSchema:()=>RJ,InventoryNullableRelationFilterSchema:()=>pZ,InventoryOrderByWithAggregationInputSchema:()=>iE,InventoryOrderByWithRelationInputSchema:()=>Dl,InventoryRelationFilterSchema:()=>wZ,InventoryScalarFieldEnumSchema:()=>Tb,InventoryScalarWhereWithAggregatesInputSchema:()=>qI,InventorySchema:()=>Pie,InventorySelectSchema:()=>zy,InventorySumOrderByAggregateInputSchema:()=>fJ,InventoryUncheckedCreateInputSchema:()=>TH,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>ir,InventoryUncheckedCreateWithoutItemsInputSchema:()=>kO,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>Fg,InventoryUncheckedUpdateInputSchema:()=>NH,InventoryUncheckedUpdateManyInputSchema:()=>v6,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>wr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>Wq,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>IM,InventoryUpdateArgsSchema:()=>hbe,InventoryUpdateInputSchema:()=>PH,InventoryUpdateManyArgsSchema:()=>bbe,InventoryUpdateManyMutationInputSchema:()=>S6,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>pf,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>gr,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>Ree,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>C2,InventoryUpdateWithoutItemsInputSchema:()=>Cq,InventoryUpdateWithoutRestaurantInputSchema:()=>bM,InventoryUpsertArgsSchema:()=>ybe,InventoryUpsertWithoutItemsInputSchema:()=>kee,InventoryUpsertWithoutRestaurantInputSchema:()=>A2,InventoryWhereInputSchema:()=>zt,InventoryWhereUniqueInputSchema:()=>so,InventoryWithdrawalAggregateArgsSchema:()=>Ece,InventoryWithdrawalArgsSchema:()=>cre,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>$Y,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>ZY,InventoryWithdrawalCreateArgsSchema:()=>lze,InventoryWithdrawalCreateInputSchema:()=>k0,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>uze,InventoryWithdrawalCreateManyArgsSchema:()=>pze,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>PM,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>nD,InventoryWithdrawalCreateManyInputSchema:()=>Cv,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>OO,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>kD,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>tO,InventoryWithdrawalCreateManyRecipeInputSchema:()=>hD,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>pn,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>lf,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>Ro,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>zz,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>Vz,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Mz,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>hp,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>Iu,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>Zp,InventoryWithdrawalDeleteArgsSchema:()=>sze,InventoryWithdrawalDeleteManyArgsSchema:()=>mze,InventoryWithdrawalFindFirstArgsSchema:()=>qce,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>Fce,InventoryWithdrawalFindManyArgsSchema:()=>Zg,InventoryWithdrawalFindUniqueArgsSchema:()=>xce,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>Vce,InventoryWithdrawalGroupByArgsSchema:()=>Dce,InventoryWithdrawalIncludeSchema:()=>xs,InventoryWithdrawalListRelationFilterSchema:()=>Bg,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>QY,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>GY,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>rP,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>LF,InventoryWithdrawalOrderByWithRelationInputSchema:()=>zm,InventoryWithdrawalScalarFieldEnumSchema:()=>gb,InventoryWithdrawalScalarWhereInputSchema:()=>xa,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>WI,InventoryWithdrawalSchema:()=>Sie,InventoryWithdrawalSelectSchema:()=>Vs,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>YY,InventoryWithdrawalUncheckedCreateInputSchema:()=>R0,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Un,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>cf,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>bp,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>gu,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>$p,InventoryWithdrawalUncheckedUpdateInputSchema:()=>j0,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>n6,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Kte,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>io,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>kae,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>df,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>dae,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>bi,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>wQ,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>PG,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>cG,InventoryWithdrawalUpdateArgsSchema:()=>yze,InventoryWithdrawalUpdateInputSchema:()=>f0,InventoryWithdrawalUpdateManyArgsSchema:()=>dze,InventoryWithdrawalUpdateManyMutationInputSchema:()=>jR,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>yW,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>xU,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>nU,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Vn,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>yf,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>ni,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>sW,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>DU,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>aU,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>OQ,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>TG,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>lG,InventoryWithdrawalUpsertArgsSchema:()=>cze,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>uW,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>EU,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>tU,InventoryWithdrawalWhereInputSchema:()=>Ca,InventoryWithdrawalWhereUniqueInputSchema:()=>$,LeftoverItemAggregateArgsSchema:()=>Kle,LeftoverItemArgsSchema:()=>are,LeftoverItemAvgOrderByAggregateInputSchema:()=>pY,LeftoverItemCountOrderByAggregateInputSchema:()=>cY,LeftoverItemCreateArgsSchema:()=>ime,LeftoverItemCreateInputSchema:()=>GV,LeftoverItemCreateManyAndReturnArgsSchema:()=>cme,LeftoverItemCreateManyArgsSchema:()=>lme,LeftoverItemCreateManyInputSchema:()=>hv,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>mw,LeftoverItemCreateManyMenuItemInputSchema:()=>BD,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>fM,LeftoverItemCreateManyRecordedByInputSchema:()=>JE,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>sM,LeftoverItemCreateManyRestaurantInputSchema:()=>EE,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Jy,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>an,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>Ji,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>ah,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>pz,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>Km,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Hu,LeftoverItemCreateWithoutRecordedByInputSchema:()=>op,LeftoverItemCreateWithoutRestaurantInputSchema:()=>Bc,LeftoverItemDeleteArgsSchema:()=>pme,LeftoverItemDeleteManyArgsSchema:()=>yme,LeftoverItemFindFirstArgsSchema:()=>Yle,LeftoverItemFindFirstOrThrowArgsSchema:()=>Jle,LeftoverItemFindManyArgsSchema:()=>Vg,LeftoverItemFindUniqueArgsSchema:()=>ece,LeftoverItemFindUniqueOrThrowArgsSchema:()=>tce,LeftoverItemGroupByArgsSchema:()=>Xle,LeftoverItemIncludeSchema:()=>fs,LeftoverItemListRelationFilterSchema:()=>Og,LeftoverItemMaxOrderByAggregateInputSchema:()=>uY,LeftoverItemMinOrderByAggregateInputSchema:()=>sY,LeftoverItemOrderByRelationAggregateInputSchema:()=>eP,LeftoverItemOrderByWithAggregationInputSchema:()=>qF,LeftoverItemOrderByWithRelationInputSchema:()=>pm,LeftoverItemScalarFieldEnumSchema:()=>yb,LeftoverItemScalarWhereInputSchema:()=>_a,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>bI,LeftoverItemSchema:()=>die,LeftoverItemSelectSchema:()=>js,LeftoverItemSumOrderByAggregateInputSchema:()=>yY,LeftoverItemUncheckedCreateInputSchema:()=>YV,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>rd,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>gn,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ur,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>Lu,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>ip,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>_c,LeftoverItemUncheckedUpdateInputSchema:()=>KV,LeftoverItemUncheckedUpdateManyInputSchema:()=>Y5,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Fae,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Wd,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Zte,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Xn,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Nte,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>_r,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>r9,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>SQ,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>K4,LeftoverItemUpdateArgsSchema:()=>ume,LeftoverItemUpdateInputSchema:()=>JV,LeftoverItemUpdateManyArgsSchema:()=>sme,LeftoverItemUpdateManyMutationInputSchema:()=>kR,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Rk,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>QC,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zC,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>zd,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>_n,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>kk,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>$C,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>mC,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>i9,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>gQ,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>J4,LeftoverItemUpsertArgsSchema:()=>rme,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Uk,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>ZC,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>dC,LeftoverItemWhereInputSchema:()=>ba,LeftoverItemWhereUniqueInputSchema:()=>H,MaintenanceLogAggregateArgsSchema:()=>Kre,MaintenanceLogArgsSchema:()=>Jie,MaintenanceLogAvgOrderByAggregateInputSchema:()=>s3,MaintenanceLogCountOrderByAggregateInputSchema:()=>u3,MaintenanceLogCreateArgsSchema:()=>Dye,MaintenanceLogCreateInputSchema:()=>pV,MaintenanceLogCreateManyAndReturnArgsSchema:()=>Hye,MaintenanceLogCreateManyArgsSchema:()=>Vye,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>wf,MaintenanceLogCreateManyEquipmentInputSchema:()=>WE,MaintenanceLogCreateManyInputSchema:()=>lv,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>sP,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Tm,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>Kl,MaintenanceLogDeleteArgsSchema:()=>Lye,MaintenanceLogDeleteManyArgsSchema:()=>Qye,MaintenanceLogFindFirstArgsSchema:()=>Yre,MaintenanceLogFindFirstOrThrowArgsSchema:()=>Jre,MaintenanceLogFindManyArgsSchema:()=>z9,MaintenanceLogFindUniqueArgsSchema:()=>ele,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>tle,MaintenanceLogGroupByArgsSchema:()=>Xre,MaintenanceLogIncludeSchema:()=>us,MaintenanceLogListRelationFilterSchema:()=>ZL,MaintenanceLogMaxOrderByAggregateInputSchema:()=>y3,MaintenanceLogMinOrderByAggregateInputSchema:()=>d3,MaintenanceLogOrderByRelationAggregateInputSchema:()=>K6,MaintenanceLogOrderByWithAggregationInputSchema:()=>jF,MaintenanceLogOrderByWithRelationInputSchema:()=>om,MaintenanceLogScalarFieldEnumSchema:()=>nb,MaintenanceLogScalarWhereInputSchema:()=>dl,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>cI,MaintenanceLogSchema:()=>oie,MaintenanceLogSelectSchema:()=>ss,MaintenanceLogSumOrderByAggregateInputSchema:()=>m3,MaintenanceLogUncheckedCreateInputSchema:()=>uV,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>dP,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>Xl,MaintenanceLogUncheckedUpdateInputSchema:()=>yV,MaintenanceLogUncheckedUpdateManyInputSchema:()=>D5,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>hte,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>IP,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>m4,MaintenanceLogUpdateArgsSchema:()=>Zye,MaintenanceLogUpdateInputSchema:()=>sV,MaintenanceLogUpdateManyArgsSchema:()=>$ye,MaintenanceLogUpdateManyMutationInputSchema:()=>dV,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>yA,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>hP,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>sA,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>d4,MaintenanceLogUpsertArgsSchema:()=>xye,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>uA,MaintenanceLogWhereInputSchema:()=>ya,MaintenanceLogWhereUniqueInputSchema:()=>ht,MaintenanceTypeSchema:()=>lt,MenuAggregateArgsSchema:()=>Sse,MenuArgsSchema:()=>CR,MenuAvgOrderByAggregateInputSchema:()=>S7,MenuCategoryAggregateArgsSchema:()=>fre,MenuCategoryArgsSchema:()=>ix,MenuCategoryAvgOrderByAggregateInputSchema:()=>V6,MenuCategoryCountOrderByAggregateInputSchema:()=>x6,MenuCategoryCountOutputTypeArgsSchema:()=>rx,MenuCategoryCountOutputTypeSelectSchema:()=>y5,MenuCategoryCreateArgsSchema:()=>pye,MenuCategoryCreateInputSchema:()=>Lx,MenuCategoryCreateManyAndReturnArgsSchema:()=>yye,MenuCategoryCreateManyArgsSchema:()=>sye,MenuCategoryCreateManyInputSchema:()=>nv,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>ow,MenuCategoryCreateManyMenuInputSchema:()=>TD,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>dB,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>Xy,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>Kz,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>X2,MenuCategoryCreateWithoutMenuInputSchema:()=>Bu,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>hw,MenuCategoryDeleteArgsSchema:()=>dye,MenuCategoryDeleteManyArgsSchema:()=>hye,MenuCategoryFindFirstArgsSchema:()=>kre,MenuCategoryFindFirstOrThrowArgsSchema:()=>Rre,MenuCategoryFindManyArgsSchema:()=>d9,MenuCategoryFindUniqueArgsSchema:()=>Mre,MenuCategoryFindUniqueOrThrowArgsSchema:()=>Ore,MenuCategoryGroupByArgsSchema:()=>jre,MenuCategoryIncludeSchema:()=>as,MenuCategoryListRelationFilterSchema:()=>_Z,MenuCategoryMaxOrderByAggregateInputSchema:()=>H6,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>Zw,MenuCategoryMinOrderByAggregateInputSchema:()=>L6,MenuCategoryNullableRelationFilterSchema:()=>EZ,MenuCategoryOrderByRelationAggregateInputSchema:()=>I7,MenuCategoryOrderByWithAggregationInputSchema:()=>UF,MenuCategoryOrderByWithRelationInputSchema:()=>wd,MenuCategoryScalarFieldEnumSchema:()=>Xh,MenuCategoryScalarWhereInputSchema:()=>Ol,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>oI,MenuCategorySchema:()=>eie,MenuCategorySelectSchema:()=>ns,MenuCategorySumOrderByAggregateInputSchema:()=>Z6,MenuCategoryUncheckedCreateInputSchema:()=>Zx,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>zB,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>_u,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>bw,MenuCategoryUncheckedUpdateInputSchema:()=>Qx,MenuCategoryUncheckedUpdateManyInputSchema:()=>_5,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>Nae,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>SB,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>KG,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>aF,MenuCategoryUpdateArgsSchema:()=>mye,MenuCategoryUpdateInputSchema:()=>$x,MenuCategoryUpdateManyArgsSchema:()=>zye,MenuCategoryUpdateManyMutationInputSchema:()=>Gx,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>zk,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>IB,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>bd,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>ite,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>mk,MenuCategoryUpdateWithoutMenuInputSchema:()=>JG,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>tF,MenuCategoryUpsertArgsSchema:()=>uye,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>dk,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>ote,MenuCategoryWhereInputSchema:()=>Tt,MenuCategoryWhereUniqueInputSchema:()=>tt,MenuCountOrderByAggregateInputSchema:()=>g7,MenuCountOutputTypeArgsSchema:()=>qx,MenuCountOutputTypeSelectSchema:()=>P5,MenuCreateArgsSchema:()=>jIe,MenuCreateInputSchema:()=>IL,MenuCreateManyAndReturnArgsSchema:()=>wIe,MenuCreateManyArgsSchema:()=>OIe,MenuCreateManyInputSchema:()=>Zv,MenuCreateManyRestaurantInputEnvelopeSchema:()=>pM,MenuCreateManyRestaurantInputSchema:()=>qE,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>Gi,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>LZ,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>$y,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>B1,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>K2,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>Ym,MenuCreateWithoutMenuCategoryInputSchema:()=>If,MenuCreateWithoutMenuItemsInputSchema:()=>uw,MenuCreateWithoutRestaurantInputSchema:()=>wc,MenuDeleteArgsSchema:()=>TIe,MenuDeleteManyArgsSchema:()=>BIe,MenuFindFirstArgsSchema:()=>Ise,MenuFindFirstOrThrowArgsSchema:()=>gse,MenuFindManyArgsSchema:()=>M9,MenuFindUniqueArgsSchema:()=>Ase,MenuFindUniqueOrThrowArgsSchema:()=>Cse,MenuGroupByArgsSchema:()=>vse,MenuIncludeSchema:()=>wy,MenuItemAggregateArgsSchema:()=>wse,MenuItemArgsSchema:()=>Kr,MenuItemAvgOrderByAggregateInputSchema:()=>O7,MenuItemCountOrderByAggregateInputSchema:()=>M7,MenuItemCountOutputTypeArgsSchema:()=>Fx,MenuItemCountOutputTypeSelectSchema:()=>N5,MenuItemCreateArgsSchema:()=>LIe,MenuItemCreateInputSchema:()=>RL,MenuItemCreateManyAndReturnArgsSchema:()=>QIe,MenuItemCreateManyArgsSchema:()=>$Ie,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>Sf,MenuItemCreateManyCategoryInputSchema:()=>SE,MenuItemCreateManyInputSchema:()=>Qv,MenuItemCreateManyMenuInputEnvelopeSchema:()=>nw,MenuItemCreateManyMenuInputSchema:()=>wD,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>ZZ,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>VP,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>yB,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>So,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>qP,MenuItemCreateNestedOneWithoutLeftoverItemInputSchema:()=>aN,MenuItemCreateNestedOneWithoutMenuItemRecipeInputSchema:()=>l1,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>IK,MenuItemCreateNestedOneWithoutNutritionalRecommendationInputSchema:()=>yK,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>xZ,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>jm,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>qm,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>X1,MenuItemCreateOrConnectWithoutLeftoverItemInputSchema:()=>a2,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>Jz,MenuItemCreateOrConnectWithoutMenuItemRecipeInputSchema:()=>Y2,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>a4,MenuItemCreateOrConnectWithoutNutritionalRecommendationInputSchema:()=>S2,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Cz,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>N1,MenuItemCreateWithoutCategoryInputSchema:()=>Hl,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>cc,MenuItemCreateWithoutFeedbackInputSchema:()=>lj,MenuItemCreateWithoutLeftoverItemInputSchema:()=>mj,MenuItemCreateWithoutMenuInputSchema:()=>Pu,MenuItemCreateWithoutMenuItemRecipeInputSchema:()=>iw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>vw,MenuItemCreateWithoutNutritionalRecommendationInputSchema:()=>Kj,MenuItemCreateWithoutRecipesInputSchema:()=>wp,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>hf,MenuItemCreateallergensInputSchema:()=>ea,MenuItemCreaterecipeIdsInputSchema:()=>Jt,MenuItemCreaterecipeServingsAmountInputSchema:()=>Kt,MenuItemCreaterecipeServingsCostInputSchema:()=>Xt,MenuItemDeleteArgsSchema:()=>GIe,MenuItemDeleteManyArgsSchema:()=>KIe,MenuItemFindFirstArgsSchema:()=>Mse,MenuItemFindFirstOrThrowArgsSchema:()=>Ose,MenuItemFindManyArgsSchema:()=>Hh,MenuItemFindUniqueArgsSchema:()=>Pse,MenuItemFindUniqueOrThrowArgsSchema:()=>Nse,MenuItemGroupByArgsSchema:()=>Tse,MenuItemIncludeSchema:()=>By,MenuItemListRelationFilterSchema:()=>sh,MenuItemMaxOrderByAggregateInputSchema:()=>w7,MenuItemMinOrderByAggregateInputSchema:()=>T7,MenuItemNullableRelationFilterSchema:()=>xR,MenuItemOrderByRelationAggregateInputSchema:()=>PR,MenuItemOrderByWithAggregationInputSchema:()=>hE,MenuItemOrderByWithRelationInputSchema:()=>Fi,MenuItemRecipeAggregateArgsSchema:()=>kse,MenuItemRecipeArgsSchema:()=>bre,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>U7,MenuItemRecipeCountOrderByAggregateInputSchema:()=>W7,MenuItemRecipeCreateArgsSchema:()=>_Ie,MenuItemRecipeCreateInputSchema:()=>CL,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>EIe,MenuItemRecipeCreateManyArgsSchema:()=>FIe,MenuItemRecipeCreateManyInputSchema:()=>$v,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>yw,MenuItemRecipeCreateManyMenuItemInputSchema:()=>PD,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>XM,MenuItemRecipeCreateManyRecipeInputSchema:()=>mD,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Gy,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Uo,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>eh,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>fz,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>Eu,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>xp,MenuItemRecipeDeleteArgsSchema:()=>DIe,MenuItemRecipeDeleteManyArgsSchema:()=>HIe,MenuItemRecipeFindFirstArgsSchema:()=>Wse,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>Use,MenuItemRecipeFindManyArgsSchema:()=>Ew,MenuItemRecipeFindUniqueArgsSchema:()=>fse,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>jse,MenuItemRecipeGroupByArgsSchema:()=>Rse,MenuItemRecipeIncludeSchema:()=>Py,MenuItemRecipeListRelationFilterSchema:()=>JR,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>k7,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>Jw,MenuItemRecipeMinOrderByAggregateInputSchema:()=>R7,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>kZ,MenuItemRecipeOrderByWithAggregationInputSchema:()=>zE,MenuItemRecipeOrderByWithRelationInputSchema:()=>Um,MenuItemRecipeScalarFieldEnumSchema:()=>Vb,MenuItemRecipeScalarWhereInputSchema:()=>wi,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>QI,MenuItemRecipeSchema:()=>Hie,MenuItemRecipeSelectSchema:()=>Ny,MenuItemRecipeSumOrderByAggregateInputSchema:()=>f7,MenuItemRecipeUncheckedCreateInputSchema:()=>WL,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>od,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Fo,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>Du,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>Vp,MenuItemRecipeUncheckedUpdateInputSchema:()=>kL,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>O6,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>_ae,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Ad,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>sae,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>zi,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>a9,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>oG,MenuItemRecipeUpdateArgsSchema:()=>xIe,MenuItemRecipeUpdateInputSchema:()=>UL,MenuItemRecipeUpdateManyArgsSchema:()=>VIe,MenuItemRecipeUpdateManyMutationInputSchema:()=>ET,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>vk,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>JW,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>dd,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>ti,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Sk,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>YW,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>t9,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>nG,MenuItemRecipeUpsertArgsSchema:()=>qIe,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>gk,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>GW,MenuItemRecipeWhereInputSchema:()=>wa,MenuItemRecipeWhereUniqueInputSchema:()=>ve,MenuItemRelationFilterSchema:()=>uh,MenuItemScalarFieldEnumSchema:()=>Hb,MenuItemScalarWhereInputSchema:()=>Yt,MenuItemScalarWhereWithAggregatesInputSchema:()=>GI,MenuItemSchema:()=>Lie,MenuItemSelectSchema:()=>_y,MenuItemSumOrderByAggregateInputSchema:()=>P7,MenuItemUncheckedCreateInputSchema:()=>fL,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>$Z,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>ZP,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>mB,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Po,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Ll,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>pc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>cj,MenuItemUncheckedCreateWithoutLeftoverItemInputSchema:()=>zj,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>Nu,MenuItemUncheckedCreateWithoutMenuItemRecipeInputSchema:()=>rw,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>Aw,MenuItemUncheckedCreateWithoutNutritionalRecommendationInputSchema:()=>Xj,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Tp,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>bf,MenuItemUncheckedUpdateInputSchema:()=>ML,MenuItemUncheckedUpdateManyInputSchema:()=>w6,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>yte,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>YZ,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>vte,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>KP,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>Pae,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>gB,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>rae,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>ui,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>r4,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>W4,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>r_,MenuItemUncheckedUpdateWithoutLeftoverItemInputSchema:()=>y_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>YG,MenuItemUncheckedUpdateWithoutMenuItemRecipeInputSchema:()=>Yq,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>oF,MenuItemUncheckedUpdateWithoutNutritionalRecommendationInputSchema:()=>Q_,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>QQ,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>WB,MenuItemUpdateArgsSchema:()=>YIe,MenuItemUpdateInputSchema:()=>jL,MenuItemUpdateManyArgsSchema:()=>JIe,MenuItemUpdateManyMutationInputSchema:()=>hS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>eA,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>RA,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>yk,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>BW,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>GZ,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>GP,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>bB,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>Yo,MenuItemUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>iN,MenuItemUpdateOneRequiredWithoutMenuItemRecipeNestedInputSchema:()=>p1,MenuItemUpdateOneRequiredWithoutNutritionalRecommendationNestedInputSchema:()=>dK,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>HZ,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>DP,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>gK,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>pX,MenuItemUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>zX,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipeInputSchema:()=>Xee,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>lte,MenuItemUpdateToOneWithWhereWithoutNutritionalRecommendationInputSchema:()=>JX,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>RK,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>Xv,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>kA,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>sk,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>NW,MenuItemUpdateWithoutCategoryInputSchema:()=>i4,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>C4,MenuItemUpdateWithoutFeedbackInputSchema:()=>i_,MenuItemUpdateWithoutLeftoverItemInputSchema:()=>s_,MenuItemUpdateWithoutMenuInputSchema:()=>GG,MenuItemUpdateWithoutMenuItemRecipeInputSchema:()=>Gq,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>nF,MenuItemUpdateWithoutNutritionalRecommendationInputSchema:()=>$_,MenuItemUpdateWithoutRecipesInputSchema:()=>$Q,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>CB,MenuItemUpdateallergensInputSchema:()=>qt,MenuItemUpdaterecipeIdsInputSchema:()=>Nt,MenuItemUpdaterecipeServingsAmountInputSchema:()=>Bt,MenuItemUpdaterecipeServingsCostInputSchema:()=>_t,MenuItemUpsertArgsSchema:()=>ZIe,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>Kv,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>UA,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>uk,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>PW,MenuItemUpsertWithoutFeedbackInputSchema:()=>cX,MenuItemUpsertWithoutLeftoverItemInputSchema:()=>mX,MenuItemUpsertWithoutMenuItemRecipeInputSchema:()=>Kee,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>rte,MenuItemUpsertWithoutNutritionalRecommendationInputSchema:()=>YX,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>kK,MenuItemWhereInputSchema:()=>Ae,MenuItemWhereUniqueInputSchema:()=>R,MenuListRelationFilterSchema:()=>uZ,MenuMaxOrderByAggregateInputSchema:()=>v7,MenuMinOrderByAggregateInputSchema:()=>A7,MenuOrderByRelationAggregateInputSchema:()=>W8,MenuOrderByWithAggregationInputSchema:()=>mE,MenuOrderByWithRelationInputSchema:()=>Vl,MenuRelationFilterSchema:()=>TR,MenuScalarFieldEnumSchema:()=>xb,MenuScalarWhereInputSchema:()=>bl,MenuScalarWhereWithAggregatesInputSchema:()=>$I,MenuSchema:()=>Vie,MenuSelectSchema:()=>Ty,MenuSumOrderByAggregateInputSchema:()=>C7,MenuUncheckedCreateInputSchema:()=>gL,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>gf,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>sw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>Tc,MenuUncheckedUpdateInputSchema:()=>vL,MenuUncheckedUpdateManyInputSchema:()=>M6,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Tte,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>kB,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>eF,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>Q4,MenuUpdateArgsSchema:()=>PIe,MenuUpdateInputSchema:()=>SL,MenuUpdateManyArgsSchema:()=>NIe,MenuUpdateManyMutationInputSchema:()=>AL,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>pC,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>QZ,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>sd,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>jK,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>nte,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>cC,MenuUpdateWithoutMenuCategoryInputSchema:()=>UB,MenuUpdateWithoutMenuItemsInputSchema:()=>Xq,MenuUpdateWithoutRestaurantInputSchema:()=>$4,MenuUpsertArgsSchema:()=>MIe,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>lC,MenuUpsertWithoutMenuCategoryInputSchema:()=>fK,MenuUpsertWithoutMenuItemsInputSchema:()=>ate,MenuWhereInputSchema:()=>Ot,MenuWhereUniqueInputSchema:()=>Xe,NestedBoolFilterSchema:()=>lg,NestedBoolWithAggregatesFilterSchema:()=>h1,NestedDateTimeFilterSchema:()=>ig,NestedDateTimeNullableFilterSchema:()=>cg,NestedDateTimeNullableWithAggregatesFilterSchema:()=>I1,NestedDateTimeWithAggregatesFilterSchema:()=>m1,NestedEnumChecklistFrequencyFilterSchema:()=>sg,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>A1,NestedEnumChecklistItemTypeFilterSchema:()=>yg,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>C1,NestedEnumChecklistStatusFilterSchema:()=>dg,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>W1,NestedEnumConstraintTypeFilterSchema:()=>Ig,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>j1,NestedEnumDayOfWeekFilterSchema:()=>bg,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>f1,NestedEnumEquipmentStatusFilterSchema:()=>pg,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>g1,NestedEnumFeedbackSourceFilterSchema:()=>mg,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>U1,NestedEnumFeedbackStatusFilterSchema:()=>zg,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>k1,NestedEnumMaintenanceTypeFilterSchema:()=>ug,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>S1,NestedEnumOrderStatusFilterSchema:()=>Sg,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>O1,NestedEnumPrepStatusFilterSchema:()=>Ag,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>T1,NestedEnumShiftStatusFilterSchema:()=>vg,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>w1,NestedEnumTaskTypeFilterSchema:()=>hg,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>R1,NestedEnumUserRoleFilterSchema:()=>gg,NestedEnumUserRoleWithAggregatesFilterSchema:()=>M1,NestedFloatFilterSchema:()=>Gr,NestedFloatNullableFilterSchema:()=>Yr,NestedFloatNullableWithAggregatesFilterSchema:()=>v1,NestedFloatWithAggregatesFilterSchema:()=>d1,NestedIntFilterSchema:()=>Pe,NestedIntNullableFilterSchema:()=>mo,NestedIntNullableWithAggregatesFilterSchema:()=>b1,NestedIntWithAggregatesFilterSchema:()=>s1,NestedStringFilterSchema:()=>rg,NestedStringNullableFilterSchema:()=>og,NestedStringNullableWithAggregatesFilterSchema:()=>y1,NestedStringWithAggregatesFilterSchema:()=>z1,NullableDateTimeFieldUpdateOperationsInputSchema:()=>j,NullableFloatFieldUpdateOperationsInputSchema:()=>E,NullableIntFieldUpdateOperationsInputSchema:()=>I,NullableStringFieldUpdateOperationsInputSchema:()=>d,NullsOrderSchema:()=>s5,NutritionalInfoAggregateArgsSchema:()=>Fse,NutritionalInfoArgsSchema:()=>Ex,NutritionalInfoAvgOrderByAggregateInputSchema:()=>B7,NutritionalInfoCountOrderByAggregateInputSchema:()=>N7,NutritionalInfoCreateArgsSchema:()=>XIe,NutritionalInfoCreateInputSchema:()=>OL,NutritionalInfoCreateManyAndReturnArgsSchema:()=>age,NutritionalInfoCreateManyArgsSchema:()=>tge,NutritionalInfoCreateManyInputSchema:()=>Gv,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>Zy,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>pw,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>Eg,NutritionalInfoDeleteArgsSchema:()=>nge,NutritionalInfoDeleteManyArgsSchema:()=>rge,NutritionalInfoFindFirstArgsSchema:()=>Bse,NutritionalInfoFindFirstOrThrowArgsSchema:()=>_se,NutritionalInfoFindManyArgsSchema:()=>qse,NutritionalInfoFindUniqueArgsSchema:()=>Dse,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>xse,NutritionalInfoGroupByArgsSchema:()=>Ese,NutritionalInfoIncludeSchema:()=>qy,NutritionalInfoMaxOrderByAggregateInputSchema:()=>_7,NutritionalInfoMinOrderByAggregateInputSchema:()=>q7,NutritionalInfoNullableRelationFilterSchema:()=>qZ,NutritionalInfoOrderByWithAggregationInputSchema:()=>bE,NutritionalInfoOrderByWithRelationInputSchema:()=>Vd,NutritionalInfoScalarFieldEnumSchema:()=>Lb,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>YI,NutritionalInfoSchema:()=>Zie,NutritionalInfoSelectSchema:()=>Fy,NutritionalInfoSumOrderByAggregateInputSchema:()=>F7,NutritionalInfoUncheckedCreateInputSchema:()=>wL,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>ad,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>Dg,NutritionalInfoUncheckedUpdateInputSchema:()=>PL,NutritionalInfoUncheckedUpdateManyInputSchema:()=>P6,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>Sd,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>Sw,NutritionalInfoUpdateArgsSchema:()=>oge,NutritionalInfoUpdateInputSchema:()=>TL,NutritionalInfoUpdateManyArgsSchema:()=>ige,NutritionalInfoUpdateManyMutationInputSchema:()=>T6,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>ud,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>t4,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>gw,NutritionalInfoUpsertArgsSchema:()=>ege,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>e4,NutritionalInfoWhereInputSchema:()=>Ft,NutritionalInfoWhereUniqueInputSchema:()=>xi,NutritionalRecommendationAggregateArgsSchema:()=>ipe,NutritionalRecommendationArgsSchema:()=>ure,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>c8,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>l8,NutritionalRecommendationCreateArgsSchema:()=>Oze,NutritionalRecommendationCreateInputSchema:()=>q0,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>Pze,NutritionalRecommendationCreateManyArgsSchema:()=>Tze,NutritionalRecommendationCreateManyInputSchema:()=>kv,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>zw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>_D,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Ky,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>nh,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>Zu,NutritionalRecommendationDeleteArgsSchema:()=>Nze,NutritionalRecommendationDeleteManyArgsSchema:()=>qze,NutritionalRecommendationFindFirstArgsSchema:()=>npe,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>ope,NutritionalRecommendationFindManyArgsSchema:()=>A9,NutritionalRecommendationFindUniqueArgsSchema:()=>lpe,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>cpe,NutritionalRecommendationGroupByArgsSchema:()=>rpe,NutritionalRecommendationIncludeSchema:()=>Qs,NutritionalRecommendationListRelationFilterSchema:()=>FZ,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>p8,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>u8,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>j7,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>QF,NutritionalRecommendationOrderByWithRelationInputSchema:()=>bm,NutritionalRecommendationScalarFieldEnumSchema:()=>Ab,NutritionalRecommendationScalarWhereInputSchema:()=>wl,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>RI,NutritionalRecommendationSchema:()=>Cie,NutritionalRecommendationSelectSchema:()=>Gs,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>s8,NutritionalRecommendationUncheckedCreateInputSchema:()=>F0,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>ld,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>$u,NutritionalRecommendationUncheckedUpdateInputSchema:()=>D0,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>l6,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Eae,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Ud,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>c9,NutritionalRecommendationUpdateArgsSchema:()=>Bze,NutritionalRecommendationUpdateInputSchema:()=>E0,NutritionalRecommendationUpdateManyArgsSchema:()=>_ze,NutritionalRecommendationUpdateManyMutationInputSchema:()=>x0,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Mk,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>hd,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>jk,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>l9,NutritionalRecommendationUpsertArgsSchema:()=>wze,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>fk,NutritionalRecommendationWhereInputSchema:()=>Ua,NutritionalRecommendationWhereUniqueInputSchema:()=>vt,OrderAggregateArgsSchema:()=>wue,OrderArgsSchema:()=>Ox,OrderAvgOrderByAggregateInputSchema:()=>NJ,OrderCountOrderByAggregateInputSchema:()=>PJ,OrderCountOutputTypeArgsSchema:()=>wx,OrderCountOutputTypeSelectSchema:()=>M5,OrderCreateArgsSchema:()=>Rbe,OrderCreateInputSchema:()=>EH,OrderCreateManyAndReturnArgsSchema:()=>Mbe,OrderCreateManyArgsSchema:()=>jbe,OrderCreateManyInputSchema:()=>Fv,OrderCreateManyRestaurantInputEnvelopeSchema:()=>lM,OrderCreateManyRestaurantInputSchema:()=>BE,OrderCreateManyVendorInputEnvelopeSchema:()=>DO,OrderCreateManyVendorInputSchema:()=>fD,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>$i,OrderCreateNestedManyWithoutVendorInputSchema:()=>$N,OrderCreateNestedOneWithoutItemsInputSchema:()=>V$,OrderCreateOrConnectWithoutItemsInputSchema:()=>x2,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>Qm,OrderCreateOrConnectWithoutVendorInputSchema:()=>Lz,OrderCreateWithoutItemsInputSchema:()=>_O,OrderCreateWithoutRestaurantInputSchema:()=>fc,OrderCreateWithoutVendorInputSchema:()=>Au,OrderDeleteArgsSchema:()=>Obe,OrderDeleteManyArgsSchema:()=>Pbe,OrderFindFirstArgsSchema:()=>Mue,OrderFindFirstOrThrowArgsSchema:()=>Oue,OrderFindManyArgsSchema:()=>qw,OrderFindUniqueArgsSchema:()=>Pue,OrderFindUniqueOrThrowArgsSchema:()=>Nue,OrderGroupByArgsSchema:()=>Tue,OrderIncludeSchema:()=>Iy,OrderItemAggregateArgsSchema:()=>que,OrderItemArgsSchema:()=>mre,OrderItemAvgOrderByAggregateInputSchema:()=>DJ,OrderItemCountOrderByAggregateInputSchema:()=>EJ,OrderItemCreateArgsSchema:()=>Nbe,OrderItemCreateInputSchema:()=>HH,OrderItemCreateManyAndReturnArgsSchema:()=>qbe,OrderItemCreateManyArgsSchema:()=>_be,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>rO,OrderItemCreateManyIngredientInputSchema:()=>vD,OrderItemCreateManyInputSchema:()=>Ev,OrderItemCreateManyOrderInputEnvelopeSchema:()=>BO,OrderItemCreateManyOrderInputSchema:()=>RD,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>hh,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>DN,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>_z,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>Hz,OrderItemCreateWithoutIngredientInputSchema:()=>ru,OrderItemCreateWithoutOrderInputSchema:()=>Su,OrderItemDeleteArgsSchema:()=>Fbe,OrderItemDeleteManyArgsSchema:()=>xbe,OrderItemFindFirstArgsSchema:()=>Bue,OrderItemFindFirstOrThrowArgsSchema:()=>_ue,OrderItemFindManyArgsSchema:()=>Fw,OrderItemFindUniqueArgsSchema:()=>Eue,OrderItemFindUniqueOrThrowArgsSchema:()=>Due,OrderItemGroupByArgsSchema:()=>Fue,OrderItemIncludeSchema:()=>Sy,OrderItemListRelationFilterSchema:()=>XR,OrderItemMaxOrderByAggregateInputSchema:()=>xJ,OrderItemMinOrderByAggregateInputSchema:()=>VJ,OrderItemOrderByRelationAggregateInputSchema:()=>MZ,OrderItemOrderByWithAggregationInputSchema:()=>cE,OrderItemOrderByWithRelationInputSchema:()=>Am,OrderItemScalarFieldEnumSchema:()=>Bb,OrderItemScalarWhereInputSchema:()=>Pi,OrderItemScalarWhereWithAggregatesInputSchema:()=>DI,OrderItemSchema:()=>_ie,OrderItemSelectSchema:()=>vy,OrderItemSumOrderByAggregateInputSchema:()=>HJ,OrderItemUncheckedCreateInputSchema:()=>LH,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>Wh,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>xN,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>lu,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>vu,OrderItemUncheckedUpdateInputSchema:()=>$H,OrderItemUncheckedUpdateManyInputSchema:()=>W6,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Sae,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Fh,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>Rae,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>ZN,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>AG,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>BG,OrderItemUpdateArgsSchema:()=>Ebe,OrderItemUpdateInputSchema:()=>ZH,OrderItemUpdateManyArgsSchema:()=>Dbe,OrderItemUpdateManyMutationInputSchema:()=>FT,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>WU,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>LU,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>Oh,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>LN,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>CU,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>HU,OrderItemUpdateWithoutIngredientInputSchema:()=>vG,OrderItemUpdateWithoutOrderInputSchema:()=>NG,OrderItemUpsertArgsSchema:()=>Bbe,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>AU,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>VU,OrderItemWhereInputSchema:()=>ja,OrderItemWhereUniqueInputSchema:()=>Se,OrderListRelationFilterSchema:()=>$R,OrderMaxOrderByAggregateInputSchema:()=>BJ,OrderMinOrderByAggregateInputSchema:()=>_J,OrderOrderByRelationAggregateInputSchema:()=>dZ,OrderOrderByWithAggregationInputSchema:()=>lE,OrderOrderByWithRelationInputSchema:()=>Ed,OrderRelationFilterSchema:()=>TZ,OrderScalarFieldEnumSchema:()=>Nb,OrderScalarWhereInputSchema:()=>ji,OrderScalarWhereWithAggregatesInputSchema:()=>EI,OrderSchema:()=>Bie,OrderSelectSchema:()=>gy,OrderStatusSchema:()=>Be,OrderSumOrderByAggregateInputSchema:()=>qJ,OrderUncheckedCreateInputSchema:()=>DH,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>YN,OrderUncheckedCreateWithoutItemsInputSchema:()=>qO,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>jc,OrderUncheckedCreateWithoutVendorInputSchema:()=>Cu,OrderUncheckedUpdateInputSchema:()=>VH,OrderUncheckedUpdateManyInputSchema:()=>C6,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Ote,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>fae,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>aB,OrderUncheckedUpdateWithoutItemsInputSchema:()=>Pq,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>H4,OrderUncheckedUpdateWithoutVendorInputSchema:()=>qG,OrderUpdateArgsSchema:()=>wbe,OrderUpdateInputSchema:()=>xH,OrderUpdateManyArgsSchema:()=>Tbe,OrderUpdateManyMutationInputSchema:()=>qT,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>nC,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>QU,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>XN,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>L$,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>_ee,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>aC,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>$U,OrderUpdateWithoutItemsInputSchema:()=>Tq,OrderUpdateWithoutRestaurantInputSchema:()=>V4,OrderUpdateWithoutVendorInputSchema:()=>_G,OrderUpsertArgsSchema:()=>fbe,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>tC,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>ZU,OrderUpsertWithoutItemsInputSchema:()=>Bee,OrderWhereInputSchema:()=>Lt,OrderWhereUniqueInputSchema:()=>ue,OrganizationAggregateArgsSchema:()=>gpe,OrganizationArgsSchema:()=>SR,OrganizationAvgOrderByAggregateInputSchema:()=>g8,OrganizationCountOrderByAggregateInputSchema:()=>I8,OrganizationCountOutputTypeArgsSchema:()=>vx,OrganizationCountOutputTypeSelectSchema:()=>A5,OrganizationCreateArgsSchema:()=>$ze,OrganizationCreateInputSchema:()=>$0,OrganizationCreateManyAndReturnArgsSchema:()=>Yze,OrganizationCreateManyArgsSchema:()=>Gze,OrganizationCreateManyInputSchema:()=>fv,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Vi,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Ga,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>v2,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>W2,OrganizationCreateWithoutRestaurantsInputSchema:()=>aM,OrganizationCreateWithoutUsersInputSchema:()=>gM,OrganizationDeleteArgsSchema:()=>Jze,OrganizationDeleteManyArgsSchema:()=>ehe,OrganizationFindFirstArgsSchema:()=>hpe,OrganizationFindFirstOrThrowArgsSchema:()=>bpe,OrganizationFindManyArgsSchema:()=>Ipe,OrganizationFindUniqueArgsSchema:()=>vpe,OrganizationFindUniqueOrThrowArgsSchema:()=>Ape,OrganizationGroupByArgsSchema:()=>Spe,OrganizationIncludeSchema:()=>Ys,OrganizationMaxOrderByAggregateInputSchema:()=>S8,OrganizationMinOrderByAggregateInputSchema:()=>v8,OrganizationNullableRelationFilterSchema:()=>ZR,OrganizationOrderByWithAggregationInputSchema:()=>YF,OrganizationOrderByWithRelationInputSchema:()=>El,OrganizationScalarFieldEnumSchema:()=>Wb,OrganizationScalarWhereWithAggregatesInputSchema:()=>jI,OrganizationSchema:()=>Uie,OrganizationSelectSchema:()=>Js,OrganizationSumOrderByAggregateInputSchema:()=>A8,OrganizationUncheckedCreateInputSchema:()=>Q0,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>nM,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>SM,OrganizationUncheckedUpdateInputSchema:()=>Y0,OrganizationUncheckedUpdateManyInputSchema:()=>s6,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>Y_,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>K_,OrganizationUpdateArgsSchema:()=>Kze,OrganizationUpdateInputSchema:()=>G0,OrganizationUpdateManyArgsSchema:()=>Xze,OrganizationUpdateManyMutationInputSchema:()=>u6,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>hr,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Mn,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>XX,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>tee,OrganizationUpdateWithoutRestaurantsInputSchema:()=>G_,OrganizationUpdateWithoutUsersInputSchema:()=>J_,OrganizationUpsertArgsSchema:()=>Qze,OrganizationUpsertWithoutRestaurantsInputSchema:()=>KX,OrganizationUpsertWithoutUsersInputSchema:()=>eee,OrganizationWhereInputSchema:()=>Rt,OrganizationWhereUniqueInputSchema:()=>Bi,PasswordResetAggregateArgsSchema:()=>mse,PasswordResetArgsSchema:()=>hre,PasswordResetAvgOrderByAggregateInputSchema:()=>m7,PasswordResetCountOrderByAggregateInputSchema:()=>d7,PasswordResetCreateArgsSchema:()=>vIe,PasswordResetCreateInputSchema:()=>dL,PasswordResetCreateManyAndReturnArgsSchema:()=>WIe,PasswordResetCreateManyArgsSchema:()=>CIe,PasswordResetCreateManyInputSchema:()=>Lv,PasswordResetCreateManyUserInputEnvelopeSchema:()=>RM,PasswordResetCreateManyUserInputSchema:()=>YE,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>tn,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>cz,PasswordResetCreateWithoutUserInputSchema:()=>ap,PasswordResetDeleteArgsSchema:()=>UIe,PasswordResetDeleteManyArgsSchema:()=>fIe,PasswordResetFindFirstArgsSchema:()=>yse,PasswordResetFindFirstOrThrowArgsSchema:()=>dse,PasswordResetFindManyArgsSchema:()=>j9,PasswordResetFindUniqueArgsSchema:()=>hse,PasswordResetFindUniqueOrThrowArgsSchema:()=>bse,PasswordResetGroupByArgsSchema:()=>zse,PasswordResetIncludeSchema:()=>My,PasswordResetListRelationFilterSchema:()=>IZ,PasswordResetMaxOrderByAggregateInputSchema:()=>z7,PasswordResetMinOrderByAggregateInputSchema:()=>h7,PasswordResetOrderByRelationAggregateInputSchema:()=>P8,PasswordResetOrderByWithAggregationInputSchema:()=>dE,PasswordResetOrderByWithRelationInputSchema:()=>Wm,PasswordResetScalarFieldEnumSchema:()=>Db,PasswordResetScalarWhereInputSchema:()=>Al,PasswordResetScalarWhereWithAggregatesInputSchema:()=>ZI,PasswordResetSchema:()=>xie,PasswordResetSelectSchema:()=>Oy,PasswordResetSumOrderByAggregateInputSchema:()=>b7,PasswordResetUncheckedCreateInputSchema:()=>mL,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>In,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>np,PasswordResetUncheckedUpdateInputSchema:()=>hL,PasswordResetUncheckedUpdateManyInputSchema:()=>j6,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>Lte,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Kn,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>IQ,PasswordResetUpdateArgsSchema:()=>kIe,PasswordResetUpdateInputSchema:()=>zL,PasswordResetUpdateManyArgsSchema:()=>RIe,PasswordResetUpdateManyMutationInputSchema:()=>bL,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>LC,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>Bn,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>HC,PasswordResetUpdateWithoutUserInputSchema:()=>bQ,PasswordResetUpsertArgsSchema:()=>AIe,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>VC,PasswordResetWhereInputSchema:()=>Oa,PasswordResetWhereUniqueInputSchema:()=>Ct,PrepBoardAggregateArgsSchema:()=>ase,PrepBoardArgsSchema:()=>Bx,PrepBoardAvgOrderByAggregateInputSchema:()=>o7,PrepBoardCountOrderByAggregateInputSchema:()=>n7,PrepBoardCountOutputTypeArgsSchema:()=>_x,PrepBoardCountOutputTypeSelectSchema:()=>T5,PrepBoardCreateArgsSchema:()=>iIe,PrepBoardCreateInputSchema:()=>oL,PrepBoardCreateManyAndReturnArgsSchema:()=>cIe,PrepBoardCreateManyArgsSchema:()=>lIe,PrepBoardCreateManyInputSchema:()=>Vv,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>Co,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>iB,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>L2,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>kz,PrepBoardCreateWithoutPrepItemsInputSchema:()=>$O,PrepBoardCreateWithoutRecipesInputSchema:()=>qp,PrepBoardDeleteArgsSchema:()=>pIe,PrepBoardDeleteManyArgsSchema:()=>yIe,PrepBoardFindFirstArgsSchema:()=>ese,PrepBoardFindFirstOrThrowArgsSchema:()=>tse,PrepBoardFindManyArgsSchema:()=>f9,PrepBoardFindUniqueArgsSchema:()=>ose,PrepBoardFindUniqueOrThrowArgsSchema:()=>ise,PrepBoardGroupByArgsSchema:()=>nse,PrepBoardIncludeSchema:()=>ky,PrepBoardListRelationFilterSchema:()=>WZ,PrepBoardMaxOrderByAggregateInputSchema:()=>i7,PrepBoardMinOrderByAggregateInputSchema:()=>r7,PrepBoardOrderByRelationAggregateInputSchema:()=>tJ,PrepBoardOrderByWithAggregationInputSchema:()=>sE,PrepBoardOrderByWithRelationInputSchema:()=>xd,PrepBoardRelationFilterSchema:()=>BZ,PrepBoardScalarFieldEnumSchema:()=>Fb,PrepBoardScalarWhereInputSchema:()=>Rl,PrepBoardScalarWhereWithAggregatesInputSchema:()=>HI,PrepBoardSchema:()=>Eie,PrepBoardSelectSchema:()=>Ry,PrepBoardSumOrderByAggregateInputSchema:()=>l7,PrepBoardUncheckedCreateInputSchema:()=>iL,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>_o,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>QO,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>Fp,PrepBoardUncheckedUpdateInputSchema:()=>lL,PrepBoardUncheckedUpdateManyInputSchema:()=>R6,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>pae,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>di,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>Eq,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>eG,PrepBoardUpdateArgsSchema:()=>uIe,PrepBoardUpdateInputSchema:()=>rL,PrepBoardUpdateManyArgsSchema:()=>sIe,PrepBoardUpdateManyMutationInputSchema:()=>cL,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>LW,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>Xo,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>cB,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Vee,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>HW,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>Fq,PrepBoardUpdateWithoutRecipesInputSchema:()=>XQ,PrepBoardUpsertArgsSchema:()=>rIe,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>VW,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>xee,PrepBoardWhereInputSchema:()=>$t,PrepBoardWhereUniqueInputSchema:()=>it,PrepHistoryAggregateArgsSchema:()=>Jse,PrepHistoryArgsSchema:()=>gre,PrepHistoryAvgOrderByAggregateInputSchema:()=>Z7,PrepHistoryCountOrderByAggregateInputSchema:()=>L7,PrepHistoryCreateArgsSchema:()=>zge,PrepHistoryCreateInputSchema:()=>EL,PrepHistoryCreateManyAndReturnArgsSchema:()=>Ige,PrepHistoryCreateManyArgsSchema:()=>bge,PrepHistoryCreateManyInputSchema:()=>Jv,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>JM,PrepHistoryCreateManyRecipeInputSchema:()=>yD,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>Ao,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Uz,PrepHistoryCreateWithoutRecipeInputSchema:()=>Bp,PrepHistoryDeleteArgsSchema:()=>gge,PrepHistoryDeleteManyArgsSchema:()=>Age,PrepHistoryFindFirstArgsSchema:()=>Gse,PrepHistoryFindFirstOrThrowArgsSchema:()=>Yse,PrepHistoryFindManyArgsSchema:()=>w9,PrepHistoryFindUniqueArgsSchema:()=>Xse,PrepHistoryFindUniqueOrThrowArgsSchema:()=>eye,PrepHistoryGroupByArgsSchema:()=>Kse,PrepHistoryIncludeSchema:()=>xy,PrepHistoryListRelationFilterSchema:()=>CZ,PrepHistoryMaxOrderByAggregateInputSchema:()=>$7,PrepHistoryMinOrderByAggregateInputSchema:()=>Q7,PrepHistoryOrderByRelationAggregateInputSchema:()=>eJ,PrepHistoryOrderByWithAggregationInputSchema:()=>gE,PrepHistoryOrderByWithRelationInputSchema:()=>Rm,PrepHistoryScalarFieldEnumSchema:()=>$b,PrepHistoryScalarWhereInputSchema:()=>kl,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>KI,PrepHistorySchema:()=>Qie,PrepHistorySelectSchema:()=>Vy,PrepHistorySumOrderByAggregateInputSchema:()=>G7,PrepHistoryUncheckedCreateInputSchema:()=>DL,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>_p,PrepHistoryUncheckedUpdateInputSchema:()=>VL,PrepHistoryUncheckedUpdateManyInputSchema:()=>B6,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>cae,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>yi,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>KQ,PrepHistoryUpdateArgsSchema:()=>Sge,PrepHistoryUpdateInputSchema:()=>xL,PrepHistoryUpdateManyArgsSchema:()=>vge,PrepHistoryUpdateManyMutationInputSchema:()=>HL,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>xW,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>Ko,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>DW,PrepHistoryUpdateWithoutRecipeInputSchema:()=>JQ,PrepHistoryUpsertArgsSchema:()=>hge,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>EW,PrepHistoryWhereInputSchema:()=>Pa,PrepHistoryWhereUniqueInputSchema:()=>Ut,PrepItemAggregateArgsSchema:()=>cse,PrepItemArgsSchema:()=>zre,PrepItemAvgOrderByAggregateInputSchema:()=>p7,PrepItemCountOrderByAggregateInputSchema:()=>c7,PrepItemCreateArgsSchema:()=>dIe,PrepItemCreateInputSchema:()=>pL,PrepItemCreateManyAndReturnArgsSchema:()=>hIe,PrepItemCreateManyArgsSchema:()=>zIe,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>WM,PrepItemCreateManyAssignedToInputSchema:()=>$E,PrepItemCreateManyInputSchema:()=>Hv,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>ZO,PrepItemCreateManyPrepBoardInputSchema:()=>OD,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>KM,PrepItemCreateManyRecipeInputSchema:()=>dD,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ka,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>e1,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>Wo,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>iz,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>Yz,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>Rz,PrepItemCreateWithoutAssignedToInputSchema:()=>Yc,PrepItemCreateWithoutPrepBoardInputSchema:()=>wu,PrepItemCreateWithoutRecipeInputSchema:()=>Ep,PrepItemDeleteArgsSchema:()=>bIe,PrepItemDeleteManyArgsSchema:()=>SIe,PrepItemFindFirstArgsSchema:()=>rse,PrepItemFindFirstOrThrowArgsSchema:()=>lse,PrepItemFindManyArgsSchema:()=>Gg,PrepItemFindUniqueArgsSchema:()=>use,PrepItemFindUniqueOrThrowArgsSchema:()=>sse,PrepItemGroupByArgsSchema:()=>pse,PrepItemIncludeSchema:()=>fy,PrepItemListRelationFilterSchema:()=>Pg,PrepItemMaxOrderByAggregateInputSchema:()=>u7,PrepItemMinOrderByAggregateInputSchema:()=>s7,PrepItemOrderByRelationAggregateInputSchema:()=>oP,PrepItemOrderByWithAggregationInputSchema:()=>yE,PrepItemOrderByWithRelationInputSchema:()=>Cm,PrepItemScalarFieldEnumSchema:()=>Eb,PrepItemScalarWhereInputSchema:()=>Ea,PrepItemScalarWhereWithAggregatesInputSchema:()=>LI,PrepItemSchema:()=>Die,PrepItemSelectSchema:()=>jy,PrepItemSumOrderByAggregateInputSchema:()=>y7,PrepItemUncheckedCreateInputSchema:()=>uL,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>zn,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>a1,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>Jc,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>Tu,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>Dp,PrepItemUncheckedUpdateInputSchema:()=>yL,PrepItemUncheckedUpdateManyInputSchema:()=>f6,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>xte,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Gn,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>Tae,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>r1,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>uae,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>mi,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>yQ,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>QG,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>aG,PrepItemUpdateArgsSchema:()=>IIe,PrepItemUpdateInputSchema:()=>sL,PrepItemUpdateManyArgsSchema:()=>gIe,PrepItemUpdateManyMutationInputSchema:()=>wR,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>BC,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>pk,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>QW,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Tn,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>o1,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>ei,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>NC,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>ck,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>$W,PrepItemUpdateWithoutAssignedToInputSchema:()=>sQ,PrepItemUpdateWithoutPrepBoardInputSchema:()=>$G,PrepItemUpdateWithoutRecipeInputSchema:()=>tG,PrepItemUpsertArgsSchema:()=>mIe,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>PC,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>lk,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ZW,PrepItemWhereInputSchema:()=>Ma,PrepItemWhereUniqueInputSchema:()=>G,PrepStatusSchema:()=>oe,ProductionPlanAggregateArgsSchema:()=>uce,ProductionPlanArgsSchema:()=>bx,ProductionPlanAvgOrderByAggregateInputSchema:()=>gY,ProductionPlanCountOrderByAggregateInputSchema:()=>IY,ProductionPlanCountOutputTypeArgsSchema:()=>Ix,ProductionPlanCountOutputTypeSelectSchema:()=>S5,ProductionPlanCreateArgsSchema:()=>vme,ProductionPlanCreateInputSchema:()=>n0,ProductionPlanCreateManyAndReturnArgsSchema:()=>Wme,ProductionPlanCreateManyArgsSchema:()=>Cme,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>MM,ProductionPlanCreateManyCreatedByInputSchema:()=>XE,ProductionPlanCreateManyInputSchema:()=>Iv,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>dM,ProductionPlanCreateManyRestaurantInputSchema:()=>xE,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>on,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>Xi,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>vN,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>sz,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>p2,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>ez,ProductionPlanCreateWithoutCreatedByInputSchema:()=>cp,ProductionPlanCreateWithoutItemsInputSchema:()=>jj,ProductionPlanCreateWithoutRestaurantInputSchema:()=>Ec,ProductionPlanDeleteArgsSchema:()=>Ume,ProductionPlanDeleteManyArgsSchema:()=>fme,ProductionPlanFindFirstArgsSchema:()=>cce,ProductionPlanFindFirstOrThrowArgsSchema:()=>pce,ProductionPlanFindManyArgsSchema:()=>Tw,ProductionPlanFindUniqueArgsSchema:()=>yce,ProductionPlanFindUniqueOrThrowArgsSchema:()=>dce,ProductionPlanGroupByArgsSchema:()=>sce,ProductionPlanIncludeSchema:()=>ws,ProductionPlanItemAggregateArgsSchema:()=>hce,ProductionPlanItemArgsSchema:()=>ore,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>WY,ProductionPlanItemCountOrderByAggregateInputSchema:()=>CY,ProductionPlanItemCreateArgsSchema:()=>jme,ProductionPlanItemCreateInputSchema:()=>l0,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>wme,ProductionPlanItemCreateManyArgsSchema:()=>Ome,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>OM,ProductionPlanItemCreateManyAssignedToInputSchema:()=>eD,ProductionPlanItemCreateManyInputSchema:()=>gv,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>fj,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>ME,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>eO,ProductionPlanItemCreateManyRecipeInputSchema:()=>zD,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>rn,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>zN,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>ko,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>yz,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>xm,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>jz,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>up,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>hc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>Hp,ProductionPlanItemDeleteArgsSchema:()=>Tme,ProductionPlanItemDeleteManyArgsSchema:()=>Bme,ProductionPlanItemFindFirstArgsSchema:()=>mce,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>zce,ProductionPlanItemFindManyArgsSchema:()=>Lg,ProductionPlanItemFindUniqueArgsSchema:()=>Ice,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>gce,ProductionPlanItemGroupByArgsSchema:()=>bce,ProductionPlanItemIncludeSchema:()=>Ps,ProductionPlanItemListRelationFilterSchema:()=>Mg,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>UY,ProductionPlanItemMinOrderByAggregateInputSchema:()=>kY,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>YT,ProductionPlanItemOrderByWithAggregationInputSchema:()=>DF,ProductionPlanItemOrderByWithRelationInputSchema:()=>sm,ProductionPlanItemScalarFieldEnumSchema:()=>zb,ProductionPlanItemScalarWhereInputSchema:()=>Ba,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>SI,ProductionPlanItemSchema:()=>hie,ProductionPlanItemSelectSchema:()=>Ns,ProductionPlanItemSumOrderByAggregateInputSchema:()=>RY,ProductionPlanItemUncheckedCreateInputSchema:()=>c0,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>An,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>hN,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>sp,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>bc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>Lp,ProductionPlanItemUncheckedUpdateInputSchema:()=>u0,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>X5,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Gte,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>ao,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Ute,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>SN,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>yae,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>hi,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>kQ,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>w4,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>rG,ProductionPlanItemUpdateArgsSchema:()=>Pme,ProductionPlanItemUpdateInputSchema:()=>p0,ProductionPlanItemUpdateManyArgsSchema:()=>Nme,ProductionPlanItemUpdateManyMutationInputSchema:()=>fR,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>nW,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>FA,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>eU,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>En,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>gN,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>ai,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>aW,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>qA,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>XW,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>UQ,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>O4,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>iG,ProductionPlanItemUpsertArgsSchema:()=>Mme,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>tW,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>_A,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>KW,ProductionPlanItemWhereInputSchema:()=>ga,ProductionPlanItemWhereUniqueInputSchema:()=>Z,ProductionPlanListRelationFilterSchema:()=>GR,ProductionPlanMaxOrderByAggregateInputSchema:()=>SY,ProductionPlanMinOrderByAggregateInputSchema:()=>vY,ProductionPlanOrderByRelationAggregateInputSchema:()=>zZ,ProductionPlanOrderByWithAggregationInputSchema:()=>EF,ProductionPlanOrderByWithRelationInputSchema:()=>Bd,ProductionPlanRelationFilterSchema:()=>eZ,ProductionPlanScalarFieldEnumSchema:()=>mb,ProductionPlanScalarWhereInputSchema:()=>Oi,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>gI,ProductionPlanSchema:()=>zie,ProductionPlanSelectSchema:()=>Ts,ProductionPlanSumOrderByAggregateInputSchema:()=>AY,ProductionPlanUncheckedCreateInputSchema:()=>o0,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>vn,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>pp,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>Mj,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,ProductionPlanUncheckedUpdateInputSchema:()=>r0,ProductionPlanUncheckedUpdateManyInputSchema:()=>K5,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Qte,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>to,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>_te,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Fr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>WQ,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>k_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>aQ,ProductionPlanUpdateArgsSchema:()=>kme,ProductionPlanUpdateInputSchema:()=>i0,ProductionPlanUpdateManyArgsSchema:()=>Rme,ProductionPlanUpdateManyMutationInputSchema:()=>TT,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>eW,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>vC,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>Fn,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>WN,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>jX,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>XC,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SC,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>CQ,ProductionPlanUpdateWithoutItemsInputSchema:()=>U_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>tQ,ProductionPlanUpsertArgsSchema:()=>Ame,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>KC,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>gC,ProductionPlanUpsertWithoutItemsInputSchema:()=>fX,ProductionPlanWhereInputSchema:()=>xt,ProductionPlanWhereUniqueInputSchema:()=>pe,ProductionStatusSchema:()=>Koe,QualityChecklistAggregateArgsSchema:()=>ole,QualityChecklistArgsSchema:()=>gR,QualityChecklistAvgOrderByAggregateInputSchema:()=>I3,QualityChecklistCountOrderByAggregateInputSchema:()=>b3,QualityChecklistCountOutputTypeArgsSchema:()=>px,QualityChecklistCountOutputTypeSelectSchema:()=>z5,QualityChecklistCreateArgsSchema:()=>Gye,QualityChecklistCreateInputSchema:()=>mV,QualityChecklistCreateManyAndReturnArgsSchema:()=>Kye,QualityChecklistCreateManyArgsSchema:()=>Jye,QualityChecklistCreateManyInputSchema:()=>cv,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>zM,QualityChecklistCreateManyRestaurantInputSchema:()=>HE,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>tr,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>jP,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>t$,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>Z1,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>L1,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>az,QualityChecklistCreateWithoutCompletionsInputSchema:()=>Zf,QualityChecklistCreateWithoutItemsInputSchema:()=>Vf,QualityChecklistCreateWithoutRestaurantInputSchema:()=>Hc,QualityChecklistDeleteArgsSchema:()=>Xye,QualityChecklistDeleteManyArgsSchema:()=>ade,QualityChecklistFindFirstArgsSchema:()=>ale,QualityChecklistFindFirstOrThrowArgsSchema:()=>nle,QualityChecklistFindManyArgsSchema:()=>h9,QualityChecklistFindUniqueArgsSchema:()=>rle,QualityChecklistFindUniqueOrThrowArgsSchema:()=>lle,QualityChecklistGroupByArgsSchema:()=>ile,QualityChecklistIncludeSchema:()=>ys,QualityChecklistListRelationFilterSchema:()=>yZ,QualityChecklistMaxOrderByAggregateInputSchema:()=>g3,QualityChecklistMinOrderByAggregateInputSchema:()=>S3,QualityChecklistOrderByRelationAggregateInputSchema:()=>k8,QualityChecklistOrderByWithAggregationInputSchema:()=>MF,QualityChecklistOrderByWithRelationInputSchema:()=>Fl,QualityChecklistRelationFilterSchema:()=>FR,QualityChecklistScalarFieldEnumSchema:()=>ob,QualityChecklistScalarWhereInputSchema:()=>gl,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>pI,QualityChecklistSchema:()=>iie,QualityChecklistSelectSchema:()=>ds,QualityChecklistSumOrderByAggregateInputSchema:()=>v3,QualityChecklistUncheckedCreateInputSchema:()=>zV,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>mr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>$f,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>Hf,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>Lc,QualityChecklistUncheckedUpdateInputSchema:()=>bV,QualityChecklistUncheckedUpdateManyInputSchema:()=>x5,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Fte,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Dr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>ZB,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>HB,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>rQ,QualityChecklistUpdateArgsSchema:()=>ede,QualityChecklistUpdateInputSchema:()=>hV,QualityChecklistUpdateManyArgsSchema:()=>tde,QualityChecklistUpdateManyMutationInputSchema:()=>IV,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>RC,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>TP,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>o$,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>GK,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>$K,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kC,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>LB,QualityChecklistUpdateWithoutItemsInputSchema:()=>VB,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>iQ,QualityChecklistUpsertArgsSchema:()=>Yye,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>UC,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>QK,QualityChecklistUpsertWithoutItemsInputSchema:()=>ZK,QualityChecklistWhereInputSchema:()=>jt,QualityChecklistWhereUniqueInputSchema:()=>Je,QueryModeSchema:()=>hR,RecipeAggregateArgsSchema:()=>Gpe,RecipeArgsSchema:()=>Ha,RecipeAvgOrderByAggregateInputSchema:()=>oJ,RecipeCountOrderByAggregateInputSchema:()=>nJ,RecipeCountOutputTypeArgsSchema:()=>kx,RecipeCountOutputTypeSelectSchema:()=>k5,RecipeCreateArgsSchema:()=>The,RecipeCreateInputSchema:()=>hH,RecipeCreateManyAndReturnArgsSchema:()=>Bhe,RecipeCreateManyArgsSchema:()=>Nhe,RecipeCreateManyCookBookInputEnvelopeSchema:()=>DM,RecipeCreateManyCookBookInputSchema:()=>cD,RecipeCreateManyInputSchema:()=>Tv,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>cM,RecipeCreateManyRestaurantInputSchema:()=>_E,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>R$,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>HP,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>Qy,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>X$,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>Qi,RecipeCreateNestedManyWithoutTagsInputSchema:()=>K7,RecipeCreateNestedOneWithoutEquipmentInputSchema:()=>JZ,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>SK,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>TN,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>T$,RecipeCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>fN,RecipeCreateNestedOneWithoutMenuItemRecipeInputSchema:()=>c1,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>AK,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>rB,RecipeCreateNestedOneWithoutProductionPlanItemInputSchema:()=>AN,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>bS,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Sz,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Fm,RecipeCreateOrConnectWithoutEquipmentInputSchema:()=>D1,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>n4,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>O2,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>P2,RecipeCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>h2,RecipeCreateOrConnectWithoutMenuItemRecipeInputSchema:()=>J2,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>Xz,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>Gz,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>o4,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>Z2,RecipeCreateOrConnectWithoutProductionPlanItemInputSchema:()=>u2,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Gm,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Dm,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>_1,RecipeCreateWithoutCookBookInputSchema:()=>kp,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>uc,RecipeCreateWithoutEquipmentInputSchema:()=>Tf,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>Cw,RecipeCreateWithoutIngredientsInputSchema:()=>yO,RecipeCreateWithoutInstructionsInputSchema:()=>IO,RecipeCreateWithoutInventoryWithdrawalInputSchema:()=>Vj,RecipeCreateWithoutMenuItemRecipeInputSchema:()=>lw,RecipeCreateWithoutMenuItemsInputSchema:()=>qu,RecipeCreateWithoutPrepBoardsInputSchema:()=>Mu,RecipeCreateWithoutPrepHistoryInputSchema:()=>Uw,RecipeCreateWithoutPrepItemsInputSchema:()=>GO,RecipeCreateWithoutProductionPlanItemInputSchema:()=>Oj,RecipeCreateWithoutRestaurantInputSchema:()=>Mc,RecipeCreateWithoutTagsInputSchema:()=>mc,RecipeCreateWithoutVersionsInputSchema:()=>vf,RecipeCreateimageUrlInputSchema:()=>et,RecipeDeleteArgsSchema:()=>_he,RecipeDeleteManyArgsSchema:()=>Ehe,RecipeEquipmentAggregateArgsSchema:()=>Zre,RecipeEquipmentArgsSchema:()=>Yie,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>r3,RecipeEquipmentCountOrderByAggregateInputSchema:()=>i3,RecipeEquipmentCreateArgsSchema:()=>Tye,RecipeEquipmentCreateInputSchema:()=>iV,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>Bye,RecipeEquipmentCreateManyArgsSchema:()=>Nye,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>Of,RecipeEquipmentCreateManyEquipmentInputSchema:()=>CE,RecipeEquipmentCreateManyInputSchema:()=>rv,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>nO,RecipeEquipmentCreateManyRecipeInputSchema:()=>ID,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>uP,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>Mo,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>wm,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>Tz,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>Yl,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>Kp,RecipeEquipmentDeleteArgsSchema:()=>_ye,RecipeEquipmentDeleteManyArgsSchema:()=>Eye,RecipeEquipmentFindFirstArgsSchema:()=>Hre,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>Lre,RecipeEquipmentFindManyArgsSchema:()=>fw,RecipeEquipmentFindUniqueArgsSchema:()=>Qre,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>Gre,RecipeEquipmentGroupByArgsSchema:()=>$re,RecipeEquipmentIncludeSchema:()=>cs,RecipeEquipmentListRelationFilterSchema:()=>BR,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>l3,RecipeEquipmentMinOrderByAggregateInputSchema:()=>c3,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>$L,RecipeEquipmentOrderByWithAggregationInputSchema:()=>fF,RecipeEquipmentOrderByWithRelationInputSchema:()=>nm,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>Qw,RecipeEquipmentScalarFieldEnumSchema:()=>ab,RecipeEquipmentScalarWhereInputSchema:()=>Ci,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>lI,RecipeEquipmentSchema:()=>nie,RecipeEquipmentSelectSchema:()=>ps,RecipeEquipmentSumOrderByAggregateInputSchema:()=>p3,RecipeEquipmentUncheckedCreateInputSchema:()=>rV,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>yP,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>Jl,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>Xp,RecipeEquipmentUncheckedUpdateInputSchema:()=>cV,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>E5,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>zte,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>bP,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>hae,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Si,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>y4,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>mG,RecipeEquipmentUpdateArgsSchema:()=>qye,RecipeEquipmentUpdateInputSchema:()=>lV,RecipeEquipmentUpdateManyArgsSchema:()=>Fye,RecipeEquipmentUpdateManyMutationInputSchema:()=>fT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>pA,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>yU,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>zP,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>ri,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>cA,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>sU,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>s4,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>dG,RecipeEquipmentUpsertArgsSchema:()=>Pye,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>lA,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>uU,RecipeEquipmentWhereInputSchema:()=>sa,RecipeEquipmentWhereUniqueInputSchema:()=>ze,RecipeFindFirstArgsSchema:()=>$pe,RecipeFindFirstOrThrowArgsSchema:()=>Qpe,RecipeFindManyArgsSchema:()=>ol,RecipeFindUniqueArgsSchema:()=>Jpe,RecipeFindUniqueOrThrowArgsSchema:()=>Kpe,RecipeGroupByArgsSchema:()=>Ype,RecipeIncludeSchema:()=>ry,RecipeIngredientAggregateArgsSchema:()=>lue,RecipeIngredientArgsSchema:()=>yre,RecipeIngredientAvgOrderByAggregateInputSchema:()=>zJ,RecipeIngredientCountOrderByAggregateInputSchema:()=>mJ,RecipeIngredientCreateArgsSchema:()=>Ghe,RecipeIngredientCreateInputSchema:()=>WH,RecipeIngredientCreateManyAndReturnArgsSchema:()=>Khe,RecipeIngredientCreateManyArgsSchema:()=>Jhe,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>oO,RecipeIngredientCreateManyIngredientInputSchema:()=>gD,RecipeIngredientCreateManyInputSchema:()=>Nv,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>QM,RecipeIngredientCreateManyRecipeInputSchema:()=>pD,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>Cf,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>vE,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>mh,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>Io,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>IS,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>Nz,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>vz,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>Mm,RecipeIngredientCreateWithoutIngredientInputSchema:()=>au,RecipeIngredientCreateWithoutRecipeInputSchema:()=>fp,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>Zl,RecipeIngredientDeleteArgsSchema:()=>Xhe,RecipeIngredientDeleteManyArgsSchema:()=>abe,RecipeIngredientFindFirstArgsSchema:()=>iue,RecipeIngredientFindFirstOrThrowArgsSchema:()=>rue,RecipeIngredientFindManyArgsSchema:()=>$g,RecipeIngredientFindUniqueArgsSchema:()=>pue,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>uue,RecipeIngredientGroupByArgsSchema:()=>cue,RecipeIngredientIncludeSchema:()=>uy,RecipeIngredientListRelationFilterSchema:()=>fg,RecipeIngredientMaxOrderByAggregateInputSchema:()=>hJ,RecipeIngredientMinOrderByAggregateInputSchema:()=>bJ,RecipeIngredientOrderByRelationAggregateInputSchema:()=>DT,RecipeIngredientOrderByWithAggregationInputSchema:()=>nE,RecipeIngredientOrderByWithRelationInputSchema:()=>Sm,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>Gw,RecipeIngredientScalarFieldEnumSchema:()=>Ob,RecipeIngredientScalarWhereInputSchema:()=>Na,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>BI,RecipeIngredientSchema:()=>wie,RecipeIngredientSelectSchema:()=>sy,RecipeIngredientSumOrderByAggregateInputSchema:()=>IJ,RecipeIngredientUncheckedCreateInputSchema:()=>UH,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>Ah,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>AS,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>nu,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>jp,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>$l,RecipeIngredientUncheckedUpdateInputSchema:()=>RH,RecipeIngredientUncheckedUpdateManyInputSchema:()=>I6,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>Iae,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>_h,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>oae,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>ci,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>dte,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>jS,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>IG,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>HQ,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>c4,RecipeIngredientUpdateArgsSchema:()=>ebe,RecipeIngredientUpdateInputSchema:()=>kH,RecipeIngredientUpdateManyArgsSchema:()=>tbe,RecipeIngredientUpdateManyMutationInputSchema:()=>MR,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>IU,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>MW,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>nA,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>jh,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>Qo,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>US,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>bU,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>jW,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>aA,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>bG,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>VQ,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>l4,RecipeIngredientUpsertArgsSchema:()=>Yhe,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>hU,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>fW,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>tA,RecipeIngredientWhereInputSchema:()=>Ra,RecipeIngredientWhereUniqueInputSchema:()=>Q,RecipeInstructionAggregateArgsSchema:()=>due,RecipeInstructionArgsSchema:()=>dre,RecipeInstructionAvgOrderByAggregateInputSchema:()=>SJ,RecipeInstructionCountOrderByAggregateInputSchema:()=>gJ,RecipeInstructionCreateArgsSchema:()=>nbe,RecipeInstructionCreateInputSchema:()=>fH,RecipeInstructionCreateManyAndReturnArgsSchema:()=>rbe,RecipeInstructionCreateManyArgsSchema:()=>ibe,RecipeInstructionCreateManyInputSchema:()=>Bv,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>GM,RecipeInstructionCreateManyRecipeInputSchema:()=>uD,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>Wf,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>AE,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>go,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>gS,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Az,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>Om,RecipeInstructionCreateWithoutRecipeInputSchema:()=>Mp,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>Ql,RecipeInstructionDeleteArgsSchema:()=>lbe,RecipeInstructionDeleteManyArgsSchema:()=>ube,RecipeInstructionFindFirstArgsSchema:()=>sue,RecipeInstructionFindFirstOrThrowArgsSchema:()=>yue,RecipeInstructionFindManyArgsSchema:()=>_w,RecipeInstructionFindUniqueArgsSchema:()=>zue,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>hue,RecipeInstructionGroupByArgsSchema:()=>mue,RecipeInstructionIncludeSchema:()=>yy,RecipeInstructionListRelationFilterSchema:()=>NR,RecipeInstructionMaxOrderByAggregateInputSchema:()=>vJ,RecipeInstructionMinOrderByAggregateInputSchema:()=>AJ,RecipeInstructionOrderByRelationAggregateInputSchema:()=>LL,RecipeInstructionOrderByWithAggregationInputSchema:()=>oE,RecipeInstructionOrderByWithRelationInputSchema:()=>vm,RecipeInstructionRecipeIdStepNumberCompoundUniqueInputSchema:()=>Yw,RecipeInstructionScalarFieldEnumSchema:()=>wb,RecipeInstructionScalarWhereInputSchema:()=>Ai,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>_I,RecipeInstructionSchema:()=>Tie,RecipeInstructionSelectSchema:()=>dy,RecipeInstructionSumOrderByAggregateInputSchema:()=>CJ,RecipeInstructionUncheckedCreateInputSchema:()=>jH,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>To,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>CS,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Op,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>Gl,RecipeInstructionUncheckedUpdateInputSchema:()=>OH,RecipeInstructionUncheckedUpdateManyInputSchema:()=>g6,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>iae,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>pi,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>mte,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>MS,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>ZQ,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>u4,RecipeInstructionUpdateArgsSchema:()=>cbe,RecipeInstructionUpdateInputSchema:()=>MH,RecipeInstructionUpdateManyArgsSchema:()=>pbe,RecipeInstructionUpdateManyMutationInputSchema:()=>_T,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>TW,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>rA,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>Go,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>kS,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>wW,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>iA,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>LQ,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>p4,RecipeInstructionUpsertArgsSchema:()=>obe,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>OW,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>oA,RecipeInstructionWhereInputSchema:()=>fa,RecipeInstructionWhereUniqueInputSchema:()=>ge,RecipeListRelationFilterSchema:()=>tl,RecipeMaxOrderByAggregateInputSchema:()=>iJ,RecipeMinOrderByAggregateInputSchema:()=>rJ,RecipeNullableRelationFilterSchema:()=>nZ,RecipeOrderByRelationAggregateInputSchema:()=>jg,RecipeOrderByWithAggregationInputSchema:()=>tE,RecipeOrderByWithRelationInputSchema:()=>$a,RecipeRelationFilterSchema:()=>Qa,RecipeScalarFieldEnumSchema:()=>jb,RecipeScalarWhereInputSchema:()=>rt,RecipeScalarWhereWithAggregatesInputSchema:()=>PI,RecipeSchema:()=>Mie,RecipeSelectSchema:()=>ly,RecipeSumOrderByAggregateInputSchema:()=>lJ,RecipeTagAggregateArgsSchema:()=>Zle,RecipeTagArgsSchema:()=>tre,RecipeTagAvgOrderByAggregateInputSchema:()=>oY,RecipeTagCountOrderByAggregateInputSchema:()=>nY,RecipeTagCountOutputTypeArgsSchema:()=>hx,RecipeTagCountOutputTypeSelectSchema:()=>g5,RecipeTagCreateArgsSchema:()=>Jde,RecipeTagCreateInputSchema:()=>HV,RecipeTagCreateManyAndReturnArgsSchema:()=>eme,RecipeTagCreateManyArgsSchema:()=>Xde,RecipeTagCreateManyInputSchema:()=>zv,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>fo,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>Oz,RecipeTagCreateWithoutRecipesInputSchema:()=>Qp,RecipeTagDeleteArgsSchema:()=>tme,RecipeTagDeleteManyArgsSchema:()=>ome,RecipeTagFindFirstArgsSchema:()=>Hle,RecipeTagFindFirstOrThrowArgsSchema:()=>Lle,RecipeTagFindManyArgsSchema:()=>I9,RecipeTagFindUniqueArgsSchema:()=>Qle,RecipeTagFindUniqueOrThrowArgsSchema:()=>Gle,RecipeTagGroupByArgsSchema:()=>$le,RecipeTagIncludeSchema:()=>ks,RecipeTagListRelationFilterSchema:()=>UZ,RecipeTagMaxOrderByAggregateInputSchema:()=>iY,RecipeTagMinOrderByAggregateInputSchema:()=>rY,RecipeTagOrderByRelationAggregateInputSchema:()=>aJ,RecipeTagOrderByWithAggregationInputSchema:()=>_F,RecipeTagOrderByWithRelationInputSchema:()=>cm,RecipeTagScalarFieldEnumSchema:()=>sb,RecipeTagScalarWhereInputSchema:()=>fl,RecipeTagScalarWhereWithAggregatesInputSchema:()=>hI,RecipeTagSchema:()=>yie,RecipeTagSelectSchema:()=>Rs,RecipeTagSumOrderByAggregateInputSchema:()=>lY,RecipeTagUncheckedCreateInputSchema:()=>LV,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>xo,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>Gp,RecipeTagUncheckedUpdateInputSchema:()=>$V,RecipeTagUncheckedUpdateManyInputSchema:()=>G5,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>mae,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Ii,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>uG,RecipeTagUpdateArgsSchema:()=>ame,RecipeTagUpdateInputSchema:()=>ZV,RecipeTagUpdateManyArgsSchema:()=>nme,RecipeTagUpdateManyMutationInputSchema:()=>QV,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>rU,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>oi,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>iU,RecipeTagUpdateWithoutRecipesInputSchema:()=>pG,RecipeTagUpsertArgsSchema:()=>Kde,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>oU,RecipeTagWhereInputSchema:()=>ha,RecipeTagWhereUniqueInputSchema:()=>bt,RecipeUncheckedCreateInputSchema:()=>bH,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>j$,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>$P,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>nd,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>t1,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>X7,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Rp,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>sc,RecipeUncheckedCreateWithoutEquipmentInputSchema:()=>Pf,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>Ww,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>dO,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>gO,RecipeUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>Hj,RecipeUncheckedCreateWithoutMenuItemRecipeInputSchema:()=>cw,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>Fu,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>Ou,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>kw,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>YO,RecipeUncheckedCreateWithoutProductionPlanItemInputSchema:()=>wj,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Oc,RecipeUncheckedCreateWithoutTagsInputSchema:()=>zc,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>Af,RecipeUncheckedUpdateInputSchema:()=>gH,RecipeUncheckedUpdateManyInputSchema:()=>h6,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>nae,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>w$,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Ate,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>XP,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>Bae,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>vd,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>wae,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>i1,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>wte,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Wte,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>tK,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>xQ,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>k4,RecipeUncheckedUpdateWithoutEquipmentInputSchema:()=>BB,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>rF,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>yq,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>Iq,RecipeUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>E_,RecipeUncheckedUpdateWithoutMenuItemRecipeInputSchema:()=>Kq,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>e9,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>ZG,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>cF,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>xq,RecipeUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>f_,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>Z4,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>M4,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>fB,RecipeUpdateArgsSchema:()=>qhe,RecipeUpdateInputSchema:()=>IH,RecipeUpdateManyArgsSchema:()=>Fhe,RecipeUpdateManyMutationInputSchema:()=>Kb,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>RW,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>MA,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Ik,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>rk,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>rC,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>BA,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>M$,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>YP,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>yd,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>n1,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>eK,RecipeUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>XZ,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>vK,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>BN,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>N$,RecipeUpdateOneRequiredWithoutMenuItemRecipeNestedInputSchema:()=>u1,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>CK,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>pB,RecipeUpdateOneRequiredWithoutProductionPlanItemNestedInputSchema:()=>UN,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>WS,RecipeUpdateOneWithoutInventoryWithdrawalNestedInputSchema:()=>ON,RecipeUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>FK,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>pte,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>zee,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>vee,RecipeUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>VX,RecipeUpdateToOneWithWhereWithoutMenuItemRecipeInputSchema:()=>tte,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>ste,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Lee,RecipeUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>OX,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>OK,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>kW,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>jA,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>bk,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>ik,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>iC,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>NA,RecipeUpdateWithoutCookBookInputSchema:()=>DQ,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>U4,RecipeUpdateWithoutEquipmentInputSchema:()=>NB,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>iF,RecipeUpdateWithoutIngredientsInputSchema:()=>sq,RecipeUpdateWithoutInstructionsInputSchema:()=>bq,RecipeUpdateWithoutInventoryWithdrawalInputSchema:()=>F_,RecipeUpdateWithoutMenuItemRecipeInputSchema:()=>Jq,RecipeUpdateWithoutMenuItemsInputSchema:()=>XG,RecipeUpdateWithoutPrepBoardsInputSchema:()=>LG,RecipeUpdateWithoutPrepHistoryInputSchema:()=>lF,RecipeUpdateWithoutPrepItemsInputSchema:()=>Dq,RecipeUpdateWithoutProductionPlanItemInputSchema:()=>R_,RecipeUpdateWithoutRestaurantInputSchema:()=>L4,RecipeUpdateWithoutTagsInputSchema:()=>j4,RecipeUpdateWithoutVersionsInputSchema:()=>RB,RecipeUpdateimageUrlInputSchema:()=>Ee,RecipeUpsertArgsSchema:()=>Phe,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>UW,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>fA,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>hk,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>ok,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>oC,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>PA,RecipeUpsertWithoutEquipmentInputSchema:()=>qK,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>cte,RecipeUpsertWithoutIngredientsInputSchema:()=>mee,RecipeUpsertWithoutInstructionsInputSchema:()=>See,RecipeUpsertWithoutInventoryWithdrawalInputSchema:()=>xX,RecipeUpsertWithoutMenuItemRecipeInputSchema:()=>ete,RecipeUpsertWithoutPrepHistoryInputSchema:()=>ute,RecipeUpsertWithoutPrepItemsInputSchema:()=>Hee,RecipeUpsertWithoutProductionPlanItemInputSchema:()=>MX,RecipeUpsertWithoutVersionsInputSchema:()=>MK,RecipeVersionAggregateArgsSchema:()=>Pre,RecipeVersionArgsSchema:()=>bR,RecipeVersionAvgOrderByAggregateInputSchema:()=>Q6,RecipeVersionCountOrderByAggregateInputSchema:()=>$6,RecipeVersionCountOutputTypeArgsSchema:()=>lx,RecipeVersionCountOutputTypeSelectSchema:()=>d5,RecipeVersionCreateArgsSchema:()=>bye,RecipeVersionCreateInputSchema:()=>Yx,RecipeVersionCreateManyAndReturnArgsSchema:()=>Sye,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>qM,RecipeVersionCreateManyApprovedByInputSchema:()=>lD,RecipeVersionCreateManyArgsSchema:()=>gye,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>_M,RecipeVersionCreateManyCreatedByInputSchema:()=>rD,RecipeVersionCreateManyInputSchema:()=>ov,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>aO,RecipeVersionCreateManyRecipeInputSchema:()=>bD,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>dn,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>yn,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>jo,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>NN,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>P$,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>gz,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Iz,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>T2,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>N2,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>wz,RecipeVersionCreateWithoutApprovedByInputSchema:()=>Wp,RecipeVersionCreateWithoutCreatedByInputSchema:()=>Ap,RecipeVersionCreateWithoutIngredientsInputSchema:()=>hO,RecipeVersionCreateWithoutInstructionsInputSchema:()=>SO,RecipeVersionCreateWithoutRecipeInputSchema:()=>Yp,RecipeVersionDeleteArgsSchema:()=>vye,RecipeVersionDeleteManyArgsSchema:()=>Wye,RecipeVersionFindFirstArgsSchema:()=>wre,RecipeVersionFindFirstOrThrowArgsSchema:()=>Tre,RecipeVersionFindManyArgsSchema:()=>Cg,RecipeVersionFindUniqueArgsSchema:()=>Bre,RecipeVersionFindUniqueOrThrowArgsSchema:()=>_re,RecipeVersionGroupByArgsSchema:()=>Nre,RecipeVersionIncludeSchema:()=>os,RecipeVersionListRelationFilterSchema:()=>ng,RecipeVersionMaxOrderByAggregateInputSchema:()=>G6,RecipeVersionMinOrderByAggregateInputSchema:()=>Y6,RecipeVersionNullableRelationFilterSchema:()=>tf,RecipeVersionOrderByRelationAggregateInputSchema:()=>uT,RecipeVersionOrderByWithAggregationInputSchema:()=>kF,RecipeVersionOrderByWithRelationInputSchema:()=>_l,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>$w,RecipeVersionScalarFieldEnumSchema:()=>eb,RecipeVersionScalarWhereInputSchema:()=>Va,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>iI,RecipeVersionSchema:()=>tie,RecipeVersionSelectSchema:()=>is,RecipeVersionSumOrderByAggregateInputSchema:()=>J6,RecipeVersionUncheckedCreateInputSchema:()=>Jx,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>jn,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>fn,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Vo,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Up,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>Cp,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>bO,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>vO,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>Jp,RecipeVersionUncheckedUpdateInputSchema:()=>Xx,RecipeVersionUncheckedUpdateManyInputSchema:()=>q5,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>aae,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>po,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>tae,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>co,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>zae,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>gi,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>EQ,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>qQ,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>hq,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>Sq,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>yG,RecipeVersionUpdateArgsSchema:()=>Aye,RecipeVersionUpdateInputSchema:()=>Kx,RecipeVersionUpdateManyArgsSchema:()=>Cye,RecipeVersionUpdateManyMutationInputSchema:()=>WR,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>WW,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>vW,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>pU,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>$n,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Zn,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>ii,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>qN,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>B$,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>gee,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>Cee,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>CW,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>SW,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>cU,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>FQ,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>_Q,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>zq,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>gq,RecipeVersionUpdateWithoutRecipeInputSchema:()=>sG,RecipeVersionUpsertArgsSchema:()=>Iye,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>AW,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>gW,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>lU,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>Iee,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>Aee,RecipeVersionWhereInputSchema:()=>st,RecipeVersionWhereUniqueInputSchema:()=>q,RecipeWhereInputSchema:()=>ie,RecipeWhereUniqueInputSchema:()=>v,RestaurantAggregateArgsSchema:()=>Upe,RestaurantArgsSchema:()=>Qt,RestaurantAvgOrderByAggregateInputSchema:()=>f8,RestaurantCountOrderByAggregateInputSchema:()=>R8,RestaurantCountOutputTypeArgsSchema:()=>Ax,RestaurantCountOutputTypeSelectSchema:()=>C5,RestaurantCreateArgsSchema:()=>the,RestaurantCreateInputSchema:()=>J0,RestaurantCreateManyAndReturnArgsSchema:()=>ohe,RestaurantCreateManyArgsSchema:()=>nhe,RestaurantCreateManyInputSchema:()=>jv,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>eM,RestaurantCreateManyOrganizationInputSchema:()=>wE,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>g$,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>f$,RestaurantCreateNestedOneWithoutEquipmentInputSchema:()=>pP,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>_$,RestaurantCreateNestedOneWithoutLeftoverItemInputSchema:()=>tN,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>sB,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>FN,RestaurantCreateNestedOneWithoutProductionPlanInputSchema:()=>dN,RestaurantCreateNestedOneWithoutQualityChecklistInputSchema:()=>gP,RestaurantCreateNestedOneWithoutQustomerFeedbackInputSchema:()=>_P,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>ho,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>DZ,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Ya,RestaurantCreateNestedOneWithoutWasteRecordInputSchema:()=>lN,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>R2,RestaurantCreateOrConnectWithoutEquipmentInputSchema:()=>E1,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>B2,RestaurantCreateOrConnectWithoutLeftoverItemInputSchema:()=>t2,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>G2,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>E2,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Hm,RestaurantCreateOrConnectWithoutProductionPlanInputSchema:()=>l2,RestaurantCreateOrConnectWithoutQualityChecklistInputSchema:()=>H1,RestaurantCreateOrConnectWithoutQustomerFeedbackInputSchema:()=>K1,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>f2,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>P1,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>U2,RestaurantCreateOrConnectWithoutWasteRecordInputSchema:()=>o2,RestaurantCreateWithoutCookbooksInputSchema:()=>xM,RestaurantCreateWithoutEquipmentInputSchema:()=>jf,RestaurantCreateWithoutInventoryInputSchema:()=>AO,RestaurantCreateWithoutLeftoverItemInputSchema:()=>yj,RestaurantCreateWithoutMenusInputSchema:()=>tw,RestaurantCreateWithoutOrdersInputSchema:()=>wO,RestaurantCreateWithoutOrganizationInputSchema:()=>Sc,RestaurantCreateWithoutProductionPlanInputSchema:()=>Wj,RestaurantCreateWithoutQualityChecklistInputSchema:()=>Ff,RestaurantCreateWithoutQustomerFeedbackInputSchema:()=>ij,RestaurantCreateWithoutRecipesInputSchema:()=>HM,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>mf,RestaurantCreateWithoutUsersInputSchema:()=>vM,RestaurantCreateWithoutWasteRecordInputSchema:()=>Ij,RestaurantDeleteArgsSchema:()=>ihe,RestaurantDeleteManyArgsSchema:()=>che,RestaurantFindFirstArgsSchema:()=>Cpe,RestaurantFindFirstOrThrowArgsSchema:()=>Wpe,RestaurantFindManyArgsSchema:()=>C9,RestaurantFindUniqueArgsSchema:()=>Rpe,RestaurantFindUniqueOrThrowArgsSchema:()=>fpe,RestaurantGroupByArgsSchema:()=>kpe,RestaurantIncludeSchema:()=>Ks,RestaurantListRelationFilterSchema:()=>rZ,RestaurantMaxOrderByAggregateInputSchema:()=>j8,RestaurantMinOrderByAggregateInputSchema:()=>M8,RestaurantNullableRelationFilterSchema:()=>YR,RestaurantOrderByRelationAggregateInputSchema:()=>b8,RestaurantOrderByWithAggregationInputSchema:()=>JF,RestaurantOrderByWithRelationInputSchema:()=>ca,RestaurantRelationFilterSchema:()=>ia,RestaurantScalarFieldEnumSchema:()=>Ub,RestaurantScalarWhereInputSchema:()=>zl,RestaurantScalarWhereWithAggregatesInputSchema:()=>MI,RestaurantSchema:()=>kie,RestaurantSelectSchema:()=>Xs,RestaurantSumOrderByAggregateInputSchema:()=>O8,RestaurantUncheckedCreateInputSchema:()=>K0,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>v$,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>VM,RestaurantUncheckedCreateWithoutEquipmentInputSchema:()=>Mf,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>CO,RestaurantUncheckedCreateWithoutLeftoverItemInputSchema:()=>dj,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>aw,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>TO,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>vc,RestaurantUncheckedCreateWithoutProductionPlanInputSchema:()=>Uj,RestaurantUncheckedCreateWithoutQualityChecklistInputSchema:()=>Ef,RestaurantUncheckedCreateWithoutQustomerFeedbackInputSchema:()=>rj,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>LM,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>zf,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>AM,RestaurantUncheckedCreateWithoutWasteRecordInputSchema:()=>gj,RestaurantUncheckedUpdateInputSchema:()=>eH,RestaurantUncheckedUpdateManyInputSchema:()=>y6,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Rte,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>U$,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>oq,RestaurantUncheckedUpdateWithoutEquipmentInputSchema:()=>PB,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>Aq,RestaurantUncheckedUpdateWithoutLeftoverItemInputSchema:()=>u_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>Qq,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>Mq,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>B4,RestaurantUncheckedUpdateWithoutProductionPlanInputSchema:()=>A_,RestaurantUncheckedUpdateWithoutQualityChecklistInputSchema:()=>xB,RestaurantUncheckedUpdateWithoutQustomerFeedbackInputSchema:()=>o_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>rq,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>AB,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>eq,RestaurantUncheckedUpdateWithoutWasteRecordInputSchema:()=>h_,RestaurantUpdateArgsSchema:()=>rhe,RestaurantUpdateInputSchema:()=>X0,RestaurantUpdateManyArgsSchema:()=>lhe,RestaurantUpdateManyMutationInputSchema:()=>tH,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>LA,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>C$,RestaurantUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>mP,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>E$,RestaurantUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>oN,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>hB,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>VN,RestaurantUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>bN,RestaurantUpdateOneRequiredWithoutQualityChecklistNestedInputSchema:()=>WP,RestaurantUpdateOneRequiredWithoutQustomerFeedbackNestedInputSchema:()=>EP,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>Zo,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>VZ,RestaurantUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>uN,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>O$,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>On,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>lee,RestaurantUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>_K,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Uee,RestaurantUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>dX,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>Jee,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Tee,RestaurantUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>UX,RestaurantUpdateToOneWithWhereWithoutQualityChecklistInputSchema:()=>LK,RestaurantUpdateToOneWithWhereWithoutQustomerFeedbackInputSchema:()=>lX,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>pee,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>UK,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>nee,RestaurantUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>gX,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>HA,RestaurantUpdateWithoutCookbooksInputSchema:()=>nq,RestaurantUpdateWithoutEquipmentInputSchema:()=>TB,RestaurantUpdateWithoutInventoryInputSchema:()=>vq,RestaurantUpdateWithoutLeftoverItemInputSchema:()=>p_,RestaurantUpdateWithoutMenusInputSchema:()=>$q,RestaurantUpdateWithoutOrdersInputSchema:()=>jq,RestaurantUpdateWithoutOrganizationInputSchema:()=>N4,RestaurantUpdateWithoutProductionPlanInputSchema:()=>v_,RestaurantUpdateWithoutQualityChecklistInputSchema:()=>DB,RestaurantUpdateWithoutQustomerFeedbackInputSchema:()=>n_,RestaurantUpdateWithoutRecipesInputSchema:()=>iq,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>vB,RestaurantUpdateWithoutUsersInputSchema:()=>X_,RestaurantUpdateWithoutWasteRecordInputSchema:()=>z_,RestaurantUpsertArgsSchema:()=>ahe,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>VA,RestaurantUpsertWithoutCookbooksInputSchema:()=>ree,RestaurantUpsertWithoutEquipmentInputSchema:()=>BK,RestaurantUpsertWithoutInventoryInputSchema:()=>Wee,RestaurantUpsertWithoutLeftoverItemInputSchema:()=>yX,RestaurantUpsertWithoutMenusInputSchema:()=>Yee,RestaurantUpsertWithoutOrdersInputSchema:()=>wee,RestaurantUpsertWithoutProductionPlanInputSchema:()=>WX,RestaurantUpsertWithoutQualityChecklistInputSchema:()=>HK,RestaurantUpsertWithoutQustomerFeedbackInputSchema:()=>rX,RestaurantUpsertWithoutRecipesInputSchema:()=>cee,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>WK,RestaurantUpsertWithoutUsersInputSchema:()=>aee,RestaurantUpsertWithoutWasteRecordInputSchema:()=>IX,RestaurantWhereInputSchema:()=>x,RestaurantWhereUniqueInputSchema:()=>ee,SalesTransactionsAggregateArgsSchema:()=>Are,SalesTransactionsArgsSchema:()=>Gie,SalesTransactionsAvgOrderByAggregateInputSchema:()=>q6,SalesTransactionsCountOrderByAggregateInputSchema:()=>_6,SalesTransactionsCreateArgsSchema:()=>tye,SalesTransactionsCreateInputSchema:()=>Dx,SalesTransactionsCreateManyAndReturnArgsSchema:()=>oye,SalesTransactionsCreateManyArgsSchema:()=>nye,SalesTransactionsCreateManyInputSchema:()=>av,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>dw,SalesTransactionsCreateManyMenuItemInputSchema:()=>ND,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>uM,SalesTransactionsCreateManyRestaurantInputSchema:()=>FE,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Yy,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>Yi,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>th,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>Jm,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>xu,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Pc,SalesTransactionsDeleteArgsSchema:()=>iye,SalesTransactionsDeleteManyArgsSchema:()=>cye,SalesTransactionsFindFirstArgsSchema:()=>Sre,SalesTransactionsFindFirstOrThrowArgsSchema:()=>vre,SalesTransactionsFindManyArgsSchema:()=>Rw,SalesTransactionsFindUniqueArgsSchema:()=>Wre,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>Ure,SalesTransactionsGroupByArgsSchema:()=>Cre,SalesTransactionsIncludeSchema:()=>es,SalesTransactionsListRelationFilterSchema:()=>QR,SalesTransactionsMaxOrderByAggregateInputSchema:()=>F6,SalesTransactionsMinOrderByAggregateInputSchema:()=>E6,SalesTransactionsOrderByRelationAggregateInputSchema:()=>mZ,SalesTransactionsOrderByWithAggregationInputSchema:()=>WF,SalesTransactionsOrderByWithRelationInputSchema:()=>am,SalesTransactionsScalarFieldEnumSchema:()=>Kh,SalesTransactionsScalarWhereInputSchema:()=>Mi,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>nI,SalesTransactionsSchema:()=>Xoe,SalesTransactionsSelectSchema:()=>ts,SalesTransactionsSumOrderByAggregateInputSchema:()=>D6,SalesTransactionsUncheckedCreateInputSchema:()=>xx,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>id,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>Vu,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,SalesTransactionsUncheckedUpdateInputSchema:()=>Hx,SalesTransactionsUncheckedUpdateManyInputSchema:()=>B5,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>qae,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Cd,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Pte,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>o9,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>Y4,SalesTransactionsUpdateArgsSchema:()=>rye,SalesTransactionsUpdateInputSchema:()=>Vx,SalesTransactionsUpdateManyArgsSchema:()=>lye,SalesTransactionsUpdateManyMutationInputSchema:()=>RT,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Wk,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>yC,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>md,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Ck,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>sC,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>n9,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>G4,SalesTransactionsUpsertArgsSchema:()=>aye,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ak,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>uC,SalesTransactionsWhereInputSchema:()=>ua,SalesTransactionsWhereUniqueInputSchema:()=>me,SchedulingConstraintAggregateArgsSchema:()=>Pce,SchedulingConstraintArgsSchema:()=>lre,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>DY,SchedulingConstraintCountOrderByAggregateInputSchema:()=>EY,SchedulingConstraintCreateArgsSchema:()=>Xme,SchedulingConstraintCreateInputSchema:()=>v0,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>aze,SchedulingConstraintCreateManyArgsSchema:()=>tze,SchedulingConstraintCreateManyInputSchema:()=>Av,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>TM,SchedulingConstraintCreateManyUserInputSchema:()=>aD,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>cn,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>mz,SchedulingConstraintCreateWithoutUserInputSchema:()=>mp,SchedulingConstraintDeleteArgsSchema:()=>nze,SchedulingConstraintDeleteManyArgsSchema:()=>rze,SchedulingConstraintFindFirstArgsSchema:()=>wce,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>Tce,SchedulingConstraintFindManyArgsSchema:()=>v9,SchedulingConstraintFindUniqueArgsSchema:()=>Bce,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>_ce,SchedulingConstraintGroupByArgsSchema:()=>Nce,SchedulingConstraintIncludeSchema:()=>Es,SchedulingConstraintListRelationFilterSchema:()=>SZ,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>xY,SchedulingConstraintMinOrderByAggregateInputSchema:()=>VY,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>B8,SchedulingConstraintOrderByWithAggregationInputSchema:()=>HF,SchedulingConstraintOrderByWithRelationInputSchema:()=>mm,SchedulingConstraintScalarFieldEnumSchema:()=>Ib,SchedulingConstraintScalarWhereInputSchema:()=>Wl,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>CI,SchedulingConstraintSchema:()=>gie,SchedulingConstraintSelectSchema:()=>Ds,SchedulingConstraintSumOrderByAggregateInputSchema:()=>HY,SchedulingConstraintUncheckedCreateInputSchema:()=>A0,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>Wn,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>zp,SchedulingConstraintUncheckedUpdateInputSchema:()=>W0,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>a6,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>Jte,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>oo,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>MQ,SchedulingConstraintUpdateArgsSchema:()=>oze,SchedulingConstraintUpdateInputSchema:()=>C0,SchedulingConstraintUpdateManyArgsSchema:()=>ize,SchedulingConstraintUpdateManyMutationInputSchema:()=>U0,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>pW,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>xn,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>cW,SchedulingConstraintUpdateWithoutUserInputSchema:()=>jQ,SchedulingConstraintUpsertArgsSchema:()=>eze,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>lW,SchedulingConstraintWhereInputSchema:()=>Aa,SchedulingConstraintWhereUniqueInputSchema:()=>St,SessionAggregateArgsSchema:()=>_pe,SessionArgsSchema:()=>sre,SessionAvgOrderByAggregateInputSchema:()=>H8,SessionCountOrderByAggregateInputSchema:()=>V8,SessionCreateArgsSchema:()=>bhe,SessionCreateInputSchema:()=>rH,SessionCreateManyAndReturnArgsSchema:()=>She,SessionCreateManyArgsSchema:()=>ghe,SessionCreateManyInputSchema:()=>Ov,SessionCreateManyUserInputEnvelopeSchema:()=>kM,SessionCreateManyUserInputSchema:()=>GE,SessionCreateNestedManyWithoutUserInputSchema:()=>en,SessionCreateOrConnectWithoutUserInputSchema:()=>lz,SessionCreateWithoutUserInputSchema:()=>ep,SessionDeleteArgsSchema:()=>vhe,SessionDeleteManyArgsSchema:()=>Whe,SessionFindFirstArgsSchema:()=>Npe,SessionFindFirstOrThrowArgsSchema:()=>Bpe,SessionFindManyArgsSchema:()=>W9,SessionFindUniqueArgsSchema:()=>Fpe,SessionFindUniqueOrThrowArgsSchema:()=>Epe,SessionGroupByArgsSchema:()=>qpe,SessionIncludeSchema:()=>ay,SessionListRelationFilterSchema:()=>bZ,SessionMaxOrderByAggregateInputSchema:()=>L8,SessionMinOrderByAggregateInputSchema:()=>Z8,SessionOrderByRelationAggregateInputSchema:()=>T8,SessionOrderByWithAggregationInputSchema:()=>XF,SessionOrderByWithRelationInputSchema:()=>gm,SessionScalarFieldEnumSchema:()=>Rb,SessionScalarWhereInputSchema:()=>vl,SessionScalarWhereWithAggregatesInputSchema:()=>wI,SessionSchema:()=>fie,SessionSelectSchema:()=>ny,SessionSumOrderByAggregateInputSchema:()=>$8,SessionUncheckedCreateInputSchema:()=>lH,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>bn,SessionUncheckedCreateWithoutUserInputSchema:()=>tp,SessionUncheckedUpdateInputSchema:()=>pH,SessionUncheckedUpdateManyInputSchema:()=>m6,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>Hte,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Jn,SessionUncheckedUpdateWithoutUserInputSchema:()=>hQ,SessionUpdateArgsSchema:()=>Ahe,SessionUpdateInputSchema:()=>cH,SessionUpdateManyArgsSchema:()=>Che,SessionUpdateManyMutationInputSchema:()=>uH,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>xC,SessionUpdateManyWithoutUserNestedInputSchema:()=>Nn,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>DC,SessionUpdateWithoutUserInputSchema:()=>zQ,SessionUpsertArgsSchema:()=>Ihe,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>EC,SessionWhereInputSchema:()=>ka,SessionWhereUniqueInputSchema:()=>At,ShiftAggregateArgsSchema:()=>Yue,ShiftArgsSchema:()=>Px,ShiftAvgOrderByAggregateInputSchema:()=>KJ,ShiftCountOrderByAggregateInputSchema:()=>JJ,ShiftCountOutputTypeArgsSchema:()=>Nx,ShiftCountOutputTypeSelectSchema:()=>w5,ShiftCreateArgsSchema:()=>Jbe,ShiftCreateInputSchema:()=>XH,ShiftCreateManyAndReturnArgsSchema:()=>eIe,ShiftCreateManyArgsSchema:()=>Xbe,ShiftCreateManyInputSchema:()=>xv,ShiftCreateManyUserInputEnvelopeSchema:()=>CM,ShiftCreateManyUserInputSchema:()=>ZE,ShiftCreateNestedManyWithoutUserInputSchema:()=>Ja,ShiftCreateNestedOneWithoutShiftTaskInputSchema:()=>aK,ShiftCreateOrConnectWithoutShiftTaskInputSchema:()=>y2,ShiftCreateOrConnectWithoutUserInputSchema:()=>oz,ShiftCreateWithoutShiftTaskInputSchema:()=>Nj,ShiftCreateWithoutUserInputSchema:()=>Qc,ShiftDeleteArgsSchema:()=>tIe,ShiftDeleteManyArgsSchema:()=>oIe,ShiftFindFirstArgsSchema:()=>Que,ShiftFindFirstOrThrowArgsSchema:()=>Gue,ShiftFindManyArgsSchema:()=>R9,ShiftFindUniqueArgsSchema:()=>Kue,ShiftFindUniqueOrThrowArgsSchema:()=>Xue,ShiftGroupByArgsSchema:()=>Jue,ShiftIncludeSchema:()=>Wy,ShiftListRelationFilterSchema:()=>hZ,ShiftMaxOrderByAggregateInputSchema:()=>XJ,ShiftMinOrderByAggregateInputSchema:()=>e7,ShiftOrderByRelationAggregateInputSchema:()=>w8,ShiftOrderByWithAggregationInputSchema:()=>uE,ShiftOrderByWithRelationInputSchema:()=>Dd,ShiftRelationFilterSchema:()=>tZ,ShiftScalarFieldEnumSchema:()=>qb,ShiftScalarWhereInputSchema:()=>Sl,ShiftScalarWhereWithAggregatesInputSchema:()=>VI,ShiftSchema:()=>Fie,ShiftSelectSchema:()=>Uy,ShiftStatusSchema:()=>Ze,ShiftSumOrderByAggregateInputSchema:()=>t7,ShiftTaskAggregateArgsSchema:()=>Ace,ShiftTaskArgsSchema:()=>ire,ShiftTaskAvgOrderByAggregateInputSchema:()=>jY,ShiftTaskCountOrderByAggregateInputSchema:()=>fY,ShiftTaskCreateArgsSchema:()=>_me,ShiftTaskCreateInputSchema:()=>s0,ShiftTaskCreateManyAndReturnArgsSchema:()=>Eme,ShiftTaskCreateManyArgsSchema:()=>Fme,ShiftTaskCreateManyInputSchema:()=>Sv,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>LO,ShiftTaskCreateManyShiftInputSchema:()=>MD,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>Q$,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>Qz,ShiftTaskCreateWithoutShiftInputSchema:()=>fu,ShiftTaskDeleteArgsSchema:()=>Dme,ShiftTaskDeleteManyArgsSchema:()=>Hme,ShiftTaskFindFirstArgsSchema:()=>Sce,ShiftTaskFindFirstOrThrowArgsSchema:()=>vce,ShiftTaskFindManyArgsSchema:()=>g9,ShiftTaskFindUniqueArgsSchema:()=>Wce,ShiftTaskFindUniqueOrThrowArgsSchema:()=>Uce,ShiftTaskGroupByArgsSchema:()=>Cce,ShiftTaskIncludeSchema:()=>Bs,ShiftTaskListRelationFilterSchema:()=>PZ,ShiftTaskMaxOrderByAggregateInputSchema:()=>MY,ShiftTaskMinOrderByAggregateInputSchema:()=>OY,ShiftTaskOrderByRelationAggregateInputSchema:()=>YJ,ShiftTaskOrderByWithAggregationInputSchema:()=>xF,ShiftTaskOrderByWithRelationInputSchema:()=>ym,ShiftTaskScalarFieldEnumSchema:()=>hb,ShiftTaskScalarWhereInputSchema:()=>Ml,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>vI,ShiftTaskSchema:()=>bie,ShiftTaskSelectSchema:()=>_s,ShiftTaskSumOrderByAggregateInputSchema:()=>wY,ShiftTaskUncheckedCreateInputSchema:()=>y0,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>G$,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>ju,ShiftTaskUncheckedUpdateInputSchema:()=>m0,ShiftTaskUncheckedUpdateManyInputSchema:()=>e6,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>Oae,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>K$,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>HG,ShiftTaskUpdateArgsSchema:()=>xme,ShiftTaskUpdateInputSchema:()=>d0,ShiftTaskUpdateManyArgsSchema:()=>Vme,ShiftTaskUpdateManyMutationInputSchema:()=>z0,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>nk,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>J$,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>ak,ShiftTaskUpdateWithoutShiftInputSchema:()=>VG,ShiftTaskUpsertArgsSchema:()=>qme,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>tk,ShiftTaskWhereInputSchema:()=>Sa,ShiftTaskWhereUniqueInputSchema:()=>It,ShiftUncheckedCreateInputSchema:()=>eL,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>mn,ShiftUncheckedCreateWithoutShiftTaskInputSchema:()=>Bj,ShiftUncheckedCreateWithoutUserInputSchema:()=>Gc,ShiftUncheckedUpdateInputSchema:()=>aL,ShiftUncheckedUpdateManyInputSchema:()=>k6,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>Dte,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Qn,ShiftUncheckedUpdateWithoutShiftTaskInputSchema:()=>w_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>uQ,ShiftUpdateArgsSchema:()=>aIe,ShiftUpdateInputSchema:()=>tL,ShiftUpdateManyArgsSchema:()=>nIe,ShiftUpdateManyMutationInputSchema:()=>nL,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>TC,ShiftUpdateManyWithoutUserNestedInputSchema:()=>wn,ShiftUpdateOneRequiredWithoutShiftTaskNestedInputSchema:()=>nK,ShiftUpdateToOneWithWhereWithoutShiftTaskInputSchema:()=>NX,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>wC,ShiftUpdateWithoutShiftTaskInputSchema:()=>O_,ShiftUpdateWithoutUserInputSchema:()=>pQ,ShiftUpsertArgsSchema:()=>Kbe,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>OC,ShiftUpsertWithoutShiftTaskInputSchema:()=>PX,ShiftWhereInputSchema:()=>Zt,ShiftWhereUniqueInputSchema:()=>ot,SortOrderInputSchema:()=>f,SortOrderSchema:()=>t,StringFieldUpdateOperationsInputSchema:()=>p,StringFilterSchema:()=>U,StringNullableFilterSchema:()=>F,StringNullableListFilterSchema:()=>zo,StringNullableWithAggregatesFilterSchema:()=>wt,StringWithAggregatesFilterSchema:()=>We,SupplierPriceHistoryAggregateArgsSchema:()=>fle,SupplierPriceHistoryArgsSchema:()=>Xie,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>D3,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>E3,SupplierPriceHistoryCreateArgsSchema:()=>Rde,SupplierPriceHistoryCreateInputSchema:()=>wV,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>Mde,SupplierPriceHistoryCreateManyArgsSchema:()=>jde,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>pO,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>WD,SupplierPriceHistoryCreateManyInputSchema:()=>yv,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>xO,SupplierPriceHistoryCreateManyVendorInputSchema:()=>jD,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>Sh,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>GN,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>Dz,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>$z,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>mu,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>ku,SupplierPriceHistoryDeleteArgsSchema:()=>Ode,SupplierPriceHistoryDeleteManyArgsSchema:()=>Pde,SupplierPriceHistoryFindFirstArgsSchema:()=>kle,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>Rle,SupplierPriceHistoryFindManyArgsSchema:()=>Ow,SupplierPriceHistoryFindUniqueArgsSchema:()=>Mle,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>Ole,SupplierPriceHistoryGroupByArgsSchema:()=>jle,SupplierPriceHistoryIncludeSchema:()=>Ss,SupplierPriceHistoryListRelationFilterSchema:()=>ef,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>x3,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>V3,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>OZ,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>PF,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>rm,SupplierPriceHistoryScalarFieldEnumSchema:()=>cb,SupplierPriceHistoryScalarWhereInputSchema:()=>Ni,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>dI,SupplierPriceHistorySchema:()=>pie,SupplierPriceHistorySelectSchema:()=>vs,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>H3,SupplierPriceHistoryUncheckedCreateInputSchema:()=>TV,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>fh,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>KN,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>zu,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>Ru,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>NV,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>Z5,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>Wae,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Vh,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>Mae,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>oB,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>MG,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>xG,SupplierPriceHistoryUpdateArgsSchema:()=>wde,SupplierPriceHistoryUpdateInputSchema:()=>PV,SupplierPriceHistoryUpdateManyArgsSchema:()=>Tde,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>OT,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>BU,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>ek,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>Nh,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>tB,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>NU,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>XU,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>jG,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>DG,SupplierPriceHistoryUpsertArgsSchema:()=>fde,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>PU,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>KU,SupplierPriceHistoryWhereInputSchema:()=>ma,SupplierPriceHistoryWhereUniqueInputSchema:()=>be,TaskTypeSchema:()=>ct,TransactionIsolationLevelSchema:()=>Joe,UserAggregateArgsSchema:()=>Ope,UserArgsSchema:()=>kt,UserAvgOrderByAggregateInputSchema:()=>q8,UserCountOrderByAggregateInputSchema:()=>_8,UserCountOutputTypeArgsSchema:()=>Cx,UserCountOutputTypeSelectSchema:()=>W5,UserCreateArgsSchema:()=>phe,UserCreateInputSchema:()=>aH,UserCreateManyAndReturnArgsSchema:()=>yhe,UserCreateManyArgsSchema:()=>she,UserCreateManyInputSchema:()=>Mv,UserCreateManyOrganizationInputEnvelopeSchema:()=>tM,UserCreateManyOrganizationInputSchema:()=>TE,UserCreateManyRestaurantInputEnvelopeSchema:()=>oM,UserCreateManyRestaurantInputSchema:()=>PE,UserCreateNestedManyWithoutOrganizationInputSchema:()=>S$,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Hi,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>oK,UserCreateNestedOneWithoutChecklistCompleteInputSchema:()=>MP,UserCreateNestedOneWithoutCustomerFeedbackInputSchema:()=>FP,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>rf,UserCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>jN,UserCreateNestedOneWithoutLeftoverItemInputSchema:()=>nN,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>hK,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>lB,UserCreateNestedOneWithoutProductionPlanInputSchema:()=>mN,UserCreateNestedOneWithoutProductionPlanItemInputSchema:()=>CN,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>vS,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>SS,UserCreateNestedOneWithoutSchedulingConstraintInputSchema:()=>rK,UserCreateNestedOneWithoutSessionsInputSchema:()=>mK,UserCreateNestedOneWithoutShiftsInputSchema:()=>$$,UserCreateNestedOneWithoutWasteRecordInputSchema:()=>pN,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>d2,UserCreateOrConnectWithoutChecklistCompleteInputSchema:()=>$1,UserCreateOrConnectWithoutCustomerFeedbackInputSchema:()=>e2,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>F2,UserCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>b2,UserCreateOrConnectWithoutLeftoverItemInputSchema:()=>n2,UserCreateOrConnectWithoutOrganizationInputSchema:()=>Lm,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>Q2,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>$2,UserCreateOrConnectWithoutProductionPlanInputSchema:()=>c2,UserCreateOrConnectWithoutProductionPlanItemInputSchema:()=>s2,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>F1,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>q1,UserCreateOrConnectWithoutRestaurantInputSchema:()=>Zm,UserCreateOrConnectWithoutSchedulingConstraintInputSchema:()=>m2,UserCreateOrConnectWithoutSessionsInputSchema:()=>k2,UserCreateOrConnectWithoutShiftsInputSchema:()=>H2,UserCreateOrConnectWithoutWasteRecordInputSchema:()=>r2,UserCreateWithoutAvailabilityInputSchema:()=>_j,UserCreateWithoutChecklistCompleteInputSchema:()=>Qf,UserCreateWithoutCustomerFeedbackInputSchema:()=>pj,UserCreateWithoutInventoryUpdatesInputSchema:()=>jO,UserCreateWithoutInventoryWithdrawalInputSchema:()=>Lj,UserCreateWithoutLeftoverItemInputSchema:()=>hj,UserCreateWithoutOrganizationInputSchema:()=>Ac,UserCreateWithoutPasswordResetsInputSchema:()=>XO,UserCreateWithoutPrepItemsInputSchema:()=>JO,UserCreateWithoutProductionPlanInputSchema:()=>kj,UserCreateWithoutProductionPlanItemInputSchema:()=>Tj,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>Rf,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>Uf,UserCreateWithoutRestaurantInputSchema:()=>Wc,UserCreateWithoutSchedulingConstraintInputSchema:()=>Fj,UserCreateWithoutSessionsInputSchema:()=>FM,UserCreateWithoutShiftsInputSchema:()=>VO,UserCreateWithoutWasteRecordInputSchema:()=>Aj,UserDeleteArgsSchema:()=>dhe,UserDeleteManyArgsSchema:()=>hhe,UserFindFirstArgsSchema:()=>jpe,UserFindFirstOrThrowArgsSchema:()=>Mpe,UserFindManyArgsSchema:()=>Nw,UserFindUniqueArgsSchema:()=>Tpe,UserFindUniqueOrThrowArgsSchema:()=>Ppe,UserGroupByArgsSchema:()=>wpe,UserIncludeSchema:()=>ey,UserListRelationFilterSchema:()=>LR,UserMaxOrderByAggregateInputSchema:()=>F8,UserMinOrderByAggregateInputSchema:()=>E8,UserNullableRelationFilterSchema:()=>dh,UserOrderByRelationAggregateInputSchema:()=>lZ,UserOrderByWithAggregationInputSchema:()=>KF,UserOrderByWithRelationInputSchema:()=>ta,UserRelationFilterSchema:()=>aa,UserRoleSchema:()=>M,UserScalarFieldEnumSchema:()=>kb,UserScalarWhereInputSchema:()=>fi,UserScalarWhereWithAggregatesInputSchema:()=>OI,UserSchema:()=>Rie,UserSelectSchema:()=>ty,UserSumOrderByAggregateInputSchema:()=>D8,UserUncheckedCreateInputSchema:()=>nH,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>A$,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>qj,UserUncheckedCreateWithoutChecklistCompleteInputSchema:()=>Gf,UserUncheckedCreateWithoutCustomerFeedbackInputSchema:()=>uj,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>MO,UserUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>Zj,UserUncheckedCreateWithoutLeftoverItemInputSchema:()=>bj,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Cc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>ew,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>KO,UserUncheckedCreateWithoutProductionPlanInputSchema:()=>Rj,UserUncheckedCreateWithoutProductionPlanItemInputSchema:()=>Pj,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>ff,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>kf,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Uc,UserUncheckedCreateWithoutSchedulingConstraintInputSchema:()=>Ej,UserUncheckedCreateWithoutSessionsInputSchema:()=>EM,UserUncheckedCreateWithoutShiftsInputSchema:()=>HO,UserUncheckedCreateWithoutWasteRecordInputSchema:()=>Cj,UserUncheckedUpdateInputSchema:()=>iH,UserUncheckedUpdateManyInputSchema:()=>d6,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>fte,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>k$,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>jte,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>P_,UserUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>QB,UserUncheckedUpdateWithoutCustomerFeedbackInputSchema:()=>c_,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>fq,UserUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>x_,UserUncheckedUpdateWithoutLeftoverItemInputSchema:()=>m_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>q4,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>Zq,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>Hq,UserUncheckedUpdateWithoutProductionPlanInputSchema:()=>W_,UserUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>M_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>wB,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>MB,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>E4,UserUncheckedUpdateWithoutSchedulingConstraintInputSchema:()=>B_,UserUncheckedUpdateWithoutSessionsInputSchema:()=>aq,UserUncheckedUpdateWithoutShiftsInputSchema:()=>qq,UserUncheckedUpdateWithoutWasteRecordInputSchema:()=>S_,UserUpdateArgsSchema:()=>mhe,UserUpdateInputSchema:()=>oH,UserUpdateManyArgsSchema:()=>zhe,UserUpdateManyMutationInputSchema:()=>NT,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>QA,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>JA,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>W$,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>br,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>iK,UserUpdateOneRequiredWithoutChecklistCompleteNestedInputSchema:()=>PP,UserUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>wN,UserUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>rN,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>bK,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>uB,UserUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>IN,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>RS,UserUpdateOneRequiredWithoutSchedulingConstraintNestedInputSchema:()=>lK,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>zK,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>Y$,UserUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>yN,UserUpdateOneWithoutCustomerFeedbackNestedInputSchema:()=>xP,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>sf,UserUpdateOneWithoutProductionPlanItemNestedInputSchema:()=>kN,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>fS,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>_X,UserUpdateToOneWithWhereWithoutChecklistCompleteInputSchema:()=>JK,UserUpdateToOneWithWhereWithoutCustomerFeedbackInputSchema:()=>sX,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>Oee,UserUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>LX,UserUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>bX,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>Gee,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>$ee,UserUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>RX,UserUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>TX,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>NK,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>TK,UserUpdateToOneWithWhereWithoutSchedulingConstraintInputSchema:()=>FX,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>iee,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>Dee,UserUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>CX,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>$A,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>YA,UserUpdateWithoutAvailabilityInputSchema:()=>T_,UserUpdateWithoutChecklistCompleteInputSchema:()=>$B,UserUpdateWithoutCustomerFeedbackInputSchema:()=>l_,UserUpdateWithoutInventoryUpdatesInputSchema:()=>Rq,UserUpdateWithoutInventoryWithdrawalInputSchema:()=>D_,UserUpdateWithoutLeftoverItemInputSchema:()=>d_,UserUpdateWithoutOrganizationInputSchema:()=>_4,UserUpdateWithoutPasswordResetsInputSchema:()=>Lq,UserUpdateWithoutPrepItemsInputSchema:()=>Vq,UserUpdateWithoutProductionPlanInputSchema:()=>C_,UserUpdateWithoutProductionPlanItemInputSchema:()=>j_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>OB,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>jB,UserUpdateWithoutRestaurantInputSchema:()=>F4,UserUpdateWithoutSchedulingConstraintInputSchema:()=>N_,UserUpdateWithoutSessionsInputSchema:()=>tq,UserUpdateWithoutShiftsInputSchema:()=>_q,UserUpdateWithoutWasteRecordInputSchema:()=>g_,UserUpsertArgsSchema:()=>uhe,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>ZA,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>GA,UserUpsertWithoutAvailabilityInputSchema:()=>BX,UserUpsertWithoutChecklistCompleteInputSchema:()=>YK,UserUpsertWithoutCustomerFeedbackInputSchema:()=>uX,UserUpsertWithoutInventoryUpdatesInputSchema:()=>Mee,UserUpsertWithoutInventoryWithdrawalInputSchema:()=>HX,UserUpsertWithoutLeftoverItemInputSchema:()=>hX,UserUpsertWithoutPasswordResetsInputSchema:()=>Qee,UserUpsertWithoutPrepItemsInputSchema:()=>Zee,UserUpsertWithoutProductionPlanInputSchema:()=>kX,UserUpsertWithoutProductionPlanItemInputSchema:()=>wX,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>PK,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>wK,UserUpsertWithoutSchedulingConstraintInputSchema:()=>qX,UserUpsertWithoutSessionsInputSchema:()=>oee,UserUpsertWithoutShiftsInputSchema:()=>Eee,UserUpsertWithoutWasteRecordInputSchema:()=>AX,UserWhereInputSchema:()=>P,UserWhereUniqueInputSchema:()=>O,VendorAggregateArgsSchema:()=>Hue,VendorArgsSchema:()=>AR,VendorAvgOrderByAggregateInputSchema:()=>ZJ,VendorCountOrderByAggregateInputSchema:()=>LJ,VendorCountOutputTypeArgsSchema:()=>Tx,VendorCountOutputTypeSelectSchema:()=>O5,VendorCreateArgsSchema:()=>Vbe,VendorCreateInputSchema:()=>QH,VendorCreateManyAndReturnArgsSchema:()=>Zbe,VendorCreateManyArgsSchema:()=>Lbe,VendorCreateManyInputSchema:()=>Dv,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>bh,VendorCreateNestedOneWithoutOrdersInputSchema:()=>EN,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>s$,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>qz,VendorCreateOrConnectWithoutOrdersInputSchema:()=>D2,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>Y1,VendorCreateWithoutIngredientsInputSchema:()=>cu,VendorCreateWithoutOrdersInputSchema:()=>PO,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>tj,VendorDeleteArgsSchema:()=>$be,VendorDeleteManyArgsSchema:()=>Ybe,VendorFindFirstArgsSchema:()=>xue,VendorFindFirstOrThrowArgsSchema:()=>Vue,VendorFindManyArgsSchema:()=>k9,VendorFindUniqueArgsSchema:()=>Zue,VendorFindUniqueOrThrowArgsSchema:()=>$ue,VendorGroupByArgsSchema:()=>Lue,VendorIncludeSchema:()=>Ay,VendorListRelationFilterSchema:()=>fZ,VendorMaxOrderByAggregateInputSchema:()=>$J,VendorMinOrderByAggregateInputSchema:()=>QJ,VendorOrderByRelationAggregateInputSchema:()=>cJ,VendorOrderByWithAggregationInputSchema:()=>pE,VendorOrderByWithRelationInputSchema:()=>xl,VendorRelationFilterSchema:()=>DR,VendorScalarFieldEnumSchema:()=>_b,VendorScalarWhereInputSchema:()=>jl,VendorScalarWhereWithAggregatesInputSchema:()=>xI,VendorSchema:()=>qie,VendorSelectSchema:()=>Cy,VendorSumOrderByAggregateInputSchema:()=>GJ,VendorUncheckedCreateInputSchema:()=>GH,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>Uh,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>pu,VendorUncheckedCreateWithoutOrdersInputSchema:()=>NO,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>aj,VendorUncheckedUpdateInputSchema:()=>JH,VendorUncheckedUpdateManyInputSchema:()=>U6,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>vae,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>Eh,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>WG,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>wq,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>e_,VendorUpdateArgsSchema:()=>Qbe,VendorUpdateInputSchema:()=>YH,VendorUpdateManyArgsSchema:()=>Gbe,VendorUpdateManyMutationInputSchema:()=>KH,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>RU,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>wh,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>HN,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>d$,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Nee,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>nX,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>kU,VendorUpdateWithoutIngredientsInputSchema:()=>CG,VendorUpdateWithoutOrdersInputSchema:()=>Oq,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>XB,VendorUpsertArgsSchema:()=>Hbe,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>UU,VendorUpsertWithoutOrdersInputSchema:()=>Pee,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>aX,VendorWhereInputSchema:()=>Mt,VendorWhereUniqueInputSchema:()=>Ke,WasteRecordAggregateArgsSchema:()=>oce,WasteRecordArgsSchema:()=>nre,WasteRecordAvgOrderByAggregateInputSchema:()=>mY,WasteRecordCountOrderByAggregateInputSchema:()=>dY,WasteRecordCreateArgsSchema:()=>dme,WasteRecordCreateInputSchema:()=>XV,WasteRecordCreateManyAndReturnArgsSchema:()=>hme,WasteRecordCreateManyArgsSchema:()=>zme,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>lO,WasteRecordCreateManyIngredienteInputSchema:()=>AD,WasteRecordCreateManyInputSchema:()=>bv,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>jM,WasteRecordCreateManyRecordedByInputSchema:()=>KE,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>yM,WasteRecordCreateManyRestaurantInputSchema:()=>DE,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>Ih,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>nn,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Ki,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>Fz,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>uz,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>Xm,WasteRecordCreateWithoutIngredienteInputSchema:()=>uu,WasteRecordCreateWithoutRecordedByInputSchema:()=>rp,WasteRecordCreateWithoutRestaurantInputSchema:()=>qc,WasteRecordDeleteArgsSchema:()=>bme,WasteRecordDeleteManyArgsSchema:()=>Sme,WasteRecordFindFirstArgsSchema:()=>ace,WasteRecordFindFirstOrThrowArgsSchema:()=>nce,WasteRecordFindManyArgsSchema:()=>Hg,WasteRecordFindUniqueArgsSchema:()=>rce,WasteRecordFindUniqueOrThrowArgsSchema:()=>lce,WasteRecordGroupByArgsSchema:()=>ice,WasteRecordIncludeSchema:()=>Ms,WasteRecordListRelationFilterSchema:()=>wg,WasteRecordMaxOrderByAggregateInputSchema:()=>zY,WasteRecordMinOrderByAggregateInputSchema:()=>hY,WasteRecordOrderByRelationAggregateInputSchema:()=>tP,WasteRecordOrderByWithAggregationInputSchema:()=>FF,WasteRecordOrderByWithRelationInputSchema:()=>um,WasteRecordScalarFieldEnumSchema:()=>db,WasteRecordScalarWhereInputSchema:()=>qa,WasteRecordScalarWhereWithAggregatesInputSchema:()=>II,WasteRecordSchema:()=>mie,WasteRecordSelectSchema:()=>Os,WasteRecordSumOrderByAggregateInputSchema:()=>bY,WasteRecordUncheckedCreateInputSchema:()=>e0,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>kh,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>Sn,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>su,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>lp,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Fc,WasteRecordUncheckedUpdateInputSchema:()=>a0,WasteRecordUncheckedUpdateManyInputSchema:()=>J5,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Aae,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>Dh,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>$te,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>eo,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Bte,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>kG,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>AQ,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>eQ,WasteRecordUpdateArgsSchema:()=>Ime,WasteRecordUpdateInputSchema:()=>t0,WasteRecordUpdateManyArgsSchema:()=>gme,WasteRecordUpdateManyMutationInputSchema:()=>RR,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>MU,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>JC,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>IC,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>Th,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>qn,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>jU,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>YC,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>bC,WasteRecordUpdateWithoutIngredienteInputSchema:()=>UG,WasteRecordUpdateWithoutRecordedByInputSchema:()=>vQ,WasteRecordUpdateWithoutRestaurantInputSchema:()=>X4,WasteRecordUpsertArgsSchema:()=>mme,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>fU,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>GC,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>hC,WasteRecordWhereInputSchema:()=>Ia,WasteRecordWhereUniqueInputSchema:()=>L});var Joe=e.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),Kh=e.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),Xh=e.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),eb=e.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),tb=e.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),ab=e.enum(["id","recipeId","equipmentId","notes"]),nb=e.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),ob=e.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),ib=e.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),rb=e.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),lb=e.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),cb=e.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),pb=e.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),ub=e.enum(["id","name","description","icon","createdAt","updatedAt"]),sb=e.enum(["id","name","description","createdAt","updatedAt"]),yb=e.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),db=e.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),mb=e.enum(["id","restaurantId","date","createdById","createdAt","updatedAt"]),zb=e.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),hb=e.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),bb=e.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),Ib=e.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),gb=e.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),Sb=e.enum(["id","name","description"]),vb=e.enum(["id","ingredientId","allergenId"]),Ab=e.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),Cb=e.enum(["id","email","isEmailSent","createdAt","updatedAt"]),Wb=e.enum(["id","name","imageUrl","createdAt","updatedAt"]),Ub=e.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),kb=e.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),Rb=e.enum(["id","userId","code","token","expiresAt","createdAt"]),fb=e.enum(["id","name","imageUrl","category","restaurantId"]),jb=e.enum(["id","name","imageUrl","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","createdAt","updatedAt"]),Mb=e.enum(["id","name","category","price","dietaryRestrictionId"]),Ob=e.enum(["id","recipeId","ingredientId","quantity","unit","joinAt","recipeVersionId"]),wb=e.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId"]),Tb=e.enum(["id","restaurantId"]),Pb=e.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastUpdatedById","lastUpdated"]),Nb=e.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),Bb=e.enum(["id","orderId","ingredientId","quantity","unit","price"]),_b=e.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),qb=e.enum(["id","userId","startTime","endTime","status"]),Fb=e.enum(["id","name","status","createdAt","updatedAt"]),Eb=e.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),Db=e.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),xb=e.enum(["id","name","restaurantId","createdAt","updatedAt"]),Vb=e.enum(["id","menuItemId","recipeId","joinAt"]),Hb=e.enum(["id","name","description","price","foodCost","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","nutritionalInfoId","menuId","createdAt","updatedAt","categoryId"]),Lb=e.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),Zb=e.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),$b=e.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),t=e.enum(["asc","desc"]),hR=e.enum(["default","insensitive"]),s5=e.enum(["first","last"]),Le=e.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),_e=e.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),lt=e.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),qe=e.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),xe=e.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Oe=e.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),we=e.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),Koe=e.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED"]),ct=e.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),pt=e.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ut=e.enum(["UNAVAILABLE","PREFERRED"]),M=e.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Be=e.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Ze=e.enum(["SCHEDULED","COMPLETED","CANCELLED"]),oe=e.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),Xoe=e.object({id:e.number().int(),posTransactionID:e.string().nullable(),restaurantId:e.number().int(),menuItemId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),eie=e.object({id:e.number().int(),name:e.string(),description:e.string().nullable(),displayOrder:e.number().int(),menuId:e.number().int(),isActive:e.boolean(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),tie=e.object({id:e.number().int(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().nullable(),changes:e.string().nullable(),isActive:e.boolean(),createdById:e.number().int(),approvedById:e.number().int().nullable(),approvedAt:e.coerce.date().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),aie=e.object({status:_e,id:e.number().int(),name:e.string(),description:e.string().nullable(),model:e.string().nullable(),serialNumber:e.string().nullable(),purchaseDate:e.coerce.date().nullable(),lastMaintenance:e.coerce.date().nullable(),nextMaintenance:e.coerce.date().nullable(),location:e.string().nullable(),restaurantId:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),nie=e.object({id:e.number().int(),recipeId:e.number().int(),equipmentId:e.number().int(),notes:e.string().nullable()}),oie=e.object({type:lt,id:e.number().int(),equipmentId:e.number().int(),date:e.coerce.date(),description:e.string(),cost:e.number().nullable(),performedBy:e.string(),notes:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),iie=e.object({frequency:qe,id:e.number().int(),name:e.string(),description:e.string().nullable(),restaurantId:e.number().int(),isActive:e.boolean(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),rie=e.object({type:Le,id:e.number().int(),checklistId:e.number().int(),description:e.string(),order:e.number().int(),requiredPhotos:e.boolean(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),lie=e.object({id:e.number().int(),checklistId:e.number().int(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),cie=e.object({status:xe,id:e.number().int(),checklistCompleteId:e.number().int(),checklistItemId:e.number().int(),notes:e.string().nullable(),photoUrls:e.string().array(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),pie=e.object({id:e.number().int(),vendorId:e.number().int(),ingredientId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().nullable(),notes:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),uie=e.object({source:Oe,status:we,id:e.number().int(),restaurantId:e.number().int(),menuItemId:e.number().int().nullable(),rating:e.number().int(),comment:e.string().nullable(),tags:e.string().array(),responseText:e.string().nullable(),respondedAt:e.coerce.date().nullable(),respondedById:e.number().int().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),sie=e.object({id:e.number().int(),name:e.string(),description:e.string().nullable(),icon:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),yie=e.object({id:e.number().int(),name:e.string(),description:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),die=e.object({id:e.number().int(),restaurantId:e.number().int(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),mie=e.object({id:e.number().int(),restaurantId:e.number().int(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),zie=e.object({id:e.number().int(),restaurantId:e.number().int(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),hie=e.object({id:e.number().int(),productionPlanId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),bie=e.object({taskType:ct,id:e.number().int(),shiftId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Iie=e.object({dayOfWeek:pt,id:e.number().int(),userId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),gie=e.object({constraintsType:ut,id:e.number().int(),userId:e.number().int(),date:e.coerce.date(),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Sie=e.object({id:e.number().int(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().nullable(),createdById:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),vie=e.object({id:e.number().int(),name:e.string(),description:e.string().nullable()}),Aie=e.object({id:e.number().int(),ingredientId:e.number().int(),allergenId:e.number().int()}),Cie=e.object({id:e.number().int(),menuItemId:e.number().int(),recommendation:e.string(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Wie=e.object({id:e.number().int(),email:e.string(),isEmailSent:e.boolean(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Uie=e.object({id:e.number().int(),name:e.string(),imageUrl:e.string().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),kie=e.object({id:e.number().int(),name:e.string(),imageUrl:e.string().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().nullable(),foodCost:e.number().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date(),isDeleted:e.boolean(),deleted:e.coerce.date().nullable()}),Rie=e.object({role:M,id:e.number().int(),email:e.string(),sub:e.number().int().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().nullable(),verified:e.boolean(),organizationId:e.number().int().nullable(),restaurantId:e.number().int().nullable(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),fie=e.object({id:e.string(),userId:e.number().int(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date()}),jie=e.object({id:e.number().int(),name:e.string(),imageUrl:e.string().nullable(),category:e.string(),restaurantId:e.number().int().nullable()}),Mie=e.object({id:e.number().int(),name:e.string(),imageUrl:e.string().array(),description:e.string().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().nullable(),isDeleted:e.boolean(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Oie=e.object({id:e.number().int(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().nullable()}),wie=e.object({id:e.number().int(),recipeId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date(),recipeVersionId:e.number().int().nullable()}),Tie=e.object({id:e.number().int(),recipeId:e.number().int(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().nullable(),recipeVersionId:e.number().int().nullable()}),Pie=e.object({id:e.number().int(),restaurantId:e.number().int()}),Nie=e.object({id:e.number().int(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().nullable(),lastUpdated:e.coerce.date()}),Bie=e.object({status:Be,id:e.number().int(),restaurantId:e.number().int(),vendorId:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),_ie=e.object({id:e.number().int(),orderId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}),qie=e.object({id:e.number().int(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Fie=e.object({status:Ze,id:e.number().int(),userId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date()}),Eie=e.object({status:oe,id:e.number().int(),name:e.string(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Die=e.object({status:oe,id:e.number().int(),prepBoardId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),assignedToId:e.number().int()}),xie=e.object({id:e.number().int(),token:e.string(),userId:e.number().int(),expiresAt:e.coerce.date(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Vie=e.object({id:e.number().int(),name:e.string(),restaurantId:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Hie=e.object({id:e.number().int(),menuItemId:e.number().int(),recipeId:e.number().int(),joinAt:e.coerce.date()}),Lie=e.object({id:e.number().int(),name:e.string(),description:e.string().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.number().int().array(),recipeServingsAmount:e.number().array(),recipeServingsCost:e.number().array(),allergens:e.string().array(),nutritionalInfoId:e.number().int().nullable(),menuId:e.number().int(),createdAt:e.coerce.date(),updatedAt:e.coerce.date(),categoryId:e.number().int().nullable()}),Zie=e.object({id:e.number().int(),menuItemId:e.number().int().nullable(),calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),$ie=e.object({id:e.number().int(),recipeId:e.number().int(),cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),Qie=e.object({id:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date(),updatedAt:e.coerce.date()}),es=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),Gie=e.object({select:e.lazy(()=>ts).optional(),include:e.lazy(()=>es).optional()}).strict(),ts=e.object({id:e.boolean().optional(),posTransactionID:e.boolean().optional(),restaurantId:e.boolean().optional(),menuItemId:e.boolean().optional(),price:e.boolean().optional(),total:e.boolean().optional(),transactionDate:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),as=e.object({menu:e.union([e.boolean(),e.lazy(()=>CR)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>rx)]).optional()}).strict(),ix=e.object({select:e.lazy(()=>ns).optional(),include:e.lazy(()=>as).optional()}).strict(),rx=e.object({select:e.lazy(()=>y5).nullish()}).strict(),y5=e.object({menuItems:e.boolean().optional()}).strict(),ns=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),displayOrder:e.boolean().optional(),menuId:e.boolean().optional(),isActive:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),menu:e.union([e.boolean(),e.lazy(()=>CR)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>rx)]).optional()}).strict(),os=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),instructions:e.union([e.boolean(),e.lazy(()=>_w)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),approvedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>lx)]).optional()}).strict(),bR=e.object({select:e.lazy(()=>is).optional(),include:e.lazy(()=>os).optional()}).strict(),lx=e.object({select:e.lazy(()=>d5).nullish()}).strict(),d5=e.object({ingredients:e.boolean().optional(),instructions:e.boolean().optional()}).strict(),is=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),versionNumber:e.boolean().optional(),description:e.boolean().optional(),changes:e.boolean().optional(),isActive:e.boolean().optional(),createdById:e.boolean().optional(),approvedById:e.boolean().optional(),approvedAt:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),instructions:e.union([e.boolean(),e.lazy(()=>_w)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),approvedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>lx)]).optional()}).strict(),rs=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>fw)]).optional(),maintenanceLogs:e.union([e.boolean(),e.lazy(()=>z9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>cx)]).optional()}).strict(),IR=e.object({select:e.lazy(()=>ls).optional(),include:e.lazy(()=>rs).optional()}).strict(),cx=e.object({select:e.lazy(()=>m5).nullish()}).strict(),m5=e.object({recipes:e.boolean().optional(),maintenanceLogs:e.boolean().optional()}).strict(),ls=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),model:e.boolean().optional(),serialNumber:e.boolean().optional(),purchaseDate:e.boolean().optional(),lastMaintenance:e.boolean().optional(),nextMaintenance:e.boolean().optional(),status:e.boolean().optional(),location:e.boolean().optional(),restaurantId:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>fw)]).optional(),maintenanceLogs:e.union([e.boolean(),e.lazy(()=>z9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>cx)]).optional()}).strict(),cs=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>IR)]).optional()}).strict(),Yie=e.object({select:e.lazy(()=>ps).optional(),include:e.lazy(()=>cs).optional()}).strict(),ps=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),equipmentId:e.boolean().optional(),notes:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>IR)]).optional()}).strict(),us=e.object({equipment:e.union([e.boolean(),e.lazy(()=>IR)]).optional()}).strict(),Jie=e.object({select:e.lazy(()=>ss).optional(),include:e.lazy(()=>us).optional()}).strict(),ss=e.object({id:e.boolean().optional(),equipmentId:e.boolean().optional(),date:e.boolean().optional(),type:e.boolean().optional(),description:e.boolean().optional(),cost:e.boolean().optional(),performedBy:e.boolean().optional(),notes:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),equipment:e.union([e.boolean(),e.lazy(()=>IR)]).optional()}).strict(),ys=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>b9)]).optional(),completions:e.union([e.boolean(),e.lazy(()=>jw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>px)]).optional()}).strict(),gR=e.object({select:e.lazy(()=>ds).optional(),include:e.lazy(()=>ys).optional()}).strict(),px=e.object({select:e.lazy(()=>z5).nullish()}).strict(),z5=e.object({items:e.boolean().optional(),completions:e.boolean().optional()}).strict(),ds=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),restaurantId:e.boolean().optional(),frequency:e.boolean().optional(),isActive:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>b9)]).optional(),completions:e.union([e.boolean(),e.lazy(()=>jw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>px)]).optional()}).strict(),ms=e.object({checklist:e.union([e.boolean(),e.lazy(()=>gR)]).optional(),completions:e.union([e.boolean(),e.lazy(()=>Mw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>sx)]).optional()}).strict(),ux=e.object({select:e.lazy(()=>zs).optional(),include:e.lazy(()=>ms).optional()}).strict(),sx=e.object({select:e.lazy(()=>h5).nullish()}).strict(),h5=e.object({completions:e.boolean().optional()}).strict(),zs=e.object({id:e.boolean().optional(),checklistId:e.boolean().optional(),description:e.boolean().optional(),order:e.boolean().optional(),type:e.boolean().optional(),requiredPhotos:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),checklist:e.union([e.boolean(),e.lazy(()=>gR)]).optional(),completions:e.union([e.boolean(),e.lazy(()=>Mw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>sx)]).optional()}).strict(),hs=e.object({checklist:e.union([e.boolean(),e.lazy(()=>gR)]).optional(),completedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Mw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>dx)]).optional()}).strict(),yx=e.object({select:e.lazy(()=>bs).optional(),include:e.lazy(()=>hs).optional()}).strict(),dx=e.object({select:e.lazy(()=>b5).nullish()}).strict(),b5=e.object({items:e.boolean().optional()}).strict(),bs=e.object({id:e.boolean().optional(),checklistId:e.boolean().optional(),completedById:e.boolean().optional(),date:e.boolean().optional(),notes:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),checklist:e.union([e.boolean(),e.lazy(()=>gR)]).optional(),completedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Mw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>dx)]).optional()}).strict(),Is=e.object({checklistComplete:e.union([e.boolean(),e.lazy(()=>yx)]).optional(),checklistItem:e.union([e.boolean(),e.lazy(()=>ux)]).optional()}).strict(),Kie=e.object({select:e.lazy(()=>gs).optional(),include:e.lazy(()=>Is).optional()}).strict(),gs=e.object({id:e.boolean().optional(),checklistCompleteId:e.boolean().optional(),checklistItemId:e.boolean().optional(),status:e.boolean().optional(),notes:e.boolean().optional(),photoUrls:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),checklistComplete:e.union([e.boolean(),e.lazy(()=>yx)]).optional(),checklistItem:e.union([e.boolean(),e.lazy(()=>ux)]).optional()}).strict(),Ss=e.object({vendor:e.union([e.boolean(),e.lazy(()=>AR)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional()}).strict(),Xie=e.object({select:e.lazy(()=>vs).optional(),include:e.lazy(()=>Ss).optional()}).strict(),vs=e.object({id:e.boolean().optional(),vendorId:e.boolean().optional(),ingredientId:e.boolean().optional(),price:e.boolean().optional(),unit:e.boolean().optional(),startDate:e.boolean().optional(),endDate:e.boolean().optional(),notes:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),vendor:e.union([e.boolean(),e.lazy(()=>AR)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional()}).strict(),As=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),respondedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),ere=e.object({select:e.lazy(()=>Cs).optional(),include:e.lazy(()=>As).optional()}).strict(),Cs=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),menuItemId:e.boolean().optional(),rating:e.boolean().optional(),comment:e.boolean().optional(),source:e.boolean().optional(),tags:e.boolean().optional(),status:e.boolean().optional(),responseText:e.boolean().optional(),respondedAt:e.boolean().optional(),respondedById:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),respondedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),Ws=e.object({menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>Bw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>zx)]).optional()}).strict(),mx=e.object({select:e.lazy(()=>Us).optional(),include:e.lazy(()=>Ws).optional()}).strict(),zx=e.object({select:e.lazy(()=>I5).nullish()}).strict(),I5=e.object({menuItems:e.boolean().optional(),recipes:e.boolean().optional(),ingredients:e.boolean().optional()}).strict(),Us=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),icon:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>Bw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>zx)]).optional()}).strict(),ks=e.object({recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>hx)]).optional()}).strict(),tre=e.object({select:e.lazy(()=>Rs).optional(),include:e.lazy(()=>ks).optional()}).strict(),hx=e.object({select:e.lazy(()=>g5).nullish()}).strict(),g5=e.object({recipes:e.boolean().optional()}).strict(),Rs=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>hx)]).optional()}).strict(),fs=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),recordedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),are=e.object({select:e.lazy(()=>js).optional(),include:e.lazy(()=>fs).optional()}).strict(),js=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),date:e.boolean().optional(),menuItemId:e.boolean().optional(),quantity:e.boolean().optional(),reason:e.boolean().optional(),recordedById:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),recordedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),Ms=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),ingrediente:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),recordedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),nre=e.object({select:e.lazy(()=>Os).optional(),include:e.lazy(()=>Ms).optional()}).strict(),Os=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),date:e.boolean().optional(),ingredientId:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),reason:e.boolean().optional(),recordedById:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),ingrediente:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),recordedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),ws=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ix)]).optional()}).strict(),bx=e.object({select:e.lazy(()=>Ts).optional(),include:e.lazy(()=>ws).optional()}).strict(),Ix=e.object({select:e.lazy(()=>S5).nullish()}).strict(),S5=e.object({items:e.boolean().optional()}).strict(),Ts=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),date:e.boolean().optional(),createdById:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ix)]).optional()}).strict(),Ps=e.object({productionPlan:e.union([e.boolean(),e.lazy(()=>bx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),assignedTo:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),ore=e.object({select:e.lazy(()=>Ns).optional(),include:e.lazy(()=>Ps).optional()}).strict(),Ns=e.object({id:e.boolean().optional(),productionPlanId:e.boolean().optional(),recipeId:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),assignedToId:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),productionPlan:e.union([e.boolean(),e.lazy(()=>bx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),assignedTo:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),Bs=e.object({shift:e.union([e.boolean(),e.lazy(()=>Px)]).optional()}).strict(),ire=e.object({select:e.lazy(()=>_s).optional(),include:e.lazy(()=>Bs).optional()}).strict(),_s=e.object({id:e.boolean().optional(),shiftId:e.boolean().optional(),taskType:e.boolean().optional(),startTime:e.boolean().optional(),endTime:e.boolean().optional(),duration:e.boolean().optional(),notes:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),shift:e.union([e.boolean(),e.lazy(()=>Px)]).optional()}).strict(),qs=e.object({user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),rre=e.object({select:e.lazy(()=>Fs).optional(),include:e.lazy(()=>qs).optional()}).strict(),Fs=e.object({id:e.boolean().optional(),userId:e.boolean().optional(),dayOfWeek:e.boolean().optional(),startTime:e.boolean().optional(),endTime:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),Es=e.object({user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),lre=e.object({select:e.lazy(()=>Ds).optional(),include:e.lazy(()=>Es).optional()}).strict(),Ds=e.object({id:e.boolean().optional(),userId:e.boolean().optional(),date:e.boolean().optional(),constraintsType:e.boolean().optional(),startTime:e.boolean().optional(),endTime:e.boolean().optional(),notes:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),xs=e.object({inventoryItem:e.union([e.boolean(),e.lazy(()=>jx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),cre=e.object({select:e.lazy(()=>Vs).optional(),include:e.lazy(()=>xs).optional()}).strict(),Vs=e.object({id:e.boolean().optional(),inventoryItemId:e.boolean().optional(),dateTime:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),recipeId:e.boolean().optional(),createdById:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),inventoryItem:e.union([e.boolean(),e.lazy(()=>jx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),createdBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),Hs=e.object({ingredients:e.union([e.boolean(),e.lazy(()=>Pw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Sx)]).optional()}).strict(),gx=e.object({select:e.lazy(()=>Ls).optional(),include:e.lazy(()=>Hs).optional()}).strict(),Sx=e.object({select:e.lazy(()=>v5).nullish()}).strict(),v5=e.object({ingredients:e.boolean().optional()}).strict(),Ls=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),ingredients:e.union([e.boolean(),e.lazy(()=>Pw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Sx)]).optional()}).strict(),Zs=e.object({ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),allergen:e.union([e.boolean(),e.lazy(()=>gx)]).optional()}).strict(),pre=e.object({select:e.lazy(()=>$s).optional(),include:e.lazy(()=>Zs).optional()}).strict(),$s=e.object({id:e.boolean().optional(),ingredientId:e.boolean().optional(),allergenId:e.boolean().optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),allergen:e.union([e.boolean(),e.lazy(()=>gx)]).optional()}).strict(),Qs=e.object({menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),ure=e.object({select:e.lazy(()=>Gs).optional(),include:e.lazy(()=>Qs).optional()}).strict(),Gs=e.object({id:e.boolean().optional(),menuItemId:e.boolean().optional(),recommendation:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),Zd=e.object({id:e.boolean().optional(),email:e.boolean().optional(),isEmailSent:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional()}).strict(),Ys=e.object({restaurants:e.union([e.boolean(),e.lazy(()=>C9)]).optional(),users:e.union([e.boolean(),e.lazy(()=>Nw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>vx)]).optional()}).strict(),SR=e.object({select:e.lazy(()=>Js).optional(),include:e.lazy(()=>Ys).optional()}).strict(),vx=e.object({select:e.lazy(()=>A5).nullish()}).strict(),A5=e.object({restaurants:e.boolean().optional(),users:e.boolean().optional()}).strict(),Js=e.object({id:e.boolean().optional(),name:e.boolean().optional(),imageUrl:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurants:e.union([e.boolean(),e.lazy(()=>C9)]).optional(),users:e.union([e.boolean(),e.lazy(()=>Nw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>vx)]).optional()}).strict(),Ks=e.object({organization:e.union([e.boolean(),e.lazy(()=>SR)]).optional(),users:e.union([e.boolean(),e.lazy(()=>Nw)]).optional(),cookbooks:e.union([e.boolean(),e.lazy(()=>U9)]).optional(),inventory:e.union([e.boolean(),e.lazy(()=>vR)]).optional(),orders:e.union([e.boolean(),e.lazy(()=>qw)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),menus:e.union([e.boolean(),e.lazy(()=>M9)]).optional(),salesTransactions:e.union([e.boolean(),e.lazy(()=>Rw)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),wasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),productionPlan:e.union([e.boolean(),e.lazy(()=>Tw)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>m9)]).optional(),qualityChecklist:e.union([e.boolean(),e.lazy(()=>h9)]).optional(),qustomerFeedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ax)]).optional()}).strict(),Qt=e.object({select:e.lazy(()=>Xs).optional(),include:e.lazy(()=>Ks).optional()}).strict(),Ax=e.object({select:e.lazy(()=>C5).nullish()}).strict(),C5=e.object({users:e.boolean().optional(),cookbooks:e.boolean().optional(),orders:e.boolean().optional(),recipes:e.boolean().optional(),menus:e.boolean().optional(),salesTransactions:e.boolean().optional(),leftoverItem:e.boolean().optional(),wasteRecord:e.boolean().optional(),productionPlan:e.boolean().optional(),equipment:e.boolean().optional(),qualityChecklist:e.boolean().optional(),qustomerFeedback:e.boolean().optional()}).strict(),Xs=e.object({id:e.boolean().optional(),name:e.boolean().optional(),imageUrl:e.boolean().optional(),address:e.boolean().optional(),city:e.boolean().optional(),zipCode:e.boolean().optional(),state:e.boolean().optional(),owner:e.boolean().optional(),organizationId:e.boolean().optional(),foodCost:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),isDeleted:e.boolean().optional(),deleted:e.boolean().optional(),organization:e.union([e.boolean(),e.lazy(()=>SR)]).optional(),users:e.union([e.boolean(),e.lazy(()=>Nw)]).optional(),cookbooks:e.union([e.boolean(),e.lazy(()=>U9)]).optional(),inventory:e.union([e.boolean(),e.lazy(()=>vR)]).optional(),orders:e.union([e.boolean(),e.lazy(()=>qw)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),menus:e.union([e.boolean(),e.lazy(()=>M9)]).optional(),salesTransactions:e.union([e.boolean(),e.lazy(()=>Rw)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),wasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),productionPlan:e.union([e.boolean(),e.lazy(()=>Tw)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>m9)]).optional(),qualityChecklist:e.union([e.boolean(),e.lazy(()=>h9)]).optional(),qustomerFeedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ax)]).optional()}).strict(),ey=e.object({organization:e.union([e.boolean(),e.lazy(()=>SR)]).optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),shifts:e.union([e.boolean(),e.lazy(()=>R9)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),inventoryUpdates:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),sessions:e.union([e.boolean(),e.lazy(()=>W9)]).optional(),passwordResets:e.union([e.boolean(),e.lazy(()=>j9)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),wasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),productionPlan:e.union([e.boolean(),e.lazy(()=>Tw)]).optional(),productionPlanItem:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),availability:e.union([e.boolean(),e.lazy(()=>S9)]).optional(),schedulingConstraint:e.union([e.boolean(),e.lazy(()=>v9)]).optional(),inventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),checklistComplete:e.union([e.boolean(),e.lazy(()=>jw)]).optional(),customerFeedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),recipeVersionsCreated:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),recipeVersionsApproved:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Cx)]).optional()}).strict(),kt=e.object({select:e.lazy(()=>ty).optional(),include:e.lazy(()=>ey).optional()}).strict(),Cx=e.object({select:e.lazy(()=>W5).nullish()}).strict(),W5=e.object({shifts:e.boolean().optional(),prepItems:e.boolean().optional(),inventoryUpdates:e.boolean().optional(),sessions:e.boolean().optional(),passwordResets:e.boolean().optional(),leftoverItem:e.boolean().optional(),wasteRecord:e.boolean().optional(),productionPlan:e.boolean().optional(),productionPlanItem:e.boolean().optional(),availability:e.boolean().optional(),schedulingConstraint:e.boolean().optional(),inventoryWithdrawal:e.boolean().optional(),checklistComplete:e.boolean().optional(),customerFeedback:e.boolean().optional(),recipeVersionsCreated:e.boolean().optional(),recipeVersionsApproved:e.boolean().optional()}).strict(),ty=e.object({id:e.boolean().optional(),email:e.boolean().optional(),sub:e.boolean().optional(),passwordHash:e.boolean().optional(),firstName:e.boolean().optional(),lastName:e.boolean().optional(),profileImage:e.boolean().optional(),verified:e.boolean().optional(),role:e.boolean().optional(),organizationId:e.boolean().optional(),restaurantId:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),organization:e.union([e.boolean(),e.lazy(()=>SR)]).optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),shifts:e.union([e.boolean(),e.lazy(()=>R9)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),inventoryUpdates:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),sessions:e.union([e.boolean(),e.lazy(()=>W9)]).optional(),passwordResets:e.union([e.boolean(),e.lazy(()=>j9)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),wasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),productionPlan:e.union([e.boolean(),e.lazy(()=>Tw)]).optional(),productionPlanItem:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),availability:e.union([e.boolean(),e.lazy(()=>S9)]).optional(),schedulingConstraint:e.union([e.boolean(),e.lazy(()=>v9)]).optional(),inventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),checklistComplete:e.union([e.boolean(),e.lazy(()=>jw)]).optional(),customerFeedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),recipeVersionsCreated:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),recipeVersionsApproved:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Cx)]).optional()}).strict(),ay=e.object({user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),sre=e.object({select:e.lazy(()=>ny).optional(),include:e.lazy(()=>ay).optional()}).strict(),ny=e.object({id:e.boolean().optional(),userId:e.boolean().optional(),code:e.boolean().optional(),token:e.boolean().optional(),expiresAt:e.boolean().optional(),createdAt:e.boolean().optional(),user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),oy=e.object({recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ux)]).optional()}).strict(),Wx=e.object({select:e.lazy(()=>iy).optional(),include:e.lazy(()=>oy).optional()}).strict(),Ux=e.object({select:e.lazy(()=>U5).nullish()}).strict(),U5=e.object({recipes:e.boolean().optional()}).strict(),iy=e.object({id:e.boolean().optional(),name:e.boolean().optional(),imageUrl:e.boolean().optional(),category:e.boolean().optional(),restaurantId:e.boolean().optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Ux)]).optional()}).strict(),ry=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),cookBook:e.union([e.boolean(),e.lazy(()=>Wx)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),instructions:e.union([e.boolean(),e.lazy(()=>_w)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),foodCostHistory:e.union([e.boolean(),e.lazy(()=>O9)]).optional(),prepHistory:e.union([e.boolean(),e.lazy(()=>w9)]).optional(),prepBoards:e.union([e.boolean(),e.lazy(()=>f9)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),MenuItemRecipe:e.union([e.boolean(),e.lazy(()=>Ew)]).optional(),ProductionPlanItem:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),InventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),tags:e.union([e.boolean(),e.lazy(()=>I9)]).optional(),versions:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>fw)]).optional(),dietaryRestrictions:e.union([e.boolean(),e.lazy(()=>ww)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>kx)]).optional()}).strict(),Ha=e.object({select:e.lazy(()=>ly).optional(),include:e.lazy(()=>ry).optional()}).strict(),kx=e.object({select:e.lazy(()=>k5).nullish()}).strict(),k5=e.object({ingredients:e.boolean().optional(),instructions:e.boolean().optional(),menuItems:e.boolean().optional(),foodCostHistory:e.boolean().optional(),prepHistory:e.boolean().optional(),prepBoards:e.boolean().optional(),prepItems:e.boolean().optional(),MenuItemRecipe:e.boolean().optional(),ProductionPlanItem:e.boolean().optional(),InventoryWithdrawal:e.boolean().optional(),tags:e.boolean().optional(),versions:e.boolean().optional(),equipment:e.boolean().optional(),dietaryRestrictions:e.boolean().optional()}).strict(),ly=e.object({id:e.boolean().optional(),name:e.boolean().optional(),imageUrl:e.boolean().optional(),description:e.boolean().optional(),servings:e.boolean().optional(),cookTime:e.boolean().optional(),prepTime:e.boolean().optional(),frequency:e.boolean().optional(),restaurantId:e.boolean().optional(),cookBookId:e.boolean().optional(),foodCost:e.boolean().optional(),isDeleted:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),cookBook:e.union([e.boolean(),e.lazy(()=>Wx)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),instructions:e.union([e.boolean(),e.lazy(()=>_w)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),foodCostHistory:e.union([e.boolean(),e.lazy(()=>O9)]).optional(),prepHistory:e.union([e.boolean(),e.lazy(()=>w9)]).optional(),prepBoards:e.union([e.boolean(),e.lazy(()=>f9)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),MenuItemRecipe:e.union([e.boolean(),e.lazy(()=>Ew)]).optional(),ProductionPlanItem:e.union([e.boolean(),e.lazy(()=>Lg)]).optional(),InventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),tags:e.union([e.boolean(),e.lazy(()=>I9)]).optional(),versions:e.union([e.boolean(),e.lazy(()=>Cg)]).optional(),equipment:e.union([e.boolean(),e.lazy(()=>fw)]).optional(),dietaryRestrictions:e.union([e.boolean(),e.lazy(()=>ww)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>kx)]).optional()}).strict(),cy=e.object({recipeIngredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),inventoryItems:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),orderItems:e.union([e.boolean(),e.lazy(()=>Fw)]).optional(),vendors:e.union([e.boolean(),e.lazy(()=>k9)]).optional(),WasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),IngredientAllergen:e.union([e.boolean(),e.lazy(()=>Pw)]).optional(),SupplierPriceHistory:e.union([e.boolean(),e.lazy(()=>Ow)]).optional(),DietaryRestriction:e.union([e.boolean(),e.lazy(()=>mx)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Rx)]).optional()}).strict(),Jr=e.object({select:e.lazy(()=>py).optional(),include:e.lazy(()=>cy).optional()}).strict(),Rx=e.object({select:e.lazy(()=>R5).nullish()}).strict(),R5=e.object({recipeIngredients:e.boolean().optional(),inventoryItems:e.boolean().optional(),orderItems:e.boolean().optional(),vendors:e.boolean().optional(),WasteRecord:e.boolean().optional(),IngredientAllergen:e.boolean().optional(),SupplierPriceHistory:e.boolean().optional()}).strict(),py=e.object({id:e.boolean().optional(),name:e.boolean().optional(),category:e.boolean().optional(),price:e.boolean().optional(),dietaryRestrictionId:e.boolean().optional(),recipeIngredients:e.union([e.boolean(),e.lazy(()=>$g)]).optional(),inventoryItems:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),orderItems:e.union([e.boolean(),e.lazy(()=>Fw)]).optional(),vendors:e.union([e.boolean(),e.lazy(()=>k9)]).optional(),WasteRecord:e.union([e.boolean(),e.lazy(()=>Hg)]).optional(),IngredientAllergen:e.union([e.boolean(),e.lazy(()=>Pw)]).optional(),SupplierPriceHistory:e.union([e.boolean(),e.lazy(()=>Ow)]).optional(),DietaryRestriction:e.union([e.boolean(),e.lazy(()=>mx)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Rx)]).optional()}).strict(),uy=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),RecipeVersion:e.union([e.boolean(),e.lazy(()=>bR)]).optional()}).strict(),yre=e.object({select:e.lazy(()=>sy).optional(),include:e.lazy(()=>uy).optional()}).strict(),sy=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),ingredientId:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),joinAt:e.boolean().optional(),recipeVersionId:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),RecipeVersion:e.union([e.boolean(),e.lazy(()=>bR)]).optional()}).strict(),yy=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),RecipeVersion:e.union([e.boolean(),e.lazy(()=>bR)]).optional()}).strict(),dre=e.object({select:e.lazy(()=>dy).optional(),include:e.lazy(()=>yy).optional()}).strict(),dy=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),stepNumber:e.boolean().optional(),instruction:e.boolean().optional(),imageUrl:e.boolean().optional(),recipeVersionId:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),RecipeVersion:e.union([e.boolean(),e.lazy(()=>bR)]).optional()}).strict(),my=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>fx)]).optional()}).strict(),vR=e.object({select:e.lazy(()=>zy).optional(),include:e.lazy(()=>my).optional()}).strict(),fx=e.object({select:e.lazy(()=>f5).nullish()}).strict(),f5=e.object({items:e.boolean().optional()}).strict(),zy=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Qg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>fx)]).optional()}).strict(),hy=e.object({inventory:e.union([e.boolean(),e.lazy(()=>vR)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),lastUpdatedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),InventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Mx)]).optional()}).strict(),jx=e.object({select:e.lazy(()=>by).optional(),include:e.lazy(()=>hy).optional()}).strict(),Mx=e.object({select:e.lazy(()=>j5).nullish()}).strict(),j5=e.object({InventoryWithdrawal:e.boolean().optional()}).strict(),by=e.object({id:e.boolean().optional(),inventoryId:e.boolean().optional(),ingredientId:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),minQuantity:e.boolean().optional(),restockThreshold:e.boolean().optional(),lastUpdatedById:e.boolean().optional(),lastUpdated:e.boolean().optional(),inventory:e.union([e.boolean(),e.lazy(()=>vR)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional(),lastUpdatedBy:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),InventoryWithdrawal:e.union([e.boolean(),e.lazy(()=>Zg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Mx)]).optional()}).strict(),Iy=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),vendor:e.union([e.boolean(),e.lazy(()=>AR)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Fw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>wx)]).optional()}).strict(),Ox=e.object({select:e.lazy(()=>gy).optional(),include:e.lazy(()=>Iy).optional()}).strict(),wx=e.object({select:e.lazy(()=>M5).nullish()}).strict(),M5=e.object({items:e.boolean().optional()}).strict(),gy=e.object({id:e.boolean().optional(),restaurantId:e.boolean().optional(),vendorId:e.boolean().optional(),status:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),vendor:e.union([e.boolean(),e.lazy(()=>AR)]).optional(),items:e.union([e.boolean(),e.lazy(()=>Fw)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>wx)]).optional()}).strict(),Sy=e.object({order:e.union([e.boolean(),e.lazy(()=>Ox)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional()}).strict(),mre=e.object({select:e.lazy(()=>vy).optional(),include:e.lazy(()=>Sy).optional()}).strict(),vy=e.object({id:e.boolean().optional(),orderId:e.boolean().optional(),ingredientId:e.boolean().optional(),quantity:e.boolean().optional(),unit:e.boolean().optional(),price:e.boolean().optional(),order:e.union([e.boolean(),e.lazy(()=>Ox)]).optional(),ingredient:e.union([e.boolean(),e.lazy(()=>Jr)]).optional()}).strict(),Ay=e.object({orders:e.union([e.boolean(),e.lazy(()=>qw)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>Bw)]).optional(),supplierPriceHistory:e.union([e.boolean(),e.lazy(()=>Ow)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Tx)]).optional()}).strict(),AR=e.object({select:e.lazy(()=>Cy).optional(),include:e.lazy(()=>Ay).optional()}).strict(),Tx=e.object({select:e.lazy(()=>O5).nullish()}).strict(),O5=e.object({orders:e.boolean().optional(),ingredients:e.boolean().optional(),supplierPriceHistory:e.boolean().optional()}).strict(),Cy=e.object({id:e.boolean().optional(),name:e.boolean().optional(),contact:e.boolean().optional(),email:e.boolean().optional(),phone:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),orders:e.union([e.boolean(),e.lazy(()=>qw)]).optional(),ingredients:e.union([e.boolean(),e.lazy(()=>Bw)]).optional(),supplierPriceHistory:e.union([e.boolean(),e.lazy(()=>Ow)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Tx)]).optional()}).strict(),Wy=e.object({user:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),ShiftTask:e.union([e.boolean(),e.lazy(()=>g9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Nx)]).optional()}).strict(),Px=e.object({select:e.lazy(()=>Uy).optional(),include:e.lazy(()=>Wy).optional()}).strict(),Nx=e.object({select:e.lazy(()=>w5).nullish()}).strict(),w5=e.object({ShiftTask:e.boolean().optional()}).strict(),Uy=e.object({id:e.boolean().optional(),userId:e.boolean().optional(),startTime:e.boolean().optional(),endTime:e.boolean().optional(),status:e.boolean().optional(),user:e.union([e.boolean(),e.lazy(()=>kt)]).optional(),ShiftTask:e.union([e.boolean(),e.lazy(()=>g9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Nx)]).optional()}).strict(),ky=e.object({recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>_x)]).optional()}).strict(),Bx=e.object({select:e.lazy(()=>Ry).optional(),include:e.lazy(()=>ky).optional()}).strict(),_x=e.object({select:e.lazy(()=>T5).nullish()}).strict(),T5=e.object({recipes:e.boolean().optional(),prepItems:e.boolean().optional()}).strict(),Ry=e.object({id:e.boolean().optional(),name:e.boolean().optional(),status:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),prepItems:e.union([e.boolean(),e.lazy(()=>Gg)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>_x)]).optional()}).strict(),fy=e.object({prepBoard:e.union([e.boolean(),e.lazy(()=>Bx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),assignedTo:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),zre=e.object({select:e.lazy(()=>jy).optional(),include:e.lazy(()=>fy).optional()}).strict(),jy=e.object({id:e.boolean().optional(),prepBoardId:e.boolean().optional(),recipeId:e.boolean().optional(),quantity:e.boolean().optional(),status:e.boolean().optional(),assignedToId:e.boolean().optional(),prepBoard:e.union([e.boolean(),e.lazy(()=>Bx)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional(),assignedTo:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),My=e.object({user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),hre=e.object({select:e.lazy(()=>Oy).optional(),include:e.lazy(()=>My).optional()}).strict(),Oy=e.object({id:e.boolean().optional(),token:e.boolean().optional(),userId:e.boolean().optional(),expiresAt:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),user:e.union([e.boolean(),e.lazy(()=>kt)]).optional()}).strict(),wy=e.object({restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),MenuCategory:e.union([e.boolean(),e.lazy(()=>d9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>qx)]).optional()}).strict(),CR=e.object({select:e.lazy(()=>Ty).optional(),include:e.lazy(()=>wy).optional()}).strict(),qx=e.object({select:e.lazy(()=>P5).nullish()}).strict(),P5=e.object({menuItems:e.boolean().optional(),MenuCategory:e.boolean().optional()}).strict(),Ty=e.object({id:e.boolean().optional(),name:e.boolean().optional(),restaurantId:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),restaurant:e.union([e.boolean(),e.lazy(()=>Qt)]).optional(),menuItems:e.union([e.boolean(),e.lazy(()=>Hh)]).optional(),MenuCategory:e.union([e.boolean(),e.lazy(()=>d9)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>qx)]).optional()}).strict(),Py=e.object({menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),bre=e.object({select:e.lazy(()=>Ny).optional(),include:e.lazy(()=>Py).optional()}).strict(),Ny=e.object({id:e.boolean().optional(),menuItemId:e.boolean().optional(),recipeId:e.boolean().optional(),joinAt:e.boolean().optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),By=e.object({nutritionalInfo:e.union([e.boolean(),e.lazy(()=>Ex)]).optional(),menu:e.union([e.boolean(),e.lazy(()=>CR)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),menuItemRecipe:e.union([e.boolean(),e.lazy(()=>Ew)]).optional(),salesTransactions:e.union([e.boolean(),e.lazy(()=>Rw)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),nutritionalRecommendation:e.union([e.boolean(),e.lazy(()=>A9)]).optional(),category:e.union([e.boolean(),e.lazy(()=>ix)]).optional(),feedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),dietaryRestrictions:e.union([e.boolean(),e.lazy(()=>ww)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Fx)]).optional()}).strict(),Kr=e.object({select:e.lazy(()=>_y).optional(),include:e.lazy(()=>By).optional()}).strict(),Fx=e.object({select:e.lazy(()=>N5).nullish()}).strict(),N5=e.object({recipes:e.boolean().optional(),menuItemRecipe:e.boolean().optional(),salesTransactions:e.boolean().optional(),leftoverItem:e.boolean().optional(),nutritionalRecommendation:e.boolean().optional(),feedback:e.boolean().optional(),dietaryRestrictions:e.boolean().optional()}).strict(),_y=e.object({id:e.boolean().optional(),name:e.boolean().optional(),description:e.boolean().optional(),price:e.boolean().optional(),foodCost:e.boolean().optional(),recipeIds:e.boolean().optional(),recipeServingsAmount:e.boolean().optional(),recipeServingsCost:e.boolean().optional(),allergens:e.boolean().optional(),nutritionalInfoId:e.boolean().optional(),menuId:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),categoryId:e.boolean().optional(),nutritionalInfo:e.union([e.boolean(),e.lazy(()=>Ex)]).optional(),menu:e.union([e.boolean(),e.lazy(()=>CR)]).optional(),recipes:e.union([e.boolean(),e.lazy(()=>ol)]).optional(),menuItemRecipe:e.union([e.boolean(),e.lazy(()=>Ew)]).optional(),salesTransactions:e.union([e.boolean(),e.lazy(()=>Rw)]).optional(),leftoverItem:e.union([e.boolean(),e.lazy(()=>Vg)]).optional(),nutritionalRecommendation:e.union([e.boolean(),e.lazy(()=>A9)]).optional(),category:e.union([e.boolean(),e.lazy(()=>ix)]).optional(),feedback:e.union([e.boolean(),e.lazy(()=>xg)]).optional(),dietaryRestrictions:e.union([e.boolean(),e.lazy(()=>ww)]).optional(),_count:e.union([e.boolean(),e.lazy(()=>Fx)]).optional()}).strict(),qy=e.object({menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),Ex=e.object({select:e.lazy(()=>Fy).optional(),include:e.lazy(()=>qy).optional()}).strict(),Fy=e.object({id:e.boolean().optional(),menuItemId:e.boolean().optional(),calories:e.boolean().optional(),fat:e.boolean().optional(),saturatedFat:e.boolean().optional(),transFat:e.boolean().optional(),cholesterol:e.boolean().optional(),sodium:e.boolean().optional(),carbohydrates:e.boolean().optional(),fiber:e.boolean().optional(),sugar:e.boolean().optional(),protein:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),menuItem:e.union([e.boolean(),e.lazy(()=>Kr)]).optional()}).strict(),Ey=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),Ire=e.object({select:e.lazy(()=>Dy).optional(),include:e.lazy(()=>Ey).optional()}).strict(),Dy=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),cost:e.boolean().optional(),date:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),xy=e.object({recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),gre=e.object({select:e.lazy(()=>Vy).optional(),include:e.lazy(()=>xy).optional()}).strict(),Vy=e.object({id:e.boolean().optional(),recipeId:e.boolean().optional(),quantity:e.boolean().optional(),date:e.boolean().optional(),createdAt:e.boolean().optional(),updatedAt:e.boolean().optional(),recipe:e.union([e.boolean(),e.lazy(()=>Ha)]).optional()}).strict(),ua=e.object({AND:e.union([e.lazy(()=>ua),e.lazy(()=>ua).array()]).optional(),OR:e.lazy(()=>ua).array().optional(),NOT:e.union([e.lazy(()=>ua),e.lazy(()=>ua).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),posTransactionID:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),total:e.union([e.lazy(()=>re),e.number()]).optional(),transactionDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional()}).strict(),am=e.object({id:e.lazy(()=>t).optional(),posTransactionID:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional(),transactionDate:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),menuItem:e.lazy(()=>Fi).optional()}).strict(),me=e.union([e.object({id:e.number().int(),posTransactionID:e.string()}),e.object({id:e.number().int()}),e.object({posTransactionID:e.string()})]).and(e.object({id:e.number().int().optional(),posTransactionID:e.string().optional(),AND:e.union([e.lazy(()=>ua),e.lazy(()=>ua).array()]).optional(),OR:e.lazy(()=>ua).array().optional(),NOT:e.union([e.lazy(()=>ua),e.lazy(()=>ua).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),total:e.union([e.lazy(()=>re),e.number()]).optional(),transactionDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional()}).strict()),WF=e.object({id:e.lazy(()=>t).optional(),posTransactionID:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional(),transactionDate:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>_6).optional(),_avg:e.lazy(()=>q6).optional(),_max:e.lazy(()=>F6).optional(),_min:e.lazy(()=>E6).optional(),_sum:e.lazy(()=>D6).optional()}).strict(),nI=e.object({AND:e.union([e.lazy(()=>nI),e.lazy(()=>nI).array()]).optional(),OR:e.lazy(()=>nI).array().optional(),NOT:e.union([e.lazy(()=>nI),e.lazy(()=>nI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),posTransactionID:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>k),e.number()]).optional(),price:e.union([e.lazy(()=>Gt),e.number()]).optional(),total:e.union([e.lazy(()=>Gt),e.number()]).optional(),transactionDate:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Tt=e.object({AND:e.union([e.lazy(()=>Tt),e.lazy(()=>Tt).array()]).optional(),OR:e.lazy(()=>Tt).array().optional(),NOT:e.union([e.lazy(()=>Tt),e.lazy(()=>Tt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),displayOrder:e.union([e.lazy(()=>z),e.number()]).optional(),menuId:e.union([e.lazy(()=>z),e.number()]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menu:e.union([e.lazy(()=>TR),e.lazy(()=>Ot)]).optional(),menuItems:e.lazy(()=>sh).optional()}).strict(),wd=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),menu:e.lazy(()=>Vl).optional(),menuItems:e.lazy(()=>PR).optional()}).strict(),tt=e.union([e.object({id:e.number().int(),menuId_name:e.lazy(()=>Zw)}),e.object({id:e.number().int()}),e.object({menuId_name:e.lazy(()=>Zw)})]).and(e.object({id:e.number().int().optional(),menuId_name:e.lazy(()=>Zw).optional(),AND:e.union([e.lazy(()=>Tt),e.lazy(()=>Tt).array()]).optional(),OR:e.lazy(()=>Tt).array().optional(),NOT:e.union([e.lazy(()=>Tt),e.lazy(()=>Tt).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),displayOrder:e.union([e.lazy(()=>z),e.number().int()]).optional(),menuId:e.union([e.lazy(()=>z),e.number().int()]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menu:e.union([e.lazy(()=>TR),e.lazy(()=>Ot)]).optional(),menuItems:e.lazy(()=>sh).optional()}).strict()),UF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>x6).optional(),_avg:e.lazy(()=>V6).optional(),_max:e.lazy(()=>H6).optional(),_min:e.lazy(()=>L6).optional(),_sum:e.lazy(()=>Z6).optional()}).strict(),oI=e.object({AND:e.union([e.lazy(()=>oI),e.lazy(()=>oI).array()]).optional(),OR:e.lazy(()=>oI).array().optional(),NOT:e.union([e.lazy(()=>oI),e.lazy(()=>oI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),displayOrder:e.union([e.lazy(()=>k),e.number()]).optional(),menuId:e.union([e.lazy(()=>k),e.number()]).optional(),isActive:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),st=e.object({AND:e.union([e.lazy(()=>st),e.lazy(()=>st).array()]).optional(),OR:e.lazy(()=>st).array().optional(),NOT:e.union([e.lazy(()=>st),e.lazy(()=>st).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),versionNumber:e.union([e.lazy(()=>z),e.number()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),changes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),approvedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),approvedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),ingredients:e.lazy(()=>fg).optional(),instructions:e.lazy(()=>NR).optional(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),approvedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict(),_l=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),changes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),isActive:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),approvedAt:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),recipe:e.lazy(()=>$a).optional(),ingredients:e.lazy(()=>DT).optional(),instructions:e.lazy(()=>LL).optional(),createdBy:e.lazy(()=>ta).optional(),approvedBy:e.lazy(()=>ta).optional()}).strict(),q=e.union([e.object({id:e.number().int(),recipeId_versionNumber:e.lazy(()=>$w)}),e.object({id:e.number().int()}),e.object({recipeId_versionNumber:e.lazy(()=>$w)})]).and(e.object({id:e.number().int().optional(),recipeId_versionNumber:e.lazy(()=>$w).optional(),AND:e.union([e.lazy(()=>st),e.lazy(()=>st).array()]).optional(),OR:e.lazy(()=>st).array().optional(),NOT:e.union([e.lazy(()=>st),e.lazy(()=>st).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),versionNumber:e.union([e.lazy(()=>z),e.number().int()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),changes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdById:e.union([e.lazy(()=>z),e.number().int()]).optional(),approvedById:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),approvedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),ingredients:e.lazy(()=>fg).optional(),instructions:e.lazy(()=>NR).optional(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),approvedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict()),kF=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),changes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),isActive:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),approvedAt:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>$6).optional(),_avg:e.lazy(()=>Q6).optional(),_max:e.lazy(()=>G6).optional(),_min:e.lazy(()=>Y6).optional(),_sum:e.lazy(()=>J6).optional()}).strict(),iI=e.object({AND:e.union([e.lazy(()=>iI),e.lazy(()=>iI).array()]).optional(),OR:e.lazy(()=>iI).array().optional(),NOT:e.union([e.lazy(()=>iI),e.lazy(()=>iI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),versionNumber:e.union([e.lazy(()=>k),e.number()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),changes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),isActive:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdById:e.union([e.lazy(()=>k),e.number()]).optional(),approvedById:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),approvedAt:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ft=e.object({AND:e.union([e.lazy(()=>ft),e.lazy(()=>ft).array()]).optional(),OR:e.lazy(()=>ft).array().optional(),NOT:e.union([e.lazy(()=>ft),e.lazy(()=>ft).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),model:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),serialNumber:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),purchaseDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),lastMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),nextMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),status:e.union([e.lazy(()=>xT),e.lazy(()=>_e)]).optional(),location:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),recipes:e.lazy(()=>BR).optional(),maintenanceLogs:e.lazy(()=>ZL).optional()}).strict(),ql=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),model:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),serialNumber:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),purchaseDate:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),lastMaintenance:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),nextMaintenance:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),status:e.lazy(()=>t).optional(),location:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),recipes:e.lazy(()=>$L).optional(),maintenanceLogs:e.lazy(()=>K6).optional()}).strict(),Ye=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ft),e.lazy(()=>ft).array()]).optional(),OR:e.lazy(()=>ft).array().optional(),NOT:e.union([e.lazy(()=>ft),e.lazy(()=>ft).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),model:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),serialNumber:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),purchaseDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),lastMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),nextMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),status:e.union([e.lazy(()=>xT),e.lazy(()=>_e)]).optional(),location:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),recipes:e.lazy(()=>BR).optional(),maintenanceLogs:e.lazy(()=>ZL).optional()}).strict()),RF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),model:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),serialNumber:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),purchaseDate:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),lastMaintenance:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),nextMaintenance:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),status:e.lazy(()=>t).optional(),location:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>X6).optional(),_avg:e.lazy(()=>e3).optional(),_max:e.lazy(()=>t3).optional(),_min:e.lazy(()=>a3).optional(),_sum:e.lazy(()=>n3).optional()}).strict(),rI=e.object({AND:e.union([e.lazy(()=>rI),e.lazy(()=>rI).array()]).optional(),OR:e.lazy(()=>rI).array().optional(),NOT:e.union([e.lazy(()=>rI),e.lazy(()=>rI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),model:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),serialNumber:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),purchaseDate:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),lastMaintenance:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),nextMaintenance:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),status:e.union([e.lazy(()=>o3),e.lazy(()=>_e)]).optional(),location:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),sa=e.object({AND:e.union([e.lazy(()=>sa),e.lazy(()=>sa).array()]).optional(),OR:e.lazy(()=>sa).array().optional(),NOT:e.union([e.lazy(()=>sa),e.lazy(()=>sa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),equipment:e.union([e.lazy(()=>_R),e.lazy(()=>ft)]).optional()}).strict(),nm=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipe:e.lazy(()=>$a).optional(),equipment:e.lazy(()=>ql).optional()}).strict(),ze=e.union([e.object({id:e.number().int(),recipeId_equipmentId:e.lazy(()=>Qw)}),e.object({id:e.number().int()}),e.object({recipeId_equipmentId:e.lazy(()=>Qw)})]).and(e.object({id:e.number().int().optional(),recipeId_equipmentId:e.lazy(()=>Qw).optional(),AND:e.union([e.lazy(()=>sa),e.lazy(()=>sa).array()]).optional(),OR:e.lazy(()=>sa).array().optional(),NOT:e.union([e.lazy(()=>sa),e.lazy(()=>sa).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number().int()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),equipment:e.union([e.lazy(()=>_R),e.lazy(()=>ft)]).optional()}).strict()),fF=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>i3).optional(),_avg:e.lazy(()=>r3).optional(),_max:e.lazy(()=>l3).optional(),_min:e.lazy(()=>c3).optional(),_sum:e.lazy(()=>p3).optional()}).strict(),lI=e.object({AND:e.union([e.lazy(()=>lI),e.lazy(()=>lI).array()]).optional(),OR:e.lazy(()=>lI).array().optional(),NOT:e.union([e.lazy(()=>lI),e.lazy(()=>lI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>k),e.number()]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable()}).strict(),ya=e.object({AND:e.union([e.lazy(()=>ya),e.lazy(()=>ya).array()]).optional(),OR:e.lazy(()=>ya).array().optional(),NOT:e.union([e.lazy(()=>ya),e.lazy(()=>ya).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),type:e.union([e.lazy(()=>VT),e.lazy(()=>lt)]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),cost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),performedBy:e.union([e.lazy(()=>U),e.string()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),equipment:e.union([e.lazy(()=>_R),e.lazy(()=>ft)]).optional()}).strict(),om=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),cost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),performedBy:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),equipment:e.lazy(()=>ql).optional()}).strict(),ht=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ya),e.lazy(()=>ya).array()]).optional(),OR:e.lazy(()=>ya).array().optional(),NOT:e.union([e.lazy(()=>ya),e.lazy(()=>ya).array()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),type:e.union([e.lazy(()=>VT),e.lazy(()=>lt)]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),cost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),performedBy:e.union([e.lazy(()=>U),e.string()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),equipment:e.union([e.lazy(()=>_R),e.lazy(()=>ft)]).optional()}).strict()),jF=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),cost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),performedBy:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>u3).optional(),_avg:e.lazy(()=>s3).optional(),_max:e.lazy(()=>y3).optional(),_min:e.lazy(()=>d3).optional(),_sum:e.lazy(()=>m3).optional()}).strict(),cI=e.object({AND:e.union([e.lazy(()=>cI),e.lazy(()=>cI).array()]).optional(),OR:e.lazy(()=>cI).array().optional(),NOT:e.union([e.lazy(()=>cI),e.lazy(()=>cI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),type:e.union([e.lazy(()=>z3),e.lazy(()=>lt)]).optional(),description:e.union([e.lazy(()=>We),e.string()]).optional(),cost:e.union([e.lazy(()=>HT),e.number()]).optional().nullable(),performedBy:e.union([e.lazy(()=>We),e.string()]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),jt=e.object({AND:e.union([e.lazy(()=>jt),e.lazy(()=>jt).array()]).optional(),OR:e.lazy(()=>jt).array().optional(),NOT:e.union([e.lazy(()=>jt),e.lazy(()=>jt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),frequency:e.union([e.lazy(()=>LT),e.lazy(()=>qe)]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),items:e.lazy(()=>QL).optional(),completions:e.lazy(()=>qR).optional()}).strict(),Fl=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),items:e.lazy(()=>h3).optional(),completions:e.lazy(()=>GL).optional()}).strict(),Je=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>jt),e.lazy(()=>jt).array()]).optional(),OR:e.lazy(()=>jt).array().optional(),NOT:e.union([e.lazy(()=>jt),e.lazy(()=>jt).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),frequency:e.union([e.lazy(()=>LT),e.lazy(()=>qe)]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),items:e.lazy(()=>QL).optional(),completions:e.lazy(()=>qR).optional()}).strict()),MF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>b3).optional(),_avg:e.lazy(()=>I3).optional(),_max:e.lazy(()=>g3).optional(),_min:e.lazy(()=>S3).optional(),_sum:e.lazy(()=>v3).optional()}).strict(),pI=e.object({AND:e.union([e.lazy(()=>pI),e.lazy(()=>pI).array()]).optional(),OR:e.lazy(()=>pI).array().optional(),NOT:e.union([e.lazy(()=>pI),e.lazy(()=>pI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),frequency:e.union([e.lazy(()=>A3),e.lazy(()=>qe)]).optional(),isActive:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Et=e.object({AND:e.union([e.lazy(()=>Et),e.lazy(()=>Et).array()]).optional(),OR:e.lazy(()=>Et).array().optional(),NOT:e.union([e.lazy(()=>Et),e.lazy(()=>Et).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number()]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),order:e.union([e.lazy(()=>z),e.number()]).optional(),type:e.union([e.lazy(()=>ZT),e.lazy(()=>Le)]).optional(),requiredPhotos:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklist:e.union([e.lazy(()=>FR),e.lazy(()=>jt)]).optional(),completions:e.lazy(()=>ER).optional()}).strict(),Td=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),requiredPhotos:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),checklist:e.lazy(()=>Fl).optional(),completions:e.lazy(()=>YL).optional()}).strict(),at=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Et),e.lazy(()=>Et).array()]).optional(),OR:e.lazy(()=>Et).array().optional(),NOT:e.union([e.lazy(()=>Et),e.lazy(()=>Et).array()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number().int()]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),order:e.union([e.lazy(()=>z),e.number().int()]).optional(),type:e.union([e.lazy(()=>ZT),e.lazy(()=>Le)]).optional(),requiredPhotos:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklist:e.union([e.lazy(()=>FR),e.lazy(()=>jt)]).optional(),completions:e.lazy(()=>ER).optional()}).strict()),OF=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),requiredPhotos:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>C3).optional(),_avg:e.lazy(()=>W3).optional(),_max:e.lazy(()=>U3).optional(),_min:e.lazy(()=>k3).optional(),_sum:e.lazy(()=>R3).optional()}).strict(),uI=e.object({AND:e.union([e.lazy(()=>uI),e.lazy(()=>uI).array()]).optional(),OR:e.lazy(()=>uI).array().optional(),NOT:e.union([e.lazy(()=>uI),e.lazy(()=>uI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),checklistId:e.union([e.lazy(()=>k),e.number()]).optional(),description:e.union([e.lazy(()=>We),e.string()]).optional(),order:e.union([e.lazy(()=>k),e.number()]).optional(),type:e.union([e.lazy(()=>f3),e.lazy(()=>Le)]).optional(),requiredPhotos:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Dt=e.object({AND:e.union([e.lazy(()=>Dt),e.lazy(()=>Dt).array()]).optional(),OR:e.lazy(()=>Dt).array().optional(),NOT:e.union([e.lazy(()=>Dt),e.lazy(()=>Dt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number()]).optional(),completedById:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklist:e.union([e.lazy(()=>FR),e.lazy(()=>jt)]).optional(),completedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),items:e.lazy(()=>ER).optional()}).strict(),Pd=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),checklist:e.lazy(()=>Fl).optional(),completedBy:e.lazy(()=>ta).optional(),items:e.lazy(()=>YL).optional()}).strict(),le=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Dt),e.lazy(()=>Dt).array()]).optional(),OR:e.lazy(()=>Dt).array().optional(),NOT:e.union([e.lazy(()=>Dt),e.lazy(()=>Dt).array()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number().int()]).optional(),completedById:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklist:e.union([e.lazy(()=>FR),e.lazy(()=>jt)]).optional(),completedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),items:e.lazy(()=>ER).optional()}).strict()),wF=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>j3).optional(),_avg:e.lazy(()=>M3).optional(),_max:e.lazy(()=>O3).optional(),_min:e.lazy(()=>w3).optional(),_sum:e.lazy(()=>T3).optional()}).strict(),sI=e.object({AND:e.union([e.lazy(()=>sI),e.lazy(()=>sI).array()]).optional(),OR:e.lazy(()=>sI).array().optional(),NOT:e.union([e.lazy(()=>sI),e.lazy(()=>sI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),checklistId:e.union([e.lazy(()=>k),e.number()]).optional(),completedById:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),da=e.object({AND:e.union([e.lazy(()=>da),e.lazy(()=>da).array()]).optional(),OR:e.lazy(()=>da).array().optional(),NOT:e.union([e.lazy(()=>da),e.lazy(()=>da).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistCompleteId:e.union([e.lazy(()=>z),e.number()]).optional(),checklistItemId:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>$T),e.lazy(()=>xe)]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),photoUrls:e.lazy(()=>zo).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklistComplete:e.union([e.lazy(()=>JL),e.lazy(()=>Dt)]).optional(),checklistItem:e.union([e.lazy(()=>KL),e.lazy(()=>Et)]).optional()}).strict(),im=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),photoUrls:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),checklistComplete:e.lazy(()=>Pd).optional(),checklistItem:e.lazy(()=>Td).optional()}).strict(),he=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>da),e.lazy(()=>da).array()]).optional(),OR:e.lazy(()=>da).array().optional(),NOT:e.union([e.lazy(()=>da),e.lazy(()=>da).array()]).optional(),checklistCompleteId:e.union([e.lazy(()=>z),e.number().int()]).optional(),checklistItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),status:e.union([e.lazy(()=>$T),e.lazy(()=>xe)]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),photoUrls:e.lazy(()=>zo).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),checklistComplete:e.union([e.lazy(()=>JL),e.lazy(()=>Dt)]).optional(),checklistItem:e.union([e.lazy(()=>KL),e.lazy(()=>Et)]).optional()}).strict()),TF=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),photoUrls:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>P3).optional(),_avg:e.lazy(()=>N3).optional(),_max:e.lazy(()=>B3).optional(),_min:e.lazy(()=>_3).optional(),_sum:e.lazy(()=>q3).optional()}).strict(),yI=e.object({AND:e.union([e.lazy(()=>yI),e.lazy(()=>yI).array()]).optional(),OR:e.lazy(()=>yI).array().optional(),NOT:e.union([e.lazy(()=>yI),e.lazy(()=>yI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),checklistCompleteId:e.union([e.lazy(()=>k),e.number()]).optional(),checklistItemId:e.union([e.lazy(()=>k),e.number()]).optional(),status:e.union([e.lazy(()=>F3),e.lazy(()=>xe)]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),photoUrls:e.lazy(()=>zo).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ma=e.object({AND:e.union([e.lazy(()=>ma),e.lazy(()=>ma).array()]).optional(),OR:e.lazy(()=>ma).array().optional(),NOT:e.union([e.lazy(()=>ma),e.lazy(()=>ma).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),startDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),vendor:e.union([e.lazy(()=>DR),e.lazy(()=>Mt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional()}).strict(),rm=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),startDate:e.lazy(()=>t).optional(),endDate:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),vendor:e.lazy(()=>xl).optional(),ingredient:e.lazy(()=>qi).optional()}).strict(),be=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ma),e.lazy(()=>ma).array()]).optional(),OR:e.lazy(()=>ma).array().optional(),NOT:e.union([e.lazy(()=>ma),e.lazy(()=>ma).array()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number().int()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),startDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),vendor:e.union([e.lazy(()=>DR),e.lazy(()=>Mt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional()}).strict()),PF=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),startDate:e.lazy(()=>t).optional(),endDate:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>E3).optional(),_avg:e.lazy(()=>D3).optional(),_max:e.lazy(()=>x3).optional(),_min:e.lazy(()=>V3).optional(),_sum:e.lazy(()=>H3).optional()}).strict(),dI=e.object({AND:e.union([e.lazy(()=>dI),e.lazy(()=>dI).array()]).optional(),OR:e.lazy(()=>dI).array().optional(),NOT:e.union([e.lazy(()=>dI),e.lazy(()=>dI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),vendorId:e.union([e.lazy(()=>k),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),price:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),startDate:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),endDate:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),za=e.object({AND:e.union([e.lazy(()=>za),e.lazy(()=>za).array()]).optional(),OR:e.lazy(()=>za).array().optional(),NOT:e.union([e.lazy(()=>za),e.lazy(()=>za).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),rating:e.union([e.lazy(()=>z),e.number()]).optional(),comment:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),source:e.union([e.lazy(()=>QT),e.lazy(()=>Oe)]).optional(),tags:e.lazy(()=>zo).optional(),status:e.union([e.lazy(()=>GT),e.lazy(()=>we)]).optional(),responseText:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),respondedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),respondedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>xR),e.lazy(()=>Ae)]).optional().nullable(),respondedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict(),lm=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),rating:e.lazy(()=>t).optional(),comment:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),source:e.lazy(()=>t).optional(),tags:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),responseText:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),respondedAt:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),respondedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),menuItem:e.lazy(()=>Fi).optional(),respondedBy:e.lazy(()=>ta).optional()}).strict(),V=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>za),e.lazy(()=>za).array()]).optional(),OR:e.lazy(()=>za).array().optional(),NOT:e.union([e.lazy(()=>za),e.lazy(()=>za).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),menuItemId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),rating:e.union([e.lazy(()=>z),e.number().int()]).optional(),comment:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),source:e.union([e.lazy(()=>QT),e.lazy(()=>Oe)]).optional(),tags:e.lazy(()=>zo).optional(),status:e.union([e.lazy(()=>GT),e.lazy(()=>we)]).optional(),responseText:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),respondedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),respondedById:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>xR),e.lazy(()=>Ae)]).optional().nullable(),respondedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict()),NF=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),rating:e.lazy(()=>t).optional(),comment:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),source:e.lazy(()=>t).optional(),tags:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),responseText:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),respondedAt:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),respondedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>L3).optional(),_avg:e.lazy(()=>Z3).optional(),_max:e.lazy(()=>$3).optional(),_min:e.lazy(()=>Q3).optional(),_sum:e.lazy(()=>G3).optional()}).strict(),mI=e.object({AND:e.union([e.lazy(()=>mI),e.lazy(()=>mI).array()]).optional(),OR:e.lazy(()=>mI).array().optional(),NOT:e.union([e.lazy(()=>mI),e.lazy(()=>mI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),rating:e.union([e.lazy(()=>k),e.number()]).optional(),comment:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),source:e.union([e.lazy(()=>Y3),e.lazy(()=>Oe)]).optional(),tags:e.lazy(()=>zo).optional(),status:e.union([e.lazy(()=>J3),e.lazy(()=>we)]).optional(),responseText:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),respondedAt:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable(),respondedById:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Pt=e.object({AND:e.union([e.lazy(()=>Pt),e.lazy(()=>Pt).array()]).optional(),OR:e.lazy(()=>Pt).array().optional(),NOT:e.union([e.lazy(()=>Pt),e.lazy(()=>Pt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),icon:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItems:e.lazy(()=>sh).optional(),recipes:e.lazy(()=>tl).optional(),ingredients:e.lazy(()=>VR).optional()}).strict(),Nd=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),icon:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),menuItems:e.lazy(()=>PR).optional(),recipes:e.lazy(()=>jg).optional(),ingredients:e.lazy(()=>XL).optional()}).strict(),ce=e.union([e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),AND:e.union([e.lazy(()=>Pt),e.lazy(()=>Pt).array()]).optional(),OR:e.lazy(()=>Pt).array().optional(),NOT:e.union([e.lazy(()=>Pt),e.lazy(()=>Pt).array()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),icon:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItems:e.lazy(()=>sh).optional(),recipes:e.lazy(()=>tl).optional(),ingredients:e.lazy(()=>VR).optional()}).strict()),BF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),icon:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>K3).optional(),_avg:e.lazy(()=>X3).optional(),_max:e.lazy(()=>eY).optional(),_min:e.lazy(()=>tY).optional(),_sum:e.lazy(()=>aY).optional()}).strict(),zI=e.object({AND:e.union([e.lazy(()=>zI),e.lazy(()=>zI).array()]).optional(),OR:e.lazy(()=>zI).array().optional(),NOT:e.union([e.lazy(()=>zI),e.lazy(()=>zI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),icon:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ha=e.object({AND:e.union([e.lazy(()=>ha),e.lazy(()=>ha).array()]).optional(),OR:e.lazy(()=>ha).array().optional(),NOT:e.union([e.lazy(()=>ha),e.lazy(()=>ha).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipes:e.lazy(()=>tl).optional()}).strict(),cm=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),recipes:e.lazy(()=>jg).optional()}).strict(),bt=e.union([e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),AND:e.union([e.lazy(()=>ha),e.lazy(()=>ha).array()]).optional(),OR:e.lazy(()=>ha).array().optional(),NOT:e.union([e.lazy(()=>ha),e.lazy(()=>ha).array()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipes:e.lazy(()=>tl).optional()}).strict()),_F=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>nY).optional(),_avg:e.lazy(()=>oY).optional(),_max:e.lazy(()=>iY).optional(),_min:e.lazy(()=>rY).optional(),_sum:e.lazy(()=>lY).optional()}).strict(),hI=e.object({AND:e.union([e.lazy(()=>hI),e.lazy(()=>hI).array()]).optional(),OR:e.lazy(()=>hI).array().optional(),NOT:e.union([e.lazy(()=>hI),e.lazy(()=>hI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ba=e.object({AND:e.union([e.lazy(()=>ba),e.lazy(()=>ba).array()]).optional(),OR:e.lazy(()=>ba).array().optional(),NOT:e.union([e.lazy(()=>ba),e.lazy(()=>ba).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional(),recordedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),pm=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),menuItem:e.lazy(()=>Fi).optional(),recordedBy:e.lazy(()=>ta).optional()}).strict(),H=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ba),e.lazy(()=>ba).array()]).optional(),OR:e.lazy(()=>ba).array().optional(),NOT:e.union([e.lazy(()=>ba),e.lazy(()=>ba).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>z),e.number().int()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional(),recordedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),qF=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>cY).optional(),_avg:e.lazy(()=>pY).optional(),_max:e.lazy(()=>uY).optional(),_min:e.lazy(()=>sY).optional(),_sum:e.lazy(()=>yY).optional()}).strict(),bI=e.object({AND:e.union([e.lazy(()=>bI),e.lazy(()=>bI).array()]).optional(),OR:e.lazy(()=>bI).array().optional(),NOT:e.union([e.lazy(()=>bI),e.lazy(()=>bI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),menuItemId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>k),e.number()]).optional(),reason:e.union([e.lazy(()=>We),e.string()]).optional(),recordedById:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ia=e.object({AND:e.union([e.lazy(()=>Ia),e.lazy(()=>Ia).array()]).optional(),OR:e.lazy(()=>Ia).array().optional(),NOT:e.union([e.lazy(()=>Ia),e.lazy(()=>Ia).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),ingrediente:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),recordedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),um=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),ingrediente:e.lazy(()=>qi).optional(),recordedBy:e.lazy(()=>ta).optional()}).strict(),L=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ia),e.lazy(()=>Ia).array()]).optional(),OR:e.lazy(()=>Ia).array().optional(),NOT:e.union([e.lazy(()=>Ia),e.lazy(()=>Ia).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),ingrediente:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),recordedBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),FF=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>dY).optional(),_avg:e.lazy(()=>mY).optional(),_max:e.lazy(()=>zY).optional(),_min:e.lazy(()=>hY).optional(),_sum:e.lazy(()=>bY).optional()}).strict(),II=e.object({AND:e.union([e.lazy(()=>II),e.lazy(()=>II).array()]).optional(),OR:e.lazy(()=>II).array().optional(),NOT:e.union([e.lazy(()=>II),e.lazy(()=>II).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),reason:e.union([e.lazy(()=>We),e.string()]).optional(),recordedById:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),xt=e.object({AND:e.union([e.lazy(()=>xt),e.lazy(()=>xt).array()]).optional(),OR:e.lazy(()=>xt).array().optional(),NOT:e.union([e.lazy(()=>xt),e.lazy(()=>xt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),items:e.lazy(()=>Mg).optional()}).strict(),Bd=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),createdBy:e.lazy(()=>ta).optional(),items:e.lazy(()=>YT).optional()}).strict(),pe=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>xt),e.lazy(()=>xt).array()]).optional(),OR:e.lazy(()=>xt).array().optional(),NOT:e.union([e.lazy(()=>xt),e.lazy(()=>xt).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdById:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),items:e.lazy(()=>Mg).optional()}).strict()),EF=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>IY).optional(),_avg:e.lazy(()=>gY).optional(),_max:e.lazy(()=>SY).optional(),_min:e.lazy(()=>vY).optional(),_sum:e.lazy(()=>AY).optional()}).strict(),gI=e.object({AND:e.union([e.lazy(()=>gI),e.lazy(()=>gI).array()]).optional(),OR:e.lazy(()=>gI).array().optional(),NOT:e.union([e.lazy(()=>gI),e.lazy(()=>gI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdById:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ga=e.object({AND:e.union([e.lazy(()=>ga),e.lazy(()=>ga).array()]).optional(),OR:e.lazy(()=>ga).array().optional(),NOT:e.union([e.lazy(()=>ga),e.lazy(()=>ga).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),productionPlanId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),assignedToId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),productionPlan:e.union([e.lazy(()=>eZ),e.lazy(()=>xt)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),assignedTo:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict(),sm=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),assignedToId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),productionPlan:e.lazy(()=>Bd).optional(),recipe:e.lazy(()=>$a).optional(),assignedTo:e.lazy(()=>ta).optional()}).strict(),Z=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ga),e.lazy(()=>ga).array()]).optional(),OR:e.lazy(()=>ga).array().optional(),NOT:e.union([e.lazy(()=>ga),e.lazy(()=>ga).array()]).optional(),productionPlanId:e.union([e.lazy(()=>z),e.number().int()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>z),e.number().int()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),assignedToId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),productionPlan:e.union([e.lazy(()=>eZ),e.lazy(()=>xt)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),assignedTo:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable()}).strict()),DF=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),assignedToId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>CY).optional(),_avg:e.lazy(()=>WY).optional(),_max:e.lazy(()=>UY).optional(),_min:e.lazy(()=>kY).optional(),_sum:e.lazy(()=>RY).optional()}).strict(),SI=e.object({AND:e.union([e.lazy(()=>SI),e.lazy(()=>SI).array()]).optional(),OR:e.lazy(()=>SI).array().optional(),NOT:e.union([e.lazy(()=>SI),e.lazy(()=>SI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),productionPlanId:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>k),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),assignedToId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Sa=e.object({AND:e.union([e.lazy(()=>Sa),e.lazy(()=>Sa).array()]).optional(),OR:e.lazy(()=>Sa).array().optional(),NOT:e.union([e.lazy(()=>Sa),e.lazy(()=>Sa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),shiftId:e.union([e.lazy(()=>z),e.number()]).optional(),taskType:e.union([e.lazy(()=>JT),e.lazy(()=>ct)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),duration:e.union([e.lazy(()=>z),e.number()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),shift:e.union([e.lazy(()=>tZ),e.lazy(()=>Zt)]).optional()}).strict(),ym=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),taskType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),shift:e.lazy(()=>Dd).optional()}).strict(),It=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Sa),e.lazy(()=>Sa).array()]).optional(),OR:e.lazy(()=>Sa).array().optional(),NOT:e.union([e.lazy(()=>Sa),e.lazy(()=>Sa).array()]).optional(),shiftId:e.union([e.lazy(()=>z),e.number().int()]).optional(),taskType:e.union([e.lazy(()=>JT),e.lazy(()=>ct)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),duration:e.union([e.lazy(()=>z),e.number().int()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),shift:e.union([e.lazy(()=>tZ),e.lazy(()=>Zt)]).optional()}).strict()),xF=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),taskType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>fY).optional(),_avg:e.lazy(()=>jY).optional(),_max:e.lazy(()=>MY).optional(),_min:e.lazy(()=>OY).optional(),_sum:e.lazy(()=>wY).optional()}).strict(),vI=e.object({AND:e.union([e.lazy(()=>vI),e.lazy(()=>vI).array()]).optional(),OR:e.lazy(()=>vI).array().optional(),NOT:e.union([e.lazy(()=>vI),e.lazy(()=>vI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),shiftId:e.union([e.lazy(()=>k),e.number()]).optional(),taskType:e.union([e.lazy(()=>TY),e.lazy(()=>ct)]).optional(),startTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),duration:e.union([e.lazy(()=>k),e.number()]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),va=e.object({AND:e.union([e.lazy(()=>va),e.lazy(()=>va).array()]).optional(),OR:e.lazy(()=>va).array().optional(),NOT:e.union([e.lazy(()=>va),e.lazy(()=>va).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),dayOfWeek:e.union([e.lazy(()=>KT),e.lazy(()=>pt)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),dm=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),dayOfWeek:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),user:e.lazy(()=>ta).optional()}).strict(),gt=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>va),e.lazy(()=>va).array()]).optional(),OR:e.lazy(()=>va).array().optional(),NOT:e.union([e.lazy(()=>va),e.lazy(()=>va).array()]).optional(),userId:e.union([e.lazy(()=>z),e.number().int()]).optional(),dayOfWeek:e.union([e.lazy(()=>KT),e.lazy(()=>pt)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),VF=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),dayOfWeek:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>PY).optional(),_avg:e.lazy(()=>NY).optional(),_max:e.lazy(()=>BY).optional(),_min:e.lazy(()=>_Y).optional(),_sum:e.lazy(()=>qY).optional()}).strict(),AI=e.object({AND:e.union([e.lazy(()=>AI),e.lazy(()=>AI).array()]).optional(),OR:e.lazy(()=>AI).array().optional(),NOT:e.union([e.lazy(()=>AI),e.lazy(()=>AI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),userId:e.union([e.lazy(()=>k),e.number()]).optional(),dayOfWeek:e.union([e.lazy(()=>FY),e.lazy(()=>pt)]).optional(),startTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Aa=e.object({AND:e.union([e.lazy(()=>Aa),e.lazy(()=>Aa).array()]).optional(),OR:e.lazy(()=>Aa).array().optional(),NOT:e.union([e.lazy(()=>Aa),e.lazy(()=>Aa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),constraintsType:e.union([e.lazy(()=>XT),e.lazy(()=>ut)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),mm=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),constraintsType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),user:e.lazy(()=>ta).optional()}).strict(),St=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Aa),e.lazy(()=>Aa).array()]).optional(),OR:e.lazy(()=>Aa).array().optional(),NOT:e.union([e.lazy(()=>Aa),e.lazy(()=>Aa).array()]).optional(),userId:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),constraintsType:e.union([e.lazy(()=>XT),e.lazy(()=>ut)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),HF=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),constraintsType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),notes:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>EY).optional(),_avg:e.lazy(()=>DY).optional(),_max:e.lazy(()=>xY).optional(),_min:e.lazy(()=>VY).optional(),_sum:e.lazy(()=>HY).optional()}).strict(),CI=e.object({AND:e.union([e.lazy(()=>CI),e.lazy(()=>CI).array()]).optional(),OR:e.lazy(()=>CI).array().optional(),NOT:e.union([e.lazy(()=>CI),e.lazy(()=>CI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),userId:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),constraintsType:e.union([e.lazy(()=>LY),e.lazy(()=>ut)]).optional(),startTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ca=e.object({AND:e.union([e.lazy(()=>Ca),e.lazy(()=>Ca).array()]).optional(),OR:e.lazy(()=>Ca).array().optional(),NOT:e.union([e.lazy(()=>Ca),e.lazy(()=>Ca).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),inventoryItemId:e.union([e.lazy(()=>z),e.number()]).optional(),dateTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),recipeId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),inventoryItem:e.union([e.lazy(()=>aZ),e.lazy(()=>Ht)]).optional(),recipe:e.union([e.lazy(()=>nZ),e.lazy(()=>ie)]).optional().nullable(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),zm=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),dateTime:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),recipeId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),inventoryItem:e.lazy(()=>Fd).optional(),recipe:e.lazy(()=>$a).optional(),createdBy:e.lazy(()=>ta).optional()}).strict(),$=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ca),e.lazy(()=>Ca).array()]).optional(),OR:e.lazy(()=>Ca).array().optional(),NOT:e.union([e.lazy(()=>Ca),e.lazy(()=>Ca).array()]).optional(),inventoryItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),dateTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),recipeId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),createdById:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),inventoryItem:e.union([e.lazy(()=>aZ),e.lazy(()=>Ht)]).optional(),recipe:e.union([e.lazy(()=>nZ),e.lazy(()=>ie)]).optional().nullable(),createdBy:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),LF=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),dateTime:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),recipeId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>ZY).optional(),_avg:e.lazy(()=>$Y).optional(),_max:e.lazy(()=>QY).optional(),_min:e.lazy(()=>GY).optional(),_sum:e.lazy(()=>YY).optional()}).strict(),WI=e.object({AND:e.union([e.lazy(()=>WI),e.lazy(()=>WI).array()]).optional(),OR:e.lazy(()=>WI).array().optional(),NOT:e.union([e.lazy(()=>WI),e.lazy(()=>WI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),inventoryItemId:e.union([e.lazy(()=>k),e.number()]).optional(),dateTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),quantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),recipeId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),createdById:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),na=e.object({AND:e.union([e.lazy(()=>na),e.lazy(()=>na).array()]).optional(),OR:e.lazy(()=>na).array().optional(),NOT:e.union([e.lazy(()=>na),e.lazy(()=>na).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),ingredients:e.lazy(()=>HR).optional()}).strict(),_d=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),ingredients:e.lazy(()=>oZ).optional()}).strict(),Xr=e.union([e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),AND:e.union([e.lazy(()=>na),e.lazy(()=>na).array()]).optional(),OR:e.lazy(()=>na).array().optional(),NOT:e.union([e.lazy(()=>na),e.lazy(()=>na).array()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),ingredients:e.lazy(()=>HR).optional()}).strict()),ZF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>JY).optional(),_avg:e.lazy(()=>KY).optional(),_max:e.lazy(()=>XY).optional(),_min:e.lazy(()=>e8).optional(),_sum:e.lazy(()=>t8).optional()}).strict(),UI=e.object({AND:e.union([e.lazy(()=>UI),e.lazy(()=>UI).array()]).optional(),OR:e.lazy(()=>UI).array().optional(),NOT:e.union([e.lazy(()=>UI),e.lazy(()=>UI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable()}).strict(),Wa=e.object({AND:e.union([e.lazy(()=>Wa),e.lazy(()=>Wa).array()]).optional(),OR:e.lazy(()=>Wa).array().optional(),NOT:e.union([e.lazy(()=>Wa),e.lazy(()=>Wa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),allergenId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),allergen:e.union([e.lazy(()=>iZ),e.lazy(()=>na)]).optional()}).strict(),hm=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional(),ingredient:e.lazy(()=>qi).optional(),allergen:e.lazy(()=>_d).optional()}).strict(),Ie=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Wa),e.lazy(()=>Wa).array()]).optional(),OR:e.lazy(()=>Wa).array().optional(),NOT:e.union([e.lazy(()=>Wa),e.lazy(()=>Wa).array()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),allergenId:e.union([e.lazy(()=>z),e.number().int()]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),allergen:e.union([e.lazy(()=>iZ),e.lazy(()=>na)]).optional()}).strict()),$F=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional(),_count:e.lazy(()=>a8).optional(),_avg:e.lazy(()=>n8).optional(),_max:e.lazy(()=>o8).optional(),_min:e.lazy(()=>i8).optional(),_sum:e.lazy(()=>r8).optional()}).strict(),kI=e.object({AND:e.union([e.lazy(()=>kI),e.lazy(()=>kI).array()]).optional(),OR:e.lazy(()=>kI).array().optional(),NOT:e.union([e.lazy(()=>kI),e.lazy(()=>kI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),allergenId:e.union([e.lazy(()=>k),e.number()]).optional()}).strict(),Ua=e.object({AND:e.union([e.lazy(()=>Ua),e.lazy(()=>Ua).array()]).optional(),OR:e.lazy(()=>Ua).array().optional(),NOT:e.union([e.lazy(()=>Ua),e.lazy(()=>Ua).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),recommendation:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional()}).strict(),bm=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recommendation:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),menuItem:e.lazy(()=>Fi).optional()}).strict(),vt=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ua),e.lazy(()=>Ua).array()]).optional(),OR:e.lazy(()=>Ua).array().optional(),NOT:e.union([e.lazy(()=>Ua),e.lazy(()=>Ua).array()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),recommendation:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional()}).strict()),QF=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recommendation:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>l8).optional(),_avg:e.lazy(()=>c8).optional(),_max:e.lazy(()=>p8).optional(),_min:e.lazy(()=>u8).optional(),_sum:e.lazy(()=>s8).optional()}).strict(),RI=e.object({AND:e.union([e.lazy(()=>RI),e.lazy(()=>RI).array()]).optional(),OR:e.lazy(()=>RI).array().optional(),NOT:e.union([e.lazy(()=>RI),e.lazy(()=>RI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>k),e.number()]).optional(),recommendation:e.union([e.lazy(()=>We),e.string()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),uo=e.object({AND:e.union([e.lazy(()=>uo),e.lazy(()=>uo).array()]).optional(),OR:e.lazy(()=>uo).array().optional(),NOT:e.union([e.lazy(()=>uo),e.lazy(()=>uo).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),email:e.union([e.lazy(()=>U),e.string()]).optional(),isEmailSent:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),Im=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),isEmailSent:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),$d=e.union([e.object({id:e.number().int(),email:e.string()}),e.object({id:e.number().int()}),e.object({email:e.string()})]).and(e.object({id:e.number().int().optional(),email:e.string().optional(),AND:e.union([e.lazy(()=>uo),e.lazy(()=>uo).array()]).optional(),OR:e.lazy(()=>uo).array().optional(),NOT:e.union([e.lazy(()=>uo),e.lazy(()=>uo).array()]).optional(),isEmailSent:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict()),GF=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),isEmailSent:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>y8).optional(),_avg:e.lazy(()=>d8).optional(),_max:e.lazy(()=>m8).optional(),_min:e.lazy(()=>z8).optional(),_sum:e.lazy(()=>h8).optional()}).strict(),fI=e.object({AND:e.union([e.lazy(()=>fI),e.lazy(()=>fI).array()]).optional(),OR:e.lazy(()=>fI).array().optional(),NOT:e.union([e.lazy(()=>fI),e.lazy(()=>fI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),email:e.union([e.lazy(()=>We),e.string()]).optional(),isEmailSent:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Rt=e.object({AND:e.union([e.lazy(()=>Rt),e.lazy(()=>Rt).array()]).optional(),OR:e.lazy(()=>Rt).array().optional(),NOT:e.union([e.lazy(()=>Rt),e.lazy(()=>Rt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurants:e.lazy(()=>rZ).optional(),users:e.lazy(()=>LR).optional()}).strict(),El=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurants:e.lazy(()=>b8).optional(),users:e.lazy(()=>lZ).optional()}).strict(),Bi=e.union([e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),AND:e.union([e.lazy(()=>Rt),e.lazy(()=>Rt).array()]).optional(),OR:e.lazy(()=>Rt).array().optional(),NOT:e.union([e.lazy(()=>Rt),e.lazy(()=>Rt).array()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurants:e.lazy(()=>rZ).optional(),users:e.lazy(()=>LR).optional()}).strict()),YF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>I8).optional(),_avg:e.lazy(()=>g8).optional(),_max:e.lazy(()=>S8).optional(),_min:e.lazy(()=>v8).optional(),_sum:e.lazy(()=>A8).optional()}).strict(),jI=e.object({AND:e.union([e.lazy(()=>jI),e.lazy(()=>jI).array()]).optional(),OR:e.lazy(()=>jI).array().optional(),NOT:e.union([e.lazy(()=>jI),e.lazy(()=>jI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),x=e.object({AND:e.union([e.lazy(()=>x),e.lazy(()=>x).array()]).optional(),OR:e.lazy(()=>x).array().optional(),NOT:e.union([e.lazy(()=>x),e.lazy(()=>x).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),address:e.union([e.lazy(()=>U),e.string()]).optional(),city:e.union([e.lazy(()=>U),e.string()]).optional(),zipCode:e.union([e.lazy(()=>U),e.string()]).optional(),state:e.union([e.lazy(()=>U),e.string()]).optional(),owner:e.union([e.lazy(()=>U),e.string()]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),deleted:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),organization:e.union([e.lazy(()=>ZR),e.lazy(()=>Rt)]).optional().nullable(),users:e.lazy(()=>LR).optional(),cookbooks:e.lazy(()=>cZ).optional(),inventory:e.union([e.lazy(()=>pZ),e.lazy(()=>zt)]).optional().nullable(),orders:e.lazy(()=>$R).optional(),recipes:e.lazy(()=>tl).optional(),menus:e.lazy(()=>uZ).optional(),salesTransactions:e.lazy(()=>QR).optional(),leftoverItem:e.lazy(()=>Og).optional(),wasteRecord:e.lazy(()=>wg).optional(),productionPlan:e.lazy(()=>GR).optional(),equipment:e.lazy(()=>sZ).optional(),qualityChecklist:e.lazy(()=>yZ).optional(),qustomerFeedback:e.lazy(()=>Tg).optional()}).strict(),ca=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),address:e.lazy(()=>t).optional(),city:e.lazy(()=>t).optional(),zipCode:e.lazy(()=>t).optional(),state:e.lazy(()=>t).optional(),owner:e.lazy(()=>t).optional(),organizationId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),foodCost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),deleted:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),organization:e.lazy(()=>El).optional(),users:e.lazy(()=>lZ).optional(),cookbooks:e.lazy(()=>C8).optional(),inventory:e.lazy(()=>Dl).optional(),orders:e.lazy(()=>dZ).optional(),recipes:e.lazy(()=>jg).optional(),menus:e.lazy(()=>W8).optional(),salesTransactions:e.lazy(()=>mZ).optional(),leftoverItem:e.lazy(()=>eP).optional(),wasteRecord:e.lazy(()=>tP).optional(),productionPlan:e.lazy(()=>zZ).optional(),equipment:e.lazy(()=>U8).optional(),qualityChecklist:e.lazy(()=>k8).optional(),qustomerFeedback:e.lazy(()=>aP).optional()}).strict(),ee=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>x),e.lazy(()=>x).array()]).optional(),OR:e.lazy(()=>x).array().optional(),NOT:e.union([e.lazy(()=>x),e.lazy(()=>x).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),address:e.union([e.lazy(()=>U),e.string()]).optional(),city:e.union([e.lazy(()=>U),e.string()]).optional(),zipCode:e.union([e.lazy(()=>U),e.string()]).optional(),state:e.union([e.lazy(()=>U),e.string()]).optional(),owner:e.union([e.lazy(()=>U),e.string()]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),deleted:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),organization:e.union([e.lazy(()=>ZR),e.lazy(()=>Rt)]).optional().nullable(),users:e.lazy(()=>LR).optional(),cookbooks:e.lazy(()=>cZ).optional(),inventory:e.union([e.lazy(()=>pZ),e.lazy(()=>zt)]).optional().nullable(),orders:e.lazy(()=>$R).optional(),recipes:e.lazy(()=>tl).optional(),menus:e.lazy(()=>uZ).optional(),salesTransactions:e.lazy(()=>QR).optional(),leftoverItem:e.lazy(()=>Og).optional(),wasteRecord:e.lazy(()=>wg).optional(),productionPlan:e.lazy(()=>GR).optional(),equipment:e.lazy(()=>sZ).optional(),qualityChecklist:e.lazy(()=>yZ).optional(),qustomerFeedback:e.lazy(()=>Tg).optional()}).strict()),JF=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),address:e.lazy(()=>t).optional(),city:e.lazy(()=>t).optional(),zipCode:e.lazy(()=>t).optional(),state:e.lazy(()=>t).optional(),owner:e.lazy(()=>t).optional(),organizationId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),foodCost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),deleted:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>R8).optional(),_avg:e.lazy(()=>f8).optional(),_max:e.lazy(()=>j8).optional(),_min:e.lazy(()=>M8).optional(),_sum:e.lazy(()=>O8).optional()}).strict(),MI=e.object({AND:e.union([e.lazy(()=>MI),e.lazy(()=>MI).array()]).optional(),OR:e.lazy(()=>MI).array().optional(),NOT:e.union([e.lazy(()=>MI),e.lazy(()=>MI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),address:e.union([e.lazy(()=>We),e.string()]).optional(),city:e.union([e.lazy(()=>We),e.string()]).optional(),zipCode:e.union([e.lazy(()=>We),e.string()]).optional(),state:e.union([e.lazy(()=>We),e.string()]).optional(),owner:e.union([e.lazy(()=>We),e.string()]).optional(),organizationId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),foodCost:e.union([e.lazy(()=>HT),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),isDeleted:e.union([e.lazy(()=>yh),e.boolean()]).optional(),deleted:e.union([e.lazy(()=>Gh),e.coerce.date()]).optional().nullable()}).strict(),P=e.object({AND:e.union([e.lazy(()=>P),e.lazy(()=>P).array()]).optional(),OR:e.lazy(()=>P).array().optional(),NOT:e.union([e.lazy(()=>P),e.lazy(()=>P).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),email:e.union([e.lazy(()=>U),e.string()]).optional(),sub:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),passwordHash:e.union([e.lazy(()=>U),e.string()]).optional(),firstName:e.union([e.lazy(()=>U),e.string()]).optional(),lastName:e.union([e.lazy(()=>U),e.string()]).optional(),profileImage:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),verified:e.union([e.lazy(()=>oa),e.boolean()]).optional(),role:e.union([e.lazy(()=>nP),e.lazy(()=>M)]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),organization:e.union([e.lazy(()=>ZR),e.lazy(()=>Rt)]).optional().nullable(),restaurant:e.union([e.lazy(()=>YR),e.lazy(()=>x)]).optional().nullable(),shifts:e.lazy(()=>hZ).optional(),prepItems:e.lazy(()=>Pg).optional(),inventoryUpdates:e.lazy(()=>Ng).optional(),sessions:e.lazy(()=>bZ).optional(),passwordResets:e.lazy(()=>IZ).optional(),leftoverItem:e.lazy(()=>Og).optional(),wasteRecord:e.lazy(()=>wg).optional(),productionPlan:e.lazy(()=>GR).optional(),productionPlanItem:e.lazy(()=>Mg).optional(),availability:e.lazy(()=>gZ).optional(),schedulingConstraint:e.lazy(()=>SZ).optional(),inventoryWithdrawal:e.lazy(()=>Bg).optional(),checklistComplete:e.lazy(()=>qR).optional(),customerFeedback:e.lazy(()=>Tg).optional(),recipeVersionsCreated:e.lazy(()=>ng).optional(),recipeVersionsApproved:e.lazy(()=>ng).optional()}).strict(),ta=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),sub:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),passwordHash:e.lazy(()=>t).optional(),firstName:e.lazy(()=>t).optional(),lastName:e.lazy(()=>t).optional(),profileImage:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),verified:e.lazy(()=>t).optional(),role:e.lazy(()=>t).optional(),organizationId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),organization:e.lazy(()=>El).optional(),restaurant:e.lazy(()=>ca).optional(),shifts:e.lazy(()=>w8).optional(),prepItems:e.lazy(()=>oP).optional(),inventoryUpdates:e.lazy(()=>iP).optional(),sessions:e.lazy(()=>T8).optional(),passwordResets:e.lazy(()=>P8).optional(),leftoverItem:e.lazy(()=>eP).optional(),wasteRecord:e.lazy(()=>tP).optional(),productionPlan:e.lazy(()=>zZ).optional(),productionPlanItem:e.lazy(()=>YT).optional(),availability:e.lazy(()=>N8).optional(),schedulingConstraint:e.lazy(()=>B8).optional(),inventoryWithdrawal:e.lazy(()=>rP).optional(),checklistComplete:e.lazy(()=>GL).optional(),customerFeedback:e.lazy(()=>aP).optional(),recipeVersionsCreated:e.lazy(()=>uT).optional(),recipeVersionsApproved:e.lazy(()=>uT).optional()}).strict(),O=e.union([e.object({id:e.number().int(),email:e.string(),sub:e.number().int()}),e.object({id:e.number().int(),email:e.string()}),e.object({id:e.number().int(),sub:e.number().int()}),e.object({id:e.number().int()}),e.object({email:e.string(),sub:e.number().int()}),e.object({email:e.string()}),e.object({sub:e.number().int()})]).and(e.object({id:e.number().int().optional(),email:e.string().optional(),sub:e.number().int().optional(),AND:e.union([e.lazy(()=>P),e.lazy(()=>P).array()]).optional(),OR:e.lazy(()=>P).array().optional(),NOT:e.union([e.lazy(()=>P),e.lazy(()=>P).array()]).optional(),passwordHash:e.union([e.lazy(()=>U),e.string()]).optional(),firstName:e.union([e.lazy(()=>U),e.string()]).optional(),lastName:e.union([e.lazy(()=>U),e.string()]).optional(),profileImage:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),verified:e.union([e.lazy(()=>oa),e.boolean()]).optional(),role:e.union([e.lazy(()=>nP),e.lazy(()=>M)]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),organization:e.union([e.lazy(()=>ZR),e.lazy(()=>Rt)]).optional().nullable(),restaurant:e.union([e.lazy(()=>YR),e.lazy(()=>x)]).optional().nullable(),shifts:e.lazy(()=>hZ).optional(),prepItems:e.lazy(()=>Pg).optional(),inventoryUpdates:e.lazy(()=>Ng).optional(),sessions:e.lazy(()=>bZ).optional(),passwordResets:e.lazy(()=>IZ).optional(),leftoverItem:e.lazy(()=>Og).optional(),wasteRecord:e.lazy(()=>wg).optional(),productionPlan:e.lazy(()=>GR).optional(),productionPlanItem:e.lazy(()=>Mg).optional(),availability:e.lazy(()=>gZ).optional(),schedulingConstraint:e.lazy(()=>SZ).optional(),inventoryWithdrawal:e.lazy(()=>Bg).optional(),checklistComplete:e.lazy(()=>qR).optional(),customerFeedback:e.lazy(()=>Tg).optional(),recipeVersionsCreated:e.lazy(()=>ng).optional(),recipeVersionsApproved:e.lazy(()=>ng).optional()}).strict()),KF=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),sub:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),passwordHash:e.lazy(()=>t).optional(),firstName:e.lazy(()=>t).optional(),lastName:e.lazy(()=>t).optional(),profileImage:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),verified:e.lazy(()=>t).optional(),role:e.lazy(()=>t).optional(),organizationId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>_8).optional(),_avg:e.lazy(()=>q8).optional(),_max:e.lazy(()=>F8).optional(),_min:e.lazy(()=>E8).optional(),_sum:e.lazy(()=>D8).optional()}).strict(),OI=e.object({AND:e.union([e.lazy(()=>OI),e.lazy(()=>OI).array()]).optional(),OR:e.lazy(()=>OI).array().optional(),NOT:e.union([e.lazy(()=>OI),e.lazy(()=>OI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),email:e.union([e.lazy(()=>We),e.string()]).optional(),sub:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),passwordHash:e.union([e.lazy(()=>We),e.string()]).optional(),firstName:e.union([e.lazy(()=>We),e.string()]).optional(),lastName:e.union([e.lazy(()=>We),e.string()]).optional(),profileImage:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),verified:e.union([e.lazy(()=>yh),e.boolean()]).optional(),role:e.union([e.lazy(()=>x8),e.lazy(()=>M)]).optional(),organizationId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ka=e.object({AND:e.union([e.lazy(()=>ka),e.lazy(()=>ka).array()]).optional(),OR:e.lazy(()=>ka).array().optional(),NOT:e.union([e.lazy(()=>ka),e.lazy(()=>ka).array()]).optional(),id:e.union([e.lazy(()=>U),e.string()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),code:e.union([e.lazy(()=>U),e.string()]).optional(),token:e.union([e.lazy(()=>U),e.string()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),gm=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),code:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),user:e.lazy(()=>ta).optional()}).strict(),At=e.union([e.object({id:e.string(),code:e.string(),token:e.string()}),e.object({id:e.string(),code:e.string()}),e.object({id:e.string(),token:e.string()}),e.object({id:e.string()}),e.object({code:e.string(),token:e.string()}),e.object({code:e.string()}),e.object({token:e.string()})]).and(e.object({id:e.string().optional(),code:e.string().optional(),token:e.string().optional(),AND:e.union([e.lazy(()=>ka),e.lazy(()=>ka).array()]).optional(),OR:e.lazy(()=>ka).array().optional(),NOT:e.union([e.lazy(()=>ka),e.lazy(()=>ka).array()]).optional(),userId:e.union([e.lazy(()=>z),e.number().int()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),XF=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),code:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>V8).optional(),_avg:e.lazy(()=>H8).optional(),_max:e.lazy(()=>L8).optional(),_min:e.lazy(()=>Z8).optional(),_sum:e.lazy(()=>$8).optional()}).strict(),wI=e.object({AND:e.union([e.lazy(()=>wI),e.lazy(()=>wI).array()]).optional(),OR:e.lazy(()=>wI).array().optional(),NOT:e.union([e.lazy(()=>wI),e.lazy(()=>wI).array()]).optional(),id:e.union([e.lazy(()=>We),e.string()]).optional(),userId:e.union([e.lazy(()=>k),e.number()]).optional(),code:e.union([e.lazy(()=>We),e.string()]).optional(),token:e.union([e.lazy(()=>We),e.string()]).optional(),expiresAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Vt=e.object({AND:e.union([e.lazy(()=>Vt),e.lazy(()=>Vt).array()]).optional(),OR:e.lazy(()=>Vt).array().optional(),NOT:e.union([e.lazy(()=>Vt),e.lazy(()=>Vt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),category:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),recipes:e.lazy(()=>tl).optional(),restaurant:e.union([e.lazy(()=>YR),e.lazy(()=>x)]).optional().nullable()}).strict(),qd=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),category:e.lazy(()=>t).optional(),restaurantId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipes:e.lazy(()=>jg).optional(),restaurant:e.lazy(()=>ca).optional()}).strict(),nt=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Vt),e.lazy(()=>Vt).array()]).optional(),OR:e.lazy(()=>Vt).array().optional(),NOT:e.union([e.lazy(()=>Vt),e.lazy(()=>Vt).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),category:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),recipes:e.lazy(()=>tl).optional(),restaurant:e.union([e.lazy(()=>YR),e.lazy(()=>x)]).optional().nullable()}).strict()),eE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),category:e.lazy(()=>t).optional(),restaurantId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>Q8).optional(),_avg:e.lazy(()=>G8).optional(),_max:e.lazy(()=>Y8).optional(),_min:e.lazy(()=>J8).optional(),_sum:e.lazy(()=>K8).optional()}).strict(),TI=e.object({AND:e.union([e.lazy(()=>TI),e.lazy(()=>TI).array()]).optional(),OR:e.lazy(()=>TI).array().optional(),NOT:e.union([e.lazy(()=>TI),e.lazy(()=>TI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),category:e.union([e.lazy(()=>We),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable()}).strict(),ie=e.object({AND:e.union([e.lazy(()=>ie),e.lazy(()=>ie).array()]).optional(),OR:e.lazy(()=>ie).array().optional(),NOT:e.union([e.lazy(()=>ie),e.lazy(()=>ie).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.lazy(()=>zo).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),servings:e.union([e.lazy(()=>z),e.number()]).optional(),cookTime:e.union([e.lazy(()=>z),e.number()]).optional(),prepTime:e.union([e.lazy(()=>z),e.number()]).optional(),frequency:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),cookBookId:e.union([e.lazy(()=>z),e.number()]).optional(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),cookBook:e.union([e.lazy(()=>vZ),e.lazy(()=>Vt)]).optional(),ingredients:e.lazy(()=>fg).optional(),instructions:e.lazy(()=>NR).optional(),menuItems:e.lazy(()=>sh).optional(),foodCostHistory:e.lazy(()=>AZ).optional(),prepHistory:e.lazy(()=>CZ).optional(),prepBoards:e.lazy(()=>WZ).optional(),prepItems:e.lazy(()=>Pg).optional(),MenuItemRecipe:e.lazy(()=>JR).optional(),ProductionPlanItem:e.lazy(()=>Mg).optional(),InventoryWithdrawal:e.lazy(()=>Bg).optional(),tags:e.lazy(()=>UZ).optional(),versions:e.lazy(()=>ng).optional(),equipment:e.lazy(()=>BR).optional(),dietaryRestrictions:e.lazy(()=>KR).optional()}).strict(),$a=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),isDeleted:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),cookBook:e.lazy(()=>qd).optional(),ingredients:e.lazy(()=>DT).optional(),instructions:e.lazy(()=>LL).optional(),menuItems:e.lazy(()=>PR).optional(),foodCostHistory:e.lazy(()=>X8).optional(),prepHistory:e.lazy(()=>eJ).optional(),prepBoards:e.lazy(()=>tJ).optional(),prepItems:e.lazy(()=>oP).optional(),MenuItemRecipe:e.lazy(()=>kZ).optional(),ProductionPlanItem:e.lazy(()=>YT).optional(),InventoryWithdrawal:e.lazy(()=>rP).optional(),tags:e.lazy(()=>aJ).optional(),versions:e.lazy(()=>uT).optional(),equipment:e.lazy(()=>$L).optional(),dietaryRestrictions:e.lazy(()=>RZ).optional()}).strict(),v=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ie),e.lazy(()=>ie).array()]).optional(),OR:e.lazy(()=>ie).array().optional(),NOT:e.union([e.lazy(()=>ie),e.lazy(()=>ie).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.lazy(()=>zo).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),servings:e.union([e.lazy(()=>z),e.number().int()]).optional(),cookTime:e.union([e.lazy(()=>z),e.number().int()]).optional(),prepTime:e.union([e.lazy(()=>z),e.number().int()]).optional(),frequency:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),cookBookId:e.union([e.lazy(()=>z),e.number().int()]).optional(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),cookBook:e.union([e.lazy(()=>vZ),e.lazy(()=>Vt)]).optional(),ingredients:e.lazy(()=>fg).optional(),instructions:e.lazy(()=>NR).optional(),menuItems:e.lazy(()=>sh).optional(),foodCostHistory:e.lazy(()=>AZ).optional(),prepHistory:e.lazy(()=>CZ).optional(),prepBoards:e.lazy(()=>WZ).optional(),prepItems:e.lazy(()=>Pg).optional(),MenuItemRecipe:e.lazy(()=>JR).optional(),ProductionPlanItem:e.lazy(()=>Mg).optional(),InventoryWithdrawal:e.lazy(()=>Bg).optional(),tags:e.lazy(()=>UZ).optional(),versions:e.lazy(()=>ng).optional(),equipment:e.lazy(()=>BR).optional(),dietaryRestrictions:e.lazy(()=>KR).optional()}).strict()),tE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),isDeleted:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>nJ).optional(),_avg:e.lazy(()=>oJ).optional(),_max:e.lazy(()=>iJ).optional(),_min:e.lazy(()=>rJ).optional(),_sum:e.lazy(()=>lJ).optional()}).strict(),PI=e.object({AND:e.union([e.lazy(()=>PI),e.lazy(()=>PI).array()]).optional(),OR:e.lazy(()=>PI).array().optional(),NOT:e.union([e.lazy(()=>PI),e.lazy(()=>PI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),imageUrl:e.lazy(()=>zo).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),servings:e.union([e.lazy(()=>k),e.number()]).optional(),cookTime:e.union([e.lazy(()=>k),e.number()]).optional(),prepTime:e.union([e.lazy(()=>k),e.number()]).optional(),frequency:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),cookBookId:e.union([e.lazy(()=>k),e.number()]).optional(),foodCost:e.union([e.lazy(()=>HT),e.number()]).optional().nullable(),isDeleted:e.union([e.lazy(()=>yh),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Te=e.object({AND:e.union([e.lazy(()=>Te),e.lazy(()=>Te).array()]).optional(),OR:e.lazy(()=>Te).array().optional(),NOT:e.union([e.lazy(()=>Te),e.lazy(()=>Te).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),category:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),dietaryRestrictionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),recipeIngredients:e.lazy(()=>fg).optional(),inventoryItems:e.lazy(()=>Ng).optional(),orderItems:e.lazy(()=>XR).optional(),vendors:e.lazy(()=>fZ).optional(),WasteRecord:e.lazy(()=>wg).optional(),IngredientAllergen:e.lazy(()=>HR).optional(),SupplierPriceHistory:e.lazy(()=>ef).optional(),DietaryRestriction:e.union([e.lazy(()=>jZ),e.lazy(()=>Pt)]).optional().nullable()}).strict(),qi=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipeIngredients:e.lazy(()=>DT).optional(),inventoryItems:e.lazy(()=>iP).optional(),orderItems:e.lazy(()=>MZ).optional(),vendors:e.lazy(()=>cJ).optional(),WasteRecord:e.lazy(()=>tP).optional(),IngredientAllergen:e.lazy(()=>oZ).optional(),SupplierPriceHistory:e.lazy(()=>OZ).optional(),DietaryRestriction:e.lazy(()=>Nd).optional()}).strict(),Y=e.union([e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),AND:e.union([e.lazy(()=>Te),e.lazy(()=>Te).array()]).optional(),OR:e.lazy(()=>Te).array().optional(),NOT:e.union([e.lazy(()=>Te),e.lazy(()=>Te).array()]).optional(),category:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),dietaryRestrictionId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),recipeIngredients:e.lazy(()=>fg).optional(),inventoryItems:e.lazy(()=>Ng).optional(),orderItems:e.lazy(()=>XR).optional(),vendors:e.lazy(()=>fZ).optional(),WasteRecord:e.lazy(()=>wg).optional(),IngredientAllergen:e.lazy(()=>HR).optional(),SupplierPriceHistory:e.lazy(()=>ef).optional(),DietaryRestriction:e.union([e.lazy(()=>jZ),e.lazy(()=>Pt)]).optional().nullable()}).strict()),aE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>pJ).optional(),_avg:e.lazy(()=>uJ).optional(),_max:e.lazy(()=>sJ).optional(),_min:e.lazy(()=>yJ).optional(),_sum:e.lazy(()=>dJ).optional()}).strict(),NI=e.object({AND:e.union([e.lazy(()=>NI),e.lazy(()=>NI).array()]).optional(),OR:e.lazy(()=>NI).array().optional(),NOT:e.union([e.lazy(()=>NI),e.lazy(()=>NI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),category:e.union([e.lazy(()=>We),e.string()]).optional(),price:e.union([e.lazy(()=>Gt),e.number()]).optional(),dietaryRestrictionId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable()}).strict(),Ra=e.object({AND:e.union([e.lazy(()=>Ra),e.lazy(()=>Ra).array()]).optional(),OR:e.lazy(()=>Ra).array().optional(),NOT:e.union([e.lazy(()=>Ra),e.lazy(()=>Ra).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),RecipeVersion:e.union([e.lazy(()=>tf),e.lazy(()=>st)]).optional().nullable()}).strict(),Sm=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),recipeVersionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipe:e.lazy(()=>$a).optional(),ingredient:e.lazy(()=>qi).optional(),RecipeVersion:e.lazy(()=>_l).optional()}).strict(),Q=e.union([e.object({id:e.number().int(),recipeId_ingredientId:e.lazy(()=>Gw)}),e.object({id:e.number().int()}),e.object({recipeId_ingredientId:e.lazy(()=>Gw)})]).and(e.object({id:e.number().int().optional(),recipeId_ingredientId:e.lazy(()=>Gw).optional(),AND:e.union([e.lazy(()=>Ra),e.lazy(()=>Ra).array()]).optional(),OR:e.lazy(()=>Ra).array().optional(),NOT:e.union([e.lazy(()=>Ra),e.lazy(()=>Ra).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),RecipeVersion:e.union([e.lazy(()=>tf),e.lazy(()=>st)]).optional().nullable()}).strict()),nE=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),recipeVersionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>mJ).optional(),_avg:e.lazy(()=>zJ).optional(),_max:e.lazy(()=>hJ).optional(),_min:e.lazy(()=>bJ).optional(),_sum:e.lazy(()=>IJ).optional()}).strict(),BI=e.object({AND:e.union([e.lazy(()=>BI),e.lazy(()=>BI).array()]).optional(),OR:e.lazy(()=>BI).array().optional(),NOT:e.union([e.lazy(()=>BI),e.lazy(()=>BI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),joinAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),recipeVersionId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable()}).strict(),fa=e.object({AND:e.union([e.lazy(()=>fa),e.lazy(()=>fa).array()]).optional(),OR:e.lazy(()=>fa).array().optional(),NOT:e.union([e.lazy(()=>fa),e.lazy(()=>fa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),stepNumber:e.union([e.lazy(()=>z),e.number()]).optional(),instruction:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),RecipeVersion:e.union([e.lazy(()=>tf),e.lazy(()=>st)]).optional().nullable()}).strict(),vm=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),instruction:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipeVersionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipe:e.lazy(()=>$a).optional(),RecipeVersion:e.lazy(()=>_l).optional()}).strict(),ge=e.union([e.object({id:e.number().int(),recipeId_stepNumber:e.lazy(()=>Yw)}),e.object({id:e.number().int()}),e.object({recipeId_stepNumber:e.lazy(()=>Yw)})]).and(e.object({id:e.number().int().optional(),recipeId_stepNumber:e.lazy(()=>Yw).optional(),AND:e.union([e.lazy(()=>fa),e.lazy(()=>fa).array()]).optional(),OR:e.lazy(()=>fa).array().optional(),NOT:e.union([e.lazy(()=>fa),e.lazy(()=>fa).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),stepNumber:e.union([e.lazy(()=>z),e.number().int()]).optional(),instruction:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),RecipeVersion:e.union([e.lazy(()=>tf),e.lazy(()=>st)]).optional().nullable()}).strict()),oE=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),instruction:e.lazy(()=>t).optional(),imageUrl:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),recipeVersionId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>gJ).optional(),_avg:e.lazy(()=>SJ).optional(),_max:e.lazy(()=>vJ).optional(),_min:e.lazy(()=>AJ).optional(),_sum:e.lazy(()=>CJ).optional()}).strict(),_I=e.object({AND:e.union([e.lazy(()=>_I),e.lazy(()=>_I).array()]).optional(),OR:e.lazy(()=>_I).array().optional(),NOT:e.union([e.lazy(()=>_I),e.lazy(()=>_I).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),stepNumber:e.union([e.lazy(()=>k),e.number()]).optional(),instruction:e.union([e.lazy(()=>We),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),recipeVersionId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable()}).strict(),zt=e.object({AND:e.union([e.lazy(()=>zt),e.lazy(()=>zt).array()]).optional(),OR:e.lazy(()=>zt).array().optional(),NOT:e.union([e.lazy(()=>zt),e.lazy(()=>zt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),items:e.lazy(()=>Ng).optional()}).strict(),Dl=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),items:e.lazy(()=>iP).optional()}).strict(),so=e.union([e.object({id:e.number().int(),restaurantId:e.number().int()}),e.object({id:e.number().int()}),e.object({restaurantId:e.number().int()})]).and(e.object({id:e.number().int().optional(),restaurantId:e.number().int().optional(),AND:e.union([e.lazy(()=>zt),e.lazy(()=>zt).array()]).optional(),OR:e.lazy(()=>zt).array().optional(),NOT:e.union([e.lazy(()=>zt),e.lazy(()=>zt).array()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),items:e.lazy(()=>Ng).optional()}).strict()),iE=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),_count:e.lazy(()=>WJ).optional(),_avg:e.lazy(()=>UJ).optional(),_max:e.lazy(()=>kJ).optional(),_min:e.lazy(()=>RJ).optional(),_sum:e.lazy(()=>fJ).optional()}).strict(),qI=e.object({AND:e.union([e.lazy(()=>qI),e.lazy(()=>qI).array()]).optional(),OR:e.lazy(()=>qI).array().optional(),NOT:e.union([e.lazy(()=>qI),e.lazy(()=>qI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional()}).strict(),Ht=e.object({AND:e.union([e.lazy(()=>Ht),e.lazy(()=>Ht).array()]).optional(),OR:e.lazy(()=>Ht).array().optional(),NOT:e.union([e.lazy(()=>Ht),e.lazy(()=>Ht).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),inventoryId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),minQuantity:e.union([e.lazy(()=>re),e.number()]).optional(),restockThreshold:e.union([e.lazy(()=>re),e.number()]).optional(),lastUpdatedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),lastUpdated:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),inventory:e.union([e.lazy(()=>wZ),e.lazy(()=>zt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),lastUpdatedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable(),InventoryWithdrawal:e.lazy(()=>Bg).optional()}).strict(),Fd=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),lastUpdated:e.lazy(()=>t).optional(),inventory:e.lazy(()=>Dl).optional(),ingredient:e.lazy(()=>qi).optional(),lastUpdatedBy:e.lazy(()=>ta).optional(),InventoryWithdrawal:e.lazy(()=>rP).optional()}).strict(),D=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ht),e.lazy(()=>Ht).array()]).optional(),OR:e.lazy(()=>Ht).array().optional(),NOT:e.union([e.lazy(()=>Ht),e.lazy(()=>Ht).array()]).optional(),inventoryId:e.union([e.lazy(()=>z),e.number().int()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),minQuantity:e.union([e.lazy(()=>re),e.number()]).optional(),restockThreshold:e.union([e.lazy(()=>re),e.number()]).optional(),lastUpdatedById:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),lastUpdated:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),inventory:e.union([e.lazy(()=>wZ),e.lazy(()=>zt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional(),lastUpdatedBy:e.union([e.lazy(()=>dh),e.lazy(()=>P)]).optional().nullable(),InventoryWithdrawal:e.lazy(()=>Bg).optional()}).strict()),rE=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),lastUpdated:e.lazy(()=>t).optional(),_count:e.lazy(()=>jJ).optional(),_avg:e.lazy(()=>MJ).optional(),_max:e.lazy(()=>OJ).optional(),_min:e.lazy(()=>wJ).optional(),_sum:e.lazy(()=>TJ).optional()}).strict(),FI=e.object({AND:e.union([e.lazy(()=>FI),e.lazy(()=>FI).array()]).optional(),OR:e.lazy(()=>FI).array().optional(),NOT:e.union([e.lazy(()=>FI),e.lazy(()=>FI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),inventoryId:e.union([e.lazy(()=>k),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),minQuantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),restockThreshold:e.union([e.lazy(()=>Gt),e.number()]).optional(),lastUpdatedById:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),lastUpdated:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Lt=e.object({AND:e.union([e.lazy(()=>Lt),e.lazy(()=>Lt).array()]).optional(),OR:e.lazy(()=>Lt).array().optional(),NOT:e.union([e.lazy(()=>Lt),e.lazy(()=>Lt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>lP),e.lazy(()=>Be)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),vendor:e.union([e.lazy(()=>DR),e.lazy(()=>Mt)]).optional(),items:e.lazy(()=>XR).optional()}).strict(),Ed=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),vendor:e.lazy(()=>xl).optional(),items:e.lazy(()=>MZ).optional()}).strict(),ue=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Lt),e.lazy(()=>Lt).array()]).optional(),OR:e.lazy(()=>Lt).array().optional(),NOT:e.union([e.lazy(()=>Lt),e.lazy(()=>Lt).array()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number().int()]).optional(),status:e.union([e.lazy(()=>lP),e.lazy(()=>Be)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),vendor:e.union([e.lazy(()=>DR),e.lazy(()=>Mt)]).optional(),items:e.lazy(()=>XR).optional()}).strict()),lE=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>PJ).optional(),_avg:e.lazy(()=>NJ).optional(),_max:e.lazy(()=>BJ).optional(),_min:e.lazy(()=>_J).optional(),_sum:e.lazy(()=>qJ).optional()}).strict(),EI=e.object({AND:e.union([e.lazy(()=>EI),e.lazy(()=>EI).array()]).optional(),OR:e.lazy(()=>EI).array().optional(),NOT:e.union([e.lazy(()=>EI),e.lazy(()=>EI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),vendorId:e.union([e.lazy(()=>k),e.number()]).optional(),status:e.union([e.lazy(()=>FJ),e.lazy(()=>Be)]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),ja=e.object({AND:e.union([e.lazy(()=>ja),e.lazy(()=>ja).array()]).optional(),OR:e.lazy(()=>ja).array().optional(),NOT:e.union([e.lazy(()=>ja),e.lazy(()=>ja).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),orderId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),order:e.union([e.lazy(()=>TZ),e.lazy(()=>Lt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional()}).strict(),Am=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),order:e.lazy(()=>Ed).optional(),ingredient:e.lazy(()=>qi).optional()}).strict(),Se=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>ja),e.lazy(()=>ja).array()]).optional(),OR:e.lazy(()=>ja).array().optional(),NOT:e.union([e.lazy(()=>ja),e.lazy(()=>ja).array()]).optional(),orderId:e.union([e.lazy(()=>z),e.number().int()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),order:e.union([e.lazy(()=>TZ),e.lazy(()=>Lt)]).optional(),ingredient:e.union([e.lazy(()=>el),e.lazy(()=>Te)]).optional()}).strict()),cE=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),_count:e.lazy(()=>EJ).optional(),_avg:e.lazy(()=>DJ).optional(),_max:e.lazy(()=>xJ).optional(),_min:e.lazy(()=>VJ).optional(),_sum:e.lazy(()=>HJ).optional()}).strict(),DI=e.object({AND:e.union([e.lazy(()=>DI),e.lazy(()=>DI).array()]).optional(),OR:e.lazy(()=>DI).array().optional(),NOT:e.union([e.lazy(()=>DI),e.lazy(()=>DI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),orderId:e.union([e.lazy(()=>k),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>Gt),e.number()]).optional(),unit:e.union([e.lazy(()=>We),e.string()]).optional(),price:e.union([e.lazy(()=>Gt),e.number()]).optional()}).strict(),Mt=e.object({AND:e.union([e.lazy(()=>Mt),e.lazy(()=>Mt).array()]).optional(),OR:e.lazy(()=>Mt).array().optional(),NOT:e.union([e.lazy(()=>Mt),e.lazy(()=>Mt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),contact:e.union([e.lazy(()=>U),e.string()]).optional(),email:e.union([e.lazy(()=>U),e.string()]).optional(),phone:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),orders:e.lazy(()=>$R).optional(),ingredients:e.lazy(()=>VR).optional(),supplierPriceHistory:e.lazy(()=>ef).optional()}).strict(),xl=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),contact:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),phone:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),orders:e.lazy(()=>dZ).optional(),ingredients:e.lazy(()=>XL).optional(),supplierPriceHistory:e.lazy(()=>OZ).optional()}).strict(),Ke=e.union([e.object({id:e.number().int(),name:e.string(),email:e.string()}),e.object({id:e.number().int(),name:e.string()}),e.object({id:e.number().int(),email:e.string()}),e.object({id:e.number().int()}),e.object({name:e.string(),email:e.string()}),e.object({name:e.string()}),e.object({email:e.string()})]).and(e.object({id:e.number().int().optional(),name:e.string().optional(),email:e.string().optional(),AND:e.union([e.lazy(()=>Mt),e.lazy(()=>Mt).array()]).optional(),OR:e.lazy(()=>Mt).array().optional(),NOT:e.union([e.lazy(()=>Mt),e.lazy(()=>Mt).array()]).optional(),contact:e.union([e.lazy(()=>U),e.string()]).optional(),phone:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),orders:e.lazy(()=>$R).optional(),ingredients:e.lazy(()=>VR).optional(),supplierPriceHistory:e.lazy(()=>ef).optional()}).strict()),pE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),contact:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),phone:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>LJ).optional(),_avg:e.lazy(()=>ZJ).optional(),_max:e.lazy(()=>$J).optional(),_min:e.lazy(()=>QJ).optional(),_sum:e.lazy(()=>GJ).optional()}).strict(),xI=e.object({AND:e.union([e.lazy(()=>xI),e.lazy(()=>xI).array()]).optional(),OR:e.lazy(()=>xI).array().optional(),NOT:e.union([e.lazy(()=>xI),e.lazy(()=>xI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),contact:e.union([e.lazy(()=>We),e.string()]).optional(),email:e.union([e.lazy(()=>We),e.string()]).optional(),phone:e.union([e.lazy(()=>We),e.string()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Zt=e.object({AND:e.union([e.lazy(()=>Zt),e.lazy(()=>Zt).array()]).optional(),OR:e.lazy(()=>Zt).array().optional(),NOT:e.union([e.lazy(()=>Zt),e.lazy(()=>Zt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),status:e.union([e.lazy(()=>cP),e.lazy(()=>Ze)]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),ShiftTask:e.lazy(()=>PZ).optional()}).strict(),Dd=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),user:e.lazy(()=>ta).optional(),ShiftTask:e.lazy(()=>YJ).optional()}).strict(),ot=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Zt),e.lazy(()=>Zt).array()]).optional(),OR:e.lazy(()=>Zt).array().optional(),NOT:e.union([e.lazy(()=>Zt),e.lazy(()=>Zt).array()]).optional(),userId:e.union([e.lazy(()=>z),e.number().int()]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),status:e.union([e.lazy(()=>cP),e.lazy(()=>Ze)]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional(),ShiftTask:e.lazy(()=>PZ).optional()}).strict()),uE=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),_count:e.lazy(()=>JJ).optional(),_avg:e.lazy(()=>KJ).optional(),_max:e.lazy(()=>XJ).optional(),_min:e.lazy(()=>e7).optional(),_sum:e.lazy(()=>t7).optional()}).strict(),VI=e.object({AND:e.union([e.lazy(()=>VI),e.lazy(()=>VI).array()]).optional(),OR:e.lazy(()=>VI).array().optional(),NOT:e.union([e.lazy(()=>VI),e.lazy(()=>VI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),userId:e.union([e.lazy(()=>k),e.number()]).optional(),startTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),status:e.union([e.lazy(()=>a7),e.lazy(()=>Ze)]).optional()}).strict(),$t=e.object({AND:e.union([e.lazy(()=>$t),e.lazy(()=>$t).array()]).optional(),OR:e.lazy(()=>$t).array().optional(),NOT:e.union([e.lazy(()=>$t),e.lazy(()=>$t).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipes:e.lazy(()=>tl).optional(),prepItems:e.lazy(()=>Pg).optional()}).strict(),xd=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),recipes:e.lazy(()=>jg).optional(),prepItems:e.lazy(()=>oP).optional()}).strict(),it=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>$t),e.lazy(()=>$t).array()]).optional(),OR:e.lazy(()=>$t).array().optional(),NOT:e.union([e.lazy(()=>$t),e.lazy(()=>$t).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipes:e.lazy(()=>tl).optional(),prepItems:e.lazy(()=>Pg).optional()}).strict()),sE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>n7).optional(),_avg:e.lazy(()=>o7).optional(),_max:e.lazy(()=>i7).optional(),_min:e.lazy(()=>r7).optional(),_sum:e.lazy(()=>l7).optional()}).strict(),HI=e.object({AND:e.union([e.lazy(()=>HI),e.lazy(()=>HI).array()]).optional(),OR:e.lazy(()=>HI).array().optional(),NOT:e.union([e.lazy(()=>HI),e.lazy(()=>HI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),status:e.union([e.lazy(()=>NZ),e.lazy(()=>oe)]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ma=e.object({AND:e.union([e.lazy(()=>Ma),e.lazy(()=>Ma).array()]).optional(),OR:e.lazy(()=>Ma).array().optional(),NOT:e.union([e.lazy(()=>Ma),e.lazy(()=>Ma).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),prepBoardId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),assignedToId:e.union([e.lazy(()=>z),e.number()]).optional(),prepBoard:e.union([e.lazy(()=>BZ),e.lazy(()=>$t)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),assignedTo:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),Cm=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional(),prepBoard:e.lazy(()=>xd).optional(),recipe:e.lazy(()=>$a).optional(),assignedTo:e.lazy(()=>ta).optional()}).strict(),G=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ma),e.lazy(()=>Ma).array()]).optional(),OR:e.lazy(()=>Ma).array().optional(),NOT:e.union([e.lazy(()=>Ma),e.lazy(()=>Ma).array()]).optional(),prepBoardId:e.union([e.lazy(()=>z),e.number().int()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>z),e.number().int()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),assignedToId:e.union([e.lazy(()=>z),e.number().int()]).optional(),prepBoard:e.union([e.lazy(()=>BZ),e.lazy(()=>$t)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional(),assignedTo:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),yE=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional(),_count:e.lazy(()=>c7).optional(),_avg:e.lazy(()=>p7).optional(),_max:e.lazy(()=>u7).optional(),_min:e.lazy(()=>s7).optional(),_sum:e.lazy(()=>y7).optional()}).strict(),LI=e.object({AND:e.union([e.lazy(()=>LI),e.lazy(()=>LI).array()]).optional(),OR:e.lazy(()=>LI).array().optional(),NOT:e.union([e.lazy(()=>LI),e.lazy(()=>LI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),prepBoardId:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>k),e.number()]).optional(),status:e.union([e.lazy(()=>NZ),e.lazy(()=>oe)]).optional(),assignedToId:e.union([e.lazy(()=>k),e.number()]).optional()}).strict(),Oa=e.object({AND:e.union([e.lazy(()=>Oa),e.lazy(()=>Oa).array()]).optional(),OR:e.lazy(()=>Oa).array().optional(),NOT:e.union([e.lazy(()=>Oa),e.lazy(()=>Oa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),token:e.union([e.lazy(()=>U),e.string()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict(),Wm=e.object({id:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),user:e.lazy(()=>ta).optional()}).strict(),Ct=e.union([e.object({id:e.number().int(),token:e.string()}),e.object({id:e.number().int()}),e.object({token:e.string()})]).and(e.object({id:e.number().int().optional(),token:e.string().optional(),AND:e.union([e.lazy(()=>Oa),e.lazy(()=>Oa).array()]).optional(),OR:e.lazy(()=>Oa).array().optional(),NOT:e.union([e.lazy(()=>Oa),e.lazy(()=>Oa).array()]).optional(),userId:e.union([e.lazy(()=>z),e.number().int()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),user:e.union([e.lazy(()=>aa),e.lazy(()=>P)]).optional()}).strict()),dE=e.object({id:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>d7).optional(),_avg:e.lazy(()=>m7).optional(),_max:e.lazy(()=>z7).optional(),_min:e.lazy(()=>h7).optional(),_sum:e.lazy(()=>b7).optional()}).strict(),ZI=e.object({AND:e.union([e.lazy(()=>ZI),e.lazy(()=>ZI).array()]).optional(),OR:e.lazy(()=>ZI).array().optional(),NOT:e.union([e.lazy(()=>ZI),e.lazy(()=>ZI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),token:e.union([e.lazy(()=>We),e.string()]).optional(),userId:e.union([e.lazy(()=>k),e.number()]).optional(),expiresAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ot=e.object({AND:e.union([e.lazy(()=>Ot),e.lazy(()=>Ot).array()]).optional(),OR:e.lazy(()=>Ot).array().optional(),NOT:e.union([e.lazy(()=>Ot),e.lazy(()=>Ot).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItems:e.lazy(()=>sh).optional(),MenuCategory:e.lazy(()=>_Z).optional()}).strict(),Vl=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),restaurant:e.lazy(()=>ca).optional(),menuItems:e.lazy(()=>PR).optional(),MenuCategory:e.lazy(()=>I7).optional()}).strict(),Xe=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ot),e.lazy(()=>Ot).array()]).optional(),OR:e.lazy(()=>Ot).array().optional(),NOT:e.union([e.lazy(()=>Ot),e.lazy(()=>Ot).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),restaurant:e.union([e.lazy(()=>ia),e.lazy(()=>x)]).optional(),menuItems:e.lazy(()=>sh).optional(),MenuCategory:e.lazy(()=>_Z).optional()}).strict()),mE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>g7).optional(),_avg:e.lazy(()=>S7).optional(),_max:e.lazy(()=>v7).optional(),_min:e.lazy(()=>A7).optional(),_sum:e.lazy(()=>C7).optional()}).strict(),$I=e.object({AND:e.union([e.lazy(()=>$I),e.lazy(()=>$I).array()]).optional(),OR:e.lazy(()=>$I).array().optional(),NOT:e.union([e.lazy(()=>$I),e.lazy(()=>$I).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),wa=e.object({AND:e.union([e.lazy(()=>wa),e.lazy(()=>wa).array()]).optional(),OR:e.lazy(()=>wa).array().optional(),NOT:e.union([e.lazy(()=>wa),e.lazy(()=>wa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict(),Um=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),menuItem:e.lazy(()=>Fi).optional(),recipe:e.lazy(()=>$a).optional()}).strict(),ve=e.union([e.object({id:e.number().int(),menuItemId_recipeId:e.lazy(()=>Jw)}),e.object({id:e.number().int()}),e.object({menuItemId_recipeId:e.lazy(()=>Jw)})]).and(e.object({id:e.number().int().optional(),menuItemId_recipeId:e.lazy(()=>Jw).optional(),AND:e.union([e.lazy(()=>wa),e.lazy(()=>wa).array()]).optional(),OR:e.lazy(()=>wa).array().optional(),NOT:e.union([e.lazy(()=>wa),e.lazy(()=>wa).array()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number().int()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>uh),e.lazy(()=>Ae)]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict()),zE=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>W7).optional(),_avg:e.lazy(()=>U7).optional(),_max:e.lazy(()=>k7).optional(),_min:e.lazy(()=>R7).optional(),_sum:e.lazy(()=>f7).optional()}).strict(),QI=e.object({AND:e.union([e.lazy(()=>QI),e.lazy(()=>QI).array()]).optional(),OR:e.lazy(()=>QI).array().optional(),NOT:e.union([e.lazy(()=>QI),e.lazy(()=>QI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),joinAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ae=e.object({AND:e.union([e.lazy(()=>Ae),e.lazy(()=>Ae).array()]).optional(),OR:e.lazy(()=>Ae).array().optional(),NOT:e.union([e.lazy(()=>Ae),e.lazy(()=>Ae).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),price:e.union([e.lazy(()=>re),e.number()]).optional(),foodCost:e.union([e.lazy(()=>re),e.number()]).optional(),recipeIds:e.lazy(()=>af).optional(),recipeServingsAmount:e.lazy(()=>fm).optional(),recipeServingsCost:e.lazy(()=>fm).optional(),allergens:e.lazy(()=>zo).optional(),nutritionalInfoId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),menuId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),categoryId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),nutritionalInfo:e.union([e.lazy(()=>qZ),e.lazy(()=>Ft)]).optional().nullable(),menu:e.union([e.lazy(()=>TR),e.lazy(()=>Ot)]).optional(),recipes:e.lazy(()=>tl).optional(),menuItemRecipe:e.lazy(()=>JR).optional(),salesTransactions:e.lazy(()=>QR).optional(),leftoverItem:e.lazy(()=>Og).optional(),nutritionalRecommendation:e.lazy(()=>FZ).optional(),category:e.union([e.lazy(()=>EZ),e.lazy(()=>Tt)]).optional().nullable(),feedback:e.lazy(()=>Tg).optional(),dietaryRestrictions:e.lazy(()=>KR).optional()}).strict(),Fi=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),recipeIds:e.lazy(()=>t).optional(),recipeServingsAmount:e.lazy(()=>t).optional(),recipeServingsCost:e.lazy(()=>t).optional(),allergens:e.lazy(()=>t).optional(),nutritionalInfoId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),menuId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),categoryId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),nutritionalInfo:e.lazy(()=>Vd).optional(),menu:e.lazy(()=>Vl).optional(),recipes:e.lazy(()=>jg).optional(),menuItemRecipe:e.lazy(()=>kZ).optional(),salesTransactions:e.lazy(()=>mZ).optional(),leftoverItem:e.lazy(()=>eP).optional(),nutritionalRecommendation:e.lazy(()=>j7).optional(),category:e.lazy(()=>wd).optional(),feedback:e.lazy(()=>aP).optional(),dietaryRestrictions:e.lazy(()=>RZ).optional()}).strict(),R=e.union([e.object({id:e.number().int(),nutritionalInfoId:e.number().int()}),e.object({id:e.number().int()}),e.object({nutritionalInfoId:e.number().int()})]).and(e.object({id:e.number().int().optional(),nutritionalInfoId:e.number().int().optional(),AND:e.union([e.lazy(()=>Ae),e.lazy(()=>Ae).array()]).optional(),OR:e.lazy(()=>Ae).array().optional(),NOT:e.union([e.lazy(()=>Ae),e.lazy(()=>Ae).array()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),price:e.union([e.lazy(()=>re),e.number()]).optional(),foodCost:e.union([e.lazy(()=>re),e.number()]).optional(),recipeIds:e.lazy(()=>af).optional(),recipeServingsAmount:e.lazy(()=>fm).optional(),recipeServingsCost:e.lazy(()=>fm).optional(),allergens:e.lazy(()=>zo).optional(),menuId:e.union([e.lazy(()=>z),e.number().int()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),categoryId:e.union([e.lazy(()=>Ce),e.number().int()]).optional().nullable(),nutritionalInfo:e.union([e.lazy(()=>qZ),e.lazy(()=>Ft)]).optional().nullable(),menu:e.union([e.lazy(()=>TR),e.lazy(()=>Ot)]).optional(),recipes:e.lazy(()=>tl).optional(),menuItemRecipe:e.lazy(()=>JR).optional(),salesTransactions:e.lazy(()=>QR).optional(),leftoverItem:e.lazy(()=>Og).optional(),nutritionalRecommendation:e.lazy(()=>FZ).optional(),category:e.union([e.lazy(()=>EZ),e.lazy(()=>Tt)]).optional().nullable(),feedback:e.lazy(()=>Tg).optional(),dietaryRestrictions:e.lazy(()=>KR).optional()}).strict()),hE=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),recipeIds:e.lazy(()=>t).optional(),recipeServingsAmount:e.lazy(()=>t).optional(),recipeServingsCost:e.lazy(()=>t).optional(),allergens:e.lazy(()=>t).optional(),nutritionalInfoId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),menuId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),categoryId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),_count:e.lazy(()=>M7).optional(),_avg:e.lazy(()=>O7).optional(),_max:e.lazy(()=>w7).optional(),_min:e.lazy(()=>T7).optional(),_sum:e.lazy(()=>P7).optional()}).strict(),GI=e.object({AND:e.union([e.lazy(()=>GI),e.lazy(()=>GI).array()]).optional(),OR:e.lazy(()=>GI).array().optional(),NOT:e.union([e.lazy(()=>GI),e.lazy(()=>GI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),name:e.union([e.lazy(()=>We),e.string()]).optional(),description:e.union([e.lazy(()=>wt),e.string()]).optional().nullable(),price:e.union([e.lazy(()=>Gt),e.number()]).optional(),foodCost:e.union([e.lazy(()=>Gt),e.number()]).optional(),recipeIds:e.lazy(()=>af).optional(),recipeServingsAmount:e.lazy(()=>fm).optional(),recipeServingsCost:e.lazy(()=>fm).optional(),allergens:e.lazy(()=>zo).optional(),nutritionalInfoId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),menuId:e.union([e.lazy(()=>k),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),categoryId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable()}).strict(),Ft=e.object({AND:e.union([e.lazy(()=>Ft),e.lazy(()=>Ft).array()]).optional(),OR:e.lazy(()=>Ft).array().optional(),NOT:e.union([e.lazy(()=>Ft),e.lazy(()=>Ft).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),calories:e.union([e.lazy(()=>re),e.number()]).optional(),fat:e.union([e.lazy(()=>re),e.number()]).optional(),saturatedFat:e.union([e.lazy(()=>re),e.number()]).optional(),transFat:e.union([e.lazy(()=>re),e.number()]).optional(),cholesterol:e.union([e.lazy(()=>re),e.number()]).optional(),sodium:e.union([e.lazy(()=>re),e.number()]).optional(),carbohydrates:e.union([e.lazy(()=>re),e.number()]).optional(),fiber:e.union([e.lazy(()=>re),e.number()]).optional(),sugar:e.union([e.lazy(()=>re),e.number()]).optional(),protein:e.union([e.lazy(()=>re),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>xR),e.lazy(()=>Ae)]).optional().nullable()}).strict(),Vd=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),menuItem:e.lazy(()=>Fi).optional()}).strict(),xi=e.union([e.object({id:e.number().int(),menuItemId:e.number().int()}),e.object({id:e.number().int()}),e.object({menuItemId:e.number().int()})]).and(e.object({id:e.number().int().optional(),menuItemId:e.number().int().optional(),AND:e.union([e.lazy(()=>Ft),e.lazy(()=>Ft).array()]).optional(),OR:e.lazy(()=>Ft).array().optional(),NOT:e.union([e.lazy(()=>Ft),e.lazy(()=>Ft).array()]).optional(),calories:e.union([e.lazy(()=>re),e.number()]).optional(),fat:e.union([e.lazy(()=>re),e.number()]).optional(),saturatedFat:e.union([e.lazy(()=>re),e.number()]).optional(),transFat:e.union([e.lazy(()=>re),e.number()]).optional(),cholesterol:e.union([e.lazy(()=>re),e.number()]).optional(),sodium:e.union([e.lazy(()=>re),e.number()]).optional(),carbohydrates:e.union([e.lazy(()=>re),e.number()]).optional(),fiber:e.union([e.lazy(()=>re),e.number()]).optional(),sugar:e.union([e.lazy(()=>re),e.number()]).optional(),protein:e.union([e.lazy(()=>re),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItem:e.union([e.lazy(()=>xR),e.lazy(()=>Ae)]).optional().nullable()}).strict()),bE=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.union([e.lazy(()=>t),e.lazy(()=>f)]).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>N7).optional(),_avg:e.lazy(()=>B7).optional(),_max:e.lazy(()=>_7).optional(),_min:e.lazy(()=>q7).optional(),_sum:e.lazy(()=>F7).optional()}).strict(),YI=e.object({AND:e.union([e.lazy(()=>YI),e.lazy(()=>YI).array()]).optional(),OR:e.lazy(()=>YI).array().optional(),NOT:e.union([e.lazy(()=>YI),e.lazy(()=>YI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>Za),e.number()]).optional().nullable(),calories:e.union([e.lazy(()=>Gt),e.number()]).optional(),fat:e.union([e.lazy(()=>Gt),e.number()]).optional(),saturatedFat:e.union([e.lazy(()=>Gt),e.number()]).optional(),transFat:e.union([e.lazy(()=>Gt),e.number()]).optional(),cholesterol:e.union([e.lazy(()=>Gt),e.number()]).optional(),sodium:e.union([e.lazy(()=>Gt),e.number()]).optional(),carbohydrates:e.union([e.lazy(()=>Gt),e.number()]).optional(),fiber:e.union([e.lazy(()=>Gt),e.number()]).optional(),sugar:e.union([e.lazy(()=>Gt),e.number()]).optional(),protein:e.union([e.lazy(()=>Gt),e.number()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Ta=e.object({AND:e.union([e.lazy(()=>Ta),e.lazy(()=>Ta).array()]).optional(),OR:e.lazy(()=>Ta).array().optional(),NOT:e.union([e.lazy(()=>Ta),e.lazy(()=>Ta).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),cost:e.union([e.lazy(()=>re),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict(),km=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),recipe:e.lazy(()=>$a).optional()}).strict(),Wt=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Ta),e.lazy(()=>Ta).array()]).optional(),OR:e.lazy(()=>Ta).array().optional(),NOT:e.union([e.lazy(()=>Ta),e.lazy(()=>Ta).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),cost:e.union([e.lazy(()=>re),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict()),IE=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>E7).optional(),_avg:e.lazy(()=>D7).optional(),_max:e.lazy(()=>x7).optional(),_min:e.lazy(()=>V7).optional(),_sum:e.lazy(()=>H7).optional()}).strict(),JI=e.object({AND:e.union([e.lazy(()=>JI),e.lazy(()=>JI).array()]).optional(),OR:e.lazy(()=>JI).array().optional(),NOT:e.union([e.lazy(()=>JI),e.lazy(()=>JI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),cost:e.union([e.lazy(()=>Gt),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Pa=e.object({AND:e.union([e.lazy(()=>Pa),e.lazy(()=>Pa).array()]).optional(),OR:e.lazy(()=>Pa).array().optional(),NOT:e.union([e.lazy(()=>Pa),e.lazy(()=>Pa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict(),Rm=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),recipe:e.lazy(()=>$a).optional()}).strict(),Ut=e.object({id:e.number().int()}).and(e.object({id:e.number().int().optional(),AND:e.union([e.lazy(()=>Pa),e.lazy(()=>Pa).array()]).optional(),OR:e.lazy(()=>Pa).array().optional(),NOT:e.union([e.lazy(()=>Pa),e.lazy(()=>Pa).array()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number().int()]).optional(),quantity:e.union([e.lazy(()=>z),e.number().int()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipe:e.union([e.lazy(()=>Qa),e.lazy(()=>ie)]).optional()}).strict()),gE=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),_count:e.lazy(()=>L7).optional(),_avg:e.lazy(()=>Z7).optional(),_max:e.lazy(()=>$7).optional(),_min:e.lazy(()=>Q7).optional(),_sum:e.lazy(()=>G7).optional()}).strict(),KI=e.object({AND:e.union([e.lazy(()=>KI),e.lazy(()=>KI).array()]).optional(),OR:e.lazy(()=>KI).array().optional(),NOT:e.union([e.lazy(()=>KI),e.lazy(()=>KI).array()]).optional(),id:e.union([e.lazy(()=>k),e.number()]).optional(),recipeId:e.union([e.lazy(()=>k),e.number()]).optional(),quantity:e.union([e.lazy(()=>k),e.number()]).optional(),date:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>T),e.coerce.date()]).optional()}).strict(),Dx=e.object({posTransactionID:e.string().optional().nullable(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>DZ),menuItem:e.lazy(()=>xZ)}).strict(),xx=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),restaurantId:e.number().int(),menuItemId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Vx=e.object({posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>VZ).optional(),menuItem:e.lazy(()=>HZ).optional()}).strict(),Hx=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),av=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),restaurantId:e.number().int(),menuItemId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),RT=e.object({posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),B5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Lx=e.object({name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menu:e.lazy(()=>LZ),menuItems:e.lazy(()=>ZZ).optional()}).strict(),Zx=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),menuId:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>$Z).optional()}).strict(),$x=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menu:e.lazy(()=>QZ).optional(),menuItems:e.lazy(()=>GZ).optional()}).strict(),Qx=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>YZ).optional()}).strict(),nv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),menuId:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Gx=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),_5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Yx=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>bS),ingredients:e.lazy(()=>IS).optional(),instructions:e.lazy(()=>gS).optional(),createdBy:e.lazy(()=>SS),approvedBy:e.lazy(()=>vS).optional()}).strict(),Jx=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>AS).optional(),instructions:e.lazy(()=>CS).optional()}).strict(),Kx=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>WS).optional(),ingredients:e.lazy(()=>US).optional(),instructions:e.lazy(()=>kS).optional(),createdBy:e.lazy(()=>RS).optional(),approvedBy:e.lazy(()=>fS).optional()}).strict(),Xx=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>jS).optional(),instructions:e.lazy(()=>MS).optional()}).strict(),ov=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),WR=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),q5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),eV=e.object({name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>pP),recipes:e.lazy(()=>uP).optional(),maintenanceLogs:e.lazy(()=>sP).optional()}).strict(),tV=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>yP).optional(),maintenanceLogs:e.lazy(()=>dP).optional()}).strict(),aV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>mP).optional(),recipes:e.lazy(()=>zP).optional(),maintenanceLogs:e.lazy(()=>hP).optional()}).strict(),nV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>bP).optional(),maintenanceLogs:e.lazy(()=>IP).optional()}).strict(),iv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),oV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),F5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),iV=e.object({notes:e.string().optional().nullable(),recipe:e.lazy(()=>JZ),equipment:e.lazy(()=>KZ)}).strict(),rV=e.object({id:e.number().int().optional(),recipeId:e.number().int(),equipmentId:e.number().int(),notes:e.string().optional().nullable()}).strict(),lV=e.object({notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipe:e.lazy(()=>XZ).optional(),equipment:e.lazy(()=>e$).optional()}).strict(),cV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),rv=e.object({id:e.number().int().optional(),recipeId:e.number().int(),equipmentId:e.number().int(),notes:e.string().optional().nullable()}).strict(),fT=e.object({notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),E5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),pV=e.object({date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),equipment:e.lazy(()=>Y7)}).strict(),uV=e.object({id:e.number().int().optional(),equipmentId:e.number().int(),date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),sV=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),equipment:e.lazy(()=>J7).optional()}).strict(),yV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),lv=e.object({id:e.number().int().optional(),equipmentId:e.number().int(),date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),dV=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),D5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),mV=e.object({name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>gP),items:e.lazy(()=>SP).optional(),completions:e.lazy(()=>vP).optional()}).strict(),zV=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),restaurantId:e.number().int(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>AP).optional(),completions:e.lazy(()=>CP).optional()}).strict(),hV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>WP).optional(),items:e.lazy(()=>UP).optional(),completions:e.lazy(()=>kP).optional()}).strict(),bV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>RP).optional(),completions:e.lazy(()=>fP).optional()}).strict(),cv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),restaurantId:e.number().int(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),IV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),x5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),gV=e.object({description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklist:e.lazy(()=>t$),completions:e.lazy(()=>a$).optional()}).strict(),SV=e.object({id:e.number().int().optional(),checklistId:e.number().int(),description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),completions:e.lazy(()=>n$).optional()}).strict(),vV=e.object({description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklist:e.lazy(()=>o$).optional(),completions:e.lazy(()=>i$).optional()}).strict(),AV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),completions:e.lazy(()=>r$).optional()}).strict(),pv=e.object({id:e.number().int().optional(),checklistId:e.number().int(),description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),CV=e.object({description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),V5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),WV=e.object({date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklist:e.lazy(()=>jP),completedBy:e.lazy(()=>MP),items:e.lazy(()=>OP).optional()}).strict(),UV=e.object({id:e.number().int().optional(),checklistId:e.number().int(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>wP).optional()}).strict(),kV=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklist:e.lazy(()=>TP).optional(),completedBy:e.lazy(()=>PP).optional(),items:e.lazy(()=>NP).optional()}).strict(),RV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),completedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>BP).optional()}).strict(),uv=e.object({id:e.number().int().optional(),checklistId:e.number().int(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),jT=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),H5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),completedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),fV=e.object({status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklistComplete:e.lazy(()=>l$),checklistItem:e.lazy(()=>c$)}).strict(),jV=e.object({id:e.number().int().optional(),checklistCompleteId:e.number().int(),checklistItemId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),MV=e.object({status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklistComplete:e.lazy(()=>p$).optional(),checklistItem:e.lazy(()=>u$).optional()}).strict(),OV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistCompleteId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),sv=e.object({id:e.number().int().optional(),checklistCompleteId:e.number().int(),checklistItemId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),MT=e.object({status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),L5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistCompleteId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),wV=e.object({price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),vendor:e.lazy(()=>s$),ingredient:e.lazy(()=>y$)}).strict(),TV=e.object({id:e.number().int().optional(),vendorId:e.number().int(),ingredientId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),PV=e.object({price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),vendor:e.lazy(()=>d$).optional(),ingredient:e.lazy(()=>m$).optional()}).strict(),NV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),yv=e.object({id:e.number().int().optional(),vendorId:e.number().int(),ingredientId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),OT=e.object({price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Z5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),BV=e.object({rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>_P),menuItem:e.lazy(()=>qP).optional(),respondedBy:e.lazy(()=>FP).optional()}).strict(),_V=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),qV=e.object({rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>EP).optional(),menuItem:e.lazy(()=>DP).optional(),respondedBy:e.lazy(()=>xP).optional()}).strict(),FV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),dv=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),UR=e.object({rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),EV=e.object({name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>VP).optional(),recipes:e.lazy(()=>HP).optional(),ingredients:e.lazy(()=>LP).optional()}).strict(),DV=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>ZP).optional(),recipes:e.lazy(()=>$P).optional(),ingredients:e.lazy(()=>QP).optional()}).strict(),xV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>GP).optional(),recipes:e.lazy(()=>YP).optional(),ingredients:e.lazy(()=>JP).optional()}).strict(),VV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>KP).optional(),recipes:e.lazy(()=>XP).optional(),ingredients:e.lazy(()=>eN).optional()}).strict(),mv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),wT=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Q5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),HV=e.object({name:e.string(),description:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>K7).optional()}).strict(),LV=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>X7).optional()}).strict(),ZV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>eK).optional()}).strict(),$V=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>tK).optional()}).strict(),zv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),QV=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),G5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),GV=e.object({date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>tN),menuItem:e.lazy(()=>aN),recordedBy:e.lazy(()=>nN)}).strict(),YV=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),JV=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>oN).optional(),menuItem:e.lazy(()=>iN).optional(),recordedBy:e.lazy(()=>rN).optional()}).strict(),KV=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),hv=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),kR=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Y5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),XV=e.object({date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>lN),ingrediente:e.lazy(()=>cN),recordedBy:e.lazy(()=>pN)}).strict(),e0=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),t0=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>uN).optional(),ingrediente:e.lazy(()=>sN).optional(),recordedBy:e.lazy(()=>yN).optional()}).strict(),a0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),bv=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),RR=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),J5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),n0=e.object({date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>dN),createdBy:e.lazy(()=>mN),items:e.lazy(()=>zN).optional()}).strict(),o0=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>hN).optional()}).strict(),i0=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>bN).optional(),createdBy:e.lazy(()=>IN).optional(),items:e.lazy(()=>gN).optional()}).strict(),r0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>SN).optional()}).strict(),Iv=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),TT=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),K5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),l0=e.object({quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),productionPlan:e.lazy(()=>vN),recipe:e.lazy(()=>AN),assignedTo:e.lazy(()=>CN).optional()}).strict(),c0=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),p0=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),productionPlan:e.lazy(()=>WN).optional(),recipe:e.lazy(()=>UN).optional(),assignedTo:e.lazy(()=>kN).optional()}).strict(),u0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),gv=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),fR=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),X5=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),s0=e.object({taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shift:e.lazy(()=>aK)}).strict(),y0=e.object({id:e.number().int().optional(),shiftId:e.number().int(),taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),d0=e.object({taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shift:e.lazy(()=>nK).optional()}).strict(),m0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),shiftId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Sv=e.object({id:e.number().int().optional(),shiftId:e.number().int(),taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),z0=e.object({taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),e6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),shiftId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),h0=e.object({dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),user:e.lazy(()=>oK)}).strict(),b0=e.object({id:e.number().int().optional(),userId:e.number().int(),dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),I0=e.object({dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),user:e.lazy(()=>iK).optional()}).strict(),g0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),vv=e.object({id:e.number().int().optional(),userId:e.number().int(),dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),S0=e.object({dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),t6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),v0=e.object({date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),user:e.lazy(()=>rK)}).strict(),A0=e.object({id:e.number().int().optional(),userId:e.number().int(),date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),C0=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),user:e.lazy(()=>lK).optional()}).strict(),W0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Av=e.object({id:e.number().int().optional(),userId:e.number().int(),date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),U0=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),a6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),k0=e.object({dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),inventoryItem:e.lazy(()=>RN),recipe:e.lazy(()=>fN).optional(),createdBy:e.lazy(()=>jN)}).strict(),R0=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),f0=e.object({dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventoryItem:e.lazy(()=>MN).optional(),recipe:e.lazy(()=>ON).optional(),createdBy:e.lazy(()=>wN).optional()}).strict(),j0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Cv=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),jR=e.object({dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),n6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),M0=e.object({name:e.string(),description:e.string().optional().nullable(),ingredients:e.lazy(()=>cK).optional()}).strict(),O0=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),ingredients:e.lazy(()=>pK).optional()}).strict(),w0=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),ingredients:e.lazy(()=>uK).optional()}).strict(),T0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),ingredients:e.lazy(()=>sK).optional()}).strict(),Wv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable()}).strict(),o6=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),i6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),P0=e.object({ingredient:e.lazy(()=>z$),allergen:e.lazy(()=>h$)}).strict(),N0=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),allergenId:e.number().int()}).strict(),B0=e.object({ingredient:e.lazy(()=>b$).optional(),allergen:e.lazy(()=>I$).optional()}).strict(),_0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),allergenId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),Uv=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),allergenId:e.number().int()}).strict(),PT=e.object({}).strict(),r6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),allergenId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),q0=e.object({recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItem:e.lazy(()=>yK)}).strict(),F0=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),E0=e.object({recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>dK).optional()}).strict(),D0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),kv=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),x0=e.object({recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),l6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),V0=e.object({email:e.string(),isEmailSent:e.boolean(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),H0=e.object({id:e.number().int().optional(),email:e.string(),isEmailSent:e.boolean(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),L0=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),isEmailSent:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Z0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),isEmailSent:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Rv=e.object({id:e.number().int().optional(),email:e.string(),isEmailSent:e.boolean(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),c6=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),isEmailSent:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),p6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),isEmailSent:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$0=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurants:e.lazy(()=>g$).optional(),users:e.lazy(()=>S$).optional()}).strict(),Q0=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurants:e.lazy(()=>v$).optional(),users:e.lazy(()=>A$).optional()}).strict(),G0=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurants:e.lazy(()=>C$).optional(),users:e.lazy(()=>W$).optional()}).strict(),Y0=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurants:e.lazy(()=>U$).optional(),users:e.lazy(()=>k$).optional()}).strict(),fv=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),u6=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),s6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),J0=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),K0=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),X0=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),eH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),jv=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable()}).strict(),tH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable()}).strict(),y6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable()}).strict(),aH=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),nH=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),oH=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),iH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Mv=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),NT=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),d6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),rH=e.object({id:e.string().optional(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),user:e.lazy(()=>mK)}).strict(),lH=e.object({id:e.string().optional(),userId:e.number().int(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional()}).strict(),cH=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),user:e.lazy(()=>zK).optional()}).strict(),pH=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Ov=e.object({id:e.string().optional(),userId:e.number().int(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional()}).strict(),uH=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),m6=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),sH=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),recipes:e.lazy(()=>R$).optional(),restaurant:e.lazy(()=>f$).optional()}).strict(),yH=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),restaurantId:e.number().int().optional().nullable(),recipes:e.lazy(()=>j$).optional()}).strict(),dH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),recipes:e.lazy(()=>M$).optional(),restaurant:e.lazy(()=>O$).optional()}).strict(),mH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipes:e.lazy(()=>w$).optional()}).strict(),wv=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),restaurantId:e.number().int().optional().nullable()}).strict(),zH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional()}).strict(),z6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),hH=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),bH=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),IH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),gH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Tv=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Kb=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),h6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),SH=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),vH=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),AH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),CH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),Pv=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable()}).strict(),BT=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),b6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),WH=e.object({quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipe:e.lazy(()=>TN),ingredient:e.lazy(()=>PN),RecipeVersion:e.lazy(()=>NN).optional()}).strict(),UH=e.object({id:e.number().int().optional(),recipeId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),kH=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>BN).optional(),ingredient:e.lazy(()=>_N).optional(),RecipeVersion:e.lazy(()=>qN).optional()}).strict(),RH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),Nv=e.object({id:e.number().int().optional(),recipeId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),MR=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),I6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),fH=e.object({stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipe:e.lazy(()=>T$),RecipeVersion:e.lazy(()=>P$).optional()}).strict(),jH=e.object({id:e.number().int().optional(),recipeId:e.number().int(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipeVersionId:e.number().int().optional().nullable()}).strict(),MH=e.object({stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipe:e.lazy(()=>N$).optional(),RecipeVersion:e.lazy(()=>B$).optional()}).strict(),OH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),Bv=e.object({id:e.number().int().optional(),recipeId:e.number().int(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipeVersionId:e.number().int().optional().nullable()}).strict(),_T=e.object({stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),g6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),wH=e.object({restaurant:e.lazy(()=>_$),items:e.lazy(()=>q$).optional()}).strict(),TH=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),items:e.lazy(()=>F$).optional()}).strict(),PH=e.object({restaurant:e.lazy(()=>E$).optional(),items:e.lazy(()=>D$).optional()}).strict(),NH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),items:e.lazy(()=>x$).optional()}).strict(),_v=e.object({id:e.number().int().optional(),restaurantId:e.number().int()}).strict(),S6=e.object({}).strict(),v6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),BH=e.object({quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),inventory:e.lazy(()=>nf),ingredient:e.lazy(()=>of),lastUpdatedBy:e.lazy(()=>rf).optional(),InventoryWithdrawal:e.lazy(()=>lf).optional()}).strict(),_H=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional(),InventoryWithdrawal:e.lazy(()=>cf).optional()}).strict(),qH=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventory:e.lazy(()=>pf).optional(),ingredient:e.lazy(()=>uf).optional(),lastUpdatedBy:e.lazy(()=>sf).optional(),InventoryWithdrawal:e.lazy(()=>yf).optional()}).strict(),FH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),InventoryWithdrawal:e.lazy(()=>df).optional()}).strict(),qv=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional()}).strict(),OR=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),A6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),EH=e.object({status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>FN),vendor:e.lazy(()=>EN),items:e.lazy(()=>DN).optional()}).strict(),DH=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),vendorId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>xN).optional()}).strict(),xH=e.object({status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>VN).optional(),vendor:e.lazy(()=>HN).optional(),items:e.lazy(()=>LN).optional()}).strict(),VH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>ZN).optional()}).strict(),Fv=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),vendorId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),qT=e.object({status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),C6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),HH=e.object({quantity:e.number(),unit:e.string(),price:e.number(),order:e.lazy(()=>V$),ingredient:e.lazy(()=>H$)}).strict(),LH=e.object({id:e.number().int().optional(),orderId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),ZH=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),order:e.lazy(()=>L$).optional(),ingredient:e.lazy(()=>Z$).optional()}).strict(),$H=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),orderId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),Ev=e.object({id:e.number().int().optional(),orderId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),FT=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),W6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),orderId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),QH=e.object({name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>$N).optional(),ingredients:e.lazy(()=>QN).optional(),supplierPriceHistory:e.lazy(()=>GN).optional()}).strict(),GH=e.object({id:e.number().int().optional(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>YN).optional(),ingredients:e.lazy(()=>JN).optional(),supplierPriceHistory:e.lazy(()=>KN).optional()}).strict(),YH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>XN).optional(),ingredients:e.lazy(()=>eB).optional(),supplierPriceHistory:e.lazy(()=>tB).optional()}).strict(),JH=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>aB).optional(),ingredients:e.lazy(()=>nB).optional(),supplierPriceHistory:e.lazy(()=>oB).optional()}).strict(),Dv=e.object({id:e.number().int().optional(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),KH=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),U6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),XH=e.object({startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze),user:e.lazy(()=>$$),ShiftTask:e.lazy(()=>Q$).optional()}).strict(),eL=e.object({id:e.number().int().optional(),userId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze),ShiftTask:e.lazy(()=>G$).optional()}).strict(),tL=e.object({startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional(),user:e.lazy(()=>Y$).optional(),ShiftTask:e.lazy(()=>J$).optional()}).strict(),aL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional(),ShiftTask:e.lazy(()=>K$).optional()}).strict(),xv=e.object({id:e.number().int().optional(),userId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze)}).strict(),nL=e.object({startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional()}).strict(),k6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional()}).strict(),oL=e.object({name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>X$).optional(),prepItems:e.lazy(()=>e1).optional()}).strict(),iL=e.object({id:e.number().int().optional(),name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>t1).optional(),prepItems:e.lazy(()=>a1).optional()}).strict(),rL=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>n1).optional(),prepItems:e.lazy(()=>o1).optional()}).strict(),lL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>i1).optional(),prepItems:e.lazy(()=>r1).optional()}).strict(),Vv=e.object({id:e.number().int().optional(),name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),cL=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),R6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),pL=e.object({quantity:e.number().int(),status:e.lazy(()=>oe),prepBoard:e.lazy(()=>iB),recipe:e.lazy(()=>rB),assignedTo:e.lazy(()=>lB)}).strict(),uL=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),sL=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),prepBoard:e.lazy(()=>cB).optional(),recipe:e.lazy(()=>pB).optional(),assignedTo:e.lazy(()=>uB).optional()}).strict(),yL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),Hv=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),wR=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional()}).strict(),f6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),dL=e.object({token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),user:e.lazy(()=>hK)}).strict(),mL=e.object({id:e.number().int().optional(),token:e.string(),userId:e.number().int(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),zL=e.object({token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),user:e.lazy(()=>bK).optional()}).strict(),hL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Lv=e.object({id:e.number().int().optional(),token:e.string(),userId:e.number().int(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),bL=e.object({token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),j6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),IL=e.object({name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>sB),menuItems:e.lazy(()=>yB).optional(),MenuCategory:e.lazy(()=>dB).optional()}).strict(),gL=e.object({id:e.number().int().optional(),name:e.string(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>mB).optional(),MenuCategory:e.lazy(()=>zB).optional()}).strict(),SL=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>hB).optional(),menuItems:e.lazy(()=>bB).optional(),MenuCategory:e.lazy(()=>IB).optional()}).strict(),vL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>gB).optional(),MenuCategory:e.lazy(()=>SB).optional()}).strict(),Zv=e.object({id:e.number().int().optional(),name:e.string(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),AL=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),M6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),CL=e.object({joinAt:e.coerce.date().optional(),menuItem:e.lazy(()=>l1),recipe:e.lazy(()=>c1)}).strict(),WL=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),recipeId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),UL=e.object({joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>p1).optional(),recipe:e.lazy(()=>u1).optional()}).strict(),kL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$v=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),recipeId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),ET=e.object({joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),O6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),RL=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),fL=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),jL=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),ML=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),Qv=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable()}).strict(),hS=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),w6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),OL=e.object({calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItem:e.lazy(()=>IK).optional()}).strict(),wL=e.object({id:e.number().int().optional(),menuItemId:e.number().int().optional().nullable(),calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),TL=e.object({calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>gK).optional()}).strict(),PL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Gv=e.object({id:e.number().int().optional(),menuItemId:e.number().int().optional().nullable(),calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),T6=e.object({calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),P6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),NL=e.object({cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>SK)}).strict(),BL=e.object({id:e.number().int().optional(),recipeId:e.number().int(),cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_L=e.object({cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>vK).optional()}).strict(),qL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Yv=e.object({id:e.number().int().optional(),recipeId:e.number().int(),cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),FL=e.object({cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),N6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),EL=e.object({quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>AK)}).strict(),DL=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),xL=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>CK).optional()}).strict(),VL=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Jv=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),HL=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),B6=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),z=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Pe)]).optional()}).strict(),F=e.object({equals:e.string().optional().nullable(),in:e.string().array().optional().nullable(),notIn:e.string().array().optional().nullable(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),mode:e.lazy(()=>hR).optional(),not:e.union([e.string(),e.lazy(()=>og)]).optional().nullable()}).strict(),re=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Gr)]).optional()}).strict(),h=e.object({equals:e.coerce.date().optional(),in:e.coerce.date().array().optional(),notIn:e.coerce.date().array().optional(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>ig)]).optional()}).strict(),ia=e.object({is:e.lazy(()=>x).optional(),isNot:e.lazy(()=>x).optional()}).strict(),uh=e.object({is:e.lazy(()=>Ae).optional(),isNot:e.lazy(()=>Ae).optional()}).strict(),f=e.object({sort:e.lazy(()=>t),nulls:e.lazy(()=>s5).optional()}).strict(),_6=e.object({id:e.lazy(()=>t).optional(),posTransactionID:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional(),transactionDate:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),q6=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional()}).strict(),F6=e.object({id:e.lazy(()=>t).optional(),posTransactionID:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional(),transactionDate:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),E6=e.object({id:e.lazy(()=>t).optional(),posTransactionID:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional(),transactionDate:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),D6=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),total:e.lazy(()=>t).optional()}).strict(),k=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>s1)]).optional(),_count:e.lazy(()=>Pe).optional(),_avg:e.lazy(()=>Gr).optional(),_sum:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Pe).optional(),_max:e.lazy(()=>Pe).optional()}).strict(),wt=e.object({equals:e.string().optional().nullable(),in:e.string().array().optional().nullable(),notIn:e.string().array().optional().nullable(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),mode:e.lazy(()=>hR).optional(),not:e.union([e.string(),e.lazy(()=>y1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_min:e.lazy(()=>og).optional(),_max:e.lazy(()=>og).optional()}).strict(),Gt=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>d1)]).optional(),_count:e.lazy(()=>Pe).optional(),_avg:e.lazy(()=>Gr).optional(),_sum:e.lazy(()=>Gr).optional(),_min:e.lazy(()=>Gr).optional(),_max:e.lazy(()=>Gr).optional()}).strict(),T=e.object({equals:e.coerce.date().optional(),in:e.coerce.date().array().optional(),notIn:e.coerce.date().array().optional(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>m1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>ig).optional(),_max:e.lazy(()=>ig).optional()}).strict(),U=e.object({equals:e.string().optional(),in:e.string().array().optional(),notIn:e.string().array().optional(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),mode:e.lazy(()=>hR).optional(),not:e.union([e.string(),e.lazy(()=>rg)]).optional()}).strict(),oa=e.object({equals:e.boolean().optional(),not:e.union([e.boolean(),e.lazy(()=>lg)]).optional()}).strict(),TR=e.object({is:e.lazy(()=>Ot).optional(),isNot:e.lazy(()=>Ot).optional()}).strict(),sh=e.object({every:e.lazy(()=>Ae).optional(),some:e.lazy(()=>Ae).optional(),none:e.lazy(()=>Ae).optional()}).strict(),PR=e.object({_count:e.lazy(()=>t).optional()}).strict(),Zw=e.object({menuId:e.number(),name:e.string()}).strict(),x6=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),V6=e.object({id:e.lazy(()=>t).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional()}).strict(),H6=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),L6=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Z6=e.object({id:e.lazy(()=>t).optional(),displayOrder:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional()}).strict(),We=e.object({equals:e.string().optional(),in:e.string().array().optional(),notIn:e.string().array().optional(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),mode:e.lazy(()=>hR).optional(),not:e.union([e.string(),e.lazy(()=>z1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>rg).optional(),_max:e.lazy(()=>rg).optional()}).strict(),yh=e.object({equals:e.boolean().optional(),not:e.union([e.boolean(),e.lazy(()=>h1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>lg).optional(),_max:e.lazy(()=>lg).optional()}).strict(),Ce=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>mo)]).optional().nullable()}).strict(),la=e.object({equals:e.coerce.date().optional().nullable(),in:e.coerce.date().array().optional().nullable(),notIn:e.coerce.date().array().optional().nullable(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>cg)]).optional().nullable()}).strict(),Qa=e.object({is:e.lazy(()=>ie).optional(),isNot:e.lazy(()=>ie).optional()}).strict(),fg=e.object({every:e.lazy(()=>Ra).optional(),some:e.lazy(()=>Ra).optional(),none:e.lazy(()=>Ra).optional()}).strict(),NR=e.object({every:e.lazy(()=>fa).optional(),some:e.lazy(()=>fa).optional(),none:e.lazy(()=>fa).optional()}).strict(),aa=e.object({is:e.lazy(()=>P).optional(),isNot:e.lazy(()=>P).optional()}).strict(),dh=e.object({is:e.lazy(()=>P).optional().nullable(),isNot:e.lazy(()=>P).optional().nullable()}).strict(),DT=e.object({_count:e.lazy(()=>t).optional()}).strict(),LL=e.object({_count:e.lazy(()=>t).optional()}).strict(),$w=e.object({recipeId:e.number(),versionNumber:e.number()}).strict(),$6=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),changes:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.lazy(()=>t).optional(),approvedAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Q6=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.lazy(()=>t).optional()}).strict(),G6=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),changes:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.lazy(()=>t).optional(),approvedAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Y6=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),changes:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.lazy(()=>t).optional(),approvedAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),J6=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),versionNumber:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),approvedById:e.lazy(()=>t).optional()}).strict(),Za=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>b1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_avg:e.lazy(()=>Yr).optional(),_sum:e.lazy(()=>mo).optional(),_min:e.lazy(()=>mo).optional(),_max:e.lazy(()=>mo).optional()}).strict(),Gh=e.object({equals:e.coerce.date().optional().nullable(),in:e.coerce.date().array().optional().nullable(),notIn:e.coerce.date().array().optional().nullable(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>I1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_min:e.lazy(()=>cg).optional(),_max:e.lazy(()=>cg).optional()}).strict(),xT=e.object({equals:e.lazy(()=>_e).optional(),in:e.lazy(()=>_e).array().optional(),notIn:e.lazy(()=>_e).array().optional(),not:e.union([e.lazy(()=>_e),e.lazy(()=>pg)]).optional()}).strict(),BR=e.object({every:e.lazy(()=>sa).optional(),some:e.lazy(()=>sa).optional(),none:e.lazy(()=>sa).optional()}).strict(),ZL=e.object({every:e.lazy(()=>ya).optional(),some:e.lazy(()=>ya).optional(),none:e.lazy(()=>ya).optional()}).strict(),$L=e.object({_count:e.lazy(()=>t).optional()}).strict(),K6=e.object({_count:e.lazy(()=>t).optional()}).strict(),X6=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),model:e.lazy(()=>t).optional(),serialNumber:e.lazy(()=>t).optional(),purchaseDate:e.lazy(()=>t).optional(),lastMaintenance:e.lazy(()=>t).optional(),nextMaintenance:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),location:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),e3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),t3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),model:e.lazy(()=>t).optional(),serialNumber:e.lazy(()=>t).optional(),purchaseDate:e.lazy(()=>t).optional(),lastMaintenance:e.lazy(()=>t).optional(),nextMaintenance:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),location:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),a3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),model:e.lazy(()=>t).optional(),serialNumber:e.lazy(()=>t).optional(),purchaseDate:e.lazy(()=>t).optional(),lastMaintenance:e.lazy(()=>t).optional(),nextMaintenance:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),location:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),n3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),o3=e.object({equals:e.lazy(()=>_e).optional(),in:e.lazy(()=>_e).array().optional(),notIn:e.lazy(()=>_e).array().optional(),not:e.union([e.lazy(()=>_e),e.lazy(()=>g1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>pg).optional(),_max:e.lazy(()=>pg).optional()}).strict(),_R=e.object({is:e.lazy(()=>ft).optional(),isNot:e.lazy(()=>ft).optional()}).strict(),Qw=e.object({recipeId:e.number(),equipmentId:e.number()}).strict(),i3=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional()}).strict(),r3=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional()}).strict(),l3=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional()}).strict(),c3=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional()}).strict(),p3=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional()}).strict(),VT=e.object({equals:e.lazy(()=>lt).optional(),in:e.lazy(()=>lt).array().optional(),notIn:e.lazy(()=>lt).array().optional(),not:e.union([e.lazy(()=>lt),e.lazy(()=>ug)]).optional()}).strict(),Qd=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Yr)]).optional().nullable()}).strict(),u3=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),performedBy:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),s3=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional()}).strict(),y3=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),performedBy:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),d3=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),performedBy:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),m3=e.object({id:e.lazy(()=>t).optional(),equipmentId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional()}).strict(),z3=e.object({equals:e.lazy(()=>lt).optional(),in:e.lazy(()=>lt).array().optional(),notIn:e.lazy(()=>lt).array().optional(),not:e.union([e.lazy(()=>lt),e.lazy(()=>S1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>ug).optional(),_max:e.lazy(()=>ug).optional()}).strict(),HT=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>v1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_avg:e.lazy(()=>Yr).optional(),_sum:e.lazy(()=>Yr).optional(),_min:e.lazy(()=>Yr).optional(),_max:e.lazy(()=>Yr).optional()}).strict(),LT=e.object({equals:e.lazy(()=>qe).optional(),in:e.lazy(()=>qe).array().optional(),notIn:e.lazy(()=>qe).array().optional(),not:e.union([e.lazy(()=>qe),e.lazy(()=>sg)]).optional()}).strict(),QL=e.object({every:e.lazy(()=>Et).optional(),some:e.lazy(()=>Et).optional(),none:e.lazy(()=>Et).optional()}).strict(),qR=e.object({every:e.lazy(()=>Dt).optional(),some:e.lazy(()=>Dt).optional(),none:e.lazy(()=>Dt).optional()}).strict(),h3=e.object({_count:e.lazy(()=>t).optional()}).strict(),GL=e.object({_count:e.lazy(()=>t).optional()}).strict(),b3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),I3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),g3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),S3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),isActive:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),v3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),A3=e.object({equals:e.lazy(()=>qe).optional(),in:e.lazy(()=>qe).array().optional(),notIn:e.lazy(()=>qe).array().optional(),not:e.union([e.lazy(()=>qe),e.lazy(()=>A1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>sg).optional(),_max:e.lazy(()=>sg).optional()}).strict(),ZT=e.object({equals:e.lazy(()=>Le).optional(),in:e.lazy(()=>Le).array().optional(),notIn:e.lazy(()=>Le).array().optional(),not:e.union([e.lazy(()=>Le),e.lazy(()=>yg)]).optional()}).strict(),FR=e.object({is:e.lazy(()=>jt).optional(),isNot:e.lazy(()=>jt).optional()}).strict(),ER=e.object({every:e.lazy(()=>da).optional(),some:e.lazy(()=>da).optional(),none:e.lazy(()=>da).optional()}).strict(),YL=e.object({_count:e.lazy(()=>t).optional()}).strict(),C3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),requiredPhotos:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),W3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional()}).strict(),U3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),requiredPhotos:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),k3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional(),type:e.lazy(()=>t).optional(),requiredPhotos:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),R3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),order:e.lazy(()=>t).optional()}).strict(),f3=e.object({equals:e.lazy(()=>Le).optional(),in:e.lazy(()=>Le).array().optional(),notIn:e.lazy(()=>Le).array().optional(),not:e.union([e.lazy(()=>Le),e.lazy(()=>C1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>yg).optional(),_max:e.lazy(()=>yg).optional()}).strict(),j3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),M3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional()}).strict(),O3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),w3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),T3=e.object({id:e.lazy(()=>t).optional(),checklistId:e.lazy(()=>t).optional(),completedById:e.lazy(()=>t).optional()}).strict(),$T=e.object({equals:e.lazy(()=>xe).optional(),in:e.lazy(()=>xe).array().optional(),notIn:e.lazy(()=>xe).array().optional(),not:e.union([e.lazy(()=>xe),e.lazy(()=>dg)]).optional()}).strict(),zo=e.object({equals:e.string().array().optional().nullable(),has:e.string().optional().nullable(),hasEvery:e.string().array().optional(),hasSome:e.string().array().optional(),isEmpty:e.boolean().optional()}).strict(),JL=e.object({is:e.lazy(()=>Dt).optional(),isNot:e.lazy(()=>Dt).optional()}).strict(),KL=e.object({is:e.lazy(()=>Et).optional(),isNot:e.lazy(()=>Et).optional()}).strict(),P3=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),photoUrls:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),N3=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional()}).strict(),B3=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),_3=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),q3=e.object({id:e.lazy(()=>t).optional(),checklistCompleteId:e.lazy(()=>t).optional(),checklistItemId:e.lazy(()=>t).optional()}).strict(),F3=e.object({equals:e.lazy(()=>xe).optional(),in:e.lazy(()=>xe).array().optional(),notIn:e.lazy(()=>xe).array().optional(),not:e.union([e.lazy(()=>xe),e.lazy(()=>W1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>dg).optional(),_max:e.lazy(()=>dg).optional()}).strict(),DR=e.object({is:e.lazy(()=>Mt).optional(),isNot:e.lazy(()=>Mt).optional()}).strict(),el=e.object({is:e.lazy(()=>Te).optional(),isNot:e.lazy(()=>Te).optional()}).strict(),E3=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),startDate:e.lazy(()=>t).optional(),endDate:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),D3=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),x3=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),startDate:e.lazy(()=>t).optional(),endDate:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),V3=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),startDate:e.lazy(()=>t).optional(),endDate:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),H3=e.object({id:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),QT=e.object({equals:e.lazy(()=>Oe).optional(),in:e.lazy(()=>Oe).array().optional(),notIn:e.lazy(()=>Oe).array().optional(),not:e.union([e.lazy(()=>Oe),e.lazy(()=>mg)]).optional()}).strict(),GT=e.object({equals:e.lazy(()=>we).optional(),in:e.lazy(()=>we).array().optional(),notIn:e.lazy(()=>we).array().optional(),not:e.union([e.lazy(()=>we),e.lazy(()=>zg)]).optional()}).strict(),xR=e.object({is:e.lazy(()=>Ae).optional().nullable(),isNot:e.lazy(()=>Ae).optional().nullable()}).strict(),L3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),rating:e.lazy(()=>t).optional(),comment:e.lazy(()=>t).optional(),source:e.lazy(()=>t).optional(),tags:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),responseText:e.lazy(()=>t).optional(),respondedAt:e.lazy(()=>t).optional(),respondedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Z3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),rating:e.lazy(()=>t).optional(),respondedById:e.lazy(()=>t).optional()}).strict(),$3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),rating:e.lazy(()=>t).optional(),comment:e.lazy(()=>t).optional(),source:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),responseText:e.lazy(()=>t).optional(),respondedAt:e.lazy(()=>t).optional(),respondedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Q3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),rating:e.lazy(()=>t).optional(),comment:e.lazy(()=>t).optional(),source:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),responseText:e.lazy(()=>t).optional(),respondedAt:e.lazy(()=>t).optional(),respondedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),G3=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),rating:e.lazy(()=>t).optional(),respondedById:e.lazy(()=>t).optional()}).strict(),Y3=e.object({equals:e.lazy(()=>Oe).optional(),in:e.lazy(()=>Oe).array().optional(),notIn:e.lazy(()=>Oe).array().optional(),not:e.union([e.lazy(()=>Oe),e.lazy(()=>U1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>mg).optional(),_max:e.lazy(()=>mg).optional()}).strict(),J3=e.object({equals:e.lazy(()=>we).optional(),in:e.lazy(()=>we).array().optional(),notIn:e.lazy(()=>we).array().optional(),not:e.union([e.lazy(()=>we),e.lazy(()=>k1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>zg).optional(),_max:e.lazy(()=>zg).optional()}).strict(),tl=e.object({every:e.lazy(()=>ie).optional(),some:e.lazy(()=>ie).optional(),none:e.lazy(()=>ie).optional()}).strict(),VR=e.object({every:e.lazy(()=>Te).optional(),some:e.lazy(()=>Te).optional(),none:e.lazy(()=>Te).optional()}).strict(),jg=e.object({_count:e.lazy(()=>t).optional()}).strict(),XL=e.object({_count:e.lazy(()=>t).optional()}).strict(),K3=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),icon:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),X3=e.object({id:e.lazy(()=>t).optional()}).strict(),eY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),icon:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),tY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),icon:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),aY=e.object({id:e.lazy(()=>t).optional()}).strict(),nY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),oY=e.object({id:e.lazy(()=>t).optional()}).strict(),iY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),rY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),lY=e.object({id:e.lazy(()=>t).optional()}).strict(),cY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),pY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional()}).strict(),uY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),sY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),yY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional()}).strict(),dY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),mY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional()}).strict(),zY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),hY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),reason:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),bY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recordedById:e.lazy(()=>t).optional()}).strict(),Mg=e.object({every:e.lazy(()=>ga).optional(),some:e.lazy(()=>ga).optional(),none:e.lazy(()=>ga).optional()}).strict(),YT=e.object({_count:e.lazy(()=>t).optional()}).strict(),IY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),gY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional()}).strict(),SY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),vY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),AY=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional()}).strict(),eZ=e.object({is:e.lazy(()=>xt).optional(),isNot:e.lazy(()=>xt).optional()}).strict(),CY=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),WY=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),UY=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),kY=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),RY=e.object({id:e.lazy(()=>t).optional(),productionPlanId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),JT=e.object({equals:e.lazy(()=>ct).optional(),in:e.lazy(()=>ct).array().optional(),notIn:e.lazy(()=>ct).array().optional(),not:e.union([e.lazy(()=>ct),e.lazy(()=>hg)]).optional()}).strict(),tZ=e.object({is:e.lazy(()=>Zt).optional(),isNot:e.lazy(()=>Zt).optional()}).strict(),fY=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),taskType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),jY=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional()}).strict(),MY=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),taskType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),OY=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),taskType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),wY=e.object({id:e.lazy(()=>t).optional(),shiftId:e.lazy(()=>t).optional(),duration:e.lazy(()=>t).optional()}).strict(),TY=e.object({equals:e.lazy(()=>ct).optional(),in:e.lazy(()=>ct).array().optional(),notIn:e.lazy(()=>ct).array().optional(),not:e.union([e.lazy(()=>ct),e.lazy(()=>R1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>hg).optional(),_max:e.lazy(()=>hg).optional()}).strict(),KT=e.object({equals:e.lazy(()=>pt).optional(),in:e.lazy(()=>pt).array().optional(),notIn:e.lazy(()=>pt).array().optional(),not:e.union([e.lazy(()=>pt),e.lazy(()=>bg)]).optional()}).strict(),PY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),dayOfWeek:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),NY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),BY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),dayOfWeek:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),_Y=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),dayOfWeek:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),qY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),FY=e.object({equals:e.lazy(()=>pt).optional(),in:e.lazy(()=>pt).array().optional(),notIn:e.lazy(()=>pt).array().optional(),not:e.union([e.lazy(()=>pt),e.lazy(()=>f1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>bg).optional(),_max:e.lazy(()=>bg).optional()}).strict(),XT=e.object({equals:e.lazy(()=>ut).optional(),in:e.lazy(()=>ut).array().optional(),notIn:e.lazy(()=>ut).array().optional(),not:e.union([e.lazy(()=>ut),e.lazy(()=>Ig)]).optional()}).strict(),EY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),constraintsType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),DY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),xY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),constraintsType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),VY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),constraintsType:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),notes:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),HY=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),LY=e.object({equals:e.lazy(()=>ut).optional(),in:e.lazy(()=>ut).array().optional(),notIn:e.lazy(()=>ut).array().optional(),not:e.union([e.lazy(()=>ut),e.lazy(()=>j1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Ig).optional(),_max:e.lazy(()=>Ig).optional()}).strict(),aZ=e.object({is:e.lazy(()=>Ht).optional(),isNot:e.lazy(()=>Ht).optional()}).strict(),nZ=e.object({is:e.lazy(()=>ie).optional().nullable(),isNot:e.lazy(()=>ie).optional().nullable()}).strict(),ZY=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),dateTime:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),$Y=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional()}).strict(),QY=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),dateTime:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),GY=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),dateTime:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),YY=e.object({id:e.lazy(()=>t).optional(),inventoryItemId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),createdById:e.lazy(()=>t).optional()}).strict(),HR=e.object({every:e.lazy(()=>Wa).optional(),some:e.lazy(()=>Wa).optional(),none:e.lazy(()=>Wa).optional()}).strict(),oZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),JY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional()}).strict(),KY=e.object({id:e.lazy(()=>t).optional()}).strict(),XY=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional()}).strict(),e8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional()}).strict(),t8=e.object({id:e.lazy(()=>t).optional()}).strict(),iZ=e.object({is:e.lazy(()=>na).optional(),isNot:e.lazy(()=>na).optional()}).strict(),a8=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional()}).strict(),n8=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional()}).strict(),o8=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional()}).strict(),i8=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional()}).strict(),r8=e.object({id:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),allergenId:e.lazy(()=>t).optional()}).strict(),l8=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recommendation:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),c8=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional()}).strict(),p8=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recommendation:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),u8=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recommendation:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),s8=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional()}).strict(),y8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),isEmailSent:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),d8=e.object({id:e.lazy(()=>t).optional()}).strict(),m8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),isEmailSent:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),z8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),isEmailSent:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),h8=e.object({id:e.lazy(()=>t).optional()}).strict(),rZ=e.object({every:e.lazy(()=>x).optional(),some:e.lazy(()=>x).optional(),none:e.lazy(()=>x).optional()}).strict(),LR=e.object({every:e.lazy(()=>P).optional(),some:e.lazy(()=>P).optional(),none:e.lazy(()=>P).optional()}).strict(),b8=e.object({_count:e.lazy(()=>t).optional()}).strict(),lZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),I8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),g8=e.object({id:e.lazy(()=>t).optional()}).strict(),S8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),v8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),A8=e.object({id:e.lazy(()=>t).optional()}).strict(),ZR=e.object({is:e.lazy(()=>Rt).optional().nullable(),isNot:e.lazy(()=>Rt).optional().nullable()}).strict(),cZ=e.object({every:e.lazy(()=>Vt).optional(),some:e.lazy(()=>Vt).optional(),none:e.lazy(()=>Vt).optional()}).strict(),pZ=e.object({is:e.lazy(()=>zt).optional().nullable(),isNot:e.lazy(()=>zt).optional().nullable()}).strict(),$R=e.object({every:e.lazy(()=>Lt).optional(),some:e.lazy(()=>Lt).optional(),none:e.lazy(()=>Lt).optional()}).strict(),uZ=e.object({every:e.lazy(()=>Ot).optional(),some:e.lazy(()=>Ot).optional(),none:e.lazy(()=>Ot).optional()}).strict(),QR=e.object({every:e.lazy(()=>ua).optional(),some:e.lazy(()=>ua).optional(),none:e.lazy(()=>ua).optional()}).strict(),Og=e.object({every:e.lazy(()=>ba).optional(),some:e.lazy(()=>ba).optional(),none:e.lazy(()=>ba).optional()}).strict(),wg=e.object({every:e.lazy(()=>Ia).optional(),some:e.lazy(()=>Ia).optional(),none:e.lazy(()=>Ia).optional()}).strict(),GR=e.object({every:e.lazy(()=>xt).optional(),some:e.lazy(()=>xt).optional(),none:e.lazy(()=>xt).optional()}).strict(),sZ=e.object({every:e.lazy(()=>ft).optional(),some:e.lazy(()=>ft).optional(),none:e.lazy(()=>ft).optional()}).strict(),yZ=e.object({every:e.lazy(()=>jt).optional(),some:e.lazy(()=>jt).optional(),none:e.lazy(()=>jt).optional()}).strict(),Tg=e.object({every:e.lazy(()=>za).optional(),some:e.lazy(()=>za).optional(),none:e.lazy(()=>za).optional()}).strict(),C8=e.object({_count:e.lazy(()=>t).optional()}).strict(),dZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),W8=e.object({_count:e.lazy(()=>t).optional()}).strict(),mZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),eP=e.object({_count:e.lazy(()=>t).optional()}).strict(),tP=e.object({_count:e.lazy(()=>t).optional()}).strict(),zZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),U8=e.object({_count:e.lazy(()=>t).optional()}).strict(),k8=e.object({_count:e.lazy(()=>t).optional()}).strict(),aP=e.object({_count:e.lazy(()=>t).optional()}).strict(),R8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),address:e.lazy(()=>t).optional(),city:e.lazy(()=>t).optional(),zipCode:e.lazy(()=>t).optional(),state:e.lazy(()=>t).optional(),owner:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),deleted:e.lazy(()=>t).optional()}).strict(),f8=e.object({id:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional()}).strict(),j8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),address:e.lazy(()=>t).optional(),city:e.lazy(()=>t).optional(),zipCode:e.lazy(()=>t).optional(),state:e.lazy(()=>t).optional(),owner:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),deleted:e.lazy(()=>t).optional()}).strict(),M8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),address:e.lazy(()=>t).optional(),city:e.lazy(()=>t).optional(),zipCode:e.lazy(()=>t).optional(),state:e.lazy(()=>t).optional(),owner:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),deleted:e.lazy(()=>t).optional()}).strict(),O8=e.object({id:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional()}).strict(),nP=e.object({equals:e.lazy(()=>M).optional(),in:e.lazy(()=>M).array().optional(),notIn:e.lazy(()=>M).array().optional(),not:e.union([e.lazy(()=>M),e.lazy(()=>gg)]).optional()}).strict(),YR=e.object({is:e.lazy(()=>x).optional().nullable(),isNot:e.lazy(()=>x).optional().nullable()}).strict(),hZ=e.object({every:e.lazy(()=>Zt).optional(),some:e.lazy(()=>Zt).optional(),none:e.lazy(()=>Zt).optional()}).strict(),Pg=e.object({every:e.lazy(()=>Ma).optional(),some:e.lazy(()=>Ma).optional(),none:e.lazy(()=>Ma).optional()}).strict(),Ng=e.object({every:e.lazy(()=>Ht).optional(),some:e.lazy(()=>Ht).optional(),none:e.lazy(()=>Ht).optional()}).strict(),bZ=e.object({every:e.lazy(()=>ka).optional(),some:e.lazy(()=>ka).optional(),none:e.lazy(()=>ka).optional()}).strict(),IZ=e.object({every:e.lazy(()=>Oa).optional(),some:e.lazy(()=>Oa).optional(),none:e.lazy(()=>Oa).optional()}).strict(),gZ=e.object({every:e.lazy(()=>va).optional(),some:e.lazy(()=>va).optional(),none:e.lazy(()=>va).optional()}).strict(),SZ=e.object({every:e.lazy(()=>Aa).optional(),some:e.lazy(()=>Aa).optional(),none:e.lazy(()=>Aa).optional()}).strict(),Bg=e.object({every:e.lazy(()=>Ca).optional(),some:e.lazy(()=>Ca).optional(),none:e.lazy(()=>Ca).optional()}).strict(),ng=e.object({every:e.lazy(()=>st).optional(),some:e.lazy(()=>st).optional(),none:e.lazy(()=>st).optional()}).strict(),w8=e.object({_count:e.lazy(()=>t).optional()}).strict(),oP=e.object({_count:e.lazy(()=>t).optional()}).strict(),iP=e.object({_count:e.lazy(()=>t).optional()}).strict(),T8=e.object({_count:e.lazy(()=>t).optional()}).strict(),P8=e.object({_count:e.lazy(()=>t).optional()}).strict(),N8=e.object({_count:e.lazy(()=>t).optional()}).strict(),B8=e.object({_count:e.lazy(()=>t).optional()}).strict(),rP=e.object({_count:e.lazy(()=>t).optional()}).strict(),uT=e.object({_count:e.lazy(()=>t).optional()}).strict(),_8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),sub:e.lazy(()=>t).optional(),passwordHash:e.lazy(()=>t).optional(),firstName:e.lazy(()=>t).optional(),lastName:e.lazy(()=>t).optional(),profileImage:e.lazy(()=>t).optional(),verified:e.lazy(()=>t).optional(),role:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),q8=e.object({id:e.lazy(()=>t).optional(),sub:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),F8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),sub:e.lazy(()=>t).optional(),passwordHash:e.lazy(()=>t).optional(),firstName:e.lazy(()=>t).optional(),lastName:e.lazy(()=>t).optional(),profileImage:e.lazy(()=>t).optional(),verified:e.lazy(()=>t).optional(),role:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),E8=e.object({id:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),sub:e.lazy(()=>t).optional(),passwordHash:e.lazy(()=>t).optional(),firstName:e.lazy(()=>t).optional(),lastName:e.lazy(()=>t).optional(),profileImage:e.lazy(()=>t).optional(),verified:e.lazy(()=>t).optional(),role:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),D8=e.object({id:e.lazy(()=>t).optional(),sub:e.lazy(()=>t).optional(),organizationId:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),x8=e.object({equals:e.lazy(()=>M).optional(),in:e.lazy(()=>M).array().optional(),notIn:e.lazy(()=>M).array().optional(),not:e.union([e.lazy(()=>M),e.lazy(()=>M1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>gg).optional(),_max:e.lazy(()=>gg).optional()}).strict(),V8=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),code:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional()}).strict(),H8=e.object({userId:e.lazy(()=>t).optional()}).strict(),L8=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),code:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional()}).strict(),Z8=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),code:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional()}).strict(),$8=e.object({userId:e.lazy(()=>t).optional()}).strict(),Q8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),G8=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),Y8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),J8=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),K8=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),vZ=e.object({is:e.lazy(()=>Vt).optional(),isNot:e.lazy(()=>Vt).optional()}).strict(),AZ=e.object({every:e.lazy(()=>Ta).optional(),some:e.lazy(()=>Ta).optional(),none:e.lazy(()=>Ta).optional()}).strict(),CZ=e.object({every:e.lazy(()=>Pa).optional(),some:e.lazy(()=>Pa).optional(),none:e.lazy(()=>Pa).optional()}).strict(),WZ=e.object({every:e.lazy(()=>$t).optional(),some:e.lazy(()=>$t).optional(),none:e.lazy(()=>$t).optional()}).strict(),JR=e.object({every:e.lazy(()=>wa).optional(),some:e.lazy(()=>wa).optional(),none:e.lazy(()=>wa).optional()}).strict(),UZ=e.object({every:e.lazy(()=>ha).optional(),some:e.lazy(()=>ha).optional(),none:e.lazy(()=>ha).optional()}).strict(),KR=e.object({every:e.lazy(()=>Pt).optional(),some:e.lazy(()=>Pt).optional(),none:e.lazy(()=>Pt).optional()}).strict(),X8=e.object({_count:e.lazy(()=>t).optional()}).strict(),eJ=e.object({_count:e.lazy(()=>t).optional()}).strict(),tJ=e.object({_count:e.lazy(()=>t).optional()}).strict(),kZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),aJ=e.object({_count:e.lazy(()=>t).optional()}).strict(),RZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),nJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),oJ=e.object({id:e.lazy(()=>t).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional()}).strict(),iJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),rJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),isDeleted:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),lJ=e.object({id:e.lazy(()=>t).optional(),servings:e.lazy(()=>t).optional(),cookTime:e.lazy(()=>t).optional(),prepTime:e.lazy(()=>t).optional(),frequency:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),cookBookId:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional()}).strict(),XR=e.object({every:e.lazy(()=>ja).optional(),some:e.lazy(()=>ja).optional(),none:e.lazy(()=>ja).optional()}).strict(),fZ=e.object({every:e.lazy(()=>Mt).optional(),some:e.lazy(()=>Mt).optional(),none:e.lazy(()=>Mt).optional()}).strict(),ef=e.object({every:e.lazy(()=>ma).optional(),some:e.lazy(()=>ma).optional(),none:e.lazy(()=>ma).optional()}).strict(),jZ=e.object({is:e.lazy(()=>Pt).optional().nullable(),isNot:e.lazy(()=>Pt).optional().nullable()}).strict(),MZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),cJ=e.object({_count:e.lazy(()=>t).optional()}).strict(),OZ=e.object({_count:e.lazy(()=>t).optional()}).strict(),pJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.lazy(()=>t).optional()}).strict(),uJ=e.object({id:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.lazy(()=>t).optional()}).strict(),sJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.lazy(()=>t).optional()}).strict(),yJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),category:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.lazy(()=>t).optional()}).strict(),dJ=e.object({id:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),dietaryRestrictionId:e.lazy(()=>t).optional()}).strict(),tf=e.object({is:e.lazy(()=>st).optional().nullable(),isNot:e.lazy(()=>st).optional().nullable()}).strict(),Gw=e.object({recipeId:e.number(),ingredientId:e.number()}).strict(),mJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),zJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),hJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),bJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),IJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),Yw=e.object({recipeId:e.number(),stepNumber:e.number()}).strict(),gJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),instruction:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),SJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),vJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),instruction:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),AJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),instruction:e.lazy(()=>t).optional(),imageUrl:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),CJ=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),stepNumber:e.lazy(()=>t).optional(),recipeVersionId:e.lazy(()=>t).optional()}).strict(),WJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),UJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),kJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),RJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),fJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),wZ=e.object({is:e.lazy(()=>zt).optional(),isNot:e.lazy(()=>zt).optional()}).strict(),jJ=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.lazy(()=>t).optional(),lastUpdated:e.lazy(()=>t).optional()}).strict(),MJ=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.lazy(()=>t).optional()}).strict(),OJ=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.lazy(()=>t).optional(),lastUpdated:e.lazy(()=>t).optional()}).strict(),wJ=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.lazy(()=>t).optional(),lastUpdated:e.lazy(()=>t).optional()}).strict(),TJ=e.object({id:e.lazy(()=>t).optional(),inventoryId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),minQuantity:e.lazy(()=>t).optional(),restockThreshold:e.lazy(()=>t).optional(),lastUpdatedById:e.lazy(()=>t).optional()}).strict(),lP=e.object({equals:e.lazy(()=>Be).optional(),in:e.lazy(()=>Be).array().optional(),notIn:e.lazy(()=>Be).array().optional(),not:e.union([e.lazy(()=>Be),e.lazy(()=>Sg)]).optional()}).strict(),PJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),NJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional()}).strict(),BJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),_J=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),qJ=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),vendorId:e.lazy(()=>t).optional()}).strict(),FJ=e.object({equals:e.lazy(()=>Be).optional(),in:e.lazy(()=>Be).array().optional(),notIn:e.lazy(()=>Be).array().optional(),not:e.union([e.lazy(()=>Be),e.lazy(()=>O1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Sg).optional(),_max:e.lazy(()=>Sg).optional()}).strict(),TZ=e.object({is:e.lazy(()=>Lt).optional(),isNot:e.lazy(()=>Lt).optional()}).strict(),EJ=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),DJ=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),xJ=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),VJ=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),unit:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),HJ=e.object({id:e.lazy(()=>t).optional(),orderId:e.lazy(()=>t).optional(),ingredientId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional()}).strict(),LJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),contact:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),phone:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),ZJ=e.object({id:e.lazy(()=>t).optional()}).strict(),$J=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),contact:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),phone:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),QJ=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),contact:e.lazy(()=>t).optional(),email:e.lazy(()=>t).optional(),phone:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),GJ=e.object({id:e.lazy(()=>t).optional()}).strict(),cP=e.object({equals:e.lazy(()=>Ze).optional(),in:e.lazy(()=>Ze).array().optional(),notIn:e.lazy(()=>Ze).array().optional(),not:e.union([e.lazy(()=>Ze),e.lazy(()=>vg)]).optional()}).strict(),PZ=e.object({every:e.lazy(()=>Sa).optional(),some:e.lazy(()=>Sa).optional(),none:e.lazy(()=>Sa).optional()}).strict(),YJ=e.object({_count:e.lazy(()=>t).optional()}).strict(),JJ=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional()}).strict(),KJ=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),XJ=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional()}).strict(),e7=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),startTime:e.lazy(()=>t).optional(),endTime:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional()}).strict(),t7=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),a7=e.object({equals:e.lazy(()=>Ze).optional(),in:e.lazy(()=>Ze).array().optional(),notIn:e.lazy(()=>Ze).array().optional(),not:e.union([e.lazy(()=>Ze),e.lazy(()=>w1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>vg).optional(),_max:e.lazy(()=>vg).optional()}).strict(),_g=e.object({equals:e.lazy(()=>oe).optional(),in:e.lazy(()=>oe).array().optional(),notIn:e.lazy(()=>oe).array().optional(),not:e.union([e.lazy(()=>oe),e.lazy(()=>Ag)]).optional()}).strict(),n7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),o7=e.object({id:e.lazy(()=>t).optional()}).strict(),i7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),r7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),l7=e.object({id:e.lazy(()=>t).optional()}).strict(),NZ=e.object({equals:e.lazy(()=>oe).optional(),in:e.lazy(()=>oe).array().optional(),notIn:e.lazy(()=>oe).array().optional(),not:e.union([e.lazy(()=>oe),e.lazy(()=>T1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Ag).optional(),_max:e.lazy(()=>Ag).optional()}).strict(),BZ=e.object({is:e.lazy(()=>$t).optional(),isNot:e.lazy(()=>$t).optional()}).strict(),c7=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),p7=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),u7=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),s7=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),status:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),y7=e.object({id:e.lazy(()=>t).optional(),prepBoardId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),assignedToId:e.lazy(()=>t).optional()}).strict(),d7=e.object({id:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),m7=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),z7=e.object({id:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),h7=e.object({id:e.lazy(()=>t).optional(),token:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional(),expiresAt:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),b7=e.object({id:e.lazy(()=>t).optional(),userId:e.lazy(()=>t).optional()}).strict(),_Z=e.object({every:e.lazy(()=>Tt).optional(),some:e.lazy(()=>Tt).optional(),none:e.lazy(()=>Tt).optional()}).strict(),I7=e.object({_count:e.lazy(()=>t).optional()}).strict(),g7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),S7=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),v7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),A7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),C7=e.object({id:e.lazy(()=>t).optional(),restaurantId:e.lazy(()=>t).optional()}).strict(),Jw=e.object({menuItemId:e.number(),recipeId:e.number()}).strict(),W7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional()}).strict(),U7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional()}).strict(),k7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional()}).strict(),R7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),joinAt:e.lazy(()=>t).optional()}).strict(),f7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional()}).strict(),af=e.object({equals:e.number().array().optional().nullable(),has:e.number().optional().nullable(),hasEvery:e.number().array().optional(),hasSome:e.number().array().optional(),isEmpty:e.boolean().optional()}).strict(),fm=e.object({equals:e.number().array().optional().nullable(),has:e.number().optional().nullable(),hasEvery:e.number().array().optional(),hasSome:e.number().array().optional(),isEmpty:e.boolean().optional()}).strict(),qZ=e.object({is:e.lazy(()=>Ft).optional().nullable(),isNot:e.lazy(()=>Ft).optional().nullable()}).strict(),FZ=e.object({every:e.lazy(()=>Ua).optional(),some:e.lazy(()=>Ua).optional(),none:e.lazy(()=>Ua).optional()}).strict(),EZ=e.object({is:e.lazy(()=>Tt).optional().nullable(),isNot:e.lazy(()=>Tt).optional().nullable()}).strict(),j7=e.object({_count:e.lazy(()=>t).optional()}).strict(),M7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),recipeIds:e.lazy(()=>t).optional(),recipeServingsAmount:e.lazy(()=>t).optional(),recipeServingsCost:e.lazy(()=>t).optional(),allergens:e.lazy(()=>t).optional(),nutritionalInfoId:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),categoryId:e.lazy(()=>t).optional()}).strict(),O7=e.object({id:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),recipeIds:e.lazy(()=>t).optional(),recipeServingsAmount:e.lazy(()=>t).optional(),recipeServingsCost:e.lazy(()=>t).optional(),nutritionalInfoId:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),categoryId:e.lazy(()=>t).optional()}).strict(),w7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),nutritionalInfoId:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),categoryId:e.lazy(()=>t).optional()}).strict(),T7=e.object({id:e.lazy(()=>t).optional(),name:e.lazy(()=>t).optional(),description:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),nutritionalInfoId:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional(),categoryId:e.lazy(()=>t).optional()}).strict(),P7=e.object({id:e.lazy(()=>t).optional(),price:e.lazy(()=>t).optional(),foodCost:e.lazy(()=>t).optional(),recipeIds:e.lazy(()=>t).optional(),recipeServingsAmount:e.lazy(()=>t).optional(),recipeServingsCost:e.lazy(()=>t).optional(),nutritionalInfoId:e.lazy(()=>t).optional(),menuId:e.lazy(()=>t).optional(),categoryId:e.lazy(()=>t).optional()}).strict(),N7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),B7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional()}).strict(),_7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),q7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),F7=e.object({id:e.lazy(()=>t).optional(),menuItemId:e.lazy(()=>t).optional(),calories:e.lazy(()=>t).optional(),fat:e.lazy(()=>t).optional(),saturatedFat:e.lazy(()=>t).optional(),transFat:e.lazy(()=>t).optional(),cholesterol:e.lazy(()=>t).optional(),sodium:e.lazy(()=>t).optional(),carbohydrates:e.lazy(()=>t).optional(),fiber:e.lazy(()=>t).optional(),sugar:e.lazy(()=>t).optional(),protein:e.lazy(()=>t).optional()}).strict(),E7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),D7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional()}).strict(),x7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),V7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),H7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),cost:e.lazy(()=>t).optional()}).strict(),L7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Z7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional()}).strict(),$7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),Q7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional(),date:e.lazy(()=>t).optional(),createdAt:e.lazy(()=>t).optional(),updatedAt:e.lazy(()=>t).optional()}).strict(),G7=e.object({id:e.lazy(()=>t).optional(),recipeId:e.lazy(()=>t).optional(),quantity:e.lazy(()=>t).optional()}).strict(),DZ=e.object({create:e.union([e.lazy(()=>mf),e.lazy(()=>zf)]).optional(),connectOrCreate:e.lazy(()=>P1).optional(),connect:e.lazy(()=>ee).optional()}).strict(),xZ=e.object({create:e.union([e.lazy(()=>hf),e.lazy(()=>bf)]).optional(),connectOrCreate:e.lazy(()=>N1).optional(),connect:e.lazy(()=>R).optional()}).strict(),d=e.object({set:e.string().optional().nullable()}).strict(),b=e.object({set:e.number().optional(),increment:e.number().optional(),decrement:e.number().optional(),multiply:e.number().optional(),divide:e.number().optional()}).strict(),i=e.object({set:e.coerce.date().optional()}).strict(),VZ=e.object({create:e.union([e.lazy(()=>mf),e.lazy(()=>zf)]).optional(),connectOrCreate:e.lazy(()=>P1).optional(),upsert:e.lazy(()=>WK).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>UK),e.lazy(()=>vB),e.lazy(()=>AB)]).optional()}).strict(),HZ=e.object({create:e.union([e.lazy(()=>hf),e.lazy(()=>bf)]).optional(),connectOrCreate:e.lazy(()=>N1).optional(),upsert:e.lazy(()=>kK).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>RK),e.lazy(()=>CB),e.lazy(()=>WB)]).optional()}).strict(),l=e.object({set:e.number().optional(),increment:e.number().optional(),decrement:e.number().optional(),multiply:e.number().optional(),divide:e.number().optional()}).strict(),LZ=e.object({create:e.union([e.lazy(()=>If),e.lazy(()=>gf)]).optional(),connectOrCreate:e.lazy(()=>B1).optional(),connect:e.lazy(()=>Xe).optional()}).strict(),ZZ=e.object({create:e.union([e.lazy(()=>Hl),e.lazy(()=>Hl).array(),e.lazy(()=>Ll),e.lazy(()=>Ll).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jm),e.lazy(()=>jm).array()]).optional(),createMany:e.lazy(()=>Sf).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),$Z=e.object({create:e.union([e.lazy(()=>Hl),e.lazy(()=>Hl).array(),e.lazy(()=>Ll),e.lazy(()=>Ll).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jm),e.lazy(()=>jm).array()]).optional(),createMany:e.lazy(()=>Sf).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),p=e.object({set:e.string().optional()}).strict(),A=e.object({set:e.boolean().optional()}).strict(),QZ=e.object({create:e.union([e.lazy(()=>If),e.lazy(()=>gf)]).optional(),connectOrCreate:e.lazy(()=>B1).optional(),upsert:e.lazy(()=>fK).optional(),connect:e.lazy(()=>Xe).optional(),update:e.union([e.lazy(()=>jK),e.lazy(()=>UB),e.lazy(()=>kB)]).optional()}).strict(),GZ=e.object({create:e.union([e.lazy(()=>Hl),e.lazy(()=>Hl).array(),e.lazy(()=>Ll),e.lazy(()=>Ll).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jm),e.lazy(()=>jm).array()]).optional(),upsert:e.union([e.lazy(()=>Kv),e.lazy(()=>Kv).array()]).optional(),createMany:e.lazy(()=>Sf).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>Xv),e.lazy(()=>Xv).array()]).optional(),updateMany:e.union([e.lazy(()=>eA),e.lazy(()=>eA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),YZ=e.object({create:e.union([e.lazy(()=>Hl),e.lazy(()=>Hl).array(),e.lazy(()=>Ll),e.lazy(()=>Ll).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jm),e.lazy(()=>jm).array()]).optional(),upsert:e.union([e.lazy(()=>Kv),e.lazy(()=>Kv).array()]).optional(),createMany:e.lazy(()=>Sf).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>Xv),e.lazy(()=>Xv).array()]).optional(),updateMany:e.union([e.lazy(()=>eA),e.lazy(()=>eA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),bS=e.object({create:e.union([e.lazy(()=>vf),e.lazy(()=>Af)]).optional(),connectOrCreate:e.lazy(()=>_1).optional(),connect:e.lazy(()=>v).optional()}).strict(),IS=e.object({create:e.union([e.lazy(()=>Zl),e.lazy(()=>Zl).array(),e.lazy(()=>$l),e.lazy(()=>$l).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mm),e.lazy(()=>Mm).array()]).optional(),createMany:e.lazy(()=>Cf).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),gS=e.object({create:e.union([e.lazy(()=>Ql),e.lazy(()=>Ql).array(),e.lazy(()=>Gl),e.lazy(()=>Gl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Om),e.lazy(()=>Om).array()]).optional(),createMany:e.lazy(()=>Wf).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional()}).strict(),SS=e.object({create:e.union([e.lazy(()=>Uf),e.lazy(()=>kf)]).optional(),connectOrCreate:e.lazy(()=>q1).optional(),connect:e.lazy(()=>O).optional()}).strict(),vS=e.object({create:e.union([e.lazy(()=>Rf),e.lazy(()=>ff)]).optional(),connectOrCreate:e.lazy(()=>F1).optional(),connect:e.lazy(()=>O).optional()}).strict(),AS=e.object({create:e.union([e.lazy(()=>Zl),e.lazy(()=>Zl).array(),e.lazy(()=>$l),e.lazy(()=>$l).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mm),e.lazy(()=>Mm).array()]).optional(),createMany:e.lazy(()=>Cf).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),CS=e.object({create:e.union([e.lazy(()=>Ql),e.lazy(()=>Ql).array(),e.lazy(()=>Gl),e.lazy(()=>Gl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Om),e.lazy(()=>Om).array()]).optional(),createMany:e.lazy(()=>Wf).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional()}).strict(),j=e.object({set:e.coerce.date().optional().nullable()}).strict(),WS=e.object({create:e.union([e.lazy(()=>vf),e.lazy(()=>Af)]).optional(),connectOrCreate:e.lazy(()=>_1).optional(),upsert:e.lazy(()=>MK).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>OK),e.lazy(()=>RB),e.lazy(()=>fB)]).optional()}).strict(),US=e.object({create:e.union([e.lazy(()=>Zl),e.lazy(()=>Zl).array(),e.lazy(()=>$l),e.lazy(()=>$l).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mm),e.lazy(()=>Mm).array()]).optional(),upsert:e.union([e.lazy(()=>tA),e.lazy(()=>tA).array()]).optional(),createMany:e.lazy(()=>Cf).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>aA),e.lazy(()=>aA).array()]).optional(),updateMany:e.union([e.lazy(()=>nA),e.lazy(()=>nA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),kS=e.object({create:e.union([e.lazy(()=>Ql),e.lazy(()=>Ql).array(),e.lazy(()=>Gl),e.lazy(()=>Gl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Om),e.lazy(()=>Om).array()]).optional(),upsert:e.union([e.lazy(()=>oA),e.lazy(()=>oA).array()]).optional(),createMany:e.lazy(()=>Wf).optional(),set:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),disconnect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),delete:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),update:e.union([e.lazy(()=>iA),e.lazy(()=>iA).array()]).optional(),updateMany:e.union([e.lazy(()=>rA),e.lazy(()=>rA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional()}).strict(),RS=e.object({create:e.union([e.lazy(()=>Uf),e.lazy(()=>kf)]).optional(),connectOrCreate:e.lazy(()=>q1).optional(),upsert:e.lazy(()=>wK).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>TK),e.lazy(()=>jB),e.lazy(()=>MB)]).optional()}).strict(),fS=e.object({create:e.union([e.lazy(()=>Rf),e.lazy(()=>ff)]).optional(),connectOrCreate:e.lazy(()=>F1).optional(),upsert:e.lazy(()=>PK).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>P)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>P)]).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>NK),e.lazy(()=>OB),e.lazy(()=>wB)]).optional()}).strict(),I=e.object({set:e.number().optional().nullable(),increment:e.number().optional(),decrement:e.number().optional(),multiply:e.number().optional(),divide:e.number().optional()}).strict(),jS=e.object({create:e.union([e.lazy(()=>Zl),e.lazy(()=>Zl).array(),e.lazy(()=>$l),e.lazy(()=>$l).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mm),e.lazy(()=>Mm).array()]).optional(),upsert:e.union([e.lazy(()=>tA),e.lazy(()=>tA).array()]).optional(),createMany:e.lazy(()=>Cf).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>aA),e.lazy(()=>aA).array()]).optional(),updateMany:e.union([e.lazy(()=>nA),e.lazy(()=>nA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),MS=e.object({create:e.union([e.lazy(()=>Ql),e.lazy(()=>Ql).array(),e.lazy(()=>Gl),e.lazy(()=>Gl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Om),e.lazy(()=>Om).array()]).optional(),upsert:e.union([e.lazy(()=>oA),e.lazy(()=>oA).array()]).optional(),createMany:e.lazy(()=>Wf).optional(),set:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),disconnect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),delete:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),update:e.union([e.lazy(()=>iA),e.lazy(()=>iA).array()]).optional(),updateMany:e.union([e.lazy(()=>rA),e.lazy(()=>rA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional()}).strict(),pP=e.object({create:e.union([e.lazy(()=>jf),e.lazy(()=>Mf)]).optional(),connectOrCreate:e.lazy(()=>E1).optional(),connect:e.lazy(()=>ee).optional()}).strict(),uP=e.object({create:e.union([e.lazy(()=>Yl),e.lazy(()=>Yl).array(),e.lazy(()=>Jl),e.lazy(()=>Jl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wm),e.lazy(()=>wm).array()]).optional(),createMany:e.lazy(()=>Of).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional()}).strict(),sP=e.object({create:e.union([e.lazy(()=>Kl),e.lazy(()=>Kl).array(),e.lazy(()=>Xl),e.lazy(()=>Xl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tm),e.lazy(()=>Tm).array()]).optional(),createMany:e.lazy(()=>wf).optional(),connect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional()}).strict(),yP=e.object({create:e.union([e.lazy(()=>Yl),e.lazy(()=>Yl).array(),e.lazy(()=>Jl),e.lazy(()=>Jl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wm),e.lazy(()=>wm).array()]).optional(),createMany:e.lazy(()=>Of).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional()}).strict(),dP=e.object({create:e.union([e.lazy(()=>Kl),e.lazy(()=>Kl).array(),e.lazy(()=>Xl),e.lazy(()=>Xl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tm),e.lazy(()=>Tm).array()]).optional(),createMany:e.lazy(()=>wf).optional(),connect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional()}).strict(),cl=e.object({set:e.lazy(()=>_e).optional()}).strict(),mP=e.object({create:e.union([e.lazy(()=>jf),e.lazy(()=>Mf)]).optional(),connectOrCreate:e.lazy(()=>E1).optional(),upsert:e.lazy(()=>BK).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>_K),e.lazy(()=>TB),e.lazy(()=>PB)]).optional()}).strict(),zP=e.object({create:e.union([e.lazy(()=>Yl),e.lazy(()=>Yl).array(),e.lazy(()=>Jl),e.lazy(()=>Jl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wm),e.lazy(()=>wm).array()]).optional(),upsert:e.union([e.lazy(()=>lA),e.lazy(()=>lA).array()]).optional(),createMany:e.lazy(()=>Of).optional(),set:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),disconnect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),delete:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),update:e.union([e.lazy(()=>cA),e.lazy(()=>cA).array()]).optional(),updateMany:e.union([e.lazy(()=>pA),e.lazy(()=>pA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional()}).strict(),hP=e.object({create:e.union([e.lazy(()=>Kl),e.lazy(()=>Kl).array(),e.lazy(()=>Xl),e.lazy(()=>Xl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tm),e.lazy(()=>Tm).array()]).optional(),upsert:e.union([e.lazy(()=>uA),e.lazy(()=>uA).array()]).optional(),createMany:e.lazy(()=>wf).optional(),set:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),disconnect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),delete:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),connect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),update:e.union([e.lazy(()=>sA),e.lazy(()=>sA).array()]).optional(),updateMany:e.union([e.lazy(()=>yA),e.lazy(()=>yA).array()]).optional(),deleteMany:e.union([e.lazy(()=>dl),e.lazy(()=>dl).array()]).optional()}).strict(),bP=e.object({create:e.union([e.lazy(()=>Yl),e.lazy(()=>Yl).array(),e.lazy(()=>Jl),e.lazy(()=>Jl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wm),e.lazy(()=>wm).array()]).optional(),upsert:e.union([e.lazy(()=>lA),e.lazy(()=>lA).array()]).optional(),createMany:e.lazy(()=>Of).optional(),set:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),disconnect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),delete:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),update:e.union([e.lazy(()=>cA),e.lazy(()=>cA).array()]).optional(),updateMany:e.union([e.lazy(()=>pA),e.lazy(()=>pA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional()}).strict(),IP=e.object({create:e.union([e.lazy(()=>Kl),e.lazy(()=>Kl).array(),e.lazy(()=>Xl),e.lazy(()=>Xl).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tm),e.lazy(()=>Tm).array()]).optional(),upsert:e.union([e.lazy(()=>uA),e.lazy(()=>uA).array()]).optional(),createMany:e.lazy(()=>wf).optional(),set:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),disconnect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),delete:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),connect:e.union([e.lazy(()=>ht),e.lazy(()=>ht).array()]).optional(),update:e.union([e.lazy(()=>sA),e.lazy(()=>sA).array()]).optional(),updateMany:e.union([e.lazy(()=>yA),e.lazy(()=>yA).array()]).optional(),deleteMany:e.union([e.lazy(()=>dl),e.lazy(()=>dl).array()]).optional()}).strict(),JZ=e.object({create:e.union([e.lazy(()=>Tf),e.lazy(()=>Pf)]).optional(),connectOrCreate:e.lazy(()=>D1).optional(),connect:e.lazy(()=>v).optional()}).strict(),KZ=e.object({create:e.union([e.lazy(()=>Nf),e.lazy(()=>Bf)]).optional(),connectOrCreate:e.lazy(()=>x1).optional(),connect:e.lazy(()=>Ye).optional()}).strict(),XZ=e.object({create:e.union([e.lazy(()=>Tf),e.lazy(()=>Pf)]).optional(),connectOrCreate:e.lazy(()=>D1).optional(),upsert:e.lazy(()=>qK).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>FK),e.lazy(()=>NB),e.lazy(()=>BB)]).optional()}).strict(),e$=e.object({create:e.union([e.lazy(()=>Nf),e.lazy(()=>Bf)]).optional(),connectOrCreate:e.lazy(()=>x1).optional(),upsert:e.lazy(()=>EK).optional(),connect:e.lazy(()=>Ye).optional(),update:e.union([e.lazy(()=>DK),e.lazy(()=>_B),e.lazy(()=>qB)]).optional()}).strict(),Y7=e.object({create:e.union([e.lazy(()=>_f),e.lazy(()=>qf)]).optional(),connectOrCreate:e.lazy(()=>V1).optional(),connect:e.lazy(()=>Ye).optional()}).strict(),Xb=e.object({set:e.lazy(()=>lt).optional()}).strict(),E=e.object({set:e.number().optional().nullable(),increment:e.number().optional(),decrement:e.number().optional(),multiply:e.number().optional(),divide:e.number().optional()}).strict(),J7=e.object({create:e.union([e.lazy(()=>_f),e.lazy(()=>qf)]).optional(),connectOrCreate:e.lazy(()=>V1).optional(),upsert:e.lazy(()=>xK).optional(),connect:e.lazy(()=>Ye).optional(),update:e.union([e.lazy(()=>VK),e.lazy(()=>FB),e.lazy(()=>EB)]).optional()}).strict(),gP=e.object({create:e.union([e.lazy(()=>Ff),e.lazy(()=>Ef)]).optional(),connectOrCreate:e.lazy(()=>H1).optional(),connect:e.lazy(()=>ee).optional()}).strict(),SP=e.object({create:e.union([e.lazy(()=>ec),e.lazy(()=>ec).array(),e.lazy(()=>tc),e.lazy(()=>tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pm),e.lazy(()=>Pm).array()]).optional(),createMany:e.lazy(()=>Df).optional(),connect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional()}).strict(),vP=e.object({create:e.union([e.lazy(()=>ac),e.lazy(()=>ac).array(),e.lazy(()=>nc),e.lazy(()=>nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nm),e.lazy(()=>Nm).array()]).optional(),createMany:e.lazy(()=>xf).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional()}).strict(),AP=e.object({create:e.union([e.lazy(()=>ec),e.lazy(()=>ec).array(),e.lazy(()=>tc),e.lazy(()=>tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pm),e.lazy(()=>Pm).array()]).optional(),createMany:e.lazy(()=>Df).optional(),connect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional()}).strict(),CP=e.object({create:e.union([e.lazy(()=>ac),e.lazy(()=>ac).array(),e.lazy(()=>nc),e.lazy(()=>nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nm),e.lazy(()=>Nm).array()]).optional(),createMany:e.lazy(()=>xf).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional()}).strict(),pl=e.object({set:e.lazy(()=>qe).optional()}).strict(),WP=e.object({create:e.union([e.lazy(()=>Ff),e.lazy(()=>Ef)]).optional(),connectOrCreate:e.lazy(()=>H1).optional(),upsert:e.lazy(()=>HK).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>LK),e.lazy(()=>DB),e.lazy(()=>xB)]).optional()}).strict(),UP=e.object({create:e.union([e.lazy(()=>ec),e.lazy(()=>ec).array(),e.lazy(()=>tc),e.lazy(()=>tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pm),e.lazy(()=>Pm).array()]).optional(),upsert:e.union([e.lazy(()=>dA),e.lazy(()=>dA).array()]).optional(),createMany:e.lazy(()=>Df).optional(),set:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),disconnect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),delete:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),connect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),update:e.union([e.lazy(()=>mA),e.lazy(()=>mA).array()]).optional(),updateMany:e.union([e.lazy(()=>zA),e.lazy(()=>zA).array()]).optional(),deleteMany:e.union([e.lazy(()=>ml),e.lazy(()=>ml).array()]).optional()}).strict(),kP=e.object({create:e.union([e.lazy(()=>ac),e.lazy(()=>ac).array(),e.lazy(()=>nc),e.lazy(()=>nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nm),e.lazy(()=>Nm).array()]).optional(),upsert:e.union([e.lazy(()=>hA),e.lazy(()=>hA).array()]).optional(),createMany:e.lazy(()=>xf).optional(),set:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),disconnect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),delete:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),update:e.union([e.lazy(()=>bA),e.lazy(()=>bA).array()]).optional(),updateMany:e.union([e.lazy(()=>IA),e.lazy(()=>IA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional()}).strict(),RP=e.object({create:e.union([e.lazy(()=>ec),e.lazy(()=>ec).array(),e.lazy(()=>tc),e.lazy(()=>tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pm),e.lazy(()=>Pm).array()]).optional(),upsert:e.union([e.lazy(()=>dA),e.lazy(()=>dA).array()]).optional(),createMany:e.lazy(()=>Df).optional(),set:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),disconnect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),delete:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),connect:e.union([e.lazy(()=>at),e.lazy(()=>at).array()]).optional(),update:e.union([e.lazy(()=>mA),e.lazy(()=>mA).array()]).optional(),updateMany:e.union([e.lazy(()=>zA),e.lazy(()=>zA).array()]).optional(),deleteMany:e.union([e.lazy(()=>ml),e.lazy(()=>ml).array()]).optional()}).strict(),fP=e.object({create:e.union([e.lazy(()=>ac),e.lazy(()=>ac).array(),e.lazy(()=>nc),e.lazy(()=>nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nm),e.lazy(()=>Nm).array()]).optional(),upsert:e.union([e.lazy(()=>hA),e.lazy(()=>hA).array()]).optional(),createMany:e.lazy(()=>xf).optional(),set:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),disconnect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),delete:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),update:e.union([e.lazy(()=>bA),e.lazy(()=>bA).array()]).optional(),updateMany:e.union([e.lazy(()=>IA),e.lazy(()=>IA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional()}).strict(),t$=e.object({create:e.union([e.lazy(()=>Vf),e.lazy(()=>Hf)]).optional(),connectOrCreate:e.lazy(()=>L1).optional(),connect:e.lazy(()=>Je).optional()}).strict(),a$=e.object({create:e.union([e.lazy(()=>oc),e.lazy(()=>oc).array(),e.lazy(()=>ic),e.lazy(()=>ic).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bm),e.lazy(()=>Bm).array()]).optional(),createMany:e.lazy(()=>Lf).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional()}).strict(),n$=e.object({create:e.union([e.lazy(()=>oc),e.lazy(()=>oc).array(),e.lazy(()=>ic),e.lazy(()=>ic).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bm),e.lazy(()=>Bm).array()]).optional(),createMany:e.lazy(()=>Lf).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional()}).strict(),Gd=e.object({set:e.lazy(()=>Le).optional()}).strict(),o$=e.object({create:e.union([e.lazy(()=>Vf),e.lazy(()=>Hf)]).optional(),connectOrCreate:e.lazy(()=>L1).optional(),upsert:e.lazy(()=>ZK).optional(),connect:e.lazy(()=>Je).optional(),update:e.union([e.lazy(()=>$K),e.lazy(()=>VB),e.lazy(()=>HB)]).optional()}).strict(),i$=e.object({create:e.union([e.lazy(()=>oc),e.lazy(()=>oc).array(),e.lazy(()=>ic),e.lazy(()=>ic).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bm),e.lazy(()=>Bm).array()]).optional(),upsert:e.union([e.lazy(()=>gA),e.lazy(()=>gA).array()]).optional(),createMany:e.lazy(()=>Lf).optional(),set:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),disconnect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),delete:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),update:e.union([e.lazy(()=>SA),e.lazy(()=>SA).array()]).optional(),updateMany:e.union([e.lazy(()=>vA),e.lazy(()=>vA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional()}).strict(),r$=e.object({create:e.union([e.lazy(()=>oc),e.lazy(()=>oc).array(),e.lazy(()=>ic),e.lazy(()=>ic).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bm),e.lazy(()=>Bm).array()]).optional(),upsert:e.union([e.lazy(()=>gA),e.lazy(()=>gA).array()]).optional(),createMany:e.lazy(()=>Lf).optional(),set:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),disconnect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),delete:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),update:e.union([e.lazy(()=>SA),e.lazy(()=>SA).array()]).optional(),updateMany:e.union([e.lazy(()=>vA),e.lazy(()=>vA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional()}).strict(),jP=e.object({create:e.union([e.lazy(()=>Zf),e.lazy(()=>$f)]).optional(),connectOrCreate:e.lazy(()=>Z1).optional(),connect:e.lazy(()=>Je).optional()}).strict(),MP=e.object({create:e.union([e.lazy(()=>Qf),e.lazy(()=>Gf)]).optional(),connectOrCreate:e.lazy(()=>$1).optional(),connect:e.lazy(()=>O).optional()}).strict(),OP=e.object({create:e.union([e.lazy(()=>rc),e.lazy(()=>rc).array(),e.lazy(()=>lc),e.lazy(()=>lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_m),e.lazy(()=>_m).array()]).optional(),createMany:e.lazy(()=>Yf).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional()}).strict(),wP=e.object({create:e.union([e.lazy(()=>rc),e.lazy(()=>rc).array(),e.lazy(()=>lc),e.lazy(()=>lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_m),e.lazy(()=>_m).array()]).optional(),createMany:e.lazy(()=>Yf).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional()}).strict(),TP=e.object({create:e.union([e.lazy(()=>Zf),e.lazy(()=>$f)]).optional(),connectOrCreate:e.lazy(()=>Z1).optional(),upsert:e.lazy(()=>QK).optional(),connect:e.lazy(()=>Je).optional(),update:e.union([e.lazy(()=>GK),e.lazy(()=>LB),e.lazy(()=>ZB)]).optional()}).strict(),PP=e.object({create:e.union([e.lazy(()=>Qf),e.lazy(()=>Gf)]).optional(),connectOrCreate:e.lazy(()=>$1).optional(),upsert:e.lazy(()=>YK).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>JK),e.lazy(()=>$B),e.lazy(()=>QB)]).optional()}).strict(),NP=e.object({create:e.union([e.lazy(()=>rc),e.lazy(()=>rc).array(),e.lazy(()=>lc),e.lazy(()=>lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_m),e.lazy(()=>_m).array()]).optional(),upsert:e.union([e.lazy(()=>AA),e.lazy(()=>AA).array()]).optional(),createMany:e.lazy(()=>Yf).optional(),set:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),disconnect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),delete:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),update:e.union([e.lazy(()=>CA),e.lazy(()=>CA).array()]).optional(),updateMany:e.union([e.lazy(()=>WA),e.lazy(()=>WA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional()}).strict(),BP=e.object({create:e.union([e.lazy(()=>rc),e.lazy(()=>rc).array(),e.lazy(()=>lc),e.lazy(()=>lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_m),e.lazy(()=>_m).array()]).optional(),upsert:e.union([e.lazy(()=>AA),e.lazy(()=>AA).array()]).optional(),createMany:e.lazy(()=>Yf).optional(),set:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),disconnect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),delete:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),connect:e.union([e.lazy(()=>he),e.lazy(()=>he).array()]).optional(),update:e.union([e.lazy(()=>CA),e.lazy(()=>CA).array()]).optional(),updateMany:e.union([e.lazy(()=>WA),e.lazy(()=>WA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional()}).strict(),Yd=e.object({set:e.string().array()}).strict(),l$=e.object({create:e.union([e.lazy(()=>Jf),e.lazy(()=>Kf)]).optional(),connectOrCreate:e.lazy(()=>Q1).optional(),connect:e.lazy(()=>le).optional()}).strict(),c$=e.object({create:e.union([e.lazy(()=>Xf),e.lazy(()=>ej)]).optional(),connectOrCreate:e.lazy(()=>G1).optional(),connect:e.lazy(()=>at).optional()}).strict(),Hy=e.object({set:e.lazy(()=>xe).optional()}).strict(),Ly=e.object({set:e.string().array().optional(),push:e.union([e.string(),e.string().array()]).optional()}).strict(),p$=e.object({create:e.union([e.lazy(()=>Jf),e.lazy(()=>Kf)]).optional(),connectOrCreate:e.lazy(()=>Q1).optional(),upsert:e.lazy(()=>KK).optional(),connect:e.lazy(()=>le).optional(),update:e.union([e.lazy(()=>XK),e.lazy(()=>GB),e.lazy(()=>YB)]).optional()}).strict(),u$=e.object({create:e.union([e.lazy(()=>Xf),e.lazy(()=>ej)]).optional(),connectOrCreate:e.lazy(()=>G1).optional(),upsert:e.lazy(()=>eX).optional(),connect:e.lazy(()=>at).optional(),update:e.union([e.lazy(()=>tX),e.lazy(()=>JB),e.lazy(()=>KB)]).optional()}).strict(),s$=e.object({create:e.union([e.lazy(()=>tj),e.lazy(()=>aj)]).optional(),connectOrCreate:e.lazy(()=>Y1).optional(),connect:e.lazy(()=>Ke).optional()}).strict(),y$=e.object({create:e.union([e.lazy(()=>nj),e.lazy(()=>oj)]).optional(),connectOrCreate:e.lazy(()=>J1).optional(),connect:e.lazy(()=>Y).optional()}).strict(),d$=e.object({create:e.union([e.lazy(()=>tj),e.lazy(()=>aj)]).optional(),connectOrCreate:e.lazy(()=>Y1).optional(),upsert:e.lazy(()=>aX).optional(),connect:e.lazy(()=>Ke).optional(),update:e.union([e.lazy(()=>nX),e.lazy(()=>XB),e.lazy(()=>e_)]).optional()}).strict(),m$=e.object({create:e.union([e.lazy(()=>nj),e.lazy(()=>oj)]).optional(),connectOrCreate:e.lazy(()=>J1).optional(),upsert:e.lazy(()=>oX).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>iX),e.lazy(()=>t_),e.lazy(()=>a_)]).optional()}).strict(),al=e.object({set:e.string().array()}).strict(),_P=e.object({create:e.union([e.lazy(()=>ij),e.lazy(()=>rj)]).optional(),connectOrCreate:e.lazy(()=>K1).optional(),connect:e.lazy(()=>ee).optional()}).strict(),qP=e.object({create:e.union([e.lazy(()=>lj),e.lazy(()=>cj)]).optional(),connectOrCreate:e.lazy(()=>X1).optional(),connect:e.lazy(()=>R).optional()}).strict(),FP=e.object({create:e.union([e.lazy(()=>pj),e.lazy(()=>uj)]).optional(),connectOrCreate:e.lazy(()=>e2).optional(),connect:e.lazy(()=>O).optional()}).strict(),Zr=e.object({set:e.lazy(()=>Oe).optional()}).strict(),$r=e.object({set:e.string().array().optional(),push:e.union([e.string(),e.string().array()]).optional()}).strict(),Qr=e.object({set:e.lazy(()=>we).optional()}).strict(),EP=e.object({create:e.union([e.lazy(()=>ij),e.lazy(()=>rj)]).optional(),connectOrCreate:e.lazy(()=>K1).optional(),upsert:e.lazy(()=>rX).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>lX),e.lazy(()=>n_),e.lazy(()=>o_)]).optional()}).strict(),DP=e.object({create:e.union([e.lazy(()=>lj),e.lazy(()=>cj)]).optional(),connectOrCreate:e.lazy(()=>X1).optional(),upsert:e.lazy(()=>cX).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Ae)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Ae)]).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>pX),e.lazy(()=>i_),e.lazy(()=>r_)]).optional()}).strict(),xP=e.object({create:e.union([e.lazy(()=>pj),e.lazy(()=>uj)]).optional(),connectOrCreate:e.lazy(()=>e2).optional(),upsert:e.lazy(()=>uX).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>P)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>P)]).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>sX),e.lazy(()=>l_),e.lazy(()=>c_)]).optional()}).strict(),VP=e.object({create:e.union([e.lazy(()=>cc),e.lazy(()=>cc).array(),e.lazy(()=>pc),e.lazy(()=>pc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qm),e.lazy(()=>qm).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),HP=e.object({create:e.union([e.lazy(()=>uc),e.lazy(()=>uc).array(),e.lazy(()=>sc),e.lazy(()=>sc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fm),e.lazy(()=>Fm).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),LP=e.object({create:e.union([e.lazy(()=>yc),e.lazy(()=>yc).array(),e.lazy(()=>dc),e.lazy(()=>dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Em),e.lazy(()=>Em).array()]).optional(),createMany:e.lazy(()=>sj).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional()}).strict(),ZP=e.object({create:e.union([e.lazy(()=>cc),e.lazy(()=>cc).array(),e.lazy(()=>pc),e.lazy(()=>pc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qm),e.lazy(()=>qm).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),$P=e.object({create:e.union([e.lazy(()=>uc),e.lazy(()=>uc).array(),e.lazy(()=>sc),e.lazy(()=>sc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fm),e.lazy(()=>Fm).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),QP=e.object({create:e.union([e.lazy(()=>yc),e.lazy(()=>yc).array(),e.lazy(()=>dc),e.lazy(()=>dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Em),e.lazy(()=>Em).array()]).optional(),createMany:e.lazy(()=>sj).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional()}).strict(),GP=e.object({create:e.union([e.lazy(()=>cc),e.lazy(()=>cc).array(),e.lazy(()=>pc),e.lazy(()=>pc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qm),e.lazy(()=>qm).array()]).optional(),upsert:e.union([e.lazy(()=>UA),e.lazy(()=>UA).array()]).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>kA),e.lazy(()=>kA).array()]).optional(),updateMany:e.union([e.lazy(()=>RA),e.lazy(()=>RA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),YP=e.object({create:e.union([e.lazy(()=>uc),e.lazy(()=>uc).array(),e.lazy(()=>sc),e.lazy(()=>sc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fm),e.lazy(()=>Fm).array()]).optional(),upsert:e.union([e.lazy(()=>fA),e.lazy(()=>fA).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>jA),e.lazy(()=>jA).array()]).optional(),updateMany:e.union([e.lazy(()=>MA),e.lazy(()=>MA).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),JP=e.object({create:e.union([e.lazy(()=>yc),e.lazy(()=>yc).array(),e.lazy(()=>dc),e.lazy(()=>dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Em),e.lazy(()=>Em).array()]).optional(),upsert:e.union([e.lazy(()=>OA),e.lazy(()=>OA).array()]).optional(),createMany:e.lazy(()=>sj).optional(),set:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),disconnect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),delete:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),update:e.union([e.lazy(()=>wA),e.lazy(()=>wA).array()]).optional(),updateMany:e.union([e.lazy(()=>TA),e.lazy(()=>TA).array()]).optional(),deleteMany:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional()}).strict(),KP=e.object({create:e.union([e.lazy(()=>cc),e.lazy(()=>cc).array(),e.lazy(()=>pc),e.lazy(()=>pc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qm),e.lazy(()=>qm).array()]).optional(),upsert:e.union([e.lazy(()=>UA),e.lazy(()=>UA).array()]).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>kA),e.lazy(()=>kA).array()]).optional(),updateMany:e.union([e.lazy(()=>RA),e.lazy(()=>RA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),XP=e.object({create:e.union([e.lazy(()=>uc),e.lazy(()=>uc).array(),e.lazy(()=>sc),e.lazy(()=>sc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fm),e.lazy(()=>Fm).array()]).optional(),upsert:e.union([e.lazy(()=>fA),e.lazy(()=>fA).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>jA),e.lazy(()=>jA).array()]).optional(),updateMany:e.union([e.lazy(()=>MA),e.lazy(()=>MA).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),eN=e.object({create:e.union([e.lazy(()=>yc),e.lazy(()=>yc).array(),e.lazy(()=>dc),e.lazy(()=>dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Em),e.lazy(()=>Em).array()]).optional(),upsert:e.union([e.lazy(()=>OA),e.lazy(()=>OA).array()]).optional(),createMany:e.lazy(()=>sj).optional(),set:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),disconnect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),delete:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),update:e.union([e.lazy(()=>wA),e.lazy(()=>wA).array()]).optional(),updateMany:e.union([e.lazy(()=>TA),e.lazy(()=>TA).array()]).optional(),deleteMany:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional()}).strict(),K7=e.object({create:e.union([e.lazy(()=>mc),e.lazy(()=>mc).array(),e.lazy(()=>zc),e.lazy(()=>zc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dm),e.lazy(()=>Dm).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),X7=e.object({create:e.union([e.lazy(()=>mc),e.lazy(()=>mc).array(),e.lazy(()=>zc),e.lazy(()=>zc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dm),e.lazy(()=>Dm).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),eK=e.object({create:e.union([e.lazy(()=>mc),e.lazy(()=>mc).array(),e.lazy(()=>zc),e.lazy(()=>zc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dm),e.lazy(()=>Dm).array()]).optional(),upsert:e.union([e.lazy(()=>PA),e.lazy(()=>PA).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>NA),e.lazy(()=>NA).array()]).optional(),updateMany:e.union([e.lazy(()=>BA),e.lazy(()=>BA).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),tK=e.object({create:e.union([e.lazy(()=>mc),e.lazy(()=>mc).array(),e.lazy(()=>zc),e.lazy(()=>zc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dm),e.lazy(()=>Dm).array()]).optional(),upsert:e.union([e.lazy(()=>PA),e.lazy(()=>PA).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>NA),e.lazy(()=>NA).array()]).optional(),updateMany:e.union([e.lazy(()=>BA),e.lazy(()=>BA).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),tN=e.object({create:e.union([e.lazy(()=>yj),e.lazy(()=>dj)]).optional(),connectOrCreate:e.lazy(()=>t2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),aN=e.object({create:e.union([e.lazy(()=>mj),e.lazy(()=>zj)]).optional(),connectOrCreate:e.lazy(()=>a2).optional(),connect:e.lazy(()=>R).optional()}).strict(),nN=e.object({create:e.union([e.lazy(()=>hj),e.lazy(()=>bj)]).optional(),connectOrCreate:e.lazy(()=>n2).optional(),connect:e.lazy(()=>O).optional()}).strict(),oN=e.object({create:e.union([e.lazy(()=>yj),e.lazy(()=>dj)]).optional(),connectOrCreate:e.lazy(()=>t2).optional(),upsert:e.lazy(()=>yX).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>dX),e.lazy(()=>p_),e.lazy(()=>u_)]).optional()}).strict(),iN=e.object({create:e.union([e.lazy(()=>mj),e.lazy(()=>zj)]).optional(),connectOrCreate:e.lazy(()=>a2).optional(),upsert:e.lazy(()=>mX).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>zX),e.lazy(()=>s_),e.lazy(()=>y_)]).optional()}).strict(),rN=e.object({create:e.union([e.lazy(()=>hj),e.lazy(()=>bj)]).optional(),connectOrCreate:e.lazy(()=>n2).optional(),upsert:e.lazy(()=>hX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>bX),e.lazy(()=>d_),e.lazy(()=>m_)]).optional()}).strict(),lN=e.object({create:e.union([e.lazy(()=>Ij),e.lazy(()=>gj)]).optional(),connectOrCreate:e.lazy(()=>o2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),cN=e.object({create:e.union([e.lazy(()=>Sj),e.lazy(()=>vj)]).optional(),connectOrCreate:e.lazy(()=>i2).optional(),connect:e.lazy(()=>Y).optional()}).strict(),pN=e.object({create:e.union([e.lazy(()=>Aj),e.lazy(()=>Cj)]).optional(),connectOrCreate:e.lazy(()=>r2).optional(),connect:e.lazy(()=>O).optional()}).strict(),uN=e.object({create:e.union([e.lazy(()=>Ij),e.lazy(()=>gj)]).optional(),connectOrCreate:e.lazy(()=>o2).optional(),upsert:e.lazy(()=>IX).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>gX),e.lazy(()=>z_),e.lazy(()=>h_)]).optional()}).strict(),sN=e.object({create:e.union([e.lazy(()=>Sj),e.lazy(()=>vj)]).optional(),connectOrCreate:e.lazy(()=>i2).optional(),upsert:e.lazy(()=>SX).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>vX),e.lazy(()=>b_),e.lazy(()=>I_)]).optional()}).strict(),yN=e.object({create:e.union([e.lazy(()=>Aj),e.lazy(()=>Cj)]).optional(),connectOrCreate:e.lazy(()=>r2).optional(),upsert:e.lazy(()=>AX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>CX),e.lazy(()=>g_),e.lazy(()=>S_)]).optional()}).strict(),dN=e.object({create:e.union([e.lazy(()=>Wj),e.lazy(()=>Uj)]).optional(),connectOrCreate:e.lazy(()=>l2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),mN=e.object({create:e.union([e.lazy(()=>kj),e.lazy(()=>Rj)]).optional(),connectOrCreate:e.lazy(()=>c2).optional(),connect:e.lazy(()=>O).optional()}).strict(),zN=e.object({create:e.union([e.lazy(()=>hc),e.lazy(()=>hc).array(),e.lazy(()=>bc),e.lazy(()=>bc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xm),e.lazy(()=>xm).array()]).optional(),createMany:e.lazy(()=>fj).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),hN=e.object({create:e.union([e.lazy(()=>hc),e.lazy(()=>hc).array(),e.lazy(()=>bc),e.lazy(()=>bc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xm),e.lazy(()=>xm).array()]).optional(),createMany:e.lazy(()=>fj).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),bN=e.object({create:e.union([e.lazy(()=>Wj),e.lazy(()=>Uj)]).optional(),connectOrCreate:e.lazy(()=>l2).optional(),upsert:e.lazy(()=>WX).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>UX),e.lazy(()=>v_),e.lazy(()=>A_)]).optional()}).strict(),IN=e.object({create:e.union([e.lazy(()=>kj),e.lazy(()=>Rj)]).optional(),connectOrCreate:e.lazy(()=>c2).optional(),upsert:e.lazy(()=>kX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>RX),e.lazy(()=>C_),e.lazy(()=>W_)]).optional()}).strict(),gN=e.object({create:e.union([e.lazy(()=>hc),e.lazy(()=>hc).array(),e.lazy(()=>bc),e.lazy(()=>bc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xm),e.lazy(()=>xm).array()]).optional(),upsert:e.union([e.lazy(()=>_A),e.lazy(()=>_A).array()]).optional(),createMany:e.lazy(()=>fj).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>qA),e.lazy(()=>qA).array()]).optional(),updateMany:e.union([e.lazy(()=>FA),e.lazy(()=>FA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),SN=e.object({create:e.union([e.lazy(()=>hc),e.lazy(()=>hc).array(),e.lazy(()=>bc),e.lazy(()=>bc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xm),e.lazy(()=>xm).array()]).optional(),upsert:e.union([e.lazy(()=>_A),e.lazy(()=>_A).array()]).optional(),createMany:e.lazy(()=>fj).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>qA),e.lazy(()=>qA).array()]).optional(),updateMany:e.union([e.lazy(()=>FA),e.lazy(()=>FA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),vN=e.object({create:e.union([e.lazy(()=>jj),e.lazy(()=>Mj)]).optional(),connectOrCreate:e.lazy(()=>p2).optional(),connect:e.lazy(()=>pe).optional()}).strict(),AN=e.object({create:e.union([e.lazy(()=>Oj),e.lazy(()=>wj)]).optional(),connectOrCreate:e.lazy(()=>u2).optional(),connect:e.lazy(()=>v).optional()}).strict(),CN=e.object({create:e.union([e.lazy(()=>Tj),e.lazy(()=>Pj)]).optional(),connectOrCreate:e.lazy(()=>s2).optional(),connect:e.lazy(()=>O).optional()}).strict(),WN=e.object({create:e.union([e.lazy(()=>jj),e.lazy(()=>Mj)]).optional(),connectOrCreate:e.lazy(()=>p2).optional(),upsert:e.lazy(()=>fX).optional(),connect:e.lazy(()=>pe).optional(),update:e.union([e.lazy(()=>jX),e.lazy(()=>U_),e.lazy(()=>k_)]).optional()}).strict(),UN=e.object({create:e.union([e.lazy(()=>Oj),e.lazy(()=>wj)]).optional(),connectOrCreate:e.lazy(()=>u2).optional(),upsert:e.lazy(()=>MX).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>OX),e.lazy(()=>R_),e.lazy(()=>f_)]).optional()}).strict(),kN=e.object({create:e.union([e.lazy(()=>Tj),e.lazy(()=>Pj)]).optional(),connectOrCreate:e.lazy(()=>s2).optional(),upsert:e.lazy(()=>wX).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>P)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>P)]).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>TX),e.lazy(()=>j_),e.lazy(()=>M_)]).optional()}).strict(),aK=e.object({create:e.union([e.lazy(()=>Nj),e.lazy(()=>Bj)]).optional(),connectOrCreate:e.lazy(()=>y2).optional(),connect:e.lazy(()=>ot).optional()}).strict(),eI=e.object({set:e.lazy(()=>ct).optional()}).strict(),nK=e.object({create:e.union([e.lazy(()=>Nj),e.lazy(()=>Bj)]).optional(),connectOrCreate:e.lazy(()=>y2).optional(),upsert:e.lazy(()=>PX).optional(),connect:e.lazy(()=>ot).optional(),update:e.union([e.lazy(()=>NX),e.lazy(()=>O_),e.lazy(()=>w_)]).optional()}).strict(),oK=e.object({create:e.union([e.lazy(()=>_j),e.lazy(()=>qj)]).optional(),connectOrCreate:e.lazy(()=>d2).optional(),connect:e.lazy(()=>O).optional()}).strict(),tI=e.object({set:e.lazy(()=>pt).optional()}).strict(),iK=e.object({create:e.union([e.lazy(()=>_j),e.lazy(()=>qj)]).optional(),connectOrCreate:e.lazy(()=>d2).optional(),upsert:e.lazy(()=>BX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>_X),e.lazy(()=>T_),e.lazy(()=>P_)]).optional()}).strict(),rK=e.object({create:e.union([e.lazy(()=>Fj),e.lazy(()=>Ej)]).optional(),connectOrCreate:e.lazy(()=>m2).optional(),connect:e.lazy(()=>O).optional()}).strict(),aI=e.object({set:e.lazy(()=>ut).optional()}).strict(),lK=e.object({create:e.union([e.lazy(()=>Fj),e.lazy(()=>Ej)]).optional(),connectOrCreate:e.lazy(()=>m2).optional(),upsert:e.lazy(()=>qX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>FX),e.lazy(()=>N_),e.lazy(()=>B_)]).optional()}).strict(),RN=e.object({create:e.union([e.lazy(()=>Dj),e.lazy(()=>xj)]).optional(),connectOrCreate:e.lazy(()=>z2).optional(),connect:e.lazy(()=>D).optional()}).strict(),fN=e.object({create:e.union([e.lazy(()=>Vj),e.lazy(()=>Hj)]).optional(),connectOrCreate:e.lazy(()=>h2).optional(),connect:e.lazy(()=>v).optional()}).strict(),jN=e.object({create:e.union([e.lazy(()=>Lj),e.lazy(()=>Zj)]).optional(),connectOrCreate:e.lazy(()=>b2).optional(),connect:e.lazy(()=>O).optional()}).strict(),MN=e.object({create:e.union([e.lazy(()=>Dj),e.lazy(()=>xj)]).optional(),connectOrCreate:e.lazy(()=>z2).optional(),upsert:e.lazy(()=>EX).optional(),connect:e.lazy(()=>D).optional(),update:e.union([e.lazy(()=>DX),e.lazy(()=>__),e.lazy(()=>q_)]).optional()}).strict(),ON=e.object({create:e.union([e.lazy(()=>Vj),e.lazy(()=>Hj)]).optional(),connectOrCreate:e.lazy(()=>h2).optional(),upsert:e.lazy(()=>xX).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>ie)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>ie)]).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>VX),e.lazy(()=>F_),e.lazy(()=>E_)]).optional()}).strict(),wN=e.object({create:e.union([e.lazy(()=>Lj),e.lazy(()=>Zj)]).optional(),connectOrCreate:e.lazy(()=>b2).optional(),upsert:e.lazy(()=>HX).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>LX),e.lazy(()=>D_),e.lazy(()=>x_)]).optional()}).strict(),cK=e.object({create:e.union([e.lazy(()=>Ic),e.lazy(()=>Ic).array(),e.lazy(()=>gc),e.lazy(()=>gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vm),e.lazy(()=>Vm).array()]).optional(),createMany:e.lazy(()=>$j).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional()}).strict(),pK=e.object({create:e.union([e.lazy(()=>Ic),e.lazy(()=>Ic).array(),e.lazy(()=>gc),e.lazy(()=>gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vm),e.lazy(()=>Vm).array()]).optional(),createMany:e.lazy(()=>$j).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional()}).strict(),uK=e.object({create:e.union([e.lazy(()=>Ic),e.lazy(()=>Ic).array(),e.lazy(()=>gc),e.lazy(()=>gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vm),e.lazy(()=>Vm).array()]).optional(),upsert:e.union([e.lazy(()=>EA),e.lazy(()=>EA).array()]).optional(),createMany:e.lazy(()=>$j).optional(),set:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),disconnect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),delete:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),update:e.union([e.lazy(()=>DA),e.lazy(()=>DA).array()]).optional(),updateMany:e.union([e.lazy(()=>xA),e.lazy(()=>xA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional()}).strict(),sK=e.object({create:e.union([e.lazy(()=>Ic),e.lazy(()=>Ic).array(),e.lazy(()=>gc),e.lazy(()=>gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vm),e.lazy(()=>Vm).array()]).optional(),upsert:e.union([e.lazy(()=>EA),e.lazy(()=>EA).array()]).optional(),createMany:e.lazy(()=>$j).optional(),set:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),disconnect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),delete:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),update:e.union([e.lazy(()=>DA),e.lazy(()=>DA).array()]).optional(),updateMany:e.union([e.lazy(()=>xA),e.lazy(()=>xA).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional()}).strict(),z$=e.object({create:e.union([e.lazy(()=>Qj),e.lazy(()=>Gj)]).optional(),connectOrCreate:e.lazy(()=>I2).optional(),connect:e.lazy(()=>Y).optional()}).strict(),h$=e.object({create:e.union([e.lazy(()=>Yj),e.lazy(()=>Jj)]).optional(),connectOrCreate:e.lazy(()=>g2).optional(),connect:e.lazy(()=>Xr).optional()}).strict(),b$=e.object({create:e.union([e.lazy(()=>Qj),e.lazy(()=>Gj)]).optional(),connectOrCreate:e.lazy(()=>I2).optional(),upsert:e.lazy(()=>ZX).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>$X),e.lazy(()=>V_),e.lazy(()=>H_)]).optional()}).strict(),I$=e.object({create:e.union([e.lazy(()=>Yj),e.lazy(()=>Jj)]).optional(),connectOrCreate:e.lazy(()=>g2).optional(),upsert:e.lazy(()=>QX).optional(),connect:e.lazy(()=>Xr).optional(),update:e.union([e.lazy(()=>GX),e.lazy(()=>L_),e.lazy(()=>Z_)]).optional()}).strict(),yK=e.object({create:e.union([e.lazy(()=>Kj),e.lazy(()=>Xj)]).optional(),connectOrCreate:e.lazy(()=>S2).optional(),connect:e.lazy(()=>R).optional()}).strict(),dK=e.object({create:e.union([e.lazy(()=>Kj),e.lazy(()=>Xj)]).optional(),connectOrCreate:e.lazy(()=>S2).optional(),upsert:e.lazy(()=>YX).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>JX),e.lazy(()=>$_),e.lazy(()=>Q_)]).optional()}).strict(),g$=e.object({create:e.union([e.lazy(()=>Sc),e.lazy(()=>Sc).array(),e.lazy(()=>vc),e.lazy(()=>vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hm),e.lazy(()=>Hm).array()]).optional(),createMany:e.lazy(()=>eM).optional(),connect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional()}).strict(),S$=e.object({create:e.union([e.lazy(()=>Ac),e.lazy(()=>Ac).array(),e.lazy(()=>Cc),e.lazy(()=>Cc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lm),e.lazy(()=>Lm).array()]).optional(),createMany:e.lazy(()=>tM).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional()}).strict(),v$=e.object({create:e.union([e.lazy(()=>Sc),e.lazy(()=>Sc).array(),e.lazy(()=>vc),e.lazy(()=>vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hm),e.lazy(()=>Hm).array()]).optional(),createMany:e.lazy(()=>eM).optional(),connect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional()}).strict(),A$=e.object({create:e.union([e.lazy(()=>Ac),e.lazy(()=>Ac).array(),e.lazy(()=>Cc),e.lazy(()=>Cc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lm),e.lazy(()=>Lm).array()]).optional(),createMany:e.lazy(()=>tM).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional()}).strict(),C$=e.object({create:e.union([e.lazy(()=>Sc),e.lazy(()=>Sc).array(),e.lazy(()=>vc),e.lazy(()=>vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hm),e.lazy(()=>Hm).array()]).optional(),upsert:e.union([e.lazy(()=>VA),e.lazy(()=>VA).array()]).optional(),createMany:e.lazy(()=>eM).optional(),set:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),disconnect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),delete:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),connect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),update:e.union([e.lazy(()=>HA),e.lazy(()=>HA).array()]).optional(),updateMany:e.union([e.lazy(()=>LA),e.lazy(()=>LA).array()]).optional(),deleteMany:e.union([e.lazy(()=>zl),e.lazy(()=>zl).array()]).optional()}).strict(),W$=e.object({create:e.union([e.lazy(()=>Ac),e.lazy(()=>Ac).array(),e.lazy(()=>Cc),e.lazy(()=>Cc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lm),e.lazy(()=>Lm).array()]).optional(),upsert:e.union([e.lazy(()=>ZA),e.lazy(()=>ZA).array()]).optional(),createMany:e.lazy(()=>tM).optional(),set:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),disconnect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),delete:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),update:e.union([e.lazy(()=>$A),e.lazy(()=>$A).array()]).optional(),updateMany:e.union([e.lazy(()=>QA),e.lazy(()=>QA).array()]).optional(),deleteMany:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional()}).strict(),U$=e.object({create:e.union([e.lazy(()=>Sc),e.lazy(()=>Sc).array(),e.lazy(()=>vc),e.lazy(()=>vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hm),e.lazy(()=>Hm).array()]).optional(),upsert:e.union([e.lazy(()=>VA),e.lazy(()=>VA).array()]).optional(),createMany:e.lazy(()=>eM).optional(),set:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),disconnect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),delete:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),connect:e.union([e.lazy(()=>ee),e.lazy(()=>ee).array()]).optional(),update:e.union([e.lazy(()=>HA),e.lazy(()=>HA).array()]).optional(),updateMany:e.union([e.lazy(()=>LA),e.lazy(()=>LA).array()]).optional(),deleteMany:e.union([e.lazy(()=>zl),e.lazy(()=>zl).array()]).optional()}).strict(),k$=e.object({create:e.union([e.lazy(()=>Ac),e.lazy(()=>Ac).array(),e.lazy(()=>Cc),e.lazy(()=>Cc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lm),e.lazy(()=>Lm).array()]).optional(),upsert:e.union([e.lazy(()=>ZA),e.lazy(()=>ZA).array()]).optional(),createMany:e.lazy(()=>tM).optional(),set:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),disconnect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),delete:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),update:e.union([e.lazy(()=>$A),e.lazy(()=>$A).array()]).optional(),updateMany:e.union([e.lazy(()=>QA),e.lazy(()=>QA).array()]).optional(),deleteMany:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional()}).strict(),Vi=e.object({create:e.union([e.lazy(()=>aM),e.lazy(()=>nM)]).optional(),connectOrCreate:e.lazy(()=>v2).optional(),connect:e.lazy(()=>Bi).optional()}).strict(),Hi=e.object({create:e.union([e.lazy(()=>Wc),e.lazy(()=>Wc).array(),e.lazy(()=>Uc),e.lazy(()=>Uc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zm),e.lazy(()=>Zm).array()]).optional(),createMany:e.lazy(()=>oM).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional()}).strict(),Li=e.object({create:e.union([e.lazy(()=>kc),e.lazy(()=>kc).array(),e.lazy(()=>Rc),e.lazy(()=>Rc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$m),e.lazy(()=>$m).array()]).optional(),createMany:e.lazy(()=>iM).optional(),connect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional()}).strict(),Zi=e.object({create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)]).optional(),connectOrCreate:e.lazy(()=>rM).optional(),connect:e.lazy(()=>so).optional()}).strict(),$i=e.object({create:e.union([e.lazy(()=>fc),e.lazy(()=>fc).array(),e.lazy(()=>jc),e.lazy(()=>jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qm),e.lazy(()=>Qm).array()]).optional(),createMany:e.lazy(()=>lM).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional()}).strict(),Qi=e.object({create:e.union([e.lazy(()=>Mc),e.lazy(()=>Mc).array(),e.lazy(()=>Oc),e.lazy(()=>Oc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gm),e.lazy(()=>Gm).array()]).optional(),createMany:e.lazy(()=>cM).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),Gi=e.object({create:e.union([e.lazy(()=>wc),e.lazy(()=>wc).array(),e.lazy(()=>Tc),e.lazy(()=>Tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ym),e.lazy(()=>Ym).array()]).optional(),createMany:e.lazy(()=>pM).optional(),connect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional()}).strict(),Yi=e.object({create:e.union([e.lazy(()=>Pc),e.lazy(()=>Pc).array(),e.lazy(()=>Nc),e.lazy(()=>Nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jm),e.lazy(()=>Jm).array()]).optional(),createMany:e.lazy(()=>uM).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional()}).strict(),Ji=e.object({create:e.union([e.lazy(()=>Bc),e.lazy(()=>Bc).array(),e.lazy(()=>_c),e.lazy(()=>_c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Km),e.lazy(()=>Km).array()]).optional(),createMany:e.lazy(()=>sM).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),Ki=e.object({create:e.union([e.lazy(()=>qc),e.lazy(()=>qc).array(),e.lazy(()=>Fc),e.lazy(()=>Fc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xm),e.lazy(()=>Xm).array()]).optional(),createMany:e.lazy(()=>yM).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),Xi=e.object({create:e.union([e.lazy(()=>Ec),e.lazy(()=>Ec).array(),e.lazy(()=>Dc),e.lazy(()=>Dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ez),e.lazy(()=>ez).array()]).optional(),createMany:e.lazy(()=>dM).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional()}).strict(),er=e.object({create:e.union([e.lazy(()=>xc),e.lazy(()=>xc).array(),e.lazy(()=>Vc),e.lazy(()=>Vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>tz),e.lazy(()=>tz).array()]).optional(),createMany:e.lazy(()=>mM).optional(),connect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional()}).strict(),tr=e.object({create:e.union([e.lazy(()=>Hc),e.lazy(()=>Hc).array(),e.lazy(()=>Lc),e.lazy(()=>Lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>az),e.lazy(()=>az).array()]).optional(),createMany:e.lazy(()=>zM).optional(),connect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional()}).strict(),ar=e.object({create:e.union([e.lazy(()=>Zc),e.lazy(()=>Zc).array(),e.lazy(()=>$c),e.lazy(()=>$c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nz),e.lazy(()=>nz).array()]).optional(),createMany:e.lazy(()=>hM).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),nr=e.object({create:e.union([e.lazy(()=>Wc),e.lazy(()=>Wc).array(),e.lazy(()=>Uc),e.lazy(()=>Uc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zm),e.lazy(()=>Zm).array()]).optional(),createMany:e.lazy(()=>oM).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional()}).strict(),or=e.object({create:e.union([e.lazy(()=>kc),e.lazy(()=>kc).array(),e.lazy(()=>Rc),e.lazy(()=>Rc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$m),e.lazy(()=>$m).array()]).optional(),createMany:e.lazy(()=>iM).optional(),connect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional()}).strict(),ir=e.object({create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)]).optional(),connectOrCreate:e.lazy(()=>rM).optional(),connect:e.lazy(()=>so).optional()}).strict(),rr=e.object({create:e.union([e.lazy(()=>fc),e.lazy(()=>fc).array(),e.lazy(()=>jc),e.lazy(()=>jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qm),e.lazy(()=>Qm).array()]).optional(),createMany:e.lazy(()=>lM).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional()}).strict(),lr=e.object({create:e.union([e.lazy(()=>Mc),e.lazy(()=>Mc).array(),e.lazy(()=>Oc),e.lazy(()=>Oc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gm),e.lazy(()=>Gm).array()]).optional(),createMany:e.lazy(()=>cM).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),cr=e.object({create:e.union([e.lazy(()=>wc),e.lazy(()=>wc).array(),e.lazy(()=>Tc),e.lazy(()=>Tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ym),e.lazy(()=>Ym).array()]).optional(),createMany:e.lazy(()=>pM).optional(),connect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional()}).strict(),pr=e.object({create:e.union([e.lazy(()=>Pc),e.lazy(()=>Pc).array(),e.lazy(()=>Nc),e.lazy(()=>Nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jm),e.lazy(()=>Jm).array()]).optional(),createMany:e.lazy(()=>uM).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional()}).strict(),ur=e.object({create:e.union([e.lazy(()=>Bc),e.lazy(()=>Bc).array(),e.lazy(()=>_c),e.lazy(()=>_c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Km),e.lazy(()=>Km).array()]).optional(),createMany:e.lazy(()=>sM).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),sr=e.object({create:e.union([e.lazy(()=>qc),e.lazy(()=>qc).array(),e.lazy(()=>Fc),e.lazy(()=>Fc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xm),e.lazy(()=>Xm).array()]).optional(),createMany:e.lazy(()=>yM).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),yr=e.object({create:e.union([e.lazy(()=>Ec),e.lazy(()=>Ec).array(),e.lazy(()=>Dc),e.lazy(()=>Dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ez),e.lazy(()=>ez).array()]).optional(),createMany:e.lazy(()=>dM).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional()}).strict(),dr=e.object({create:e.union([e.lazy(()=>xc),e.lazy(()=>xc).array(),e.lazy(()=>Vc),e.lazy(()=>Vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>tz),e.lazy(()=>tz).array()]).optional(),createMany:e.lazy(()=>mM).optional(),connect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional()}).strict(),mr=e.object({create:e.union([e.lazy(()=>Hc),e.lazy(()=>Hc).array(),e.lazy(()=>Lc),e.lazy(()=>Lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>az),e.lazy(()=>az).array()]).optional(),createMany:e.lazy(()=>zM).optional(),connect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional()}).strict(),zr=e.object({create:e.union([e.lazy(()=>Zc),e.lazy(()=>Zc).array(),e.lazy(()=>$c),e.lazy(()=>$c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nz),e.lazy(()=>nz).array()]).optional(),createMany:e.lazy(()=>hM).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),hr=e.object({create:e.union([e.lazy(()=>aM),e.lazy(()=>nM)]).optional(),connectOrCreate:e.lazy(()=>v2).optional(),upsert:e.lazy(()=>KX).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Rt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Rt)]).optional(),connect:e.lazy(()=>Bi).optional(),update:e.union([e.lazy(()=>XX),e.lazy(()=>G_),e.lazy(()=>Y_)]).optional()}).strict(),br=e.object({create:e.union([e.lazy(()=>Wc),e.lazy(()=>Wc).array(),e.lazy(()=>Uc),e.lazy(()=>Uc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zm),e.lazy(()=>Zm).array()]).optional(),upsert:e.union([e.lazy(()=>GA),e.lazy(()=>GA).array()]).optional(),createMany:e.lazy(()=>oM).optional(),set:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),disconnect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),delete:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),update:e.union([e.lazy(()=>YA),e.lazy(()=>YA).array()]).optional(),updateMany:e.union([e.lazy(()=>JA),e.lazy(()=>JA).array()]).optional(),deleteMany:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional()}).strict(),Ir=e.object({create:e.union([e.lazy(()=>kc),e.lazy(()=>kc).array(),e.lazy(()=>Rc),e.lazy(()=>Rc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$m),e.lazy(()=>$m).array()]).optional(),upsert:e.union([e.lazy(()=>KA),e.lazy(()=>KA).array()]).optional(),createMany:e.lazy(()=>iM).optional(),set:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),disconnect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),delete:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),connect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),update:e.union([e.lazy(()=>XA),e.lazy(()=>XA).array()]).optional(),updateMany:e.union([e.lazy(()=>eC),e.lazy(()=>eC).array()]).optional(),deleteMany:e.union([e.lazy(()=>hl),e.lazy(()=>hl).array()]).optional()}).strict(),gr=e.object({create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)]).optional(),connectOrCreate:e.lazy(()=>rM).optional(),upsert:e.lazy(()=>A2).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>zt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>zt)]).optional(),connect:e.lazy(()=>so).optional(),update:e.union([e.lazy(()=>C2),e.lazy(()=>bM),e.lazy(()=>IM)]).optional()}).strict(),Sr=e.object({create:e.union([e.lazy(()=>fc),e.lazy(()=>fc).array(),e.lazy(()=>jc),e.lazy(()=>jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qm),e.lazy(()=>Qm).array()]).optional(),upsert:e.union([e.lazy(()=>tC),e.lazy(()=>tC).array()]).optional(),createMany:e.lazy(()=>lM).optional(),set:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),disconnect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),delete:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),update:e.union([e.lazy(()=>aC),e.lazy(()=>aC).array()]).optional(),updateMany:e.union([e.lazy(()=>nC),e.lazy(()=>nC).array()]).optional(),deleteMany:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional()}).strict(),vr=e.object({create:e.union([e.lazy(()=>Mc),e.lazy(()=>Mc).array(),e.lazy(()=>Oc),e.lazy(()=>Oc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gm),e.lazy(()=>Gm).array()]).optional(),upsert:e.union([e.lazy(()=>oC),e.lazy(()=>oC).array()]).optional(),createMany:e.lazy(()=>cM).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>iC),e.lazy(()=>iC).array()]).optional(),updateMany:e.union([e.lazy(()=>rC),e.lazy(()=>rC).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),Ar=e.object({create:e.union([e.lazy(()=>wc),e.lazy(()=>wc).array(),e.lazy(()=>Tc),e.lazy(()=>Tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ym),e.lazy(()=>Ym).array()]).optional(),upsert:e.union([e.lazy(()=>lC),e.lazy(()=>lC).array()]).optional(),createMany:e.lazy(()=>pM).optional(),set:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),disconnect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),delete:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),connect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),update:e.union([e.lazy(()=>cC),e.lazy(()=>cC).array()]).optional(),updateMany:e.union([e.lazy(()=>pC),e.lazy(()=>pC).array()]).optional(),deleteMany:e.union([e.lazy(()=>bl),e.lazy(()=>bl).array()]).optional()}).strict(),Cr=e.object({create:e.union([e.lazy(()=>Pc),e.lazy(()=>Pc).array(),e.lazy(()=>Nc),e.lazy(()=>Nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jm),e.lazy(()=>Jm).array()]).optional(),upsert:e.union([e.lazy(()=>uC),e.lazy(()=>uC).array()]).optional(),createMany:e.lazy(()=>uM).optional(),set:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),disconnect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),delete:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),update:e.union([e.lazy(()=>sC),e.lazy(()=>sC).array()]).optional(),updateMany:e.union([e.lazy(()=>yC),e.lazy(()=>yC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional()}).strict(),Wr=e.object({create:e.union([e.lazy(()=>Bc),e.lazy(()=>Bc).array(),e.lazy(()=>_c),e.lazy(()=>_c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Km),e.lazy(()=>Km).array()]).optional(),upsert:e.union([e.lazy(()=>dC),e.lazy(()=>dC).array()]).optional(),createMany:e.lazy(()=>sM).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>mC),e.lazy(()=>mC).array()]).optional(),updateMany:e.union([e.lazy(()=>zC),e.lazy(()=>zC).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),Ur=e.object({create:e.union([e.lazy(()=>qc),e.lazy(()=>qc).array(),e.lazy(()=>Fc),e.lazy(()=>Fc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xm),e.lazy(()=>Xm).array()]).optional(),upsert:e.union([e.lazy(()=>hC),e.lazy(()=>hC).array()]).optional(),createMany:e.lazy(()=>yM).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>bC),e.lazy(()=>bC).array()]).optional(),updateMany:e.union([e.lazy(()=>IC),e.lazy(()=>IC).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),kr=e.object({create:e.union([e.lazy(()=>Ec),e.lazy(()=>Ec).array(),e.lazy(()=>Dc),e.lazy(()=>Dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ez),e.lazy(()=>ez).array()]).optional(),upsert:e.union([e.lazy(()=>gC),e.lazy(()=>gC).array()]).optional(),createMany:e.lazy(()=>dM).optional(),set:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),disconnect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),delete:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),update:e.union([e.lazy(()=>SC),e.lazy(()=>SC).array()]).optional(),updateMany:e.union([e.lazy(()=>vC),e.lazy(()=>vC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional()}).strict(),Rr=e.object({create:e.union([e.lazy(()=>xc),e.lazy(()=>xc).array(),e.lazy(()=>Vc),e.lazy(()=>Vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>tz),e.lazy(()=>tz).array()]).optional(),upsert:e.union([e.lazy(()=>AC),e.lazy(()=>AC).array()]).optional(),createMany:e.lazy(()=>mM).optional(),set:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),disconnect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),delete:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),connect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),update:e.union([e.lazy(()=>CC),e.lazy(()=>CC).array()]).optional(),updateMany:e.union([e.lazy(()=>WC),e.lazy(()=>WC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Il),e.lazy(()=>Il).array()]).optional()}).strict(),fr=e.object({create:e.union([e.lazy(()=>Hc),e.lazy(()=>Hc).array(),e.lazy(()=>Lc),e.lazy(()=>Lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>az),e.lazy(()=>az).array()]).optional(),upsert:e.union([e.lazy(()=>UC),e.lazy(()=>UC).array()]).optional(),createMany:e.lazy(()=>zM).optional(),set:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),disconnect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),delete:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),connect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),update:e.union([e.lazy(()=>kC),e.lazy(()=>kC).array()]).optional(),updateMany:e.union([e.lazy(()=>RC),e.lazy(()=>RC).array()]).optional(),deleteMany:e.union([e.lazy(()=>gl),e.lazy(()=>gl).array()]).optional()}).strict(),jr=e.object({create:e.union([e.lazy(()=>Zc),e.lazy(()=>Zc).array(),e.lazy(()=>$c),e.lazy(()=>$c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nz),e.lazy(()=>nz).array()]).optional(),upsert:e.union([e.lazy(()=>fC),e.lazy(()=>fC).array()]).optional(),createMany:e.lazy(()=>hM).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>jC),e.lazy(()=>jC).array()]).optional(),updateMany:e.union([e.lazy(()=>MC),e.lazy(()=>MC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),Mr=e.object({create:e.union([e.lazy(()=>Wc),e.lazy(()=>Wc).array(),e.lazy(()=>Uc),e.lazy(()=>Uc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zm),e.lazy(()=>Zm).array()]).optional(),upsert:e.union([e.lazy(()=>GA),e.lazy(()=>GA).array()]).optional(),createMany:e.lazy(()=>oM).optional(),set:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),disconnect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),delete:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),connect:e.union([e.lazy(()=>O),e.lazy(()=>O).array()]).optional(),update:e.union([e.lazy(()=>YA),e.lazy(()=>YA).array()]).optional(),updateMany:e.union([e.lazy(()=>JA),e.lazy(()=>JA).array()]).optional(),deleteMany:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional()}).strict(),Or=e.object({create:e.union([e.lazy(()=>kc),e.lazy(()=>kc).array(),e.lazy(()=>Rc),e.lazy(()=>Rc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$m),e.lazy(()=>$m).array()]).optional(),upsert:e.union([e.lazy(()=>KA),e.lazy(()=>KA).array()]).optional(),createMany:e.lazy(()=>iM).optional(),set:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),disconnect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),delete:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),connect:e.union([e.lazy(()=>nt),e.lazy(()=>nt).array()]).optional(),update:e.union([e.lazy(()=>XA),e.lazy(()=>XA).array()]).optional(),updateMany:e.union([e.lazy(()=>eC),e.lazy(()=>eC).array()]).optional(),deleteMany:e.union([e.lazy(()=>hl),e.lazy(()=>hl).array()]).optional()}).strict(),wr=e.object({create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)]).optional(),connectOrCreate:e.lazy(()=>rM).optional(),upsert:e.lazy(()=>A2).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>zt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>zt)]).optional(),connect:e.lazy(()=>so).optional(),update:e.union([e.lazy(()=>C2),e.lazy(()=>bM),e.lazy(()=>IM)]).optional()}).strict(),Tr=e.object({create:e.union([e.lazy(()=>fc),e.lazy(()=>fc).array(),e.lazy(()=>jc),e.lazy(()=>jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qm),e.lazy(()=>Qm).array()]).optional(),upsert:e.union([e.lazy(()=>tC),e.lazy(()=>tC).array()]).optional(),createMany:e.lazy(()=>lM).optional(),set:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),disconnect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),delete:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),update:e.union([e.lazy(()=>aC),e.lazy(()=>aC).array()]).optional(),updateMany:e.union([e.lazy(()=>nC),e.lazy(()=>nC).array()]).optional(),deleteMany:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional()}).strict(),Pr=e.object({create:e.union([e.lazy(()=>Mc),e.lazy(()=>Mc).array(),e.lazy(()=>Oc),e.lazy(()=>Oc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gm),e.lazy(()=>Gm).array()]).optional(),upsert:e.union([e.lazy(()=>oC),e.lazy(()=>oC).array()]).optional(),createMany:e.lazy(()=>cM).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>iC),e.lazy(()=>iC).array()]).optional(),updateMany:e.union([e.lazy(()=>rC),e.lazy(()=>rC).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),Nr=e.object({create:e.union([e.lazy(()=>wc),e.lazy(()=>wc).array(),e.lazy(()=>Tc),e.lazy(()=>Tc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ym),e.lazy(()=>Ym).array()]).optional(),upsert:e.union([e.lazy(()=>lC),e.lazy(()=>lC).array()]).optional(),createMany:e.lazy(()=>pM).optional(),set:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),disconnect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),delete:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),connect:e.union([e.lazy(()=>Xe),e.lazy(()=>Xe).array()]).optional(),update:e.union([e.lazy(()=>cC),e.lazy(()=>cC).array()]).optional(),updateMany:e.union([e.lazy(()=>pC),e.lazy(()=>pC).array()]).optional(),deleteMany:e.union([e.lazy(()=>bl),e.lazy(()=>bl).array()]).optional()}).strict(),Br=e.object({create:e.union([e.lazy(()=>Pc),e.lazy(()=>Pc).array(),e.lazy(()=>Nc),e.lazy(()=>Nc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jm),e.lazy(()=>Jm).array()]).optional(),upsert:e.union([e.lazy(()=>uC),e.lazy(()=>uC).array()]).optional(),createMany:e.lazy(()=>uM).optional(),set:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),disconnect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),delete:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),update:e.union([e.lazy(()=>sC),e.lazy(()=>sC).array()]).optional(),updateMany:e.union([e.lazy(()=>yC),e.lazy(()=>yC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional()}).strict(),_r=e.object({create:e.union([e.lazy(()=>Bc),e.lazy(()=>Bc).array(),e.lazy(()=>_c),e.lazy(()=>_c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Km),e.lazy(()=>Km).array()]).optional(),upsert:e.union([e.lazy(()=>dC),e.lazy(()=>dC).array()]).optional(),createMany:e.lazy(()=>sM).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>mC),e.lazy(()=>mC).array()]).optional(),updateMany:e.union([e.lazy(()=>zC),e.lazy(()=>zC).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),qr=e.object({create:e.union([e.lazy(()=>qc),e.lazy(()=>qc).array(),e.lazy(()=>Fc),e.lazy(()=>Fc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xm),e.lazy(()=>Xm).array()]).optional(),upsert:e.union([e.lazy(()=>hC),e.lazy(()=>hC).array()]).optional(),createMany:e.lazy(()=>yM).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>bC),e.lazy(()=>bC).array()]).optional(),updateMany:e.union([e.lazy(()=>IC),e.lazy(()=>IC).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),Fr=e.object({create:e.union([e.lazy(()=>Ec),e.lazy(()=>Ec).array(),e.lazy(()=>Dc),e.lazy(()=>Dc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ez),e.lazy(()=>ez).array()]).optional(),upsert:e.union([e.lazy(()=>gC),e.lazy(()=>gC).array()]).optional(),createMany:e.lazy(()=>dM).optional(),set:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),disconnect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),delete:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),update:e.union([e.lazy(()=>SC),e.lazy(()=>SC).array()]).optional(),updateMany:e.union([e.lazy(()=>vC),e.lazy(()=>vC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional()}).strict(),Er=e.object({create:e.union([e.lazy(()=>xc),e.lazy(()=>xc).array(),e.lazy(()=>Vc),e.lazy(()=>Vc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>tz),e.lazy(()=>tz).array()]).optional(),upsert:e.union([e.lazy(()=>AC),e.lazy(()=>AC).array()]).optional(),createMany:e.lazy(()=>mM).optional(),set:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),disconnect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),delete:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),connect:e.union([e.lazy(()=>Ye),e.lazy(()=>Ye).array()]).optional(),update:e.union([e.lazy(()=>CC),e.lazy(()=>CC).array()]).optional(),updateMany:e.union([e.lazy(()=>WC),e.lazy(()=>WC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Il),e.lazy(()=>Il).array()]).optional()}).strict(),Dr=e.object({create:e.union([e.lazy(()=>Hc),e.lazy(()=>Hc).array(),e.lazy(()=>Lc),e.lazy(()=>Lc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>az),e.lazy(()=>az).array()]).optional(),upsert:e.union([e.lazy(()=>UC),e.lazy(()=>UC).array()]).optional(),createMany:e.lazy(()=>zM).optional(),set:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),disconnect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),delete:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),connect:e.union([e.lazy(()=>Je),e.lazy(()=>Je).array()]).optional(),update:e.union([e.lazy(()=>kC),e.lazy(()=>kC).array()]).optional(),updateMany:e.union([e.lazy(()=>RC),e.lazy(()=>RC).array()]).optional(),deleteMany:e.union([e.lazy(()=>gl),e.lazy(()=>gl).array()]).optional()}).strict(),xr=e.object({create:e.union([e.lazy(()=>Zc),e.lazy(()=>Zc).array(),e.lazy(()=>$c),e.lazy(()=>$c).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nz),e.lazy(()=>nz).array()]).optional(),upsert:e.union([e.lazy(()=>fC),e.lazy(()=>fC).array()]).optional(),createMany:e.lazy(()=>hM).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>jC),e.lazy(()=>jC).array()]).optional(),updateMany:e.union([e.lazy(()=>MC),e.lazy(()=>MC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),Ga=e.object({create:e.union([e.lazy(()=>gM),e.lazy(()=>SM)]).optional(),connectOrCreate:e.lazy(()=>W2).optional(),connect:e.lazy(()=>Bi).optional()}).strict(),Ya=e.object({create:e.union([e.lazy(()=>vM),e.lazy(()=>AM)]).optional(),connectOrCreate:e.lazy(()=>U2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),Ja=e.object({create:e.union([e.lazy(()=>Qc),e.lazy(()=>Qc).array(),e.lazy(()=>Gc),e.lazy(()=>Gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oz),e.lazy(()=>oz).array()]).optional(),createMany:e.lazy(()=>CM).optional(),connect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional()}).strict(),Ka=e.object({create:e.union([e.lazy(()=>Yc),e.lazy(()=>Yc).array(),e.lazy(()=>Jc),e.lazy(()=>Jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>iz),e.lazy(()=>iz).array()]).optional(),createMany:e.lazy(()=>WM).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),Xa=e.object({create:e.union([e.lazy(()=>Kc),e.lazy(()=>Kc).array(),e.lazy(()=>Xc),e.lazy(()=>Xc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>rz),e.lazy(()=>rz).array()]).optional(),createMany:e.lazy(()=>UM).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),en=e.object({create:e.union([e.lazy(()=>ep),e.lazy(()=>ep).array(),e.lazy(()=>tp),e.lazy(()=>tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>lz),e.lazy(()=>lz).array()]).optional(),createMany:e.lazy(()=>kM).optional(),connect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional()}).strict(),tn=e.object({create:e.union([e.lazy(()=>ap),e.lazy(()=>ap).array(),e.lazy(()=>np),e.lazy(()=>np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>cz),e.lazy(()=>cz).array()]).optional(),createMany:e.lazy(()=>RM).optional(),connect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional()}).strict(),an=e.object({create:e.union([e.lazy(()=>op),e.lazy(()=>op).array(),e.lazy(()=>ip),e.lazy(()=>ip).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>pz),e.lazy(()=>pz).array()]).optional(),createMany:e.lazy(()=>fM).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),nn=e.object({create:e.union([e.lazy(()=>rp),e.lazy(()=>rp).array(),e.lazy(()=>lp),e.lazy(()=>lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>uz),e.lazy(()=>uz).array()]).optional(),createMany:e.lazy(()=>jM).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),on=e.object({create:e.union([e.lazy(()=>cp),e.lazy(()=>cp).array(),e.lazy(()=>pp),e.lazy(()=>pp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>sz),e.lazy(()=>sz).array()]).optional(),createMany:e.lazy(()=>MM).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional()}).strict(),rn=e.object({create:e.union([e.lazy(()=>up),e.lazy(()=>up).array(),e.lazy(()=>sp),e.lazy(()=>sp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>yz),e.lazy(()=>yz).array()]).optional(),createMany:e.lazy(()=>OM).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),ln=e.object({create:e.union([e.lazy(()=>yp),e.lazy(()=>yp).array(),e.lazy(()=>dp),e.lazy(()=>dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>dz),e.lazy(()=>dz).array()]).optional(),createMany:e.lazy(()=>wM).optional(),connect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional()}).strict(),cn=e.object({create:e.union([e.lazy(()=>mp),e.lazy(()=>mp).array(),e.lazy(()=>zp),e.lazy(()=>zp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>mz),e.lazy(()=>mz).array()]).optional(),createMany:e.lazy(()=>TM).optional(),connect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional()}).strict(),pn=e.object({create:e.union([e.lazy(()=>hp),e.lazy(()=>hp).array(),e.lazy(()=>bp),e.lazy(()=>bp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>zz),e.lazy(()=>zz).array()]).optional(),createMany:e.lazy(()=>PM).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),un=e.object({create:e.union([e.lazy(()=>Ip),e.lazy(()=>Ip).array(),e.lazy(()=>gp),e.lazy(()=>gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>hz),e.lazy(()=>hz).array()]).optional(),createMany:e.lazy(()=>NM).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional()}).strict(),sn=e.object({create:e.union([e.lazy(()=>Sp),e.lazy(()=>Sp).array(),e.lazy(()=>vp),e.lazy(()=>vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>bz),e.lazy(()=>bz).array()]).optional(),createMany:e.lazy(()=>BM).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),yn=e.object({create:e.union([e.lazy(()=>Ap),e.lazy(()=>Ap).array(),e.lazy(()=>Cp),e.lazy(()=>Cp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Iz),e.lazy(()=>Iz).array()]).optional(),createMany:e.lazy(()=>_M).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),dn=e.object({create:e.union([e.lazy(()=>Wp),e.lazy(()=>Wp).array(),e.lazy(()=>Up),e.lazy(()=>Up).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>gz),e.lazy(()=>gz).array()]).optional(),createMany:e.lazy(()=>qM).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),mn=e.object({create:e.union([e.lazy(()=>Qc),e.lazy(()=>Qc).array(),e.lazy(()=>Gc),e.lazy(()=>Gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oz),e.lazy(()=>oz).array()]).optional(),createMany:e.lazy(()=>CM).optional(),connect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional()}).strict(),zn=e.object({create:e.union([e.lazy(()=>Yc),e.lazy(()=>Yc).array(),e.lazy(()=>Jc),e.lazy(()=>Jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>iz),e.lazy(()=>iz).array()]).optional(),createMany:e.lazy(()=>WM).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),hn=e.object({create:e.union([e.lazy(()=>Kc),e.lazy(()=>Kc).array(),e.lazy(()=>Xc),e.lazy(()=>Xc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>rz),e.lazy(()=>rz).array()]).optional(),createMany:e.lazy(()=>UM).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),bn=e.object({create:e.union([e.lazy(()=>ep),e.lazy(()=>ep).array(),e.lazy(()=>tp),e.lazy(()=>tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>lz),e.lazy(()=>lz).array()]).optional(),createMany:e.lazy(()=>kM).optional(),connect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional()}).strict(),In=e.object({create:e.union([e.lazy(()=>ap),e.lazy(()=>ap).array(),e.lazy(()=>np),e.lazy(()=>np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>cz),e.lazy(()=>cz).array()]).optional(),createMany:e.lazy(()=>RM).optional(),connect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional()}).strict(),gn=e.object({create:e.union([e.lazy(()=>op),e.lazy(()=>op).array(),e.lazy(()=>ip),e.lazy(()=>ip).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>pz),e.lazy(()=>pz).array()]).optional(),createMany:e.lazy(()=>fM).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),Sn=e.object({create:e.union([e.lazy(()=>rp),e.lazy(()=>rp).array(),e.lazy(()=>lp),e.lazy(()=>lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>uz),e.lazy(()=>uz).array()]).optional(),createMany:e.lazy(()=>jM).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),vn=e.object({create:e.union([e.lazy(()=>cp),e.lazy(()=>cp).array(),e.lazy(()=>pp),e.lazy(()=>pp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>sz),e.lazy(()=>sz).array()]).optional(),createMany:e.lazy(()=>MM).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional()}).strict(),An=e.object({create:e.union([e.lazy(()=>up),e.lazy(()=>up).array(),e.lazy(()=>sp),e.lazy(()=>sp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>yz),e.lazy(()=>yz).array()]).optional(),createMany:e.lazy(()=>OM).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),Cn=e.object({create:e.union([e.lazy(()=>yp),e.lazy(()=>yp).array(),e.lazy(()=>dp),e.lazy(()=>dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>dz),e.lazy(()=>dz).array()]).optional(),createMany:e.lazy(()=>wM).optional(),connect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional()}).strict(),Wn=e.object({create:e.union([e.lazy(()=>mp),e.lazy(()=>mp).array(),e.lazy(()=>zp),e.lazy(()=>zp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>mz),e.lazy(()=>mz).array()]).optional(),createMany:e.lazy(()=>TM).optional(),connect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional()}).strict(),Un=e.object({create:e.union([e.lazy(()=>hp),e.lazy(()=>hp).array(),e.lazy(()=>bp),e.lazy(()=>bp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>zz),e.lazy(()=>zz).array()]).optional(),createMany:e.lazy(()=>PM).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),kn=e.object({create:e.union([e.lazy(()=>Ip),e.lazy(()=>Ip).array(),e.lazy(()=>gp),e.lazy(()=>gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>hz),e.lazy(()=>hz).array()]).optional(),createMany:e.lazy(()=>NM).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional()}).strict(),Rn=e.object({create:e.union([e.lazy(()=>Sp),e.lazy(()=>Sp).array(),e.lazy(()=>vp),e.lazy(()=>vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>bz),e.lazy(()=>bz).array()]).optional(),createMany:e.lazy(()=>BM).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),fn=e.object({create:e.union([e.lazy(()=>Ap),e.lazy(()=>Ap).array(),e.lazy(()=>Cp),e.lazy(()=>Cp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Iz),e.lazy(()=>Iz).array()]).optional(),createMany:e.lazy(()=>_M).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),jn=e.object({create:e.union([e.lazy(()=>Wp),e.lazy(()=>Wp).array(),e.lazy(()=>Up),e.lazy(()=>Up).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>gz),e.lazy(()=>gz).array()]).optional(),createMany:e.lazy(()=>qM).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),Fe=e.object({set:e.lazy(()=>M).optional()}).strict(),Mn=e.object({create:e.union([e.lazy(()=>gM),e.lazy(()=>SM)]).optional(),connectOrCreate:e.lazy(()=>W2).optional(),upsert:e.lazy(()=>eee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Rt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Rt)]).optional(),connect:e.lazy(()=>Bi).optional(),update:e.union([e.lazy(()=>tee),e.lazy(()=>J_),e.lazy(()=>K_)]).optional()}).strict(),On=e.object({create:e.union([e.lazy(()=>vM),e.lazy(()=>AM)]).optional(),connectOrCreate:e.lazy(()=>U2).optional(),upsert:e.lazy(()=>aee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>x)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>x)]).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>nee),e.lazy(()=>X_),e.lazy(()=>eq)]).optional()}).strict(),wn=e.object({create:e.union([e.lazy(()=>Qc),e.lazy(()=>Qc).array(),e.lazy(()=>Gc),e.lazy(()=>Gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oz),e.lazy(()=>oz).array()]).optional(),upsert:e.union([e.lazy(()=>OC),e.lazy(()=>OC).array()]).optional(),createMany:e.lazy(()=>CM).optional(),set:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),disconnect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),delete:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),connect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),update:e.union([e.lazy(()=>wC),e.lazy(()=>wC).array()]).optional(),updateMany:e.union([e.lazy(()=>TC),e.lazy(()=>TC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Sl),e.lazy(()=>Sl).array()]).optional()}).strict(),Tn=e.object({create:e.union([e.lazy(()=>Yc),e.lazy(()=>Yc).array(),e.lazy(()=>Jc),e.lazy(()=>Jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>iz),e.lazy(()=>iz).array()]).optional(),upsert:e.union([e.lazy(()=>PC),e.lazy(()=>PC).array()]).optional(),createMany:e.lazy(()=>WM).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>NC),e.lazy(()=>NC).array()]).optional(),updateMany:e.union([e.lazy(()=>BC),e.lazy(()=>BC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),Pn=e.object({create:e.union([e.lazy(()=>Kc),e.lazy(()=>Kc).array(),e.lazy(()=>Xc),e.lazy(()=>Xc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>rz),e.lazy(()=>rz).array()]).optional(),upsert:e.union([e.lazy(()=>_C),e.lazy(()=>_C).array()]).optional(),createMany:e.lazy(()=>UM).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>qC),e.lazy(()=>qC).array()]).optional(),updateMany:e.union([e.lazy(()=>FC),e.lazy(()=>FC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),Nn=e.object({create:e.union([e.lazy(()=>ep),e.lazy(()=>ep).array(),e.lazy(()=>tp),e.lazy(()=>tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>lz),e.lazy(()=>lz).array()]).optional(),upsert:e.union([e.lazy(()=>EC),e.lazy(()=>EC).array()]).optional(),createMany:e.lazy(()=>kM).optional(),set:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),disconnect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),delete:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),connect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),update:e.union([e.lazy(()=>DC),e.lazy(()=>DC).array()]).optional(),updateMany:e.union([e.lazy(()=>xC),e.lazy(()=>xC).array()]).optional(),deleteMany:e.union([e.lazy(()=>vl),e.lazy(()=>vl).array()]).optional()}).strict(),Bn=e.object({create:e.union([e.lazy(()=>ap),e.lazy(()=>ap).array(),e.lazy(()=>np),e.lazy(()=>np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>cz),e.lazy(()=>cz).array()]).optional(),upsert:e.union([e.lazy(()=>VC),e.lazy(()=>VC).array()]).optional(),createMany:e.lazy(()=>RM).optional(),set:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),disconnect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),delete:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),connect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),update:e.union([e.lazy(()=>HC),e.lazy(()=>HC).array()]).optional(),updateMany:e.union([e.lazy(()=>LC),e.lazy(()=>LC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Al),e.lazy(()=>Al).array()]).optional()}).strict(),_n=e.object({create:e.union([e.lazy(()=>op),e.lazy(()=>op).array(),e.lazy(()=>ip),e.lazy(()=>ip).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>pz),e.lazy(()=>pz).array()]).optional(),upsert:e.union([e.lazy(()=>ZC),e.lazy(()=>ZC).array()]).optional(),createMany:e.lazy(()=>fM).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>$C),e.lazy(()=>$C).array()]).optional(),updateMany:e.union([e.lazy(()=>QC),e.lazy(()=>QC).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),qn=e.object({create:e.union([e.lazy(()=>rp),e.lazy(()=>rp).array(),e.lazy(()=>lp),e.lazy(()=>lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>uz),e.lazy(()=>uz).array()]).optional(),upsert:e.union([e.lazy(()=>GC),e.lazy(()=>GC).array()]).optional(),createMany:e.lazy(()=>jM).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>YC),e.lazy(()=>YC).array()]).optional(),updateMany:e.union([e.lazy(()=>JC),e.lazy(()=>JC).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),Fn=e.object({create:e.union([e.lazy(()=>cp),e.lazy(()=>cp).array(),e.lazy(()=>pp),e.lazy(()=>pp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>sz),e.lazy(()=>sz).array()]).optional(),upsert:e.union([e.lazy(()=>KC),e.lazy(()=>KC).array()]).optional(),createMany:e.lazy(()=>MM).optional(),set:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),disconnect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),delete:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),update:e.union([e.lazy(()=>XC),e.lazy(()=>XC).array()]).optional(),updateMany:e.union([e.lazy(()=>eW),e.lazy(()=>eW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional()}).strict(),En=e.object({create:e.union([e.lazy(()=>up),e.lazy(()=>up).array(),e.lazy(()=>sp),e.lazy(()=>sp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>yz),e.lazy(()=>yz).array()]).optional(),upsert:e.union([e.lazy(()=>tW),e.lazy(()=>tW).array()]).optional(),createMany:e.lazy(()=>OM).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>aW),e.lazy(()=>aW).array()]).optional(),updateMany:e.union([e.lazy(()=>nW),e.lazy(()=>nW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),Dn=e.object({create:e.union([e.lazy(()=>yp),e.lazy(()=>yp).array(),e.lazy(()=>dp),e.lazy(()=>dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>dz),e.lazy(()=>dz).array()]).optional(),upsert:e.union([e.lazy(()=>oW),e.lazy(()=>oW).array()]).optional(),createMany:e.lazy(()=>wM).optional(),set:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),disconnect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),delete:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),connect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),update:e.union([e.lazy(()=>iW),e.lazy(()=>iW).array()]).optional(),updateMany:e.union([e.lazy(()=>rW),e.lazy(()=>rW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Cl),e.lazy(()=>Cl).array()]).optional()}).strict(),xn=e.object({create:e.union([e.lazy(()=>mp),e.lazy(()=>mp).array(),e.lazy(()=>zp),e.lazy(()=>zp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>mz),e.lazy(()=>mz).array()]).optional(),upsert:e.union([e.lazy(()=>lW),e.lazy(()=>lW).array()]).optional(),createMany:e.lazy(()=>TM).optional(),set:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),disconnect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),delete:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),connect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),update:e.union([e.lazy(()=>cW),e.lazy(()=>cW).array()]).optional(),updateMany:e.union([e.lazy(()=>pW),e.lazy(()=>pW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wl),e.lazy(()=>Wl).array()]).optional()}).strict(),Vn=e.object({create:e.union([e.lazy(()=>hp),e.lazy(()=>hp).array(),e.lazy(()=>bp),e.lazy(()=>bp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>zz),e.lazy(()=>zz).array()]).optional(),upsert:e.union([e.lazy(()=>uW),e.lazy(()=>uW).array()]).optional(),createMany:e.lazy(()=>PM).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>sW),e.lazy(()=>sW).array()]).optional(),updateMany:e.union([e.lazy(()=>yW),e.lazy(()=>yW).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),Hn=e.object({create:e.union([e.lazy(()=>Ip),e.lazy(()=>Ip).array(),e.lazy(()=>gp),e.lazy(()=>gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>hz),e.lazy(()=>hz).array()]).optional(),upsert:e.union([e.lazy(()=>dW),e.lazy(()=>dW).array()]).optional(),createMany:e.lazy(()=>NM).optional(),set:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),disconnect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),delete:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),update:e.union([e.lazy(()=>mW),e.lazy(()=>mW).array()]).optional(),updateMany:e.union([e.lazy(()=>zW),e.lazy(()=>zW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional()}).strict(),Ln=e.object({create:e.union([e.lazy(()=>Sp),e.lazy(()=>Sp).array(),e.lazy(()=>vp),e.lazy(()=>vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>bz),e.lazy(()=>bz).array()]).optional(),upsert:e.union([e.lazy(()=>hW),e.lazy(()=>hW).array()]).optional(),createMany:e.lazy(()=>BM).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>bW),e.lazy(()=>bW).array()]).optional(),updateMany:e.union([e.lazy(()=>IW),e.lazy(()=>IW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),Zn=e.object({create:e.union([e.lazy(()=>Ap),e.lazy(()=>Ap).array(),e.lazy(()=>Cp),e.lazy(()=>Cp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Iz),e.lazy(()=>Iz).array()]).optional(),upsert:e.union([e.lazy(()=>gW),e.lazy(()=>gW).array()]).optional(),createMany:e.lazy(()=>_M).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>SW),e.lazy(()=>SW).array()]).optional(),updateMany:e.union([e.lazy(()=>vW),e.lazy(()=>vW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),$n=e.object({create:e.union([e.lazy(()=>Wp),e.lazy(()=>Wp).array(),e.lazy(()=>Up),e.lazy(()=>Up).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>gz),e.lazy(()=>gz).array()]).optional(),upsert:e.union([e.lazy(()=>AW),e.lazy(()=>AW).array()]).optional(),createMany:e.lazy(()=>qM).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>CW),e.lazy(()=>CW).array()]).optional(),updateMany:e.union([e.lazy(()=>WW),e.lazy(()=>WW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),Qn=e.object({create:e.union([e.lazy(()=>Qc),e.lazy(()=>Qc).array(),e.lazy(()=>Gc),e.lazy(()=>Gc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oz),e.lazy(()=>oz).array()]).optional(),upsert:e.union([e.lazy(()=>OC),e.lazy(()=>OC).array()]).optional(),createMany:e.lazy(()=>CM).optional(),set:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),disconnect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),delete:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),connect:e.union([e.lazy(()=>ot),e.lazy(()=>ot).array()]).optional(),update:e.union([e.lazy(()=>wC),e.lazy(()=>wC).array()]).optional(),updateMany:e.union([e.lazy(()=>TC),e.lazy(()=>TC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Sl),e.lazy(()=>Sl).array()]).optional()}).strict(),Gn=e.object({create:e.union([e.lazy(()=>Yc),e.lazy(()=>Yc).array(),e.lazy(()=>Jc),e.lazy(()=>Jc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>iz),e.lazy(()=>iz).array()]).optional(),upsert:e.union([e.lazy(()=>PC),e.lazy(()=>PC).array()]).optional(),createMany:e.lazy(()=>WM).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>NC),e.lazy(()=>NC).array()]).optional(),updateMany:e.union([e.lazy(()=>BC),e.lazy(()=>BC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),Yn=e.object({create:e.union([e.lazy(()=>Kc),e.lazy(()=>Kc).array(),e.lazy(()=>Xc),e.lazy(()=>Xc).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>rz),e.lazy(()=>rz).array()]).optional(),upsert:e.union([e.lazy(()=>_C),e.lazy(()=>_C).array()]).optional(),createMany:e.lazy(()=>UM).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>qC),e.lazy(()=>qC).array()]).optional(),updateMany:e.union([e.lazy(()=>FC),e.lazy(()=>FC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),Jn=e.object({create:e.union([e.lazy(()=>ep),e.lazy(()=>ep).array(),e.lazy(()=>tp),e.lazy(()=>tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>lz),e.lazy(()=>lz).array()]).optional(),upsert:e.union([e.lazy(()=>EC),e.lazy(()=>EC).array()]).optional(),createMany:e.lazy(()=>kM).optional(),set:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),disconnect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),delete:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),connect:e.union([e.lazy(()=>At),e.lazy(()=>At).array()]).optional(),update:e.union([e.lazy(()=>DC),e.lazy(()=>DC).array()]).optional(),updateMany:e.union([e.lazy(()=>xC),e.lazy(()=>xC).array()]).optional(),deleteMany:e.union([e.lazy(()=>vl),e.lazy(()=>vl).array()]).optional()}).strict(),Kn=e.object({create:e.union([e.lazy(()=>ap),e.lazy(()=>ap).array(),e.lazy(()=>np),e.lazy(()=>np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>cz),e.lazy(()=>cz).array()]).optional(),upsert:e.union([e.lazy(()=>VC),e.lazy(()=>VC).array()]).optional(),createMany:e.lazy(()=>RM).optional(),set:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),disconnect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),delete:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),connect:e.union([e.lazy(()=>Ct),e.lazy(()=>Ct).array()]).optional(),update:e.union([e.lazy(()=>HC),e.lazy(()=>HC).array()]).optional(),updateMany:e.union([e.lazy(()=>LC),e.lazy(()=>LC).array()]).optional(),deleteMany:e.union([e.lazy(()=>Al),e.lazy(()=>Al).array()]).optional()}).strict(),Xn=e.object({create:e.union([e.lazy(()=>op),e.lazy(()=>op).array(),e.lazy(()=>ip),e.lazy(()=>ip).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>pz),e.lazy(()=>pz).array()]).optional(),upsert:e.union([e.lazy(()=>ZC),e.lazy(()=>ZC).array()]).optional(),createMany:e.lazy(()=>fM).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>$C),e.lazy(()=>$C).array()]).optional(),updateMany:e.union([e.lazy(()=>QC),e.lazy(()=>QC).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),eo=e.object({create:e.union([e.lazy(()=>rp),e.lazy(()=>rp).array(),e.lazy(()=>lp),e.lazy(()=>lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>uz),e.lazy(()=>uz).array()]).optional(),upsert:e.union([e.lazy(()=>GC),e.lazy(()=>GC).array()]).optional(),createMany:e.lazy(()=>jM).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>YC),e.lazy(()=>YC).array()]).optional(),updateMany:e.union([e.lazy(()=>JC),e.lazy(()=>JC).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),to=e.object({create:e.union([e.lazy(()=>cp),e.lazy(()=>cp).array(),e.lazy(()=>pp),e.lazy(()=>pp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>sz),e.lazy(()=>sz).array()]).optional(),upsert:e.union([e.lazy(()=>KC),e.lazy(()=>KC).array()]).optional(),createMany:e.lazy(()=>MM).optional(),set:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),disconnect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),delete:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),connect:e.union([e.lazy(()=>pe),e.lazy(()=>pe).array()]).optional(),update:e.union([e.lazy(()=>XC),e.lazy(()=>XC).array()]).optional(),updateMany:e.union([e.lazy(()=>eW),e.lazy(()=>eW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional()}).strict(),ao=e.object({create:e.union([e.lazy(()=>up),e.lazy(()=>up).array(),e.lazy(()=>sp),e.lazy(()=>sp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>yz),e.lazy(()=>yz).array()]).optional(),upsert:e.union([e.lazy(()=>tW),e.lazy(()=>tW).array()]).optional(),createMany:e.lazy(()=>OM).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>aW),e.lazy(()=>aW).array()]).optional(),updateMany:e.union([e.lazy(()=>nW),e.lazy(()=>nW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),no=e.object({create:e.union([e.lazy(()=>yp),e.lazy(()=>yp).array(),e.lazy(()=>dp),e.lazy(()=>dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>dz),e.lazy(()=>dz).array()]).optional(),upsert:e.union([e.lazy(()=>oW),e.lazy(()=>oW).array()]).optional(),createMany:e.lazy(()=>wM).optional(),set:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),disconnect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),delete:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),connect:e.union([e.lazy(()=>gt),e.lazy(()=>gt).array()]).optional(),update:e.union([e.lazy(()=>iW),e.lazy(()=>iW).array()]).optional(),updateMany:e.union([e.lazy(()=>rW),e.lazy(()=>rW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Cl),e.lazy(()=>Cl).array()]).optional()}).strict(),oo=e.object({create:e.union([e.lazy(()=>mp),e.lazy(()=>mp).array(),e.lazy(()=>zp),e.lazy(()=>zp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>mz),e.lazy(()=>mz).array()]).optional(),upsert:e.union([e.lazy(()=>lW),e.lazy(()=>lW).array()]).optional(),createMany:e.lazy(()=>TM).optional(),set:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),disconnect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),delete:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),connect:e.union([e.lazy(()=>St),e.lazy(()=>St).array()]).optional(),update:e.union([e.lazy(()=>cW),e.lazy(()=>cW).array()]).optional(),updateMany:e.union([e.lazy(()=>pW),e.lazy(()=>pW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wl),e.lazy(()=>Wl).array()]).optional()}).strict(),io=e.object({create:e.union([e.lazy(()=>hp),e.lazy(()=>hp).array(),e.lazy(()=>bp),e.lazy(()=>bp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>zz),e.lazy(()=>zz).array()]).optional(),upsert:e.union([e.lazy(()=>uW),e.lazy(()=>uW).array()]).optional(),createMany:e.lazy(()=>PM).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>sW),e.lazy(()=>sW).array()]).optional(),updateMany:e.union([e.lazy(()=>yW),e.lazy(()=>yW).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),ro=e.object({create:e.union([e.lazy(()=>Ip),e.lazy(()=>Ip).array(),e.lazy(()=>gp),e.lazy(()=>gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>hz),e.lazy(()=>hz).array()]).optional(),upsert:e.union([e.lazy(()=>dW),e.lazy(()=>dW).array()]).optional(),createMany:e.lazy(()=>NM).optional(),set:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),disconnect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),delete:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),connect:e.union([e.lazy(()=>le),e.lazy(()=>le).array()]).optional(),update:e.union([e.lazy(()=>mW),e.lazy(()=>mW).array()]).optional(),updateMany:e.union([e.lazy(()=>zW),e.lazy(()=>zW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional()}).strict(),lo=e.object({create:e.union([e.lazy(()=>Sp),e.lazy(()=>Sp).array(),e.lazy(()=>vp),e.lazy(()=>vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>bz),e.lazy(()=>bz).array()]).optional(),upsert:e.union([e.lazy(()=>hW),e.lazy(()=>hW).array()]).optional(),createMany:e.lazy(()=>BM).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>bW),e.lazy(()=>bW).array()]).optional(),updateMany:e.union([e.lazy(()=>IW),e.lazy(()=>IW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),co=e.object({create:e.union([e.lazy(()=>Ap),e.lazy(()=>Ap).array(),e.lazy(()=>Cp),e.lazy(()=>Cp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Iz),e.lazy(()=>Iz).array()]).optional(),upsert:e.union([e.lazy(()=>gW),e.lazy(()=>gW).array()]).optional(),createMany:e.lazy(()=>_M).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>SW),e.lazy(()=>SW).array()]).optional(),updateMany:e.union([e.lazy(()=>vW),e.lazy(()=>vW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),po=e.object({create:e.union([e.lazy(()=>Wp),e.lazy(()=>Wp).array(),e.lazy(()=>Up),e.lazy(()=>Up).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>gz),e.lazy(()=>gz).array()]).optional(),upsert:e.union([e.lazy(()=>AW),e.lazy(()=>AW).array()]).optional(),createMany:e.lazy(()=>qM).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>CW),e.lazy(()=>CW).array()]).optional(),updateMany:e.union([e.lazy(()=>WW),e.lazy(()=>WW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),mK=e.object({create:e.union([e.lazy(()=>FM),e.lazy(()=>EM)]).optional(),connectOrCreate:e.lazy(()=>k2).optional(),connect:e.lazy(()=>O).optional()}).strict(),zK=e.object({create:e.union([e.lazy(()=>FM),e.lazy(()=>EM)]).optional(),connectOrCreate:e.lazy(()=>k2).optional(),upsert:e.lazy(()=>oee).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>iee),e.lazy(()=>tq),e.lazy(()=>aq)]).optional()}).strict(),R$=e.object({create:e.union([e.lazy(()=>kp),e.lazy(()=>kp).array(),e.lazy(()=>Rp),e.lazy(()=>Rp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Sz),e.lazy(()=>Sz).array()]).optional(),createMany:e.lazy(()=>DM).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),f$=e.object({create:e.union([e.lazy(()=>xM),e.lazy(()=>VM)]).optional(),connectOrCreate:e.lazy(()=>R2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),j$=e.object({create:e.union([e.lazy(()=>kp),e.lazy(()=>kp).array(),e.lazy(()=>Rp),e.lazy(()=>Rp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Sz),e.lazy(()=>Sz).array()]).optional(),createMany:e.lazy(()=>DM).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),M$=e.object({create:e.union([e.lazy(()=>kp),e.lazy(()=>kp).array(),e.lazy(()=>Rp),e.lazy(()=>Rp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Sz),e.lazy(()=>Sz).array()]).optional(),upsert:e.union([e.lazy(()=>UW),e.lazy(()=>UW).array()]).optional(),createMany:e.lazy(()=>DM).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>kW),e.lazy(()=>kW).array()]).optional(),updateMany:e.union([e.lazy(()=>RW),e.lazy(()=>RW).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),O$=e.object({create:e.union([e.lazy(()=>xM),e.lazy(()=>VM)]).optional(),connectOrCreate:e.lazy(()=>R2).optional(),upsert:e.lazy(()=>ree).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>x)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>x)]).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>lee),e.lazy(()=>nq),e.lazy(()=>oq)]).optional()}).strict(),w$=e.object({create:e.union([e.lazy(()=>kp),e.lazy(()=>kp).array(),e.lazy(()=>Rp),e.lazy(()=>Rp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Sz),e.lazy(()=>Sz).array()]).optional(),upsert:e.union([e.lazy(()=>UW),e.lazy(()=>UW).array()]).optional(),createMany:e.lazy(()=>DM).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>kW),e.lazy(()=>kW).array()]).optional(),updateMany:e.union([e.lazy(()=>RW),e.lazy(()=>RW).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),et=e.object({set:e.string().array()}).strict(),ho=e.object({create:e.union([e.lazy(()=>HM),e.lazy(()=>LM)]).optional(),connectOrCreate:e.lazy(()=>f2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),bo=e.object({create:e.union([e.lazy(()=>ZM),e.lazy(()=>$M)]).optional(),connectOrCreate:e.lazy(()=>j2).optional(),connect:e.lazy(()=>nt).optional()}).strict(),Io=e.object({create:e.union([e.lazy(()=>fp),e.lazy(()=>fp).array(),e.lazy(()=>jp),e.lazy(()=>jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>vz),e.lazy(()=>vz).array()]).optional(),createMany:e.lazy(()=>QM).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),go=e.object({create:e.union([e.lazy(()=>Mp),e.lazy(()=>Mp).array(),e.lazy(()=>Op),e.lazy(()=>Op).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Az),e.lazy(()=>Az).array()]).optional(),createMany:e.lazy(()=>GM).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional()}).strict(),So=e.object({create:e.union([e.lazy(()=>wp),e.lazy(()=>wp).array(),e.lazy(()=>Tp),e.lazy(()=>Tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Cz),e.lazy(()=>Cz).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),vo=e.object({create:e.union([e.lazy(()=>Pp),e.lazy(()=>Pp).array(),e.lazy(()=>Np),e.lazy(()=>Np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Wz),e.lazy(()=>Wz).array()]).optional(),createMany:e.lazy(()=>YM).optional(),connect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional()}).strict(),Ao=e.object({create:e.union([e.lazy(()=>Bp),e.lazy(()=>Bp).array(),e.lazy(()=>_p),e.lazy(()=>_p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Uz),e.lazy(()=>Uz).array()]).optional(),createMany:e.lazy(()=>JM).optional(),connect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional()}).strict(),Co=e.object({create:e.union([e.lazy(()=>qp),e.lazy(()=>qp).array(),e.lazy(()=>Fp),e.lazy(()=>Fp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>kz),e.lazy(()=>kz).array()]).optional(),connect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional()}).strict(),Wo=e.object({create:e.union([e.lazy(()=>Ep),e.lazy(()=>Ep).array(),e.lazy(()=>Dp),e.lazy(()=>Dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Rz),e.lazy(()=>Rz).array()]).optional(),createMany:e.lazy(()=>KM).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),Uo=e.object({create:e.union([e.lazy(()=>xp),e.lazy(()=>xp).array(),e.lazy(()=>Vp),e.lazy(()=>Vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>fz),e.lazy(()=>fz).array()]).optional(),createMany:e.lazy(()=>XM).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional()}).strict(),ko=e.object({create:e.union([e.lazy(()=>Hp),e.lazy(()=>Hp).array(),e.lazy(()=>Lp),e.lazy(()=>Lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jz),e.lazy(()=>jz).array()]).optional(),createMany:e.lazy(()=>eO).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),Ro=e.object({create:e.union([e.lazy(()=>Zp),e.lazy(()=>Zp).array(),e.lazy(()=>$p),e.lazy(()=>$p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mz),e.lazy(()=>Mz).array()]).optional(),createMany:e.lazy(()=>tO).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),fo=e.object({create:e.union([e.lazy(()=>Qp),e.lazy(()=>Qp).array(),e.lazy(()=>Gp),e.lazy(()=>Gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Oz),e.lazy(()=>Oz).array()]).optional(),connect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional()}).strict(),jo=e.object({create:e.union([e.lazy(()=>Yp),e.lazy(()=>Yp).array(),e.lazy(()=>Jp),e.lazy(()=>Jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wz),e.lazy(()=>wz).array()]).optional(),createMany:e.lazy(()=>aO).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),Mo=e.object({create:e.union([e.lazy(()=>Kp),e.lazy(()=>Kp).array(),e.lazy(()=>Xp),e.lazy(()=>Xp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tz),e.lazy(()=>Tz).array()]).optional(),createMany:e.lazy(()=>nO).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional()}).strict(),Oo=e.object({create:e.union([e.lazy(()=>eu),e.lazy(()=>eu).array(),e.lazy(()=>tu),e.lazy(()=>tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pz),e.lazy(()=>Pz).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional()}).strict(),wo=e.object({create:e.union([e.lazy(()=>fp),e.lazy(()=>fp).array(),e.lazy(()=>jp),e.lazy(()=>jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>vz),e.lazy(()=>vz).array()]).optional(),createMany:e.lazy(()=>QM).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),To=e.object({create:e.union([e.lazy(()=>Mp),e.lazy(()=>Mp).array(),e.lazy(()=>Op),e.lazy(()=>Op).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Az),e.lazy(()=>Az).array()]).optional(),createMany:e.lazy(()=>GM).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional()}).strict(),Po=e.object({create:e.union([e.lazy(()=>wp),e.lazy(()=>wp).array(),e.lazy(()=>Tp),e.lazy(()=>Tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Cz),e.lazy(()=>Cz).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),No=e.object({create:e.union([e.lazy(()=>Pp),e.lazy(()=>Pp).array(),e.lazy(()=>Np),e.lazy(()=>Np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Wz),e.lazy(()=>Wz).array()]).optional(),createMany:e.lazy(()=>YM).optional(),connect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional()}).strict(),Bo=e.object({create:e.union([e.lazy(()=>Bp),e.lazy(()=>Bp).array(),e.lazy(()=>_p),e.lazy(()=>_p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Uz),e.lazy(()=>Uz).array()]).optional(),createMany:e.lazy(()=>JM).optional(),connect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional()}).strict(),_o=e.object({create:e.union([e.lazy(()=>qp),e.lazy(()=>qp).array(),e.lazy(()=>Fp),e.lazy(()=>Fp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>kz),e.lazy(()=>kz).array()]).optional(),connect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional()}).strict(),qo=e.object({create:e.union([e.lazy(()=>Ep),e.lazy(()=>Ep).array(),e.lazy(()=>Dp),e.lazy(()=>Dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Rz),e.lazy(()=>Rz).array()]).optional(),createMany:e.lazy(()=>KM).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),Fo=e.object({create:e.union([e.lazy(()=>xp),e.lazy(()=>xp).array(),e.lazy(()=>Vp),e.lazy(()=>Vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>fz),e.lazy(()=>fz).array()]).optional(),createMany:e.lazy(()=>XM).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional()}).strict(),Eo=e.object({create:e.union([e.lazy(()=>Hp),e.lazy(()=>Hp).array(),e.lazy(()=>Lp),e.lazy(()=>Lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jz),e.lazy(()=>jz).array()]).optional(),createMany:e.lazy(()=>eO).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional()}).strict(),Do=e.object({create:e.union([e.lazy(()=>Zp),e.lazy(()=>Zp).array(),e.lazy(()=>$p),e.lazy(()=>$p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mz),e.lazy(()=>Mz).array()]).optional(),createMany:e.lazy(()=>tO).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),xo=e.object({create:e.union([e.lazy(()=>Qp),e.lazy(()=>Qp).array(),e.lazy(()=>Gp),e.lazy(()=>Gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Oz),e.lazy(()=>Oz).array()]).optional(),connect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional()}).strict(),Vo=e.object({create:e.union([e.lazy(()=>Yp),e.lazy(()=>Yp).array(),e.lazy(()=>Jp),e.lazy(()=>Jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wz),e.lazy(()=>wz).array()]).optional(),createMany:e.lazy(()=>aO).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional()}).strict(),Ho=e.object({create:e.union([e.lazy(()=>Kp),e.lazy(()=>Kp).array(),e.lazy(()=>Xp),e.lazy(()=>Xp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tz),e.lazy(()=>Tz).array()]).optional(),createMany:e.lazy(()=>nO).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional()}).strict(),Lo=e.object({create:e.union([e.lazy(()=>eu),e.lazy(()=>eu).array(),e.lazy(()=>tu),e.lazy(()=>tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pz),e.lazy(()=>Pz).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional()}).strict(),Ee=e.object({set:e.string().array().optional(),push:e.union([e.string(),e.string().array()]).optional()}).strict(),Zo=e.object({create:e.union([e.lazy(()=>HM),e.lazy(()=>LM)]).optional(),connectOrCreate:e.lazy(()=>f2).optional(),upsert:e.lazy(()=>cee).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>pee),e.lazy(()=>iq),e.lazy(()=>rq)]).optional()}).strict(),$o=e.object({create:e.union([e.lazy(()=>ZM),e.lazy(()=>$M)]).optional(),connectOrCreate:e.lazy(()=>j2).optional(),upsert:e.lazy(()=>uee).optional(),connect:e.lazy(()=>nt).optional(),update:e.union([e.lazy(()=>see),e.lazy(()=>lq),e.lazy(()=>cq)]).optional()}).strict(),Qo=e.object({create:e.union([e.lazy(()=>fp),e.lazy(()=>fp).array(),e.lazy(()=>jp),e.lazy(()=>jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>vz),e.lazy(()=>vz).array()]).optional(),upsert:e.union([e.lazy(()=>fW),e.lazy(()=>fW).array()]).optional(),createMany:e.lazy(()=>QM).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>jW),e.lazy(()=>jW).array()]).optional(),updateMany:e.union([e.lazy(()=>MW),e.lazy(()=>MW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),Go=e.object({create:e.union([e.lazy(()=>Mp),e.lazy(()=>Mp).array(),e.lazy(()=>Op),e.lazy(()=>Op).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Az),e.lazy(()=>Az).array()]).optional(),upsert:e.union([e.lazy(()=>OW),e.lazy(()=>OW).array()]).optional(),createMany:e.lazy(()=>GM).optional(),set:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),disconnect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),delete:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),update:e.union([e.lazy(()=>wW),e.lazy(()=>wW).array()]).optional(),updateMany:e.union([e.lazy(()=>TW),e.lazy(()=>TW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional()}).strict(),Yo=e.object({create:e.union([e.lazy(()=>wp),e.lazy(()=>wp).array(),e.lazy(()=>Tp),e.lazy(()=>Tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Cz),e.lazy(()=>Cz).array()]).optional(),upsert:e.union([e.lazy(()=>PW),e.lazy(()=>PW).array()]).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>NW),e.lazy(()=>NW).array()]).optional(),updateMany:e.union([e.lazy(()=>BW),e.lazy(()=>BW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),Jo=e.object({create:e.union([e.lazy(()=>Pp),e.lazy(()=>Pp).array(),e.lazy(()=>Np),e.lazy(()=>Np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Wz),e.lazy(()=>Wz).array()]).optional(),upsert:e.union([e.lazy(()=>_W),e.lazy(()=>_W).array()]).optional(),createMany:e.lazy(()=>YM).optional(),set:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),disconnect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),delete:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),connect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),update:e.union([e.lazy(()=>qW),e.lazy(()=>qW).array()]).optional(),updateMany:e.union([e.lazy(()=>FW),e.lazy(()=>FW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ul),e.lazy(()=>Ul).array()]).optional()}).strict(),Ko=e.object({create:e.union([e.lazy(()=>Bp),e.lazy(()=>Bp).array(),e.lazy(()=>_p),e.lazy(()=>_p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Uz),e.lazy(()=>Uz).array()]).optional(),upsert:e.union([e.lazy(()=>EW),e.lazy(()=>EW).array()]).optional(),createMany:e.lazy(()=>JM).optional(),set:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),disconnect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),delete:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),connect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),update:e.union([e.lazy(()=>DW),e.lazy(()=>DW).array()]).optional(),updateMany:e.union([e.lazy(()=>xW),e.lazy(()=>xW).array()]).optional(),deleteMany:e.union([e.lazy(()=>kl),e.lazy(()=>kl).array()]).optional()}).strict(),Xo=e.object({create:e.union([e.lazy(()=>qp),e.lazy(()=>qp).array(),e.lazy(()=>Fp),e.lazy(()=>Fp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>kz),e.lazy(()=>kz).array()]).optional(),upsert:e.union([e.lazy(()=>VW),e.lazy(()=>VW).array()]).optional(),set:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),disconnect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),delete:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),connect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),update:e.union([e.lazy(()=>HW),e.lazy(()=>HW).array()]).optional(),updateMany:e.union([e.lazy(()=>LW),e.lazy(()=>LW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Rl),e.lazy(()=>Rl).array()]).optional()}).strict(),ei=e.object({create:e.union([e.lazy(()=>Ep),e.lazy(()=>Ep).array(),e.lazy(()=>Dp),e.lazy(()=>Dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Rz),e.lazy(()=>Rz).array()]).optional(),upsert:e.union([e.lazy(()=>ZW),e.lazy(()=>ZW).array()]).optional(),createMany:e.lazy(()=>KM).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>$W),e.lazy(()=>$W).array()]).optional(),updateMany:e.union([e.lazy(()=>QW),e.lazy(()=>QW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),ti=e.object({create:e.union([e.lazy(()=>xp),e.lazy(()=>xp).array(),e.lazy(()=>Vp),e.lazy(()=>Vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>fz),e.lazy(()=>fz).array()]).optional(),upsert:e.union([e.lazy(()=>GW),e.lazy(()=>GW).array()]).optional(),createMany:e.lazy(()=>XM).optional(),set:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),disconnect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),delete:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),update:e.union([e.lazy(()=>YW),e.lazy(()=>YW).array()]).optional(),updateMany:e.union([e.lazy(()=>JW),e.lazy(()=>JW).array()]).optional(),deleteMany:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional()}).strict(),ai=e.object({create:e.union([e.lazy(()=>Hp),e.lazy(()=>Hp).array(),e.lazy(()=>Lp),e.lazy(()=>Lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jz),e.lazy(()=>jz).array()]).optional(),upsert:e.union([e.lazy(()=>KW),e.lazy(()=>KW).array()]).optional(),createMany:e.lazy(()=>eO).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>XW),e.lazy(()=>XW).array()]).optional(),updateMany:e.union([e.lazy(()=>eU),e.lazy(()=>eU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),ni=e.object({create:e.union([e.lazy(()=>Zp),e.lazy(()=>Zp).array(),e.lazy(()=>$p),e.lazy(()=>$p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mz),e.lazy(()=>Mz).array()]).optional(),upsert:e.union([e.lazy(()=>tU),e.lazy(()=>tU).array()]).optional(),createMany:e.lazy(()=>tO).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>aU),e.lazy(()=>aU).array()]).optional(),updateMany:e.union([e.lazy(()=>nU),e.lazy(()=>nU).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),oi=e.object({create:e.union([e.lazy(()=>Qp),e.lazy(()=>Qp).array(),e.lazy(()=>Gp),e.lazy(()=>Gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Oz),e.lazy(()=>Oz).array()]).optional(),upsert:e.union([e.lazy(()=>oU),e.lazy(()=>oU).array()]).optional(),set:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),disconnect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),delete:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),connect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),update:e.union([e.lazy(()=>iU),e.lazy(()=>iU).array()]).optional(),updateMany:e.union([e.lazy(()=>rU),e.lazy(()=>rU).array()]).optional(),deleteMany:e.union([e.lazy(()=>fl),e.lazy(()=>fl).array()]).optional()}).strict(),ii=e.object({create:e.union([e.lazy(()=>Yp),e.lazy(()=>Yp).array(),e.lazy(()=>Jp),e.lazy(()=>Jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wz),e.lazy(()=>wz).array()]).optional(),upsert:e.union([e.lazy(()=>lU),e.lazy(()=>lU).array()]).optional(),createMany:e.lazy(()=>aO).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>cU),e.lazy(()=>cU).array()]).optional(),updateMany:e.union([e.lazy(()=>pU),e.lazy(()=>pU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),ri=e.object({create:e.union([e.lazy(()=>Kp),e.lazy(()=>Kp).array(),e.lazy(()=>Xp),e.lazy(()=>Xp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tz),e.lazy(()=>Tz).array()]).optional(),upsert:e.union([e.lazy(()=>uU),e.lazy(()=>uU).array()]).optional(),createMany:e.lazy(()=>nO).optional(),set:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),disconnect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),delete:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),update:e.union([e.lazy(()=>sU),e.lazy(()=>sU).array()]).optional(),updateMany:e.union([e.lazy(()=>yU),e.lazy(()=>yU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional()}).strict(),li=e.object({create:e.union([e.lazy(()=>eu),e.lazy(()=>eu).array(),e.lazy(()=>tu),e.lazy(()=>tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pz),e.lazy(()=>Pz).array()]).optional(),upsert:e.union([e.lazy(()=>dU),e.lazy(()=>dU).array()]).optional(),set:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),disconnect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),delete:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),update:e.union([e.lazy(()=>mU),e.lazy(()=>mU).array()]).optional(),updateMany:e.union([e.lazy(()=>zU),e.lazy(()=>zU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional()}).strict(),ci=e.object({create:e.union([e.lazy(()=>fp),e.lazy(()=>fp).array(),e.lazy(()=>jp),e.lazy(()=>jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>vz),e.lazy(()=>vz).array()]).optional(),upsert:e.union([e.lazy(()=>fW),e.lazy(()=>fW).array()]).optional(),createMany:e.lazy(()=>QM).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>jW),e.lazy(()=>jW).array()]).optional(),updateMany:e.union([e.lazy(()=>MW),e.lazy(()=>MW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),pi=e.object({create:e.union([e.lazy(()=>Mp),e.lazy(()=>Mp).array(),e.lazy(()=>Op),e.lazy(()=>Op).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Az),e.lazy(()=>Az).array()]).optional(),upsert:e.union([e.lazy(()=>OW),e.lazy(()=>OW).array()]).optional(),createMany:e.lazy(()=>GM).optional(),set:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),disconnect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),delete:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),connect:e.union([e.lazy(()=>ge),e.lazy(()=>ge).array()]).optional(),update:e.union([e.lazy(()=>wW),e.lazy(()=>wW).array()]).optional(),updateMany:e.union([e.lazy(()=>TW),e.lazy(()=>TW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional()}).strict(),ui=e.object({create:e.union([e.lazy(()=>wp),e.lazy(()=>wp).array(),e.lazy(()=>Tp),e.lazy(()=>Tp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Cz),e.lazy(()=>Cz).array()]).optional(),upsert:e.union([e.lazy(()=>PW),e.lazy(()=>PW).array()]).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>NW),e.lazy(()=>NW).array()]).optional(),updateMany:e.union([e.lazy(()=>BW),e.lazy(()=>BW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),si=e.object({create:e.union([e.lazy(()=>Pp),e.lazy(()=>Pp).array(),e.lazy(()=>Np),e.lazy(()=>Np).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Wz),e.lazy(()=>Wz).array()]).optional(),upsert:e.union([e.lazy(()=>_W),e.lazy(()=>_W).array()]).optional(),createMany:e.lazy(()=>YM).optional(),set:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),disconnect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),delete:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),connect:e.union([e.lazy(()=>Wt),e.lazy(()=>Wt).array()]).optional(),update:e.union([e.lazy(()=>qW),e.lazy(()=>qW).array()]).optional(),updateMany:e.union([e.lazy(()=>FW),e.lazy(()=>FW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ul),e.lazy(()=>Ul).array()]).optional()}).strict(),yi=e.object({create:e.union([e.lazy(()=>Bp),e.lazy(()=>Bp).array(),e.lazy(()=>_p),e.lazy(()=>_p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Uz),e.lazy(()=>Uz).array()]).optional(),upsert:e.union([e.lazy(()=>EW),e.lazy(()=>EW).array()]).optional(),createMany:e.lazy(()=>JM).optional(),set:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),disconnect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),delete:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),connect:e.union([e.lazy(()=>Ut),e.lazy(()=>Ut).array()]).optional(),update:e.union([e.lazy(()=>DW),e.lazy(()=>DW).array()]).optional(),updateMany:e.union([e.lazy(()=>xW),e.lazy(()=>xW).array()]).optional(),deleteMany:e.union([e.lazy(()=>kl),e.lazy(()=>kl).array()]).optional()}).strict(),di=e.object({create:e.union([e.lazy(()=>qp),e.lazy(()=>qp).array(),e.lazy(()=>Fp),e.lazy(()=>Fp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>kz),e.lazy(()=>kz).array()]).optional(),upsert:e.union([e.lazy(()=>VW),e.lazy(()=>VW).array()]).optional(),set:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),disconnect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),delete:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),connect:e.union([e.lazy(()=>it),e.lazy(()=>it).array()]).optional(),update:e.union([e.lazy(()=>HW),e.lazy(()=>HW).array()]).optional(),updateMany:e.union([e.lazy(()=>LW),e.lazy(()=>LW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Rl),e.lazy(()=>Rl).array()]).optional()}).strict(),mi=e.object({create:e.union([e.lazy(()=>Ep),e.lazy(()=>Ep).array(),e.lazy(()=>Dp),e.lazy(()=>Dp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Rz),e.lazy(()=>Rz).array()]).optional(),upsert:e.union([e.lazy(()=>ZW),e.lazy(()=>ZW).array()]).optional(),createMany:e.lazy(()=>KM).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>$W),e.lazy(()=>$W).array()]).optional(),updateMany:e.union([e.lazy(()=>QW),e.lazy(()=>QW).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),zi=e.object({create:e.union([e.lazy(()=>xp),e.lazy(()=>xp).array(),e.lazy(()=>Vp),e.lazy(()=>Vp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>fz),e.lazy(()=>fz).array()]).optional(),upsert:e.union([e.lazy(()=>GW),e.lazy(()=>GW).array()]).optional(),createMany:e.lazy(()=>XM).optional(),set:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),disconnect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),delete:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),update:e.union([e.lazy(()=>YW),e.lazy(()=>YW).array()]).optional(),updateMany:e.union([e.lazy(()=>JW),e.lazy(()=>JW).array()]).optional(),deleteMany:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional()}).strict(),hi=e.object({create:e.union([e.lazy(()=>Hp),e.lazy(()=>Hp).array(),e.lazy(()=>Lp),e.lazy(()=>Lp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>jz),e.lazy(()=>jz).array()]).optional(),upsert:e.union([e.lazy(()=>KW),e.lazy(()=>KW).array()]).optional(),createMany:e.lazy(()=>eO).optional(),set:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),disconnect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),delete:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),connect:e.union([e.lazy(()=>Z),e.lazy(()=>Z).array()]).optional(),update:e.union([e.lazy(()=>XW),e.lazy(()=>XW).array()]).optional(),updateMany:e.union([e.lazy(()=>eU),e.lazy(()=>eU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional()}).strict(),bi=e.object({create:e.union([e.lazy(()=>Zp),e.lazy(()=>Zp).array(),e.lazy(()=>$p),e.lazy(()=>$p).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Mz),e.lazy(()=>Mz).array()]).optional(),upsert:e.union([e.lazy(()=>tU),e.lazy(()=>tU).array()]).optional(),createMany:e.lazy(()=>tO).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>aU),e.lazy(()=>aU).array()]).optional(),updateMany:e.union([e.lazy(()=>nU),e.lazy(()=>nU).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),Ii=e.object({create:e.union([e.lazy(()=>Qp),e.lazy(()=>Qp).array(),e.lazy(()=>Gp),e.lazy(()=>Gp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Oz),e.lazy(()=>Oz).array()]).optional(),upsert:e.union([e.lazy(()=>oU),e.lazy(()=>oU).array()]).optional(),set:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),disconnect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),delete:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),connect:e.union([e.lazy(()=>bt),e.lazy(()=>bt).array()]).optional(),update:e.union([e.lazy(()=>iU),e.lazy(()=>iU).array()]).optional(),updateMany:e.union([e.lazy(()=>rU),e.lazy(()=>rU).array()]).optional(),deleteMany:e.union([e.lazy(()=>fl),e.lazy(()=>fl).array()]).optional()}).strict(),gi=e.object({create:e.union([e.lazy(()=>Yp),e.lazy(()=>Yp).array(),e.lazy(()=>Jp),e.lazy(()=>Jp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>wz),e.lazy(()=>wz).array()]).optional(),upsert:e.union([e.lazy(()=>lU),e.lazy(()=>lU).array()]).optional(),createMany:e.lazy(()=>aO).optional(),set:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),disconnect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),delete:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),connect:e.union([e.lazy(()=>q),e.lazy(()=>q).array()]).optional(),update:e.union([e.lazy(()=>cU),e.lazy(()=>cU).array()]).optional(),updateMany:e.union([e.lazy(()=>pU),e.lazy(()=>pU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional()}).strict(),Si=e.object({create:e.union([e.lazy(()=>Kp),e.lazy(()=>Kp).array(),e.lazy(()=>Xp),e.lazy(()=>Xp).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Tz),e.lazy(()=>Tz).array()]).optional(),upsert:e.union([e.lazy(()=>uU),e.lazy(()=>uU).array()]).optional(),createMany:e.lazy(()=>nO).optional(),set:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),disconnect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),delete:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),connect:e.union([e.lazy(()=>ze),e.lazy(()=>ze).array()]).optional(),update:e.union([e.lazy(()=>sU),e.lazy(()=>sU).array()]).optional(),updateMany:e.union([e.lazy(()=>yU),e.lazy(()=>yU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional()}).strict(),vi=e.object({create:e.union([e.lazy(()=>eu),e.lazy(()=>eu).array(),e.lazy(()=>tu),e.lazy(()=>tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Pz),e.lazy(()=>Pz).array()]).optional(),upsert:e.union([e.lazy(()=>dU),e.lazy(()=>dU).array()]).optional(),set:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),disconnect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),delete:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),update:e.union([e.lazy(()=>mU),e.lazy(()=>mU).array()]).optional(),updateMany:e.union([e.lazy(()=>zU),e.lazy(()=>zU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional()}).strict(),mh=e.object({create:e.union([e.lazy(()=>au),e.lazy(()=>au).array(),e.lazy(()=>nu),e.lazy(()=>nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nz),e.lazy(()=>Nz).array()]).optional(),createMany:e.lazy(()=>oO).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),zh=e.object({create:e.union([e.lazy(()=>ou),e.lazy(()=>ou).array(),e.lazy(()=>iu),e.lazy(()=>iu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bz),e.lazy(()=>Bz).array()]).optional(),createMany:e.lazy(()=>iO).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),hh=e.object({create:e.union([e.lazy(()=>ru),e.lazy(()=>ru).array(),e.lazy(()=>lu),e.lazy(()=>lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_z),e.lazy(()=>_z).array()]).optional(),createMany:e.lazy(()=>rO).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional()}).strict(),bh=e.object({create:e.union([e.lazy(()=>cu),e.lazy(()=>cu).array(),e.lazy(()=>pu),e.lazy(()=>pu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qz),e.lazy(()=>qz).array()]).optional(),connect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional()}).strict(),Ih=e.object({create:e.union([e.lazy(()=>uu),e.lazy(()=>uu).array(),e.lazy(()=>su),e.lazy(()=>su).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fz),e.lazy(()=>Fz).array()]).optional(),createMany:e.lazy(()=>lO).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),gh=e.object({create:e.union([e.lazy(()=>yu),e.lazy(()=>yu).array(),e.lazy(()=>du),e.lazy(()=>du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ez),e.lazy(()=>Ez).array()]).optional(),createMany:e.lazy(()=>cO).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional()}).strict(),Sh=e.object({create:e.union([e.lazy(()=>mu),e.lazy(()=>mu).array(),e.lazy(()=>zu),e.lazy(()=>zu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dz),e.lazy(()=>Dz).array()]).optional(),createMany:e.lazy(()=>pO).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional()}).strict(),vh=e.object({create:e.union([e.lazy(()=>uO),e.lazy(()=>sO)]).optional(),connectOrCreate:e.lazy(()=>M2).optional(),connect:e.lazy(()=>ce).optional()}).strict(),Ah=e.object({create:e.union([e.lazy(()=>au),e.lazy(()=>au).array(),e.lazy(()=>nu),e.lazy(()=>nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nz),e.lazy(()=>Nz).array()]).optional(),createMany:e.lazy(()=>oO).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional()}).strict(),Ch=e.object({create:e.union([e.lazy(()=>ou),e.lazy(()=>ou).array(),e.lazy(()=>iu),e.lazy(()=>iu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bz),e.lazy(()=>Bz).array()]).optional(),createMany:e.lazy(()=>iO).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),Wh=e.object({create:e.union([e.lazy(()=>ru),e.lazy(()=>ru).array(),e.lazy(()=>lu),e.lazy(()=>lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_z),e.lazy(()=>_z).array()]).optional(),createMany:e.lazy(()=>rO).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional()}).strict(),Uh=e.object({create:e.union([e.lazy(()=>cu),e.lazy(()=>cu).array(),e.lazy(()=>pu),e.lazy(()=>pu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qz),e.lazy(()=>qz).array()]).optional(),connect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional()}).strict(),kh=e.object({create:e.union([e.lazy(()=>uu),e.lazy(()=>uu).array(),e.lazy(()=>su),e.lazy(()=>su).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fz),e.lazy(()=>Fz).array()]).optional(),createMany:e.lazy(()=>lO).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional()}).strict(),Rh=e.object({create:e.union([e.lazy(()=>yu),e.lazy(()=>yu).array(),e.lazy(()=>du),e.lazy(()=>du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ez),e.lazy(()=>Ez).array()]).optional(),createMany:e.lazy(()=>cO).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional()}).strict(),fh=e.object({create:e.union([e.lazy(()=>mu),e.lazy(()=>mu).array(),e.lazy(()=>zu),e.lazy(()=>zu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dz),e.lazy(()=>Dz).array()]).optional(),createMany:e.lazy(()=>pO).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional()}).strict(),jh=e.object({create:e.union([e.lazy(()=>au),e.lazy(()=>au).array(),e.lazy(()=>nu),e.lazy(()=>nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nz),e.lazy(()=>Nz).array()]).optional(),upsert:e.union([e.lazy(()=>hU),e.lazy(()=>hU).array()]).optional(),createMany:e.lazy(()=>oO).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>bU),e.lazy(()=>bU).array()]).optional(),updateMany:e.union([e.lazy(()=>IU),e.lazy(()=>IU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),Mh=e.object({create:e.union([e.lazy(()=>ou),e.lazy(()=>ou).array(),e.lazy(()=>iu),e.lazy(()=>iu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bz),e.lazy(()=>Bz).array()]).optional(),upsert:e.union([e.lazy(()=>gU),e.lazy(()=>gU).array()]).optional(),createMany:e.lazy(()=>iO).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>SU),e.lazy(()=>SU).array()]).optional(),updateMany:e.union([e.lazy(()=>vU),e.lazy(()=>vU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),Oh=e.object({create:e.union([e.lazy(()=>ru),e.lazy(()=>ru).array(),e.lazy(()=>lu),e.lazy(()=>lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_z),e.lazy(()=>_z).array()]).optional(),upsert:e.union([e.lazy(()=>AU),e.lazy(()=>AU).array()]).optional(),createMany:e.lazy(()=>rO).optional(),set:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),disconnect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),delete:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),update:e.union([e.lazy(()=>CU),e.lazy(()=>CU).array()]).optional(),updateMany:e.union([e.lazy(()=>WU),e.lazy(()=>WU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional()}).strict(),wh=e.object({create:e.union([e.lazy(()=>cu),e.lazy(()=>cu).array(),e.lazy(()=>pu),e.lazy(()=>pu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qz),e.lazy(()=>qz).array()]).optional(),upsert:e.union([e.lazy(()=>UU),e.lazy(()=>UU).array()]).optional(),set:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),disconnect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),delete:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),connect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),update:e.union([e.lazy(()=>kU),e.lazy(()=>kU).array()]).optional(),updateMany:e.union([e.lazy(()=>RU),e.lazy(()=>RU).array()]).optional(),deleteMany:e.union([e.lazy(()=>jl),e.lazy(()=>jl).array()]).optional()}).strict(),Th=e.object({create:e.union([e.lazy(()=>uu),e.lazy(()=>uu).array(),e.lazy(()=>su),e.lazy(()=>su).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fz),e.lazy(()=>Fz).array()]).optional(),upsert:e.union([e.lazy(()=>fU),e.lazy(()=>fU).array()]).optional(),createMany:e.lazy(()=>lO).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>jU),e.lazy(()=>jU).array()]).optional(),updateMany:e.union([e.lazy(()=>MU),e.lazy(()=>MU).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),Ph=e.object({create:e.union([e.lazy(()=>yu),e.lazy(()=>yu).array(),e.lazy(()=>du),e.lazy(()=>du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ez),e.lazy(()=>Ez).array()]).optional(),upsert:e.union([e.lazy(()=>OU),e.lazy(()=>OU).array()]).optional(),createMany:e.lazy(()=>cO).optional(),set:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),disconnect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),delete:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),update:e.union([e.lazy(()=>wU),e.lazy(()=>wU).array()]).optional(),updateMany:e.union([e.lazy(()=>TU),e.lazy(()=>TU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional()}).strict(),Nh=e.object({create:e.union([e.lazy(()=>mu),e.lazy(()=>mu).array(),e.lazy(()=>zu),e.lazy(()=>zu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dz),e.lazy(()=>Dz).array()]).optional(),upsert:e.union([e.lazy(()=>PU),e.lazy(()=>PU).array()]).optional(),createMany:e.lazy(()=>pO).optional(),set:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),disconnect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),delete:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),update:e.union([e.lazy(()=>NU),e.lazy(()=>NU).array()]).optional(),updateMany:e.union([e.lazy(()=>BU),e.lazy(()=>BU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional()}).strict(),Bh=e.object({create:e.union([e.lazy(()=>uO),e.lazy(()=>sO)]).optional(),connectOrCreate:e.lazy(()=>M2).optional(),upsert:e.lazy(()=>yee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Pt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Pt)]).optional(),connect:e.lazy(()=>ce).optional(),update:e.union([e.lazy(()=>dee),e.lazy(()=>pq),e.lazy(()=>uq)]).optional()}).strict(),_h=e.object({create:e.union([e.lazy(()=>au),e.lazy(()=>au).array(),e.lazy(()=>nu),e.lazy(()=>nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Nz),e.lazy(()=>Nz).array()]).optional(),upsert:e.union([e.lazy(()=>hU),e.lazy(()=>hU).array()]).optional(),createMany:e.lazy(()=>oO).optional(),set:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),disconnect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),delete:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),connect:e.union([e.lazy(()=>Q),e.lazy(()=>Q).array()]).optional(),update:e.union([e.lazy(()=>bU),e.lazy(()=>bU).array()]).optional(),updateMany:e.union([e.lazy(()=>IU),e.lazy(()=>IU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional()}).strict(),qh=e.object({create:e.union([e.lazy(()=>ou),e.lazy(()=>ou).array(),e.lazy(()=>iu),e.lazy(()=>iu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Bz),e.lazy(()=>Bz).array()]).optional(),upsert:e.union([e.lazy(()=>gU),e.lazy(()=>gU).array()]).optional(),createMany:e.lazy(()=>iO).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>SU),e.lazy(()=>SU).array()]).optional(),updateMany:e.union([e.lazy(()=>vU),e.lazy(()=>vU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),Fh=e.object({create:e.union([e.lazy(()=>ru),e.lazy(()=>ru).array(),e.lazy(()=>lu),e.lazy(()=>lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>_z),e.lazy(()=>_z).array()]).optional(),upsert:e.union([e.lazy(()=>AU),e.lazy(()=>AU).array()]).optional(),createMany:e.lazy(()=>rO).optional(),set:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),disconnect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),delete:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),update:e.union([e.lazy(()=>CU),e.lazy(()=>CU).array()]).optional(),updateMany:e.union([e.lazy(()=>WU),e.lazy(()=>WU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional()}).strict(),Eh=e.object({create:e.union([e.lazy(()=>cu),e.lazy(()=>cu).array(),e.lazy(()=>pu),e.lazy(()=>pu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>qz),e.lazy(()=>qz).array()]).optional(),upsert:e.union([e.lazy(()=>UU),e.lazy(()=>UU).array()]).optional(),set:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),disconnect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),delete:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),connect:e.union([e.lazy(()=>Ke),e.lazy(()=>Ke).array()]).optional(),update:e.union([e.lazy(()=>kU),e.lazy(()=>kU).array()]).optional(),updateMany:e.union([e.lazy(()=>RU),e.lazy(()=>RU).array()]).optional(),deleteMany:e.union([e.lazy(()=>jl),e.lazy(()=>jl).array()]).optional()}).strict(),Dh=e.object({create:e.union([e.lazy(()=>uu),e.lazy(()=>uu).array(),e.lazy(()=>su),e.lazy(()=>su).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Fz),e.lazy(()=>Fz).array()]).optional(),upsert:e.union([e.lazy(()=>fU),e.lazy(()=>fU).array()]).optional(),createMany:e.lazy(()=>lO).optional(),set:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),disconnect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),delete:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),connect:e.union([e.lazy(()=>L),e.lazy(()=>L).array()]).optional(),update:e.union([e.lazy(()=>jU),e.lazy(()=>jU).array()]).optional(),updateMany:e.union([e.lazy(()=>MU),e.lazy(()=>MU).array()]).optional(),deleteMany:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional()}).strict(),xh=e.object({create:e.union([e.lazy(()=>yu),e.lazy(()=>yu).array(),e.lazy(()=>du),e.lazy(()=>du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Ez),e.lazy(()=>Ez).array()]).optional(),upsert:e.union([e.lazy(()=>OU),e.lazy(()=>OU).array()]).optional(),createMany:e.lazy(()=>cO).optional(),set:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),disconnect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),delete:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),connect:e.union([e.lazy(()=>Ie),e.lazy(()=>Ie).array()]).optional(),update:e.union([e.lazy(()=>wU),e.lazy(()=>wU).array()]).optional(),updateMany:e.union([e.lazy(()=>TU),e.lazy(()=>TU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional()}).strict(),Vh=e.object({create:e.union([e.lazy(()=>mu),e.lazy(()=>mu).array(),e.lazy(()=>zu),e.lazy(()=>zu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Dz),e.lazy(()=>Dz).array()]).optional(),upsert:e.union([e.lazy(()=>PU),e.lazy(()=>PU).array()]).optional(),createMany:e.lazy(()=>pO).optional(),set:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),disconnect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),delete:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),update:e.union([e.lazy(()=>NU),e.lazy(()=>NU).array()]).optional(),updateMany:e.union([e.lazy(()=>BU),e.lazy(()=>BU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional()}).strict(),TN=e.object({create:e.union([e.lazy(()=>yO),e.lazy(()=>dO)]).optional(),connectOrCreate:e.lazy(()=>O2).optional(),connect:e.lazy(()=>v).optional()}).strict(),PN=e.object({create:e.union([e.lazy(()=>mO),e.lazy(()=>zO)]).optional(),connectOrCreate:e.lazy(()=>w2).optional(),connect:e.lazy(()=>Y).optional()}).strict(),NN=e.object({create:e.union([e.lazy(()=>hO),e.lazy(()=>bO)]).optional(),connectOrCreate:e.lazy(()=>T2).optional(),connect:e.lazy(()=>q).optional()}).strict(),BN=e.object({create:e.union([e.lazy(()=>yO),e.lazy(()=>dO)]).optional(),connectOrCreate:e.lazy(()=>O2).optional(),upsert:e.lazy(()=>mee).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>zee),e.lazy(()=>sq),e.lazy(()=>yq)]).optional()}).strict(),_N=e.object({create:e.union([e.lazy(()=>mO),e.lazy(()=>zO)]).optional(),connectOrCreate:e.lazy(()=>w2).optional(),upsert:e.lazy(()=>hee).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>bee),e.lazy(()=>dq),e.lazy(()=>mq)]).optional()}).strict(),qN=e.object({create:e.union([e.lazy(()=>hO),e.lazy(()=>bO)]).optional(),connectOrCreate:e.lazy(()=>T2).optional(),upsert:e.lazy(()=>Iee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>st)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>st)]).optional(),connect:e.lazy(()=>q).optional(),update:e.union([e.lazy(()=>gee),e.lazy(()=>zq),e.lazy(()=>hq)]).optional()}).strict(),T$=e.object({create:e.union([e.lazy(()=>IO),e.lazy(()=>gO)]).optional(),connectOrCreate:e.lazy(()=>P2).optional(),connect:e.lazy(()=>v).optional()}).strict(),P$=e.object({create:e.union([e.lazy(()=>SO),e.lazy(()=>vO)]).optional(),connectOrCreate:e.lazy(()=>N2).optional(),connect:e.lazy(()=>q).optional()}).strict(),N$=e.object({create:e.union([e.lazy(()=>IO),e.lazy(()=>gO)]).optional(),connectOrCreate:e.lazy(()=>P2).optional(),upsert:e.lazy(()=>See).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>vee),e.lazy(()=>bq),e.lazy(()=>Iq)]).optional()}).strict(),B$=e.object({create:e.union([e.lazy(()=>SO),e.lazy(()=>vO)]).optional(),connectOrCreate:e.lazy(()=>N2).optional(),upsert:e.lazy(()=>Aee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>st)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>st)]).optional(),connect:e.lazy(()=>q).optional(),update:e.union([e.lazy(()=>Cee),e.lazy(()=>gq),e.lazy(()=>Sq)]).optional()}).strict(),_$=e.object({create:e.union([e.lazy(()=>AO),e.lazy(()=>CO)]).optional(),connectOrCreate:e.lazy(()=>B2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),q$=e.object({create:e.union([e.lazy(()=>hu),e.lazy(()=>hu).array(),e.lazy(()=>bu),e.lazy(()=>bu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xz),e.lazy(()=>xz).array()]).optional(),createMany:e.lazy(()=>WO).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),F$=e.object({create:e.union([e.lazy(()=>hu),e.lazy(()=>hu).array(),e.lazy(()=>bu),e.lazy(()=>bu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xz),e.lazy(()=>xz).array()]).optional(),createMany:e.lazy(()=>WO).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional()}).strict(),E$=e.object({create:e.union([e.lazy(()=>AO),e.lazy(()=>CO)]).optional(),connectOrCreate:e.lazy(()=>B2).optional(),upsert:e.lazy(()=>Wee).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>Uee),e.lazy(()=>vq),e.lazy(()=>Aq)]).optional()}).strict(),D$=e.object({create:e.union([e.lazy(()=>hu),e.lazy(()=>hu).array(),e.lazy(()=>bu),e.lazy(()=>bu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xz),e.lazy(()=>xz).array()]).optional(),upsert:e.union([e.lazy(()=>_U),e.lazy(()=>_U).array()]).optional(),createMany:e.lazy(()=>WO).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>qU),e.lazy(()=>qU).array()]).optional(),updateMany:e.union([e.lazy(()=>FU),e.lazy(()=>FU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),x$=e.object({create:e.union([e.lazy(()=>hu),e.lazy(()=>hu).array(),e.lazy(()=>bu),e.lazy(()=>bu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>xz),e.lazy(()=>xz).array()]).optional(),upsert:e.union([e.lazy(()=>_U),e.lazy(()=>_U).array()]).optional(),createMany:e.lazy(()=>WO).optional(),set:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),disconnect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),delete:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),connect:e.union([e.lazy(()=>D),e.lazy(()=>D).array()]).optional(),update:e.union([e.lazy(()=>qU),e.lazy(()=>qU).array()]).optional(),updateMany:e.union([e.lazy(()=>FU),e.lazy(()=>FU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional()}).strict(),nf=e.object({create:e.union([e.lazy(()=>UO),e.lazy(()=>kO)]).optional(),connectOrCreate:e.lazy(()=>_2).optional(),connect:e.lazy(()=>so).optional()}).strict(),of=e.object({create:e.union([e.lazy(()=>RO),e.lazy(()=>fO)]).optional(),connectOrCreate:e.lazy(()=>q2).optional(),connect:e.lazy(()=>Y).optional()}).strict(),rf=e.object({create:e.union([e.lazy(()=>jO),e.lazy(()=>MO)]).optional(),connectOrCreate:e.lazy(()=>F2).optional(),connect:e.lazy(()=>O).optional()}).strict(),lf=e.object({create:e.union([e.lazy(()=>Iu),e.lazy(()=>Iu).array(),e.lazy(()=>gu),e.lazy(()=>gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vz),e.lazy(()=>Vz).array()]).optional(),createMany:e.lazy(()=>OO).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),cf=e.object({create:e.union([e.lazy(()=>Iu),e.lazy(()=>Iu).array(),e.lazy(()=>gu),e.lazy(()=>gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vz),e.lazy(()=>Vz).array()]).optional(),createMany:e.lazy(()=>OO).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional()}).strict(),pf=e.object({create:e.union([e.lazy(()=>UO),e.lazy(()=>kO)]).optional(),connectOrCreate:e.lazy(()=>_2).optional(),upsert:e.lazy(()=>kee).optional(),connect:e.lazy(()=>so).optional(),update:e.union([e.lazy(()=>Ree),e.lazy(()=>Cq),e.lazy(()=>Wq)]).optional()}).strict(),uf=e.object({create:e.union([e.lazy(()=>RO),e.lazy(()=>fO)]).optional(),connectOrCreate:e.lazy(()=>q2).optional(),upsert:e.lazy(()=>fee).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>jee),e.lazy(()=>Uq),e.lazy(()=>kq)]).optional()}).strict(),sf=e.object({create:e.union([e.lazy(()=>jO),e.lazy(()=>MO)]).optional(),connectOrCreate:e.lazy(()=>F2).optional(),upsert:e.lazy(()=>Mee).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>P)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>P)]).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>Oee),e.lazy(()=>Rq),e.lazy(()=>fq)]).optional()}).strict(),yf=e.object({create:e.union([e.lazy(()=>Iu),e.lazy(()=>Iu).array(),e.lazy(()=>gu),e.lazy(()=>gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vz),e.lazy(()=>Vz).array()]).optional(),upsert:e.union([e.lazy(()=>EU),e.lazy(()=>EU).array()]).optional(),createMany:e.lazy(()=>OO).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>DU),e.lazy(()=>DU).array()]).optional(),updateMany:e.union([e.lazy(()=>xU),e.lazy(()=>xU).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),df=e.object({create:e.union([e.lazy(()=>Iu),e.lazy(()=>Iu).array(),e.lazy(()=>gu),e.lazy(()=>gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Vz),e.lazy(()=>Vz).array()]).optional(),upsert:e.union([e.lazy(()=>EU),e.lazy(()=>EU).array()]).optional(),createMany:e.lazy(()=>OO).optional(),set:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),disconnect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),delete:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),connect:e.union([e.lazy(()=>$),e.lazy(()=>$).array()]).optional(),update:e.union([e.lazy(()=>DU),e.lazy(()=>DU).array()]).optional(),updateMany:e.union([e.lazy(()=>xU),e.lazy(()=>xU).array()]).optional(),deleteMany:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional()}).strict(),FN=e.object({create:e.union([e.lazy(()=>wO),e.lazy(()=>TO)]).optional(),connectOrCreate:e.lazy(()=>E2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),EN=e.object({create:e.union([e.lazy(()=>PO),e.lazy(()=>NO)]).optional(),connectOrCreate:e.lazy(()=>D2).optional(),connect:e.lazy(()=>Ke).optional()}).strict(),DN=e.object({create:e.union([e.lazy(()=>Su),e.lazy(()=>Su).array(),e.lazy(()=>vu),e.lazy(()=>vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hz),e.lazy(()=>Hz).array()]).optional(),createMany:e.lazy(()=>BO).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional()}).strict(),xN=e.object({create:e.union([e.lazy(()=>Su),e.lazy(()=>Su).array(),e.lazy(()=>vu),e.lazy(()=>vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hz),e.lazy(()=>Hz).array()]).optional(),createMany:e.lazy(()=>BO).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional()}).strict(),nl=e.object({set:e.lazy(()=>Be).optional()}).strict(),VN=e.object({create:e.union([e.lazy(()=>wO),e.lazy(()=>TO)]).optional(),connectOrCreate:e.lazy(()=>E2).optional(),upsert:e.lazy(()=>wee).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>Tee),e.lazy(()=>jq),e.lazy(()=>Mq)]).optional()}).strict(),HN=e.object({create:e.union([e.lazy(()=>PO),e.lazy(()=>NO)]).optional(),connectOrCreate:e.lazy(()=>D2).optional(),upsert:e.lazy(()=>Pee).optional(),connect:e.lazy(()=>Ke).optional(),update:e.union([e.lazy(()=>Nee),e.lazy(()=>Oq),e.lazy(()=>wq)]).optional()}).strict(),LN=e.object({create:e.union([e.lazy(()=>Su),e.lazy(()=>Su).array(),e.lazy(()=>vu),e.lazy(()=>vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hz),e.lazy(()=>Hz).array()]).optional(),upsert:e.union([e.lazy(()=>VU),e.lazy(()=>VU).array()]).optional(),createMany:e.lazy(()=>BO).optional(),set:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),disconnect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),delete:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),update:e.union([e.lazy(()=>HU),e.lazy(()=>HU).array()]).optional(),updateMany:e.union([e.lazy(()=>LU),e.lazy(()=>LU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional()}).strict(),ZN=e.object({create:e.union([e.lazy(()=>Su),e.lazy(()=>Su).array(),e.lazy(()=>vu),e.lazy(()=>vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Hz),e.lazy(()=>Hz).array()]).optional(),upsert:e.union([e.lazy(()=>VU),e.lazy(()=>VU).array()]).optional(),createMany:e.lazy(()=>BO).optional(),set:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),disconnect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),delete:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),connect:e.union([e.lazy(()=>Se),e.lazy(()=>Se).array()]).optional(),update:e.union([e.lazy(()=>HU),e.lazy(()=>HU).array()]).optional(),updateMany:e.union([e.lazy(()=>LU),e.lazy(()=>LU).array()]).optional(),deleteMany:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional()}).strict(),V$=e.object({create:e.union([e.lazy(()=>_O),e.lazy(()=>qO)]).optional(),connectOrCreate:e.lazy(()=>x2).optional(),connect:e.lazy(()=>ue).optional()}).strict(),H$=e.object({create:e.union([e.lazy(()=>FO),e.lazy(()=>EO)]).optional(),connectOrCreate:e.lazy(()=>V2).optional(),connect:e.lazy(()=>Y).optional()}).strict(),L$=e.object({create:e.union([e.lazy(()=>_O),e.lazy(()=>qO)]).optional(),connectOrCreate:e.lazy(()=>x2).optional(),upsert:e.lazy(()=>Bee).optional(),connect:e.lazy(()=>ue).optional(),update:e.union([e.lazy(()=>_ee),e.lazy(()=>Tq),e.lazy(()=>Pq)]).optional()}).strict(),Z$=e.object({create:e.union([e.lazy(()=>FO),e.lazy(()=>EO)]).optional(),connectOrCreate:e.lazy(()=>V2).optional(),upsert:e.lazy(()=>qee).optional(),connect:e.lazy(()=>Y).optional(),update:e.union([e.lazy(()=>Fee),e.lazy(()=>Nq),e.lazy(()=>Bq)]).optional()}).strict(),$N=e.object({create:e.union([e.lazy(()=>Au),e.lazy(()=>Au).array(),e.lazy(()=>Cu),e.lazy(()=>Cu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lz),e.lazy(()=>Lz).array()]).optional(),createMany:e.lazy(()=>DO).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional()}).strict(),QN=e.object({create:e.union([e.lazy(()=>Wu),e.lazy(()=>Wu).array(),e.lazy(()=>Uu),e.lazy(()=>Uu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zz),e.lazy(()=>Zz).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional()}).strict(),GN=e.object({create:e.union([e.lazy(()=>ku),e.lazy(()=>ku).array(),e.lazy(()=>Ru),e.lazy(()=>Ru).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$z),e.lazy(()=>$z).array()]).optional(),createMany:e.lazy(()=>xO).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional()}).strict(),YN=e.object({create:e.union([e.lazy(()=>Au),e.lazy(()=>Au).array(),e.lazy(()=>Cu),e.lazy(()=>Cu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lz),e.lazy(()=>Lz).array()]).optional(),createMany:e.lazy(()=>DO).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional()}).strict(),JN=e.object({create:e.union([e.lazy(()=>Wu),e.lazy(()=>Wu).array(),e.lazy(()=>Uu),e.lazy(()=>Uu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zz),e.lazy(()=>Zz).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional()}).strict(),KN=e.object({create:e.union([e.lazy(()=>ku),e.lazy(()=>ku).array(),e.lazy(()=>Ru),e.lazy(()=>Ru).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$z),e.lazy(()=>$z).array()]).optional(),createMany:e.lazy(()=>xO).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional()}).strict(),XN=e.object({create:e.union([e.lazy(()=>Au),e.lazy(()=>Au).array(),e.lazy(()=>Cu),e.lazy(()=>Cu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lz),e.lazy(()=>Lz).array()]).optional(),upsert:e.union([e.lazy(()=>ZU),e.lazy(()=>ZU).array()]).optional(),createMany:e.lazy(()=>DO).optional(),set:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),disconnect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),delete:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),update:e.union([e.lazy(()=>$U),e.lazy(()=>$U).array()]).optional(),updateMany:e.union([e.lazy(()=>QU),e.lazy(()=>QU).array()]).optional(),deleteMany:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional()}).strict(),eB=e.object({create:e.union([e.lazy(()=>Wu),e.lazy(()=>Wu).array(),e.lazy(()=>Uu),e.lazy(()=>Uu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zz),e.lazy(()=>Zz).array()]).optional(),upsert:e.union([e.lazy(()=>GU),e.lazy(()=>GU).array()]).optional(),set:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),disconnect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),delete:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),update:e.union([e.lazy(()=>YU),e.lazy(()=>YU).array()]).optional(),updateMany:e.union([e.lazy(()=>JU),e.lazy(()=>JU).array()]).optional(),deleteMany:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional()}).strict(),tB=e.object({create:e.union([e.lazy(()=>ku),e.lazy(()=>ku).array(),e.lazy(()=>Ru),e.lazy(()=>Ru).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$z),e.lazy(()=>$z).array()]).optional(),upsert:e.union([e.lazy(()=>KU),e.lazy(()=>KU).array()]).optional(),createMany:e.lazy(()=>xO).optional(),set:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),disconnect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),delete:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),update:e.union([e.lazy(()=>XU),e.lazy(()=>XU).array()]).optional(),updateMany:e.union([e.lazy(()=>ek),e.lazy(()=>ek).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional()}).strict(),aB=e.object({create:e.union([e.lazy(()=>Au),e.lazy(()=>Au).array(),e.lazy(()=>Cu),e.lazy(()=>Cu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Lz),e.lazy(()=>Lz).array()]).optional(),upsert:e.union([e.lazy(()=>ZU),e.lazy(()=>ZU).array()]).optional(),createMany:e.lazy(()=>DO).optional(),set:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),disconnect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),delete:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),connect:e.union([e.lazy(()=>ue),e.lazy(()=>ue).array()]).optional(),update:e.union([e.lazy(()=>$U),e.lazy(()=>$U).array()]).optional(),updateMany:e.union([e.lazy(()=>QU),e.lazy(()=>QU).array()]).optional(),deleteMany:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional()}).strict(),nB=e.object({create:e.union([e.lazy(()=>Wu),e.lazy(()=>Wu).array(),e.lazy(()=>Uu),e.lazy(()=>Uu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Zz),e.lazy(()=>Zz).array()]).optional(),upsert:e.union([e.lazy(()=>GU),e.lazy(()=>GU).array()]).optional(),set:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),disconnect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),delete:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),connect:e.union([e.lazy(()=>Y),e.lazy(()=>Y).array()]).optional(),update:e.union([e.lazy(()=>YU),e.lazy(()=>YU).array()]).optional(),updateMany:e.union([e.lazy(()=>JU),e.lazy(()=>JU).array()]).optional(),deleteMany:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional()}).strict(),oB=e.object({create:e.union([e.lazy(()=>ku),e.lazy(()=>ku).array(),e.lazy(()=>Ru),e.lazy(()=>Ru).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>$z),e.lazy(()=>$z).array()]).optional(),upsert:e.union([e.lazy(()=>KU),e.lazy(()=>KU).array()]).optional(),createMany:e.lazy(()=>xO).optional(),set:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),disconnect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),delete:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),connect:e.union([e.lazy(()=>be),e.lazy(()=>be).array()]).optional(),update:e.union([e.lazy(()=>XU),e.lazy(()=>XU).array()]).optional(),updateMany:e.union([e.lazy(()=>ek),e.lazy(()=>ek).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional()}).strict(),$$=e.object({create:e.union([e.lazy(()=>VO),e.lazy(()=>HO)]).optional(),connectOrCreate:e.lazy(()=>H2).optional(),connect:e.lazy(()=>O).optional()}).strict(),Q$=e.object({create:e.union([e.lazy(()=>fu),e.lazy(()=>fu).array(),e.lazy(()=>ju),e.lazy(()=>ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qz),e.lazy(()=>Qz).array()]).optional(),createMany:e.lazy(()=>LO).optional(),connect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional()}).strict(),G$=e.object({create:e.union([e.lazy(()=>fu),e.lazy(()=>fu).array(),e.lazy(()=>ju),e.lazy(()=>ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qz),e.lazy(()=>Qz).array()]).optional(),createMany:e.lazy(()=>LO).optional(),connect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional()}).strict(),Jd=e.object({set:e.lazy(()=>Ze).optional()}).strict(),Y$=e.object({create:e.union([e.lazy(()=>VO),e.lazy(()=>HO)]).optional(),connectOrCreate:e.lazy(()=>H2).optional(),upsert:e.lazy(()=>Eee).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>Dee),e.lazy(()=>_q),e.lazy(()=>qq)]).optional()}).strict(),J$=e.object({create:e.union([e.lazy(()=>fu),e.lazy(()=>fu).array(),e.lazy(()=>ju),e.lazy(()=>ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qz),e.lazy(()=>Qz).array()]).optional(),upsert:e.union([e.lazy(()=>tk),e.lazy(()=>tk).array()]).optional(),createMany:e.lazy(()=>LO).optional(),set:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),disconnect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),delete:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),connect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),update:e.union([e.lazy(()=>ak),e.lazy(()=>ak).array()]).optional(),updateMany:e.union([e.lazy(()=>nk),e.lazy(()=>nk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ml),e.lazy(()=>Ml).array()]).optional()}).strict(),K$=e.object({create:e.union([e.lazy(()=>fu),e.lazy(()=>fu).array(),e.lazy(()=>ju),e.lazy(()=>ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Qz),e.lazy(()=>Qz).array()]).optional(),upsert:e.union([e.lazy(()=>tk),e.lazy(()=>tk).array()]).optional(),createMany:e.lazy(()=>LO).optional(),set:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),disconnect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),delete:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),connect:e.union([e.lazy(()=>It),e.lazy(()=>It).array()]).optional(),update:e.union([e.lazy(()=>ak),e.lazy(()=>ak).array()]).optional(),updateMany:e.union([e.lazy(()=>nk),e.lazy(()=>nk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ml),e.lazy(()=>Ml).array()]).optional()}).strict(),X$=e.object({create:e.union([e.lazy(()=>Mu),e.lazy(()=>Mu).array(),e.lazy(()=>Ou),e.lazy(()=>Ou).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gz),e.lazy(()=>Gz).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),e1=e.object({create:e.union([e.lazy(()=>wu),e.lazy(()=>wu).array(),e.lazy(()=>Tu),e.lazy(()=>Tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Yz),e.lazy(()=>Yz).array()]).optional(),createMany:e.lazy(()=>ZO).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),t1=e.object({create:e.union([e.lazy(()=>Mu),e.lazy(()=>Mu).array(),e.lazy(()=>Ou),e.lazy(()=>Ou).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gz),e.lazy(()=>Gz).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),a1=e.object({create:e.union([e.lazy(()=>wu),e.lazy(()=>wu).array(),e.lazy(()=>Tu),e.lazy(()=>Tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Yz),e.lazy(()=>Yz).array()]).optional(),createMany:e.lazy(()=>ZO).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional()}).strict(),ra=e.object({set:e.lazy(()=>oe).optional()}).strict(),n1=e.object({create:e.union([e.lazy(()=>Mu),e.lazy(()=>Mu).array(),e.lazy(()=>Ou),e.lazy(()=>Ou).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gz),e.lazy(()=>Gz).array()]).optional(),upsert:e.union([e.lazy(()=>ok),e.lazy(()=>ok).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>ik),e.lazy(()=>ik).array()]).optional(),updateMany:e.union([e.lazy(()=>rk),e.lazy(()=>rk).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),o1=e.object({create:e.union([e.lazy(()=>wu),e.lazy(()=>wu).array(),e.lazy(()=>Tu),e.lazy(()=>Tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Yz),e.lazy(()=>Yz).array()]).optional(),upsert:e.union([e.lazy(()=>lk),e.lazy(()=>lk).array()]).optional(),createMany:e.lazy(()=>ZO).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>ck),e.lazy(()=>ck).array()]).optional(),updateMany:e.union([e.lazy(()=>pk),e.lazy(()=>pk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),i1=e.object({create:e.union([e.lazy(()=>Mu),e.lazy(()=>Mu).array(),e.lazy(()=>Ou),e.lazy(()=>Ou).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Gz),e.lazy(()=>Gz).array()]).optional(),upsert:e.union([e.lazy(()=>ok),e.lazy(()=>ok).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>ik),e.lazy(()=>ik).array()]).optional(),updateMany:e.union([e.lazy(()=>rk),e.lazy(()=>rk).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),r1=e.object({create:e.union([e.lazy(()=>wu),e.lazy(()=>wu).array(),e.lazy(()=>Tu),e.lazy(()=>Tu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Yz),e.lazy(()=>Yz).array()]).optional(),upsert:e.union([e.lazy(()=>lk),e.lazy(()=>lk).array()]).optional(),createMany:e.lazy(()=>ZO).optional(),set:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),disconnect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),delete:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),connect:e.union([e.lazy(()=>G),e.lazy(()=>G).array()]).optional(),update:e.union([e.lazy(()=>ck),e.lazy(()=>ck).array()]).optional(),updateMany:e.union([e.lazy(()=>pk),e.lazy(()=>pk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional()}).strict(),iB=e.object({create:e.union([e.lazy(()=>$O),e.lazy(()=>QO)]).optional(),connectOrCreate:e.lazy(()=>L2).optional(),connect:e.lazy(()=>it).optional()}).strict(),rB=e.object({create:e.union([e.lazy(()=>GO),e.lazy(()=>YO)]).optional(),connectOrCreate:e.lazy(()=>Z2).optional(),connect:e.lazy(()=>v).optional()}).strict(),lB=e.object({create:e.union([e.lazy(()=>JO),e.lazy(()=>KO)]).optional(),connectOrCreate:e.lazy(()=>$2).optional(),connect:e.lazy(()=>O).optional()}).strict(),cB=e.object({create:e.union([e.lazy(()=>$O),e.lazy(()=>QO)]).optional(),connectOrCreate:e.lazy(()=>L2).optional(),upsert:e.lazy(()=>xee).optional(),connect:e.lazy(()=>it).optional(),update:e.union([e.lazy(()=>Vee),e.lazy(()=>Fq),e.lazy(()=>Eq)]).optional()}).strict(),pB=e.object({create:e.union([e.lazy(()=>GO),e.lazy(()=>YO)]).optional(),connectOrCreate:e.lazy(()=>Z2).optional(),upsert:e.lazy(()=>Hee).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>Lee),e.lazy(()=>Dq),e.lazy(()=>xq)]).optional()}).strict(),uB=e.object({create:e.union([e.lazy(()=>JO),e.lazy(()=>KO)]).optional(),connectOrCreate:e.lazy(()=>$2).optional(),upsert:e.lazy(()=>Zee).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>$ee),e.lazy(()=>Vq),e.lazy(()=>Hq)]).optional()}).strict(),hK=e.object({create:e.union([e.lazy(()=>XO),e.lazy(()=>ew)]).optional(),connectOrCreate:e.lazy(()=>Q2).optional(),connect:e.lazy(()=>O).optional()}).strict(),bK=e.object({create:e.union([e.lazy(()=>XO),e.lazy(()=>ew)]).optional(),connectOrCreate:e.lazy(()=>Q2).optional(),upsert:e.lazy(()=>Qee).optional(),connect:e.lazy(()=>O).optional(),update:e.union([e.lazy(()=>Gee),e.lazy(()=>Lq),e.lazy(()=>Zq)]).optional()}).strict(),sB=e.object({create:e.union([e.lazy(()=>tw),e.lazy(()=>aw)]).optional(),connectOrCreate:e.lazy(()=>G2).optional(),connect:e.lazy(()=>ee).optional()}).strict(),yB=e.object({create:e.union([e.lazy(()=>Pu),e.lazy(()=>Pu).array(),e.lazy(()=>Nu),e.lazy(()=>Nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jz),e.lazy(()=>Jz).array()]).optional(),createMany:e.lazy(()=>nw).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),dB=e.object({create:e.union([e.lazy(()=>Bu),e.lazy(()=>Bu).array(),e.lazy(()=>_u),e.lazy(()=>_u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Kz),e.lazy(()=>Kz).array()]).optional(),createMany:e.lazy(()=>ow).optional(),connect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional()}).strict(),mB=e.object({create:e.union([e.lazy(()=>Pu),e.lazy(()=>Pu).array(),e.lazy(()=>Nu),e.lazy(()=>Nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jz),e.lazy(()=>Jz).array()]).optional(),createMany:e.lazy(()=>nw).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional()}).strict(),zB=e.object({create:e.union([e.lazy(()=>Bu),e.lazy(()=>Bu).array(),e.lazy(()=>_u),e.lazy(()=>_u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Kz),e.lazy(()=>Kz).array()]).optional(),createMany:e.lazy(()=>ow).optional(),connect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional()}).strict(),hB=e.object({create:e.union([e.lazy(()=>tw),e.lazy(()=>aw)]).optional(),connectOrCreate:e.lazy(()=>G2).optional(),upsert:e.lazy(()=>Yee).optional(),connect:e.lazy(()=>ee).optional(),update:e.union([e.lazy(()=>Jee),e.lazy(()=>$q),e.lazy(()=>Qq)]).optional()}).strict(),bB=e.object({create:e.union([e.lazy(()=>Pu),e.lazy(()=>Pu).array(),e.lazy(()=>Nu),e.lazy(()=>Nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jz),e.lazy(()=>Jz).array()]).optional(),upsert:e.union([e.lazy(()=>uk),e.lazy(()=>uk).array()]).optional(),createMany:e.lazy(()=>nw).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>sk),e.lazy(()=>sk).array()]).optional(),updateMany:e.union([e.lazy(()=>yk),e.lazy(()=>yk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),IB=e.object({create:e.union([e.lazy(()=>Bu),e.lazy(()=>Bu).array(),e.lazy(()=>_u),e.lazy(()=>_u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Kz),e.lazy(()=>Kz).array()]).optional(),upsert:e.union([e.lazy(()=>dk),e.lazy(()=>dk).array()]).optional(),createMany:e.lazy(()=>ow).optional(),set:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),disconnect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),delete:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),connect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),update:e.union([e.lazy(()=>mk),e.lazy(()=>mk).array()]).optional(),updateMany:e.union([e.lazy(()=>zk),e.lazy(()=>zk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ol),e.lazy(()=>Ol).array()]).optional()}).strict(),gB=e.object({create:e.union([e.lazy(()=>Pu),e.lazy(()=>Pu).array(),e.lazy(()=>Nu),e.lazy(()=>Nu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Jz),e.lazy(()=>Jz).array()]).optional(),upsert:e.union([e.lazy(()=>uk),e.lazy(()=>uk).array()]).optional(),createMany:e.lazy(()=>nw).optional(),set:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),disconnect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),delete:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),connect:e.union([e.lazy(()=>R),e.lazy(()=>R).array()]).optional(),update:e.union([e.lazy(()=>sk),e.lazy(()=>sk).array()]).optional(),updateMany:e.union([e.lazy(()=>yk),e.lazy(()=>yk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional()}).strict(),SB=e.object({create:e.union([e.lazy(()=>Bu),e.lazy(()=>Bu).array(),e.lazy(()=>_u),e.lazy(()=>_u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Kz),e.lazy(()=>Kz).array()]).optional(),upsert:e.union([e.lazy(()=>dk),e.lazy(()=>dk).array()]).optional(),createMany:e.lazy(()=>ow).optional(),set:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),disconnect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),delete:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),connect:e.union([e.lazy(()=>tt),e.lazy(()=>tt).array()]).optional(),update:e.union([e.lazy(()=>mk),e.lazy(()=>mk).array()]).optional(),updateMany:e.union([e.lazy(()=>zk),e.lazy(()=>zk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ol),e.lazy(()=>Ol).array()]).optional()}).strict(),l1=e.object({create:e.union([e.lazy(()=>iw),e.lazy(()=>rw)]).optional(),connectOrCreate:e.lazy(()=>Y2).optional(),connect:e.lazy(()=>R).optional()}).strict(),c1=e.object({create:e.union([e.lazy(()=>lw),e.lazy(()=>cw)]).optional(),connectOrCreate:e.lazy(()=>J2).optional(),connect:e.lazy(()=>v).optional()}).strict(),p1=e.object({create:e.union([e.lazy(()=>iw),e.lazy(()=>rw)]).optional(),connectOrCreate:e.lazy(()=>Y2).optional(),upsert:e.lazy(()=>Kee).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>Xee),e.lazy(()=>Gq),e.lazy(()=>Yq)]).optional()}).strict(),u1=e.object({create:e.union([e.lazy(()=>lw),e.lazy(()=>cw)]).optional(),connectOrCreate:e.lazy(()=>J2).optional(),upsert:e.lazy(()=>ete).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>tte),e.lazy(()=>Jq),e.lazy(()=>Kq)]).optional()}).strict(),Jt=e.object({set:e.number().array()}).strict(),Kt=e.object({set:e.number().array()}).strict(),Xt=e.object({set:e.number().array()}).strict(),ea=e.object({set:e.string().array()}).strict(),Zy=e.object({create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)]).optional(),connectOrCreate:e.lazy(()=>pw).optional(),connect:e.lazy(()=>xi).optional()}).strict(),$y=e.object({create:e.union([e.lazy(()=>uw),e.lazy(()=>sw)]).optional(),connectOrCreate:e.lazy(()=>K2).optional(),connect:e.lazy(()=>Xe).optional()}).strict(),Qy=e.object({create:e.union([e.lazy(()=>qu),e.lazy(()=>qu).array(),e.lazy(()=>Fu),e.lazy(()=>Fu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xz),e.lazy(()=>Xz).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),Gy=e.object({create:e.union([e.lazy(()=>Eu),e.lazy(()=>Eu).array(),e.lazy(()=>Du),e.lazy(()=>Du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>eh),e.lazy(()=>eh).array()]).optional(),createMany:e.lazy(()=>yw).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional()}).strict(),Yy=e.object({create:e.union([e.lazy(()=>xu),e.lazy(()=>xu).array(),e.lazy(()=>Vu),e.lazy(()=>Vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>th),e.lazy(()=>th).array()]).optional(),createMany:e.lazy(()=>dw).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional()}).strict(),Jy=e.object({create:e.union([e.lazy(()=>Hu),e.lazy(()=>Hu).array(),e.lazy(()=>Lu),e.lazy(()=>Lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ah),e.lazy(()=>ah).array()]).optional(),createMany:e.lazy(()=>mw).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),Ky=e.object({create:e.union([e.lazy(()=>Zu),e.lazy(()=>Zu).array(),e.lazy(()=>$u),e.lazy(()=>$u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nh),e.lazy(()=>nh).array()]).optional(),createMany:e.lazy(()=>zw).optional(),connect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional()}).strict(),Xy=e.object({create:e.union([e.lazy(()=>hw),e.lazy(()=>bw)]).optional(),connectOrCreate:e.lazy(()=>X2).optional(),connect:e.lazy(()=>tt).optional()}).strict(),ed=e.object({create:e.union([e.lazy(()=>Qu),e.lazy(()=>Qu).array(),e.lazy(()=>Gu),e.lazy(()=>Gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oh),e.lazy(()=>oh).array()]).optional(),createMany:e.lazy(()=>Iw).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),td=e.object({create:e.union([e.lazy(()=>Yu),e.lazy(()=>Yu).array(),e.lazy(()=>Ju),e.lazy(()=>Ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ih),e.lazy(()=>ih).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional()}).strict(),ad=e.object({create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)]).optional(),connectOrCreate:e.lazy(()=>pw).optional(),connect:e.lazy(()=>xi).optional()}).strict(),nd=e.object({create:e.union([e.lazy(()=>qu),e.lazy(()=>qu).array(),e.lazy(()=>Fu),e.lazy(()=>Fu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xz),e.lazy(()=>Xz).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional()}).strict(),od=e.object({create:e.union([e.lazy(()=>Eu),e.lazy(()=>Eu).array(),e.lazy(()=>Du),e.lazy(()=>Du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>eh),e.lazy(()=>eh).array()]).optional(),createMany:e.lazy(()=>yw).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional()}).strict(),id=e.object({create:e.union([e.lazy(()=>xu),e.lazy(()=>xu).array(),e.lazy(()=>Vu),e.lazy(()=>Vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>th),e.lazy(()=>th).array()]).optional(),createMany:e.lazy(()=>dw).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional()}).strict(),rd=e.object({create:e.union([e.lazy(()=>Hu),e.lazy(()=>Hu).array(),e.lazy(()=>Lu),e.lazy(()=>Lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ah),e.lazy(()=>ah).array()]).optional(),createMany:e.lazy(()=>mw).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional()}).strict(),ld=e.object({create:e.union([e.lazy(()=>Zu),e.lazy(()=>Zu).array(),e.lazy(()=>$u),e.lazy(()=>$u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nh),e.lazy(()=>nh).array()]).optional(),createMany:e.lazy(()=>zw).optional(),connect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional()}).strict(),cd=e.object({create:e.union([e.lazy(()=>Qu),e.lazy(()=>Qu).array(),e.lazy(()=>Gu),e.lazy(()=>Gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oh),e.lazy(()=>oh).array()]).optional(),createMany:e.lazy(()=>Iw).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional()}).strict(),pd=e.object({create:e.union([e.lazy(()=>Yu),e.lazy(()=>Yu).array(),e.lazy(()=>Ju),e.lazy(()=>Ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ih),e.lazy(()=>ih).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional()}).strict(),Nt=e.object({set:e.number().array().optional(),push:e.union([e.number(),e.number().array()]).optional()}).strict(),Bt=e.object({set:e.number().array().optional(),push:e.union([e.number(),e.number().array()]).optional()}).strict(),_t=e.object({set:e.number().array().optional(),push:e.union([e.number(),e.number().array()]).optional()}).strict(),qt=e.object({set:e.string().array().optional(),push:e.union([e.string(),e.string().array()]).optional()}).strict(),ud=e.object({create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)]).optional(),connectOrCreate:e.lazy(()=>pw).optional(),upsert:e.lazy(()=>e4).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Ft)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Ft)]).optional(),connect:e.lazy(()=>xi).optional(),update:e.union([e.lazy(()=>t4),e.lazy(()=>gw),e.lazy(()=>Sw)]).optional()}).strict(),sd=e.object({create:e.union([e.lazy(()=>uw),e.lazy(()=>sw)]).optional(),connectOrCreate:e.lazy(()=>K2).optional(),upsert:e.lazy(()=>ate).optional(),connect:e.lazy(()=>Xe).optional(),update:e.union([e.lazy(()=>nte),e.lazy(()=>Xq),e.lazy(()=>eF)]).optional()}).strict(),yd=e.object({create:e.union([e.lazy(()=>qu),e.lazy(()=>qu).array(),e.lazy(()=>Fu),e.lazy(()=>Fu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xz),e.lazy(()=>Xz).array()]).optional(),upsert:e.union([e.lazy(()=>hk),e.lazy(()=>hk).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>bk),e.lazy(()=>bk).array()]).optional(),updateMany:e.union([e.lazy(()=>Ik),e.lazy(()=>Ik).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),dd=e.object({create:e.union([e.lazy(()=>Eu),e.lazy(()=>Eu).array(),e.lazy(()=>Du),e.lazy(()=>Du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>eh),e.lazy(()=>eh).array()]).optional(),upsert:e.union([e.lazy(()=>gk),e.lazy(()=>gk).array()]).optional(),createMany:e.lazy(()=>yw).optional(),set:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),disconnect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),delete:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),update:e.union([e.lazy(()=>Sk),e.lazy(()=>Sk).array()]).optional(),updateMany:e.union([e.lazy(()=>vk),e.lazy(()=>vk).array()]).optional(),deleteMany:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional()}).strict(),md=e.object({create:e.union([e.lazy(()=>xu),e.lazy(()=>xu).array(),e.lazy(()=>Vu),e.lazy(()=>Vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>th),e.lazy(()=>th).array()]).optional(),upsert:e.union([e.lazy(()=>Ak),e.lazy(()=>Ak).array()]).optional(),createMany:e.lazy(()=>dw).optional(),set:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),disconnect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),delete:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),update:e.union([e.lazy(()=>Ck),e.lazy(()=>Ck).array()]).optional(),updateMany:e.union([e.lazy(()=>Wk),e.lazy(()=>Wk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional()}).strict(),zd=e.object({create:e.union([e.lazy(()=>Hu),e.lazy(()=>Hu).array(),e.lazy(()=>Lu),e.lazy(()=>Lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ah),e.lazy(()=>ah).array()]).optional(),upsert:e.union([e.lazy(()=>Uk),e.lazy(()=>Uk).array()]).optional(),createMany:e.lazy(()=>mw).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>kk),e.lazy(()=>kk).array()]).optional(),updateMany:e.union([e.lazy(()=>Rk),e.lazy(()=>Rk).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),hd=e.object({create:e.union([e.lazy(()=>Zu),e.lazy(()=>Zu).array(),e.lazy(()=>$u),e.lazy(()=>$u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nh),e.lazy(()=>nh).array()]).optional(),upsert:e.union([e.lazy(()=>fk),e.lazy(()=>fk).array()]).optional(),createMany:e.lazy(()=>zw).optional(),set:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),disconnect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),delete:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),connect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),update:e.union([e.lazy(()=>jk),e.lazy(()=>jk).array()]).optional(),updateMany:e.union([e.lazy(()=>Mk),e.lazy(()=>Mk).array()]).optional(),deleteMany:e.union([e.lazy(()=>wl),e.lazy(()=>wl).array()]).optional()}).strict(),bd=e.object({create:e.union([e.lazy(()=>hw),e.lazy(()=>bw)]).optional(),connectOrCreate:e.lazy(()=>X2).optional(),upsert:e.lazy(()=>ote).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Tt)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Tt)]).optional(),connect:e.lazy(()=>tt).optional(),update:e.union([e.lazy(()=>ite),e.lazy(()=>tF),e.lazy(()=>aF)]).optional()}).strict(),Id=e.object({create:e.union([e.lazy(()=>Qu),e.lazy(()=>Qu).array(),e.lazy(()=>Gu),e.lazy(()=>Gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oh),e.lazy(()=>oh).array()]).optional(),upsert:e.union([e.lazy(()=>Ok),e.lazy(()=>Ok).array()]).optional(),createMany:e.lazy(()=>Iw).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>wk),e.lazy(()=>wk).array()]).optional(),updateMany:e.union([e.lazy(()=>Tk),e.lazy(()=>Tk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),gd=e.object({create:e.union([e.lazy(()=>Yu),e.lazy(()=>Yu).array(),e.lazy(()=>Ju),e.lazy(()=>Ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ih),e.lazy(()=>ih).array()]).optional(),upsert:e.union([e.lazy(()=>Pk),e.lazy(()=>Pk).array()]).optional(),set:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),disconnect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),delete:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),update:e.union([e.lazy(()=>Nk),e.lazy(()=>Nk).array()]).optional(),updateMany:e.union([e.lazy(()=>Bk),e.lazy(()=>Bk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional()}).strict(),Sd=e.object({create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)]).optional(),connectOrCreate:e.lazy(()=>pw).optional(),upsert:e.lazy(()=>e4).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Ft)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Ft)]).optional(),connect:e.lazy(()=>xi).optional(),update:e.union([e.lazy(()=>t4),e.lazy(()=>gw),e.lazy(()=>Sw)]).optional()}).strict(),vd=e.object({create:e.union([e.lazy(()=>qu),e.lazy(()=>qu).array(),e.lazy(()=>Fu),e.lazy(()=>Fu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>Xz),e.lazy(()=>Xz).array()]).optional(),upsert:e.union([e.lazy(()=>hk),e.lazy(()=>hk).array()]).optional(),set:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),disconnect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),delete:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),connect:e.union([e.lazy(()=>v),e.lazy(()=>v).array()]).optional(),update:e.union([e.lazy(()=>bk),e.lazy(()=>bk).array()]).optional(),updateMany:e.union([e.lazy(()=>Ik),e.lazy(()=>Ik).array()]).optional(),deleteMany:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional()}).strict(),Ad=e.object({create:e.union([e.lazy(()=>Eu),e.lazy(()=>Eu).array(),e.lazy(()=>Du),e.lazy(()=>Du).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>eh),e.lazy(()=>eh).array()]).optional(),upsert:e.union([e.lazy(()=>gk),e.lazy(()=>gk).array()]).optional(),createMany:e.lazy(()=>yw).optional(),set:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),disconnect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),delete:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),connect:e.union([e.lazy(()=>ve),e.lazy(()=>ve).array()]).optional(),update:e.union([e.lazy(()=>Sk),e.lazy(()=>Sk).array()]).optional(),updateMany:e.union([e.lazy(()=>vk),e.lazy(()=>vk).array()]).optional(),deleteMany:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional()}).strict(),Cd=e.object({create:e.union([e.lazy(()=>xu),e.lazy(()=>xu).array(),e.lazy(()=>Vu),e.lazy(()=>Vu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>th),e.lazy(()=>th).array()]).optional(),upsert:e.union([e.lazy(()=>Ak),e.lazy(()=>Ak).array()]).optional(),createMany:e.lazy(()=>dw).optional(),set:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),disconnect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),delete:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),connect:e.union([e.lazy(()=>me),e.lazy(()=>me).array()]).optional(),update:e.union([e.lazy(()=>Ck),e.lazy(()=>Ck).array()]).optional(),updateMany:e.union([e.lazy(()=>Wk),e.lazy(()=>Wk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional()}).strict(),Wd=e.object({create:e.union([e.lazy(()=>Hu),e.lazy(()=>Hu).array(),e.lazy(()=>Lu),e.lazy(()=>Lu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ah),e.lazy(()=>ah).array()]).optional(),upsert:e.union([e.lazy(()=>Uk),e.lazy(()=>Uk).array()]).optional(),createMany:e.lazy(()=>mw).optional(),set:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),disconnect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),delete:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),connect:e.union([e.lazy(()=>H),e.lazy(()=>H).array()]).optional(),update:e.union([e.lazy(()=>kk),e.lazy(()=>kk).array()]).optional(),updateMany:e.union([e.lazy(()=>Rk),e.lazy(()=>Rk).array()]).optional(),deleteMany:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional()}).strict(),Ud=e.object({create:e.union([e.lazy(()=>Zu),e.lazy(()=>Zu).array(),e.lazy(()=>$u),e.lazy(()=>$u).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>nh),e.lazy(()=>nh).array()]).optional(),upsert:e.union([e.lazy(()=>fk),e.lazy(()=>fk).array()]).optional(),createMany:e.lazy(()=>zw).optional(),set:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),disconnect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),delete:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),connect:e.union([e.lazy(()=>vt),e.lazy(()=>vt).array()]).optional(),update:e.union([e.lazy(()=>jk),e.lazy(()=>jk).array()]).optional(),updateMany:e.union([e.lazy(()=>Mk),e.lazy(()=>Mk).array()]).optional(),deleteMany:e.union([e.lazy(()=>wl),e.lazy(()=>wl).array()]).optional()}).strict(),kd=e.object({create:e.union([e.lazy(()=>Qu),e.lazy(()=>Qu).array(),e.lazy(()=>Gu),e.lazy(()=>Gu).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>oh),e.lazy(()=>oh).array()]).optional(),upsert:e.union([e.lazy(()=>Ok),e.lazy(()=>Ok).array()]).optional(),createMany:e.lazy(()=>Iw).optional(),set:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),disconnect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),delete:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),connect:e.union([e.lazy(()=>V),e.lazy(()=>V).array()]).optional(),update:e.union([e.lazy(()=>wk),e.lazy(()=>wk).array()]).optional(),updateMany:e.union([e.lazy(()=>Tk),e.lazy(()=>Tk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional()}).strict(),Rd=e.object({create:e.union([e.lazy(()=>Yu),e.lazy(()=>Yu).array(),e.lazy(()=>Ju),e.lazy(()=>Ju).array()]).optional(),connectOrCreate:e.union([e.lazy(()=>ih),e.lazy(()=>ih).array()]).optional(),upsert:e.union([e.lazy(()=>Pk),e.lazy(()=>Pk).array()]).optional(),set:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),disconnect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),delete:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),connect:e.union([e.lazy(()=>ce),e.lazy(()=>ce).array()]).optional(),update:e.union([e.lazy(()=>Nk),e.lazy(()=>Nk).array()]).optional(),updateMany:e.union([e.lazy(()=>Bk),e.lazy(()=>Bk).array()]).optional(),deleteMany:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional()}).strict(),IK=e.object({create:e.union([e.lazy(()=>vw),e.lazy(()=>Aw)]).optional(),connectOrCreate:e.lazy(()=>a4).optional(),connect:e.lazy(()=>R).optional()}).strict(),gK=e.object({create:e.union([e.lazy(()=>vw),e.lazy(()=>Aw)]).optional(),connectOrCreate:e.lazy(()=>a4).optional(),upsert:e.lazy(()=>rte).optional(),disconnect:e.union([e.boolean(),e.lazy(()=>Ae)]).optional(),delete:e.union([e.boolean(),e.lazy(()=>Ae)]).optional(),connect:e.lazy(()=>R).optional(),update:e.union([e.lazy(()=>lte),e.lazy(()=>nF),e.lazy(()=>oF)]).optional()}).strict(),SK=e.object({create:e.union([e.lazy(()=>Cw),e.lazy(()=>Ww)]).optional(),connectOrCreate:e.lazy(()=>n4).optional(),connect:e.lazy(()=>v).optional()}).strict(),vK=e.object({create:e.union([e.lazy(()=>Cw),e.lazy(()=>Ww)]).optional(),connectOrCreate:e.lazy(()=>n4).optional(),upsert:e.lazy(()=>cte).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>pte),e.lazy(()=>iF),e.lazy(()=>rF)]).optional()}).strict(),AK=e.object({create:e.union([e.lazy(()=>Uw),e.lazy(()=>kw)]).optional(),connectOrCreate:e.lazy(()=>o4).optional(),connect:e.lazy(()=>v).optional()}).strict(),CK=e.object({create:e.union([e.lazy(()=>Uw),e.lazy(()=>kw)]).optional(),connectOrCreate:e.lazy(()=>o4).optional(),upsert:e.lazy(()=>ute).optional(),connect:e.lazy(()=>v).optional(),update:e.union([e.lazy(()=>ste),e.lazy(()=>lF),e.lazy(()=>cF)]).optional()}).strict(),Pe=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Pe)]).optional()}).strict(),og=e.object({equals:e.string().optional().nullable(),in:e.string().array().optional().nullable(),notIn:e.string().array().optional().nullable(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),not:e.union([e.string(),e.lazy(()=>og)]).optional().nullable()}).strict(),Gr=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Gr)]).optional()}).strict(),ig=e.object({equals:e.coerce.date().optional(),in:e.coerce.date().array().optional(),notIn:e.coerce.date().array().optional(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>ig)]).optional()}).strict(),s1=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>s1)]).optional(),_count:e.lazy(()=>Pe).optional(),_avg:e.lazy(()=>Gr).optional(),_sum:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Pe).optional(),_max:e.lazy(()=>Pe).optional()}).strict(),y1=e.object({equals:e.string().optional().nullable(),in:e.string().array().optional().nullable(),notIn:e.string().array().optional().nullable(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),not:e.union([e.string(),e.lazy(()=>y1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_min:e.lazy(()=>og).optional(),_max:e.lazy(()=>og).optional()}).strict(),mo=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>mo)]).optional().nullable()}).strict(),d1=e.object({equals:e.number().optional(),in:e.number().array().optional(),notIn:e.number().array().optional(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>d1)]).optional(),_count:e.lazy(()=>Pe).optional(),_avg:e.lazy(()=>Gr).optional(),_sum:e.lazy(()=>Gr).optional(),_min:e.lazy(()=>Gr).optional(),_max:e.lazy(()=>Gr).optional()}).strict(),m1=e.object({equals:e.coerce.date().optional(),in:e.coerce.date().array().optional(),notIn:e.coerce.date().array().optional(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>m1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>ig).optional(),_max:e.lazy(()=>ig).optional()}).strict(),rg=e.object({equals:e.string().optional(),in:e.string().array().optional(),notIn:e.string().array().optional(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),not:e.union([e.string(),e.lazy(()=>rg)]).optional()}).strict(),lg=e.object({equals:e.boolean().optional(),not:e.union([e.boolean(),e.lazy(()=>lg)]).optional()}).strict(),z1=e.object({equals:e.string().optional(),in:e.string().array().optional(),notIn:e.string().array().optional(),lt:e.string().optional(),lte:e.string().optional(),gt:e.string().optional(),gte:e.string().optional(),contains:e.string().optional(),startsWith:e.string().optional(),endsWith:e.string().optional(),not:e.union([e.string(),e.lazy(()=>z1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>rg).optional(),_max:e.lazy(()=>rg).optional()}).strict(),h1=e.object({equals:e.boolean().optional(),not:e.union([e.boolean(),e.lazy(()=>h1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>lg).optional(),_max:e.lazy(()=>lg).optional()}).strict(),cg=e.object({equals:e.coerce.date().optional().nullable(),in:e.coerce.date().array().optional().nullable(),notIn:e.coerce.date().array().optional().nullable(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>cg)]).optional().nullable()}).strict(),b1=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>b1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_avg:e.lazy(()=>Yr).optional(),_sum:e.lazy(()=>mo).optional(),_min:e.lazy(()=>mo).optional(),_max:e.lazy(()=>mo).optional()}).strict(),Yr=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>Yr)]).optional().nullable()}).strict(),I1=e.object({equals:e.coerce.date().optional().nullable(),in:e.coerce.date().array().optional().nullable(),notIn:e.coerce.date().array().optional().nullable(),lt:e.coerce.date().optional(),lte:e.coerce.date().optional(),gt:e.coerce.date().optional(),gte:e.coerce.date().optional(),not:e.union([e.coerce.date(),e.lazy(()=>I1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_min:e.lazy(()=>cg).optional(),_max:e.lazy(()=>cg).optional()}).strict(),pg=e.object({equals:e.lazy(()=>_e).optional(),in:e.lazy(()=>_e).array().optional(),notIn:e.lazy(()=>_e).array().optional(),not:e.union([e.lazy(()=>_e),e.lazy(()=>pg)]).optional()}).strict(),g1=e.object({equals:e.lazy(()=>_e).optional(),in:e.lazy(()=>_e).array().optional(),notIn:e.lazy(()=>_e).array().optional(),not:e.union([e.lazy(()=>_e),e.lazy(()=>g1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>pg).optional(),_max:e.lazy(()=>pg).optional()}).strict(),ug=e.object({equals:e.lazy(()=>lt).optional(),in:e.lazy(()=>lt).array().optional(),notIn:e.lazy(()=>lt).array().optional(),not:e.union([e.lazy(()=>lt),e.lazy(()=>ug)]).optional()}).strict(),S1=e.object({equals:e.lazy(()=>lt).optional(),in:e.lazy(()=>lt).array().optional(),notIn:e.lazy(()=>lt).array().optional(),not:e.union([e.lazy(()=>lt),e.lazy(()=>S1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>ug).optional(),_max:e.lazy(()=>ug).optional()}).strict(),v1=e.object({equals:e.number().optional().nullable(),in:e.number().array().optional().nullable(),notIn:e.number().array().optional().nullable(),lt:e.number().optional(),lte:e.number().optional(),gt:e.number().optional(),gte:e.number().optional(),not:e.union([e.number(),e.lazy(()=>v1)]).optional().nullable(),_count:e.lazy(()=>mo).optional(),_avg:e.lazy(()=>Yr).optional(),_sum:e.lazy(()=>Yr).optional(),_min:e.lazy(()=>Yr).optional(),_max:e.lazy(()=>Yr).optional()}).strict(),sg=e.object({equals:e.lazy(()=>qe).optional(),in:e.lazy(()=>qe).array().optional(),notIn:e.lazy(()=>qe).array().optional(),not:e.union([e.lazy(()=>qe),e.lazy(()=>sg)]).optional()}).strict(),A1=e.object({equals:e.lazy(()=>qe).optional(),in:e.lazy(()=>qe).array().optional(),notIn:e.lazy(()=>qe).array().optional(),not:e.union([e.lazy(()=>qe),e.lazy(()=>A1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>sg).optional(),_max:e.lazy(()=>sg).optional()}).strict(),yg=e.object({equals:e.lazy(()=>Le).optional(),in:e.lazy(()=>Le).array().optional(),notIn:e.lazy(()=>Le).array().optional(),not:e.union([e.lazy(()=>Le),e.lazy(()=>yg)]).optional()}).strict(),C1=e.object({equals:e.lazy(()=>Le).optional(),in:e.lazy(()=>Le).array().optional(),notIn:e.lazy(()=>Le).array().optional(),not:e.union([e.lazy(()=>Le),e.lazy(()=>C1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>yg).optional(),_max:e.lazy(()=>yg).optional()}).strict(),dg=e.object({equals:e.lazy(()=>xe).optional(),in:e.lazy(()=>xe).array().optional(),notIn:e.lazy(()=>xe).array().optional(),not:e.union([e.lazy(()=>xe),e.lazy(()=>dg)]).optional()}).strict(),W1=e.object({equals:e.lazy(()=>xe).optional(),in:e.lazy(()=>xe).array().optional(),notIn:e.lazy(()=>xe).array().optional(),not:e.union([e.lazy(()=>xe),e.lazy(()=>W1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>dg).optional(),_max:e.lazy(()=>dg).optional()}).strict(),mg=e.object({equals:e.lazy(()=>Oe).optional(),in:e.lazy(()=>Oe).array().optional(),notIn:e.lazy(()=>Oe).array().optional(),not:e.union([e.lazy(()=>Oe),e.lazy(()=>mg)]).optional()}).strict(),zg=e.object({equals:e.lazy(()=>we).optional(),in:e.lazy(()=>we).array().optional(),notIn:e.lazy(()=>we).array().optional(),not:e.union([e.lazy(()=>we),e.lazy(()=>zg)]).optional()}).strict(),U1=e.object({equals:e.lazy(()=>Oe).optional(),in:e.lazy(()=>Oe).array().optional(),notIn:e.lazy(()=>Oe).array().optional(),not:e.union([e.lazy(()=>Oe),e.lazy(()=>U1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>mg).optional(),_max:e.lazy(()=>mg).optional()}).strict(),k1=e.object({equals:e.lazy(()=>we).optional(),in:e.lazy(()=>we).array().optional(),notIn:e.lazy(()=>we).array().optional(),not:e.union([e.lazy(()=>we),e.lazy(()=>k1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>zg).optional(),_max:e.lazy(()=>zg).optional()}).strict(),hg=e.object({equals:e.lazy(()=>ct).optional(),in:e.lazy(()=>ct).array().optional(),notIn:e.lazy(()=>ct).array().optional(),not:e.union([e.lazy(()=>ct),e.lazy(()=>hg)]).optional()}).strict(),R1=e.object({equals:e.lazy(()=>ct).optional(),in:e.lazy(()=>ct).array().optional(),notIn:e.lazy(()=>ct).array().optional(),not:e.union([e.lazy(()=>ct),e.lazy(()=>R1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>hg).optional(),_max:e.lazy(()=>hg).optional()}).strict(),bg=e.object({equals:e.lazy(()=>pt).optional(),in:e.lazy(()=>pt).array().optional(),notIn:e.lazy(()=>pt).array().optional(),not:e.union([e.lazy(()=>pt),e.lazy(()=>bg)]).optional()}).strict(),f1=e.object({equals:e.lazy(()=>pt).optional(),in:e.lazy(()=>pt).array().optional(),notIn:e.lazy(()=>pt).array().optional(),not:e.union([e.lazy(()=>pt),e.lazy(()=>f1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>bg).optional(),_max:e.lazy(()=>bg).optional()}).strict(),Ig=e.object({equals:e.lazy(()=>ut).optional(),in:e.lazy(()=>ut).array().optional(),notIn:e.lazy(()=>ut).array().optional(),not:e.union([e.lazy(()=>ut),e.lazy(()=>Ig)]).optional()}).strict(),j1=e.object({equals:e.lazy(()=>ut).optional(),in:e.lazy(()=>ut).array().optional(),notIn:e.lazy(()=>ut).array().optional(),not:e.union([e.lazy(()=>ut),e.lazy(()=>j1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Ig).optional(),_max:e.lazy(()=>Ig).optional()}).strict(),gg=e.object({equals:e.lazy(()=>M).optional(),in:e.lazy(()=>M).array().optional(),notIn:e.lazy(()=>M).array().optional(),not:e.union([e.lazy(()=>M),e.lazy(()=>gg)]).optional()}).strict(),M1=e.object({equals:e.lazy(()=>M).optional(),in:e.lazy(()=>M).array().optional(),notIn:e.lazy(()=>M).array().optional(),not:e.union([e.lazy(()=>M),e.lazy(()=>M1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>gg).optional(),_max:e.lazy(()=>gg).optional()}).strict(),Sg=e.object({equals:e.lazy(()=>Be).optional(),in:e.lazy(()=>Be).array().optional(),notIn:e.lazy(()=>Be).array().optional(),not:e.union([e.lazy(()=>Be),e.lazy(()=>Sg)]).optional()}).strict(),O1=e.object({equals:e.lazy(()=>Be).optional(),in:e.lazy(()=>Be).array().optional(),notIn:e.lazy(()=>Be).array().optional(),not:e.union([e.lazy(()=>Be),e.lazy(()=>O1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Sg).optional(),_max:e.lazy(()=>Sg).optional()}).strict(),vg=e.object({equals:e.lazy(()=>Ze).optional(),in:e.lazy(()=>Ze).array().optional(),notIn:e.lazy(()=>Ze).array().optional(),not:e.union([e.lazy(()=>Ze),e.lazy(()=>vg)]).optional()}).strict(),w1=e.object({equals:e.lazy(()=>Ze).optional(),in:e.lazy(()=>Ze).array().optional(),notIn:e.lazy(()=>Ze).array().optional(),not:e.union([e.lazy(()=>Ze),e.lazy(()=>w1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>vg).optional(),_max:e.lazy(()=>vg).optional()}).strict(),Ag=e.object({equals:e.lazy(()=>oe).optional(),in:e.lazy(()=>oe).array().optional(),notIn:e.lazy(()=>oe).array().optional(),not:e.union([e.lazy(()=>oe),e.lazy(()=>Ag)]).optional()}).strict(),T1=e.object({equals:e.lazy(()=>oe).optional(),in:e.lazy(()=>oe).array().optional(),notIn:e.lazy(()=>oe).array().optional(),not:e.union([e.lazy(()=>oe),e.lazy(()=>T1)]).optional(),_count:e.lazy(()=>Pe).optional(),_min:e.lazy(()=>Ag).optional(),_max:e.lazy(()=>Ag).optional()}).strict(),mf=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),zf=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),P1=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>mf),e.lazy(()=>zf)])}).strict(),hf=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),bf=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),N1=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>hf),e.lazy(()=>bf)])}).strict(),WK=e.object({update:e.union([e.lazy(()=>vB),e.lazy(()=>AB)]),create:e.union([e.lazy(()=>mf),e.lazy(()=>zf)]),where:e.lazy(()=>x).optional()}).strict(),UK=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>vB),e.lazy(()=>AB)])}).strict(),vB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),AB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),kK=e.object({update:e.union([e.lazy(()=>CB),e.lazy(()=>WB)]),create:e.union([e.lazy(()=>hf),e.lazy(()=>bf)]),where:e.lazy(()=>Ae).optional()}).strict(),RK=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>CB),e.lazy(()=>WB)])}).strict(),CB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),WB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),If=e.object({name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>sB),menuItems:e.lazy(()=>yB).optional()}).strict(),gf=e.object({id:e.number().int().optional(),name:e.string(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>mB).optional()}).strict(),B1=e.object({where:e.lazy(()=>Xe),create:e.union([e.lazy(()=>If),e.lazy(()=>gf)])}).strict(),Hl=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),Ll=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),jm=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>Hl),e.lazy(()=>Ll)])}).strict(),Sf=e.object({data:e.union([e.lazy(()=>SE),e.lazy(()=>SE).array()]),skipDuplicates:e.boolean().optional()}).strict(),fK=e.object({update:e.union([e.lazy(()=>UB),e.lazy(()=>kB)]),create:e.union([e.lazy(()=>If),e.lazy(()=>gf)]),where:e.lazy(()=>Ot).optional()}).strict(),jK=e.object({where:e.lazy(()=>Ot).optional(),data:e.union([e.lazy(()=>UB),e.lazy(()=>kB)])}).strict(),UB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>hB).optional(),menuItems:e.lazy(()=>bB).optional()}).strict(),kB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>gB).optional()}).strict(),Kv=e.object({where:e.lazy(()=>R),update:e.union([e.lazy(()=>i4),e.lazy(()=>r4)]),create:e.union([e.lazy(()=>Hl),e.lazy(()=>Ll)])}).strict(),Xv=e.object({where:e.lazy(()=>R),data:e.union([e.lazy(()=>i4),e.lazy(()=>r4)])}).strict(),eA=e.object({where:e.lazy(()=>Yt),data:e.union([e.lazy(()=>hS),e.lazy(()=>yte)])}).strict(),Yt=e.object({AND:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional(),OR:e.lazy(()=>Yt).array().optional(),NOT:e.union([e.lazy(()=>Yt),e.lazy(()=>Yt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),price:e.union([e.lazy(()=>re),e.number()]).optional(),foodCost:e.union([e.lazy(()=>re),e.number()]).optional(),recipeIds:e.lazy(()=>af).optional(),recipeServingsAmount:e.lazy(()=>fm).optional(),recipeServingsCost:e.lazy(()=>fm).optional(),allergens:e.lazy(()=>zo).optional(),nutritionalInfoId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),menuId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),categoryId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable()}).strict(),vf=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Af=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),_1=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>vf),e.lazy(()=>Af)])}).strict(),Zl=e.object({quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipe:e.lazy(()=>TN),ingredient:e.lazy(()=>PN)}).strict(),$l=e.object({id:e.number().int().optional(),recipeId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional()}).strict(),Mm=e.object({where:e.lazy(()=>Q),create:e.union([e.lazy(()=>Zl),e.lazy(()=>$l)])}).strict(),Cf=e.object({data:e.union([e.lazy(()=>vE),e.lazy(()=>vE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Ql=e.object({stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipe:e.lazy(()=>T$)}).strict(),Gl=e.object({id:e.number().int().optional(),recipeId:e.number().int(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable()}).strict(),Om=e.object({where:e.lazy(()=>ge),create:e.union([e.lazy(()=>Ql),e.lazy(()=>Gl)])}).strict(),Wf=e.object({data:e.union([e.lazy(()=>AE),e.lazy(()=>AE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Uf=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),kf=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),q1=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Uf),e.lazy(()=>kf)])}).strict(),Rf=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional()}).strict(),ff=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional()}).strict(),F1=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Rf),e.lazy(()=>ff)])}).strict(),MK=e.object({update:e.union([e.lazy(()=>RB),e.lazy(()=>fB)]),create:e.union([e.lazy(()=>vf),e.lazy(()=>Af)]),where:e.lazy(()=>ie).optional()}).strict(),OK=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>RB),e.lazy(()=>fB)])}).strict(),RB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),fB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),tA=e.object({where:e.lazy(()=>Q),update:e.union([e.lazy(()=>l4),e.lazy(()=>c4)]),create:e.union([e.lazy(()=>Zl),e.lazy(()=>$l)])}).strict(),aA=e.object({where:e.lazy(()=>Q),data:e.union([e.lazy(()=>l4),e.lazy(()=>c4)])}).strict(),nA=e.object({where:e.lazy(()=>Na),data:e.union([e.lazy(()=>MR),e.lazy(()=>dte)])}).strict(),Na=e.object({AND:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional(),OR:e.lazy(()=>Na).array().optional(),NOT:e.union([e.lazy(()=>Na),e.lazy(()=>Na).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable()}).strict(),oA=e.object({where:e.lazy(()=>ge),update:e.union([e.lazy(()=>p4),e.lazy(()=>u4)]),create:e.union([e.lazy(()=>Ql),e.lazy(()=>Gl)])}).strict(),iA=e.object({where:e.lazy(()=>ge),data:e.union([e.lazy(()=>p4),e.lazy(()=>u4)])}).strict(),rA=e.object({where:e.lazy(()=>Ai),data:e.union([e.lazy(()=>_T),e.lazy(()=>mte)])}).strict(),Ai=e.object({AND:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional(),OR:e.lazy(()=>Ai).array().optional(),NOT:e.union([e.lazy(()=>Ai),e.lazy(()=>Ai).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),stepNumber:e.union([e.lazy(()=>z),e.number()]).optional(),instruction:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),recipeVersionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable()}).strict(),wK=e.object({update:e.union([e.lazy(()=>jB),e.lazy(()=>MB)]),create:e.union([e.lazy(()=>Uf),e.lazy(()=>kf)]),where:e.lazy(()=>P).optional()}).strict(),TK=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>jB),e.lazy(()=>MB)])}).strict(),jB=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),MB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),PK=e.object({update:e.union([e.lazy(()=>OB),e.lazy(()=>wB)]),create:e.union([e.lazy(()=>Rf),e.lazy(()=>ff)]),where:e.lazy(()=>P).optional()}).strict(),NK=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>OB),e.lazy(()=>wB)])}).strict(),OB=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional()}).strict(),wB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional()}).strict(),jf=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),Mf=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),E1=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>jf),e.lazy(()=>Mf)])}).strict(),Yl=e.object({notes:e.string().optional().nullable(),recipe:e.lazy(()=>JZ)}).strict(),Jl=e.object({id:e.number().int().optional(),recipeId:e.number().int(),notes:e.string().optional().nullable()}).strict(),wm=e.object({where:e.lazy(()=>ze),create:e.union([e.lazy(()=>Yl),e.lazy(()=>Jl)])}).strict(),Of=e.object({data:e.union([e.lazy(()=>CE),e.lazy(()=>CE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Kl=e.object({date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Xl=e.object({id:e.number().int().optional(),date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Tm=e.object({where:e.lazy(()=>ht),create:e.union([e.lazy(()=>Kl),e.lazy(()=>Xl)])}).strict(),wf=e.object({data:e.union([e.lazy(()=>WE),e.lazy(()=>WE).array()]),skipDuplicates:e.boolean().optional()}).strict(),BK=e.object({update:e.union([e.lazy(()=>TB),e.lazy(()=>PB)]),create:e.union([e.lazy(()=>jf),e.lazy(()=>Mf)]),where:e.lazy(()=>x).optional()}).strict(),_K=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>TB),e.lazy(()=>PB)])}).strict(),TB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),PB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),lA=e.object({where:e.lazy(()=>ze),update:e.union([e.lazy(()=>s4),e.lazy(()=>y4)]),create:e.union([e.lazy(()=>Yl),e.lazy(()=>Jl)])}).strict(),cA=e.object({where:e.lazy(()=>ze),data:e.union([e.lazy(()=>s4),e.lazy(()=>y4)])}).strict(),pA=e.object({where:e.lazy(()=>Ci),data:e.union([e.lazy(()=>fT),e.lazy(()=>zte)])}).strict(),Ci=e.object({AND:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional(),OR:e.lazy(()=>Ci).array().optional(),NOT:e.union([e.lazy(()=>Ci),e.lazy(()=>Ci).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable()}).strict(),uA=e.object({where:e.lazy(()=>ht),update:e.union([e.lazy(()=>d4),e.lazy(()=>m4)]),create:e.union([e.lazy(()=>Kl),e.lazy(()=>Xl)])}).strict(),sA=e.object({where:e.lazy(()=>ht),data:e.union([e.lazy(()=>d4),e.lazy(()=>m4)])}).strict(),yA=e.object({where:e.lazy(()=>dl),data:e.union([e.lazy(()=>dV),e.lazy(()=>hte)])}).strict(),dl=e.object({AND:e.union([e.lazy(()=>dl),e.lazy(()=>dl).array()]).optional(),OR:e.lazy(()=>dl).array().optional(),NOT:e.union([e.lazy(()=>dl),e.lazy(()=>dl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),equipmentId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),type:e.union([e.lazy(()=>VT),e.lazy(()=>lt)]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),cost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),performedBy:e.union([e.lazy(()=>U),e.string()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),Tf=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Pf=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),D1=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Tf),e.lazy(()=>Pf)])}).strict(),Nf=e.object({name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>pP),maintenanceLogs:e.lazy(()=>sP).optional()}).strict(),Bf=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),maintenanceLogs:e.lazy(()=>dP).optional()}).strict(),x1=e.object({where:e.lazy(()=>Ye),create:e.union([e.lazy(()=>Nf),e.lazy(()=>Bf)])}).strict(),qK=e.object({update:e.union([e.lazy(()=>NB),e.lazy(()=>BB)]),create:e.union([e.lazy(()=>Tf),e.lazy(()=>Pf)]),where:e.lazy(()=>ie).optional()}).strict(),FK=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>NB),e.lazy(()=>BB)])}).strict(),NB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),BB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),EK=e.object({update:e.union([e.lazy(()=>_B),e.lazy(()=>qB)]),create:e.union([e.lazy(()=>Nf),e.lazy(()=>Bf)]),where:e.lazy(()=>ft).optional()}).strict(),DK=e.object({where:e.lazy(()=>ft).optional(),data:e.union([e.lazy(()=>_B),e.lazy(()=>qB)])}).strict(),_B=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>mP).optional(),maintenanceLogs:e.lazy(()=>hP).optional()}).strict(),qB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),maintenanceLogs:e.lazy(()=>IP).optional()}).strict(),_f=e.object({name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>pP),recipes:e.lazy(()=>uP).optional()}).strict(),qf=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>yP).optional()}).strict(),V1=e.object({where:e.lazy(()=>Ye),create:e.union([e.lazy(()=>_f),e.lazy(()=>qf)])}).strict(),xK=e.object({update:e.union([e.lazy(()=>FB),e.lazy(()=>EB)]),create:e.union([e.lazy(()=>_f),e.lazy(()=>qf)]),where:e.lazy(()=>ft).optional()}).strict(),VK=e.object({where:e.lazy(()=>ft).optional(),data:e.union([e.lazy(()=>FB),e.lazy(()=>EB)])}).strict(),FB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>mP).optional(),recipes:e.lazy(()=>zP).optional()}).strict(),EB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>bP).optional()}).strict(),Ff=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),Ef=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),H1=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>Ff),e.lazy(()=>Ef)])}).strict(),ec=e.object({description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),completions:e.lazy(()=>a$).optional()}).strict(),tc=e.object({id:e.number().int().optional(),description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),completions:e.lazy(()=>n$).optional()}).strict(),Pm=e.object({where:e.lazy(()=>at),create:e.union([e.lazy(()=>ec),e.lazy(()=>tc)])}).strict(),Df=e.object({data:e.union([e.lazy(()=>UE),e.lazy(()=>UE).array()]),skipDuplicates:e.boolean().optional()}).strict(),ac=e.object({date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),completedBy:e.lazy(()=>MP),items:e.lazy(()=>OP).optional()}).strict(),nc=e.object({id:e.number().int().optional(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>wP).optional()}).strict(),Nm=e.object({where:e.lazy(()=>le),create:e.union([e.lazy(()=>ac),e.lazy(()=>nc)])}).strict(),xf=e.object({data:e.union([e.lazy(()=>kE),e.lazy(()=>kE).array()]),skipDuplicates:e.boolean().optional()}).strict(),HK=e.object({update:e.union([e.lazy(()=>DB),e.lazy(()=>xB)]),create:e.union([e.lazy(()=>Ff),e.lazy(()=>Ef)]),where:e.lazy(()=>x).optional()}).strict(),LK=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>DB),e.lazy(()=>xB)])}).strict(),DB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),xB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),dA=e.object({where:e.lazy(()=>at),update:e.union([e.lazy(()=>z4),e.lazy(()=>h4)]),create:e.union([e.lazy(()=>ec),e.lazy(()=>tc)])}).strict(),mA=e.object({where:e.lazy(()=>at),data:e.union([e.lazy(()=>z4),e.lazy(()=>h4)])}).strict(),zA=e.object({where:e.lazy(()=>ml),data:e.union([e.lazy(()=>CV),e.lazy(()=>bte)])}).strict(),ml=e.object({AND:e.union([e.lazy(()=>ml),e.lazy(()=>ml).array()]).optional(),OR:e.lazy(()=>ml).array().optional(),NOT:e.union([e.lazy(()=>ml),e.lazy(()=>ml).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number()]).optional(),description:e.union([e.lazy(()=>U),e.string()]).optional(),order:e.union([e.lazy(()=>z),e.number()]).optional(),type:e.union([e.lazy(()=>ZT),e.lazy(()=>Le)]).optional(),requiredPhotos:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),hA=e.object({where:e.lazy(()=>le),update:e.union([e.lazy(()=>b4),e.lazy(()=>I4)]),create:e.union([e.lazy(()=>ac),e.lazy(()=>nc)])}).strict(),bA=e.object({where:e.lazy(()=>le),data:e.union([e.lazy(()=>b4),e.lazy(()=>I4)])}).strict(),IA=e.object({where:e.lazy(()=>Wi),data:e.union([e.lazy(()=>jT),e.lazy(()=>Ite)])}).strict(),Wi=e.object({AND:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional(),OR:e.lazy(()=>Wi).array().optional(),NOT:e.union([e.lazy(()=>Wi),e.lazy(()=>Wi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistId:e.union([e.lazy(()=>z),e.number()]).optional(),completedById:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),Vf=e.object({name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>gP),completions:e.lazy(()=>vP).optional()}).strict(),Hf=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),restaurantId:e.number().int(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),completions:e.lazy(()=>CP).optional()}).strict(),L1=e.object({where:e.lazy(()=>Je),create:e.union([e.lazy(()=>Vf),e.lazy(()=>Hf)])}).strict(),oc=e.object({status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklistComplete:e.lazy(()=>l$)}).strict(),ic=e.object({id:e.number().int().optional(),checklistCompleteId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Bm=e.object({where:e.lazy(()=>he),create:e.union([e.lazy(()=>oc),e.lazy(()=>ic)])}).strict(),Lf=e.object({data:e.union([e.lazy(()=>RE),e.lazy(()=>RE).array()]),skipDuplicates:e.boolean().optional()}).strict(),ZK=e.object({update:e.union([e.lazy(()=>VB),e.lazy(()=>HB)]),create:e.union([e.lazy(()=>Vf),e.lazy(()=>Hf)]),where:e.lazy(()=>jt).optional()}).strict(),$K=e.object({where:e.lazy(()=>jt).optional(),data:e.union([e.lazy(()=>VB),e.lazy(()=>HB)])}).strict(),VB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>WP).optional(),completions:e.lazy(()=>kP).optional()}).strict(),HB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),completions:e.lazy(()=>fP).optional()}).strict(),gA=e.object({where:e.lazy(()=>he),update:e.union([e.lazy(()=>g4),e.lazy(()=>S4)]),create:e.union([e.lazy(()=>oc),e.lazy(()=>ic)])}).strict(),SA=e.object({where:e.lazy(()=>he),data:e.union([e.lazy(()=>g4),e.lazy(()=>S4)])}).strict(),vA=e.object({where:e.lazy(()=>Ui),data:e.union([e.lazy(()=>MT),e.lazy(()=>gte)])}).strict(),Ui=e.object({AND:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional(),OR:e.lazy(()=>Ui).array().optional(),NOT:e.union([e.lazy(()=>Ui),e.lazy(()=>Ui).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),checklistCompleteId:e.union([e.lazy(()=>z),e.number()]).optional(),checklistItemId:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>$T),e.lazy(()=>xe)]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),photoUrls:e.lazy(()=>zo).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),Zf=e.object({name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>gP),items:e.lazy(()=>SP).optional()}).strict(),$f=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),restaurantId:e.number().int(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>AP).optional()}).strict(),Z1=e.object({where:e.lazy(()=>Je),create:e.union([e.lazy(()=>Zf),e.lazy(()=>$f)])}).strict(),Qf=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Gf=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),$1=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Qf),e.lazy(()=>Gf)])}).strict(),rc=e.object({status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklistItem:e.lazy(()=>c$)}).strict(),lc=e.object({id:e.number().int().optional(),checklistItemId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_m=e.object({where:e.lazy(()=>he),create:e.union([e.lazy(()=>rc),e.lazy(()=>lc)])}).strict(),Yf=e.object({data:e.union([e.lazy(()=>fE),e.lazy(()=>fE).array()]),skipDuplicates:e.boolean().optional()}).strict(),QK=e.object({update:e.union([e.lazy(()=>LB),e.lazy(()=>ZB)]),create:e.union([e.lazy(()=>Zf),e.lazy(()=>$f)]),where:e.lazy(()=>jt).optional()}).strict(),GK=e.object({where:e.lazy(()=>jt).optional(),data:e.union([e.lazy(()=>LB),e.lazy(()=>ZB)])}).strict(),LB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>WP).optional(),items:e.lazy(()=>UP).optional()}).strict(),ZB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>RP).optional()}).strict(),YK=e.object({update:e.union([e.lazy(()=>$B),e.lazy(()=>QB)]),create:e.union([e.lazy(()=>Qf),e.lazy(()=>Gf)]),where:e.lazy(()=>P).optional()}).strict(),JK=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>$B),e.lazy(()=>QB)])}).strict(),$B=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),QB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),AA=e.object({where:e.lazy(()=>he),update:e.union([e.lazy(()=>v4),e.lazy(()=>A4)]),create:e.union([e.lazy(()=>rc),e.lazy(()=>lc)])}).strict(),CA=e.object({where:e.lazy(()=>he),data:e.union([e.lazy(()=>v4),e.lazy(()=>A4)])}).strict(),WA=e.object({where:e.lazy(()=>Ui),data:e.union([e.lazy(()=>MT),e.lazy(()=>Ste)])}).strict(),Jf=e.object({date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklist:e.lazy(()=>jP),completedBy:e.lazy(()=>MP)}).strict(),Kf=e.object({id:e.number().int().optional(),checklistId:e.number().int(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Q1=e.object({where:e.lazy(()=>le),create:e.union([e.lazy(()=>Jf),e.lazy(()=>Kf)])}).strict(),Xf=e.object({description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklist:e.lazy(()=>t$)}).strict(),ej=e.object({id:e.number().int().optional(),checklistId:e.number().int(),description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),G1=e.object({where:e.lazy(()=>at),create:e.union([e.lazy(()=>Xf),e.lazy(()=>ej)])}).strict(),KK=e.object({update:e.union([e.lazy(()=>GB),e.lazy(()=>YB)]),create:e.union([e.lazy(()=>Jf),e.lazy(()=>Kf)]),where:e.lazy(()=>Dt).optional()}).strict(),XK=e.object({where:e.lazy(()=>Dt).optional(),data:e.union([e.lazy(()=>GB),e.lazy(()=>YB)])}).strict(),GB=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklist:e.lazy(()=>TP).optional(),completedBy:e.lazy(()=>PP).optional()}).strict(),YB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),completedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),eX=e.object({update:e.union([e.lazy(()=>JB),e.lazy(()=>KB)]),create:e.union([e.lazy(()=>Xf),e.lazy(()=>ej)]),where:e.lazy(()=>Et).optional()}).strict(),tX=e.object({where:e.lazy(()=>Et).optional(),data:e.union([e.lazy(()=>JB),e.lazy(()=>KB)])}).strict(),JB=e.object({description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklist:e.lazy(()=>o$).optional()}).strict(),KB=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),tj=e.object({name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>$N).optional(),ingredients:e.lazy(()=>QN).optional()}).strict(),aj=e.object({id:e.number().int().optional(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>YN).optional(),ingredients:e.lazy(()=>JN).optional()}).strict(),Y1=e.object({where:e.lazy(()=>Ke),create:e.union([e.lazy(()=>tj),e.lazy(()=>aj)])}).strict(),nj=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),oj=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional()}).strict(),J1=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>nj),e.lazy(()=>oj)])}).strict(),aX=e.object({update:e.union([e.lazy(()=>XB),e.lazy(()=>e_)]),create:e.union([e.lazy(()=>tj),e.lazy(()=>aj)]),where:e.lazy(()=>Mt).optional()}).strict(),nX=e.object({where:e.lazy(()=>Mt).optional(),data:e.union([e.lazy(()=>XB),e.lazy(()=>e_)])}).strict(),XB=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>XN).optional(),ingredients:e.lazy(()=>eB).optional()}).strict(),e_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>aB).optional(),ingredients:e.lazy(()=>nB).optional()}).strict(),oX=e.object({update:e.union([e.lazy(()=>t_),e.lazy(()=>a_)]),create:e.union([e.lazy(()=>nj),e.lazy(()=>oj)]),where:e.lazy(()=>Te).optional()}).strict(),iX=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>t_),e.lazy(()=>a_)])}).strict(),t_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),a_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional()}).strict(),ij=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional()}).strict(),rj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional()}).strict(),K1=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>ij),e.lazy(()=>rj)])}).strict(),lj=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),cj=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),X1=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>lj),e.lazy(()=>cj)])}).strict(),pj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),uj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),e2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>pj),e.lazy(()=>uj)])}).strict(),rX=e.object({update:e.union([e.lazy(()=>n_),e.lazy(()=>o_)]),create:e.union([e.lazy(()=>ij),e.lazy(()=>rj)]),where:e.lazy(()=>x).optional()}).strict(),lX=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>n_),e.lazy(()=>o_)])}).strict(),n_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional()}).strict(),o_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional()}).strict(),cX=e.object({update:e.union([e.lazy(()=>i_),e.lazy(()=>r_)]),create:e.union([e.lazy(()=>lj),e.lazy(()=>cj)]),where:e.lazy(()=>Ae).optional()}).strict(),pX=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>i_),e.lazy(()=>r_)])}).strict(),i_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),r_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),uX=e.object({update:e.union([e.lazy(()=>l_),e.lazy(()=>c_)]),create:e.union([e.lazy(()=>pj),e.lazy(()=>uj)]),where:e.lazy(()=>P).optional()}).strict(),sX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>l_),e.lazy(()=>c_)])}).strict(),l_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),c_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),cc=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional()}).strict(),pc=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional()}).strict(),qm=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>cc),e.lazy(()=>pc)])}).strict(),uc=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional()}).strict(),sc=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional()}).strict(),Fm=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>uc),e.lazy(()=>sc)])}).strict(),yc=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional()}).strict(),dc=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),Em=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>yc),e.lazy(()=>dc)])}).strict(),sj=e.object({data:e.union([e.lazy(()=>jE),e.lazy(()=>jE).array()]),skipDuplicates:e.boolean().optional()}).strict(),UA=e.object({where:e.lazy(()=>R),update:e.union([e.lazy(()=>C4),e.lazy(()=>W4)]),create:e.union([e.lazy(()=>cc),e.lazy(()=>pc)])}).strict(),kA=e.object({where:e.lazy(()=>R),data:e.union([e.lazy(()=>C4),e.lazy(()=>W4)])}).strict(),RA=e.object({where:e.lazy(()=>Yt),data:e.union([e.lazy(()=>hS),e.lazy(()=>vte)])}).strict(),fA=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>U4),e.lazy(()=>k4)]),create:e.union([e.lazy(()=>uc),e.lazy(()=>sc)])}).strict(),jA=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>U4),e.lazy(()=>k4)])}).strict(),MA=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>Ate)])}).strict(),rt=e.object({AND:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional(),OR:e.lazy(()=>rt).array().optional(),NOT:e.union([e.lazy(()=>rt),e.lazy(()=>rt).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.lazy(()=>zo).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),servings:e.union([e.lazy(()=>z),e.number()]).optional(),cookTime:e.union([e.lazy(()=>z),e.number()]).optional(),prepTime:e.union([e.lazy(()=>z),e.number()]).optional(),frequency:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),cookBookId:e.union([e.lazy(()=>z),e.number()]).optional(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),OA=e.object({where:e.lazy(()=>Y),update:e.union([e.lazy(()=>R4),e.lazy(()=>f4)]),create:e.union([e.lazy(()=>yc),e.lazy(()=>dc)])}).strict(),wA=e.object({where:e.lazy(()=>Y),data:e.union([e.lazy(()=>R4),e.lazy(()=>f4)])}).strict(),TA=e.object({where:e.lazy(()=>ki),data:e.union([e.lazy(()=>BT),e.lazy(()=>Cte)])}).strict(),ki=e.object({AND:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional(),OR:e.lazy(()=>ki).array().optional(),NOT:e.union([e.lazy(()=>ki),e.lazy(()=>ki).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),category:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),dietaryRestrictionId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable()}).strict(),mc=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),zc=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Dm=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>mc),e.lazy(()=>zc)])}).strict(),PA=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>j4),e.lazy(()=>M4)]),create:e.union([e.lazy(()=>mc),e.lazy(()=>zc)])}).strict(),NA=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>j4),e.lazy(()=>M4)])}).strict(),BA=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>Wte)])}).strict(),yj=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),dj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),t2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>yj),e.lazy(()=>dj)])}).strict(),mj=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),zj=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),a2=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>mj),e.lazy(()=>zj)])}).strict(),hj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),bj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),n2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>hj),e.lazy(()=>bj)])}).strict(),yX=e.object({update:e.union([e.lazy(()=>p_),e.lazy(()=>u_)]),create:e.union([e.lazy(()=>yj),e.lazy(()=>dj)]),where:e.lazy(()=>x).optional()}).strict(),dX=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>p_),e.lazy(()=>u_)])}).strict(),p_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),u_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),mX=e.object({update:e.union([e.lazy(()=>s_),e.lazy(()=>y_)]),create:e.union([e.lazy(()=>mj),e.lazy(()=>zj)]),where:e.lazy(()=>Ae).optional()}).strict(),zX=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>s_),e.lazy(()=>y_)])}).strict(),s_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),y_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),hX=e.object({update:e.union([e.lazy(()=>d_),e.lazy(()=>m_)]),create:e.union([e.lazy(()=>hj),e.lazy(()=>bj)]),where:e.lazy(()=>P).optional()}).strict(),bX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>d_),e.lazy(()=>m_)])}).strict(),d_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),m_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Ij=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),gj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),o2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>Ij),e.lazy(()=>gj)])}).strict(),Sj=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),vj=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),i2=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>Sj),e.lazy(()=>vj)])}).strict(),Aj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Cj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),r2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Aj),e.lazy(()=>Cj)])}).strict(),IX=e.object({update:e.union([e.lazy(()=>z_),e.lazy(()=>h_)]),create:e.union([e.lazy(()=>Ij),e.lazy(()=>gj)]),where:e.lazy(()=>x).optional()}).strict(),gX=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>z_),e.lazy(()=>h_)])}).strict(),z_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),h_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),SX=e.object({update:e.union([e.lazy(()=>b_),e.lazy(()=>I_)]),create:e.union([e.lazy(()=>Sj),e.lazy(()=>vj)]),where:e.lazy(()=>Te).optional()}).strict(),vX=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>b_),e.lazy(()=>I_)])}).strict(),b_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),I_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),AX=e.object({update:e.union([e.lazy(()=>g_),e.lazy(()=>S_)]),create:e.union([e.lazy(()=>Aj),e.lazy(()=>Cj)]),where:e.lazy(()=>P).optional()}).strict(),CX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>g_),e.lazy(()=>S_)])}).strict(),g_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),S_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Wj=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),Uj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),l2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>Wj),e.lazy(()=>Uj)])}).strict(),kj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Rj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),c2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>kj),e.lazy(()=>Rj)])}).strict(),hc=e.object({quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>AN),assignedTo:e.lazy(()=>CN).optional()}).strict(),bc=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),xm=e.object({where:e.lazy(()=>Z),create:e.union([e.lazy(()=>hc),e.lazy(()=>bc)])}).strict(),fj=e.object({data:e.union([e.lazy(()=>ME),e.lazy(()=>ME).array()]),skipDuplicates:e.boolean().optional()}).strict(),WX=e.object({update:e.union([e.lazy(()=>v_),e.lazy(()=>A_)]),create:e.union([e.lazy(()=>Wj),e.lazy(()=>Uj)]),where:e.lazy(()=>x).optional()}).strict(),UX=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>v_),e.lazy(()=>A_)])}).strict(),v_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),A_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),kX=e.object({update:e.union([e.lazy(()=>C_),e.lazy(()=>W_)]),create:e.union([e.lazy(()=>kj),e.lazy(()=>Rj)]),where:e.lazy(()=>P).optional()}).strict(),RX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>C_),e.lazy(()=>W_)])}).strict(),C_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),W_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),_A=e.object({where:e.lazy(()=>Z),update:e.union([e.lazy(()=>O4),e.lazy(()=>w4)]),create:e.union([e.lazy(()=>hc),e.lazy(()=>bc)])}).strict(),qA=e.object({where:e.lazy(()=>Z),data:e.union([e.lazy(()=>O4),e.lazy(()=>w4)])}).strict(),FA=e.object({where:e.lazy(()=>Ba),data:e.union([e.lazy(()=>fR),e.lazy(()=>Ute)])}).strict(),Ba=e.object({AND:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional(),OR:e.lazy(()=>Ba).array().optional(),NOT:e.union([e.lazy(()=>Ba),e.lazy(()=>Ba).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),productionPlanId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),assignedToId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),jj=e.object({date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>dN),createdBy:e.lazy(()=>mN)}).strict(),Mj=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),p2=e.object({where:e.lazy(()=>pe),create:e.union([e.lazy(()=>jj),e.lazy(()=>Mj)])}).strict(),Oj=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),wj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),u2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Oj),e.lazy(()=>wj)])}).strict(),Tj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Pj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),s2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Tj),e.lazy(()=>Pj)])}).strict(),fX=e.object({update:e.union([e.lazy(()=>U_),e.lazy(()=>k_)]),create:e.union([e.lazy(()=>jj),e.lazy(()=>Mj)]),where:e.lazy(()=>xt).optional()}).strict(),jX=e.object({where:e.lazy(()=>xt).optional(),data:e.union([e.lazy(()=>U_),e.lazy(()=>k_)])}).strict(),U_=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>bN).optional(),createdBy:e.lazy(()=>IN).optional()}).strict(),k_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),MX=e.object({update:e.union([e.lazy(()=>R_),e.lazy(()=>f_)]),create:e.union([e.lazy(()=>Oj),e.lazy(()=>wj)]),where:e.lazy(()=>ie).optional()}).strict(),OX=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>R_),e.lazy(()=>f_)])}).strict(),R_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),f_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),wX=e.object({update:e.union([e.lazy(()=>j_),e.lazy(()=>M_)]),create:e.union([e.lazy(()=>Tj),e.lazy(()=>Pj)]),where:e.lazy(()=>P).optional()}).strict(),TX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>j_),e.lazy(()=>M_)])}).strict(),j_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),M_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Nj=e.object({startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze),user:e.lazy(()=>$$)}).strict(),Bj=e.object({id:e.number().int().optional(),userId:e.number().int(),startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze)}).strict(),y2=e.object({where:e.lazy(()=>ot),create:e.union([e.lazy(()=>Nj),e.lazy(()=>Bj)])}).strict(),PX=e.object({update:e.union([e.lazy(()=>O_),e.lazy(()=>w_)]),create:e.union([e.lazy(()=>Nj),e.lazy(()=>Bj)]),where:e.lazy(()=>Zt).optional()}).strict(),NX=e.object({where:e.lazy(()=>Zt).optional(),data:e.union([e.lazy(()=>O_),e.lazy(()=>w_)])}).strict(),O_=e.object({startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional(),user:e.lazy(()=>Y$).optional()}).strict(),w_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),userId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional()}).strict(),_j=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),qj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),d2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>_j),e.lazy(()=>qj)])}).strict(),BX=e.object({update:e.union([e.lazy(()=>T_),e.lazy(()=>P_)]),create:e.union([e.lazy(()=>_j),e.lazy(()=>qj)]),where:e.lazy(()=>P).optional()}).strict(),_X=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>T_),e.lazy(()=>P_)])}).strict(),T_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),P_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Fj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Ej=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),m2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Fj),e.lazy(()=>Ej)])}).strict(),qX=e.object({update:e.union([e.lazy(()=>N_),e.lazy(()=>B_)]),create:e.union([e.lazy(()=>Fj),e.lazy(()=>Ej)]),where:e.lazy(()=>P).optional()}).strict(),FX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>N_),e.lazy(()=>B_)])}).strict(),N_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),B_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Dj=e.object({quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),inventory:e.lazy(()=>nf),ingredient:e.lazy(()=>of),lastUpdatedBy:e.lazy(()=>rf).optional()}).strict(),xj=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional()}).strict(),z2=e.object({where:e.lazy(()=>D),create:e.union([e.lazy(()=>Dj),e.lazy(()=>xj)])}).strict(),Vj=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Hj=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),h2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Vj),e.lazy(()=>Hj)])}).strict(),Lj=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Zj=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),b2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Lj),e.lazy(()=>Zj)])}).strict(),EX=e.object({update:e.union([e.lazy(()=>__),e.lazy(()=>q_)]),create:e.union([e.lazy(()=>Dj),e.lazy(()=>xj)]),where:e.lazy(()=>Ht).optional()}).strict(),DX=e.object({where:e.lazy(()=>Ht).optional(),data:e.union([e.lazy(()=>__),e.lazy(()=>q_)])}).strict(),__=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventory:e.lazy(()=>pf).optional(),ingredient:e.lazy(()=>uf).optional(),lastUpdatedBy:e.lazy(()=>sf).optional()}).strict(),q_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),xX=e.object({update:e.union([e.lazy(()=>F_),e.lazy(()=>E_)]),create:e.union([e.lazy(()=>Vj),e.lazy(()=>Hj)]),where:e.lazy(()=>ie).optional()}).strict(),VX=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>F_),e.lazy(()=>E_)])}).strict(),F_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),E_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),HX=e.object({update:e.union([e.lazy(()=>D_),e.lazy(()=>x_)]),create:e.union([e.lazy(()=>Lj),e.lazy(()=>Zj)]),where:e.lazy(()=>P).optional()}).strict(),LX=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>D_),e.lazy(()=>x_)])}).strict(),D_=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),x_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),Ic=e.object({ingredient:e.lazy(()=>z$)}).strict(),gc=e.object({id:e.number().int().optional(),ingredientId:e.number().int()}).strict(),Vm=e.object({where:e.lazy(()=>Ie),create:e.union([e.lazy(()=>Ic),e.lazy(()=>gc)])}).strict(),$j=e.object({data:e.union([e.lazy(()=>OE),e.lazy(()=>OE).array()]),skipDuplicates:e.boolean().optional()}).strict(),EA=e.object({where:e.lazy(()=>Ie),update:e.union([e.lazy(()=>T4),e.lazy(()=>P4)]),create:e.union([e.lazy(()=>Ic),e.lazy(()=>gc)])}).strict(),DA=e.object({where:e.lazy(()=>Ie),data:e.union([e.lazy(()=>T4),e.lazy(()=>P4)])}).strict(),xA=e.object({where:e.lazy(()=>Ri),data:e.union([e.lazy(()=>PT),e.lazy(()=>kte)])}).strict(),Ri=e.object({AND:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional(),OR:e.lazy(()=>Ri).array().optional(),NOT:e.union([e.lazy(()=>Ri),e.lazy(()=>Ri).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),allergenId:e.union([e.lazy(()=>z),e.number()]).optional()}).strict(),Qj=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),Gj=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),I2=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>Qj),e.lazy(()=>Gj)])}).strict(),Yj=e.object({name:e.string(),description:e.string().optional().nullable()}).strict(),Jj=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable()}).strict(),g2=e.object({where:e.lazy(()=>Xr),create:e.union([e.lazy(()=>Yj),e.lazy(()=>Jj)])}).strict(),ZX=e.object({update:e.union([e.lazy(()=>V_),e.lazy(()=>H_)]),create:e.union([e.lazy(()=>Qj),e.lazy(()=>Gj)]),where:e.lazy(()=>Te).optional()}).strict(),$X=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>V_),e.lazy(()=>H_)])}).strict(),V_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),H_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),QX=e.object({update:e.union([e.lazy(()=>L_),e.lazy(()=>Z_)]),create:e.union([e.lazy(()=>Yj),e.lazy(()=>Jj)]),where:e.lazy(()=>na).optional()}).strict(),GX=e.object({where:e.lazy(()=>na).optional(),data:e.union([e.lazy(()=>L_),e.lazy(()=>Z_)])}).strict(),L_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),Z_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),Kj=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),Xj=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),S2=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>Kj),e.lazy(()=>Xj)])}).strict(),YX=e.object({update:e.union([e.lazy(()=>$_),e.lazy(()=>Q_)]),create:e.union([e.lazy(()=>Kj),e.lazy(()=>Xj)]),where:e.lazy(()=>Ae).optional()}).strict(),JX=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>$_),e.lazy(()=>Q_)])}).strict(),$_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),Q_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),Sc=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),vc=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),Hm=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>Sc),e.lazy(()=>vc)])}).strict(),eM=e.object({data:e.union([e.lazy(()=>wE),e.lazy(()=>wE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Ac=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Cc=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),Lm=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Ac),e.lazy(()=>Cc)])}).strict(),tM=e.object({data:e.union([e.lazy(()=>TE),e.lazy(()=>TE).array()]),skipDuplicates:e.boolean().optional()}).strict(),VA=e.object({where:e.lazy(()=>ee),update:e.union([e.lazy(()=>N4),e.lazy(()=>B4)]),create:e.union([e.lazy(()=>Sc),e.lazy(()=>vc)])}).strict(),HA=e.object({where:e.lazy(()=>ee),data:e.union([e.lazy(()=>N4),e.lazy(()=>B4)])}).strict(),LA=e.object({where:e.lazy(()=>zl),data:e.union([e.lazy(()=>tH),e.lazy(()=>Rte)])}).strict(),zl=e.object({AND:e.union([e.lazy(()=>zl),e.lazy(()=>zl).array()]).optional(),OR:e.lazy(()=>zl).array().optional(),NOT:e.union([e.lazy(()=>zl),e.lazy(()=>zl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),address:e.union([e.lazy(()=>U),e.string()]).optional(),city:e.union([e.lazy(()=>U),e.string()]).optional(),zipCode:e.union([e.lazy(()=>U),e.string()]).optional(),state:e.union([e.lazy(()=>U),e.string()]).optional(),owner:e.union([e.lazy(()=>U),e.string()]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),foodCost:e.union([e.lazy(()=>Qd),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),isDeleted:e.union([e.lazy(()=>oa),e.boolean()]).optional(),deleted:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable()}).strict(),ZA=e.object({where:e.lazy(()=>O),update:e.union([e.lazy(()=>_4),e.lazy(()=>q4)]),create:e.union([e.lazy(()=>Ac),e.lazy(()=>Cc)])}).strict(),$A=e.object({where:e.lazy(()=>O),data:e.union([e.lazy(()=>_4),e.lazy(()=>q4)])}).strict(),QA=e.object({where:e.lazy(()=>fi),data:e.union([e.lazy(()=>NT),e.lazy(()=>fte)])}).strict(),fi=e.object({AND:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional(),OR:e.lazy(()=>fi).array().optional(),NOT:e.union([e.lazy(()=>fi),e.lazy(()=>fi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),email:e.union([e.lazy(()=>U),e.string()]).optional(),sub:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),passwordHash:e.union([e.lazy(()=>U),e.string()]).optional(),firstName:e.union([e.lazy(()=>U),e.string()]).optional(),lastName:e.union([e.lazy(()=>U),e.string()]).optional(),profileImage:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),verified:e.union([e.lazy(()=>oa),e.boolean()]).optional(),role:e.union([e.lazy(()=>nP),e.lazy(()=>M)]).optional(),organizationId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),aM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),users:e.lazy(()=>S$).optional()}).strict(),nM=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),users:e.lazy(()=>A$).optional()}).strict(),v2=e.object({where:e.lazy(()=>Bi),create:e.union([e.lazy(()=>aM),e.lazy(()=>nM)])}).strict(),Wc=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),Uc=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),Zm=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>Wc),e.lazy(()=>Uc)])}).strict(),oM=e.object({data:e.union([e.lazy(()=>PE),e.lazy(()=>PE).array()]),skipDuplicates:e.boolean().optional()}).strict(),kc=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),recipes:e.lazy(()=>R$).optional()}).strict(),Rc=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),recipes:e.lazy(()=>j$).optional()}).strict(),$m=e.object({where:e.lazy(()=>nt),create:e.union([e.lazy(()=>kc),e.lazy(()=>Rc)])}).strict(),iM=e.object({data:e.union([e.lazy(()=>NE),e.lazy(()=>NE).array()]),skipDuplicates:e.boolean().optional()}).strict(),qg=e.object({items:e.lazy(()=>q$).optional()}).strict(),Fg=e.object({id:e.number().int().optional(),items:e.lazy(()=>F$).optional()}).strict(),rM=e.object({where:e.lazy(()=>so),create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)])}).strict(),fc=e.object({status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),vendor:e.lazy(()=>EN),items:e.lazy(()=>DN).optional()}).strict(),jc=e.object({id:e.number().int().optional(),vendorId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>xN).optional()}).strict(),Qm=e.object({where:e.lazy(()=>ue),create:e.union([e.lazy(()=>fc),e.lazy(()=>jc)])}).strict(),lM=e.object({data:e.union([e.lazy(()=>BE),e.lazy(()=>BE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Mc=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Oc=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Gm=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Mc),e.lazy(()=>Oc)])}).strict(),cM=e.object({data:e.union([e.lazy(()=>_E),e.lazy(()=>_E).array()]),skipDuplicates:e.boolean().optional()}).strict(),wc=e.object({name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>yB).optional(),MenuCategory:e.lazy(()=>dB).optional()}).strict(),Tc=e.object({id:e.number().int().optional(),name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>mB).optional(),MenuCategory:e.lazy(()=>zB).optional()}).strict(),Ym=e.object({where:e.lazy(()=>Xe),create:e.union([e.lazy(()=>wc),e.lazy(()=>Tc)])}).strict(),pM=e.object({data:e.union([e.lazy(()=>qE),e.lazy(()=>qE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Pc=e.object({posTransactionID:e.string().optional().nullable(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItem:e.lazy(()=>xZ)}).strict(),Nc=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),menuItemId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Jm=e.object({where:e.lazy(()=>me),create:e.union([e.lazy(()=>Pc),e.lazy(()=>Nc)])}).strict(),uM=e.object({data:e.union([e.lazy(()=>FE),e.lazy(()=>FE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Bc=e.object({date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItem:e.lazy(()=>aN),recordedBy:e.lazy(()=>nN)}).strict(),_c=e.object({id:e.number().int().optional(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Km=e.object({where:e.lazy(()=>H),create:e.union([e.lazy(()=>Bc),e.lazy(()=>_c)])}).strict(),sM=e.object({data:e.union([e.lazy(()=>EE),e.lazy(()=>EE).array()]),skipDuplicates:e.boolean().optional()}).strict(),qc=e.object({date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingrediente:e.lazy(()=>cN),recordedBy:e.lazy(()=>pN)}).strict(),Fc=e.object({id:e.number().int().optional(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Xm=e.object({where:e.lazy(()=>L),create:e.union([e.lazy(()=>qc),e.lazy(()=>Fc)])}).strict(),yM=e.object({data:e.union([e.lazy(()=>DE),e.lazy(()=>DE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Ec=e.object({date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),createdBy:e.lazy(()=>mN),items:e.lazy(()=>zN).optional()}).strict(),Dc=e.object({id:e.number().int().optional(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>hN).optional()}).strict(),ez=e.object({where:e.lazy(()=>pe),create:e.union([e.lazy(()=>Ec),e.lazy(()=>Dc)])}).strict(),dM=e.object({data:e.union([e.lazy(()=>xE),e.lazy(()=>xE).array()]),skipDuplicates:e.boolean().optional()}).strict(),xc=e.object({name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>uP).optional(),maintenanceLogs:e.lazy(()=>sP).optional()}).strict(),Vc=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>yP).optional(),maintenanceLogs:e.lazy(()=>dP).optional()}).strict(),tz=e.object({where:e.lazy(()=>Ye),create:e.union([e.lazy(()=>xc),e.lazy(()=>Vc)])}).strict(),mM=e.object({data:e.union([e.lazy(()=>VE),e.lazy(()=>VE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Hc=e.object({name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>SP).optional(),completions:e.lazy(()=>vP).optional()}).strict(),Lc=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>AP).optional(),completions:e.lazy(()=>CP).optional()}).strict(),az=e.object({where:e.lazy(()=>Je),create:e.union([e.lazy(()=>Hc),e.lazy(()=>Lc)])}).strict(),zM=e.object({data:e.union([e.lazy(()=>HE),e.lazy(()=>HE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Zc=e.object({rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItem:e.lazy(()=>qP).optional(),respondedBy:e.lazy(()=>FP).optional()}).strict(),$c=e.object({id:e.number().int().optional(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),nz=e.object({where:e.lazy(()=>V),create:e.union([e.lazy(()=>Zc),e.lazy(()=>$c)])}).strict(),hM=e.object({data:e.union([e.lazy(()=>LE),e.lazy(()=>LE).array()]),skipDuplicates:e.boolean().optional()}).strict(),KX=e.object({update:e.union([e.lazy(()=>G_),e.lazy(()=>Y_)]),create:e.union([e.lazy(()=>aM),e.lazy(()=>nM)]),where:e.lazy(()=>Rt).optional()}).strict(),XX=e.object({where:e.lazy(()=>Rt).optional(),data:e.union([e.lazy(()=>G_),e.lazy(()=>Y_)])}).strict(),G_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),users:e.lazy(()=>W$).optional()}).strict(),Y_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),users:e.lazy(()=>k$).optional()}).strict(),GA=e.object({where:e.lazy(()=>O),update:e.union([e.lazy(()=>F4),e.lazy(()=>E4)]),create:e.union([e.lazy(()=>Wc),e.lazy(()=>Uc)])}).strict(),YA=e.object({where:e.lazy(()=>O),data:e.union([e.lazy(()=>F4),e.lazy(()=>E4)])}).strict(),JA=e.object({where:e.lazy(()=>fi),data:e.union([e.lazy(()=>NT),e.lazy(()=>jte)])}).strict(),KA=e.object({where:e.lazy(()=>nt),update:e.union([e.lazy(()=>D4),e.lazy(()=>x4)]),create:e.union([e.lazy(()=>kc),e.lazy(()=>Rc)])}).strict(),XA=e.object({where:e.lazy(()=>nt),data:e.union([e.lazy(()=>D4),e.lazy(()=>x4)])}).strict(),eC=e.object({where:e.lazy(()=>hl),data:e.union([e.lazy(()=>zH),e.lazy(()=>Mte)])}).strict(),hl=e.object({AND:e.union([e.lazy(()=>hl),e.lazy(()=>hl).array()]).optional(),OR:e.lazy(()=>hl).array().optional(),NOT:e.union([e.lazy(()=>hl),e.lazy(()=>hl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),imageUrl:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),category:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable()}).strict(),A2=e.object({update:e.union([e.lazy(()=>bM),e.lazy(()=>IM)]),create:e.union([e.lazy(()=>qg),e.lazy(()=>Fg)]),where:e.lazy(()=>zt).optional()}).strict(),C2=e.object({where:e.lazy(()=>zt).optional(),data:e.union([e.lazy(()=>bM),e.lazy(()=>IM)])}).strict(),bM=e.object({items:e.lazy(()=>D$).optional()}).strict(),IM=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),items:e.lazy(()=>x$).optional()}).strict(),tC=e.object({where:e.lazy(()=>ue),update:e.union([e.lazy(()=>V4),e.lazy(()=>H4)]),create:e.union([e.lazy(()=>fc),e.lazy(()=>jc)])}).strict(),aC=e.object({where:e.lazy(()=>ue),data:e.union([e.lazy(()=>V4),e.lazy(()=>H4)])}).strict(),nC=e.object({where:e.lazy(()=>ji),data:e.union([e.lazy(()=>qT),e.lazy(()=>Ote)])}).strict(),ji=e.object({AND:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional(),OR:e.lazy(()=>ji).array().optional(),NOT:e.union([e.lazy(()=>ji),e.lazy(()=>ji).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>lP),e.lazy(()=>Be)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),oC=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>L4),e.lazy(()=>Z4)]),create:e.union([e.lazy(()=>Mc),e.lazy(()=>Oc)])}).strict(),iC=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>L4),e.lazy(()=>Z4)])}).strict(),rC=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>wte)])}).strict(),lC=e.object({where:e.lazy(()=>Xe),update:e.union([e.lazy(()=>$4),e.lazy(()=>Q4)]),create:e.union([e.lazy(()=>wc),e.lazy(()=>Tc)])}).strict(),cC=e.object({where:e.lazy(()=>Xe),data:e.union([e.lazy(()=>$4),e.lazy(()=>Q4)])}).strict(),pC=e.object({where:e.lazy(()=>bl),data:e.union([e.lazy(()=>AL),e.lazy(()=>Tte)])}).strict(),bl=e.object({AND:e.union([e.lazy(()=>bl),e.lazy(()=>bl).array()]).optional(),OR:e.lazy(()=>bl).array().optional(),NOT:e.union([e.lazy(()=>bl),e.lazy(()=>bl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),uC=e.object({where:e.lazy(()=>me),update:e.union([e.lazy(()=>G4),e.lazy(()=>Y4)]),create:e.union([e.lazy(()=>Pc),e.lazy(()=>Nc)])}).strict(),sC=e.object({where:e.lazy(()=>me),data:e.union([e.lazy(()=>G4),e.lazy(()=>Y4)])}).strict(),yC=e.object({where:e.lazy(()=>Mi),data:e.union([e.lazy(()=>RT),e.lazy(()=>Pte)])}).strict(),Mi=e.object({AND:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional(),OR:e.lazy(()=>Mi).array().optional(),NOT:e.union([e.lazy(()=>Mi),e.lazy(()=>Mi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),posTransactionID:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),total:e.union([e.lazy(()=>re),e.number()]).optional(),transactionDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),dC=e.object({where:e.lazy(()=>H),update:e.union([e.lazy(()=>J4),e.lazy(()=>K4)]),create:e.union([e.lazy(()=>Bc),e.lazy(()=>_c)])}).strict(),mC=e.object({where:e.lazy(()=>H),data:e.union([e.lazy(()=>J4),e.lazy(()=>K4)])}).strict(),zC=e.object({where:e.lazy(()=>_a),data:e.union([e.lazy(()=>kR),e.lazy(()=>Nte)])}).strict(),_a=e.object({AND:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional(),OR:e.lazy(()=>_a).array().optional(),NOT:e.union([e.lazy(()=>_a),e.lazy(()=>_a).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),hC=e.object({where:e.lazy(()=>L),update:e.union([e.lazy(()=>X4),e.lazy(()=>eQ)]),create:e.union([e.lazy(()=>qc),e.lazy(()=>Fc)])}).strict(),bC=e.object({where:e.lazy(()=>L),data:e.union([e.lazy(()=>X4),e.lazy(()=>eQ)])}).strict(),IC=e.object({where:e.lazy(()=>qa),data:e.union([e.lazy(()=>RR),e.lazy(()=>Bte)])}).strict(),qa=e.object({AND:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional(),OR:e.lazy(()=>qa).array().optional(),NOT:e.union([e.lazy(()=>qa),e.lazy(()=>qa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),reason:e.union([e.lazy(()=>U),e.string()]).optional(),recordedById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),gC=e.object({where:e.lazy(()=>pe),update:e.union([e.lazy(()=>tQ),e.lazy(()=>aQ)]),create:e.union([e.lazy(()=>Ec),e.lazy(()=>Dc)])}).strict(),SC=e.object({where:e.lazy(()=>pe),data:e.union([e.lazy(()=>tQ),e.lazy(()=>aQ)])}).strict(),vC=e.object({where:e.lazy(()=>Oi),data:e.union([e.lazy(()=>TT),e.lazy(()=>_te)])}).strict(),Oi=e.object({AND:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional(),OR:e.lazy(()=>Oi).array().optional(),NOT:e.union([e.lazy(()=>Oi),e.lazy(()=>Oi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),AC=e.object({where:e.lazy(()=>Ye),update:e.union([e.lazy(()=>nQ),e.lazy(()=>oQ)]),create:e.union([e.lazy(()=>xc),e.lazy(()=>Vc)])}).strict(),CC=e.object({where:e.lazy(()=>Ye),data:e.union([e.lazy(()=>nQ),e.lazy(()=>oQ)])}).strict(),WC=e.object({where:e.lazy(()=>Il),data:e.union([e.lazy(()=>oV),e.lazy(()=>qte)])}).strict(),Il=e.object({AND:e.union([e.lazy(()=>Il),e.lazy(()=>Il).array()]).optional(),OR:e.lazy(()=>Il).array().optional(),NOT:e.union([e.lazy(()=>Il),e.lazy(()=>Il).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),model:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),serialNumber:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),purchaseDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),lastMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),nextMaintenance:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),status:e.union([e.lazy(()=>xT),e.lazy(()=>_e)]).optional(),location:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),UC=e.object({where:e.lazy(()=>Je),update:e.union([e.lazy(()=>iQ),e.lazy(()=>rQ)]),create:e.union([e.lazy(()=>Hc),e.lazy(()=>Lc)])}).strict(),kC=e.object({where:e.lazy(()=>Je),data:e.union([e.lazy(()=>iQ),e.lazy(()=>rQ)])}).strict(),RC=e.object({where:e.lazy(()=>gl),data:e.union([e.lazy(()=>IV),e.lazy(()=>Fte)])}).strict(),gl=e.object({AND:e.union([e.lazy(()=>gl),e.lazy(()=>gl).array()]).optional(),OR:e.lazy(()=>gl).array().optional(),NOT:e.union([e.lazy(()=>gl),e.lazy(()=>gl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),frequency:e.union([e.lazy(()=>LT),e.lazy(()=>qe)]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),fC=e.object({where:e.lazy(()=>V),update:e.union([e.lazy(()=>lQ),e.lazy(()=>cQ)]),create:e.union([e.lazy(()=>Zc),e.lazy(()=>$c)])}).strict(),jC=e.object({where:e.lazy(()=>V),data:e.union([e.lazy(()=>lQ),e.lazy(()=>cQ)])}).strict(),MC=e.object({where:e.lazy(()=>Fa),data:e.union([e.lazy(()=>UR),e.lazy(()=>Ete)])}).strict(),Fa=e.object({AND:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional(),OR:e.lazy(()=>Fa).array().optional(),NOT:e.union([e.lazy(()=>Fa),e.lazy(()=>Fa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),restaurantId:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),rating:e.union([e.lazy(()=>z),e.number()]).optional(),comment:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),source:e.union([e.lazy(()=>QT),e.lazy(()=>Oe)]).optional(),tags:e.lazy(()=>zo).optional(),status:e.union([e.lazy(()=>GT),e.lazy(()=>we)]).optional(),responseText:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),respondedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),respondedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),gM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurants:e.lazy(()=>g$).optional()}).strict(),SM=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurants:e.lazy(()=>v$).optional()}).strict(),W2=e.object({where:e.lazy(()=>Bi),create:e.union([e.lazy(()=>gM),e.lazy(()=>SM)])}).strict(),vM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),AM=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),U2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>vM),e.lazy(()=>AM)])}).strict(),Qc=e.object({startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze),ShiftTask:e.lazy(()=>Q$).optional()}).strict(),Gc=e.object({id:e.number().int().optional(),startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze),ShiftTask:e.lazy(()=>G$).optional()}).strict(),oz=e.object({where:e.lazy(()=>ot),create:e.union([e.lazy(()=>Qc),e.lazy(()=>Gc)])}).strict(),CM=e.object({data:e.union([e.lazy(()=>ZE),e.lazy(()=>ZE).array()]),skipDuplicates:e.boolean().optional()}).strict(),Yc=e.object({quantity:e.number().int(),status:e.lazy(()=>oe),prepBoard:e.lazy(()=>iB),recipe:e.lazy(()=>rB)}).strict(),Jc=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe)}).strict(),iz=e.object({where:e.lazy(()=>G),create:e.union([e.lazy(()=>Yc),e.lazy(()=>Jc)])}).strict(),WM=e.object({data:e.union([e.lazy(()=>$E),e.lazy(()=>$E).array()]),skipDuplicates:e.boolean().optional()}).strict(),Kc=e.object({quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),inventory:e.lazy(()=>nf),ingredient:e.lazy(()=>of),InventoryWithdrawal:e.lazy(()=>lf).optional()}).strict(),Xc=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),InventoryWithdrawal:e.lazy(()=>cf).optional()}).strict(),rz=e.object({where:e.lazy(()=>D),create:e.union([e.lazy(()=>Kc),e.lazy(()=>Xc)])}).strict(),UM=e.object({data:e.union([e.lazy(()=>QE),e.lazy(()=>QE).array()]),skipDuplicates:e.boolean().optional()}).strict(),ep=e.object({id:e.string().optional(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional()}).strict(),tp=e.object({id:e.string().optional(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional()}).strict(),lz=e.object({where:e.lazy(()=>At),create:e.union([e.lazy(()=>ep),e.lazy(()=>tp)])}).strict(),kM=e.object({data:e.union([e.lazy(()=>GE),e.lazy(()=>GE).array()]),skipDuplicates:e.boolean().optional()}).strict(),ap=e.object({token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),np=e.object({id:e.number().int().optional(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),cz=e.object({where:e.lazy(()=>Ct),create:e.union([e.lazy(()=>ap),e.lazy(()=>np)])}).strict(),RM=e.object({data:e.union([e.lazy(()=>YE),e.lazy(()=>YE).array()]),skipDuplicates:e.boolean().optional()}).strict(),op=e.object({date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>tN),menuItem:e.lazy(()=>aN)}).strict(),ip=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),pz=e.object({where:e.lazy(()=>H),create:e.union([e.lazy(()=>op),e.lazy(()=>ip)])}).strict(),fM=e.object({data:e.union([e.lazy(()=>JE),e.lazy(()=>JE).array()]),skipDuplicates:e.boolean().optional()}).strict(),rp=e.object({date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>lN),ingrediente:e.lazy(()=>cN)}).strict(),lp=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),uz=e.object({where:e.lazy(()=>L),create:e.union([e.lazy(()=>rp),e.lazy(()=>lp)])}).strict(),jM=e.object({data:e.union([e.lazy(()=>KE),e.lazy(()=>KE).array()]),skipDuplicates:e.boolean().optional()}).strict(),cp=e.object({date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>dN),items:e.lazy(()=>zN).optional()}).strict(),pp=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>hN).optional()}).strict(),sz=e.object({where:e.lazy(()=>pe),create:e.union([e.lazy(()=>cp),e.lazy(()=>pp)])}).strict(),MM=e.object({data:e.union([e.lazy(()=>XE),e.lazy(()=>XE).array()]),skipDuplicates:e.boolean().optional()}).strict(),up=e.object({quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),productionPlan:e.lazy(()=>vN),recipe:e.lazy(()=>AN)}).strict(),sp=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),yz=e.object({where:e.lazy(()=>Z),create:e.union([e.lazy(()=>up),e.lazy(()=>sp)])}).strict(),OM=e.object({data:e.union([e.lazy(()=>eD),e.lazy(()=>eD).array()]),skipDuplicates:e.boolean().optional()}).strict(),yp=e.object({dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),dp=e.object({id:e.number().int().optional(),dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),dz=e.object({where:e.lazy(()=>gt),create:e.union([e.lazy(()=>yp),e.lazy(()=>dp)])}).strict(),wM=e.object({data:e.union([e.lazy(()=>tD),e.lazy(()=>tD).array()]),skipDuplicates:e.boolean().optional()}).strict(),mp=e.object({date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),zp=e.object({id:e.number().int().optional(),date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),mz=e.object({where:e.lazy(()=>St),create:e.union([e.lazy(()=>mp),e.lazy(()=>zp)])}).strict(),TM=e.object({data:e.union([e.lazy(()=>aD),e.lazy(()=>aD).array()]),skipDuplicates:e.boolean().optional()}).strict(),hp=e.object({dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),inventoryItem:e.lazy(()=>RN),recipe:e.lazy(()=>fN).optional()}).strict(),bp=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),zz=e.object({where:e.lazy(()=>$),create:e.union([e.lazy(()=>hp),e.lazy(()=>bp)])}).strict(),PM=e.object({data:e.union([e.lazy(()=>nD),e.lazy(()=>nD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Ip=e.object({date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),checklist:e.lazy(()=>jP),items:e.lazy(()=>OP).optional()}).strict(),gp=e.object({id:e.number().int().optional(),checklistId:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>wP).optional()}).strict(),hz=e.object({where:e.lazy(()=>le),create:e.union([e.lazy(()=>Ip),e.lazy(()=>gp)])}).strict(),NM=e.object({data:e.union([e.lazy(()=>oD),e.lazy(()=>oD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Sp=e.object({rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>_P),menuItem:e.lazy(()=>qP).optional()}).strict(),vp=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),bz=e.object({where:e.lazy(()=>V),create:e.union([e.lazy(()=>Sp),e.lazy(()=>vp)])}).strict(),BM=e.object({data:e.union([e.lazy(()=>iD),e.lazy(()=>iD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Ap=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>bS),ingredients:e.lazy(()=>IS).optional(),instructions:e.lazy(()=>gS).optional(),approvedBy:e.lazy(()=>vS).optional()}).strict(),Cp=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>AS).optional(),instructions:e.lazy(()=>CS).optional()}).strict(),Iz=e.object({where:e.lazy(()=>q),create:e.union([e.lazy(()=>Ap),e.lazy(()=>Cp)])}).strict(),_M=e.object({data:e.union([e.lazy(()=>rD),e.lazy(()=>rD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Wp=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>bS),ingredients:e.lazy(()=>IS).optional(),instructions:e.lazy(()=>gS).optional(),createdBy:e.lazy(()=>SS)}).strict(),Up=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>AS).optional(),instructions:e.lazy(()=>CS).optional()}).strict(),gz=e.object({where:e.lazy(()=>q),create:e.union([e.lazy(()=>Wp),e.lazy(()=>Up)])}).strict(),qM=e.object({data:e.union([e.lazy(()=>lD),e.lazy(()=>lD).array()]),skipDuplicates:e.boolean().optional()}).strict(),eee=e.object({update:e.union([e.lazy(()=>J_),e.lazy(()=>K_)]),create:e.union([e.lazy(()=>gM),e.lazy(()=>SM)]),where:e.lazy(()=>Rt).optional()}).strict(),tee=e.object({where:e.lazy(()=>Rt).optional(),data:e.union([e.lazy(()=>J_),e.lazy(()=>K_)])}).strict(),J_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurants:e.lazy(()=>C$).optional()}).strict(),K_=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurants:e.lazy(()=>U$).optional()}).strict(),aee=e.object({update:e.union([e.lazy(()=>X_),e.lazy(()=>eq)]),create:e.union([e.lazy(()=>vM),e.lazy(()=>AM)]),where:e.lazy(()=>x).optional()}).strict(),nee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>X_),e.lazy(()=>eq)])}).strict(),X_=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),eq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),OC=e.object({where:e.lazy(()=>ot),update:e.union([e.lazy(()=>pQ),e.lazy(()=>uQ)]),create:e.union([e.lazy(()=>Qc),e.lazy(()=>Gc)])}).strict(),wC=e.object({where:e.lazy(()=>ot),data:e.union([e.lazy(()=>pQ),e.lazy(()=>uQ)])}).strict(),TC=e.object({where:e.lazy(()=>Sl),data:e.union([e.lazy(()=>nL),e.lazy(()=>Dte)])}).strict(),Sl=e.object({AND:e.union([e.lazy(()=>Sl),e.lazy(()=>Sl).array()]).optional(),OR:e.lazy(()=>Sl).array().optional(),NOT:e.union([e.lazy(()=>Sl),e.lazy(()=>Sl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),status:e.union([e.lazy(()=>cP),e.lazy(()=>Ze)]).optional()}).strict(),PC=e.object({where:e.lazy(()=>G),update:e.union([e.lazy(()=>sQ),e.lazy(()=>yQ)]),create:e.union([e.lazy(()=>Yc),e.lazy(()=>Jc)])}).strict(),NC=e.object({where:e.lazy(()=>G),data:e.union([e.lazy(()=>sQ),e.lazy(()=>yQ)])}).strict(),BC=e.object({where:e.lazy(()=>Ea),data:e.union([e.lazy(()=>wR),e.lazy(()=>xte)])}).strict(),Ea=e.object({AND:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional(),OR:e.lazy(()=>Ea).array().optional(),NOT:e.union([e.lazy(()=>Ea),e.lazy(()=>Ea).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),prepBoardId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),assignedToId:e.union([e.lazy(()=>z),e.number()]).optional()}).strict(),_C=e.object({where:e.lazy(()=>D),update:e.union([e.lazy(()=>dQ),e.lazy(()=>mQ)]),create:e.union([e.lazy(()=>Kc),e.lazy(()=>Xc)])}).strict(),qC=e.object({where:e.lazy(()=>D),data:e.union([e.lazy(()=>dQ),e.lazy(()=>mQ)])}).strict(),FC=e.object({where:e.lazy(()=>Da),data:e.union([e.lazy(()=>OR),e.lazy(()=>Vte)])}).strict(),Da=e.object({AND:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional(),OR:e.lazy(()=>Da).array().optional(),NOT:e.union([e.lazy(()=>Da),e.lazy(()=>Da).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),inventoryId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),minQuantity:e.union([e.lazy(()=>re),e.number()]).optional(),restockThreshold:e.union([e.lazy(()=>re),e.number()]).optional(),lastUpdatedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),lastUpdated:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),EC=e.object({where:e.lazy(()=>At),update:e.union([e.lazy(()=>zQ),e.lazy(()=>hQ)]),create:e.union([e.lazy(()=>ep),e.lazy(()=>tp)])}).strict(),DC=e.object({where:e.lazy(()=>At),data:e.union([e.lazy(()=>zQ),e.lazy(()=>hQ)])}).strict(),xC=e.object({where:e.lazy(()=>vl),data:e.union([e.lazy(()=>uH),e.lazy(()=>Hte)])}).strict(),vl=e.object({AND:e.union([e.lazy(()=>vl),e.lazy(()=>vl).array()]).optional(),OR:e.lazy(()=>vl).array().optional(),NOT:e.union([e.lazy(()=>vl),e.lazy(()=>vl).array()]).optional(),id:e.union([e.lazy(()=>U),e.string()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),code:e.union([e.lazy(()=>U),e.string()]).optional(),token:e.union([e.lazy(()=>U),e.string()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),VC=e.object({where:e.lazy(()=>Ct),update:e.union([e.lazy(()=>bQ),e.lazy(()=>IQ)]),create:e.union([e.lazy(()=>ap),e.lazy(()=>np)])}).strict(),HC=e.object({where:e.lazy(()=>Ct),data:e.union([e.lazy(()=>bQ),e.lazy(()=>IQ)])}).strict(),LC=e.object({where:e.lazy(()=>Al),data:e.union([e.lazy(()=>bL),e.lazy(()=>Lte)])}).strict(),Al=e.object({AND:e.union([e.lazy(()=>Al),e.lazy(()=>Al).array()]).optional(),OR:e.lazy(()=>Al).array().optional(),NOT:e.union([e.lazy(()=>Al),e.lazy(()=>Al).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),token:e.union([e.lazy(()=>U),e.string()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),expiresAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),ZC=e.object({where:e.lazy(()=>H),update:e.union([e.lazy(()=>gQ),e.lazy(()=>SQ)]),create:e.union([e.lazy(()=>op),e.lazy(()=>ip)])}).strict(),$C=e.object({where:e.lazy(()=>H),data:e.union([e.lazy(()=>gQ),e.lazy(()=>SQ)])}).strict(),QC=e.object({where:e.lazy(()=>_a),data:e.union([e.lazy(()=>kR),e.lazy(()=>Zte)])}).strict(),GC=e.object({where:e.lazy(()=>L),update:e.union([e.lazy(()=>vQ),e.lazy(()=>AQ)]),create:e.union([e.lazy(()=>rp),e.lazy(()=>lp)])}).strict(),YC=e.object({where:e.lazy(()=>L),data:e.union([e.lazy(()=>vQ),e.lazy(()=>AQ)])}).strict(),JC=e.object({where:e.lazy(()=>qa),data:e.union([e.lazy(()=>RR),e.lazy(()=>$te)])}).strict(),KC=e.object({where:e.lazy(()=>pe),update:e.union([e.lazy(()=>CQ),e.lazy(()=>WQ)]),create:e.union([e.lazy(()=>cp),e.lazy(()=>pp)])}).strict(),XC=e.object({where:e.lazy(()=>pe),data:e.union([e.lazy(()=>CQ),e.lazy(()=>WQ)])}).strict(),eW=e.object({where:e.lazy(()=>Oi),data:e.union([e.lazy(()=>TT),e.lazy(()=>Qte)])}).strict(),tW=e.object({where:e.lazy(()=>Z),update:e.union([e.lazy(()=>UQ),e.lazy(()=>kQ)]),create:e.union([e.lazy(()=>up),e.lazy(()=>sp)])}).strict(),aW=e.object({where:e.lazy(()=>Z),data:e.union([e.lazy(()=>UQ),e.lazy(()=>kQ)])}).strict(),nW=e.object({where:e.lazy(()=>Ba),data:e.union([e.lazy(()=>fR),e.lazy(()=>Gte)])}).strict(),oW=e.object({where:e.lazy(()=>gt),update:e.union([e.lazy(()=>RQ),e.lazy(()=>fQ)]),create:e.union([e.lazy(()=>yp),e.lazy(()=>dp)])}).strict(),iW=e.object({where:e.lazy(()=>gt),data:e.union([e.lazy(()=>RQ),e.lazy(()=>fQ)])}).strict(),rW=e.object({where:e.lazy(()=>Cl),data:e.union([e.lazy(()=>S0),e.lazy(()=>Yte)])}).strict(),Cl=e.object({AND:e.union([e.lazy(()=>Cl),e.lazy(()=>Cl).array()]).optional(),OR:e.lazy(()=>Cl).array().optional(),NOT:e.union([e.lazy(()=>Cl),e.lazy(()=>Cl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),dayOfWeek:e.union([e.lazy(()=>KT),e.lazy(()=>pt)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),lW=e.object({where:e.lazy(()=>St),update:e.union([e.lazy(()=>jQ),e.lazy(()=>MQ)]),create:e.union([e.lazy(()=>mp),e.lazy(()=>zp)])}).strict(),cW=e.object({where:e.lazy(()=>St),data:e.union([e.lazy(()=>jQ),e.lazy(()=>MQ)])}).strict(),pW=e.object({where:e.lazy(()=>Wl),data:e.union([e.lazy(()=>U0),e.lazy(()=>Jte)])}).strict(),Wl=e.object({AND:e.union([e.lazy(()=>Wl),e.lazy(()=>Wl).array()]).optional(),OR:e.lazy(()=>Wl).array().optional(),NOT:e.union([e.lazy(()=>Wl),e.lazy(()=>Wl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),userId:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),constraintsType:e.union([e.lazy(()=>XT),e.lazy(()=>ut)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),uW=e.object({where:e.lazy(()=>$),update:e.union([e.lazy(()=>OQ),e.lazy(()=>wQ)]),create:e.union([e.lazy(()=>hp),e.lazy(()=>bp)])}).strict(),sW=e.object({where:e.lazy(()=>$),data:e.union([e.lazy(()=>OQ),e.lazy(()=>wQ)])}).strict(),yW=e.object({where:e.lazy(()=>xa),data:e.union([e.lazy(()=>jR),e.lazy(()=>Kte)])}).strict(),xa=e.object({AND:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional(),OR:e.lazy(()=>xa).array().optional(),NOT:e.union([e.lazy(()=>xa),e.lazy(()=>xa).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),inventoryItemId:e.union([e.lazy(()=>z),e.number()]).optional(),dateTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),recipeId:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),dW=e.object({where:e.lazy(()=>le),update:e.union([e.lazy(()=>TQ),e.lazy(()=>PQ)]),create:e.union([e.lazy(()=>Ip),e.lazy(()=>gp)])}).strict(),mW=e.object({where:e.lazy(()=>le),data:e.union([e.lazy(()=>TQ),e.lazy(()=>PQ)])}).strict(),zW=e.object({where:e.lazy(()=>Wi),data:e.union([e.lazy(()=>jT),e.lazy(()=>Xte)])}).strict(),hW=e.object({where:e.lazy(()=>V),update:e.union([e.lazy(()=>NQ),e.lazy(()=>BQ)]),create:e.union([e.lazy(()=>Sp),e.lazy(()=>vp)])}).strict(),bW=e.object({where:e.lazy(()=>V),data:e.union([e.lazy(()=>NQ),e.lazy(()=>BQ)])}).strict(),IW=e.object({where:e.lazy(()=>Fa),data:e.union([e.lazy(()=>UR),e.lazy(()=>eae)])}).strict(),gW=e.object({where:e.lazy(()=>q),update:e.union([e.lazy(()=>_Q),e.lazy(()=>qQ)]),create:e.union([e.lazy(()=>Ap),e.lazy(()=>Cp)])}).strict(),SW=e.object({where:e.lazy(()=>q),data:e.union([e.lazy(()=>_Q),e.lazy(()=>qQ)])}).strict(),vW=e.object({where:e.lazy(()=>Va),data:e.union([e.lazy(()=>WR),e.lazy(()=>tae)])}).strict(),Va=e.object({AND:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional(),OR:e.lazy(()=>Va).array().optional(),NOT:e.union([e.lazy(()=>Va),e.lazy(()=>Va).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),versionNumber:e.union([e.lazy(()=>z),e.number()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),changes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdById:e.union([e.lazy(()=>z),e.number()]).optional(),approvedById:e.union([e.lazy(()=>Ce),e.number()]).optional().nullable(),approvedAt:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),AW=e.object({where:e.lazy(()=>q),update:e.union([e.lazy(()=>FQ),e.lazy(()=>EQ)]),create:e.union([e.lazy(()=>Wp),e.lazy(()=>Up)])}).strict(),CW=e.object({where:e.lazy(()=>q),data:e.union([e.lazy(()=>FQ),e.lazy(()=>EQ)])}).strict(),WW=e.object({where:e.lazy(()=>Va),data:e.union([e.lazy(()=>WR),e.lazy(()=>aae)])}).strict(),FM=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),EM=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),k2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>FM),e.lazy(()=>EM)])}).strict(),oee=e.object({update:e.union([e.lazy(()=>tq),e.lazy(()=>aq)]),create:e.union([e.lazy(()=>FM),e.lazy(()=>EM)]),where:e.lazy(()=>P).optional()}).strict(),iee=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>tq),e.lazy(()=>aq)])}).strict(),tq=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),aq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),kp=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Rp=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Sz=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>kp),e.lazy(()=>Rp)])}).strict(),DM=e.object({data:e.union([e.lazy(()=>cD),e.lazy(()=>cD).array()]),skipDuplicates:e.boolean().optional()}).strict(),xM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),VM=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),R2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>xM),e.lazy(()=>VM)])}).strict(),UW=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>DQ),e.lazy(()=>xQ)]),create:e.union([e.lazy(()=>kp),e.lazy(()=>Rp)])}).strict(),kW=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>DQ),e.lazy(()=>xQ)])}).strict(),RW=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>nae)])}).strict(),ree=e.object({update:e.union([e.lazy(()=>nq),e.lazy(()=>oq)]),create:e.union([e.lazy(()=>xM),e.lazy(()=>VM)]),where:e.lazy(()=>x).optional()}).strict(),lee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>nq),e.lazy(()=>oq)])}).strict(),nq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),oq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),HM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),LM=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),f2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>HM),e.lazy(()=>LM)])}).strict(),ZM=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),restaurant:e.lazy(()=>f$).optional()}).strict(),$M=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string(),restaurantId:e.number().int().optional().nullable()}).strict(),j2=e.object({where:e.lazy(()=>nt),create:e.union([e.lazy(()=>ZM),e.lazy(()=>$M)])}).strict(),fp=e.object({quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),ingredient:e.lazy(()=>PN),RecipeVersion:e.lazy(()=>NN).optional()}).strict(),jp=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),vz=e.object({where:e.lazy(()=>Q),create:e.union([e.lazy(()=>fp),e.lazy(()=>jp)])}).strict(),QM=e.object({data:e.union([e.lazy(()=>pD),e.lazy(()=>pD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Mp=e.object({stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),RecipeVersion:e.lazy(()=>P$).optional()}).strict(),Op=e.object({id:e.number().int().optional(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipeVersionId:e.number().int().optional().nullable()}).strict(),Az=e.object({where:e.lazy(()=>ge),create:e.union([e.lazy(()=>Mp),e.lazy(()=>Op)])}).strict(),GM=e.object({data:e.union([e.lazy(()=>uD),e.lazy(()=>uD).array()]),skipDuplicates:e.boolean().optional()}).strict(),wp=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),Tp=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),Cz=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>wp),e.lazy(()=>Tp)])}).strict(),Pp=e.object({cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Np=e.object({id:e.number().int().optional(),cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Wz=e.object({where:e.lazy(()=>Wt),create:e.union([e.lazy(()=>Pp),e.lazy(()=>Np)])}).strict(),YM=e.object({data:e.union([e.lazy(()=>sD),e.lazy(()=>sD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Bp=e.object({quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_p=e.object({id:e.number().int().optional(),quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Uz=e.object({where:e.lazy(()=>Ut),create:e.union([e.lazy(()=>Bp),e.lazy(()=>_p)])}).strict(),JM=e.object({data:e.union([e.lazy(()=>yD),e.lazy(()=>yD).array()]),skipDuplicates:e.boolean().optional()}).strict(),qp=e.object({name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),prepItems:e.lazy(()=>e1).optional()}).strict(),Fp=e.object({id:e.number().int().optional(),name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),prepItems:e.lazy(()=>a1).optional()}).strict(),kz=e.object({where:e.lazy(()=>it),create:e.union([e.lazy(()=>qp),e.lazy(()=>Fp)])}).strict(),Ep=e.object({quantity:e.number().int(),status:e.lazy(()=>oe),prepBoard:e.lazy(()=>iB),assignedTo:e.lazy(()=>lB)}).strict(),Dp=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),Rz=e.object({where:e.lazy(()=>G),create:e.union([e.lazy(()=>Ep),e.lazy(()=>Dp)])}).strict(),KM=e.object({data:e.union([e.lazy(()=>dD),e.lazy(()=>dD).array()]),skipDuplicates:e.boolean().optional()}).strict(),xp=e.object({joinAt:e.coerce.date().optional(),menuItem:e.lazy(()=>l1)}).strict(),Vp=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),fz=e.object({where:e.lazy(()=>ve),create:e.union([e.lazy(()=>xp),e.lazy(()=>Vp)])}).strict(),XM=e.object({data:e.union([e.lazy(()=>mD),e.lazy(()=>mD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Hp=e.object({quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),productionPlan:e.lazy(()=>vN),assignedTo:e.lazy(()=>CN).optional()}).strict(),Lp=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),jz=e.object({where:e.lazy(()=>Z),create:e.union([e.lazy(()=>Hp),e.lazy(()=>Lp)])}).strict(),eO=e.object({data:e.union([e.lazy(()=>zD),e.lazy(()=>zD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Zp=e.object({dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),inventoryItem:e.lazy(()=>RN),createdBy:e.lazy(()=>jN)}).strict(),$p=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Mz=e.object({where:e.lazy(()=>$),create:e.union([e.lazy(()=>Zp),e.lazy(()=>$p)])}).strict(),tO=e.object({data:e.union([e.lazy(()=>hD),e.lazy(()=>hD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Qp=e.object({name:e.string(),description:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Gp=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Oz=e.object({where:e.lazy(()=>bt),create:e.union([e.lazy(()=>Qp),e.lazy(()=>Gp)])}).strict(),Yp=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>IS).optional(),instructions:e.lazy(()=>gS).optional(),createdBy:e.lazy(()=>SS),approvedBy:e.lazy(()=>vS).optional()}).strict(),Jp=e.object({id:e.number().int().optional(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>AS).optional(),instructions:e.lazy(()=>CS).optional()}).strict(),wz=e.object({where:e.lazy(()=>q),create:e.union([e.lazy(()=>Yp),e.lazy(()=>Jp)])}).strict(),aO=e.object({data:e.union([e.lazy(()=>bD),e.lazy(()=>bD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Kp=e.object({notes:e.string().optional().nullable(),equipment:e.lazy(()=>KZ)}).strict(),Xp=e.object({id:e.number().int().optional(),equipmentId:e.number().int(),notes:e.string().optional().nullable()}).strict(),Tz=e.object({where:e.lazy(()=>ze),create:e.union([e.lazy(()=>Kp),e.lazy(()=>Xp)])}).strict(),nO=e.object({data:e.union([e.lazy(()=>ID),e.lazy(()=>ID).array()]),skipDuplicates:e.boolean().optional()}).strict(),eu=e.object({name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>VP).optional(),ingredients:e.lazy(()=>LP).optional()}).strict(),tu=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>ZP).optional(),ingredients:e.lazy(()=>QP).optional()}).strict(),Pz=e.object({where:e.lazy(()=>ce),create:e.union([e.lazy(()=>eu),e.lazy(()=>tu)])}).strict(),cee=e.object({update:e.union([e.lazy(()=>iq),e.lazy(()=>rq)]),create:e.union([e.lazy(()=>HM),e.lazy(()=>LM)]),where:e.lazy(()=>x).optional()}).strict(),pee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>iq),e.lazy(()=>rq)])}).strict(),iq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),rq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),uee=e.object({update:e.union([e.lazy(()=>lq),e.lazy(()=>cq)]),create:e.union([e.lazy(()=>ZM),e.lazy(()=>$M)]),where:e.lazy(()=>Vt).optional()}).strict(),see=e.object({where:e.lazy(()=>Vt).optional(),data:e.union([e.lazy(()=>lq),e.lazy(()=>cq)])}).strict(),lq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurant:e.lazy(()=>O$).optional()}).strict(),cq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),fW=e.object({where:e.lazy(()=>Q),update:e.union([e.lazy(()=>VQ),e.lazy(()=>HQ)]),create:e.union([e.lazy(()=>fp),e.lazy(()=>jp)])}).strict(),jW=e.object({where:e.lazy(()=>Q),data:e.union([e.lazy(()=>VQ),e.lazy(()=>HQ)])}).strict(),MW=e.object({where:e.lazy(()=>Na),data:e.union([e.lazy(()=>MR),e.lazy(()=>oae)])}).strict(),OW=e.object({where:e.lazy(()=>ge),update:e.union([e.lazy(()=>LQ),e.lazy(()=>ZQ)]),create:e.union([e.lazy(()=>Mp),e.lazy(()=>Op)])}).strict(),wW=e.object({where:e.lazy(()=>ge),data:e.union([e.lazy(()=>LQ),e.lazy(()=>ZQ)])}).strict(),TW=e.object({where:e.lazy(()=>Ai),data:e.union([e.lazy(()=>_T),e.lazy(()=>iae)])}).strict(),PW=e.object({where:e.lazy(()=>R),update:e.union([e.lazy(()=>$Q),e.lazy(()=>QQ)]),create:e.union([e.lazy(()=>wp),e.lazy(()=>Tp)])}).strict(),NW=e.object({where:e.lazy(()=>R),data:e.union([e.lazy(()=>$Q),e.lazy(()=>QQ)])}).strict(),BW=e.object({where:e.lazy(()=>Yt),data:e.union([e.lazy(()=>hS),e.lazy(()=>rae)])}).strict(),_W=e.object({where:e.lazy(()=>Wt),update:e.union([e.lazy(()=>GQ),e.lazy(()=>YQ)]),create:e.union([e.lazy(()=>Pp),e.lazy(()=>Np)])}).strict(),qW=e.object({where:e.lazy(()=>Wt),data:e.union([e.lazy(()=>GQ),e.lazy(()=>YQ)])}).strict(),FW=e.object({where:e.lazy(()=>Ul),data:e.union([e.lazy(()=>FL),e.lazy(()=>lae)])}).strict(),Ul=e.object({AND:e.union([e.lazy(()=>Ul),e.lazy(()=>Ul).array()]).optional(),OR:e.lazy(()=>Ul).array().optional(),NOT:e.union([e.lazy(()=>Ul),e.lazy(()=>Ul).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),cost:e.union([e.lazy(()=>re),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),EW=e.object({where:e.lazy(()=>Ut),update:e.union([e.lazy(()=>JQ),e.lazy(()=>KQ)]),create:e.union([e.lazy(()=>Bp),e.lazy(()=>_p)])}).strict(),DW=e.object({where:e.lazy(()=>Ut),data:e.union([e.lazy(()=>JQ),e.lazy(()=>KQ)])}).strict(),xW=e.object({where:e.lazy(()=>kl),data:e.union([e.lazy(()=>HL),e.lazy(()=>cae)])}).strict(),kl=e.object({AND:e.union([e.lazy(()=>kl),e.lazy(()=>kl).array()]).optional(),OR:e.lazy(()=>kl).array().optional(),NOT:e.union([e.lazy(()=>kl),e.lazy(()=>kl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>z),e.number()]).optional(),date:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),VW=e.object({where:e.lazy(()=>it),update:e.union([e.lazy(()=>XQ),e.lazy(()=>eG)]),create:e.union([e.lazy(()=>qp),e.lazy(()=>Fp)])}).strict(),HW=e.object({where:e.lazy(()=>it),data:e.union([e.lazy(()=>XQ),e.lazy(()=>eG)])}).strict(),LW=e.object({where:e.lazy(()=>Rl),data:e.union([e.lazy(()=>cL),e.lazy(()=>pae)])}).strict(),Rl=e.object({AND:e.union([e.lazy(()=>Rl),e.lazy(()=>Rl).array()]).optional(),OR:e.lazy(()=>Rl).array().optional(),NOT:e.union([e.lazy(()=>Rl),e.lazy(()=>Rl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),status:e.union([e.lazy(()=>_g),e.lazy(()=>oe)]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),ZW=e.object({where:e.lazy(()=>G),update:e.union([e.lazy(()=>tG),e.lazy(()=>aG)]),create:e.union([e.lazy(()=>Ep),e.lazy(()=>Dp)])}).strict(),$W=e.object({where:e.lazy(()=>G),data:e.union([e.lazy(()=>tG),e.lazy(()=>aG)])}).strict(),QW=e.object({where:e.lazy(()=>Ea),data:e.union([e.lazy(()=>wR),e.lazy(()=>uae)])}).strict(),GW=e.object({where:e.lazy(()=>ve),update:e.union([e.lazy(()=>nG),e.lazy(()=>oG)]),create:e.union([e.lazy(()=>xp),e.lazy(()=>Vp)])}).strict(),YW=e.object({where:e.lazy(()=>ve),data:e.union([e.lazy(()=>nG),e.lazy(()=>oG)])}).strict(),JW=e.object({where:e.lazy(()=>wi),data:e.union([e.lazy(()=>ET),e.lazy(()=>sae)])}).strict(),wi=e.object({AND:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional(),OR:e.lazy(()=>wi).array().optional(),NOT:e.union([e.lazy(()=>wi),e.lazy(()=>wi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),recipeId:e.union([e.lazy(()=>z),e.number()]).optional(),joinAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),KW=e.object({where:e.lazy(()=>Z),update:e.union([e.lazy(()=>iG),e.lazy(()=>rG)]),create:e.union([e.lazy(()=>Hp),e.lazy(()=>Lp)])}).strict(),XW=e.object({where:e.lazy(()=>Z),data:e.union([e.lazy(()=>iG),e.lazy(()=>rG)])}).strict(),eU=e.object({where:e.lazy(()=>Ba),data:e.union([e.lazy(()=>fR),e.lazy(()=>yae)])}).strict(),tU=e.object({where:e.lazy(()=>$),update:e.union([e.lazy(()=>lG),e.lazy(()=>cG)]),create:e.union([e.lazy(()=>Zp),e.lazy(()=>$p)])}).strict(),aU=e.object({where:e.lazy(()=>$),data:e.union([e.lazy(()=>lG),e.lazy(()=>cG)])}).strict(),nU=e.object({where:e.lazy(()=>xa),data:e.union([e.lazy(()=>jR),e.lazy(()=>dae)])}).strict(),oU=e.object({where:e.lazy(()=>bt),update:e.union([e.lazy(()=>pG),e.lazy(()=>uG)]),create:e.union([e.lazy(()=>Qp),e.lazy(()=>Gp)])}).strict(),iU=e.object({where:e.lazy(()=>bt),data:e.union([e.lazy(()=>pG),e.lazy(()=>uG)])}).strict(),rU=e.object({where:e.lazy(()=>fl),data:e.union([e.lazy(()=>QV),e.lazy(()=>mae)])}).strict(),fl=e.object({AND:e.union([e.lazy(()=>fl),e.lazy(()=>fl).array()]).optional(),OR:e.lazy(()=>fl).array().optional(),NOT:e.union([e.lazy(()=>fl),e.lazy(()=>fl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),lU=e.object({where:e.lazy(()=>q),update:e.union([e.lazy(()=>sG),e.lazy(()=>yG)]),create:e.union([e.lazy(()=>Yp),e.lazy(()=>Jp)])}).strict(),cU=e.object({where:e.lazy(()=>q),data:e.union([e.lazy(()=>sG),e.lazy(()=>yG)])}).strict(),pU=e.object({where:e.lazy(()=>Va),data:e.union([e.lazy(()=>WR),e.lazy(()=>zae)])}).strict(),uU=e.object({where:e.lazy(()=>ze),update:e.union([e.lazy(()=>dG),e.lazy(()=>mG)]),create:e.union([e.lazy(()=>Kp),e.lazy(()=>Xp)])}).strict(),sU=e.object({where:e.lazy(()=>ze),data:e.union([e.lazy(()=>dG),e.lazy(()=>mG)])}).strict(),yU=e.object({where:e.lazy(()=>Ci),data:e.union([e.lazy(()=>fT),e.lazy(()=>hae)])}).strict(),dU=e.object({where:e.lazy(()=>ce),update:e.union([e.lazy(()=>zG),e.lazy(()=>hG)]),create:e.union([e.lazy(()=>eu),e.lazy(()=>tu)])}).strict(),mU=e.object({where:e.lazy(()=>ce),data:e.union([e.lazy(()=>zG),e.lazy(()=>hG)])}).strict(),zU=e.object({where:e.lazy(()=>Ti),data:e.union([e.lazy(()=>wT),e.lazy(()=>bae)])}).strict(),Ti=e.object({AND:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional(),OR:e.lazy(()=>Ti).array().optional(),NOT:e.union([e.lazy(()=>Ti),e.lazy(()=>Ti).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),icon:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),au=e.object({quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipe:e.lazy(()=>TN),RecipeVersion:e.lazy(()=>NN).optional()}).strict(),nu=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),Nz=e.object({where:e.lazy(()=>Q),create:e.union([e.lazy(()=>au),e.lazy(()=>nu)])}).strict(),oO=e.object({data:e.union([e.lazy(()=>gD),e.lazy(()=>gD).array()]),skipDuplicates:e.boolean().optional()}).strict(),ou=e.object({quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),inventory:e.lazy(()=>nf),lastUpdatedBy:e.lazy(()=>rf).optional(),InventoryWithdrawal:e.lazy(()=>lf).optional()}).strict(),iu=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional(),InventoryWithdrawal:e.lazy(()=>cf).optional()}).strict(),Bz=e.object({where:e.lazy(()=>D),create:e.union([e.lazy(()=>ou),e.lazy(()=>iu)])}).strict(),iO=e.object({data:e.union([e.lazy(()=>SD),e.lazy(()=>SD).array()]),skipDuplicates:e.boolean().optional()}).strict(),ru=e.object({quantity:e.number(),unit:e.string(),price:e.number(),order:e.lazy(()=>V$)}).strict(),lu=e.object({id:e.number().int().optional(),orderId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),_z=e.object({where:e.lazy(()=>Se),create:e.union([e.lazy(()=>ru),e.lazy(()=>lu)])}).strict(),rO=e.object({data:e.union([e.lazy(()=>vD),e.lazy(()=>vD).array()]),skipDuplicates:e.boolean().optional()}).strict(),cu=e.object({name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>$N).optional(),supplierPriceHistory:e.lazy(()=>GN).optional()}).strict(),pu=e.object({id:e.number().int().optional(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),orders:e.lazy(()=>YN).optional(),supplierPriceHistory:e.lazy(()=>KN).optional()}).strict(),qz=e.object({where:e.lazy(()=>Ke),create:e.union([e.lazy(()=>cu),e.lazy(()=>pu)])}).strict(),uu=e.object({date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>lN),recordedBy:e.lazy(()=>pN)}).strict(),su=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Fz=e.object({where:e.lazy(()=>L),create:e.union([e.lazy(()=>uu),e.lazy(()=>su)])}).strict(),lO=e.object({data:e.union([e.lazy(()=>AD),e.lazy(()=>AD).array()]),skipDuplicates:e.boolean().optional()}).strict(),yu=e.object({allergen:e.lazy(()=>h$)}).strict(),du=e.object({id:e.number().int().optional(),allergenId:e.number().int()}).strict(),Ez=e.object({where:e.lazy(()=>Ie),create:e.union([e.lazy(()=>yu),e.lazy(()=>du)])}).strict(),cO=e.object({data:e.union([e.lazy(()=>CD),e.lazy(()=>CD).array()]),skipDuplicates:e.boolean().optional()}).strict(),mu=e.object({price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),vendor:e.lazy(()=>s$)}).strict(),zu=e.object({id:e.number().int().optional(),vendorId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Dz=e.object({where:e.lazy(()=>be),create:e.union([e.lazy(()=>mu),e.lazy(()=>zu)])}).strict(),pO=e.object({data:e.union([e.lazy(()=>WD),e.lazy(()=>WD).array()]),skipDuplicates:e.boolean().optional()}).strict(),uO=e.object({name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>VP).optional(),recipes:e.lazy(()=>HP).optional()}).strict(),sO=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>ZP).optional(),recipes:e.lazy(()=>$P).optional()}).strict(),M2=e.object({where:e.lazy(()=>ce),create:e.union([e.lazy(()=>uO),e.lazy(()=>sO)])}).strict(),hU=e.object({where:e.lazy(()=>Q),update:e.union([e.lazy(()=>bG),e.lazy(()=>IG)]),create:e.union([e.lazy(()=>au),e.lazy(()=>nu)])}).strict(),bU=e.object({where:e.lazy(()=>Q),data:e.union([e.lazy(()=>bG),e.lazy(()=>IG)])}).strict(),IU=e.object({where:e.lazy(()=>Na),data:e.union([e.lazy(()=>MR),e.lazy(()=>Iae)])}).strict(),gU=e.object({where:e.lazy(()=>D),update:e.union([e.lazy(()=>gG),e.lazy(()=>SG)]),create:e.union([e.lazy(()=>ou),e.lazy(()=>iu)])}).strict(),SU=e.object({where:e.lazy(()=>D),data:e.union([e.lazy(()=>gG),e.lazy(()=>SG)])}).strict(),vU=e.object({where:e.lazy(()=>Da),data:e.union([e.lazy(()=>OR),e.lazy(()=>gae)])}).strict(),AU=e.object({where:e.lazy(()=>Se),update:e.union([e.lazy(()=>vG),e.lazy(()=>AG)]),create:e.union([e.lazy(()=>ru),e.lazy(()=>lu)])}).strict(),CU=e.object({where:e.lazy(()=>Se),data:e.union([e.lazy(()=>vG),e.lazy(()=>AG)])}).strict(),WU=e.object({where:e.lazy(()=>Pi),data:e.union([e.lazy(()=>FT),e.lazy(()=>Sae)])}).strict(),Pi=e.object({AND:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional(),OR:e.lazy(()=>Pi).array().optional(),NOT:e.union([e.lazy(()=>Pi),e.lazy(()=>Pi).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),orderId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),quantity:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional()}).strict(),UU=e.object({where:e.lazy(()=>Ke),update:e.union([e.lazy(()=>CG),e.lazy(()=>WG)]),create:e.union([e.lazy(()=>cu),e.lazy(()=>pu)])}).strict(),kU=e.object({where:e.lazy(()=>Ke),data:e.union([e.lazy(()=>CG),e.lazy(()=>WG)])}).strict(),RU=e.object({where:e.lazy(()=>jl),data:e.union([e.lazy(()=>KH),e.lazy(()=>vae)])}).strict(),jl=e.object({AND:e.union([e.lazy(()=>jl),e.lazy(()=>jl).array()]).optional(),OR:e.lazy(()=>jl).array().optional(),NOT:e.union([e.lazy(()=>jl),e.lazy(()=>jl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),contact:e.union([e.lazy(()=>U),e.string()]).optional(),email:e.union([e.lazy(()=>U),e.string()]).optional(),phone:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),fU=e.object({where:e.lazy(()=>L),update:e.union([e.lazy(()=>UG),e.lazy(()=>kG)]),create:e.union([e.lazy(()=>uu),e.lazy(()=>su)])}).strict(),jU=e.object({where:e.lazy(()=>L),data:e.union([e.lazy(()=>UG),e.lazy(()=>kG)])}).strict(),MU=e.object({where:e.lazy(()=>qa),data:e.union([e.lazy(()=>RR),e.lazy(()=>Aae)])}).strict(),OU=e.object({where:e.lazy(()=>Ie),update:e.union([e.lazy(()=>RG),e.lazy(()=>fG)]),create:e.union([e.lazy(()=>yu),e.lazy(()=>du)])}).strict(),wU=e.object({where:e.lazy(()=>Ie),data:e.union([e.lazy(()=>RG),e.lazy(()=>fG)])}).strict(),TU=e.object({where:e.lazy(()=>Ri),data:e.union([e.lazy(()=>PT),e.lazy(()=>Cae)])}).strict(),PU=e.object({where:e.lazy(()=>be),update:e.union([e.lazy(()=>jG),e.lazy(()=>MG)]),create:e.union([e.lazy(()=>mu),e.lazy(()=>zu)])}).strict(),NU=e.object({where:e.lazy(()=>be),data:e.union([e.lazy(()=>jG),e.lazy(()=>MG)])}).strict(),BU=e.object({where:e.lazy(()=>Ni),data:e.union([e.lazy(()=>OT),e.lazy(()=>Wae)])}).strict(),Ni=e.object({AND:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional(),OR:e.lazy(()=>Ni).array().optional(),NOT:e.union([e.lazy(()=>Ni),e.lazy(()=>Ni).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),vendorId:e.union([e.lazy(()=>z),e.number()]).optional(),ingredientId:e.union([e.lazy(()=>z),e.number()]).optional(),price:e.union([e.lazy(()=>re),e.number()]).optional(),unit:e.union([e.lazy(()=>U),e.string()]).optional(),startDate:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endDate:e.union([e.lazy(()=>la),e.coerce.date()]).optional().nullable(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),yee=e.object({update:e.union([e.lazy(()=>pq),e.lazy(()=>uq)]),create:e.union([e.lazy(()=>uO),e.lazy(()=>sO)]),where:e.lazy(()=>Pt).optional()}).strict(),dee=e.object({where:e.lazy(()=>Pt).optional(),data:e.union([e.lazy(()=>pq),e.lazy(()=>uq)])}).strict(),pq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>GP).optional(),recipes:e.lazy(()=>YP).optional()}).strict(),uq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>KP).optional(),recipes:e.lazy(()=>XP).optional()}).strict(),yO=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),dO=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),O2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>yO),e.lazy(()=>dO)])}).strict(),mO=e.object({name:e.string(),category:e.string(),price:e.number(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),zO=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),w2=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>mO),e.lazy(()=>zO)])}).strict(),hO=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>bS),instructions:e.lazy(()=>gS).optional(),createdBy:e.lazy(()=>SS),approvedBy:e.lazy(()=>vS).optional()}).strict(),bO=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),instructions:e.lazy(()=>CS).optional()}).strict(),T2=e.object({where:e.lazy(()=>q),create:e.union([e.lazy(()=>hO),e.lazy(()=>bO)])}).strict(),mee=e.object({update:e.union([e.lazy(()=>sq),e.lazy(()=>yq)]),create:e.union([e.lazy(()=>yO),e.lazy(()=>dO)]),where:e.lazy(()=>ie).optional()}).strict(),zee=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>sq),e.lazy(()=>yq)])}).strict(),sq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),yq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),hee=e.object({update:e.union([e.lazy(()=>dq),e.lazy(()=>mq)]),create:e.union([e.lazy(()=>mO),e.lazy(()=>zO)]),where:e.lazy(()=>Te).optional()}).strict(),bee=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>dq),e.lazy(()=>mq)])}).strict(),dq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),mq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),Iee=e.object({update:e.union([e.lazy(()=>zq),e.lazy(()=>hq)]),create:e.union([e.lazy(()=>hO),e.lazy(()=>bO)]),where:e.lazy(()=>st).optional()}).strict(),gee=e.object({where:e.lazy(()=>st).optional(),data:e.union([e.lazy(()=>zq),e.lazy(()=>hq)])}).strict(),zq=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>WS).optional(),instructions:e.lazy(()=>kS).optional(),createdBy:e.lazy(()=>RS).optional(),approvedBy:e.lazy(()=>fS).optional()}).strict(),hq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),instructions:e.lazy(()=>MS).optional()}).strict(),IO=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),gO=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),P2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>IO),e.lazy(()=>gO)])}).strict(),SO=e.object({versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>bS),ingredients:e.lazy(()=>IS).optional(),createdBy:e.lazy(()=>SS),approvedBy:e.lazy(()=>vS).optional()}).strict(),vO=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>AS).optional()}).strict(),N2=e.object({where:e.lazy(()=>q),create:e.union([e.lazy(()=>SO),e.lazy(()=>vO)])}).strict(),See=e.object({update:e.union([e.lazy(()=>bq),e.lazy(()=>Iq)]),create:e.union([e.lazy(()=>IO),e.lazy(()=>gO)]),where:e.lazy(()=>ie).optional()}).strict(),vee=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>bq),e.lazy(()=>Iq)])}).strict(),bq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),Iq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Aee=e.object({update:e.union([e.lazy(()=>gq),e.lazy(()=>Sq)]),create:e.union([e.lazy(()=>SO),e.lazy(()=>vO)]),where:e.lazy(()=>st).optional()}).strict(),Cee=e.object({where:e.lazy(()=>st).optional(),data:e.union([e.lazy(()=>gq),e.lazy(()=>Sq)])}).strict(),gq=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>WS).optional(),ingredients:e.lazy(()=>US).optional(),createdBy:e.lazy(()=>RS).optional(),approvedBy:e.lazy(()=>fS).optional()}).strict(),Sq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>jS).optional()}).strict(),AO=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),CO=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),B2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>AO),e.lazy(()=>CO)])}).strict(),hu=e.object({quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional(),ingredient:e.lazy(()=>of),lastUpdatedBy:e.lazy(()=>rf).optional(),InventoryWithdrawal:e.lazy(()=>lf).optional()}).strict(),bu=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional(),InventoryWithdrawal:e.lazy(()=>cf).optional()}).strict(),xz=e.object({where:e.lazy(()=>D),create:e.union([e.lazy(()=>hu),e.lazy(()=>bu)])}).strict(),WO=e.object({data:e.union([e.lazy(()=>UD),e.lazy(()=>UD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Wee=e.object({update:e.union([e.lazy(()=>vq),e.lazy(()=>Aq)]),create:e.union([e.lazy(()=>AO),e.lazy(()=>CO)]),where:e.lazy(()=>x).optional()}).strict(),Uee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>vq),e.lazy(()=>Aq)])}).strict(),vq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),Aq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),_U=e.object({where:e.lazy(()=>D),update:e.union([e.lazy(()=>OG),e.lazy(()=>wG)]),create:e.union([e.lazy(()=>hu),e.lazy(()=>bu)])}).strict(),qU=e.object({where:e.lazy(()=>D),data:e.union([e.lazy(()=>OG),e.lazy(()=>wG)])}).strict(),FU=e.object({where:e.lazy(()=>Da),data:e.union([e.lazy(()=>OR),e.lazy(()=>Uae)])}).strict(),UO=e.object({restaurant:e.lazy(()=>_$)}).strict(),kO=e.object({id:e.number().int().optional(),restaurantId:e.number().int()}).strict(),_2=e.object({where:e.lazy(()=>so),create:e.union([e.lazy(()=>UO),e.lazy(()=>kO)])}).strict(),RO=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),orderItems:e.lazy(()=>hh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),fO=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),orderItems:e.lazy(()=>Wh).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),q2=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>RO),e.lazy(()=>fO)])}).strict(),jO=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),MO=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),F2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>jO),e.lazy(()=>MO)])}).strict(),Iu=e.object({dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipe:e.lazy(()=>fN).optional(),createdBy:e.lazy(()=>jN)}).strict(),gu=e.object({id:e.number().int().optional(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Vz=e.object({where:e.lazy(()=>$),create:e.union([e.lazy(()=>Iu),e.lazy(()=>gu)])}).strict(),OO=e.object({data:e.union([e.lazy(()=>kD),e.lazy(()=>kD).array()]),skipDuplicates:e.boolean().optional()}).strict(),kee=e.object({update:e.union([e.lazy(()=>Cq),e.lazy(()=>Wq)]),create:e.union([e.lazy(()=>UO),e.lazy(()=>kO)]),where:e.lazy(()=>zt).optional()}).strict(),Ree=e.object({where:e.lazy(()=>zt).optional(),data:e.union([e.lazy(()=>Cq),e.lazy(()=>Wq)])}).strict(),Cq=e.object({restaurant:e.lazy(()=>E$).optional()}).strict(),Wq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),fee=e.object({update:e.union([e.lazy(()=>Uq),e.lazy(()=>kq)]),create:e.union([e.lazy(()=>RO),e.lazy(()=>fO)]),where:e.lazy(()=>Te).optional()}).strict(),jee=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>Uq),e.lazy(()=>kq)])}).strict(),Uq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),kq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),Mee=e.object({update:e.union([e.lazy(()=>Rq),e.lazy(()=>fq)]),create:e.union([e.lazy(()=>jO),e.lazy(()=>MO)]),where:e.lazy(()=>P).optional()}).strict(),Oee=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>Rq),e.lazy(()=>fq)])}).strict(),Rq=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),fq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),EU=e.object({where:e.lazy(()=>$),update:e.union([e.lazy(()=>TG),e.lazy(()=>PG)]),create:e.union([e.lazy(()=>Iu),e.lazy(()=>gu)])}).strict(),DU=e.object({where:e.lazy(()=>$),data:e.union([e.lazy(()=>TG),e.lazy(()=>PG)])}).strict(),xU=e.object({where:e.lazy(()=>xa),data:e.union([e.lazy(()=>jR),e.lazy(()=>kae)])}).strict(),wO=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),recipes:e.lazy(()=>Qi).optional(),menus:e.lazy(()=>Gi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),TO=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),recipes:e.lazy(()=>lr).optional(),menus:e.lazy(()=>cr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),E2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>wO),e.lazy(()=>TO)])}).strict(),PO=e.object({name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>QN).optional(),supplierPriceHistory:e.lazy(()=>GN).optional()}).strict(),NO=e.object({id:e.number().int().optional(),name:e.string(),contact:e.string(),email:e.string(),phone:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>JN).optional(),supplierPriceHistory:e.lazy(()=>KN).optional()}).strict(),D2=e.object({where:e.lazy(()=>Ke),create:e.union([e.lazy(()=>PO),e.lazy(()=>NO)])}).strict(),Su=e.object({quantity:e.number(),unit:e.string(),price:e.number(),ingredient:e.lazy(()=>H$)}).strict(),vu=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),Hz=e.object({where:e.lazy(()=>Se),create:e.union([e.lazy(()=>Su),e.lazy(()=>vu)])}).strict(),BO=e.object({data:e.union([e.lazy(()=>RD),e.lazy(()=>RD).array()]),skipDuplicates:e.boolean().optional()}).strict(),wee=e.object({update:e.union([e.lazy(()=>jq),e.lazy(()=>Mq)]),create:e.union([e.lazy(()=>wO),e.lazy(()=>TO)]),where:e.lazy(()=>x).optional()}).strict(),Tee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>jq),e.lazy(()=>Mq)])}).strict(),jq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),Mq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),Pee=e.object({update:e.union([e.lazy(()=>Oq),e.lazy(()=>wq)]),create:e.union([e.lazy(()=>PO),e.lazy(()=>NO)]),where:e.lazy(()=>Mt).optional()}).strict(),Nee=e.object({where:e.lazy(()=>Mt).optional(),data:e.union([e.lazy(()=>Oq),e.lazy(()=>wq)])}).strict(),Oq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>eB).optional(),supplierPriceHistory:e.lazy(()=>tB).optional()}).strict(),wq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>nB).optional(),supplierPriceHistory:e.lazy(()=>oB).optional()}).strict(),VU=e.object({where:e.lazy(()=>Se),update:e.union([e.lazy(()=>NG),e.lazy(()=>BG)]),create:e.union([e.lazy(()=>Su),e.lazy(()=>vu)])}).strict(),HU=e.object({where:e.lazy(()=>Se),data:e.union([e.lazy(()=>NG),e.lazy(()=>BG)])}).strict(),LU=e.object({where:e.lazy(()=>Pi),data:e.union([e.lazy(()=>FT),e.lazy(()=>Rae)])}).strict(),_O=e.object({status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>FN),vendor:e.lazy(()=>EN)}).strict(),qO=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),vendorId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),x2=e.object({where:e.lazy(()=>ue),create:e.union([e.lazy(()=>_O),e.lazy(()=>qO)])}).strict(),FO=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),vendors:e.lazy(()=>bh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),EO=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),vendors:e.lazy(()=>Uh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),V2=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>FO),e.lazy(()=>EO)])}).strict(),Bee=e.object({update:e.union([e.lazy(()=>Tq),e.lazy(()=>Pq)]),create:e.union([e.lazy(()=>_O),e.lazy(()=>qO)]),where:e.lazy(()=>Lt).optional()}).strict(),_ee=e.object({where:e.lazy(()=>Lt).optional(),data:e.union([e.lazy(()=>Tq),e.lazy(()=>Pq)])}).strict(),Tq=e.object({status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>VN).optional(),vendor:e.lazy(()=>HN).optional()}).strict(),Pq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),qee=e.object({update:e.union([e.lazy(()=>Nq),e.lazy(()=>Bq)]),create:e.union([e.lazy(()=>FO),e.lazy(()=>EO)]),where:e.lazy(()=>Te).optional()}).strict(),Fee=e.object({where:e.lazy(()=>Te).optional(),data:e.union([e.lazy(()=>Nq),e.lazy(()=>Bq)])}).strict(),Nq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),Bq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),Au=e.object({status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>FN),items:e.lazy(()=>DN).optional()}).strict(),Cu=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),items:e.lazy(()=>xN).optional()}).strict(),Lz=e.object({where:e.lazy(()=>ue),create:e.union([e.lazy(()=>Au),e.lazy(()=>Cu)])}).strict(),DO=e.object({data:e.union([e.lazy(()=>fD),e.lazy(()=>fD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Wu=e.object({name:e.string(),category:e.string(),price:e.number(),recipeIngredients:e.lazy(()=>mh).optional(),inventoryItems:e.lazy(()=>zh).optional(),orderItems:e.lazy(()=>hh).optional(),WasteRecord:e.lazy(()=>Ih).optional(),IngredientAllergen:e.lazy(()=>gh).optional(),SupplierPriceHistory:e.lazy(()=>Sh).optional(),DietaryRestriction:e.lazy(()=>vh).optional()}).strict(),Uu=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number(),dietaryRestrictionId:e.number().int().optional().nullable(),recipeIngredients:e.lazy(()=>Ah).optional(),inventoryItems:e.lazy(()=>Ch).optional(),orderItems:e.lazy(()=>Wh).optional(),WasteRecord:e.lazy(()=>kh).optional(),IngredientAllergen:e.lazy(()=>Rh).optional(),SupplierPriceHistory:e.lazy(()=>fh).optional()}).strict(),Zz=e.object({where:e.lazy(()=>Y),create:e.union([e.lazy(()=>Wu),e.lazy(()=>Uu)])}).strict(),ku=e.object({price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredient:e.lazy(()=>y$)}).strict(),Ru=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),$z=e.object({where:e.lazy(()=>be),create:e.union([e.lazy(()=>ku),e.lazy(()=>Ru)])}).strict(),xO=e.object({data:e.union([e.lazy(()=>jD),e.lazy(()=>jD).array()]),skipDuplicates:e.boolean().optional()}).strict(),ZU=e.object({where:e.lazy(()=>ue),update:e.union([e.lazy(()=>_G),e.lazy(()=>qG)]),create:e.union([e.lazy(()=>Au),e.lazy(()=>Cu)])}).strict(),$U=e.object({where:e.lazy(()=>ue),data:e.union([e.lazy(()=>_G),e.lazy(()=>qG)])}).strict(),QU=e.object({where:e.lazy(()=>ji),data:e.union([e.lazy(()=>qT),e.lazy(()=>fae)])}).strict(),GU=e.object({where:e.lazy(()=>Y),update:e.union([e.lazy(()=>FG),e.lazy(()=>EG)]),create:e.union([e.lazy(()=>Wu),e.lazy(()=>Uu)])}).strict(),YU=e.object({where:e.lazy(()=>Y),data:e.union([e.lazy(()=>FG),e.lazy(()=>EG)])}).strict(),JU=e.object({where:e.lazy(()=>ki),data:e.union([e.lazy(()=>BT),e.lazy(()=>jae)])}).strict(),KU=e.object({where:e.lazy(()=>be),update:e.union([e.lazy(()=>DG),e.lazy(()=>xG)]),create:e.union([e.lazy(()=>ku),e.lazy(()=>Ru)])}).strict(),XU=e.object({where:e.lazy(()=>be),data:e.union([e.lazy(()=>DG),e.lazy(()=>xG)])}).strict(),ek=e.object({where:e.lazy(()=>Ni),data:e.union([e.lazy(()=>OT),e.lazy(()=>Mae)])}).strict(),VO=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),HO=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),H2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>VO),e.lazy(()=>HO)])}).strict(),fu=e.object({taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),ju=e.object({id:e.number().int().optional(),taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Qz=e.object({where:e.lazy(()=>It),create:e.union([e.lazy(()=>fu),e.lazy(()=>ju)])}).strict(),LO=e.object({data:e.union([e.lazy(()=>MD),e.lazy(()=>MD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Eee=e.object({update:e.union([e.lazy(()=>_q),e.lazy(()=>qq)]),create:e.union([e.lazy(()=>VO),e.lazy(()=>HO)]),where:e.lazy(()=>P).optional()}).strict(),Dee=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>_q),e.lazy(()=>qq)])}).strict(),_q=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),qq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),tk=e.object({where:e.lazy(()=>It),update:e.union([e.lazy(()=>VG),e.lazy(()=>HG)]),create:e.union([e.lazy(()=>fu),e.lazy(()=>ju)])}).strict(),ak=e.object({where:e.lazy(()=>It),data:e.union([e.lazy(()=>VG),e.lazy(()=>HG)])}).strict(),nk=e.object({where:e.lazy(()=>Ml),data:e.union([e.lazy(()=>z0),e.lazy(()=>Oae)])}).strict(),Ml=e.object({AND:e.union([e.lazy(()=>Ml),e.lazy(()=>Ml).array()]).optional(),OR:e.lazy(()=>Ml).array().optional(),NOT:e.union([e.lazy(()=>Ml),e.lazy(()=>Ml).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),shiftId:e.union([e.lazy(()=>z),e.number()]).optional(),taskType:e.union([e.lazy(()=>JT),e.lazy(()=>ct)]).optional(),startTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),endTime:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),duration:e.union([e.lazy(()=>z),e.number()]).optional(),notes:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),Mu=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Ou=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Gz=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Mu),e.lazy(()=>Ou)])}).strict(),wu=e.object({quantity:e.number().int(),status:e.lazy(()=>oe),recipe:e.lazy(()=>rB),assignedTo:e.lazy(()=>lB)}).strict(),Tu=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),Yz=e.object({where:e.lazy(()=>G),create:e.union([e.lazy(()=>wu),e.lazy(()=>Tu)])}).strict(),ZO=e.object({data:e.union([e.lazy(()=>OD),e.lazy(()=>OD).array()]),skipDuplicates:e.boolean().optional()}).strict(),ok=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>LG),e.lazy(()=>ZG)]),create:e.union([e.lazy(()=>Mu),e.lazy(()=>Ou)])}).strict(),ik=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>LG),e.lazy(()=>ZG)])}).strict(),rk=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>wae)])}).strict(),lk=e.object({where:e.lazy(()=>G),update:e.union([e.lazy(()=>$G),e.lazy(()=>QG)]),create:e.union([e.lazy(()=>wu),e.lazy(()=>Tu)])}).strict(),ck=e.object({where:e.lazy(()=>G),data:e.union([e.lazy(()=>$G),e.lazy(()=>QG)])}).strict(),pk=e.object({where:e.lazy(()=>Ea),data:e.union([e.lazy(()=>wR),e.lazy(()=>Tae)])}).strict(),$O=e.object({name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>X$).optional()}).strict(),QO=e.object({id:e.number().int().optional(),name:e.string(),status:e.lazy(()=>oe),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>t1).optional()}).strict(),L2=e.object({where:e.lazy(()=>it),create:e.union([e.lazy(()=>$O),e.lazy(()=>QO)])}).strict(),GO=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),YO=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Z2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>GO),e.lazy(()=>YO)])}).strict(),JO=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),passwordResets:e.lazy(()=>tn).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),KO=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),passwordResets:e.lazy(()=>In).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),$2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>JO),e.lazy(()=>KO)])}).strict(),xee=e.object({update:e.union([e.lazy(()=>Fq),e.lazy(()=>Eq)]),create:e.union([e.lazy(()=>$O),e.lazy(()=>QO)]),where:e.lazy(()=>$t).optional()}).strict(),Vee=e.object({where:e.lazy(()=>$t).optional(),data:e.union([e.lazy(()=>Fq),e.lazy(()=>Eq)])}).strict(),Fq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>n1).optional()}).strict(),Eq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>i1).optional()}).strict(),Hee=e.object({update:e.union([e.lazy(()=>Dq),e.lazy(()=>xq)]),create:e.union([e.lazy(()=>GO),e.lazy(()=>YO)]),where:e.lazy(()=>ie).optional()}).strict(),Lee=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>Dq),e.lazy(()=>xq)])}).strict(),Dq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),xq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Zee=e.object({update:e.union([e.lazy(()=>Vq),e.lazy(()=>Hq)]),create:e.union([e.lazy(()=>JO),e.lazy(()=>KO)]),where:e.lazy(()=>P).optional()}).strict(),$ee=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>Vq),e.lazy(()=>Hq)])}).strict(),Vq=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),Hq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),XO=e.object({email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),organization:e.lazy(()=>Ga).optional(),restaurant:e.lazy(()=>Ya).optional(),shifts:e.lazy(()=>Ja).optional(),prepItems:e.lazy(()=>Ka).optional(),inventoryUpdates:e.lazy(()=>Xa).optional(),sessions:e.lazy(()=>en).optional(),leftoverItem:e.lazy(()=>an).optional(),wasteRecord:e.lazy(()=>nn).optional(),productionPlan:e.lazy(()=>on).optional(),productionPlanItem:e.lazy(()=>rn).optional(),availability:e.lazy(()=>ln).optional(),schedulingConstraint:e.lazy(()=>cn).optional(),inventoryWithdrawal:e.lazy(()=>pn).optional(),checklistComplete:e.lazy(()=>un).optional(),customerFeedback:e.lazy(()=>sn).optional(),recipeVersionsCreated:e.lazy(()=>yn).optional(),recipeVersionsApproved:e.lazy(()=>dn).optional()}).strict(),ew=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),shifts:e.lazy(()=>mn).optional(),prepItems:e.lazy(()=>zn).optional(),inventoryUpdates:e.lazy(()=>hn).optional(),sessions:e.lazy(()=>bn).optional(),leftoverItem:e.lazy(()=>gn).optional(),wasteRecord:e.lazy(()=>Sn).optional(),productionPlan:e.lazy(()=>vn).optional(),productionPlanItem:e.lazy(()=>An).optional(),availability:e.lazy(()=>Cn).optional(),schedulingConstraint:e.lazy(()=>Wn).optional(),inventoryWithdrawal:e.lazy(()=>Un).optional(),checklistComplete:e.lazy(()=>kn).optional(),customerFeedback:e.lazy(()=>Rn).optional(),recipeVersionsCreated:e.lazy(()=>fn).optional(),recipeVersionsApproved:e.lazy(()=>jn).optional()}).strict(),Q2=e.object({where:e.lazy(()=>O),create:e.union([e.lazy(()=>XO),e.lazy(()=>ew)])}).strict(),Qee=e.object({update:e.union([e.lazy(()=>Lq),e.lazy(()=>Zq)]),create:e.union([e.lazy(()=>XO),e.lazy(()=>ew)]),where:e.lazy(()=>P).optional()}).strict(),Gee=e.object({where:e.lazy(()=>P).optional(),data:e.union([e.lazy(()=>Lq),e.lazy(()=>Zq)])}).strict(),Lq=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),Zq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),tw=e.object({name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),organization:e.lazy(()=>Vi).optional(),users:e.lazy(()=>Hi).optional(),cookbooks:e.lazy(()=>Li).optional(),inventory:e.lazy(()=>Zi).optional(),orders:e.lazy(()=>$i).optional(),recipes:e.lazy(()=>Qi).optional(),salesTransactions:e.lazy(()=>Yi).optional(),leftoverItem:e.lazy(()=>Ji).optional(),wasteRecord:e.lazy(()=>Ki).optional(),productionPlan:e.lazy(()=>Xi).optional(),equipment:e.lazy(()=>er).optional(),qualityChecklist:e.lazy(()=>tr).optional(),qustomerFeedback:e.lazy(()=>ar).optional()}).strict(),aw=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),organizationId:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable(),users:e.lazy(()=>nr).optional(),cookbooks:e.lazy(()=>or).optional(),inventory:e.lazy(()=>ir).optional(),orders:e.lazy(()=>rr).optional(),recipes:e.lazy(()=>lr).optional(),salesTransactions:e.lazy(()=>pr).optional(),leftoverItem:e.lazy(()=>ur).optional(),wasteRecord:e.lazy(()=>sr).optional(),productionPlan:e.lazy(()=>yr).optional(),equipment:e.lazy(()=>dr).optional(),qualityChecklist:e.lazy(()=>mr).optional(),qustomerFeedback:e.lazy(()=>zr).optional()}).strict(),G2=e.object({where:e.lazy(()=>ee),create:e.union([e.lazy(()=>tw),e.lazy(()=>aw)])}).strict(),Pu=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),Nu=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),Jz=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>Pu),e.lazy(()=>Nu)])}).strict(),nw=e.object({data:e.union([e.lazy(()=>wD),e.lazy(()=>wD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Bu=e.object({name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>ZZ).optional()}).strict(),_u=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menuItems:e.lazy(()=>$Z).optional()}).strict(),Kz=e.object({where:e.lazy(()=>tt),create:e.union([e.lazy(()=>Bu),e.lazy(()=>_u)])}).strict(),ow=e.object({data:e.union([e.lazy(()=>TD),e.lazy(()=>TD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Yee=e.object({update:e.union([e.lazy(()=>$q),e.lazy(()=>Qq)]),create:e.union([e.lazy(()=>tw),e.lazy(()=>aw)]),where:e.lazy(()=>x).optional()}).strict(),Jee=e.object({where:e.lazy(()=>x).optional(),data:e.union([e.lazy(()=>$q),e.lazy(()=>Qq)])}).strict(),$q=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),organization:e.lazy(()=>hr).optional(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),Qq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),uk=e.object({where:e.lazy(()=>R),update:e.union([e.lazy(()=>GG),e.lazy(()=>YG)]),create:e.union([e.lazy(()=>Pu),e.lazy(()=>Nu)])}).strict(),sk=e.object({where:e.lazy(()=>R),data:e.union([e.lazy(()=>GG),e.lazy(()=>YG)])}).strict(),yk=e.object({where:e.lazy(()=>Yt),data:e.union([e.lazy(()=>hS),e.lazy(()=>Pae)])}).strict(),dk=e.object({where:e.lazy(()=>tt),update:e.union([e.lazy(()=>JG),e.lazy(()=>KG)]),create:e.union([e.lazy(()=>Bu),e.lazy(()=>_u)])}).strict(),mk=e.object({where:e.lazy(()=>tt),data:e.union([e.lazy(()=>JG),e.lazy(()=>KG)])}).strict(),zk=e.object({where:e.lazy(()=>Ol),data:e.union([e.lazy(()=>Gx),e.lazy(()=>Nae)])}).strict(),Ol=e.object({AND:e.union([e.lazy(()=>Ol),e.lazy(()=>Ol).array()]).optional(),OR:e.lazy(()=>Ol).array().optional(),NOT:e.union([e.lazy(()=>Ol),e.lazy(()=>Ol).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),name:e.union([e.lazy(()=>U),e.string()]).optional(),description:e.union([e.lazy(()=>F),e.string()]).optional().nullable(),displayOrder:e.union([e.lazy(()=>z),e.number()]).optional(),menuId:e.union([e.lazy(()=>z),e.number()]).optional(),isActive:e.union([e.lazy(()=>oa),e.boolean()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),iw=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),nutritionalInfo:e.lazy(()=>Zy).optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),rw=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),nutritionalInfo:e.lazy(()=>ad).optional(),recipes:e.lazy(()=>nd).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),Y2=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>iw),e.lazy(()=>rw)])}).strict(),lw=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),cw=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),J2=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>lw),e.lazy(()=>cw)])}).strict(),Kee=e.object({update:e.union([e.lazy(()=>Gq),e.lazy(()=>Yq)]),create:e.union([e.lazy(()=>iw),e.lazy(()=>rw)]),where:e.lazy(()=>Ae).optional()}).strict(),Xee=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>Gq),e.lazy(()=>Yq)])}).strict(),Gq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),Yq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),ete=e.object({update:e.union([e.lazy(()=>Jq),e.lazy(()=>Kq)]),create:e.union([e.lazy(()=>lw),e.lazy(()=>cw)]),where:e.lazy(()=>ie).optional()}).strict(),tte=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>Jq),e.lazy(()=>Kq)])}).strict(),Jq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),Kq=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Eg=e.object({calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),Dg=e.object({id:e.number().int().optional(),calories:e.number(),fat:e.number(),saturatedFat:e.number(),transFat:e.number(),cholesterol:e.number(),sodium:e.number(),carbohydrates:e.number(),fiber:e.number(),sugar:e.number(),protein:e.number(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),pw=e.object({where:e.lazy(()=>xi),create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)])}).strict(),uw=e.object({name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>sB),MenuCategory:e.lazy(()=>dB).optional()}).strict(),sw=e.object({id:e.number().int().optional(),name:e.string(),restaurantId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),MenuCategory:e.lazy(()=>zB).optional()}).strict(),K2=e.object({where:e.lazy(()=>Xe),create:e.union([e.lazy(()=>uw),e.lazy(()=>sw)])}).strict(),qu=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Fu=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),Xz=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>qu),e.lazy(()=>Fu)])}).strict(),Eu=e.object({joinAt:e.coerce.date().optional(),recipe:e.lazy(()=>c1)}).strict(),Du=e.object({id:e.number().int().optional(),recipeId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),eh=e.object({where:e.lazy(()=>ve),create:e.union([e.lazy(()=>Eu),e.lazy(()=>Du)])}).strict(),yw=e.object({data:e.union([e.lazy(()=>PD),e.lazy(()=>PD).array()]),skipDuplicates:e.boolean().optional()}).strict(),xu=e.object({posTransactionID:e.string().optional().nullable(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>DZ)}).strict(),Vu=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),restaurantId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),th=e.object({where:e.lazy(()=>me),create:e.union([e.lazy(()=>xu),e.lazy(()=>Vu)])}).strict(),dw=e.object({data:e.union([e.lazy(()=>ND),e.lazy(()=>ND).array()]),skipDuplicates:e.boolean().optional()}).strict(),Hu=e.object({date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>tN),recordedBy:e.lazy(()=>nN)}).strict(),Lu=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),ah=e.object({where:e.lazy(()=>H),create:e.union([e.lazy(()=>Hu),e.lazy(()=>Lu)])}).strict(),mw=e.object({data:e.union([e.lazy(()=>BD),e.lazy(()=>BD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Zu=e.object({recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),$u=e.object({id:e.number().int().optional(),recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),nh=e.object({where:e.lazy(()=>vt),create:e.union([e.lazy(()=>Zu),e.lazy(()=>$u)])}).strict(),zw=e.object({data:e.union([e.lazy(()=>_D),e.lazy(()=>_D).array()]),skipDuplicates:e.boolean().optional()}).strict(),hw=e.object({name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menu:e.lazy(()=>LZ)}).strict(),bw=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),menuId:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),X2=e.object({where:e.lazy(()=>tt),create:e.union([e.lazy(()=>hw),e.lazy(()=>bw)])}).strict(),Qu=e.object({rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>_P),respondedBy:e.lazy(()=>FP).optional()}).strict(),Gu=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),oh=e.object({where:e.lazy(()=>V),create:e.union([e.lazy(()=>Qu),e.lazy(()=>Gu)])}).strict(),Iw=e.object({data:e.union([e.lazy(()=>qD),e.lazy(()=>qD).array()]),skipDuplicates:e.boolean().optional()}).strict(),Yu=e.object({name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>HP).optional(),ingredients:e.lazy(()=>LP).optional()}).strict(),Ju=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),icon:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),recipes:e.lazy(()=>$P).optional(),ingredients:e.lazy(()=>QP).optional()}).strict(),ih=e.object({where:e.lazy(()=>ce),create:e.union([e.lazy(()=>Yu),e.lazy(()=>Ju)])}).strict(),e4=e.object({update:e.union([e.lazy(()=>gw),e.lazy(()=>Sw)]),create:e.union([e.lazy(()=>Eg),e.lazy(()=>Dg)]),where:e.lazy(()=>Ft).optional()}).strict(),t4=e.object({where:e.lazy(()=>Ft).optional(),data:e.union([e.lazy(()=>gw),e.lazy(()=>Sw)])}).strict(),gw=e.object({calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Sw=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),calories:e.union([e.number(),e.lazy(()=>b)]).optional(),fat:e.union([e.number(),e.lazy(()=>b)]).optional(),saturatedFat:e.union([e.number(),e.lazy(()=>b)]).optional(),transFat:e.union([e.number(),e.lazy(()=>b)]).optional(),cholesterol:e.union([e.number(),e.lazy(()=>b)]).optional(),sodium:e.union([e.number(),e.lazy(()=>b)]).optional(),carbohydrates:e.union([e.number(),e.lazy(()=>b)]).optional(),fiber:e.union([e.number(),e.lazy(()=>b)]).optional(),sugar:e.union([e.number(),e.lazy(()=>b)]).optional(),protein:e.union([e.number(),e.lazy(()=>b)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),ate=e.object({update:e.union([e.lazy(()=>Xq),e.lazy(()=>eF)]),create:e.union([e.lazy(()=>uw),e.lazy(()=>sw)]),where:e.lazy(()=>Ot).optional()}).strict(),nte=e.object({where:e.lazy(()=>Ot).optional(),data:e.union([e.lazy(()=>Xq),e.lazy(()=>eF)])}).strict(),Xq=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>hB).optional(),MenuCategory:e.lazy(()=>IB).optional()}).strict(),eF=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),MenuCategory:e.lazy(()=>SB).optional()}).strict(),hk=e.object({where:e.lazy(()=>v),update:e.union([e.lazy(()=>XG),e.lazy(()=>e9)]),create:e.union([e.lazy(()=>qu),e.lazy(()=>Fu)])}).strict(),bk=e.object({where:e.lazy(()=>v),data:e.union([e.lazy(()=>XG),e.lazy(()=>e9)])}).strict(),Ik=e.object({where:e.lazy(()=>rt),data:e.union([e.lazy(()=>Kb),e.lazy(()=>Bae)])}).strict(),gk=e.object({where:e.lazy(()=>ve),update:e.union([e.lazy(()=>t9),e.lazy(()=>a9)]),create:e.union([e.lazy(()=>Eu),e.lazy(()=>Du)])}).strict(),Sk=e.object({where:e.lazy(()=>ve),data:e.union([e.lazy(()=>t9),e.lazy(()=>a9)])}).strict(),vk=e.object({where:e.lazy(()=>wi),data:e.union([e.lazy(()=>ET),e.lazy(()=>_ae)])}).strict(),Ak=e.object({where:e.lazy(()=>me),update:e.union([e.lazy(()=>n9),e.lazy(()=>o9)]),create:e.union([e.lazy(()=>xu),e.lazy(()=>Vu)])}).strict(),Ck=e.object({where:e.lazy(()=>me),data:e.union([e.lazy(()=>n9),e.lazy(()=>o9)])}).strict(),Wk=e.object({where:e.lazy(()=>Mi),data:e.union([e.lazy(()=>RT),e.lazy(()=>qae)])}).strict(),Uk=e.object({where:e.lazy(()=>H),update:e.union([e.lazy(()=>i9),e.lazy(()=>r9)]),create:e.union([e.lazy(()=>Hu),e.lazy(()=>Lu)])}).strict(),kk=e.object({where:e.lazy(()=>H),data:e.union([e.lazy(()=>i9),e.lazy(()=>r9)])}).strict(),Rk=e.object({where:e.lazy(()=>_a),data:e.union([e.lazy(()=>kR),e.lazy(()=>Fae)])}).strict(),fk=e.object({where:e.lazy(()=>vt),update:e.union([e.lazy(()=>l9),e.lazy(()=>c9)]),create:e.union([e.lazy(()=>Zu),e.lazy(()=>$u)])}).strict(),jk=e.object({where:e.lazy(()=>vt),data:e.union([e.lazy(()=>l9),e.lazy(()=>c9)])}).strict(),Mk=e.object({where:e.lazy(()=>wl),data:e.union([e.lazy(()=>x0),e.lazy(()=>Eae)])}).strict(),wl=e.object({AND:e.union([e.lazy(()=>wl),e.lazy(()=>wl).array()]).optional(),OR:e.lazy(()=>wl).array().optional(),NOT:e.union([e.lazy(()=>wl),e.lazy(()=>wl).array()]).optional(),id:e.union([e.lazy(()=>z),e.number()]).optional(),menuItemId:e.union([e.lazy(()=>z),e.number()]).optional(),recommendation:e.union([e.lazy(()=>U),e.string()]).optional(),createdAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional(),updatedAt:e.union([e.lazy(()=>h),e.coerce.date()]).optional()}).strict(),ote=e.object({update:e.union([e.lazy(()=>tF),e.lazy(()=>aF)]),create:e.union([e.lazy(()=>hw),e.lazy(()=>bw)]),where:e.lazy(()=>Tt).optional()}).strict(),ite=e.object({where:e.lazy(()=>Tt).optional(),data:e.union([e.lazy(()=>tF),e.lazy(()=>aF)])}).strict(),tF=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menu:e.lazy(()=>QZ).optional()}).strict(),aF=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Ok=e.object({where:e.lazy(()=>V),update:e.union([e.lazy(()=>p9),e.lazy(()=>u9)]),create:e.union([e.lazy(()=>Qu),e.lazy(()=>Gu)])}).strict(),wk=e.object({where:e.lazy(()=>V),data:e.union([e.lazy(()=>p9),e.lazy(()=>u9)])}).strict(),Tk=e.object({where:e.lazy(()=>Fa),data:e.union([e.lazy(()=>UR),e.lazy(()=>Dae)])}).strict(),Pk=e.object({where:e.lazy(()=>ce),update:e.union([e.lazy(()=>s9),e.lazy(()=>y9)]),create:e.union([e.lazy(()=>Yu),e.lazy(()=>Ju)])}).strict(),Nk=e.object({where:e.lazy(()=>ce),data:e.union([e.lazy(()=>s9),e.lazy(()=>y9)])}).strict(),Bk=e.object({where:e.lazy(()=>Ti),data:e.union([e.lazy(()=>wT),e.lazy(()=>xae)])}).strict(),vw=e.object({name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),menu:e.lazy(()=>$y),recipes:e.lazy(()=>Qy).optional(),menuItemRecipe:e.lazy(()=>Gy).optional(),salesTransactions:e.lazy(()=>Yy).optional(),leftoverItem:e.lazy(()=>Jy).optional(),nutritionalRecommendation:e.lazy(()=>Ky).optional(),category:e.lazy(()=>Xy).optional(),feedback:e.lazy(()=>ed).optional(),dietaryRestrictions:e.lazy(()=>td).optional()}).strict(),Aw=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable(),recipes:e.lazy(()=>nd).optional(),menuItemRecipe:e.lazy(()=>od).optional(),salesTransactions:e.lazy(()=>id).optional(),leftoverItem:e.lazy(()=>rd).optional(),nutritionalRecommendation:e.lazy(()=>ld).optional(),feedback:e.lazy(()=>cd).optional(),dietaryRestrictions:e.lazy(()=>pd).optional()}).strict(),a4=e.object({where:e.lazy(()=>R),create:e.union([e.lazy(()=>vw),e.lazy(()=>Aw)])}).strict(),rte=e.object({update:e.union([e.lazy(()=>nF),e.lazy(()=>oF)]),create:e.union([e.lazy(()=>vw),e.lazy(()=>Aw)]),where:e.lazy(()=>Ae).optional()}).strict(),lte=e.object({where:e.lazy(()=>Ae).optional(),data:e.union([e.lazy(()=>nF),e.lazy(()=>oF)])}).strict(),nF=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),oF=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),Cw=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),prepHistory:e.lazy(()=>Ao).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),Ww=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),prepHistory:e.lazy(()=>Bo).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),n4=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Cw),e.lazy(()=>Ww)])}).strict(),cte=e.object({update:e.union([e.lazy(()=>iF),e.lazy(()=>rF)]),create:e.union([e.lazy(()=>Cw),e.lazy(()=>Ww)]),where:e.lazy(()=>ie).optional()}).strict(),pte=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>iF),e.lazy(()=>rF)])}).strict(),iF=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),rF=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Uw=e.object({name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),restaurant:e.lazy(()=>ho),cookBook:e.lazy(()=>bo),ingredients:e.lazy(()=>Io).optional(),instructions:e.lazy(()=>go).optional(),menuItems:e.lazy(()=>So).optional(),foodCostHistory:e.lazy(()=>vo).optional(),prepBoards:e.lazy(()=>Co).optional(),prepItems:e.lazy(()=>Wo).optional(),MenuItemRecipe:e.lazy(()=>Uo).optional(),ProductionPlanItem:e.lazy(()=>ko).optional(),InventoryWithdrawal:e.lazy(()=>Ro).optional(),tags:e.lazy(()=>fo).optional(),versions:e.lazy(()=>jo).optional(),equipment:e.lazy(()=>Mo).optional(),dietaryRestrictions:e.lazy(()=>Oo).optional()}).strict(),kw=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),ingredients:e.lazy(()=>wo).optional(),instructions:e.lazy(()=>To).optional(),menuItems:e.lazy(()=>Po).optional(),foodCostHistory:e.lazy(()=>No).optional(),prepBoards:e.lazy(()=>_o).optional(),prepItems:e.lazy(()=>qo).optional(),MenuItemRecipe:e.lazy(()=>Fo).optional(),ProductionPlanItem:e.lazy(()=>Eo).optional(),InventoryWithdrawal:e.lazy(()=>Do).optional(),tags:e.lazy(()=>xo).optional(),versions:e.lazy(()=>Vo).optional(),equipment:e.lazy(()=>Ho).optional(),dietaryRestrictions:e.lazy(()=>Lo).optional()}).strict(),o4=e.object({where:e.lazy(()=>v),create:e.union([e.lazy(()=>Uw),e.lazy(()=>kw)])}).strict(),ute=e.object({update:e.union([e.lazy(()=>lF),e.lazy(()=>cF)]),create:e.union([e.lazy(()=>Uw),e.lazy(()=>kw)]),where:e.lazy(()=>ie).optional()}).strict(),ste=e.object({where:e.lazy(()=>ie).optional(),data:e.union([e.lazy(()=>lF),e.lazy(()=>cF)])}).strict(),lF=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),cF=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),SE=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),menuId:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),i4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),r4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),yte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),vE=e.object({id:e.number().int().optional(),recipeId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional()}).strict(),AE=e.object({id:e.number().int().optional(),recipeId:e.number().int(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable()}).strict(),l4=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>BN).optional(),ingredient:e.lazy(()=>_N).optional()}).strict(),c4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),dte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),p4=e.object({stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipe:e.lazy(()=>N$).optional()}).strict(),u4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),mte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),CE=e.object({id:e.number().int().optional(),recipeId:e.number().int(),notes:e.string().optional().nullable()}).strict(),WE=e.object({id:e.number().int().optional(),date:e.coerce.date(),type:e.lazy(()=>lt),description:e.string(),cost:e.number().optional().nullable(),performedBy:e.string(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),s4=e.object({notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipe:e.lazy(()=>XZ).optional()}).strict(),y4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),zte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),d4=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),m4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),hte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),type:e.union([e.lazy(()=>lt),e.lazy(()=>Xb)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),cost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),performedBy:e.union([e.string(),e.lazy(()=>p)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),UE=e.object({id:e.number().int().optional(),description:e.string(),order:e.number().int(),type:e.lazy(()=>Le),requiredPhotos:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),kE=e.object({id:e.number().int().optional(),completedById:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),z4=e.object({description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),completions:e.lazy(()=>i$).optional()}).strict(),h4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),completions:e.lazy(()=>r$).optional()}).strict(),bte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>p)]).optional(),order:e.union([e.number().int(),e.lazy(()=>l)]).optional(),type:e.union([e.lazy(()=>Le),e.lazy(()=>Gd)]).optional(),requiredPhotos:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),b4=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),completedBy:e.lazy(()=>PP).optional(),items:e.lazy(()=>NP).optional()}).strict(),I4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),completedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>BP).optional()}).strict(),Ite=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),completedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),RE=e.object({id:e.number().int().optional(),checklistCompleteId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),g4=e.object({status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklistComplete:e.lazy(()=>p$).optional()}).strict(),S4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistCompleteId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),gte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistCompleteId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),fE=e.object({id:e.number().int().optional(),checklistItemId:e.number().int(),status:e.lazy(()=>xe),notes:e.string().optional().nullable(),photoUrls:e.union([e.lazy(()=>Yd),e.string().array()]).optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),v4=e.object({status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklistItem:e.lazy(()=>u$).optional()}).strict(),A4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Ste=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>xe),e.lazy(()=>Hy)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),photoUrls:e.union([e.lazy(()=>Ly),e.string().array()]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),jE=e.object({id:e.number().int().optional(),name:e.string(),category:e.string(),price:e.number()}).strict(),C4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional()}).strict(),W4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional()}).strict(),vte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),U4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional()}).strict(),k4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional()}).strict(),Ate=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),R4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),vendors:e.lazy(()=>wh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional()}).strict(),f4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),vendors:e.lazy(()=>Eh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),Cte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),j4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),M4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Wte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),ME=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),O4=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>UN).optional(),assignedTo:e.lazy(()=>kN).optional()}).strict(),w4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Ute=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),OE=e.object({id:e.number().int().optional(),ingredientId:e.number().int()}).strict(),T4=e.object({ingredient:e.lazy(()=>b$).optional()}).strict(),P4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),kte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),wE=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),address:e.string(),city:e.string(),zipCode:e.string(),state:e.string(),owner:e.string(),foodCost:e.number().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),isDeleted:e.boolean().optional(),deleted:e.coerce.date().optional().nullable()}).strict(),TE=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),restaurantId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),N4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>br).optional(),cookbooks:e.lazy(()=>Ir).optional(),inventory:e.lazy(()=>gr).optional(),orders:e.lazy(()=>Sr).optional(),recipes:e.lazy(()=>vr).optional(),menus:e.lazy(()=>Ar).optional(),salesTransactions:e.lazy(()=>Cr).optional(),leftoverItem:e.lazy(()=>Wr).optional(),wasteRecord:e.lazy(()=>Ur).optional(),productionPlan:e.lazy(()=>kr).optional(),equipment:e.lazy(()=>Rr).optional(),qualityChecklist:e.lazy(()=>fr).optional(),qustomerFeedback:e.lazy(()=>jr).optional()}).strict(),B4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),users:e.lazy(()=>Mr).optional(),cookbooks:e.lazy(()=>Or).optional(),inventory:e.lazy(()=>wr).optional(),orders:e.lazy(()=>Tr).optional(),recipes:e.lazy(()=>Pr).optional(),menus:e.lazy(()=>Nr).optional(),salesTransactions:e.lazy(()=>Br).optional(),leftoverItem:e.lazy(()=>_r).optional(),wasteRecord:e.lazy(()=>qr).optional(),productionPlan:e.lazy(()=>Fr).optional(),equipment:e.lazy(()=>Er).optional(),qualityChecklist:e.lazy(()=>Dr).optional(),qustomerFeedback:e.lazy(()=>xr).optional()}).strict(),Rte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),address:e.union([e.string(),e.lazy(()=>p)]).optional(),city:e.union([e.string(),e.lazy(()=>p)]).optional(),zipCode:e.union([e.string(),e.lazy(()=>p)]).optional(),state:e.union([e.string(),e.lazy(()=>p)]).optional(),owner:e.union([e.string(),e.lazy(()=>p)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),deleted:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable()}).strict(),_4=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>On).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),q4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),fte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),PE=e.object({id:e.number().int().optional(),email:e.string(),sub:e.number().int().optional().nullable(),passwordHash:e.string(),firstName:e.string(),lastName:e.string(),profileImage:e.string().optional().nullable(),verified:e.boolean().optional(),role:e.lazy(()=>M),organizationId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),NE=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.string().optional().nullable(),category:e.string()}).strict(),BE=e.object({id:e.number().int().optional(),vendorId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_E=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),cookBookId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),qE=e.object({id:e.number().int().optional(),name:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),FE=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),menuItemId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),EE=e.object({id:e.number().int().optional(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),DE=e.object({id:e.number().int().optional(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),xE=e.object({id:e.number().int().optional(),date:e.coerce.date(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),VE=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),model:e.string().optional().nullable(),serialNumber:e.string().optional().nullable(),purchaseDate:e.coerce.date().optional().nullable(),lastMaintenance:e.coerce.date().optional().nullable(),nextMaintenance:e.coerce.date().optional().nullable(),status:e.lazy(()=>_e).optional(),location:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),HE=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),frequency:e.lazy(()=>qe).optional(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),LE=e.object({id:e.number().int().optional(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),F4=e.object({email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),organization:e.lazy(()=>Mn).optional(),shifts:e.lazy(()=>wn).optional(),prepItems:e.lazy(()=>Tn).optional(),inventoryUpdates:e.lazy(()=>Pn).optional(),sessions:e.lazy(()=>Nn).optional(),passwordResets:e.lazy(()=>Bn).optional(),leftoverItem:e.lazy(()=>_n).optional(),wasteRecord:e.lazy(()=>qn).optional(),productionPlan:e.lazy(()=>Fn).optional(),productionPlanItem:e.lazy(()=>En).optional(),availability:e.lazy(()=>Dn).optional(),schedulingConstraint:e.lazy(()=>xn).optional(),inventoryWithdrawal:e.lazy(()=>Vn).optional(),checklistComplete:e.lazy(()=>Hn).optional(),customerFeedback:e.lazy(()=>Ln).optional(),recipeVersionsCreated:e.lazy(()=>Zn).optional(),recipeVersionsApproved:e.lazy(()=>$n).optional()}).strict(),E4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),shifts:e.lazy(()=>Qn).optional(),prepItems:e.lazy(()=>Gn).optional(),inventoryUpdates:e.lazy(()=>Yn).optional(),sessions:e.lazy(()=>Jn).optional(),passwordResets:e.lazy(()=>Kn).optional(),leftoverItem:e.lazy(()=>Xn).optional(),wasteRecord:e.lazy(()=>eo).optional(),productionPlan:e.lazy(()=>to).optional(),productionPlanItem:e.lazy(()=>ao).optional(),availability:e.lazy(()=>no).optional(),schedulingConstraint:e.lazy(()=>oo).optional(),inventoryWithdrawal:e.lazy(()=>io).optional(),checklistComplete:e.lazy(()=>ro).optional(),customerFeedback:e.lazy(()=>lo).optional(),recipeVersionsCreated:e.lazy(()=>co).optional(),recipeVersionsApproved:e.lazy(()=>po).optional()}).strict(),jte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),sub:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),passwordHash:e.union([e.string(),e.lazy(()=>p)]).optional(),firstName:e.union([e.string(),e.lazy(()=>p)]).optional(),lastName:e.union([e.string(),e.lazy(()=>p)]).optional(),profileImage:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),verified:e.union([e.boolean(),e.lazy(()=>A)]).optional(),role:e.union([e.lazy(()=>M),e.lazy(()=>Fe)]).optional(),organizationId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),D4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),recipes:e.lazy(()=>M$).optional()}).strict(),x4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),recipes:e.lazy(()=>w$).optional()}).strict(),Mte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),category:e.union([e.string(),e.lazy(()=>p)]).optional()}).strict(),V4=e.object({status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),vendor:e.lazy(()=>HN).optional(),items:e.lazy(()=>LN).optional()}).strict(),H4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>ZN).optional()}).strict(),Ote=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),L4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),Z4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),wte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$4=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>bB).optional(),MenuCategory:e.lazy(()=>IB).optional()}).strict(),Q4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>gB).optional(),MenuCategory:e.lazy(()=>SB).optional()}).strict(),Tte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),G4=e.object({posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>HZ).optional()}).strict(),Y4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Pte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),J4=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>iN).optional(),recordedBy:e.lazy(()=>rN).optional()}).strict(),K4=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Nte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),X4=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingrediente:e.lazy(()=>sN).optional(),recordedBy:e.lazy(()=>yN).optional()}).strict(),eQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Bte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),tQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdBy:e.lazy(()=>IN).optional(),items:e.lazy(()=>gN).optional()}).strict(),aQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>SN).optional()}).strict(),_te=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),nQ=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>zP).optional(),maintenanceLogs:e.lazy(()=>hP).optional()}).strict(),oQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>bP).optional(),maintenanceLogs:e.lazy(()=>IP).optional()}).strict(),qte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),model:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),serialNumber:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),purchaseDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),lastMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),nextMaintenance:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),status:e.union([e.lazy(()=>_e),e.lazy(()=>cl)]).optional(),location:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),iQ=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>UP).optional(),completions:e.lazy(()=>kP).optional()}).strict(),rQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>RP).optional(),completions:e.lazy(()=>fP).optional()}).strict(),Fte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),frequency:e.union([e.lazy(()=>qe),e.lazy(()=>pl)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),lQ=e.object({rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>DP).optional(),respondedBy:e.lazy(()=>xP).optional()}).strict(),cQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Ete=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),ZE=e.object({id:e.number().int().optional(),startTime:e.coerce.date(),endTime:e.coerce.date(),status:e.lazy(()=>Ze)}).strict(),$E=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe)}).strict(),QE=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdated:e.coerce.date().optional()}).strict(),GE=e.object({id:e.string().optional(),code:e.string(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional()}).strict(),YE=e.object({id:e.number().int().optional(),token:e.string(),expiresAt:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),JE=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),menuItemId:e.number().int(),quantity:e.number().int(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),KE=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),reason:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),XE=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),eD=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),recipeId:e.number().int(),quantity:e.number().int(),unit:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),tD=e.object({id:e.number().int().optional(),dayOfWeek:e.lazy(()=>pt),startTime:e.coerce.date(),endTime:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),aD=e.object({id:e.number().int().optional(),date:e.coerce.date(),constraintsType:e.lazy(()=>ut),startTime:e.coerce.date(),endTime:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),nD=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),oD=e.object({id:e.number().int().optional(),checklistId:e.number().int(),date:e.coerce.date(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),iD=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),menuItemId:e.number().int().optional().nullable(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),rD=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),lD=e.object({id:e.number().int().optional(),recipeId:e.number().int(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),pQ=e.object({startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional(),ShiftTask:e.lazy(()=>J$).optional()}).strict(),uQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional(),ShiftTask:e.lazy(()=>K$).optional()}).strict(),Dte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),status:e.union([e.lazy(()=>Ze),e.lazy(()=>Jd)]).optional()}).strict(),sQ=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),prepBoard:e.lazy(()=>cB).optional(),recipe:e.lazy(()=>pB).optional()}).strict(),yQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional()}).strict(),xte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional()}).strict(),dQ=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventory:e.lazy(()=>pf).optional(),ingredient:e.lazy(()=>uf).optional(),InventoryWithdrawal:e.lazy(()=>yf).optional()}).strict(),mQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),InventoryWithdrawal:e.lazy(()=>df).optional()}).strict(),Vte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),zQ=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),hQ=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Hte=e.object({id:e.union([e.string(),e.lazy(()=>p)]).optional(),code:e.union([e.string(),e.lazy(()=>p)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),bQ=e.object({token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),IQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Lte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),token:e.union([e.string(),e.lazy(()=>p)]).optional(),expiresAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),gQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>oN).optional(),menuItem:e.lazy(()=>iN).optional()}).strict(),SQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Zte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),vQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>uN).optional(),ingrediente:e.lazy(()=>sN).optional()}).strict(),AQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$te=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),CQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>bN).optional(),items:e.lazy(()=>gN).optional()}).strict(),WQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>SN).optional()}).strict(),Qte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),UQ=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),productionPlan:e.lazy(()=>WN).optional(),recipe:e.lazy(()=>UN).optional()}).strict(),kQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Gte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),RQ=e.object({dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),fQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Yte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dayOfWeek:e.union([e.lazy(()=>pt),e.lazy(()=>tI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),jQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),MQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Jte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),constraintsType:e.union([e.lazy(()=>ut),e.lazy(()=>aI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),OQ=e.object({dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventoryItem:e.lazy(()=>MN).optional(),recipe:e.lazy(()=>ON).optional()}).strict(),wQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Kte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),TQ=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),checklist:e.lazy(()=>TP).optional(),items:e.lazy(()=>NP).optional()}).strict(),PQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>BP).optional()}).strict(),Xte=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),checklistId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),NQ=e.object({rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>EP).optional(),menuItem:e.lazy(()=>DP).optional()}).strict(),BQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),eae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),_Q=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>WS).optional(),ingredients:e.lazy(()=>US).optional(),instructions:e.lazy(()=>kS).optional(),approvedBy:e.lazy(()=>fS).optional()}).strict(),qQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>jS).optional(),instructions:e.lazy(()=>MS).optional()}).strict(),tae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),FQ=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>WS).optional(),ingredients:e.lazy(()=>US).optional(),instructions:e.lazy(()=>kS).optional(),createdBy:e.lazy(()=>RS).optional()}).strict(),EQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>jS).optional(),instructions:e.lazy(()=>MS).optional()}).strict(),aae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),cD=e.object({id:e.number().int().optional(),name:e.string(),imageUrl:e.union([e.lazy(()=>et),e.string().array()]).optional(),description:e.string().optional().nullable(),servings:e.number().int(),cookTime:e.number().int(),prepTime:e.number().int(),frequency:e.number().int().optional().nullable(),restaurantId:e.number().int(),foodCost:e.number().optional().nullable(),isDeleted:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),DQ=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),xQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),nae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),pD=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),uD=e.object({id:e.number().int().optional(),stepNumber:e.number().int(),instruction:e.string(),imageUrl:e.string().optional().nullable(),recipeVersionId:e.number().int().optional().nullable()}).strict(),sD=e.object({id:e.number().int().optional(),cost:e.number(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),yD=e.object({id:e.number().int().optional(),quantity:e.number().int(),date:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),dD=e.object({id:e.number().int().optional(),prepBoardId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),mD=e.object({id:e.number().int().optional(),menuItemId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),zD=e.object({id:e.number().int().optional(),productionPlanId:e.number().int(),quantity:e.number().int(),unit:e.string(),assignedToId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),hD=e.object({id:e.number().int().optional(),inventoryItemId:e.number().int(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),bD=e.object({id:e.number().int().optional(),versionNumber:e.number().int(),description:e.string().optional().nullable(),changes:e.string().optional().nullable(),isActive:e.boolean().optional(),createdById:e.number().int(),approvedById:e.number().int().optional().nullable(),approvedAt:e.coerce.date().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),ID=e.object({id:e.number().int().optional(),equipmentId:e.number().int(),notes:e.string().optional().nullable()}).strict(),VQ=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredient:e.lazy(()=>_N).optional(),RecipeVersion:e.lazy(()=>qN).optional()}).strict(),HQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),oae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),LQ=e.object({stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),RecipeVersion:e.lazy(()=>B$).optional()}).strict(),ZQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),iae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),stepNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),instruction:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),$Q=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),menu:e.lazy(()=>sd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),QQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),rae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),menuId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),GQ=e.object({cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),YQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),lae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cost:e.union([e.number(),e.lazy(()=>b)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),JQ=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),KQ=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),cae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),XQ=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),prepItems:e.lazy(()=>o1).optional()}).strict(),eG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),prepItems:e.lazy(()=>r1).optional()}).strict(),pae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),tG=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),prepBoard:e.lazy(()=>cB).optional(),assignedTo:e.lazy(()=>uB).optional()}).strict(),aG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),uae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepBoardId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),nG=e.object({joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItem:e.lazy(()=>p1).optional()}).strict(),oG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),sae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),menuItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),iG=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),productionPlan:e.lazy(()=>WN).optional(),assignedTo:e.lazy(()=>kN).optional()}).strict(),rG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),yae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),productionPlanId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),lG=e.object({dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventoryItem:e.lazy(()=>MN).optional(),createdBy:e.lazy(()=>wN).optional()}).strict(),cG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),dae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryItemId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),pG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),uG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),mae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),sG=e.object({versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>US).optional(),instructions:e.lazy(()=>kS).optional(),createdBy:e.lazy(()=>RS).optional(),approvedBy:e.lazy(()=>fS).optional()}).strict(),yG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>jS).optional(),instructions:e.lazy(()=>MS).optional()}).strict(),zae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),versionNumber:e.union([e.number().int(),e.lazy(()=>l)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),changes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),approvedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),approvedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),dG=e.object({notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),equipment:e.lazy(()=>e$).optional()}).strict(),mG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),hae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),equipmentId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable()}).strict(),zG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>GP).optional(),ingredients:e.lazy(()=>JP).optional()}).strict(),hG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>KP).optional(),ingredients:e.lazy(()=>eN).optional()}).strict(),bae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),gD=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number(),unit:e.string(),joinAt:e.coerce.date().optional(),recipeVersionId:e.number().int().optional().nullable()}).strict(),SD=e.object({id:e.number().int().optional(),inventoryId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional()}).strict(),vD=e.object({id:e.number().int().optional(),orderId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),AD=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),quantity:e.number(),unit:e.string(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),CD=e.object({id:e.number().int().optional(),allergenId:e.number().int()}).strict(),WD=e.object({id:e.number().int().optional(),vendorId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),bG=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>BN).optional(),RecipeVersion:e.lazy(()=>qN).optional()}).strict(),IG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),Iae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipeVersionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),gG=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),inventory:e.lazy(()=>pf).optional(),lastUpdatedBy:e.lazy(()=>sf).optional(),InventoryWithdrawal:e.lazy(()=>yf).optional()}).strict(),SG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),InventoryWithdrawal:e.lazy(()=>df).optional()}).strict(),gae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),inventoryId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),vG=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),order:e.lazy(()=>L$).optional()}).strict(),AG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),orderId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),Sae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),orderId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),CG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>XN).optional(),supplierPriceHistory:e.lazy(()=>tB).optional()}).strict(),WG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),orders:e.lazy(()=>aB).optional(),supplierPriceHistory:e.lazy(()=>oB).optional()}).strict(),vae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),contact:e.union([e.string(),e.lazy(()=>p)]).optional(),email:e.union([e.string(),e.lazy(()=>p)]).optional(),phone:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),UG=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>uN).optional(),recordedBy:e.lazy(()=>yN).optional()}).strict(),kG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Aae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),RG=e.object({allergen:e.lazy(()=>I$).optional()}).strict(),fG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),allergenId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),Cae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),allergenId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),jG=e.object({price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),vendor:e.lazy(()=>d$).optional()}).strict(),MG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Wae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),vendorId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),UD=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),minQuantity:e.number(),restockThreshold:e.number(),lastUpdatedById:e.number().int().optional().nullable(),lastUpdated:e.coerce.date().optional()}).strict(),OG=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredient:e.lazy(()=>uf).optional(),lastUpdatedBy:e.lazy(()=>sf).optional(),InventoryWithdrawal:e.lazy(()=>yf).optional()}).strict(),wG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),InventoryWithdrawal:e.lazy(()=>df).optional()}).strict(),Uae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),minQuantity:e.union([e.number(),e.lazy(()=>b)]).optional(),restockThreshold:e.union([e.number(),e.lazy(()=>b)]).optional(),lastUpdatedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),lastUpdated:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),kD=e.object({id:e.number().int().optional(),dateTime:e.coerce.date(),quantity:e.number(),unit:e.string(),recipeId:e.number().int().optional().nullable(),createdById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),TG=e.object({dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>ON).optional(),createdBy:e.lazy(()=>wN).optional()}).strict(),PG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),kae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),dateTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),RD=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),quantity:e.number(),unit:e.string(),price:e.number()}).strict(),NG=e.object({quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),ingredient:e.lazy(()=>Z$).optional()}).strict(),BG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),Rae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional()}).strict(),fD=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),status:e.lazy(()=>Be),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),jD=e.object({id:e.number().int().optional(),ingredientId:e.number().int(),price:e.number(),unit:e.string(),startDate:e.coerce.date(),endDate:e.coerce.date().optional().nullable(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_G=e.object({status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>VN).optional(),items:e.lazy(()=>LN).optional()}).strict(),qG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),items:e.lazy(()=>ZN).optional()}).strict(),fae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>Be),e.lazy(()=>nl)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),FG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIngredients:e.lazy(()=>jh).optional(),inventoryItems:e.lazy(()=>Mh).optional(),orderItems:e.lazy(()=>Oh).optional(),WasteRecord:e.lazy(()=>Th).optional(),IngredientAllergen:e.lazy(()=>Ph).optional(),SupplierPriceHistory:e.lazy(()=>Nh).optional(),DietaryRestriction:e.lazy(()=>Bh).optional()}).strict(),EG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),recipeIngredients:e.lazy(()=>_h).optional(),inventoryItems:e.lazy(()=>qh).optional(),orderItems:e.lazy(()=>Fh).optional(),WasteRecord:e.lazy(()=>Dh).optional(),IngredientAllergen:e.lazy(()=>xh).optional(),SupplierPriceHistory:e.lazy(()=>Vh).optional()}).strict(),jae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),category:e.union([e.string(),e.lazy(()=>p)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),dietaryRestrictionId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),DG=e.object({price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredient:e.lazy(()=>m$).optional()}).strict(),xG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Mae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),ingredientId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),unit:e.union([e.string(),e.lazy(()=>p)]).optional(),startDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endDate:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),MD=e.object({id:e.number().int().optional(),taskType:e.lazy(()=>ct),startTime:e.coerce.date(),endTime:e.coerce.date(),duration:e.number().int(),notes:e.string().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),VG=e.object({taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),HG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Oae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),taskType:e.union([e.lazy(()=>ct),e.lazy(()=>eI)]).optional(),startTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),endTime:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),duration:e.union([e.number().int(),e.lazy(()=>l)]).optional(),notes:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),OD=e.object({id:e.number().int().optional(),recipeId:e.number().int(),quantity:e.number().int(),status:e.lazy(()=>oe),assignedToId:e.number().int()}).strict(),LG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),menuItems:e.lazy(()=>Yo).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),ZG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),menuItems:e.lazy(()=>ui).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),wae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),$G=e.object({quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),recipe:e.lazy(()=>pB).optional(),assignedTo:e.lazy(()=>uB).optional()}).strict(),QG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),Tae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),status:e.union([e.lazy(()=>oe),e.lazy(()=>ra)]).optional(),assignedToId:e.union([e.number().int(),e.lazy(()=>l)]).optional()}).strict(),wD=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),price:e.number(),foodCost:e.number(),recipeIds:e.union([e.lazy(()=>Jt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Kt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>Xt),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>ea),e.string().array()]).optional(),nutritionalInfoId:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional(),categoryId:e.number().int().optional().nullable()}).strict(),TD=e.object({id:e.number().int().optional(),name:e.string(),description:e.string().optional().nullable(),displayOrder:e.number().int(),isActive:e.boolean().optional(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),GG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),nutritionalInfo:e.lazy(()=>ud).optional(),recipes:e.lazy(()=>yd).optional(),menuItemRecipe:e.lazy(()=>dd).optional(),salesTransactions:e.lazy(()=>md).optional(),leftoverItem:e.lazy(()=>zd).optional(),nutritionalRecommendation:e.lazy(()=>hd).optional(),category:e.lazy(()=>bd).optional(),feedback:e.lazy(()=>Id).optional(),dietaryRestrictions:e.lazy(()=>gd).optional()}).strict(),YG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),nutritionalInfo:e.lazy(()=>Sd).optional(),recipes:e.lazy(()=>vd).optional(),menuItemRecipe:e.lazy(()=>Ad).optional(),salesTransactions:e.lazy(()=>Cd).optional(),leftoverItem:e.lazy(()=>Wd).optional(),nutritionalRecommendation:e.lazy(()=>Ud).optional(),feedback:e.lazy(()=>kd).optional(),dietaryRestrictions:e.lazy(()=>Rd).optional()}).strict(),Pae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>b)]).optional(),recipeIds:e.union([e.lazy(()=>Nt),e.number().int().array()]).optional(),recipeServingsAmount:e.union([e.lazy(()=>Bt),e.number().array()]).optional(),recipeServingsCost:e.union([e.lazy(()=>_t),e.number().array()]).optional(),allergens:e.union([e.lazy(()=>qt),e.string().array()]).optional(),nutritionalInfoId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),categoryId:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable()}).strict(),JG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>GZ).optional()}).strict(),KG=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),menuItems:e.lazy(()=>YZ).optional()}).strict(),Nae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),displayOrder:e.union([e.number().int(),e.lazy(()=>l)]).optional(),isActive:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),PD=e.object({id:e.number().int().optional(),recipeId:e.number().int(),joinAt:e.coerce.date().optional()}).strict(),ND=e.object({id:e.number().int().optional(),posTransactionID:e.string().optional().nullable(),restaurantId:e.number().int(),price:e.number(),total:e.number(),transactionDate:e.coerce.date(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),BD=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),date:e.coerce.date(),quantity:e.number().int(),reason:e.string(),recordedById:e.number().int(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),_D=e.object({id:e.number().int().optional(),recommendation:e.string(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),qD=e.object({id:e.number().int().optional(),restaurantId:e.number().int(),rating:e.number().int(),comment:e.string().optional().nullable(),source:e.lazy(()=>Oe),tags:e.union([e.lazy(()=>al),e.string().array()]).optional(),status:e.lazy(()=>we).optional(),responseText:e.string().optional().nullable(),respondedAt:e.coerce.date().optional().nullable(),respondedById:e.number().int().optional().nullable(),createdAt:e.coerce.date().optional(),updatedAt:e.coerce.date().optional()}).strict(),XG=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>Zo).optional(),cookBook:e.lazy(()=>$o).optional(),ingredients:e.lazy(()=>Qo).optional(),instructions:e.lazy(()=>Go).optional(),foodCostHistory:e.lazy(()=>Jo).optional(),prepHistory:e.lazy(()=>Ko).optional(),prepBoards:e.lazy(()=>Xo).optional(),prepItems:e.lazy(()=>ei).optional(),MenuItemRecipe:e.lazy(()=>ti).optional(),ProductionPlanItem:e.lazy(()=>ai).optional(),InventoryWithdrawal:e.lazy(()=>ni).optional(),tags:e.lazy(()=>oi).optional(),versions:e.lazy(()=>ii).optional(),equipment:e.lazy(()=>ri).optional(),dietaryRestrictions:e.lazy(()=>li).optional()}).strict(),e9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),ingredients:e.lazy(()=>ci).optional(),instructions:e.lazy(()=>pi).optional(),foodCostHistory:e.lazy(()=>si).optional(),prepHistory:e.lazy(()=>yi).optional(),prepBoards:e.lazy(()=>di).optional(),prepItems:e.lazy(()=>mi).optional(),MenuItemRecipe:e.lazy(()=>zi).optional(),ProductionPlanItem:e.lazy(()=>hi).optional(),InventoryWithdrawal:e.lazy(()=>bi).optional(),tags:e.lazy(()=>Ii).optional(),versions:e.lazy(()=>gi).optional(),equipment:e.lazy(()=>Si).optional(),dietaryRestrictions:e.lazy(()=>vi).optional()}).strict(),Bae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),imageUrl:e.union([e.lazy(()=>Ee),e.string().array()]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),servings:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),prepTime:e.union([e.number().int(),e.lazy(()=>l)]).optional(),frequency:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),cookBookId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),foodCost:e.union([e.number(),e.lazy(()=>E)]).optional().nullable(),isDeleted:e.union([e.boolean(),e.lazy(()=>A)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),t9=e.object({joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipe:e.lazy(()=>u1).optional()}).strict(),a9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),_ae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recipeId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),joinAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),n9=e.object({posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>VZ).optional()}).strict(),o9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),qae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),posTransactionID:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),price:e.union([e.number(),e.lazy(()=>b)]).optional(),total:e.union([e.number(),e.lazy(()=>b)]).optional(),transactionDate:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),i9=e.object({date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>oN).optional(),recordedBy:e.lazy(()=>rN).optional()}).strict(),r9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Fae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),date:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),quantity:e.union([e.number().int(),e.lazy(()=>l)]).optional(),reason:e.union([e.string(),e.lazy(()=>p)]).optional(),recordedById:e.union([e.number().int(),e.lazy(()=>l)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),l9=e.object({recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),c9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Eae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),recommendation:e.union([e.string(),e.lazy(()=>p)]).optional(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),p9=e.object({rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),restaurant:e.lazy(()=>EP).optional(),respondedBy:e.lazy(()=>xP).optional()}).strict(),u9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Dae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),restaurantId:e.union([e.number().int(),e.lazy(()=>l)]).optional(),rating:e.union([e.number().int(),e.lazy(()=>l)]).optional(),comment:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),source:e.union([e.lazy(()=>Oe),e.lazy(()=>Zr)]).optional(),tags:e.union([e.lazy(()=>$r),e.string().array()]).optional(),status:e.union([e.lazy(()=>we),e.lazy(()=>Qr)]).optional(),responseText:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),respondedAt:e.union([e.coerce.date(),e.lazy(()=>j)]).optional().nullable(),respondedById:e.union([e.number().int(),e.lazy(()=>I)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),s9=e.object({name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>YP).optional(),ingredients:e.lazy(()=>JP).optional()}).strict(),y9=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),recipes:e.lazy(()=>XP).optional(),ingredients:e.lazy(()=>eN).optional()}).strict(),xae=e.object({id:e.union([e.number().int(),e.lazy(()=>l)]).optional(),name:e.union([e.string(),e.lazy(()=>p)]).optional(),description:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),icon:e.union([e.string(),e.lazy(()=>d)]).optional().nullable(),createdAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional(),updatedAt:e.union([e.coerce.date(),e.lazy(()=>i)]).optional()}).strict(),Sre=e.object({select:ts.optional(),include:es.optional(),where:ua.optional(),orderBy:e.union([am.array(),am]).optional(),cursor:me.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Kh,Kh.array()]).optional()}).strict(),vre=e.object({select:ts.optional(),include:es.optional(),where:ua.optional(),orderBy:e.union([am.array(),am]).optional(),cursor:me.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Kh,Kh.array()]).optional()}).strict(),Rw=e.object({select:ts.optional(),include:es.optional(),where:ua.optional(),orderBy:e.union([am.array(),am]).optional(),cursor:me.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Kh,Kh.array()]).optional()}).strict(),Are=e.object({where:ua.optional(),orderBy:e.union([am.array(),am]).optional(),cursor:me.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Cre=e.object({where:ua.optional(),orderBy:e.union([WF.array(),WF]).optional(),by:Kh.array(),having:nI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Wre=e.object({select:ts.optional(),include:es.optional(),where:me}).strict(),Ure=e.object({select:ts.optional(),include:es.optional(),where:me}).strict(),kre=e.object({select:ns.optional(),include:as.optional(),where:Tt.optional(),orderBy:e.union([wd.array(),wd]).optional(),cursor:tt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Xh,Xh.array()]).optional()}).strict(),Rre=e.object({select:ns.optional(),include:as.optional(),where:Tt.optional(),orderBy:e.union([wd.array(),wd]).optional(),cursor:tt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Xh,Xh.array()]).optional()}).strict(),d9=e.object({select:ns.optional(),include:as.optional(),where:Tt.optional(),orderBy:e.union([wd.array(),wd]).optional(),cursor:tt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Xh,Xh.array()]).optional()}).strict(),fre=e.object({where:Tt.optional(),orderBy:e.union([wd.array(),wd]).optional(),cursor:tt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),jre=e.object({where:Tt.optional(),orderBy:e.union([UF.array(),UF]).optional(),by:Xh.array(),having:oI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Mre=e.object({select:ns.optional(),include:as.optional(),where:tt}).strict(),Ore=e.object({select:ns.optional(),include:as.optional(),where:tt}).strict(),wre=e.object({select:is.optional(),include:os.optional(),where:st.optional(),orderBy:e.union([_l.array(),_l]).optional(),cursor:q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([eb,eb.array()]).optional()}).strict(),Tre=e.object({select:is.optional(),include:os.optional(),where:st.optional(),orderBy:e.union([_l.array(),_l]).optional(),cursor:q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([eb,eb.array()]).optional()}).strict(),Cg=e.object({select:is.optional(),include:os.optional(),where:st.optional(),orderBy:e.union([_l.array(),_l]).optional(),cursor:q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([eb,eb.array()]).optional()}).strict(),Pre=e.object({where:st.optional(),orderBy:e.union([_l.array(),_l]).optional(),cursor:q.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Nre=e.object({where:st.optional(),orderBy:e.union([kF.array(),kF]).optional(),by:eb.array(),having:iI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Bre=e.object({select:is.optional(),include:os.optional(),where:q}).strict(),_re=e.object({select:is.optional(),include:os.optional(),where:q}).strict(),qre=e.object({select:ls.optional(),include:rs.optional(),where:ft.optional(),orderBy:e.union([ql.array(),ql]).optional(),cursor:Ye.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([tb,tb.array()]).optional()}).strict(),Fre=e.object({select:ls.optional(),include:rs.optional(),where:ft.optional(),orderBy:e.union([ql.array(),ql]).optional(),cursor:Ye.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([tb,tb.array()]).optional()}).strict(),m9=e.object({select:ls.optional(),include:rs.optional(),where:ft.optional(),orderBy:e.union([ql.array(),ql]).optional(),cursor:Ye.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([tb,tb.array()]).optional()}).strict(),Ere=e.object({where:ft.optional(),orderBy:e.union([ql.array(),ql]).optional(),cursor:Ye.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Dre=e.object({where:ft.optional(),orderBy:e.union([RF.array(),RF]).optional(),by:tb.array(),having:rI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),xre=e.object({select:ls.optional(),include:rs.optional(),where:Ye}).strict(),Vre=e.object({select:ls.optional(),include:rs.optional(),where:Ye}).strict(),Hre=e.object({select:ps.optional(),include:cs.optional(),where:sa.optional(),orderBy:e.union([nm.array(),nm]).optional(),cursor:ze.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ab,ab.array()]).optional()}).strict(),Lre=e.object({select:ps.optional(),include:cs.optional(),where:sa.optional(),orderBy:e.union([nm.array(),nm]).optional(),cursor:ze.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ab,ab.array()]).optional()}).strict(),fw=e.object({select:ps.optional(),include:cs.optional(),where:sa.optional(),orderBy:e.union([nm.array(),nm]).optional(),cursor:ze.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ab,ab.array()]).optional()}).strict(),Zre=e.object({where:sa.optional(),orderBy:e.union([nm.array(),nm]).optional(),cursor:ze.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),$re=e.object({where:sa.optional(),orderBy:e.union([fF.array(),fF]).optional(),by:ab.array(),having:lI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Qre=e.object({select:ps.optional(),include:cs.optional(),where:ze}).strict(),Gre=e.object({select:ps.optional(),include:cs.optional(),where:ze}).strict(),Yre=e.object({select:ss.optional(),include:us.optional(),where:ya.optional(),orderBy:e.union([om.array(),om]).optional(),cursor:ht.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([nb,nb.array()]).optional()}).strict(),Jre=e.object({select:ss.optional(),include:us.optional(),where:ya.optional(),orderBy:e.union([om.array(),om]).optional(),cursor:ht.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([nb,nb.array()]).optional()}).strict(),z9=e.object({select:ss.optional(),include:us.optional(),where:ya.optional(),orderBy:e.union([om.array(),om]).optional(),cursor:ht.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([nb,nb.array()]).optional()}).strict(),Kre=e.object({where:ya.optional(),orderBy:e.union([om.array(),om]).optional(),cursor:ht.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Xre=e.object({where:ya.optional(),orderBy:e.union([jF.array(),jF]).optional(),by:nb.array(),having:cI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ele=e.object({select:ss.optional(),include:us.optional(),where:ht}).strict(),tle=e.object({select:ss.optional(),include:us.optional(),where:ht}).strict(),ale=e.object({select:ds.optional(),include:ys.optional(),where:jt.optional(),orderBy:e.union([Fl.array(),Fl]).optional(),cursor:Je.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ob,ob.array()]).optional()}).strict(),nle=e.object({select:ds.optional(),include:ys.optional(),where:jt.optional(),orderBy:e.union([Fl.array(),Fl]).optional(),cursor:Je.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ob,ob.array()]).optional()}).strict(),h9=e.object({select:ds.optional(),include:ys.optional(),where:jt.optional(),orderBy:e.union([Fl.array(),Fl]).optional(),cursor:Je.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ob,ob.array()]).optional()}).strict(),ole=e.object({where:jt.optional(),orderBy:e.union([Fl.array(),Fl]).optional(),cursor:Je.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ile=e.object({where:jt.optional(),orderBy:e.union([MF.array(),MF]).optional(),by:ob.array(),having:pI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),rle=e.object({select:ds.optional(),include:ys.optional(),where:Je}).strict(),lle=e.object({select:ds.optional(),include:ys.optional(),where:Je}).strict(),cle=e.object({select:zs.optional(),include:ms.optional(),where:Et.optional(),orderBy:e.union([Td.array(),Td]).optional(),cursor:at.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ib,ib.array()]).optional()}).strict(),ple=e.object({select:zs.optional(),include:ms.optional(),where:Et.optional(),orderBy:e.union([Td.array(),Td]).optional(),cursor:at.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ib,ib.array()]).optional()}).strict(),b9=e.object({select:zs.optional(),include:ms.optional(),where:Et.optional(),orderBy:e.union([Td.array(),Td]).optional(),cursor:at.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ib,ib.array()]).optional()}).strict(),ule=e.object({where:Et.optional(),orderBy:e.union([Td.array(),Td]).optional(),cursor:at.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),sle=e.object({where:Et.optional(),orderBy:e.union([OF.array(),OF]).optional(),by:ib.array(),having:uI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),yle=e.object({select:zs.optional(),include:ms.optional(),where:at}).strict(),dle=e.object({select:zs.optional(),include:ms.optional(),where:at}).strict(),mle=e.object({select:bs.optional(),include:hs.optional(),where:Dt.optional(),orderBy:e.union([Pd.array(),Pd]).optional(),cursor:le.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([rb,rb.array()]).optional()}).strict(),zle=e.object({select:bs.optional(),include:hs.optional(),where:Dt.optional(),orderBy:e.union([Pd.array(),Pd]).optional(),cursor:le.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([rb,rb.array()]).optional()}).strict(),jw=e.object({select:bs.optional(),include:hs.optional(),where:Dt.optional(),orderBy:e.union([Pd.array(),Pd]).optional(),cursor:le.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([rb,rb.array()]).optional()}).strict(),hle=e.object({where:Dt.optional(),orderBy:e.union([Pd.array(),Pd]).optional(),cursor:le.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ble=e.object({where:Dt.optional(),orderBy:e.union([wF.array(),wF]).optional(),by:rb.array(),having:sI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ile=e.object({select:bs.optional(),include:hs.optional(),where:le}).strict(),gle=e.object({select:bs.optional(),include:hs.optional(),where:le}).strict(),Sle=e.object({select:gs.optional(),include:Is.optional(),where:da.optional(),orderBy:e.union([im.array(),im]).optional(),cursor:he.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([lb,lb.array()]).optional()}).strict(),vle=e.object({select:gs.optional(),include:Is.optional(),where:da.optional(),orderBy:e.union([im.array(),im]).optional(),cursor:he.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([lb,lb.array()]).optional()}).strict(),Mw=e.object({select:gs.optional(),include:Is.optional(),where:da.optional(),orderBy:e.union([im.array(),im]).optional(),cursor:he.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([lb,lb.array()]).optional()}).strict(),Ale=e.object({where:da.optional(),orderBy:e.union([im.array(),im]).optional(),cursor:he.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Cle=e.object({where:da.optional(),orderBy:e.union([TF.array(),TF]).optional(),by:lb.array(),having:yI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Wle=e.object({select:gs.optional(),include:Is.optional(),where:he}).strict(),Ule=e.object({select:gs.optional(),include:Is.optional(),where:he}).strict(),kle=e.object({select:vs.optional(),include:Ss.optional(),where:ma.optional(),orderBy:e.union([rm.array(),rm]).optional(),cursor:be.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([cb,cb.array()]).optional()}).strict(),Rle=e.object({select:vs.optional(),include:Ss.optional(),where:ma.optional(),orderBy:e.union([rm.array(),rm]).optional(),cursor:be.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([cb,cb.array()]).optional()}).strict(),Ow=e.object({select:vs.optional(),include:Ss.optional(),where:ma.optional(),orderBy:e.union([rm.array(),rm]).optional(),cursor:be.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([cb,cb.array()]).optional()}).strict(),fle=e.object({where:ma.optional(),orderBy:e.union([rm.array(),rm]).optional(),cursor:be.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),jle=e.object({where:ma.optional(),orderBy:e.union([PF.array(),PF]).optional(),by:cb.array(),having:dI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Mle=e.object({select:vs.optional(),include:Ss.optional(),where:be}).strict(),Ole=e.object({select:vs.optional(),include:Ss.optional(),where:be}).strict(),wle=e.object({select:Cs.optional(),include:As.optional(),where:za.optional(),orderBy:e.union([lm.array(),lm]).optional(),cursor:V.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([pb,pb.array()]).optional()}).strict(),Tle=e.object({select:Cs.optional(),include:As.optional(),where:za.optional(),orderBy:e.union([lm.array(),lm]).optional(),cursor:V.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([pb,pb.array()]).optional()}).strict(),xg=e.object({select:Cs.optional(),include:As.optional(),where:za.optional(),orderBy:e.union([lm.array(),lm]).optional(),cursor:V.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([pb,pb.array()]).optional()}).strict(),Ple=e.object({where:za.optional(),orderBy:e.union([lm.array(),lm]).optional(),cursor:V.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Nle=e.object({where:za.optional(),orderBy:e.union([NF.array(),NF]).optional(),by:pb.array(),having:mI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ble=e.object({select:Cs.optional(),include:As.optional(),where:V}).strict(),_le=e.object({select:Cs.optional(),include:As.optional(),where:V}).strict(),qle=e.object({select:Us.optional(),include:Ws.optional(),where:Pt.optional(),orderBy:e.union([Nd.array(),Nd]).optional(),cursor:ce.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ub,ub.array()]).optional()}).strict(),Fle=e.object({select:Us.optional(),include:Ws.optional(),where:Pt.optional(),orderBy:e.union([Nd.array(),Nd]).optional(),cursor:ce.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ub,ub.array()]).optional()}).strict(),ww=e.object({select:Us.optional(),include:Ws.optional(),where:Pt.optional(),orderBy:e.union([Nd.array(),Nd]).optional(),cursor:ce.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([ub,ub.array()]).optional()}).strict(),Ele=e.object({where:Pt.optional(),orderBy:e.union([Nd.array(),Nd]).optional(),cursor:ce.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Dle=e.object({where:Pt.optional(),orderBy:e.union([BF.array(),BF]).optional(),by:ub.array(),having:zI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),xle=e.object({select:Us.optional(),include:Ws.optional(),where:ce}).strict(),Vle=e.object({select:Us.optional(),include:Ws.optional(),where:ce}).strict(),Hle=e.object({select:Rs.optional(),include:ks.optional(),where:ha.optional(),orderBy:e.union([cm.array(),cm]).optional(),cursor:bt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([sb,sb.array()]).optional()}).strict(),Lle=e.object({select:Rs.optional(),include:ks.optional(),where:ha.optional(),orderBy:e.union([cm.array(),cm]).optional(),cursor:bt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([sb,sb.array()]).optional()}).strict(),I9=e.object({select:Rs.optional(),include:ks.optional(),where:ha.optional(),orderBy:e.union([cm.array(),cm]).optional(),cursor:bt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([sb,sb.array()]).optional()}).strict(),Zle=e.object({where:ha.optional(),orderBy:e.union([cm.array(),cm]).optional(),cursor:bt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),$le=e.object({where:ha.optional(),orderBy:e.union([_F.array(),_F]).optional(),by:sb.array(),having:hI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Qle=e.object({select:Rs.optional(),include:ks.optional(),where:bt}).strict(),Gle=e.object({select:Rs.optional(),include:ks.optional(),where:bt}).strict(),Yle=e.object({select:js.optional(),include:fs.optional(),where:ba.optional(),orderBy:e.union([pm.array(),pm]).optional(),cursor:H.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([yb,yb.array()]).optional()}).strict(),Jle=e.object({select:js.optional(),include:fs.optional(),where:ba.optional(),orderBy:e.union([pm.array(),pm]).optional(),cursor:H.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([yb,yb.array()]).optional()}).strict(),Vg=e.object({select:js.optional(),include:fs.optional(),where:ba.optional(),orderBy:e.union([pm.array(),pm]).optional(),cursor:H.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([yb,yb.array()]).optional()}).strict(),Kle=e.object({where:ba.optional(),orderBy:e.union([pm.array(),pm]).optional(),cursor:H.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Xle=e.object({where:ba.optional(),orderBy:e.union([qF.array(),qF]).optional(),by:yb.array(),having:bI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ece=e.object({select:js.optional(),include:fs.optional(),where:H}).strict(),tce=e.object({select:js.optional(),include:fs.optional(),where:H}).strict(),ace=e.object({select:Os.optional(),include:Ms.optional(),where:Ia.optional(),orderBy:e.union([um.array(),um]).optional(),cursor:L.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([db,db.array()]).optional()}).strict(),nce=e.object({select:Os.optional(),include:Ms.optional(),where:Ia.optional(),orderBy:e.union([um.array(),um]).optional(),cursor:L.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([db,db.array()]).optional()}).strict(),Hg=e.object({select:Os.optional(),include:Ms.optional(),where:Ia.optional(),orderBy:e.union([um.array(),um]).optional(),cursor:L.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([db,db.array()]).optional()}).strict(),oce=e.object({where:Ia.optional(),orderBy:e.union([um.array(),um]).optional(),cursor:L.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ice=e.object({where:Ia.optional(),orderBy:e.union([FF.array(),FF]).optional(),by:db.array(),having:II.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),rce=e.object({select:Os.optional(),include:Ms.optional(),where:L}).strict(),lce=e.object({select:Os.optional(),include:Ms.optional(),where:L}).strict(),cce=e.object({select:Ts.optional(),include:ws.optional(),where:xt.optional(),orderBy:e.union([Bd.array(),Bd]).optional(),cursor:pe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([mb,mb.array()]).optional()}).strict(),pce=e.object({select:Ts.optional(),include:ws.optional(),where:xt.optional(),orderBy:e.union([Bd.array(),Bd]).optional(),cursor:pe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([mb,mb.array()]).optional()}).strict(),Tw=e.object({select:Ts.optional(),include:ws.optional(),where:xt.optional(),orderBy:e.union([Bd.array(),Bd]).optional(),cursor:pe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([mb,mb.array()]).optional()}).strict(),uce=e.object({where:xt.optional(),orderBy:e.union([Bd.array(),Bd]).optional(),cursor:pe.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),sce=e.object({where:xt.optional(),orderBy:e.union([EF.array(),EF]).optional(),by:mb.array(),having:gI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),yce=e.object({select:Ts.optional(),include:ws.optional(),where:pe}).strict(),dce=e.object({select:Ts.optional(),include:ws.optional(),where:pe}).strict(),mce=e.object({select:Ns.optional(),include:Ps.optional(),where:ga.optional(),orderBy:e.union([sm.array(),sm]).optional(),cursor:Z.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([zb,zb.array()]).optional()}).strict(),zce=e.object({select:Ns.optional(),include:Ps.optional(),where:ga.optional(),orderBy:e.union([sm.array(),sm]).optional(),cursor:Z.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([zb,zb.array()]).optional()}).strict(),Lg=e.object({select:Ns.optional(),include:Ps.optional(),where:ga.optional(),orderBy:e.union([sm.array(),sm]).optional(),cursor:Z.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([zb,zb.array()]).optional()}).strict(),hce=e.object({where:ga.optional(),orderBy:e.union([sm.array(),sm]).optional(),cursor:Z.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),bce=e.object({where:ga.optional(),orderBy:e.union([DF.array(),DF]).optional(),by:zb.array(),having:SI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ice=e.object({select:Ns.optional(),include:Ps.optional(),where:Z}).strict(),gce=e.object({select:Ns.optional(),include:Ps.optional(),where:Z}).strict(),Sce=e.object({select:_s.optional(),include:Bs.optional(),where:Sa.optional(),orderBy:e.union([ym.array(),ym]).optional(),cursor:It.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([hb,hb.array()]).optional()}).strict(),vce=e.object({select:_s.optional(),include:Bs.optional(),where:Sa.optional(),orderBy:e.union([ym.array(),ym]).optional(),cursor:It.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([hb,hb.array()]).optional()}).strict(),g9=e.object({select:_s.optional(),include:Bs.optional(),where:Sa.optional(),orderBy:e.union([ym.array(),ym]).optional(),cursor:It.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([hb,hb.array()]).optional()}).strict(),Ace=e.object({where:Sa.optional(),orderBy:e.union([ym.array(),ym]).optional(),cursor:It.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Cce=e.object({where:Sa.optional(),orderBy:e.union([xF.array(),xF]).optional(),by:hb.array(),having:vI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Wce=e.object({select:_s.optional(),include:Bs.optional(),where:It}).strict(),Uce=e.object({select:_s.optional(),include:Bs.optional(),where:It}).strict(),kce=e.object({select:Fs.optional(),include:qs.optional(),where:va.optional(),orderBy:e.union([dm.array(),dm]).optional(),cursor:gt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([bb,bb.array()]).optional()}).strict(),Rce=e.object({select:Fs.optional(),include:qs.optional(),where:va.optional(),orderBy:e.union([dm.array(),dm]).optional(),cursor:gt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([bb,bb.array()]).optional()}).strict(),S9=e.object({select:Fs.optional(),include:qs.optional(),where:va.optional(),orderBy:e.union([dm.array(),dm]).optional(),cursor:gt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([bb,bb.array()]).optional()}).strict(),fce=e.object({where:va.optional(),orderBy:e.union([dm.array(),dm]).optional(),cursor:gt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),jce=e.object({where:va.optional(),orderBy:e.union([VF.array(),VF]).optional(),by:bb.array(),having:AI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Mce=e.object({select:Fs.optional(),include:qs.optional(),where:gt}).strict(),Oce=e.object({select:Fs.optional(),include:qs.optional(),where:gt}).strict(),wce=e.object({select:Ds.optional(),include:Es.optional(),where:Aa.optional(),orderBy:e.union([mm.array(),mm]).optional(),cursor:St.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ib,Ib.array()]).optional()}).strict(),Tce=e.object({select:Ds.optional(),include:Es.optional(),where:Aa.optional(),orderBy:e.union([mm.array(),mm]).optional(),cursor:St.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ib,Ib.array()]).optional()}).strict(),v9=e.object({select:Ds.optional(),include:Es.optional(),where:Aa.optional(),orderBy:e.union([mm.array(),mm]).optional(),cursor:St.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ib,Ib.array()]).optional()}).strict(),Pce=e.object({where:Aa.optional(),orderBy:e.union([mm.array(),mm]).optional(),cursor:St.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Nce=e.object({where:Aa.optional(),orderBy:e.union([HF.array(),HF]).optional(),by:Ib.array(),having:CI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Bce=e.object({select:Ds.optional(),include:Es.optional(),where:St}).strict(),_ce=e.object({select:Ds.optional(),include:Es.optional(),where:St}).strict(),qce=e.object({select:Vs.optional(),include:xs.optional(),where:Ca.optional(),orderBy:e.union([zm.array(),zm]).optional(),cursor:$.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([gb,gb.array()]).optional()}).strict(),Fce=e.object({select:Vs.optional(),include:xs.optional(),where:Ca.optional(),orderBy:e.union([zm.array(),zm]).optional(),cursor:$.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([gb,gb.array()]).optional()}).strict(),Zg=e.object({select:Vs.optional(),include:xs.optional(),where:Ca.optional(),orderBy:e.union([zm.array(),zm]).optional(),cursor:$.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([gb,gb.array()]).optional()}).strict(),Ece=e.object({where:Ca.optional(),orderBy:e.union([zm.array(),zm]).optional(),cursor:$.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Dce=e.object({where:Ca.optional(),orderBy:e.union([LF.array(),LF]).optional(),by:gb.array(),having:WI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),xce=e.object({select:Vs.optional(),include:xs.optional(),where:$}).strict(),Vce=e.object({select:Vs.optional(),include:xs.optional(),where:$}).strict(),Hce=e.object({select:Ls.optional(),include:Hs.optional(),where:na.optional(),orderBy:e.union([_d.array(),_d]).optional(),cursor:Xr.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Sb,Sb.array()]).optional()}).strict(),Lce=e.object({select:Ls.optional(),include:Hs.optional(),where:na.optional(),orderBy:e.union([_d.array(),_d]).optional(),cursor:Xr.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Sb,Sb.array()]).optional()}).strict(),Zce=e.object({select:Ls.optional(),include:Hs.optional(),where:na.optional(),orderBy:e.union([_d.array(),_d]).optional(),cursor:Xr.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Sb,Sb.array()]).optional()}).strict(),$ce=e.object({where:na.optional(),orderBy:e.union([_d.array(),_d]).optional(),cursor:Xr.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Qce=e.object({where:na.optional(),orderBy:e.union([ZF.array(),ZF]).optional(),by:Sb.array(),having:UI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Gce=e.object({select:Ls.optional(),include:Hs.optional(),where:Xr}).strict(),Yce=e.object({select:Ls.optional(),include:Hs.optional(),where:Xr}).strict(),Jce=e.object({select:$s.optional(),include:Zs.optional(),where:Wa.optional(),orderBy:e.union([hm.array(),hm]).optional(),cursor:Ie.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([vb,vb.array()]).optional()}).strict(),Kce=e.object({select:$s.optional(),include:Zs.optional(),where:Wa.optional(),orderBy:e.union([hm.array(),hm]).optional(),cursor:Ie.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([vb,vb.array()]).optional()}).strict(),Pw=e.object({select:$s.optional(),include:Zs.optional(),where:Wa.optional(),orderBy:e.union([hm.array(),hm]).optional(),cursor:Ie.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([vb,vb.array()]).optional()}).strict(),Xce=e.object({where:Wa.optional(),orderBy:e.union([hm.array(),hm]).optional(),cursor:Ie.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),epe=e.object({where:Wa.optional(),orderBy:e.union([$F.array(),$F]).optional(),by:vb.array(),having:kI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),tpe=e.object({select:$s.optional(),include:Zs.optional(),where:Ie}).strict(),ape=e.object({select:$s.optional(),include:Zs.optional(),where:Ie}).strict(),npe=e.object({select:Gs.optional(),include:Qs.optional(),where:Ua.optional(),orderBy:e.union([bm.array(),bm]).optional(),cursor:vt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ab,Ab.array()]).optional()}).strict(),ope=e.object({select:Gs.optional(),include:Qs.optional(),where:Ua.optional(),orderBy:e.union([bm.array(),bm]).optional(),cursor:vt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ab,Ab.array()]).optional()}).strict(),A9=e.object({select:Gs.optional(),include:Qs.optional(),where:Ua.optional(),orderBy:e.union([bm.array(),bm]).optional(),cursor:vt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ab,Ab.array()]).optional()}).strict(),ipe=e.object({where:Ua.optional(),orderBy:e.union([bm.array(),bm]).optional(),cursor:vt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),rpe=e.object({where:Ua.optional(),orderBy:e.union([QF.array(),QF]).optional(),by:Ab.array(),having:RI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),lpe=e.object({select:Gs.optional(),include:Qs.optional(),where:vt}).strict(),cpe=e.object({select:Gs.optional(),include:Qs.optional(),where:vt}).strict(),ppe=e.object({select:Zd.optional(),where:uo.optional(),orderBy:e.union([Im.array(),Im]).optional(),cursor:$d.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Cb,Cb.array()]).optional()}).strict(),upe=e.object({select:Zd.optional(),where:uo.optional(),orderBy:e.union([Im.array(),Im]).optional(),cursor:$d.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Cb,Cb.array()]).optional()}).strict(),spe=e.object({select:Zd.optional(),where:uo.optional(),orderBy:e.union([Im.array(),Im]).optional(),cursor:$d.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Cb,Cb.array()]).optional()}).strict(),ype=e.object({where:uo.optional(),orderBy:e.union([Im.array(),Im]).optional(),cursor:$d.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),dpe=e.object({where:uo.optional(),orderBy:e.union([GF.array(),GF]).optional(),by:Cb.array(),having:fI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),mpe=e.object({select:Zd.optional(),where:$d}).strict(),zpe=e.object({select:Zd.optional(),where:$d}).strict(),hpe=e.object({select:Js.optional(),include:Ys.optional(),where:Rt.optional(),orderBy:e.union([El.array(),El]).optional(),cursor:Bi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Wb,Wb.array()]).optional()}).strict(),bpe=e.object({select:Js.optional(),include:Ys.optional(),where:Rt.optional(),orderBy:e.union([El.array(),El]).optional(),cursor:Bi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Wb,Wb.array()]).optional()}).strict(),Ipe=e.object({select:Js.optional(),include:Ys.optional(),where:Rt.optional(),orderBy:e.union([El.array(),El]).optional(),cursor:Bi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Wb,Wb.array()]).optional()}).strict(),gpe=e.object({where:Rt.optional(),orderBy:e.union([El.array(),El]).optional(),cursor:Bi.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Spe=e.object({where:Rt.optional(),orderBy:e.union([YF.array(),YF]).optional(),by:Wb.array(),having:jI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),vpe=e.object({select:Js.optional(),include:Ys.optional(),where:Bi}).strict(),Ape=e.object({select:Js.optional(),include:Ys.optional(),where:Bi}).strict(),Cpe=e.object({select:Xs.optional(),include:Ks.optional(),where:x.optional(),orderBy:e.union([ca.array(),ca]).optional(),cursor:ee.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ub,Ub.array()]).optional()}).strict(),Wpe=e.object({select:Xs.optional(),include:Ks.optional(),where:x.optional(),orderBy:e.union([ca.array(),ca]).optional(),cursor:ee.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ub,Ub.array()]).optional()}).strict(),C9=e.object({select:Xs.optional(),include:Ks.optional(),where:x.optional(),orderBy:e.union([ca.array(),ca]).optional(),cursor:ee.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ub,Ub.array()]).optional()}).strict(),Upe=e.object({where:x.optional(),orderBy:e.union([ca.array(),ca]).optional(),cursor:ee.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),kpe=e.object({where:x.optional(),orderBy:e.union([JF.array(),JF]).optional(),by:Ub.array(),having:MI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Rpe=e.object({select:Xs.optional(),include:Ks.optional(),where:ee}).strict(),fpe=e.object({select:Xs.optional(),include:Ks.optional(),where:ee}).strict(),jpe=e.object({select:ty.optional(),include:ey.optional(),where:P.optional(),orderBy:e.union([ta.array(),ta]).optional(),cursor:O.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([kb,kb.array()]).optional()}).strict(),Mpe=e.object({select:ty.optional(),include:ey.optional(),where:P.optional(),orderBy:e.union([ta.array(),ta]).optional(),cursor:O.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([kb,kb.array()]).optional()}).strict(),Nw=e.object({select:ty.optional(),include:ey.optional(),where:P.optional(),orderBy:e.union([ta.array(),ta]).optional(),cursor:O.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([kb,kb.array()]).optional()}).strict(),Ope=e.object({where:P.optional(),orderBy:e.union([ta.array(),ta]).optional(),cursor:O.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),wpe=e.object({where:P.optional(),orderBy:e.union([KF.array(),KF]).optional(),by:kb.array(),having:OI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Tpe=e.object({select:ty.optional(),include:ey.optional(),where:O}).strict(),Ppe=e.object({select:ty.optional(),include:ey.optional(),where:O}).strict(),Npe=e.object({select:ny.optional(),include:ay.optional(),where:ka.optional(),orderBy:e.union([gm.array(),gm]).optional(),cursor:At.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Rb,Rb.array()]).optional()}).strict(),Bpe=e.object({select:ny.optional(),include:ay.optional(),where:ka.optional(),orderBy:e.union([gm.array(),gm]).optional(),cursor:At.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Rb,Rb.array()]).optional()}).strict(),W9=e.object({select:ny.optional(),include:ay.optional(),where:ka.optional(),orderBy:e.union([gm.array(),gm]).optional(),cursor:At.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Rb,Rb.array()]).optional()}).strict(),_pe=e.object({where:ka.optional(),orderBy:e.union([gm.array(),gm]).optional(),cursor:At.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),qpe=e.object({where:ka.optional(),orderBy:e.union([XF.array(),XF]).optional(),by:Rb.array(),having:wI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Fpe=e.object({select:ny.optional(),include:ay.optional(),where:At}).strict(),Epe=e.object({select:ny.optional(),include:ay.optional(),where:At}).strict(),Dpe=e.object({select:iy.optional(),include:oy.optional(),where:Vt.optional(),orderBy:e.union([qd.array(),qd]).optional(),cursor:nt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([fb,fb.array()]).optional()}).strict(),xpe=e.object({select:iy.optional(),include:oy.optional(),where:Vt.optional(),orderBy:e.union([qd.array(),qd]).optional(),cursor:nt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([fb,fb.array()]).optional()}).strict(),U9=e.object({select:iy.optional(),include:oy.optional(),where:Vt.optional(),orderBy:e.union([qd.array(),qd]).optional(),cursor:nt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([fb,fb.array()]).optional()}).strict(),Vpe=e.object({where:Vt.optional(),orderBy:e.union([qd.array(),qd]).optional(),cursor:nt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Hpe=e.object({where:Vt.optional(),orderBy:e.union([eE.array(),eE]).optional(),by:fb.array(),having:TI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Lpe=e.object({select:iy.optional(),include:oy.optional(),where:nt}).strict(),Zpe=e.object({select:iy.optional(),include:oy.optional(),where:nt}).strict(),$pe=e.object({select:ly.optional(),include:ry.optional(),where:ie.optional(),orderBy:e.union([$a.array(),$a]).optional(),cursor:v.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([jb,jb.array()]).optional()}).strict(),Qpe=e.object({select:ly.optional(),include:ry.optional(),where:ie.optional(),orderBy:e.union([$a.array(),$a]).optional(),cursor:v.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([jb,jb.array()]).optional()}).strict(),ol=e.object({select:ly.optional(),include:ry.optional(),where:ie.optional(),orderBy:e.union([$a.array(),$a]).optional(),cursor:v.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([jb,jb.array()]).optional()}).strict(),Gpe=e.object({where:ie.optional(),orderBy:e.union([$a.array(),$a]).optional(),cursor:v.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ype=e.object({where:ie.optional(),orderBy:e.union([tE.array(),tE]).optional(),by:jb.array(),having:PI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Jpe=e.object({select:ly.optional(),include:ry.optional(),where:v}).strict(),Kpe=e.object({select:ly.optional(),include:ry.optional(),where:v}).strict(),Xpe=e.object({select:py.optional(),include:cy.optional(),where:Te.optional(),orderBy:e.union([qi.array(),qi]).optional(),cursor:Y.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Mb,Mb.array()]).optional()}).strict(),eue=e.object({select:py.optional(),include:cy.optional(),where:Te.optional(),orderBy:e.union([qi.array(),qi]).optional(),cursor:Y.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Mb,Mb.array()]).optional()}).strict(),Bw=e.object({select:py.optional(),include:cy.optional(),where:Te.optional(),orderBy:e.union([qi.array(),qi]).optional(),cursor:Y.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Mb,Mb.array()]).optional()}).strict(),tue=e.object({where:Te.optional(),orderBy:e.union([qi.array(),qi]).optional(),cursor:Y.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),aue=e.object({where:Te.optional(),orderBy:e.union([aE.array(),aE]).optional(),by:Mb.array(),having:NI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),nue=e.object({select:py.optional(),include:cy.optional(),where:Y}).strict(),oue=e.object({select:py.optional(),include:cy.optional(),where:Y}).strict(),iue=e.object({select:sy.optional(),include:uy.optional(),where:Ra.optional(),orderBy:e.union([Sm.array(),Sm]).optional(),cursor:Q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ob,Ob.array()]).optional()}).strict(),rue=e.object({select:sy.optional(),include:uy.optional(),where:Ra.optional(),orderBy:e.union([Sm.array(),Sm]).optional(),cursor:Q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ob,Ob.array()]).optional()}).strict(),$g=e.object({select:sy.optional(),include:uy.optional(),where:Ra.optional(),orderBy:e.union([Sm.array(),Sm]).optional(),cursor:Q.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Ob,Ob.array()]).optional()}).strict(),lue=e.object({where:Ra.optional(),orderBy:e.union([Sm.array(),Sm]).optional(),cursor:Q.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),cue=e.object({where:Ra.optional(),orderBy:e.union([nE.array(),nE]).optional(),by:Ob.array(),having:BI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),pue=e.object({select:sy.optional(),include:uy.optional(),where:Q}).strict(),uue=e.object({select:sy.optional(),include:uy.optional(),where:Q}).strict(),sue=e.object({select:dy.optional(),include:yy.optional(),where:fa.optional(),orderBy:e.union([vm.array(),vm]).optional(),cursor:ge.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([wb,wb.array()]).optional()}).strict(),yue=e.object({select:dy.optional(),include:yy.optional(),where:fa.optional(),orderBy:e.union([vm.array(),vm]).optional(),cursor:ge.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([wb,wb.array()]).optional()}).strict(),_w=e.object({select:dy.optional(),include:yy.optional(),where:fa.optional(),orderBy:e.union([vm.array(),vm]).optional(),cursor:ge.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([wb,wb.array()]).optional()}).strict(),due=e.object({where:fa.optional(),orderBy:e.union([vm.array(),vm]).optional(),cursor:ge.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),mue=e.object({where:fa.optional(),orderBy:e.union([oE.array(),oE]).optional(),by:wb.array(),having:_I.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),zue=e.object({select:dy.optional(),include:yy.optional(),where:ge}).strict(),hue=e.object({select:dy.optional(),include:yy.optional(),where:ge}).strict(),bue=e.object({select:zy.optional(),include:my.optional(),where:zt.optional(),orderBy:e.union([Dl.array(),Dl]).optional(),cursor:so.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Tb,Tb.array()]).optional()}).strict(),Iue=e.object({select:zy.optional(),include:my.optional(),where:zt.optional(),orderBy:e.union([Dl.array(),Dl]).optional(),cursor:so.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Tb,Tb.array()]).optional()}).strict(),gue=e.object({select:zy.optional(),include:my.optional(),where:zt.optional(),orderBy:e.union([Dl.array(),Dl]).optional(),cursor:so.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Tb,Tb.array()]).optional()}).strict(),Sue=e.object({where:zt.optional(),orderBy:e.union([Dl.array(),Dl]).optional(),cursor:so.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),vue=e.object({where:zt.optional(),orderBy:e.union([iE.array(),iE]).optional(),by:Tb.array(),having:qI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Aue=e.object({select:zy.optional(),include:my.optional(),where:so}).strict(),Cue=e.object({select:zy.optional(),include:my.optional(),where:so}).strict(),Wue=e.object({select:by.optional(),include:hy.optional(),where:Ht.optional(),orderBy:e.union([Fd.array(),Fd]).optional(),cursor:D.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Pb,Pb.array()]).optional()}).strict(),Uue=e.object({select:by.optional(),include:hy.optional(),where:Ht.optional(),orderBy:e.union([Fd.array(),Fd]).optional(),cursor:D.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Pb,Pb.array()]).optional()}).strict(),Qg=e.object({select:by.optional(),include:hy.optional(),where:Ht.optional(),orderBy:e.union([Fd.array(),Fd]).optional(),cursor:D.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Pb,Pb.array()]).optional()}).strict(),kue=e.object({where:Ht.optional(),orderBy:e.union([Fd.array(),Fd]).optional(),cursor:D.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Rue=e.object({where:Ht.optional(),orderBy:e.union([rE.array(),rE]).optional(),by:Pb.array(),having:FI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),fue=e.object({select:by.optional(),include:hy.optional(),where:D}).strict(),jue=e.object({select:by.optional(),include:hy.optional(),where:D}).strict(),Mue=e.object({select:gy.optional(),include:Iy.optional(),where:Lt.optional(),orderBy:e.union([Ed.array(),Ed]).optional(),cursor:ue.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Nb,Nb.array()]).optional()}).strict(),Oue=e.object({select:gy.optional(),include:Iy.optional(),where:Lt.optional(),orderBy:e.union([Ed.array(),Ed]).optional(),cursor:ue.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Nb,Nb.array()]).optional()}).strict(),qw=e.object({select:gy.optional(),include:Iy.optional(),where:Lt.optional(),orderBy:e.union([Ed.array(),Ed]).optional(),cursor:ue.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Nb,Nb.array()]).optional()}).strict(),wue=e.object({where:Lt.optional(),orderBy:e.union([Ed.array(),Ed]).optional(),cursor:ue.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Tue=e.object({where:Lt.optional(),orderBy:e.union([lE.array(),lE]).optional(),by:Nb.array(),having:EI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Pue=e.object({select:gy.optional(),include:Iy.optional(),where:ue}).strict(),Nue=e.object({select:gy.optional(),include:Iy.optional(),where:ue}).strict(),Bue=e.object({select:vy.optional(),include:Sy.optional(),where:ja.optional(),orderBy:e.union([Am.array(),Am]).optional(),cursor:Se.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Bb,Bb.array()]).optional()}).strict(),_ue=e.object({select:vy.optional(),include:Sy.optional(),where:ja.optional(),orderBy:e.union([Am.array(),Am]).optional(),cursor:Se.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Bb,Bb.array()]).optional()}).strict(),Fw=e.object({select:vy.optional(),include:Sy.optional(),where:ja.optional(),orderBy:e.union([Am.array(),Am]).optional(),cursor:Se.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Bb,Bb.array()]).optional()}).strict(),que=e.object({where:ja.optional(),orderBy:e.union([Am.array(),Am]).optional(),cursor:Se.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Fue=e.object({where:ja.optional(),orderBy:e.union([cE.array(),cE]).optional(),by:Bb.array(),having:DI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Eue=e.object({select:vy.optional(),include:Sy.optional(),where:Se}).strict(),Due=e.object({select:vy.optional(),include:Sy.optional(),where:Se}).strict(),xue=e.object({select:Cy.optional(),include:Ay.optional(),where:Mt.optional(),orderBy:e.union([xl.array(),xl]).optional(),cursor:Ke.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([_b,_b.array()]).optional()}).strict(),Vue=e.object({select:Cy.optional(),include:Ay.optional(),where:Mt.optional(),orderBy:e.union([xl.array(),xl]).optional(),cursor:Ke.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([_b,_b.array()]).optional()}).strict(),k9=e.object({select:Cy.optional(),include:Ay.optional(),where:Mt.optional(),orderBy:e.union([xl.array(),xl]).optional(),cursor:Ke.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([_b,_b.array()]).optional()}).strict(),Hue=e.object({where:Mt.optional(),orderBy:e.union([xl.array(),xl]).optional(),cursor:Ke.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Lue=e.object({where:Mt.optional(),orderBy:e.union([pE.array(),pE]).optional(),by:_b.array(),having:xI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Zue=e.object({select:Cy.optional(),include:Ay.optional(),where:Ke}).strict(),$ue=e.object({select:Cy.optional(),include:Ay.optional(),where:Ke}).strict(),Que=e.object({select:Uy.optional(),include:Wy.optional(),where:Zt.optional(),orderBy:e.union([Dd.array(),Dd]).optional(),cursor:ot.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([qb,qb.array()]).optional()}).strict(),Gue=e.object({select:Uy.optional(),include:Wy.optional(),where:Zt.optional(),orderBy:e.union([Dd.array(),Dd]).optional(),cursor:ot.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([qb,qb.array()]).optional()}).strict(),R9=e.object({select:Uy.optional(),include:Wy.optional(),where:Zt.optional(),orderBy:e.union([Dd.array(),Dd]).optional(),cursor:ot.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([qb,qb.array()]).optional()}).strict(),Yue=e.object({where:Zt.optional(),orderBy:e.union([Dd.array(),Dd]).optional(),cursor:ot.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Jue=e.object({where:Zt.optional(),orderBy:e.union([uE.array(),uE]).optional(),by:qb.array(),having:VI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Kue=e.object({select:Uy.optional(),include:Wy.optional(),where:ot}).strict(),Xue=e.object({select:Uy.optional(),include:Wy.optional(),where:ot}).strict(),ese=e.object({select:Ry.optional(),include:ky.optional(),where:$t.optional(),orderBy:e.union([xd.array(),xd]).optional(),cursor:it.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Fb,Fb.array()]).optional()}).strict(),tse=e.object({select:Ry.optional(),include:ky.optional(),where:$t.optional(),orderBy:e.union([xd.array(),xd]).optional(),cursor:it.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Fb,Fb.array()]).optional()}).strict(),f9=e.object({select:Ry.optional(),include:ky.optional(),where:$t.optional(),orderBy:e.union([xd.array(),xd]).optional(),cursor:it.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Fb,Fb.array()]).optional()}).strict(),ase=e.object({where:$t.optional(),orderBy:e.union([xd.array(),xd]).optional(),cursor:it.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),nse=e.object({where:$t.optional(),orderBy:e.union([sE.array(),sE]).optional(),by:Fb.array(),having:HI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),ose=e.object({select:Ry.optional(),include:ky.optional(),where:it}).strict(),ise=e.object({select:Ry.optional(),include:ky.optional(),where:it}).strict(),rse=e.object({select:jy.optional(),include:fy.optional(),where:Ma.optional(),orderBy:e.union([Cm.array(),Cm]).optional(),cursor:G.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Eb,Eb.array()]).optional()}).strict(),lse=e.object({select:jy.optional(),include:fy.optional(),where:Ma.optional(),orderBy:e.union([Cm.array(),Cm]).optional(),cursor:G.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Eb,Eb.array()]).optional()}).strict(),Gg=e.object({select:jy.optional(),include:fy.optional(),where:Ma.optional(),orderBy:e.union([Cm.array(),Cm]).optional(),cursor:G.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Eb,Eb.array()]).optional()}).strict(),cse=e.object({where:Ma.optional(),orderBy:e.union([Cm.array(),Cm]).optional(),cursor:G.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),pse=e.object({where:Ma.optional(),orderBy:e.union([yE.array(),yE]).optional(),by:Eb.array(),having:LI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),use=e.object({select:jy.optional(),include:fy.optional(),where:G}).strict(),sse=e.object({select:jy.optional(),include:fy.optional(),where:G}).strict(),yse=e.object({select:Oy.optional(),include:My.optional(),where:Oa.optional(),orderBy:e.union([Wm.array(),Wm]).optional(),cursor:Ct.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Db,Db.array()]).optional()}).strict(),dse=e.object({select:Oy.optional(),include:My.optional(),where:Oa.optional(),orderBy:e.union([Wm.array(),Wm]).optional(),cursor:Ct.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Db,Db.array()]).optional()}).strict(),j9=e.object({select:Oy.optional(),include:My.optional(),where:Oa.optional(),orderBy:e.union([Wm.array(),Wm]).optional(),cursor:Ct.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Db,Db.array()]).optional()}).strict(),mse=e.object({where:Oa.optional(),orderBy:e.union([Wm.array(),Wm]).optional(),cursor:Ct.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),zse=e.object({where:Oa.optional(),orderBy:e.union([dE.array(),dE]).optional(),by:Db.array(),having:ZI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),hse=e.object({select:Oy.optional(),include:My.optional(),where:Ct}).strict(),bse=e.object({select:Oy.optional(),include:My.optional(),where:Ct}).strict(),Ise=e.object({select:Ty.optional(),include:wy.optional(),where:Ot.optional(),orderBy:e.union([Vl.array(),Vl]).optional(),cursor:Xe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([xb,xb.array()]).optional()}).strict(),gse=e.object({select:Ty.optional(),include:wy.optional(),where:Ot.optional(),orderBy:e.union([Vl.array(),Vl]).optional(),cursor:Xe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([xb,xb.array()]).optional()}).strict(),M9=e.object({select:Ty.optional(),include:wy.optional(),where:Ot.optional(),orderBy:e.union([Vl.array(),Vl]).optional(),cursor:Xe.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([xb,xb.array()]).optional()}).strict(),Sse=e.object({where:Ot.optional(),orderBy:e.union([Vl.array(),Vl]).optional(),cursor:Xe.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),vse=e.object({where:Ot.optional(),orderBy:e.union([mE.array(),mE]).optional(),by:xb.array(),having:$I.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ase=e.object({select:Ty.optional(),include:wy.optional(),where:Xe}).strict(),Cse=e.object({select:Ty.optional(),include:wy.optional(),where:Xe}).strict(),Wse=e.object({select:Ny.optional(),include:Py.optional(),where:wa.optional(),orderBy:e.union([Um.array(),Um]).optional(),cursor:ve.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Vb,Vb.array()]).optional()}).strict(),Use=e.object({select:Ny.optional(),include:Py.optional(),where:wa.optional(),orderBy:e.union([Um.array(),Um]).optional(),cursor:ve.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Vb,Vb.array()]).optional()}).strict(),Ew=e.object({select:Ny.optional(),include:Py.optional(),where:wa.optional(),orderBy:e.union([Um.array(),Um]).optional(),cursor:ve.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Vb,Vb.array()]).optional()}).strict(),kse=e.object({where:wa.optional(),orderBy:e.union([Um.array(),Um]).optional(),cursor:ve.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Rse=e.object({where:wa.optional(),orderBy:e.union([zE.array(),zE]).optional(),by:Vb.array(),having:QI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),fse=e.object({select:Ny.optional(),include:Py.optional(),where:ve}).strict(),jse=e.object({select:Ny.optional(),include:Py.optional(),where:ve}).strict(),Mse=e.object({select:_y.optional(),include:By.optional(),where:Ae.optional(),orderBy:e.union([Fi.array(),Fi]).optional(),cursor:R.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Hb,Hb.array()]).optional()}).strict(),Ose=e.object({select:_y.optional(),include:By.optional(),where:Ae.optional(),orderBy:e.union([Fi.array(),Fi]).optional(),cursor:R.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Hb,Hb.array()]).optional()}).strict(),Hh=e.object({select:_y.optional(),include:By.optional(),where:Ae.optional(),orderBy:e.union([Fi.array(),Fi]).optional(),cursor:R.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Hb,Hb.array()]).optional()}).strict(),wse=e.object({where:Ae.optional(),orderBy:e.union([Fi.array(),Fi]).optional(),cursor:R.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Tse=e.object({where:Ae.optional(),orderBy:e.union([hE.array(),hE]).optional(),by:Hb.array(),having:GI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Pse=e.object({select:_y.optional(),include:By.optional(),where:R}).strict(),Nse=e.object({select:_y.optional(),include:By.optional(),where:R}).strict(),Bse=e.object({select:Fy.optional(),include:qy.optional(),where:Ft.optional(),orderBy:e.union([Vd.array(),Vd]).optional(),cursor:xi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Lb,Lb.array()]).optional()}).strict(),_se=e.object({select:Fy.optional(),include:qy.optional(),where:Ft.optional(),orderBy:e.union([Vd.array(),Vd]).optional(),cursor:xi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Lb,Lb.array()]).optional()}).strict(),qse=e.object({select:Fy.optional(),include:qy.optional(),where:Ft.optional(),orderBy:e.union([Vd.array(),Vd]).optional(),cursor:xi.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Lb,Lb.array()]).optional()}).strict(),Fse=e.object({where:Ft.optional(),orderBy:e.union([Vd.array(),Vd]).optional(),cursor:xi.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Ese=e.object({where:Ft.optional(),orderBy:e.union([bE.array(),bE]).optional(),by:Lb.array(),having:YI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Dse=e.object({select:Fy.optional(),include:qy.optional(),where:xi}).strict(),xse=e.object({select:Fy.optional(),include:qy.optional(),where:xi}).strict(),Vse=e.object({select:Dy.optional(),include:Ey.optional(),where:Ta.optional(),orderBy:e.union([km.array(),km]).optional(),cursor:Wt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Zb,Zb.array()]).optional()}).strict(),Hse=e.object({select:Dy.optional(),include:Ey.optional(),where:Ta.optional(),orderBy:e.union([km.array(),km]).optional(),cursor:Wt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Zb,Zb.array()]).optional()}).strict(),O9=e.object({select:Dy.optional(),include:Ey.optional(),where:Ta.optional(),orderBy:e.union([km.array(),km]).optional(),cursor:Wt.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([Zb,Zb.array()]).optional()}).strict(),Lse=e.object({where:Ta.optional(),orderBy:e.union([km.array(),km]).optional(),cursor:Wt.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Zse=e.object({where:Ta.optional(),orderBy:e.union([IE.array(),IE]).optional(),by:Zb.array(),having:JI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),$se=e.object({select:Dy.optional(),include:Ey.optional(),where:Wt}).strict(),Qse=e.object({select:Dy.optional(),include:Ey.optional(),where:Wt}).strict(),Gse=e.object({select:Vy.optional(),include:xy.optional(),where:Pa.optional(),orderBy:e.union([Rm.array(),Rm]).optional(),cursor:Ut.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([$b,$b.array()]).optional()}).strict(),Yse=e.object({select:Vy.optional(),include:xy.optional(),where:Pa.optional(),orderBy:e.union([Rm.array(),Rm]).optional(),cursor:Ut.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([$b,$b.array()]).optional()}).strict(),w9=e.object({select:Vy.optional(),include:xy.optional(),where:Pa.optional(),orderBy:e.union([Rm.array(),Rm]).optional(),cursor:Ut.optional(),take:e.number().optional(),skip:e.number().optional(),distinct:e.union([$b,$b.array()]).optional()}).strict(),Jse=e.object({where:Pa.optional(),orderBy:e.union([Rm.array(),Rm]).optional(),cursor:Ut.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Kse=e.object({where:Pa.optional(),orderBy:e.union([gE.array(),gE]).optional(),by:$b.array(),having:KI.optional(),take:e.number().optional(),skip:e.number().optional()}).strict(),Xse=e.object({select:Vy.optional(),include:xy.optional(),where:Ut}).strict(),eye=e.object({select:Vy.optional(),include:xy.optional(),where:Ut}).strict(),tye=e.object({select:ts.optional(),include:es.optional(),data:e.union([Dx,xx])}).strict(),aye=e.object({select:ts.optional(),include:es.optional(),where:me,create:e.union([Dx,xx]),update:e.union([Vx,Hx])}).strict(),nye=e.object({data:e.union([av,av.array()]),skipDuplicates:e.boolean().optional()}).strict(),oye=e.object({data:e.union([av,av.array()]),skipDuplicates:e.boolean().optional()}).strict(),iye=e.object({select:ts.optional(),include:es.optional(),where:me}).strict(),rye=e.object({select:ts.optional(),include:es.optional(),data:e.union([Vx,Hx]),where:me}).strict(),lye=e.object({data:e.union([RT,B5]),where:ua.optional()}).strict(),cye=e.object({where:ua.optional()}).strict(),pye=e.object({select:ns.optional(),include:as.optional(),data:e.union([Lx,Zx])}).strict(),uye=e.object({select:ns.optional(),include:as.optional(),where:tt,create:e.union([Lx,Zx]),update:e.union([$x,Qx])}).strict(),sye=e.object({data:e.union([nv,nv.array()]),skipDuplicates:e.boolean().optional()}).strict(),yye=e.object({data:e.union([nv,nv.array()]),skipDuplicates:e.boolean().optional()}).strict(),dye=e.object({select:ns.optional(),include:as.optional(),where:tt}).strict(),mye=e.object({select:ns.optional(),include:as.optional(),data:e.union([$x,Qx]),where:tt}).strict(),zye=e.object({data:e.union([Gx,_5]),where:Tt.optional()}).strict(),hye=e.object({where:Tt.optional()}).strict(),bye=e.object({select:is.optional(),include:os.optional(),data:e.union([Yx,Jx])}).strict(),Iye=e.object({select:is.optional(),include:os.optional(),where:q,create:e.union([Yx,Jx]),update:e.union([Kx,Xx])}).strict(),gye=e.object({data:e.union([ov,ov.array()]),skipDuplicates:e.boolean().optional()}).strict(),Sye=e.object({data:e.union([ov,ov.array()]),skipDuplicates:e.boolean().optional()}).strict(),vye=e.object({select:is.optional(),include:os.optional(),where:q}).strict(),Aye=e.object({select:is.optional(),include:os.optional(),data:e.union([Kx,Xx]),where:q}).strict(),Cye=e.object({data:e.union([WR,q5]),where:st.optional()}).strict(),Wye=e.object({where:st.optional()}).strict(),Uye=e.object({select:ls.optional(),include:rs.optional(),data:e.union([eV,tV])}).strict(),kye=e.object({select:ls.optional(),include:rs.optional(),where:Ye,create:e.union([eV,tV]),update:e.union([aV,nV])}).strict(),Rye=e.object({data:e.union([iv,iv.array()]),skipDuplicates:e.boolean().optional()}).strict(),fye=e.object({data:e.union([iv,iv.array()]),skipDuplicates:e.boolean().optional()}).strict(),jye=e.object({select:ls.optional(),include:rs.optional(),where:Ye}).strict(),Mye=e.object({select:ls.optional(),include:rs.optional(),data:e.union([aV,nV]),where:Ye}).strict(),Oye=e.object({data:e.union([oV,F5]),where:ft.optional()}).strict(),wye=e.object({where:ft.optional()}).strict(),Tye=e.object({select:ps.optional(),include:cs.optional(),data:e.union([iV,rV])}).strict(),Pye=e.object({select:ps.optional(),include:cs.optional(),where:ze,create:e.union([iV,rV]),update:e.union([lV,cV])}).strict(),Nye=e.object({data:e.union([rv,rv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Bye=e.object({data:e.union([rv,rv.array()]),skipDuplicates:e.boolean().optional()}).strict(),_ye=e.object({select:ps.optional(),include:cs.optional(),where:ze}).strict(),qye=e.object({select:ps.optional(),include:cs.optional(),data:e.union([lV,cV]),where:ze}).strict(),Fye=e.object({data:e.union([fT,E5]),where:sa.optional()}).strict(),Eye=e.object({where:sa.optional()}).strict(),Dye=e.object({select:ss.optional(),include:us.optional(),data:e.union([pV,uV])}).strict(),xye=e.object({select:ss.optional(),include:us.optional(),where:ht,create:e.union([pV,uV]),update:e.union([sV,yV])}).strict(),Vye=e.object({data:e.union([lv,lv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Hye=e.object({data:e.union([lv,lv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Lye=e.object({select:ss.optional(),include:us.optional(),where:ht}).strict(),Zye=e.object({select:ss.optional(),include:us.optional(),data:e.union([sV,yV]),where:ht}).strict(),$ye=e.object({data:e.union([dV,D5]),where:ya.optional()}).strict(),Qye=e.object({where:ya.optional()}).strict(),Gye=e.object({select:ds.optional(),include:ys.optional(),data:e.union([mV,zV])}).strict(),Yye=e.object({select:ds.optional(),include:ys.optional(),where:Je,create:e.union([mV,zV]),update:e.union([hV,bV])}).strict(),Jye=e.object({data:e.union([cv,cv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Kye=e.object({data:e.union([cv,cv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Xye=e.object({select:ds.optional(),include:ys.optional(),where:Je}).strict(),ede=e.object({select:ds.optional(),include:ys.optional(),data:e.union([hV,bV]),where:Je}).strict(),tde=e.object({data:e.union([IV,x5]),where:jt.optional()}).strict(),ade=e.object({where:jt.optional()}).strict(),nde=e.object({select:zs.optional(),include:ms.optional(),data:e.union([gV,SV])}).strict(),ode=e.object({select:zs.optional(),include:ms.optional(),where:at,create:e.union([gV,SV]),update:e.union([vV,AV])}).strict(),ide=e.object({data:e.union([pv,pv.array()]),skipDuplicates:e.boolean().optional()}).strict(),rde=e.object({data:e.union([pv,pv.array()]),skipDuplicates:e.boolean().optional()}).strict(),lde=e.object({select:zs.optional(),include:ms.optional(),where:at}).strict(),cde=e.object({select:zs.optional(),include:ms.optional(),data:e.union([vV,AV]),where:at}).strict(),pde=e.object({data:e.union([CV,V5]),where:Et.optional()}).strict(),ude=e.object({where:Et.optional()}).strict(),sde=e.object({select:bs.optional(),include:hs.optional(),data:e.union([WV,UV])}).strict(),yde=e.object({select:bs.optional(),include:hs.optional(),where:le,create:e.union([WV,UV]),update:e.union([kV,RV])}).strict(),dde=e.object({data:e.union([uv,uv.array()]),skipDuplicates:e.boolean().optional()}).strict(),mde=e.object({data:e.union([uv,uv.array()]),skipDuplicates:e.boolean().optional()}).strict(),zde=e.object({select:bs.optional(),include:hs.optional(),where:le}).strict(),hde=e.object({select:bs.optional(),include:hs.optional(),data:e.union([kV,RV]),where:le}).strict(),bde=e.object({data:e.union([jT,H5]),where:Dt.optional()}).strict(),Ide=e.object({where:Dt.optional()}).strict(),gde=e.object({select:gs.optional(),include:Is.optional(),data:e.union([fV,jV])}).strict(),Sde=e.object({select:gs.optional(),include:Is.optional(),where:he,create:e.union([fV,jV]),update:e.union([MV,OV])}).strict(),vde=e.object({data:e.union([sv,sv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Ade=e.object({data:e.union([sv,sv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Cde=e.object({select:gs.optional(),include:Is.optional(),where:he}).strict(),Wde=e.object({select:gs.optional(),include:Is.optional(),data:e.union([MV,OV]),where:he}).strict(),Ude=e.object({data:e.union([MT,L5]),where:da.optional()}).strict(),kde=e.object({where:da.optional()}).strict(),Rde=e.object({select:vs.optional(),include:Ss.optional(),data:e.union([wV,TV])}).strict(),fde=e.object({select:vs.optional(),include:Ss.optional(),where:be,create:e.union([wV,TV]),update:e.union([PV,NV])}).strict(),jde=e.object({data:e.union([yv,yv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Mde=e.object({data:e.union([yv,yv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Ode=e.object({select:vs.optional(),include:Ss.optional(),where:be}).strict(),wde=e.object({select:vs.optional(),include:Ss.optional(),data:e.union([PV,NV]),where:be}).strict(),Tde=e.object({data:e.union([OT,Z5]),where:ma.optional()}).strict(),Pde=e.object({where:ma.optional()}).strict(),Nde=e.object({select:Cs.optional(),include:As.optional(),data:e.union([BV,_V])}).strict(),Bde=e.object({select:Cs.optional(),include:As.optional(),where:V,create:e.union([BV,_V]),update:e.union([qV,FV])}).strict(),_de=e.object({data:e.union([dv,dv.array()]),skipDuplicates:e.boolean().optional()}).strict(),qde=e.object({data:e.union([dv,dv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Fde=e.object({select:Cs.optional(),include:As.optional(),where:V}).strict(),Ede=e.object({select:Cs.optional(),include:As.optional(),data:e.union([qV,FV]),where:V}).strict(),Dde=e.object({data:e.union([UR,$5]),where:za.optional()}).strict(),xde=e.object({where:za.optional()}).strict(),Vde=e.object({select:Us.optional(),include:Ws.optional(),data:e.union([EV,DV])}).strict(),Hde=e.object({select:Us.optional(),include:Ws.optional(),where:ce,create:e.union([EV,DV]),update:e.union([xV,VV])}).strict(),Lde=e.object({data:e.union([mv,mv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Zde=e.object({data:e.union([mv,mv.array()]),skipDuplicates:e.boolean().optional()}).strict(),$de=e.object({select:Us.optional(),include:Ws.optional(),where:ce}).strict(),Qde=e.object({select:Us.optional(),include:Ws.optional(),data:e.union([xV,VV]),where:ce}).strict(),Gde=e.object({data:e.union([wT,Q5]),where:Pt.optional()}).strict(),Yde=e.object({where:Pt.optional()}).strict(),Jde=e.object({select:Rs.optional(),include:ks.optional(),data:e.union([HV,LV])}).strict(),Kde=e.object({select:Rs.optional(),include:ks.optional(),where:bt,create:e.union([HV,LV]),update:e.union([ZV,$V])}).strict(),Xde=e.object({data:e.union([zv,zv.array()]),skipDuplicates:e.boolean().optional()}).strict(),eme=e.object({data:e.union([zv,zv.array()]),skipDuplicates:e.boolean().optional()}).strict(),tme=e.object({select:Rs.optional(),include:ks.optional(),where:bt}).strict(),ame=e.object({select:Rs.optional(),include:ks.optional(),data:e.union([ZV,$V]),where:bt}).strict(),nme=e.object({data:e.union([QV,G5]),where:ha.optional()}).strict(),ome=e.object({where:ha.optional()}).strict(),ime=e.object({select:js.optional(),include:fs.optional(),data:e.union([GV,YV])}).strict(),rme=e.object({select:js.optional(),include:fs.optional(),where:H,create:e.union([GV,YV]),update:e.union([JV,KV])}).strict(),lme=e.object({data:e.union([hv,hv.array()]),skipDuplicates:e.boolean().optional()}).strict(),cme=e.object({data:e.union([hv,hv.array()]),skipDuplicates:e.boolean().optional()}).strict(),pme=e.object({select:js.optional(),include:fs.optional(),where:H}).strict(),ume=e.object({select:js.optional(),include:fs.optional(),data:e.union([JV,KV]),where:H}).strict(),sme=e.object({data:e.union([kR,Y5]),where:ba.optional()}).strict(),yme=e.object({where:ba.optional()}).strict(),dme=e.object({select:Os.optional(),include:Ms.optional(),data:e.union([XV,e0])}).strict(),mme=e.object({select:Os.optional(),include:Ms.optional(),where:L,create:e.union([XV,e0]),update:e.union([t0,a0])}).strict(),zme=e.object({data:e.union([bv,bv.array()]),skipDuplicates:e.boolean().optional()}).strict(),hme=e.object({data:e.union([bv,bv.array()]),skipDuplicates:e.boolean().optional()}).strict(),bme=e.object({select:Os.optional(),include:Ms.optional(),where:L}).strict(),Ime=e.object({select:Os.optional(),include:Ms.optional(),data:e.union([t0,a0]),where:L}).strict(),gme=e.object({data:e.union([RR,J5]),where:Ia.optional()}).strict(),Sme=e.object({where:Ia.optional()}).strict(),vme=e.object({select:Ts.optional(),include:ws.optional(),data:e.union([n0,o0])}).strict(),Ame=e.object({select:Ts.optional(),include:ws.optional(),where:pe,create:e.union([n0,o0]),update:e.union([i0,r0])}).strict(),Cme=e.object({data:e.union([Iv,Iv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Wme=e.object({data:e.union([Iv,Iv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Ume=e.object({select:Ts.optional(),include:ws.optional(),where:pe}).strict(),kme=e.object({select:Ts.optional(),include:ws.optional(),data:e.union([i0,r0]),where:pe}).strict(),Rme=e.object({data:e.union([TT,K5]),where:xt.optional()}).strict(),fme=e.object({where:xt.optional()}).strict(),jme=e.object({select:Ns.optional(),include:Ps.optional(),data:e.union([l0,c0])}).strict(),Mme=e.object({select:Ns.optional(),include:Ps.optional(),where:Z,create:e.union([l0,c0]),update:e.union([p0,u0])}).strict(),Ome=e.object({data:e.union([gv,gv.array()]),skipDuplicates:e.boolean().optional()}).strict(),wme=e.object({data:e.union([gv,gv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Tme=e.object({select:Ns.optional(),include:Ps.optional(),where:Z}).strict(),Pme=e.object({select:Ns.optional(),include:Ps.optional(),data:e.union([p0,u0]),where:Z}).strict(),Nme=e.object({data:e.union([fR,X5]),where:ga.optional()}).strict(),Bme=e.object({where:ga.optional()}).strict(),_me=e.object({select:_s.optional(),include:Bs.optional(),data:e.union([s0,y0])}).strict(),qme=e.object({select:_s.optional(),include:Bs.optional(),where:It,create:e.union([s0,y0]),update:e.union([d0,m0])}).strict(),Fme=e.object({data:e.union([Sv,Sv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Eme=e.object({data:e.union([Sv,Sv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Dme=e.object({select:_s.optional(),include:Bs.optional(),where:It}).strict(),xme=e.object({select:_s.optional(),include:Bs.optional(),data:e.union([d0,m0]),where:It}).strict(),Vme=e.object({data:e.union([z0,e6]),where:Sa.optional()}).strict(),Hme=e.object({where:Sa.optional()}).strict(),Lme=e.object({select:Fs.optional(),include:qs.optional(),data:e.union([h0,b0])}).strict(),Zme=e.object({select:Fs.optional(),include:qs.optional(),where:gt,create:e.union([h0,b0]),update:e.union([I0,g0])}).strict(),$me=e.object({data:e.union([vv,vv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Qme=e.object({data:e.union([vv,vv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Gme=e.object({select:Fs.optional(),include:qs.optional(),where:gt}).strict(),Yme=e.object({select:Fs.optional(),include:qs.optional(),data:e.union([I0,g0]),where:gt}).strict(),Jme=e.object({data:e.union([S0,t6]),where:va.optional()}).strict(),Kme=e.object({where:va.optional()}).strict(),Xme=e.object({select:Ds.optional(),include:Es.optional(),data:e.union([v0,A0])}).strict(),eze=e.object({select:Ds.optional(),include:Es.optional(),where:St,create:e.union([v0,A0]),update:e.union([C0,W0])}).strict(),tze=e.object({data:e.union([Av,Av.array()]),skipDuplicates:e.boolean().optional()}).strict(),aze=e.object({data:e.union([Av,Av.array()]),skipDuplicates:e.boolean().optional()}).strict(),nze=e.object({select:Ds.optional(),include:Es.optional(),where:St}).strict(),oze=e.object({select:Ds.optional(),include:Es.optional(),data:e.union([C0,W0]),where:St}).strict(),ize=e.object({data:e.union([U0,a6]),where:Aa.optional()}).strict(),rze=e.object({where:Aa.optional()}).strict(),lze=e.object({select:Vs.optional(),include:xs.optional(),data:e.union([k0,R0])}).strict(),cze=e.object({select:Vs.optional(),include:xs.optional(),where:$,create:e.union([k0,R0]),update:e.union([f0,j0])}).strict(),pze=e.object({data:e.union([Cv,Cv.array()]),skipDuplicates:e.boolean().optional()}).strict(),uze=e.object({data:e.union([Cv,Cv.array()]),skipDuplicates:e.boolean().optional()}).strict(),sze=e.object({select:Vs.optional(),include:xs.optional(),where:$}).strict(),yze=e.object({select:Vs.optional(),include:xs.optional(),data:e.union([f0,j0]),where:$}).strict(),dze=e.object({data:e.union([jR,n6]),where:Ca.optional()}).strict(),mze=e.object({where:Ca.optional()}).strict(),zze=e.object({select:Ls.optional(),include:Hs.optional(),data:e.union([M0,O0])}).strict(),hze=e.object({select:Ls.optional(),include:Hs.optional(),where:Xr,create:e.union([M0,O0]),update:e.union([w0,T0])}).strict(),bze=e.object({data:e.union([Wv,Wv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Ize=e.object({data:e.union([Wv,Wv.array()]),skipDuplicates:e.boolean().optional()}).strict(),gze=e.object({select:Ls.optional(),include:Hs.optional(),where:Xr}).strict(),Sze=e.object({select:Ls.optional(),include:Hs.optional(),data:e.union([w0,T0]),where:Xr}).strict(),vze=e.object({data:e.union([o6,i6]),where:na.optional()}).strict(),Aze=e.object({where:na.optional()}).strict(),Cze=e.object({select:$s.optional(),include:Zs.optional(),data:e.union([P0,N0])}).strict(),Wze=e.object({select:$s.optional(),include:Zs.optional(),where:Ie,create:e.union([P0,N0]),update:e.union([B0,_0])}).strict(),Uze=e.object({data:e.union([Uv,Uv.array()]),skipDuplicates:e.boolean().optional()}).strict(),kze=e.object({data:e.union([Uv,Uv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Rze=e.object({select:$s.optional(),include:Zs.optional(),where:Ie}).strict(),fze=e.object({select:$s.optional(),include:Zs.optional(),data:e.union([B0,_0]),where:Ie}).strict(),jze=e.object({data:e.union([PT,r6]),where:Wa.optional()}).strict(),Mze=e.object({where:Wa.optional()}).strict(),Oze=e.object({select:Gs.optional(),include:Qs.optional(),data:e.union([q0,F0])}).strict(),wze=e.object({select:Gs.optional(),include:Qs.optional(),where:vt,create:e.union([q0,F0]),update:e.union([E0,D0])}).strict(),Tze=e.object({data:e.union([kv,kv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Pze=e.object({data:e.union([kv,kv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Nze=e.object({select:Gs.optional(),include:Qs.optional(),where:vt}).strict(),Bze=e.object({select:Gs.optional(),include:Qs.optional(),data:e.union([E0,D0]),where:vt}).strict(),_ze=e.object({data:e.union([x0,l6]),where:Ua.optional()}).strict(),qze=e.object({where:Ua.optional()}).strict(),Fze=e.object({select:Zd.optional(),data:e.union([V0,H0])}).strict(),Eze=e.object({select:Zd.optional(),where:$d,create:e.union([V0,H0]),update:e.union([L0,Z0])}).strict(),Dze=e.object({data:e.union([Rv,Rv.array()]),skipDuplicates:e.boolean().optional()}).strict(),xze=e.object({data:e.union([Rv,Rv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Vze=e.object({select:Zd.optional(),where:$d}).strict(),Hze=e.object({select:Zd.optional(),data:e.union([L0,Z0]),where:$d}).strict(),Lze=e.object({data:e.union([c6,p6]),where:uo.optional()}).strict(),Zze=e.object({where:uo.optional()}).strict(),$ze=e.object({select:Js.optional(),include:Ys.optional(),data:e.union([$0,Q0])}).strict(),Qze=e.object({select:Js.optional(),include:Ys.optional(),where:Bi,create:e.union([$0,Q0]),update:e.union([G0,Y0])}).strict(),Gze=e.object({data:e.union([fv,fv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Yze=e.object({data:e.union([fv,fv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Jze=e.object({select:Js.optional(),include:Ys.optional(),where:Bi}).strict(),Kze=e.object({select:Js.optional(),include:Ys.optional(),data:e.union([G0,Y0]),where:Bi}).strict(),Xze=e.object({data:e.union([u6,s6]),where:Rt.optional()}).strict(),ehe=e.object({where:Rt.optional()}).strict(),the=e.object({select:Xs.optional(),include:Ks.optional(),data:e.union([J0,K0])}).strict(),ahe=e.object({select:Xs.optional(),include:Ks.optional(),where:ee,create:e.union([J0,K0]),update:e.union([X0,eH])}).strict(),nhe=e.object({data:e.union([jv,jv.array()]),skipDuplicates:e.boolean().optional()}).strict(),ohe=e.object({data:e.union([jv,jv.array()]),skipDuplicates:e.boolean().optional()}).strict(),ihe=e.object({select:Xs.optional(),include:Ks.optional(),where:ee}).strict(),rhe=e.object({select:Xs.optional(),include:Ks.optional(),data:e.union([X0,eH]),where:ee}).strict(),lhe=e.object({data:e.union([tH,y6]),where:x.optional()}).strict(),che=e.object({where:x.optional()}).strict(),phe=e.object({select:ty.optional(),include:ey.optional(),data:e.union([aH,nH])}).strict(),uhe=e.object({select:ty.optional(),include:ey.optional(),where:O,create:e.union([aH,nH]),update:e.union([oH,iH])}).strict(),she=e.object({data:e.union([Mv,Mv.array()]),skipDuplicates:e.boolean().optional()}).strict(),yhe=e.object({data:e.union([Mv,Mv.array()]),skipDuplicates:e.boolean().optional()}).strict(),dhe=e.object({select:ty.optional(),include:ey.optional(),where:O}).strict(),mhe=e.object({select:ty.optional(),include:ey.optional(),data:e.union([oH,iH]),where:O}).strict(),zhe=e.object({data:e.union([NT,d6]),where:P.optional()}).strict(),hhe=e.object({where:P.optional()}).strict(),bhe=e.object({select:ny.optional(),include:ay.optional(),data:e.union([rH,lH])}).strict(),Ihe=e.object({select:ny.optional(),include:ay.optional(),where:At,create:e.union([rH,lH]),update:e.union([cH,pH])}).strict(),ghe=e.object({data:e.union([Ov,Ov.array()]),skipDuplicates:e.boolean().optional()}).strict(),She=e.object({data:e.union([Ov,Ov.array()]),skipDuplicates:e.boolean().optional()}).strict(),vhe=e.object({select:ny.optional(),include:ay.optional(),where:At}).strict(),Ahe=e.object({select:ny.optional(),include:ay.optional(),data:e.union([cH,pH]),where:At}).strict(),Che=e.object({data:e.union([uH,m6]),where:ka.optional()}).strict(),Whe=e.object({where:ka.optional()}).strict(),Uhe=e.object({select:iy.optional(),include:oy.optional(),data:e.union([sH,yH])}).strict(),khe=e.object({select:iy.optional(),include:oy.optional(),where:nt,create:e.union([sH,yH]),update:e.union([dH,mH])}).strict(),Rhe=e.object({data:e.union([wv,wv.array()]),skipDuplicates:e.boolean().optional()}).strict(),fhe=e.object({data:e.union([wv,wv.array()]),skipDuplicates:e.boolean().optional()}).strict(),jhe=e.object({select:iy.optional(),include:oy.optional(),where:nt}).strict(),Mhe=e.object({select:iy.optional(),include:oy.optional(),data:e.union([dH,mH]),where:nt}).strict(),Ohe=e.object({data:e.union([zH,z6]),where:Vt.optional()}).strict(),whe=e.object({where:Vt.optional()}).strict(),The=e.object({select:ly.optional(),include:ry.optional(),data:e.union([hH,bH])}).strict(),Phe=e.object({select:ly.optional(),include:ry.optional(),where:v,create:e.union([hH,bH]),update:e.union([IH,gH])}).strict(),Nhe=e.object({data:e.union([Tv,Tv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Bhe=e.object({data:e.union([Tv,Tv.array()]),skipDuplicates:e.boolean().optional()}).strict(),_he=e.object({select:ly.optional(),include:ry.optional(),where:v}).strict(),qhe=e.object({select:ly.optional(),include:ry.optional(),data:e.union([IH,gH]),where:v}).strict(),Fhe=e.object({data:e.union([Kb,h6]),where:ie.optional()}).strict(),Ehe=e.object({where:ie.optional()}).strict(),Dhe=e.object({select:py.optional(),include:cy.optional(),data:e.union([SH,vH])}).strict(),xhe=e.object({select:py.optional(),include:cy.optional(),where:Y,create:e.union([SH,vH]),update:e.union([AH,CH])}).strict(),Vhe=e.object({data:e.union([Pv,Pv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Hhe=e.object({data:e.union([Pv,Pv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Lhe=e.object({select:py.optional(),include:cy.optional(),where:Y}).strict(),Zhe=e.object({select:py.optional(),include:cy.optional(),data:e.union([AH,CH]),where:Y}).strict(),$he=e.object({data:e.union([BT,b6]),where:Te.optional()}).strict(),Qhe=e.object({where:Te.optional()}).strict(),Ghe=e.object({select:sy.optional(),include:uy.optional(),data:e.union([WH,UH])}).strict(),Yhe=e.object({select:sy.optional(),include:uy.optional(),where:Q,create:e.union([WH,UH]),update:e.union([kH,RH])}).strict(),Jhe=e.object({data:e.union([Nv,Nv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Khe=e.object({data:e.union([Nv,Nv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Xhe=e.object({select:sy.optional(),include:uy.optional(),where:Q}).strict(),ebe=e.object({select:sy.optional(),include:uy.optional(),data:e.union([kH,RH]),where:Q}).strict(),tbe=e.object({data:e.union([MR,I6]),where:Ra.optional()}).strict(),abe=e.object({where:Ra.optional()}).strict(),nbe=e.object({select:dy.optional(),include:yy.optional(),data:e.union([fH,jH])}).strict(),obe=e.object({select:dy.optional(),include:yy.optional(),where:ge,create:e.union([fH,jH]),update:e.union([MH,OH])}).strict(),ibe=e.object({data:e.union([Bv,Bv.array()]),skipDuplicates:e.boolean().optional()}).strict(),rbe=e.object({data:e.union([Bv,Bv.array()]),skipDuplicates:e.boolean().optional()}).strict(),lbe=e.object({select:dy.optional(),include:yy.optional(),where:ge}).strict(),cbe=e.object({select:dy.optional(),include:yy.optional(),data:e.union([MH,OH]),where:ge}).strict(),pbe=e.object({data:e.union([_T,g6]),where:fa.optional()}).strict(),ube=e.object({where:fa.optional()}).strict(),sbe=e.object({select:zy.optional(),include:my.optional(),data:e.union([wH,TH])}).strict(),ybe=e.object({select:zy.optional(),include:my.optional(),where:so,create:e.union([wH,TH]),update:e.union([PH,NH])}).strict(),dbe=e.object({data:e.union([_v,_v.array()]),skipDuplicates:e.boolean().optional()}).strict(),mbe=e.object({data:e.union([_v,_v.array()]),skipDuplicates:e.boolean().optional()}).strict(),zbe=e.object({select:zy.optional(),include:my.optional(),where:so}).strict(),hbe=e.object({select:zy.optional(),include:my.optional(),data:e.union([PH,NH]),where:so}).strict(),bbe=e.object({data:e.union([S6,v6]),where:zt.optional()}).strict(),Ibe=e.object({where:zt.optional()}).strict(),gbe=e.object({select:by.optional(),include:hy.optional(),data:e.union([BH,_H])}).strict(),Sbe=e.object({select:by.optional(),include:hy.optional(),where:D,create:e.union([BH,_H]),update:e.union([qH,FH])}).strict(),vbe=e.object({data:e.union([qv,qv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Abe=e.object({data:e.union([qv,qv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Cbe=e.object({select:by.optional(),include:hy.optional(),where:D}).strict(),Wbe=e.object({select:by.optional(),include:hy.optional(),data:e.union([qH,FH]),where:D}).strict(),Ube=e.object({data:e.union([OR,A6]),where:Ht.optional()}).strict(),kbe=e.object({where:Ht.optional()}).strict(),Rbe=e.object({select:gy.optional(),include:Iy.optional(),data:e.union([EH,DH])}).strict(),fbe=e.object({select:gy.optional(),include:Iy.optional(),where:ue,create:e.union([EH,DH]),update:e.union([xH,VH])}).strict(),jbe=e.object({data:e.union([Fv,Fv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Mbe=e.object({data:e.union([Fv,Fv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Obe=e.object({select:gy.optional(),include:Iy.optional(),where:ue}).strict(),wbe=e.object({select:gy.optional(),include:Iy.optional(),data:e.union([xH,VH]),where:ue}).strict(),Tbe=e.object({data:e.union([qT,C6]),where:Lt.optional()}).strict(),Pbe=e.object({where:Lt.optional()}).strict(),Nbe=e.object({select:vy.optional(),include:Sy.optional(),data:e.union([HH,LH])}).strict(),Bbe=e.object({select:vy.optional(),include:Sy.optional(),where:Se,create:e.union([HH,LH]),update:e.union([ZH,$H])}).strict(),_be=e.object({data:e.union([Ev,Ev.array()]),skipDuplicates:e.boolean().optional()}).strict(),qbe=e.object({data:e.union([Ev,Ev.array()]),skipDuplicates:e.boolean().optional()}).strict(),Fbe=e.object({select:vy.optional(),include:Sy.optional(),where:Se}).strict(),Ebe=e.object({select:vy.optional(),include:Sy.optional(),data:e.union([ZH,$H]),where:Se}).strict(),Dbe=e.object({data:e.union([FT,W6]),where:ja.optional()}).strict(),xbe=e.object({where:ja.optional()}).strict(),Vbe=e.object({select:Cy.optional(),include:Ay.optional(),data:e.union([QH,GH])}).strict(),Hbe=e.object({select:Cy.optional(),include:Ay.optional(),where:Ke,create:e.union([QH,GH]),update:e.union([YH,JH])}).strict(),Lbe=e.object({data:e.union([Dv,Dv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Zbe=e.object({data:e.union([Dv,Dv.array()]),skipDuplicates:e.boolean().optional()}).strict(),$be=e.object({select:Cy.optional(),include:Ay.optional(),where:Ke}).strict(),Qbe=e.object({select:Cy.optional(),include:Ay.optional(),data:e.union([YH,JH]),where:Ke}).strict(),Gbe=e.object({data:e.union([KH,U6]),where:Mt.optional()}).strict(),Ybe=e.object({where:Mt.optional()}).strict(),Jbe=e.object({select:Uy.optional(),include:Wy.optional(),data:e.union([XH,eL])}).strict(),Kbe=e.object({select:Uy.optional(),include:Wy.optional(),where:ot,create:e.union([XH,eL]),update:e.union([tL,aL])}).strict(),Xbe=e.object({data:e.union([xv,xv.array()]),skipDuplicates:e.boolean().optional()}).strict(),eIe=e.object({data:e.union([xv,xv.array()]),skipDuplicates:e.boolean().optional()}).strict(),tIe=e.object({select:Uy.optional(),include:Wy.optional(),where:ot}).strict(),aIe=e.object({select:Uy.optional(),include:Wy.optional(),data:e.union([tL,aL]),where:ot}).strict(),nIe=e.object({data:e.union([nL,k6]),where:Zt.optional()}).strict(),oIe=e.object({where:Zt.optional()}).strict(),iIe=e.object({select:Ry.optional(),include:ky.optional(),data:e.union([oL,iL])}).strict(),rIe=e.object({select:Ry.optional(),include:ky.optional(),where:it,create:e.union([oL,iL]),update:e.union([rL,lL])}).strict(),lIe=e.object({data:e.union([Vv,Vv.array()]),skipDuplicates:e.boolean().optional()}).strict(),cIe=e.object({data:e.union([Vv,Vv.array()]),skipDuplicates:e.boolean().optional()}).strict(),pIe=e.object({select:Ry.optional(),include:ky.optional(),where:it}).strict(),uIe=e.object({select:Ry.optional(),include:ky.optional(),data:e.union([rL,lL]),where:it}).strict(),sIe=e.object({data:e.union([cL,R6]),where:$t.optional()}).strict(),yIe=e.object({where:$t.optional()}).strict(),dIe=e.object({select:jy.optional(),include:fy.optional(),data:e.union([pL,uL])}).strict(),mIe=e.object({select:jy.optional(),include:fy.optional(),where:G,create:e.union([pL,uL]),update:e.union([sL,yL])}).strict(),zIe=e.object({data:e.union([Hv,Hv.array()]),skipDuplicates:e.boolean().optional()}).strict(),hIe=e.object({data:e.union([Hv,Hv.array()]),skipDuplicates:e.boolean().optional()}).strict(),bIe=e.object({select:jy.optional(),include:fy.optional(),where:G}).strict(),IIe=e.object({select:jy.optional(),include:fy.optional(),data:e.union([sL,yL]),where:G}).strict(),gIe=e.object({data:e.union([wR,f6]),where:Ma.optional()}).strict(),SIe=e.object({where:Ma.optional()}).strict(),vIe=e.object({select:Oy.optional(),include:My.optional(),data:e.union([dL,mL])}).strict(),AIe=e.object({select:Oy.optional(),include:My.optional(),where:Ct,create:e.union([dL,mL]),update:e.union([zL,hL])}).strict(),CIe=e.object({data:e.union([Lv,Lv.array()]),skipDuplicates:e.boolean().optional()}).strict(),WIe=e.object({data:e.union([Lv,Lv.array()]),skipDuplicates:e.boolean().optional()}).strict(),UIe=e.object({select:Oy.optional(),include:My.optional(),where:Ct}).strict(),kIe=e.object({select:Oy.optional(),include:My.optional(),data:e.union([zL,hL]),where:Ct}).strict(),RIe=e.object({data:e.union([bL,j6]),where:Oa.optional()}).strict(),fIe=e.object({where:Oa.optional()}).strict(),jIe=e.object({select:Ty.optional(),include:wy.optional(),data:e.union([IL,gL])}).strict(),MIe=e.object({select:Ty.optional(),include:wy.optional(),where:Xe,create:e.union([IL,gL]),update:e.union([SL,vL])}).strict(),OIe=e.object({data:e.union([Zv,Zv.array()]),skipDuplicates:e.boolean().optional()}).strict(),wIe=e.object({data:e.union([Zv,Zv.array()]),skipDuplicates:e.boolean().optional()}).strict(),TIe=e.object({select:Ty.optional(),include:wy.optional(),where:Xe}).strict(),PIe=e.object({select:Ty.optional(),include:wy.optional(),data:e.union([SL,vL]),where:Xe}).strict(),NIe=e.object({data:e.union([AL,M6]),where:Ot.optional()}).strict(),BIe=e.object({where:Ot.optional()}).strict(),_Ie=e.object({select:Ny.optional(),include:Py.optional(),data:e.union([CL,WL])}).strict(),qIe=e.object({select:Ny.optional(),include:Py.optional(),where:ve,create:e.union([CL,WL]),update:e.union([UL,kL])}).strict(),FIe=e.object({data:e.union([$v,$v.array()]),skipDuplicates:e.boolean().optional()}).strict(),EIe=e.object({data:e.union([$v,$v.array()]),skipDuplicates:e.boolean().optional()}).strict(),DIe=e.object({select:Ny.optional(),include:Py.optional(),where:ve}).strict(),xIe=e.object({select:Ny.optional(),include:Py.optional(),data:e.union([UL,kL]),where:ve}).strict(),VIe=e.object({data:e.union([ET,O6]),where:wa.optional()}).strict(),HIe=e.object({where:wa.optional()}).strict(),LIe=e.object({select:_y.optional(),include:By.optional(),data:e.union([RL,fL])}).strict(),ZIe=e.object({select:_y.optional(),include:By.optional(),where:R,create:e.union([RL,fL]),update:e.union([jL,ML])}).strict(),$Ie=e.object({data:e.union([Qv,Qv.array()]),skipDuplicates:e.boolean().optional()}).strict(),QIe=e.object({data:e.union([Qv,Qv.array()]),skipDuplicates:e.boolean().optional()}).strict(),GIe=e.object({select:_y.optional(),include:By.optional(),where:R}).strict(),YIe=e.object({select:_y.optional(),include:By.optional(),data:e.union([jL,ML]),where:R}).strict(),JIe=e.object({data:e.union([hS,w6]),where:Ae.optional()}).strict(),KIe=e.object({where:Ae.optional()}).strict(),XIe=e.object({select:Fy.optional(),include:qy.optional(),data:e.union([OL,wL])}).strict(),ege=e.object({select:Fy.optional(),include:qy.optional(),where:xi,create:e.union([OL,wL]),update:e.union([TL,PL])}).strict(),tge=e.object({data:e.union([Gv,Gv.array()]),skipDuplicates:e.boolean().optional()}).strict(),age=e.object({data:e.union([Gv,Gv.array()]),skipDuplicates:e.boolean().optional()}).strict(),nge=e.object({select:Fy.optional(),include:qy.optional(),where:xi}).strict(),oge=e.object({select:Fy.optional(),include:qy.optional(),data:e.union([TL,PL]),where:xi}).strict(),ige=e.object({data:e.union([T6,P6]),where:Ft.optional()}).strict(),rge=e.object({where:Ft.optional()}).strict(),lge=e.object({select:Dy.optional(),include:Ey.optional(),data:e.union([NL,BL])}).strict(),cge=e.object({select:Dy.optional(),include:Ey.optional(),where:Wt,create:e.union([NL,BL]),update:e.union([_L,qL])}).strict(),pge=e.object({data:e.union([Yv,Yv.array()]),skipDuplicates:e.boolean().optional()}).strict(),uge=e.object({data:e.union([Yv,Yv.array()]),skipDuplicates:e.boolean().optional()}).strict(),sge=e.object({select:Dy.optional(),include:Ey.optional(),where:Wt}).strict(),yge=e.object({select:Dy.optional(),include:Ey.optional(),data:e.union([_L,qL]),where:Wt}).strict(),dge=e.object({data:e.union([FL,N6]),where:Ta.optional()}).strict(),mge=e.object({where:Ta.optional()}).strict(),zge=e.object({select:Vy.optional(),include:xy.optional(),data:e.union([EL,DL])}).strict(),hge=e.object({select:Vy.optional(),include:xy.optional(),where:Ut,create:e.union([EL,DL]),update:e.union([xL,VL])}).strict(),bge=e.object({data:e.union([Jv,Jv.array()]),skipDuplicates:e.boolean().optional()}).strict(),Ige=e.object({data:e.union([Jv,Jv.array()]),skipDuplicates:e.boolean().optional()}).strict(),gge=e.object({select:Vy.optional(),include:xy.optional(),where:Ut}).strict(),Sge=e.object({select:Vy.optional(),include:xy.optional(),data:e.union([xL,VL]),where:Ut}).strict(),vge=e.object({data:e.union([HL,B6]),where:Pa.optional()}).strict(),Age=e.object({where:Pa.optional()}).strict(),dt;(function(o){o.assertEqual=c=>c;function a(c){}o.assertIs=a;function n(c){throw new Error}o.assertNever=n,o.arrayToEnum=c=>{const u={};for(const y of c)u[y]=y;return u},o.getValidEnumValues=c=>{const u=o.objectKeys(c).filter(m=>typeof c[c[m]]!="number"),y={};for(const m of u)y[m]=c[m];return o.objectValues(y)},o.objectValues=c=>o.objectKeys(c).map(function(u){return c[u]}),o.objectKeys=typeof Object.keys=="function"?c=>Object.keys(c):c=>{const u=[];for(const y in c)Object.prototype.hasOwnProperty.call(c,y)&&u.push(y);return u},o.find=(c,u)=>{for(const y of c)if(u(y))return y},o.isInteger=typeof Number.isInteger=="function"?c=>Number.isInteger(c):c=>typeof c=="number"&&isFinite(c)&&Math.floor(c)===c;function r(c,u=" | "){return c.map(y=>typeof y=="string"?`'${y}'`:y).join(u)}o.joinValues=r,o.jsonStringifyReplacer=(c,u)=>typeof u=="bigint"?u.toString():u})(dt||(dt={}));var FD;(function(o){o.mergeShapes=(a,n)=>({...a,...n})})(FD||(FD={}));var ae=dt.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Zh=o=>{switch(typeof o){case"undefined":return ae.undefined;case"string":return ae.string;case"number":return isNaN(o)?ae.nan:ae.number;case"boolean":return ae.boolean;case"function":return ae.function;case"bigint":return ae.bigint;case"symbol":return ae.symbol;case"object":return Array.isArray(o)?ae.array:o===null?ae.null:o.then&&typeof o.then=="function"&&o.catch&&typeof o.catch=="function"?ae.promise:typeof Map<"u"&&o instanceof Map?ae.map:typeof Set<"u"&&o instanceof Set?ae.set:typeof Date<"u"&&o instanceof Date?ae.date:ae.object;default:return ae.unknown}},B=dt.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Cge=o=>JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:"),Pl=class Vae extends Error{constructor(a){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const n=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,n):this.__proto__=n,this.name="ZodError",this.issues=a}get errors(){return this.issues}format(a){const n=a||function(u){return u.message},r={_errors:[]},c=u=>{for(const y of u.issues)if(y.code==="invalid_union")y.unionErrors.map(c);else if(y.code==="invalid_return_type")c(y.returnTypeError);else if(y.code==="invalid_arguments")c(y.argumentsError);else if(y.path.length===0)r._errors.push(n(y));else{let m=r,g=0;for(;g<y.path.length;){const S=y.path[g];g===y.path.length-1?(m[S]=m[S]||{_errors:[]},m[S]._errors.push(n(y))):m[S]=m[S]||{_errors:[]},m=m[S],g++}}};return c(this),r}static assert(a){if(!(a instanceof Vae))throw new Error(`Not a ZodError: ${a}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,dt.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(a=n=>n.message){const n={},r=[];for(const c of this.issues)c.path.length>0?(n[c.path[0]]=n[c.path[0]]||[],n[c.path[0]].push(a(c))):r.push(a(c));return{formErrors:r,fieldErrors:n}}get formErrors(){return this.flatten()}};Pl.create=o=>new Pl(o);var cS=(o,a)=>{let n;switch(o.code){case B.invalid_type:o.received===ae.undefined?n="Required":n=`Expected ${o.expected}, received ${o.received}`;break;case B.invalid_literal:n=`Invalid literal value, expected ${JSON.stringify(o.expected,dt.jsonStringifyReplacer)}`;break;case B.unrecognized_keys:n=`Unrecognized key(s) in object: ${dt.joinValues(o.keys,", ")}`;break;case B.invalid_union:n="Invalid input";break;case B.invalid_union_discriminator:n=`Invalid discriminator value. Expected ${dt.joinValues(o.options)}`;break;case B.invalid_enum_value:n=`Invalid enum value. Expected ${dt.joinValues(o.options)}, received '${o.received}'`;break;case B.invalid_arguments:n="Invalid function arguments";break;case B.invalid_return_type:n="Invalid function return type";break;case B.invalid_date:n="Invalid date";break;case B.invalid_string:typeof o.validation=="object"?"includes"in o.validation?(n=`Invalid input: must include "${o.validation.includes}"`,typeof o.validation.position=="number"&&(n=`${n} at one or more positions greater than or equal to ${o.validation.position}`)):"startsWith"in o.validation?n=`Invalid input: must start with "${o.validation.startsWith}"`:"endsWith"in o.validation?n=`Invalid input: must end with "${o.validation.endsWith}"`:dt.assertNever(o.validation):o.validation!=="regex"?n=`Invalid ${o.validation}`:n="Invalid";break;case B.too_small:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at least":"more than"} ${o.minimum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at least":"over"} ${o.minimum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${o.minimum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(o.minimum))}`:n="Invalid input";break;case B.too_big:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at most":"less than"} ${o.maximum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at most":"under"} ${o.maximum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="bigint"?n=`BigInt must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly":o.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(o.maximum))}`:n="Invalid input";break;case B.custom:n="Invalid input";break;case B.invalid_intersection_types:n="Intersection results could not be merged";break;case B.not_multiple_of:n=`Number must be a multiple of ${o.multipleOf}`;break;case B.not_finite:n="Number must be finite";break;default:n=a.defaultError,dt.assertNever(o)}return{message:n}},Hae=cS;function Wge(o){Hae=o}function sT(){return Hae}var yT=o=>{const{data:a,path:n,errorMaps:r,issueData:c}=o,u=[...n,...c.path||[]],y={...c,path:u};if(c.message!==void 0)return{...c,path:u,message:c.message};let m="";const g=r.filter(S=>!!S).slice().reverse();for(const S of g)m=S(y,{data:a,defaultError:m}).message;return{...c,path:u,message:m}},Uge=[];function K(o,a){const n=sT(),r=yT({issueData:a,data:o.data,path:o.path,errorMaps:[o.common.contextualErrorMap,o.schemaErrorMap,n,n===cS?void 0:cS].filter(c=>!!c)});o.common.issues.push(r)}var Hr=class Lae{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(a,n){const r=[];for(const c of n){if(c.status==="aborted")return je;c.status==="dirty"&&a.dirty(),r.push(c.value)}return{status:a.value,value:r}}static async mergeObjectAsync(a,n){const r=[];for(const c of n){const u=await c.key,y=await c.value;r.push({key:u,value:y})}return Lae.mergeObjectSync(a,r)}static mergeObjectSync(a,n){const r={};for(const c of n){const{key:u,value:y}=c;if(u.status==="aborted"||y.status==="aborted")return je;u.status==="dirty"&&a.dirty(),y.status==="dirty"&&a.dirty(),u.value!=="__proto__"&&(typeof y.value<"u"||c.alwaysSet)&&(r[u.value]=y.value)}return{status:a.value,value:r}}},je=Object.freeze({status:"aborted"}),aS=o=>({status:"dirty",value:o}),Ei=o=>({status:"valid",value:o}),ED=o=>o.status==="aborted",DD=o=>o.status==="dirty",_k=o=>o.status==="valid",qk=o=>typeof Promise<"u"&&o instanceof Promise;function dT(o,a,n,r){if(n==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof a=="function"?o!==a||!r:!a.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?r:n==="a"?r.call(o):r?r.value:a.get(o)}function Zae(o,a,n,r,c){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!c)throw new TypeError("Private accessor was defined without a setter");if(typeof a=="function"?o!==a||!c:!a.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?c.call(o,n):c?c.value=n:a.set(o,n),n}var ye;(function(o){o.errToObj=a=>typeof a=="string"?{message:a}:a||{},o.toString=a=>typeof a=="string"?a:a==null?void 0:a.message})(ye||(ye={}));var PS,NS,Hd=class{constructor(a,n,r,c){this._cachedPath=[],this.parent=a,this.data=n,this._path=r,this._key=c}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},D9=(o,a)=>{if(_k(a))return{success:!0,data:a.value};if(!o.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const n=new Pl(o.common.issues);return this._error=n,this._error}}};function Ve(o){if(!o)return{};const{errorMap:a,invalid_type_error:n,required_error:r,description:c}=o;if(a&&(n||r))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return a?{errorMap:a,description:c}:{errorMap:(y,m)=>{var g,S;const{message:C}=o;return y.code==="invalid_enum_value"?{message:C??m.defaultError}:typeof m.data>"u"?{message:(g=C??r)!==null&&g!==void 0?g:m.defaultError}:y.code!=="invalid_type"?{message:m.defaultError}:{message:(S=C??n)!==null&&S!==void 0?S:m.defaultError}},description:c}}var Qe=class{constructor(a){this.spa=this.safeParseAsync,this._def=a,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(a){return Zh(a.data)}_getOrReturnCtx(a,n){return n||{common:a.parent.common,data:a.data,parsedType:Zh(a.data),schemaErrorMap:this._def.errorMap,path:a.path,parent:a.parent}}_processInputParams(a){return{status:new Hr,ctx:{common:a.parent.common,data:a.data,parsedType:Zh(a.data),schemaErrorMap:this._def.errorMap,path:a.path,parent:a.parent}}}_parseSync(a){const n=this._parse(a);if(qk(n))throw new Error("Synchronous parse encountered promise.");return n}_parseAsync(a){const n=this._parse(a);return Promise.resolve(n)}parse(a,n){const r=this.safeParse(a,n);if(r.success)return r.data;throw r.error}safeParse(a,n){var r;const c={common:{issues:[],async:(r=n==null?void 0:n.async)!==null&&r!==void 0?r:!1,contextualErrorMap:n==null?void 0:n.errorMap},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:a,parsedType:Zh(a)},u=this._parseSync({data:a,path:c.path,parent:c});return D9(c,u)}async parseAsync(a,n){const r=await this.safeParseAsync(a,n);if(r.success)return r.data;throw r.error}async safeParseAsync(a,n){const r={common:{issues:[],contextualErrorMap:n==null?void 0:n.errorMap,async:!0},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:a,parsedType:Zh(a)},c=this._parse({data:a,path:r.path,parent:r}),u=await(qk(c)?c:Promise.resolve(c));return D9(r,u)}refine(a,n){const r=c=>typeof n=="string"||typeof n>"u"?{message:n}:typeof n=="function"?n(c):n;return this._refinement((c,u)=>{const y=a(c),m=()=>u.addIssue({code:B.custom,...r(c)});return typeof Promise<"u"&&y instanceof Promise?y.then(g=>g?!0:(m(),!1)):y?!0:(m(),!1)})}refinement(a,n){return this._refinement((r,c)=>a(r)?!0:(c.addIssue(typeof n=="function"?n(r,c):n),!1))}_refinement(a){return new Ku({schema:this,typeName:ke.ZodEffects,effect:{type:"refinement",refinement:a}})}superRefine(a){return this._refinement(a)}optional(){return jd.create(this,this._def)}nullable(){return Gb.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Wg.create(this,this._def)}promise(){return sS.create(this,this._def)}or(a){return Lk.create([this,a],this._def)}and(a){return Zk.create(this,a,this._def)}transform(a){return new Ku({...Ve(this._def),schema:this,typeName:ke.ZodEffects,effect:{type:"transform",transform:a}})}default(a){const n=typeof a=="function"?a:()=>a;return new Yk({...Ve(this._def),innerType:this,defaultValue:n,typeName:ke.ZodDefault})}brand(){return new T9({typeName:ke.ZodBranded,type:this,...Ve(this._def)})}catch(a){const n=typeof a=="function"?a:()=>a;return new Jk({...Ve(this._def),innerType:this,catchValue:n,typeName:ke.ZodCatch})}describe(a){const n=this.constructor;return new n({...this._def,description:a})}pipe(a){return P9.create(this,a)}readonly(){return Kk.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},kge=/^c[^\s-]{8,}$/i,Rge=/^[0-9a-z]+$/,fge=/^[0-9A-HJKMNP-TV-Z]{26}$/,jge=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Mge=/^[a-z0-9_-]{21}$/i,Oge=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,wge=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Tge="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",uF,Pge=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Nge=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,Bge=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,$ae="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",_ge=new RegExp(`^${$ae}$`);function Qae(o){let a="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return o.precision?a=`${a}\\.\\d{${o.precision}}`:o.precision==null&&(a=`${a}(\\.\\d+)?`),a}function qge(o){return new RegExp(`^${Qae(o)}$`)}function Gae(o){let a=`${$ae}T${Qae(o)}`;const n=[];return n.push(o.local?"Z?":"Z"),o.offset&&n.push("([+-]\\d{2}:?\\d{2})"),a=`${a}(${n.join("|")})`,new RegExp(`^${a}$`)}function Fge(o,a){return!!((a==="v4"||!a)&&Pge.test(o)||(a==="v6"||!a)&&Nge.test(o))}var pS=class BS extends Qe{_parse(a){if(this._def.coerce&&(a.data=String(a.data)),this._getType(a)!==ae.string){const u=this._getOrReturnCtx(a);return K(u,{code:B.invalid_type,expected:ae.string,received:u.parsedType}),je}const r=new Hr;let c;for(const u of this._def.checks)if(u.kind==="min")a.data.length<u.value&&(c=this._getOrReturnCtx(a,c),K(c,{code:B.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="max")a.data.length>u.value&&(c=this._getOrReturnCtx(a,c),K(c,{code:B.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="length"){const y=a.data.length>u.value,m=a.data.length<u.value;(y||m)&&(c=this._getOrReturnCtx(a,c),y?K(c,{code:B.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}):m&&K(c,{code:B.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}),r.dirty())}else if(u.kind==="email")wge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"email",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="emoji")uF||(uF=new RegExp(Tge,"u")),uF.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"emoji",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="uuid")jge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"uuid",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="nanoid")Mge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"nanoid",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid")kge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"cuid",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid2")Rge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"cuid2",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="ulid")fge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"ulid",code:B.invalid_string,message:u.message}),r.dirty());else if(u.kind==="url")try{new URL(a.data)}catch{c=this._getOrReturnCtx(a,c),K(c,{validation:"url",code:B.invalid_string,message:u.message}),r.dirty()}else u.kind==="regex"?(u.regex.lastIndex=0,u.regex.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"regex",code:B.invalid_string,message:u.message}),r.dirty())):u.kind==="trim"?a.data=a.data.trim():u.kind==="includes"?a.data.includes(u.value,u.position)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:{includes:u.value,position:u.position},message:u.message}),r.dirty()):u.kind==="toLowerCase"?a.data=a.data.toLowerCase():u.kind==="toUpperCase"?a.data=a.data.toUpperCase():u.kind==="startsWith"?a.data.startsWith(u.value)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:{startsWith:u.value},message:u.message}),r.dirty()):u.kind==="endsWith"?a.data.endsWith(u.value)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:{endsWith:u.value},message:u.message}),r.dirty()):u.kind==="datetime"?Gae(u).test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:"datetime",message:u.message}),r.dirty()):u.kind==="date"?_ge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:"date",message:u.message}),r.dirty()):u.kind==="time"?qge(u).test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{code:B.invalid_string,validation:"time",message:u.message}),r.dirty()):u.kind==="duration"?Oge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"duration",code:B.invalid_string,message:u.message}),r.dirty()):u.kind==="ip"?Fge(a.data,u.version)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"ip",code:B.invalid_string,message:u.message}),r.dirty()):u.kind==="base64"?Bge.test(a.data)||(c=this._getOrReturnCtx(a,c),K(c,{validation:"base64",code:B.invalid_string,message:u.message}),r.dirty()):dt.assertNever(u);return{status:r.value,value:a.data}}_regex(a,n,r){return this.refinement(c=>a.test(c),{validation:n,code:B.invalid_string,...ye.errToObj(r)})}_addCheck(a){return new BS({...this._def,checks:[...this._def.checks,a]})}email(a){return this._addCheck({kind:"email",...ye.errToObj(a)})}url(a){return this._addCheck({kind:"url",...ye.errToObj(a)})}emoji(a){return this._addCheck({kind:"emoji",...ye.errToObj(a)})}uuid(a){return this._addCheck({kind:"uuid",...ye.errToObj(a)})}nanoid(a){return this._addCheck({kind:"nanoid",...ye.errToObj(a)})}cuid(a){return this._addCheck({kind:"cuid",...ye.errToObj(a)})}cuid2(a){return this._addCheck({kind:"cuid2",...ye.errToObj(a)})}ulid(a){return this._addCheck({kind:"ulid",...ye.errToObj(a)})}base64(a){return this._addCheck({kind:"base64",...ye.errToObj(a)})}ip(a){return this._addCheck({kind:"ip",...ye.errToObj(a)})}datetime(a){var n,r;return typeof a=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:a}):this._addCheck({kind:"datetime",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,offset:(n=a==null?void 0:a.offset)!==null&&n!==void 0?n:!1,local:(r=a==null?void 0:a.local)!==null&&r!==void 0?r:!1,...ye.errToObj(a==null?void 0:a.message)})}date(a){return this._addCheck({kind:"date",message:a})}time(a){return typeof a=="string"?this._addCheck({kind:"time",precision:null,message:a}):this._addCheck({kind:"time",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,...ye.errToObj(a==null?void 0:a.message)})}duration(a){return this._addCheck({kind:"duration",...ye.errToObj(a)})}regex(a,n){return this._addCheck({kind:"regex",regex:a,...ye.errToObj(n)})}includes(a,n){return this._addCheck({kind:"includes",value:a,position:n==null?void 0:n.position,...ye.errToObj(n==null?void 0:n.message)})}startsWith(a,n){return this._addCheck({kind:"startsWith",value:a,...ye.errToObj(n)})}endsWith(a,n){return this._addCheck({kind:"endsWith",value:a,...ye.errToObj(n)})}min(a,n){return this._addCheck({kind:"min",value:a,...ye.errToObj(n)})}max(a,n){return this._addCheck({kind:"max",value:a,...ye.errToObj(n)})}length(a,n){return this._addCheck({kind:"length",value:a,...ye.errToObj(n)})}nonempty(a){return this.min(1,ye.errToObj(a))}trim(){return new BS({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new BS({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new BS({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(a=>a.kind==="datetime")}get isDate(){return!!this._def.checks.find(a=>a.kind==="date")}get isTime(){return!!this._def.checks.find(a=>a.kind==="time")}get isDuration(){return!!this._def.checks.find(a=>a.kind==="duration")}get isEmail(){return!!this._def.checks.find(a=>a.kind==="email")}get isURL(){return!!this._def.checks.find(a=>a.kind==="url")}get isEmoji(){return!!this._def.checks.find(a=>a.kind==="emoji")}get isUUID(){return!!this._def.checks.find(a=>a.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(a=>a.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(a=>a.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(a=>a.kind==="cuid2")}get isULID(){return!!this._def.checks.find(a=>a.kind==="ulid")}get isIP(){return!!this._def.checks.find(a=>a.kind==="ip")}get isBase64(){return!!this._def.checks.find(a=>a.kind==="base64")}get minLength(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxLength(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};pS.create=o=>{var a;return new pS({checks:[],typeName:ke.ZodString,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...Ve(o)})};function Ege(o,a){const n=(o.toString().split(".")[1]||"").length,r=(a.toString().split(".")[1]||"").length,c=n>r?n:r,u=parseInt(o.toFixed(c).replace(".","")),y=parseInt(a.toFixed(c).replace(".",""));return u%y/Math.pow(10,c)}var Fk=class xD extends Qe{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(a){if(this._def.coerce&&(a.data=Number(a.data)),this._getType(a)!==ae.number){const u=this._getOrReturnCtx(a);return K(u,{code:B.invalid_type,expected:ae.number,received:u.parsedType}),je}let r;const c=new Hr;for(const u of this._def.checks)u.kind==="int"?dt.isInteger(a.data)||(r=this._getOrReturnCtx(a,r),K(r,{code:B.invalid_type,expected:"integer",received:"float",message:u.message}),c.dirty()):u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.too_small,minimum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.too_big,maximum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="multipleOf"?Ege(a.data,u.value)!==0&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):u.kind==="finite"?Number.isFinite(a.data)||(r=this._getOrReturnCtx(a,r),K(r,{code:B.not_finite,message:u.message}),c.dirty()):dt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,ye.toString(n))}gt(a,n){return this.setLimit("min",a,!1,ye.toString(n))}lte(a,n){return this.setLimit("max",a,!0,ye.toString(n))}lt(a,n){return this.setLimit("max",a,!1,ye.toString(n))}setLimit(a,n,r,c){return new xD({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:ye.toString(c)}]})}_addCheck(a){return new xD({...this._def,checks:[...this._def.checks,a]})}int(a){return this._addCheck({kind:"int",message:ye.toString(a)})}positive(a){return this._addCheck({kind:"min",value:0,inclusive:!1,message:ye.toString(a)})}negative(a){return this._addCheck({kind:"max",value:0,inclusive:!1,message:ye.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:0,inclusive:!0,message:ye.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:0,inclusive:!0,message:ye.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:ye.toString(n)})}finite(a){return this._addCheck({kind:"finite",message:ye.toString(a)})}safe(a){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:ye.toString(a)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:ye.toString(a)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}get isInt(){return!!this._def.checks.find(a=>a.kind==="int"||a.kind==="multipleOf"&&dt.isInteger(a.value))}get isFinite(){let a=null,n=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(n===null||r.value>n)&&(n=r.value):r.kind==="max"&&(a===null||r.value<a)&&(a=r.value)}return Number.isFinite(n)&&Number.isFinite(a)}};Fk.create=o=>new Fk({checks:[],typeName:ke.ZodNumber,coerce:(o==null?void 0:o.coerce)||!1,...Ve(o)});var Ek=class VD extends Qe{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(a){if(this._def.coerce&&(a.data=BigInt(a.data)),this._getType(a)!==ae.bigint){const u=this._getOrReturnCtx(a);return K(u,{code:B.invalid_type,expected:ae.bigint,received:u.parsedType}),je}let r;const c=new Hr;for(const u of this._def.checks)u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.too_small,type:"bigint",minimum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.too_big,type:"bigint",maximum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="multipleOf"?a.data%u.value!==BigInt(0)&&(r=this._getOrReturnCtx(a,r),K(r,{code:B.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):dt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,ye.toString(n))}gt(a,n){return this.setLimit("min",a,!1,ye.toString(n))}lte(a,n){return this.setLimit("max",a,!0,ye.toString(n))}lt(a,n){return this.setLimit("max",a,!1,ye.toString(n))}setLimit(a,n,r,c){return new VD({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:ye.toString(c)}]})}_addCheck(a){return new VD({...this._def,checks:[...this._def.checks,a]})}positive(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:ye.toString(a)})}negative(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:ye.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:ye.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:ye.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:ye.toString(n)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};Ek.create=o=>{var a;return new Ek({checks:[],typeName:ke.ZodBigInt,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...Ve(o)})};var Dk=class extends Qe{_parse(a){if(this._def.coerce&&(a.data=!!a.data),this._getType(a)!==ae.boolean){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.boolean,received:r.parsedType}),je}return Ei(a.data)}};Dk.create=o=>new Dk({typeName:ke.ZodBoolean,coerce:(o==null?void 0:o.coerce)||!1,...Ve(o)});var xk=class Yae extends Qe{_parse(a){if(this._def.coerce&&(a.data=new Date(a.data)),this._getType(a)!==ae.date){const u=this._getOrReturnCtx(a);return K(u,{code:B.invalid_type,expected:ae.date,received:u.parsedType}),je}if(isNaN(a.data.getTime())){const u=this._getOrReturnCtx(a);return K(u,{code:B.invalid_date}),je}const r=new Hr;let c;for(const u of this._def.checks)u.kind==="min"?a.data.getTime()<u.value&&(c=this._getOrReturnCtx(a,c),K(c,{code:B.too_small,message:u.message,inclusive:!0,exact:!1,minimum:u.value,type:"date"}),r.dirty()):u.kind==="max"?a.data.getTime()>u.value&&(c=this._getOrReturnCtx(a,c),K(c,{code:B.too_big,message:u.message,inclusive:!0,exact:!1,maximum:u.value,type:"date"}),r.dirty()):dt.assertNever(u);return{status:r.value,value:new Date(a.data.getTime())}}_addCheck(a){return new Yae({...this._def,checks:[...this._def.checks,a]})}min(a,n){return this._addCheck({kind:"min",value:a.getTime(),message:ye.toString(n)})}max(a,n){return this._addCheck({kind:"max",value:a.getTime(),message:ye.toString(n)})}get minDate(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a!=null?new Date(a):null}get maxDate(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a!=null?new Date(a):null}};xk.create=o=>new xk({checks:[],coerce:(o==null?void 0:o.coerce)||!1,typeName:ke.ZodDate,...Ve(o)});var mT=class extends Qe{_parse(a){if(this._getType(a)!==ae.symbol){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.symbol,received:r.parsedType}),je}return Ei(a.data)}};mT.create=o=>new mT({typeName:ke.ZodSymbol,...Ve(o)});var Vk=class extends Qe{_parse(a){if(this._getType(a)!==ae.undefined){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.undefined,received:r.parsedType}),je}return Ei(a.data)}};Vk.create=o=>new Vk({typeName:ke.ZodUndefined,...Ve(o)});var Hk=class extends Qe{_parse(a){if(this._getType(a)!==ae.null){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.null,received:r.parsedType}),je}return Ei(a.data)}};Hk.create=o=>new Hk({typeName:ke.ZodNull,...Ve(o)});var uS=class extends Qe{constructor(){super(...arguments),this._any=!0}_parse(a){return Ei(a.data)}};uS.create=o=>new uS({typeName:ke.ZodAny,...Ve(o)});var eg=class extends Qe{constructor(){super(...arguments),this._unknown=!0}_parse(a){return Ei(a.data)}};eg.create=o=>new eg({typeName:ke.ZodUnknown,...Ve(o)});var rh=class extends Qe{_parse(a){const n=this._getOrReturnCtx(a);return K(n,{code:B.invalid_type,expected:ae.never,received:n.parsedType}),je}};rh.create=o=>new rh({typeName:ke.ZodNever,...Ve(o)});var zT=class extends Qe{_parse(a){if(this._getType(a)!==ae.undefined){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.void,received:r.parsedType}),je}return Ei(a.data)}};zT.create=o=>new zT({typeName:ke.ZodVoid,...Ve(o)});var Wg=class Kw extends Qe{_parse(a){const{ctx:n,status:r}=this._processInputParams(a),c=this._def;if(n.parsedType!==ae.array)return K(n,{code:B.invalid_type,expected:ae.array,received:n.parsedType}),je;if(c.exactLength!==null){const y=n.data.length>c.exactLength.value,m=n.data.length<c.exactLength.value;(y||m)&&(K(n,{code:y?B.too_big:B.too_small,minimum:m?c.exactLength.value:void 0,maximum:y?c.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:c.exactLength.message}),r.dirty())}if(c.minLength!==null&&n.data.length<c.minLength.value&&(K(n,{code:B.too_small,minimum:c.minLength.value,type:"array",inclusive:!0,exact:!1,message:c.minLength.message}),r.dirty()),c.maxLength!==null&&n.data.length>c.maxLength.value&&(K(n,{code:B.too_big,maximum:c.maxLength.value,type:"array",inclusive:!0,exact:!1,message:c.maxLength.message}),r.dirty()),n.common.async)return Promise.all([...n.data].map((y,m)=>c.type._parseAsync(new Hd(n,y,n.path,m)))).then(y=>Hr.mergeArray(r,y));const u=[...n.data].map((y,m)=>c.type._parseSync(new Hd(n,y,n.path,m)));return Hr.mergeArray(r,u)}get element(){return this._def.type}min(a,n){return new Kw({...this._def,minLength:{value:a,message:ye.toString(n)}})}max(a,n){return new Kw({...this._def,maxLength:{value:a,message:ye.toString(n)}})}length(a,n){return new Kw({...this._def,exactLength:{value:a,message:ye.toString(n)}})}nonempty(a){return this.min(1,a)}};Wg.create=(o,a)=>new Wg({type:o,minLength:null,maxLength:null,exactLength:null,typeName:ke.ZodArray,...Ve(a)});function Jg(o){if(o instanceof rl){const a={};for(const n in o.shape){const r=o.shape[n];a[n]=jd.create(Jg(r))}return new rl({...o._def,shape:()=>a})}else return o instanceof Wg?new Wg({...o._def,type:Jg(o.element)}):o instanceof jd?jd.create(Jg(o.unwrap())):o instanceof Gb?Gb.create(Jg(o.unwrap())):o instanceof Qb?Qb.create(o.items.map(a=>Jg(a))):o}var rl=class sl extends Qe{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const a=this._def.shape(),n=dt.objectKeys(a);return this._cached={shape:a,keys:n}}_parse(a){if(this._getType(a)!==ae.object){const S=this._getOrReturnCtx(a);return K(S,{code:B.invalid_type,expected:ae.object,received:S.parsedType}),je}const{status:r,ctx:c}=this._processInputParams(a),{shape:u,keys:y}=this._getCached(),m=[];if(!(this._def.catchall instanceof rh&&this._def.unknownKeys==="strip"))for(const S in c.data)y.includes(S)||m.push(S);const g=[];for(const S of y){const C=u[S],Ne=c.data[S];g.push({key:{status:"valid",value:S},value:C._parse(new Hd(c,Ne,c.path,S)),alwaysSet:S in c.data})}if(this._def.catchall instanceof rh){const S=this._def.unknownKeys;if(S==="passthrough")for(const C of m)g.push({key:{status:"valid",value:C},value:{status:"valid",value:c.data[C]}});else if(S==="strict")m.length>0&&(K(c,{code:B.unrecognized_keys,keys:m}),r.dirty());else if(S!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const S=this._def.catchall;for(const C of m){const Ne=c.data[C];g.push({key:{status:"valid",value:C},value:S._parse(new Hd(c,Ne,c.path,C)),alwaysSet:C in c.data})}}return c.common.async?Promise.resolve().then(async()=>{const S=[];for(const C of g){const Ne=await C.key,La=await C.value;S.push({key:Ne,value:La,alwaysSet:C.alwaysSet})}return S}).then(S=>Hr.mergeObjectSync(r,S)):Hr.mergeObjectSync(r,g)}get shape(){return this._def.shape()}strict(a){return ye.errToObj,new sl({...this._def,unknownKeys:"strict",...a!==void 0?{errorMap:(n,r)=>{var c,u,y,m;const g=(y=(u=(c=this._def).errorMap)===null||u===void 0?void 0:u.call(c,n,r).message)!==null&&y!==void 0?y:r.defaultError;return n.code==="unrecognized_keys"?{message:(m=ye.errToObj(a).message)!==null&&m!==void 0?m:g}:{message:g}}}:{}})}strip(){return new sl({...this._def,unknownKeys:"strip"})}passthrough(){return new sl({...this._def,unknownKeys:"passthrough"})}extend(a){return new sl({...this._def,shape:()=>({...this._def.shape(),...a})})}merge(a){return new sl({unknownKeys:a._def.unknownKeys,catchall:a._def.catchall,shape:()=>({...this._def.shape(),...a._def.shape()}),typeName:ke.ZodObject})}setKey(a,n){return this.augment({[a]:n})}catchall(a){return new sl({...this._def,catchall:a})}pick(a){const n={};return dt.objectKeys(a).forEach(r=>{a[r]&&this.shape[r]&&(n[r]=this.shape[r])}),new sl({...this._def,shape:()=>n})}omit(a){const n={};return dt.objectKeys(this.shape).forEach(r=>{a[r]||(n[r]=this.shape[r])}),new sl({...this._def,shape:()=>n})}deepPartial(){return Jg(this)}partial(a){const n={};return dt.objectKeys(this.shape).forEach(r=>{const c=this.shape[r];a&&!a[r]?n[r]=c:n[r]=c.optional()}),new sl({...this._def,shape:()=>n})}required(a){const n={};return dt.objectKeys(this.shape).forEach(r=>{if(a&&!a[r])n[r]=this.shape[r];else{let u=this.shape[r];for(;u instanceof jd;)u=u._def.innerType;n[r]=u}}),new sl({...this._def,shape:()=>n})}keyof(){return ane(dt.objectKeys(this.shape))}};rl.create=(o,a)=>new rl({shape:()=>o,unknownKeys:"strip",catchall:rh.create(),typeName:ke.ZodObject,...Ve(a)});rl.strictCreate=(o,a)=>new rl({shape:()=>o,unknownKeys:"strict",catchall:rh.create(),typeName:ke.ZodObject,...Ve(a)});rl.lazycreate=(o,a)=>new rl({shape:o,unknownKeys:"strip",catchall:rh.create(),typeName:ke.ZodObject,...Ve(a)});var Lk=class extends Qe{_parse(a){const{ctx:n}=this._processInputParams(a),r=this._def.options;function c(u){for(const m of u)if(m.result.status==="valid")return m.result;for(const m of u)if(m.result.status==="dirty")return n.common.issues.push(...m.ctx.common.issues),m.result;const y=u.map(m=>new Pl(m.ctx.common.issues));return K(n,{code:B.invalid_union,unionErrors:y}),je}if(n.common.async)return Promise.all(r.map(async u=>{const y={...n,common:{...n.common,issues:[]},parent:null};return{result:await u._parseAsync({data:n.data,path:n.path,parent:y}),ctx:y}})).then(c);{let u;const y=[];for(const g of r){const S={...n,common:{...n.common,issues:[]},parent:null},C=g._parseSync({data:n.data,path:n.path,parent:S});if(C.status==="valid")return C;C.status==="dirty"&&!u&&(u={result:C,ctx:S}),S.common.issues.length&&y.push(S.common.issues)}if(u)return n.common.issues.push(...u.ctx.common.issues),u.result;const m=y.map(g=>new Pl(g));return K(n,{code:B.invalid_union,unionErrors:m}),je}}get options(){return this._def.options}};Lk.create=(o,a)=>new Lk({options:o,typeName:ke.ZodUnion,...Ve(a)});var Xd=o=>o instanceof $k?Xd(o.schema):o instanceof Ku?Xd(o.innerType()):o instanceof Qk?[o.value]:o instanceof Dw?o.options:o instanceof Gk?dt.objectValues(o.enum):o instanceof Yk?Xd(o._def.innerType):o instanceof Vk?[void 0]:o instanceof Hk?[null]:o instanceof jd?[void 0,...Xd(o.unwrap())]:o instanceof Gb?[null,...Xd(o.unwrap())]:o instanceof T9||o instanceof Kk?Xd(o.unwrap()):o instanceof Jk?Xd(o._def.innerType):[],Jae=class Kae extends Qe{_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==ae.object)return K(n,{code:B.invalid_type,expected:ae.object,received:n.parsedType}),je;const r=this.discriminator,c=n.data[r],u=this.optionsMap.get(c);return u?n.common.async?u._parseAsync({data:n.data,path:n.path,parent:n}):u._parseSync({data:n.data,path:n.path,parent:n}):(K(n,{code:B.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),je)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(a,n,r){const c=new Map;for(const u of n){const y=Xd(u.shape[a]);if(!y.length)throw new Error(`A discriminator value for key \`${a}\` could not be extracted from all schema options`);for(const m of y){if(c.has(m))throw new Error(`Discriminator property ${String(a)} has duplicate value ${String(m)}`);c.set(m,u)}}return new Kae({typeName:ke.ZodDiscriminatedUnion,discriminator:a,options:n,optionsMap:c,...Ve(r)})}};function HD(o,a){const n=Zh(o),r=Zh(a);if(o===a)return{valid:!0,data:o};if(n===ae.object&&r===ae.object){const c=dt.objectKeys(a),u=dt.objectKeys(o).filter(m=>c.indexOf(m)!==-1),y={...o,...a};for(const m of u){const g=HD(o[m],a[m]);if(!g.valid)return{valid:!1};y[m]=g.data}return{valid:!0,data:y}}else if(n===ae.array&&r===ae.array){if(o.length!==a.length)return{valid:!1};const c=[];for(let u=0;u<o.length;u++){const y=o[u],m=a[u],g=HD(y,m);if(!g.valid)return{valid:!1};c.push(g.data)}return{valid:!0,data:c}}else return n===ae.date&&r===ae.date&&+o==+a?{valid:!0,data:o}:{valid:!1}}var Zk=class extends Qe{_parse(a){const{status:n,ctx:r}=this._processInputParams(a),c=(u,y)=>{if(ED(u)||ED(y))return je;const m=HD(u.value,y.value);return m.valid?((DD(u)||DD(y))&&n.dirty(),{status:n.value,value:m.data}):(K(r,{code:B.invalid_intersection_types}),je)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then(([u,y])=>c(u,y)):c(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}};Zk.create=(o,a,n)=>new Zk({left:o,right:a,typeName:ke.ZodIntersection,...Ve(n)});var Qb=class Xae extends Qe{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ae.array)return K(r,{code:B.invalid_type,expected:ae.array,received:r.parsedType}),je;if(r.data.length<this._def.items.length)return K(r,{code:B.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),je;!this._def.rest&&r.data.length>this._def.items.length&&(K(r,{code:B.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),n.dirty());const u=[...r.data].map((y,m)=>{const g=this._def.items[m]||this._def.rest;return g?g._parse(new Hd(r,y,r.path,m)):null}).filter(y=>!!y);return r.common.async?Promise.all(u).then(y=>Hr.mergeArray(n,y)):Hr.mergeArray(n,u)}get items(){return this._def.items}rest(a){return new Xae({...this._def,rest:a})}};Qb.create=(o,a)=>{if(!Array.isArray(o))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Qb({items:o,typeName:ke.ZodTuple,rest:null,...Ve(a)})};var ene=class LD extends Qe{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ae.object)return K(r,{code:B.invalid_type,expected:ae.object,received:r.parsedType}),je;const c=[],u=this._def.keyType,y=this._def.valueType;for(const m in r.data)c.push({key:u._parse(new Hd(r,m,r.path,m)),value:y._parse(new Hd(r,r.data[m],r.path,m)),alwaysSet:m in r.data});return r.common.async?Hr.mergeObjectAsync(n,c):Hr.mergeObjectSync(n,c)}get element(){return this._def.valueType}static create(a,n,r){return n instanceof Qe?new LD({keyType:a,valueType:n,typeName:ke.ZodRecord,...Ve(r)}):new LD({keyType:pS.create(),valueType:a,typeName:ke.ZodRecord,...Ve(n)})}},hT=class extends Qe{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ae.map)return K(r,{code:B.invalid_type,expected:ae.map,received:r.parsedType}),je;const c=this._def.keyType,u=this._def.valueType,y=[...r.data.entries()].map(([m,g],S)=>({key:c._parse(new Hd(r,m,r.path,[S,"key"])),value:u._parse(new Hd(r,g,r.path,[S,"value"]))}));if(r.common.async){const m=new Map;return Promise.resolve().then(async()=>{for(const g of y){const S=await g.key,C=await g.value;if(S.status==="aborted"||C.status==="aborted")return je;(S.status==="dirty"||C.status==="dirty")&&n.dirty(),m.set(S.value,C.value)}return{status:n.value,value:m}})}else{const m=new Map;for(const g of y){const S=g.key,C=g.value;if(S.status==="aborted"||C.status==="aborted")return je;(S.status==="dirty"||C.status==="dirty")&&n.dirty(),m.set(S.value,C.value)}return{status:n.value,value:m}}}};hT.create=(o,a,n)=>new hT({valueType:a,keyType:o,typeName:ke.ZodMap,...Ve(n)});var bT=class ZD extends Qe{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ae.set)return K(r,{code:B.invalid_type,expected:ae.set,received:r.parsedType}),je;const c=this._def;c.minSize!==null&&r.data.size<c.minSize.value&&(K(r,{code:B.too_small,minimum:c.minSize.value,type:"set",inclusive:!0,exact:!1,message:c.minSize.message}),n.dirty()),c.maxSize!==null&&r.data.size>c.maxSize.value&&(K(r,{code:B.too_big,maximum:c.maxSize.value,type:"set",inclusive:!0,exact:!1,message:c.maxSize.message}),n.dirty());const u=this._def.valueType;function y(g){const S=new Set;for(const C of g){if(C.status==="aborted")return je;C.status==="dirty"&&n.dirty(),S.add(C.value)}return{status:n.value,value:S}}const m=[...r.data.values()].map((g,S)=>u._parse(new Hd(r,g,r.path,S)));return r.common.async?Promise.all(m).then(g=>y(g)):y(m)}min(a,n){return new ZD({...this._def,minSize:{value:a,message:ye.toString(n)}})}max(a,n){return new ZD({...this._def,maxSize:{value:a,message:ye.toString(n)}})}size(a,n){return this.min(a,n).max(a,n)}nonempty(a){return this.min(1,a)}};bT.create=(o,a)=>new bT({valueType:o,minSize:null,maxSize:null,typeName:ke.ZodSet,...Ve(a)});var tne=class Xw extends Qe{constructor(){super(...arguments),this.validate=this.implement}_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==ae.function)return K(n,{code:B.invalid_type,expected:ae.function,received:n.parsedType}),je;function r(m,g){return yT({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,sT(),cS].filter(S=>!!S),issueData:{code:B.invalid_arguments,argumentsError:g}})}function c(m,g){return yT({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,sT(),cS].filter(S=>!!S),issueData:{code:B.invalid_return_type,returnTypeError:g}})}const u={errorMap:n.common.contextualErrorMap},y=n.data;if(this._def.returns instanceof sS){const m=this;return Ei(async function(...g){const S=new Pl([]),C=await m._def.args.parseAsync(g,u).catch(pa=>{throw S.addIssue(r(g,pa)),S}),Ne=await Reflect.apply(y,this,C);return await m._def.returns._def.type.parseAsync(Ne,u).catch(pa=>{throw S.addIssue(c(Ne,pa)),S})})}else{const m=this;return Ei(function(...g){const S=m._def.args.safeParse(g,u);if(!S.success)throw new Pl([r(g,S.error)]);const C=Reflect.apply(y,this,S.data),Ne=m._def.returns.safeParse(C,u);if(!Ne.success)throw new Pl([c(C,Ne.error)]);return Ne.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...a){return new Xw({...this._def,args:Qb.create(a).rest(eg.create())})}returns(a){return new Xw({...this._def,returns:a})}implement(a){return this.parse(a)}strictImplement(a){return this.parse(a)}static create(a,n,r){return new Xw({args:a||Qb.create([]).rest(eg.create()),returns:n||eg.create(),typeName:ke.ZodFunction,...Ve(r)})}},$k=class extends Qe{get schema(){return this._def.getter()}_parse(a){const{ctx:n}=this._processInputParams(a);return this._def.getter()._parse({data:n.data,path:n.path,parent:n})}};$k.create=(o,a)=>new $k({getter:o,typeName:ke.ZodLazy,...Ve(a)});var Qk=class extends Qe{_parse(a){if(a.data!==this._def.value){const n=this._getOrReturnCtx(a);return K(n,{received:n.data,code:B.invalid_literal,expected:this._def.value}),je}return{status:"valid",value:a.data}}get value(){return this._def.value}};Qk.create=(o,a)=>new Qk({value:o,typeName:ke.ZodLiteral,...Ve(a)});function ane(o,a){return new Dw({values:o,typeName:ke.ZodEnum,...Ve(a)})}var Dw=class $D extends Qe{constructor(){super(...arguments),PS.set(this,void 0)}_parse(a){if(typeof a.data!="string"){const n=this._getOrReturnCtx(a),r=this._def.values;return K(n,{expected:dt.joinValues(r),received:n.parsedType,code:B.invalid_type}),je}if(dT(this,PS,"f")||Zae(this,PS,new Set(this._def.values),"f"),!dT(this,PS,"f").has(a.data)){const n=this._getOrReturnCtx(a),r=this._def.values;return K(n,{received:n.data,code:B.invalid_enum_value,options:r}),je}return Ei(a.data)}get options(){return this._def.values}get enum(){const a={};for(const n of this._def.values)a[n]=n;return a}get Values(){const a={};for(const n of this._def.values)a[n]=n;return a}get Enum(){const a={};for(const n of this._def.values)a[n]=n;return a}extract(a,n=this._def){return $D.create(a,{...this._def,...n})}exclude(a,n=this._def){return $D.create(this.options.filter(r=>!a.includes(r)),{...this._def,...n})}};PS=new WeakMap;Dw.create=ane;var Gk=class extends Qe{constructor(){super(...arguments),NS.set(this,void 0)}_parse(a){const n=dt.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(a);if(r.parsedType!==ae.string&&r.parsedType!==ae.number){const c=dt.objectValues(n);return K(r,{expected:dt.joinValues(c),received:r.parsedType,code:B.invalid_type}),je}if(dT(this,NS,"f")||Zae(this,NS,new Set(dt.getValidEnumValues(this._def.values)),"f"),!dT(this,NS,"f").has(a.data)){const c=dt.objectValues(n);return K(r,{received:r.data,code:B.invalid_enum_value,options:c}),je}return Ei(a.data)}get enum(){return this._def.values}};NS=new WeakMap;Gk.create=(o,a)=>new Gk({values:o,typeName:ke.ZodNativeEnum,...Ve(a)});var sS=class extends Qe{unwrap(){return this._def.type}_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==ae.promise&&n.common.async===!1)return K(n,{code:B.invalid_type,expected:ae.promise,received:n.parsedType}),je;const r=n.parsedType===ae.promise?n.data:Promise.resolve(n.data);return Ei(r.then(c=>this._def.type.parseAsync(c,{path:n.path,errorMap:n.common.contextualErrorMap})))}};sS.create=(o,a)=>new sS({type:o,typeName:ke.ZodPromise,...Ve(a)});var Ku=class extends Qe{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ke.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(a){const{status:n,ctx:r}=this._processInputParams(a),c=this._def.effect||null,u={addIssue:y=>{K(r,y),y.fatal?n.abort():n.dirty()},get path(){return r.path}};if(u.addIssue=u.addIssue.bind(u),c.type==="preprocess"){const y=c.transform(r.data,u);if(r.common.async)return Promise.resolve(y).then(async m=>{if(n.value==="aborted")return je;const g=await this._def.schema._parseAsync({data:m,path:r.path,parent:r});return g.status==="aborted"?je:g.status==="dirty"||n.value==="dirty"?aS(g.value):g});{if(n.value==="aborted")return je;const m=this._def.schema._parseSync({data:y,path:r.path,parent:r});return m.status==="aborted"?je:m.status==="dirty"||n.value==="dirty"?aS(m.value):m}}if(c.type==="refinement"){const y=m=>{const g=c.refinement(m,u);if(r.common.async)return Promise.resolve(g);if(g instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return m};if(r.common.async===!1){const m=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return m.status==="aborted"?je:(m.status==="dirty"&&n.dirty(),y(m.value),{status:n.value,value:m.value})}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(m=>m.status==="aborted"?je:(m.status==="dirty"&&n.dirty(),y(m.value).then(()=>({status:n.value,value:m.value}))))}if(c.type==="transform")if(r.common.async===!1){const y=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!_k(y))return y;const m=c.transform(y.value,u);if(m instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:n.value,value:m}}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(y=>_k(y)?Promise.resolve(c.transform(y.value,u)).then(m=>({status:n.value,value:m})):y);dt.assertNever(c)}};Ku.create=(o,a,n)=>new Ku({schema:o,typeName:ke.ZodEffects,effect:a,...Ve(n)});Ku.createWithPreprocess=(o,a,n)=>new Ku({schema:a,effect:{type:"preprocess",transform:o},typeName:ke.ZodEffects,...Ve(n)});var jd=class extends Qe{_parse(a){return this._getType(a)===ae.undefined?Ei(void 0):this._def.innerType._parse(a)}unwrap(){return this._def.innerType}};jd.create=(o,a)=>new jd({innerType:o,typeName:ke.ZodOptional,...Ve(a)});var Gb=class extends Qe{_parse(a){return this._getType(a)===ae.null?Ei(null):this._def.innerType._parse(a)}unwrap(){return this._def.innerType}};Gb.create=(o,a)=>new Gb({innerType:o,typeName:ke.ZodNullable,...Ve(a)});var Yk=class extends Qe{_parse(a){const{ctx:n}=this._processInputParams(a);let r=n.data;return n.parsedType===ae.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:n.path,parent:n})}removeDefault(){return this._def.innerType}};Yk.create=(o,a)=>new Yk({innerType:o,typeName:ke.ZodDefault,defaultValue:typeof a.default=="function"?a.default:()=>a.default,...Ve(a)});var Jk=class extends Qe{_parse(a){const{ctx:n}=this._processInputParams(a),r={...n,common:{...n.common,issues:[]}},c=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return qk(c)?c.then(u=>({status:"valid",value:u.status==="valid"?u.value:this._def.catchValue({get error(){return new Pl(r.common.issues)},input:r.data})})):{status:"valid",value:c.status==="valid"?c.value:this._def.catchValue({get error(){return new Pl(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}};Jk.create=(o,a)=>new Jk({innerType:o,typeName:ke.ZodCatch,catchValue:typeof a.catch=="function"?a.catch:()=>a.catch,...Ve(a)});var IT=class extends Qe{_parse(a){if(this._getType(a)!==ae.nan){const r=this._getOrReturnCtx(a);return K(r,{code:B.invalid_type,expected:ae.nan,received:r.parsedType}),je}return{status:"valid",value:a.data}}};IT.create=o=>new IT({typeName:ke.ZodNaN,...Ve(o)});var Dge=Symbol("zod_brand"),T9=class extends Qe{_parse(a){const{ctx:n}=this._processInputParams(a),r=n.data;return this._def.type._parse({data:r,path:n.path,parent:n})}unwrap(){return this._def.type}},P9=class nne extends Qe{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.common.async)return(async()=>{const u=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return u.status==="aborted"?je:u.status==="dirty"?(n.dirty(),aS(u.value)):this._def.out._parseAsync({data:u.value,path:r.path,parent:r})})();{const c=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return c.status==="aborted"?je:c.status==="dirty"?(n.dirty(),{status:"dirty",value:c.value}):this._def.out._parseSync({data:c.value,path:r.path,parent:r})}}static create(a,n){return new nne({in:a,out:n,typeName:ke.ZodPipeline})}},Kk=class extends Qe{_parse(a){const n=this._def.innerType._parse(a),r=c=>(_k(c)&&(c.value=Object.freeze(c.value)),c);return qk(n)?n.then(c=>r(c)):r(n)}unwrap(){return this._def.innerType}};Kk.create=(o,a)=>new Kk({innerType:o,typeName:ke.ZodReadonly,...Ve(a)});function one(o,a={},n){return o?uS.create().superRefine((r,c)=>{var u,y;if(!o(r)){const m=typeof a=="function"?a(r):typeof a=="string"?{message:a}:a,g=(y=(u=m.fatal)!==null&&u!==void 0?u:n)!==null&&y!==void 0?y:!0,S=typeof m=="string"?{message:m}:m;c.addIssue({code:"custom",...S,fatal:g})}}):uS.create()}var xge={object:rl.lazycreate},ke;(function(o){o.ZodString="ZodString",o.ZodNumber="ZodNumber",o.ZodNaN="ZodNaN",o.ZodBigInt="ZodBigInt",o.ZodBoolean="ZodBoolean",o.ZodDate="ZodDate",o.ZodSymbol="ZodSymbol",o.ZodUndefined="ZodUndefined",o.ZodNull="ZodNull",o.ZodAny="ZodAny",o.ZodUnknown="ZodUnknown",o.ZodNever="ZodNever",o.ZodVoid="ZodVoid",o.ZodArray="ZodArray",o.ZodObject="ZodObject",o.ZodUnion="ZodUnion",o.ZodDiscriminatedUnion="ZodDiscriminatedUnion",o.ZodIntersection="ZodIntersection",o.ZodTuple="ZodTuple",o.ZodRecord="ZodRecord",o.ZodMap="ZodMap",o.ZodSet="ZodSet",o.ZodFunction="ZodFunction",o.ZodLazy="ZodLazy",o.ZodLiteral="ZodLiteral",o.ZodEnum="ZodEnum",o.ZodEffects="ZodEffects",o.ZodNativeEnum="ZodNativeEnum",o.ZodOptional="ZodOptional",o.ZodNullable="ZodNullable",o.ZodDefault="ZodDefault",o.ZodCatch="ZodCatch",o.ZodPromise="ZodPromise",o.ZodBranded="ZodBranded",o.ZodPipeline="ZodPipeline",o.ZodReadonly="ZodReadonly"})(ke||(ke={}));var Vge=(o,a={message:`Input not instance of ${o.name}`})=>one(n=>n instanceof o,a),ine=pS.create,rne=Fk.create,Hge=IT.create,Lge=Ek.create,lne=Dk.create,Zge=xk.create,$ge=mT.create,Qge=Vk.create,Gge=Hk.create,Yge=uS.create,Jge=eg.create,Kge=rh.create,Xge=zT.create,eSe=Wg.create,tSe=rl.create,aSe=rl.strictCreate,nSe=Lk.create,oSe=Jae.create,iSe=Zk.create,rSe=Qb.create,lSe=ene.create,cSe=hT.create,pSe=bT.create,uSe=tne.create,sSe=$k.create,ySe=Qk.create,dSe=Dw.create,mSe=Gk.create,zSe=sS.create,x9=Ku.create,hSe=jd.create,bSe=Gb.create,ISe=Ku.createWithPreprocess,gSe=P9.create,SSe=()=>ine().optional(),vSe=()=>rne().optional(),ASe=()=>lne().optional(),CSe={string:o=>pS.create({...o,coerce:!0}),number:o=>Fk.create({...o,coerce:!0}),boolean:o=>Dk.create({...o,coerce:!0}),bigint:o=>Ek.create({...o,coerce:!0}),date:o=>xk.create({...o,coerce:!0})},WSe=je,W=Object.freeze({__proto__:null,defaultErrorMap:cS,setErrorMap:Wge,getErrorMap:sT,makeIssue:yT,EMPTY_PATH:Uge,addIssueToContext:K,ParseStatus:Hr,INVALID:je,DIRTY:aS,OK:Ei,isAborted:ED,isDirty:DD,isValid:_k,isAsync:qk,get util(){return dt},get objectUtil(){return FD},ZodParsedType:ae,getParsedType:Zh,ZodType:Qe,datetimeRegex:Gae,ZodString:pS,ZodNumber:Fk,ZodBigInt:Ek,ZodBoolean:Dk,ZodDate:xk,ZodSymbol:mT,ZodUndefined:Vk,ZodNull:Hk,ZodAny:uS,ZodUnknown:eg,ZodNever:rh,ZodVoid:zT,ZodArray:Wg,ZodObject:rl,ZodUnion:Lk,ZodDiscriminatedUnion:Jae,ZodIntersection:Zk,ZodTuple:Qb,ZodRecord:ene,ZodMap:hT,ZodSet:bT,ZodFunction:tne,ZodLazy:$k,ZodLiteral:Qk,ZodEnum:Dw,ZodNativeEnum:Gk,ZodPromise:sS,ZodEffects:Ku,ZodTransformer:Ku,ZodOptional:jd,ZodNullable:Gb,ZodDefault:Yk,ZodCatch:Jk,ZodNaN:IT,BRAND:Dge,ZodBranded:T9,ZodPipeline:P9,ZodReadonly:Kk,custom:one,Schema:Qe,ZodSchema:Qe,late:xge,get ZodFirstPartyTypeKind(){return ke},coerce:CSe,any:Yge,array:eSe,bigint:Lge,boolean:lne,date:Zge,discriminatedUnion:oSe,effect:x9,enum:dSe,function:uSe,instanceof:Vge,intersection:iSe,lazy:sSe,literal:ySe,map:cSe,nan:Hge,nativeEnum:mSe,never:Kge,null:Gge,nullable:bSe,number:rne,object:tSe,oboolean:ASe,onumber:vSe,optional:hSe,ostring:SSe,pipeline:gSe,preprocess:ISe,promise:zSe,record:lSe,set:pSe,strictObject:aSe,string:ine,symbol:$ge,transformer:x9,tuple:rSe,undefined:Qge,union:nSe,unknown:Jge,void:Xge,NEVER:WSe,ZodIssueCode:B,quotelessJson:Cge,ZodError:Pl}),USe=W.enum(["ADMIN","MANAGER","CHEF","STAFF"]),kSe=W.object({id:W.number(),email:W.string().email(),firstName:W.string(),lastName:W.string(),passwordHash:W.string(),role:USe,restaurantId:W.number(),createdAt:W.date(),updatedAt:W.date()}),RSe=kSe.omit({id:!0,createdAt:!0,updatedAt:!0});RSe.partial();w.ShiftStatusSchema;w.ShiftCreateInputSchema;W.object({id:W.number(),restaurantId:W.number()});W.object({id:W.number(),inventoryId:W.number(),ingredientId:W.number(),quantity:W.number(),unit:W.string(),minQuantity:W.number(),lastUpdated:W.date()});var cne=W.object({ingredientId:W.number(),quantity:W.string(),unit:W.string()});W.object({id:W.number(),stepNumber:W.number(),instruction:W.string(),imageUrl:W.string().nullable(),createdAt:W.date().optional().nullable(),updatedAt:W.date().optional().nullable(),isDeleted:W.boolean(),deleted:W.date().nullable()});var pne=W.object({stepNumber:W.number(),instruction:W.string(),imageUrl:W.string().optional()}),fSe=W.object({name:W.string(),imageUrl:W.array(W.string()),description:W.string().optional(),servings:W.number(),cookTime:W.number(),restaurantId:W.number(),cookBookId:W.number(),ingredients:W.array(cne),instructions:W.array(pne)});W.object({id:W.number().optional(),name:W.string().optional(),imageUrl:W.string().optional()||W.array(W.string()).optional(),description:W.string().optional().nullish(),servings:W.number(),cookTime:W.number(),prepTime:W.number(),frequency:W.number().optional().nullable(),foodCost:W.number().optional().nullable(),restaurantId:W.number().optional().nullable(),cookBookId:W.number().optional().nullable(),isDeleted:W.boolean().default(!1).optional(),ingredients:W.array(cne),instructions:W.array(pne)});fSe.partial();var N9=W.object({id:W.number(),orderId:W.number(),ingredientId:W.number(),quantity:W.number(),unit:W.string(),price:W.number()});N9.omit({id:!0});N9.partial().omit({id:!0,orderId:!0});var jSe=W.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),MSe=W.object({id:W.number(),name:W.string()}),OSe=W.object({id:W.number(),restaurantId:W.number(),vendorId:W.number(),vendor:MSe,status:jSe,items:W.array(N9),createdAt:W.date(),updatedAt:W.date()}),wSe=OSe.omit({id:!0,createdAt:!0,updatedAt:!0}),TSe=wSe.partial();W.object({id:W.number(),name:W.string(),category:W.string()});var Kg=W.object({id:W.number(),name:W.string(),imageUrl:W.string().optional().nullable(),createdAt:W.date(),updatedAt:W.date()}),une=Kg.omit({id:!0,createdAt:!0,updatedAt:!0}),PSe=une.partial(),NSe=W.object({id:W.number(),name:W.string(),contact:W.string(),email:W.string().email(),phone:W.string(),orders:W.array(TSe),createdAt:W.date(),updatedAt:W.date()}),BSe=NSe.omit({id:!0,createdAt:!0,updatedAt:!0,orders:!0});BSe.partial();var lh={INTERNAL_SERVER_ERROR:500,OK:200,BAD_REQUEST:400,CREATED:201},Ug=W.object({message:W.string()});W.object({status:W.literal(lh.INTERNAL_SERVER_ERROR),body:Ug});W.discriminatedUnion("status",[W.object({status:W.literal(lh.OK),body:W.object({access_token:W.string(),session_token:W.string()})}),W.object({status:W.literal(lh.INTERNAL_SERVER_ERROR),body:Ug})]);W.discriminatedUnion("status",[W.object({status:W.literal(lh.CREATED),body:w.UserSchema.omit({passwordHash:!0})}),W.object({status:W.literal(lh.BAD_REQUEST),body:Ug})]);W.discriminatedUnion("status",[W.object({status:W.literal(lh.OK),body:Ug}),W.object({status:W.literal(lh.BAD_REQUEST),body:Ug})]);W.discriminatedUnion("status",[W.object({status:W.literal(lh.OK),body:Ug}),W.object({status:W.literal(lh.BAD_REQUEST),body:Ug})]);var mt;(function(o){o.assertEqual=c=>c;function a(c){}o.assertIs=a;function n(c){throw new Error}o.assertNever=n,o.arrayToEnum=c=>{const u={};for(const y of c)u[y]=y;return u},o.getValidEnumValues=c=>{const u=o.objectKeys(c).filter(m=>typeof c[c[m]]!="number"),y={};for(const m of u)y[m]=c[m];return o.objectValues(y)},o.objectValues=c=>o.objectKeys(c).map(function(u){return c[u]}),o.objectKeys=typeof Object.keys=="function"?c=>Object.keys(c):c=>{const u=[];for(const y in c)Object.prototype.hasOwnProperty.call(c,y)&&u.push(y);return u},o.find=(c,u)=>{for(const y of c)if(u(y))return y},o.isInteger=typeof Number.isInteger=="function"?c=>Number.isInteger(c):c=>typeof c=="number"&&isFinite(c)&&Math.floor(c)===c;function r(c,u=" | "){return c.map(y=>typeof y=="string"?`'${y}'`:y).join(u)}o.joinValues=r,o.jsonStringifyReplacer=(c,u)=>typeof u=="bigint"?u.toString():u})(mt||(mt={}));var QD;(function(o){o.mergeShapes=(a,n)=>({...a,...n})})(QD||(QD={}));var ne=mt.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),$h=o=>{switch(typeof o){case"undefined":return ne.undefined;case"string":return ne.string;case"number":return isNaN(o)?ne.nan:ne.number;case"boolean":return ne.boolean;case"function":return ne.function;case"bigint":return ne.bigint;case"symbol":return ne.symbol;case"object":return Array.isArray(o)?ne.array:o===null?ne.null:o.then&&typeof o.then=="function"&&o.catch&&typeof o.catch=="function"?ne.promise:typeof Map<"u"&&o instanceof Map?ne.map:typeof Set<"u"&&o instanceof Set?ne.set:typeof Date<"u"&&o instanceof Date?ne.date:ne.object;default:return ne.unknown}},_=mt.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),_Se=o=>JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:"),Nl=class sne extends Error{constructor(a){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const n=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,n):this.__proto__=n,this.name="ZodError",this.issues=a}get errors(){return this.issues}format(a){const n=a||function(u){return u.message},r={_errors:[]},c=u=>{for(const y of u.issues)if(y.code==="invalid_union")y.unionErrors.map(c);else if(y.code==="invalid_return_type")c(y.returnTypeError);else if(y.code==="invalid_arguments")c(y.argumentsError);else if(y.path.length===0)r._errors.push(n(y));else{let m=r,g=0;for(;g<y.path.length;){const S=y.path[g];g===y.path.length-1?(m[S]=m[S]||{_errors:[]},m[S]._errors.push(n(y))):m[S]=m[S]||{_errors:[]},m=m[S],g++}}};return c(this),r}static assert(a){if(!(a instanceof sne))throw new Error(`Not a ZodError: ${a}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,mt.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(a=n=>n.message){const n={},r=[];for(const c of this.issues)c.path.length>0?(n[c.path[0]]=n[c.path[0]]||[],n[c.path[0]].push(a(c))):r.push(a(c));return{formErrors:r,fieldErrors:n}}get formErrors(){return this.flatten()}};Nl.create=o=>new Nl(o);var yS=(o,a)=>{let n;switch(o.code){case _.invalid_type:o.received===ne.undefined?n="Required":n=`Expected ${o.expected}, received ${o.received}`;break;case _.invalid_literal:n=`Invalid literal value, expected ${JSON.stringify(o.expected,mt.jsonStringifyReplacer)}`;break;case _.unrecognized_keys:n=`Unrecognized key(s) in object: ${mt.joinValues(o.keys,", ")}`;break;case _.invalid_union:n="Invalid input";break;case _.invalid_union_discriminator:n=`Invalid discriminator value. Expected ${mt.joinValues(o.options)}`;break;case _.invalid_enum_value:n=`Invalid enum value. Expected ${mt.joinValues(o.options)}, received '${o.received}'`;break;case _.invalid_arguments:n="Invalid function arguments";break;case _.invalid_return_type:n="Invalid function return type";break;case _.invalid_date:n="Invalid date";break;case _.invalid_string:typeof o.validation=="object"?"includes"in o.validation?(n=`Invalid input: must include "${o.validation.includes}"`,typeof o.validation.position=="number"&&(n=`${n} at one or more positions greater than or equal to ${o.validation.position}`)):"startsWith"in o.validation?n=`Invalid input: must start with "${o.validation.startsWith}"`:"endsWith"in o.validation?n=`Invalid input: must end with "${o.validation.endsWith}"`:mt.assertNever(o.validation):o.validation!=="regex"?n=`Invalid ${o.validation}`:n="Invalid";break;case _.too_small:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at least":"more than"} ${o.minimum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at least":"over"} ${o.minimum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${o.minimum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly equal to ":o.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(o.minimum))}`:n="Invalid input";break;case _.too_big:o.type==="array"?n=`Array must contain ${o.exact?"exactly":o.inclusive?"at most":"less than"} ${o.maximum} element(s)`:o.type==="string"?n=`String must contain ${o.exact?"exactly":o.inclusive?"at most":"under"} ${o.maximum} character(s)`:o.type==="number"?n=`Number must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="bigint"?n=`BigInt must be ${o.exact?"exactly":o.inclusive?"less than or equal to":"less than"} ${o.maximum}`:o.type==="date"?n=`Date must be ${o.exact?"exactly":o.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(o.maximum))}`:n="Invalid input";break;case _.custom:n="Invalid input";break;case _.invalid_intersection_types:n="Intersection results could not be merged";break;case _.not_multiple_of:n=`Number must be a multiple of ${o.multipleOf}`;break;case _.not_finite:n="Number must be finite";break;default:n=a.defaultError,mt.assertNever(o)}return{message:n}},yne=yS;function qSe(o){yne=o}function gT(){return yne}var ST=o=>{const{data:a,path:n,errorMaps:r,issueData:c}=o,u=[...n,...c.path||[]],y={...c,path:u};if(c.message!==void 0)return{...c,path:u,message:c.message};let m="";const g=r.filter(S=>!!S).slice().reverse();for(const S of g)m=S(y,{data:a,defaultError:m}).message;return{...c,path:u,message:m}},FSe=[];function X(o,a){const n=gT(),r=ST({issueData:a,data:o.data,path:o.path,errorMaps:[o.common.contextualErrorMap,o.schemaErrorMap,n,n===yS?void 0:yS].filter(c=>!!c)});o.common.issues.push(r)}var Lr=class dne{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(a,n){const r=[];for(const c of n){if(c.status==="aborted")return Me;c.status==="dirty"&&a.dirty(),r.push(c.value)}return{status:a.value,value:r}}static async mergeObjectAsync(a,n){const r=[];for(const c of n){const u=await c.key,y=await c.value;r.push({key:u,value:y})}return dne.mergeObjectSync(a,r)}static mergeObjectSync(a,n){const r={};for(const c of n){const{key:u,value:y}=c;if(u.status==="aborted"||y.status==="aborted")return Me;u.status==="dirty"&&a.dirty(),y.status==="dirty"&&a.dirty(),u.value!=="__proto__"&&(typeof y.value<"u"||c.alwaysSet)&&(r[u.value]=y.value)}return{status:a.value,value:r}}},Me=Object.freeze({status:"aborted"}),nS=o=>({status:"dirty",value:o}),Di=o=>({status:"valid",value:o}),GD=o=>o.status==="aborted",YD=o=>o.status==="dirty",Xk=o=>o.status==="valid",eR=o=>typeof Promise<"u"&&o instanceof Promise;function vT(o,a,n,r){if(n==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof a=="function"?o!==a||!r:!a.has(o))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?r:n==="a"?r.call(o):r?r.value:a.get(o)}function mne(o,a,n,r,c){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!c)throw new TypeError("Private accessor was defined without a setter");if(typeof a=="function"?o!==a||!c:!a.has(o))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?c.call(o,n):c?c.value=n:a.set(o,n),n}var de;(function(o){o.errToObj=a=>typeof a=="string"?{message:a}:a||{},o.toString=a=>typeof a=="string"?a:a==null?void 0:a.message})(de||(de={}));var _S,qS,Ld=class{constructor(o,a,n,r){this._cachedPath=[],this.parent=o,this.data=a,this._path=n,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},V9=(o,a)=>{if(Xk(a))return{success:!0,data:a.value};if(!o.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const n=new Nl(o.common.issues);return this._error=n,this._error}}};function He(o){if(!o)return{};const{errorMap:a,invalid_type_error:n,required_error:r,description:c}=o;if(a&&(n||r))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return a?{errorMap:a,description:c}:{errorMap:(y,m)=>{var g,S;const{message:C}=o;return y.code==="invalid_enum_value"?{message:C??m.defaultError}:typeof m.data>"u"?{message:(g=C??r)!==null&&g!==void 0?g:m.defaultError}:y.code!=="invalid_type"?{message:m.defaultError}:{message:(S=C??n)!==null&&S!==void 0?S:m.defaultError}},description:c}}var Ge=class{constructor(o){this.spa=this.safeParseAsync,this._def=o,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(o){return $h(o.data)}_getOrReturnCtx(o,a){return a||{common:o.parent.common,data:o.data,parsedType:$h(o.data),schemaErrorMap:this._def.errorMap,path:o.path,parent:o.parent}}_processInputParams(o){return{status:new Lr,ctx:{common:o.parent.common,data:o.data,parsedType:$h(o.data),schemaErrorMap:this._def.errorMap,path:o.path,parent:o.parent}}}_parseSync(o){const a=this._parse(o);if(eR(a))throw new Error("Synchronous parse encountered promise.");return a}_parseAsync(o){const a=this._parse(o);return Promise.resolve(a)}parse(o,a){const n=this.safeParse(o,a);if(n.success)return n.data;throw n.error}safeParse(o,a){var n;const r={common:{issues:[],async:(n=a==null?void 0:a.async)!==null&&n!==void 0?n:!1,contextualErrorMap:a==null?void 0:a.errorMap},path:(a==null?void 0:a.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:o,parsedType:$h(o)},c=this._parseSync({data:o,path:r.path,parent:r});return V9(r,c)}async parseAsync(o,a){const n=await this.safeParseAsync(o,a);if(n.success)return n.data;throw n.error}async safeParseAsync(o,a){const n={common:{issues:[],contextualErrorMap:a==null?void 0:a.errorMap,async:!0},path:(a==null?void 0:a.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:o,parsedType:$h(o)},r=this._parse({data:o,path:n.path,parent:n}),c=await(eR(r)?r:Promise.resolve(r));return V9(n,c)}refine(o,a){const n=r=>typeof a=="string"||typeof a>"u"?{message:a}:typeof a=="function"?a(r):a;return this._refinement((r,c)=>{const u=o(r),y=()=>c.addIssue({code:_.custom,...n(r)});return typeof Promise<"u"&&u instanceof Promise?u.then(m=>m?!0:(y(),!1)):u?!0:(y(),!1)})}refinement(o,a){return this._refinement((n,r)=>o(n)?!0:(r.addIssue(typeof a=="function"?a(n,r):a),!1))}_refinement(o){return new Xu({schema:this,typeName:Re.ZodEffects,effect:{type:"refinement",refinement:o}})}superRefine(o){return this._refinement(o)}optional(){return Md.create(this,this._def)}nullable(){return Jb.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return kg.create(this,this._def)}promise(){return zS.create(this,this._def)}or(o){return lR.create([this,o],this._def)}and(o){return cR.create(this,o,this._def)}transform(o){return new Xu({...He(this._def),schema:this,typeName:Re.ZodEffects,effect:{type:"transform",transform:o}})}default(o){const a=typeof o=="function"?o:()=>o;return new yR({...He(this._def),innerType:this,defaultValue:a,typeName:Re.ZodDefault})}brand(){return new B9({typeName:Re.ZodBranded,type:this,...He(this._def)})}catch(o){const a=typeof o=="function"?o:()=>o;return new dR({...He(this._def),innerType:this,catchValue:a,typeName:Re.ZodCatch})}describe(o){const a=this.constructor;return new a({...this._def,description:o})}pipe(o){return _9.create(this,o)}readonly(){return mR.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},ESe=/^c[^\s-]{8,}$/i,DSe=/^[0-9a-z]+$/,xSe=/^[0-9A-HJKMNP-TV-Z]{26}$/,VSe=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,HSe=/^[a-z0-9_-]{21}$/i,LSe=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,ZSe=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,$Se="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",sF,QSe=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,GSe=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,YSe=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,zne="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",JSe=new RegExp(`^${zne}$`);function hne(o){let a="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return o.precision?a=`${a}\\.\\d{${o.precision}}`:o.precision==null&&(a=`${a}(\\.\\d+)?`),a}function KSe(o){return new RegExp(`^${hne(o)}$`)}function bne(o){let a=`${zne}T${hne(o)}`;const n=[];return n.push(o.local?"Z?":"Z"),o.offset&&n.push("([+-]\\d{2}:?\\d{2})"),a=`${a}(${n.join("|")})`,new RegExp(`^${a}$`)}function XSe(o,a){return!!((a==="v4"||!a)&&QSe.test(o)||(a==="v6"||!a)&&GSe.test(o))}var dS=class FS extends Ge{_parse(a){if(this._def.coerce&&(a.data=String(a.data)),this._getType(a)!==ne.string){const u=this._getOrReturnCtx(a);return X(u,{code:_.invalid_type,expected:ne.string,received:u.parsedType}),Me}const r=new Lr;let c;for(const u of this._def.checks)if(u.kind==="min")a.data.length<u.value&&(c=this._getOrReturnCtx(a,c),X(c,{code:_.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="max")a.data.length>u.value&&(c=this._getOrReturnCtx(a,c),X(c,{code:_.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!1,message:u.message}),r.dirty());else if(u.kind==="length"){const y=a.data.length>u.value,m=a.data.length<u.value;(y||m)&&(c=this._getOrReturnCtx(a,c),y?X(c,{code:_.too_big,maximum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}):m&&X(c,{code:_.too_small,minimum:u.value,type:"string",inclusive:!0,exact:!0,message:u.message}),r.dirty())}else if(u.kind==="email")ZSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"email",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="emoji")sF||(sF=new RegExp($Se,"u")),sF.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"emoji",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="uuid")VSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"uuid",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="nanoid")HSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"nanoid",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid")ESe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"cuid",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="cuid2")DSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"cuid2",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="ulid")xSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"ulid",code:_.invalid_string,message:u.message}),r.dirty());else if(u.kind==="url")try{new URL(a.data)}catch{c=this._getOrReturnCtx(a,c),X(c,{validation:"url",code:_.invalid_string,message:u.message}),r.dirty()}else u.kind==="regex"?(u.regex.lastIndex=0,u.regex.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"regex",code:_.invalid_string,message:u.message}),r.dirty())):u.kind==="trim"?a.data=a.data.trim():u.kind==="includes"?a.data.includes(u.value,u.position)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:{includes:u.value,position:u.position},message:u.message}),r.dirty()):u.kind==="toLowerCase"?a.data=a.data.toLowerCase():u.kind==="toUpperCase"?a.data=a.data.toUpperCase():u.kind==="startsWith"?a.data.startsWith(u.value)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:{startsWith:u.value},message:u.message}),r.dirty()):u.kind==="endsWith"?a.data.endsWith(u.value)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:{endsWith:u.value},message:u.message}),r.dirty()):u.kind==="datetime"?bne(u).test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:"datetime",message:u.message}),r.dirty()):u.kind==="date"?JSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:"date",message:u.message}),r.dirty()):u.kind==="time"?KSe(u).test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{code:_.invalid_string,validation:"time",message:u.message}),r.dirty()):u.kind==="duration"?LSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"duration",code:_.invalid_string,message:u.message}),r.dirty()):u.kind==="ip"?XSe(a.data,u.version)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"ip",code:_.invalid_string,message:u.message}),r.dirty()):u.kind==="base64"?YSe.test(a.data)||(c=this._getOrReturnCtx(a,c),X(c,{validation:"base64",code:_.invalid_string,message:u.message}),r.dirty()):mt.assertNever(u);return{status:r.value,value:a.data}}_regex(a,n,r){return this.refinement(c=>a.test(c),{validation:n,code:_.invalid_string,...de.errToObj(r)})}_addCheck(a){return new FS({...this._def,checks:[...this._def.checks,a]})}email(a){return this._addCheck({kind:"email",...de.errToObj(a)})}url(a){return this._addCheck({kind:"url",...de.errToObj(a)})}emoji(a){return this._addCheck({kind:"emoji",...de.errToObj(a)})}uuid(a){return this._addCheck({kind:"uuid",...de.errToObj(a)})}nanoid(a){return this._addCheck({kind:"nanoid",...de.errToObj(a)})}cuid(a){return this._addCheck({kind:"cuid",...de.errToObj(a)})}cuid2(a){return this._addCheck({kind:"cuid2",...de.errToObj(a)})}ulid(a){return this._addCheck({kind:"ulid",...de.errToObj(a)})}base64(a){return this._addCheck({kind:"base64",...de.errToObj(a)})}ip(a){return this._addCheck({kind:"ip",...de.errToObj(a)})}datetime(a){var n,r;return typeof a=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:a}):this._addCheck({kind:"datetime",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,offset:(n=a==null?void 0:a.offset)!==null&&n!==void 0?n:!1,local:(r=a==null?void 0:a.local)!==null&&r!==void 0?r:!1,...de.errToObj(a==null?void 0:a.message)})}date(a){return this._addCheck({kind:"date",message:a})}time(a){return typeof a=="string"?this._addCheck({kind:"time",precision:null,message:a}):this._addCheck({kind:"time",precision:typeof(a==null?void 0:a.precision)>"u"?null:a==null?void 0:a.precision,...de.errToObj(a==null?void 0:a.message)})}duration(a){return this._addCheck({kind:"duration",...de.errToObj(a)})}regex(a,n){return this._addCheck({kind:"regex",regex:a,...de.errToObj(n)})}includes(a,n){return this._addCheck({kind:"includes",value:a,position:n==null?void 0:n.position,...de.errToObj(n==null?void 0:n.message)})}startsWith(a,n){return this._addCheck({kind:"startsWith",value:a,...de.errToObj(n)})}endsWith(a,n){return this._addCheck({kind:"endsWith",value:a,...de.errToObj(n)})}min(a,n){return this._addCheck({kind:"min",value:a,...de.errToObj(n)})}max(a,n){return this._addCheck({kind:"max",value:a,...de.errToObj(n)})}length(a,n){return this._addCheck({kind:"length",value:a,...de.errToObj(n)})}nonempty(a){return this.min(1,de.errToObj(a))}trim(){return new FS({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new FS({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new FS({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(a=>a.kind==="datetime")}get isDate(){return!!this._def.checks.find(a=>a.kind==="date")}get isTime(){return!!this._def.checks.find(a=>a.kind==="time")}get isDuration(){return!!this._def.checks.find(a=>a.kind==="duration")}get isEmail(){return!!this._def.checks.find(a=>a.kind==="email")}get isURL(){return!!this._def.checks.find(a=>a.kind==="url")}get isEmoji(){return!!this._def.checks.find(a=>a.kind==="emoji")}get isUUID(){return!!this._def.checks.find(a=>a.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(a=>a.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(a=>a.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(a=>a.kind==="cuid2")}get isULID(){return!!this._def.checks.find(a=>a.kind==="ulid")}get isIP(){return!!this._def.checks.find(a=>a.kind==="ip")}get isBase64(){return!!this._def.checks.find(a=>a.kind==="base64")}get minLength(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxLength(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};dS.create=o=>{var a;return new dS({checks:[],typeName:Re.ZodString,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...He(o)})};function eve(o,a){const n=(o.toString().split(".")[1]||"").length,r=(a.toString().split(".")[1]||"").length,c=n>r?n:r,u=parseInt(o.toFixed(c).replace(".","")),y=parseInt(a.toFixed(c).replace(".",""));return u%y/Math.pow(10,c)}var tR=class JD extends Ge{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(a){if(this._def.coerce&&(a.data=Number(a.data)),this._getType(a)!==ne.number){const u=this._getOrReturnCtx(a);return X(u,{code:_.invalid_type,expected:ne.number,received:u.parsedType}),Me}let r;const c=new Lr;for(const u of this._def.checks)u.kind==="int"?mt.isInteger(a.data)||(r=this._getOrReturnCtx(a,r),X(r,{code:_.invalid_type,expected:"integer",received:"float",message:u.message}),c.dirty()):u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.too_small,minimum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.too_big,maximum:u.value,type:"number",inclusive:u.inclusive,exact:!1,message:u.message}),c.dirty()):u.kind==="multipleOf"?eve(a.data,u.value)!==0&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):u.kind==="finite"?Number.isFinite(a.data)||(r=this._getOrReturnCtx(a,r),X(r,{code:_.not_finite,message:u.message}),c.dirty()):mt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,de.toString(n))}gt(a,n){return this.setLimit("min",a,!1,de.toString(n))}lte(a,n){return this.setLimit("max",a,!0,de.toString(n))}lt(a,n){return this.setLimit("max",a,!1,de.toString(n))}setLimit(a,n,r,c){return new JD({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:de.toString(c)}]})}_addCheck(a){return new JD({...this._def,checks:[...this._def.checks,a]})}int(a){return this._addCheck({kind:"int",message:de.toString(a)})}positive(a){return this._addCheck({kind:"min",value:0,inclusive:!1,message:de.toString(a)})}negative(a){return this._addCheck({kind:"max",value:0,inclusive:!1,message:de.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:0,inclusive:!0,message:de.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:0,inclusive:!0,message:de.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:de.toString(n)})}finite(a){return this._addCheck({kind:"finite",message:de.toString(a)})}safe(a){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:de.toString(a)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:de.toString(a)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}get isInt(){return!!this._def.checks.find(a=>a.kind==="int"||a.kind==="multipleOf"&&mt.isInteger(a.value))}get isFinite(){let a=null,n=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(n===null||r.value>n)&&(n=r.value):r.kind==="max"&&(a===null||r.value<a)&&(a=r.value)}return Number.isFinite(n)&&Number.isFinite(a)}};tR.create=o=>new tR({checks:[],typeName:Re.ZodNumber,coerce:(o==null?void 0:o.coerce)||!1,...He(o)});var aR=class KD extends Ge{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(a){if(this._def.coerce&&(a.data=BigInt(a.data)),this._getType(a)!==ne.bigint){const u=this._getOrReturnCtx(a);return X(u,{code:_.invalid_type,expected:ne.bigint,received:u.parsedType}),Me}let r;const c=new Lr;for(const u of this._def.checks)u.kind==="min"?(u.inclusive?a.data<u.value:a.data<=u.value)&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.too_small,type:"bigint",minimum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="max"?(u.inclusive?a.data>u.value:a.data>=u.value)&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.too_big,type:"bigint",maximum:u.value,inclusive:u.inclusive,message:u.message}),c.dirty()):u.kind==="multipleOf"?a.data%u.value!==BigInt(0)&&(r=this._getOrReturnCtx(a,r),X(r,{code:_.not_multiple_of,multipleOf:u.value,message:u.message}),c.dirty()):mt.assertNever(u);return{status:c.value,value:a.data}}gte(a,n){return this.setLimit("min",a,!0,de.toString(n))}gt(a,n){return this.setLimit("min",a,!1,de.toString(n))}lte(a,n){return this.setLimit("max",a,!0,de.toString(n))}lt(a,n){return this.setLimit("max",a,!1,de.toString(n))}setLimit(a,n,r,c){return new KD({...this._def,checks:[...this._def.checks,{kind:a,value:n,inclusive:r,message:de.toString(c)}]})}_addCheck(a){return new KD({...this._def,checks:[...this._def.checks,a]})}positive(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:de.toString(a)})}negative(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:de.toString(a)})}nonpositive(a){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:de.toString(a)})}nonnegative(a){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:de.toString(a)})}multipleOf(a,n){return this._addCheck({kind:"multipleOf",value:a,message:de.toString(n)})}get minValue(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a}get maxValue(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a}};aR.create=o=>{var a;return new aR({checks:[],typeName:Re.ZodBigInt,coerce:(a=o==null?void 0:o.coerce)!==null&&a!==void 0?a:!1,...He(o)})};var nR=class extends Ge{_parse(o){if(this._def.coerce&&(o.data=!!o.data),this._getType(o)!==ne.boolean){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.boolean,received:n.parsedType}),Me}return Di(o.data)}};nR.create=o=>new nR({typeName:Re.ZodBoolean,coerce:(o==null?void 0:o.coerce)||!1,...He(o)});var oR=class Ine extends Ge{_parse(a){if(this._def.coerce&&(a.data=new Date(a.data)),this._getType(a)!==ne.date){const u=this._getOrReturnCtx(a);return X(u,{code:_.invalid_type,expected:ne.date,received:u.parsedType}),Me}if(isNaN(a.data.getTime())){const u=this._getOrReturnCtx(a);return X(u,{code:_.invalid_date}),Me}const r=new Lr;let c;for(const u of this._def.checks)u.kind==="min"?a.data.getTime()<u.value&&(c=this._getOrReturnCtx(a,c),X(c,{code:_.too_small,message:u.message,inclusive:!0,exact:!1,minimum:u.value,type:"date"}),r.dirty()):u.kind==="max"?a.data.getTime()>u.value&&(c=this._getOrReturnCtx(a,c),X(c,{code:_.too_big,message:u.message,inclusive:!0,exact:!1,maximum:u.value,type:"date"}),r.dirty()):mt.assertNever(u);return{status:r.value,value:new Date(a.data.getTime())}}_addCheck(a){return new Ine({...this._def,checks:[...this._def.checks,a]})}min(a,n){return this._addCheck({kind:"min",value:a.getTime(),message:de.toString(n)})}max(a,n){return this._addCheck({kind:"max",value:a.getTime(),message:de.toString(n)})}get minDate(){let a=null;for(const n of this._def.checks)n.kind==="min"&&(a===null||n.value>a)&&(a=n.value);return a!=null?new Date(a):null}get maxDate(){let a=null;for(const n of this._def.checks)n.kind==="max"&&(a===null||n.value<a)&&(a=n.value);return a!=null?new Date(a):null}};oR.create=o=>new oR({checks:[],coerce:(o==null?void 0:o.coerce)||!1,typeName:Re.ZodDate,...He(o)});var AT=class extends Ge{_parse(o){if(this._getType(o)!==ne.symbol){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.symbol,received:n.parsedType}),Me}return Di(o.data)}};AT.create=o=>new AT({typeName:Re.ZodSymbol,...He(o)});var iR=class extends Ge{_parse(o){if(this._getType(o)!==ne.undefined){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.undefined,received:n.parsedType}),Me}return Di(o.data)}};iR.create=o=>new iR({typeName:Re.ZodUndefined,...He(o)});var rR=class extends Ge{_parse(o){if(this._getType(o)!==ne.null){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.null,received:n.parsedType}),Me}return Di(o.data)}};rR.create=o=>new rR({typeName:Re.ZodNull,...He(o)});var mS=class extends Ge{constructor(){super(...arguments),this._any=!0}_parse(o){return Di(o.data)}};mS.create=o=>new mS({typeName:Re.ZodAny,...He(o)});var tg=class extends Ge{constructor(){super(...arguments),this._unknown=!0}_parse(o){return Di(o.data)}};tg.create=o=>new tg({typeName:Re.ZodUnknown,...He(o)});var ch=class extends Ge{_parse(o){const a=this._getOrReturnCtx(o);return X(a,{code:_.invalid_type,expected:ne.never,received:a.parsedType}),Me}};ch.create=o=>new ch({typeName:Re.ZodNever,...He(o)});var CT=class extends Ge{_parse(o){if(this._getType(o)!==ne.undefined){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.void,received:n.parsedType}),Me}return Di(o.data)}};CT.create=o=>new CT({typeName:Re.ZodVoid,...He(o)});var kg=class eT extends Ge{_parse(a){const{ctx:n,status:r}=this._processInputParams(a),c=this._def;if(n.parsedType!==ne.array)return X(n,{code:_.invalid_type,expected:ne.array,received:n.parsedType}),Me;if(c.exactLength!==null){const y=n.data.length>c.exactLength.value,m=n.data.length<c.exactLength.value;(y||m)&&(X(n,{code:y?_.too_big:_.too_small,minimum:m?c.exactLength.value:void 0,maximum:y?c.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:c.exactLength.message}),r.dirty())}if(c.minLength!==null&&n.data.length<c.minLength.value&&(X(n,{code:_.too_small,minimum:c.minLength.value,type:"array",inclusive:!0,exact:!1,message:c.minLength.message}),r.dirty()),c.maxLength!==null&&n.data.length>c.maxLength.value&&(X(n,{code:_.too_big,maximum:c.maxLength.value,type:"array",inclusive:!0,exact:!1,message:c.maxLength.message}),r.dirty()),n.common.async)return Promise.all([...n.data].map((y,m)=>c.type._parseAsync(new Ld(n,y,n.path,m)))).then(y=>Lr.mergeArray(r,y));const u=[...n.data].map((y,m)=>c.type._parseSync(new Ld(n,y,n.path,m)));return Lr.mergeArray(r,u)}get element(){return this._def.type}min(a,n){return new eT({...this._def,minLength:{value:a,message:de.toString(n)}})}max(a,n){return new eT({...this._def,maxLength:{value:a,message:de.toString(n)}})}length(a,n){return new eT({...this._def,exactLength:{value:a,message:de.toString(n)}})}nonempty(a){return this.min(1,a)}};kg.create=(o,a)=>new kg({type:o,minLength:null,maxLength:null,exactLength:null,typeName:Re.ZodArray,...He(a)});function Xg(o){if(o instanceof ll){const a={};for(const n in o.shape){const r=o.shape[n];a[n]=Md.create(Xg(r))}return new ll({...o._def,shape:()=>a})}else return o instanceof kg?new kg({...o._def,type:Xg(o.element)}):o instanceof Md?Md.create(Xg(o.unwrap())):o instanceof Jb?Jb.create(Xg(o.unwrap())):o instanceof Yb?Yb.create(o.items.map(a=>Xg(a))):o}var ll=class yl extends Ge{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const a=this._def.shape(),n=mt.objectKeys(a);return this._cached={shape:a,keys:n}}_parse(a){if(this._getType(a)!==ne.object){const S=this._getOrReturnCtx(a);return X(S,{code:_.invalid_type,expected:ne.object,received:S.parsedType}),Me}const{status:r,ctx:c}=this._processInputParams(a),{shape:u,keys:y}=this._getCached(),m=[];if(!(this._def.catchall instanceof ch&&this._def.unknownKeys==="strip"))for(const S in c.data)y.includes(S)||m.push(S);const g=[];for(const S of y){const C=u[S],Ne=c.data[S];g.push({key:{status:"valid",value:S},value:C._parse(new Ld(c,Ne,c.path,S)),alwaysSet:S in c.data})}if(this._def.catchall instanceof ch){const S=this._def.unknownKeys;if(S==="passthrough")for(const C of m)g.push({key:{status:"valid",value:C},value:{status:"valid",value:c.data[C]}});else if(S==="strict")m.length>0&&(X(c,{code:_.unrecognized_keys,keys:m}),r.dirty());else if(S!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const S=this._def.catchall;for(const C of m){const Ne=c.data[C];g.push({key:{status:"valid",value:C},value:S._parse(new Ld(c,Ne,c.path,C)),alwaysSet:C in c.data})}}return c.common.async?Promise.resolve().then(async()=>{const S=[];for(const C of g){const Ne=await C.key,La=await C.value;S.push({key:Ne,value:La,alwaysSet:C.alwaysSet})}return S}).then(S=>Lr.mergeObjectSync(r,S)):Lr.mergeObjectSync(r,g)}get shape(){return this._def.shape()}strict(a){return de.errToObj,new yl({...this._def,unknownKeys:"strict",...a!==void 0?{errorMap:(n,r)=>{var c,u,y,m;const g=(y=(u=(c=this._def).errorMap)===null||u===void 0?void 0:u.call(c,n,r).message)!==null&&y!==void 0?y:r.defaultError;return n.code==="unrecognized_keys"?{message:(m=de.errToObj(a).message)!==null&&m!==void 0?m:g}:{message:g}}}:{}})}strip(){return new yl({...this._def,unknownKeys:"strip"})}passthrough(){return new yl({...this._def,unknownKeys:"passthrough"})}extend(a){return new yl({...this._def,shape:()=>({...this._def.shape(),...a})})}merge(a){return new yl({unknownKeys:a._def.unknownKeys,catchall:a._def.catchall,shape:()=>({...this._def.shape(),...a._def.shape()}),typeName:Re.ZodObject})}setKey(a,n){return this.augment({[a]:n})}catchall(a){return new yl({...this._def,catchall:a})}pick(a){const n={};return mt.objectKeys(a).forEach(r=>{a[r]&&this.shape[r]&&(n[r]=this.shape[r])}),new yl({...this._def,shape:()=>n})}omit(a){const n={};return mt.objectKeys(this.shape).forEach(r=>{a[r]||(n[r]=this.shape[r])}),new yl({...this._def,shape:()=>n})}deepPartial(){return Xg(this)}partial(a){const n={};return mt.objectKeys(this.shape).forEach(r=>{const c=this.shape[r];a&&!a[r]?n[r]=c:n[r]=c.optional()}),new yl({...this._def,shape:()=>n})}required(a){const n={};return mt.objectKeys(this.shape).forEach(r=>{if(a&&!a[r])n[r]=this.shape[r];else{let u=this.shape[r];for(;u instanceof Md;)u=u._def.innerType;n[r]=u}}),new yl({...this._def,shape:()=>n})}keyof(){return Wne(mt.objectKeys(this.shape))}};ll.create=(o,a)=>new ll({shape:()=>o,unknownKeys:"strip",catchall:ch.create(),typeName:Re.ZodObject,...He(a)});ll.strictCreate=(o,a)=>new ll({shape:()=>o,unknownKeys:"strict",catchall:ch.create(),typeName:Re.ZodObject,...He(a)});ll.lazycreate=(o,a)=>new ll({shape:o,unknownKeys:"strip",catchall:ch.create(),typeName:Re.ZodObject,...He(a)});var lR=class extends Ge{_parse(o){const{ctx:a}=this._processInputParams(o),n=this._def.options;function r(c){for(const y of c)if(y.result.status==="valid")return y.result;for(const y of c)if(y.result.status==="dirty")return a.common.issues.push(...y.ctx.common.issues),y.result;const u=c.map(y=>new Nl(y.ctx.common.issues));return X(a,{code:_.invalid_union,unionErrors:u}),Me}if(a.common.async)return Promise.all(n.map(async c=>{const u={...a,common:{...a.common,issues:[]},parent:null};return{result:await c._parseAsync({data:a.data,path:a.path,parent:u}),ctx:u}})).then(r);{let c;const u=[];for(const m of n){const g={...a,common:{...a.common,issues:[]},parent:null},S=m._parseSync({data:a.data,path:a.path,parent:g});if(S.status==="valid")return S;S.status==="dirty"&&!c&&(c={result:S,ctx:g}),g.common.issues.length&&u.push(g.common.issues)}if(c)return a.common.issues.push(...c.ctx.common.issues),c.result;const y=u.map(m=>new Nl(m));return X(a,{code:_.invalid_union,unionErrors:y}),Me}}get options(){return this._def.options}};lR.create=(o,a)=>new lR({options:o,typeName:Re.ZodUnion,...He(a)});var em=o=>o instanceof pR?em(o.schema):o instanceof Xu?em(o.innerType()):o instanceof uR?[o.value]:o instanceof xw?o.options:o instanceof sR?mt.objectValues(o.enum):o instanceof yR?em(o._def.innerType):o instanceof iR?[void 0]:o instanceof rR?[null]:o instanceof Md?[void 0,...em(o.unwrap())]:o instanceof Jb?[null,...em(o.unwrap())]:o instanceof B9||o instanceof mR?em(o.unwrap()):o instanceof dR?em(o._def.innerType):[],gne=class Sne extends Ge{_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==ne.object)return X(n,{code:_.invalid_type,expected:ne.object,received:n.parsedType}),Me;const r=this.discriminator,c=n.data[r],u=this.optionsMap.get(c);return u?n.common.async?u._parseAsync({data:n.data,path:n.path,parent:n}):u._parseSync({data:n.data,path:n.path,parent:n}):(X(n,{code:_.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),Me)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(a,n,r){const c=new Map;for(const u of n){const y=em(u.shape[a]);if(!y.length)throw new Error(`A discriminator value for key \`${a}\` could not be extracted from all schema options`);for(const m of y){if(c.has(m))throw new Error(`Discriminator property ${String(a)} has duplicate value ${String(m)}`);c.set(m,u)}}return new Sne({typeName:Re.ZodDiscriminatedUnion,discriminator:a,options:n,optionsMap:c,...He(r)})}};function XD(o,a){const n=$h(o),r=$h(a);if(o===a)return{valid:!0,data:o};if(n===ne.object&&r===ne.object){const c=mt.objectKeys(a),u=mt.objectKeys(o).filter(m=>c.indexOf(m)!==-1),y={...o,...a};for(const m of u){const g=XD(o[m],a[m]);if(!g.valid)return{valid:!1};y[m]=g.data}return{valid:!0,data:y}}else if(n===ne.array&&r===ne.array){if(o.length!==a.length)return{valid:!1};const c=[];for(let u=0;u<o.length;u++){const y=o[u],m=a[u],g=XD(y,m);if(!g.valid)return{valid:!1};c.push(g.data)}return{valid:!0,data:c}}else return n===ne.date&&r===ne.date&&+o==+a?{valid:!0,data:o}:{valid:!1}}var cR=class extends Ge{_parse(o){const{status:a,ctx:n}=this._processInputParams(o),r=(c,u)=>{if(GD(c)||GD(u))return Me;const y=XD(c.value,u.value);return y.valid?((YD(c)||YD(u))&&a.dirty(),{status:a.value,value:y.data}):(X(n,{code:_.invalid_intersection_types}),Me)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then(([c,u])=>r(c,u)):r(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}};cR.create=(o,a,n)=>new cR({left:o,right:a,typeName:Re.ZodIntersection,...He(n)});var Yb=class vne extends Ge{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ne.array)return X(r,{code:_.invalid_type,expected:ne.array,received:r.parsedType}),Me;if(r.data.length<this._def.items.length)return X(r,{code:_.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),Me;!this._def.rest&&r.data.length>this._def.items.length&&(X(r,{code:_.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),n.dirty());const u=[...r.data].map((y,m)=>{const g=this._def.items[m]||this._def.rest;return g?g._parse(new Ld(r,y,r.path,m)):null}).filter(y=>!!y);return r.common.async?Promise.all(u).then(y=>Lr.mergeArray(n,y)):Lr.mergeArray(n,u)}get items(){return this._def.items}rest(a){return new vne({...this._def,rest:a})}};Yb.create=(o,a)=>{if(!Array.isArray(o))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Yb({items:o,typeName:Re.ZodTuple,rest:null,...He(a)})};var Ane=class ex extends Ge{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ne.object)return X(r,{code:_.invalid_type,expected:ne.object,received:r.parsedType}),Me;const c=[],u=this._def.keyType,y=this._def.valueType;for(const m in r.data)c.push({key:u._parse(new Ld(r,m,r.path,m)),value:y._parse(new Ld(r,r.data[m],r.path,m)),alwaysSet:m in r.data});return r.common.async?Lr.mergeObjectAsync(n,c):Lr.mergeObjectSync(n,c)}get element(){return this._def.valueType}static create(a,n,r){return n instanceof Ge?new ex({keyType:a,valueType:n,typeName:Re.ZodRecord,...He(r)}):new ex({keyType:dS.create(),valueType:a,typeName:Re.ZodRecord,...He(n)})}},WT=class extends Ge{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(o){const{status:a,ctx:n}=this._processInputParams(o);if(n.parsedType!==ne.map)return X(n,{code:_.invalid_type,expected:ne.map,received:n.parsedType}),Me;const r=this._def.keyType,c=this._def.valueType,u=[...n.data.entries()].map(([y,m],g)=>({key:r._parse(new Ld(n,y,n.path,[g,"key"])),value:c._parse(new Ld(n,m,n.path,[g,"value"]))}));if(n.common.async){const y=new Map;return Promise.resolve().then(async()=>{for(const m of u){const g=await m.key,S=await m.value;if(g.status==="aborted"||S.status==="aborted")return Me;(g.status==="dirty"||S.status==="dirty")&&a.dirty(),y.set(g.value,S.value)}return{status:a.value,value:y}})}else{const y=new Map;for(const m of u){const g=m.key,S=m.value;if(g.status==="aborted"||S.status==="aborted")return Me;(g.status==="dirty"||S.status==="dirty")&&a.dirty(),y.set(g.value,S.value)}return{status:a.value,value:y}}}};WT.create=(o,a,n)=>new WT({valueType:a,keyType:o,typeName:Re.ZodMap,...He(n)});var UT=class tx extends Ge{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.parsedType!==ne.set)return X(r,{code:_.invalid_type,expected:ne.set,received:r.parsedType}),Me;const c=this._def;c.minSize!==null&&r.data.size<c.minSize.value&&(X(r,{code:_.too_small,minimum:c.minSize.value,type:"set",inclusive:!0,exact:!1,message:c.minSize.message}),n.dirty()),c.maxSize!==null&&r.data.size>c.maxSize.value&&(X(r,{code:_.too_big,maximum:c.maxSize.value,type:"set",inclusive:!0,exact:!1,message:c.maxSize.message}),n.dirty());const u=this._def.valueType;function y(g){const S=new Set;for(const C of g){if(C.status==="aborted")return Me;C.status==="dirty"&&n.dirty(),S.add(C.value)}return{status:n.value,value:S}}const m=[...r.data.values()].map((g,S)=>u._parse(new Ld(r,g,r.path,S)));return r.common.async?Promise.all(m).then(g=>y(g)):y(m)}min(a,n){return new tx({...this._def,minSize:{value:a,message:de.toString(n)}})}max(a,n){return new tx({...this._def,maxSize:{value:a,message:de.toString(n)}})}size(a,n){return this.min(a,n).max(a,n)}nonempty(a){return this.min(1,a)}};UT.create=(o,a)=>new UT({valueType:o,minSize:null,maxSize:null,typeName:Re.ZodSet,...He(a)});var Cne=class tT extends Ge{constructor(){super(...arguments),this.validate=this.implement}_parse(a){const{ctx:n}=this._processInputParams(a);if(n.parsedType!==ne.function)return X(n,{code:_.invalid_type,expected:ne.function,received:n.parsedType}),Me;function r(m,g){return ST({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,gT(),yS].filter(S=>!!S),issueData:{code:_.invalid_arguments,argumentsError:g}})}function c(m,g){return ST({data:m,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,gT(),yS].filter(S=>!!S),issueData:{code:_.invalid_return_type,returnTypeError:g}})}const u={errorMap:n.common.contextualErrorMap},y=n.data;if(this._def.returns instanceof zS){const m=this;return Di(async function(...g){const S=new Nl([]),C=await m._def.args.parseAsync(g,u).catch(pa=>{throw S.addIssue(r(g,pa)),S}),Ne=await Reflect.apply(y,this,C);return await m._def.returns._def.type.parseAsync(Ne,u).catch(pa=>{throw S.addIssue(c(Ne,pa)),S})})}else{const m=this;return Di(function(...g){const S=m._def.args.safeParse(g,u);if(!S.success)throw new Nl([r(g,S.error)]);const C=Reflect.apply(y,this,S.data),Ne=m._def.returns.safeParse(C,u);if(!Ne.success)throw new Nl([c(C,Ne.error)]);return Ne.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...a){return new tT({...this._def,args:Yb.create(a).rest(tg.create())})}returns(a){return new tT({...this._def,returns:a})}implement(a){return this.parse(a)}strictImplement(a){return this.parse(a)}static create(a,n,r){return new tT({args:a||Yb.create([]).rest(tg.create()),returns:n||tg.create(),typeName:Re.ZodFunction,...He(r)})}},pR=class extends Ge{get schema(){return this._def.getter()}_parse(o){const{ctx:a}=this._processInputParams(o);return this._def.getter()._parse({data:a.data,path:a.path,parent:a})}};pR.create=(o,a)=>new pR({getter:o,typeName:Re.ZodLazy,...He(a)});var uR=class extends Ge{_parse(o){if(o.data!==this._def.value){const a=this._getOrReturnCtx(o);return X(a,{received:a.data,code:_.invalid_literal,expected:this._def.value}),Me}return{status:"valid",value:o.data}}get value(){return this._def.value}};uR.create=(o,a)=>new uR({value:o,typeName:Re.ZodLiteral,...He(a)});function Wne(o,a){return new xw({values:o,typeName:Re.ZodEnum,...He(a)})}var xw=class ax extends Ge{constructor(){super(...arguments),_S.set(this,void 0)}_parse(a){if(typeof a.data!="string"){const n=this._getOrReturnCtx(a),r=this._def.values;return X(n,{expected:mt.joinValues(r),received:n.parsedType,code:_.invalid_type}),Me}if(vT(this,_S,"f")||mne(this,_S,new Set(this._def.values),"f"),!vT(this,_S,"f").has(a.data)){const n=this._getOrReturnCtx(a),r=this._def.values;return X(n,{received:n.data,code:_.invalid_enum_value,options:r}),Me}return Di(a.data)}get options(){return this._def.values}get enum(){const a={};for(const n of this._def.values)a[n]=n;return a}get Values(){const a={};for(const n of this._def.values)a[n]=n;return a}get Enum(){const a={};for(const n of this._def.values)a[n]=n;return a}extract(a,n=this._def){return ax.create(a,{...this._def,...n})}exclude(a,n=this._def){return ax.create(this.options.filter(r=>!a.includes(r)),{...this._def,...n})}};_S=new WeakMap;xw.create=Wne;var sR=class extends Ge{constructor(){super(...arguments),qS.set(this,void 0)}_parse(o){const a=mt.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(o);if(n.parsedType!==ne.string&&n.parsedType!==ne.number){const r=mt.objectValues(a);return X(n,{expected:mt.joinValues(r),received:n.parsedType,code:_.invalid_type}),Me}if(vT(this,qS,"f")||mne(this,qS,new Set(mt.getValidEnumValues(this._def.values)),"f"),!vT(this,qS,"f").has(o.data)){const r=mt.objectValues(a);return X(n,{received:n.data,code:_.invalid_enum_value,options:r}),Me}return Di(o.data)}get enum(){return this._def.values}};qS=new WeakMap;sR.create=(o,a)=>new sR({values:o,typeName:Re.ZodNativeEnum,...He(a)});var zS=class extends Ge{unwrap(){return this._def.type}_parse(o){const{ctx:a}=this._processInputParams(o);if(a.parsedType!==ne.promise&&a.common.async===!1)return X(a,{code:_.invalid_type,expected:ne.promise,received:a.parsedType}),Me;const n=a.parsedType===ne.promise?a.data:Promise.resolve(a.data);return Di(n.then(r=>this._def.type.parseAsync(r,{path:a.path,errorMap:a.common.contextualErrorMap})))}};zS.create=(o,a)=>new zS({type:o,typeName:Re.ZodPromise,...He(a)});var Xu=class extends Ge{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Re.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(o){const{status:a,ctx:n}=this._processInputParams(o),r=this._def.effect||null,c={addIssue:u=>{X(n,u),u.fatal?a.abort():a.dirty()},get path(){return n.path}};if(c.addIssue=c.addIssue.bind(c),r.type==="preprocess"){const u=r.transform(n.data,c);if(n.common.async)return Promise.resolve(u).then(async y=>{if(a.value==="aborted")return Me;const m=await this._def.schema._parseAsync({data:y,path:n.path,parent:n});return m.status==="aborted"?Me:m.status==="dirty"||a.value==="dirty"?nS(m.value):m});{if(a.value==="aborted")return Me;const y=this._def.schema._parseSync({data:u,path:n.path,parent:n});return y.status==="aborted"?Me:y.status==="dirty"||a.value==="dirty"?nS(y.value):y}}if(r.type==="refinement"){const u=y=>{const m=r.refinement(y,c);if(n.common.async)return Promise.resolve(m);if(m instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return y};if(n.common.async===!1){const y=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return y.status==="aborted"?Me:(y.status==="dirty"&&a.dirty(),u(y.value),{status:a.value,value:y.value})}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(y=>y.status==="aborted"?Me:(y.status==="dirty"&&a.dirty(),u(y.value).then(()=>({status:a.value,value:y.value}))))}if(r.type==="transform")if(n.common.async===!1){const u=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!Xk(u))return u;const y=r.transform(u.value,c);if(y instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:a.value,value:y}}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(u=>Xk(u)?Promise.resolve(r.transform(u.value,c)).then(y=>({status:a.value,value:y})):u);mt.assertNever(r)}};Xu.create=(o,a,n)=>new Xu({schema:o,typeName:Re.ZodEffects,effect:a,...He(n)});Xu.createWithPreprocess=(o,a,n)=>new Xu({schema:a,effect:{type:"preprocess",transform:o},typeName:Re.ZodEffects,...He(n)});var Md=class extends Ge{_parse(o){return this._getType(o)===ne.undefined?Di(void 0):this._def.innerType._parse(o)}unwrap(){return this._def.innerType}};Md.create=(o,a)=>new Md({innerType:o,typeName:Re.ZodOptional,...He(a)});var Jb=class extends Ge{_parse(o){return this._getType(o)===ne.null?Di(null):this._def.innerType._parse(o)}unwrap(){return this._def.innerType}};Jb.create=(o,a)=>new Jb({innerType:o,typeName:Re.ZodNullable,...He(a)});var yR=class extends Ge{_parse(o){const{ctx:a}=this._processInputParams(o);let n=a.data;return a.parsedType===ne.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:a.path,parent:a})}removeDefault(){return this._def.innerType}};yR.create=(o,a)=>new yR({innerType:o,typeName:Re.ZodDefault,defaultValue:typeof a.default=="function"?a.default:()=>a.default,...He(a)});var dR=class extends Ge{_parse(o){const{ctx:a}=this._processInputParams(o),n={...a,common:{...a.common,issues:[]}},r=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return eR(r)?r.then(c=>({status:"valid",value:c.status==="valid"?c.value:this._def.catchValue({get error(){return new Nl(n.common.issues)},input:n.data})})):{status:"valid",value:r.status==="valid"?r.value:this._def.catchValue({get error(){return new Nl(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}};dR.create=(o,a)=>new dR({innerType:o,typeName:Re.ZodCatch,catchValue:typeof a.catch=="function"?a.catch:()=>a.catch,...He(a)});var kT=class extends Ge{_parse(o){if(this._getType(o)!==ne.nan){const n=this._getOrReturnCtx(o);return X(n,{code:_.invalid_type,expected:ne.nan,received:n.parsedType}),Me}return{status:"valid",value:o.data}}};kT.create=o=>new kT({typeName:Re.ZodNaN,...He(o)});var tve=Symbol("zod_brand"),B9=class extends Ge{_parse(o){const{ctx:a}=this._processInputParams(o),n=a.data;return this._def.type._parse({data:n,path:a.path,parent:a})}unwrap(){return this._def.type}},_9=class Une extends Ge{_parse(a){const{status:n,ctx:r}=this._processInputParams(a);if(r.common.async)return(async()=>{const u=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return u.status==="aborted"?Me:u.status==="dirty"?(n.dirty(),nS(u.value)):this._def.out._parseAsync({data:u.value,path:r.path,parent:r})})();{const c=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return c.status==="aborted"?Me:c.status==="dirty"?(n.dirty(),{status:"dirty",value:c.value}):this._def.out._parseSync({data:c.value,path:r.path,parent:r})}}static create(a,n){return new Une({in:a,out:n,typeName:Re.ZodPipeline})}},mR=class extends Ge{_parse(o){const a=this._def.innerType._parse(o),n=r=>(Xk(r)&&(r.value=Object.freeze(r.value)),r);return eR(a)?a.then(r=>n(r)):n(a)}unwrap(){return this._def.innerType}};mR.create=(o,a)=>new mR({innerType:o,typeName:Re.ZodReadonly,...He(a)});function kne(o,a={},n){return o?mS.create().superRefine((r,c)=>{var u,y;if(!o(r)){const m=typeof a=="function"?a(r):typeof a=="string"?{message:a}:a,g=(y=(u=m.fatal)!==null&&u!==void 0?u:n)!==null&&y!==void 0?y:!0,S=typeof m=="string"?{message:m}:m;c.addIssue({code:"custom",...S,fatal:g})}}):mS.create()}var ave={object:ll.lazycreate},Re;(function(o){o.ZodString="ZodString",o.ZodNumber="ZodNumber",o.ZodNaN="ZodNaN",o.ZodBigInt="ZodBigInt",o.ZodBoolean="ZodBoolean",o.ZodDate="ZodDate",o.ZodSymbol="ZodSymbol",o.ZodUndefined="ZodUndefined",o.ZodNull="ZodNull",o.ZodAny="ZodAny",o.ZodUnknown="ZodUnknown",o.ZodNever="ZodNever",o.ZodVoid="ZodVoid",o.ZodArray="ZodArray",o.ZodObject="ZodObject",o.ZodUnion="ZodUnion",o.ZodDiscriminatedUnion="ZodDiscriminatedUnion",o.ZodIntersection="ZodIntersection",o.ZodTuple="ZodTuple",o.ZodRecord="ZodRecord",o.ZodMap="ZodMap",o.ZodSet="ZodSet",o.ZodFunction="ZodFunction",o.ZodLazy="ZodLazy",o.ZodLiteral="ZodLiteral",o.ZodEnum="ZodEnum",o.ZodEffects="ZodEffects",o.ZodNativeEnum="ZodNativeEnum",o.ZodOptional="ZodOptional",o.ZodNullable="ZodNullable",o.ZodDefault="ZodDefault",o.ZodCatch="ZodCatch",o.ZodPromise="ZodPromise",o.ZodBranded="ZodBranded",o.ZodPipeline="ZodPipeline",o.ZodReadonly="ZodReadonly"})(Re||(Re={}));var nve=(o,a={message:`Input not instance of ${o.name}`})=>kne(n=>n instanceof o,a),Rne=dS.create,fne=tR.create,ove=kT.create,ive=aR.create,jne=nR.create,rve=oR.create,lve=AT.create,cve=iR.create,pve=rR.create,uve=mS.create,sve=tg.create,yve=ch.create,dve=CT.create,mve=kg.create,zve=ll.create,hve=ll.strictCreate,bve=lR.create,Ive=gne.create,gve=cR.create,Sve=Yb.create,vve=Ane.create,Ave=WT.create,Cve=UT.create,Wve=Cne.create,Uve=pR.create,kve=uR.create,Rve=xw.create,fve=sR.create,jve=zS.create,H9=Xu.create,Mve=Md.create,Ove=Jb.create,wve=Xu.createWithPreprocess,Tve=_9.create,Pve=()=>Rne().optional(),Nve=()=>fne().optional(),Bve=()=>jne().optional(),_ve={string:o=>dS.create({...o,coerce:!0}),number:o=>tR.create({...o,coerce:!0}),boolean:o=>nR.create({...o,coerce:!0}),bigint:o=>aR.create({...o,coerce:!0}),date:o=>oR.create({...o,coerce:!0})},qve=Me,s=Object.freeze({__proto__:null,defaultErrorMap:yS,setErrorMap:qSe,getErrorMap:gT,makeIssue:ST,EMPTY_PATH:FSe,addIssueToContext:X,ParseStatus:Lr,INVALID:Me,DIRTY:nS,OK:Di,isAborted:GD,isDirty:YD,isValid:Xk,isAsync:eR,get util(){return mt},get objectUtil(){return QD},ZodParsedType:ne,getParsedType:$h,ZodType:Ge,datetimeRegex:bne,ZodString:dS,ZodNumber:tR,ZodBigInt:aR,ZodBoolean:nR,ZodDate:oR,ZodSymbol:AT,ZodUndefined:iR,ZodNull:rR,ZodAny:mS,ZodUnknown:tg,ZodNever:ch,ZodVoid:CT,ZodArray:kg,ZodObject:ll,ZodUnion:lR,ZodDiscriminatedUnion:gne,ZodIntersection:cR,ZodTuple:Yb,ZodRecord:Ane,ZodMap:WT,ZodSet:UT,ZodFunction:Cne,ZodLazy:pR,ZodLiteral:uR,ZodEnum:xw,ZodNativeEnum:sR,ZodPromise:zS,ZodEffects:Xu,ZodTransformer:Xu,ZodOptional:Md,ZodNullable:Jb,ZodDefault:yR,ZodCatch:dR,ZodNaN:kT,BRAND:tve,ZodBranded:B9,ZodPipeline:_9,ZodReadonly:mR,custom:kne,Schema:Ge,ZodSchema:Ge,late:ave,get ZodFirstPartyTypeKind(){return Re},coerce:_ve,any:uve,array:mve,bigint:ive,boolean:jne,date:rve,discriminatedUnion:Ive,effect:H9,enum:Rve,function:Wve,instanceof:nve,intersection:gve,lazy:Uve,literal:kve,map:Ave,nan:ove,nativeEnum:fve,never:yve,null:pve,nullable:Ove,number:fne,object:zve,oboolean:Bve,onumber:Nve,optional:Mve,ostring:Pve,pipeline:Tve,preprocess:wve,promise:jve,record:vve,set:Cve,strictObject:hve,string:Rne,symbol:lve,transformer:H9,tuple:Sve,undefined:cve,union:bve,unknown:sve,void:dve,NEVER:qve,ZodIssueCode:_,quotelessJson:_Se,ZodError:Nl}),yF=o=>typeof(o==null?void 0:o.passthrough)=="function",Fve=(o,a)=>yF(o)?yF(a)?o.merge(a):o:yF(a)?a:Object.assign({},o,a);s.object({name:s.literal("ZodError"),issues:s.array(s.object({path:s.array(s.union([s.string(),s.number()])),message:s.string().optional(),code:s.nativeEnum(s.ZodIssueCode)}).catchall(s.any()))});var Eve=Symbol("ContractNoBody"),Dve=o=>"method"in o&&"path"in o,Mne=(o,a)=>Object.fromEntries(Object.entries(o).map(([n,r])=>{var c,u,y;return Dve(r)?[n,{...r,path:a!=null&&a.pathPrefix?a.pathPrefix+r.path:r.path,headers:Fve(a==null?void 0:a.baseHeaders,r.headers),strictStatusCodes:(c=r.strictStatusCodes)!==null&&c!==void 0?c:a==null?void 0:a.strictStatusCodes,validateResponseOnClient:(u=r.validateResponseOnClient)!==null&&u!==void 0?u:a==null?void 0:a.validateResponseOnClient,responses:{...a==null?void 0:a.commonResponses,...r.responses},metadata:a!=null&&a.metadata?{...a==null?void 0:a.metadata,...(y=r.metadata)!==null&&y!==void 0?y:{}}:r.metadata}]:[n,Mne(r,a)]})),dF=Symbol("ContractPlainType"),yo=()=>({router:(o,a)=>Mne(o,a),query:o=>o,mutation:o=>o,responses:o=>o,response:()=>dF,body:()=>dF,type:()=>dF,otherResponse:({contentType:o,body:a})=>({contentType:o,body:a}),noBody:()=>Eve}),xve=yo(),Vve=xve.router({createUser:{method:"POST",path:"/users",responses:{201:w.UserSchema,400:s.object({message:s.string()})},body:w.UserCreateWithoutRestaurantInputSchema,summary:"Create a new user"},getUsers:{method:"GET",path:"/users",responses:{200:s.array(w.UserSchema),404:s.object({message:s.string()})},query:s.object({skip:s.string().optional(),take:s.string().optional(),orderBy:s.string().optional()}),summary:"Get all users"},getUser:{method:"GET",path:"/users/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.UserSchema,404:s.object({message:s.string()})},summary:"Get a user by ID"},updateUser:{method:"PUT",path:"/users/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.UserSchema,404:s.object({message:s.string()})},body:w.UserUpdateInputSchema,summary:"Update a user"},deleteUser:{method:"DELETE",path:"/users/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.UserSchema,404:s.object({message:s.string()})},summary:"Delete a user"}}),Hve=yo(),Lve=Hve.router({createOrganization:{method:"POST",path:"/organizations",responses:{201:Kg,400:s.object({message:s.string()})},body:une,summary:"Create a new organization"},getOrganizations:{method:"GET",path:"/organizations",responses:{200:s.array(Kg)},query:s.object({skip:s.string().optional(),take:s.string().optional(),orderBy:s.string().optional()}),summary:"Get all organizations"},getOrganization:{method:"GET",path:"/organizations/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Kg,404:s.object({message:s.string()})},summary:"Get an organization by ID"},updateOrganization:{method:"PUT",path:"/organizations/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Kg,404:s.object({message:s.string()})},body:PSe,summary:"Update an organization"},deleteOrganization:{method:"DELETE",path:"/organizations/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Kg,404:s.object({message:s.string()})},summary:"Delete an organization"}}),Zve=yo(),$ve=Zve.router({createOrder:{method:"POST",path:"/orders",responses:{201:w.OrderSchema,400:s.object({message:s.string()})},body:w.OrderUncheckedCreateInputSchema,summary:"Create a new order"},getOrders:{method:"GET",path:"/orders",responses:{200:s.array(w.OrderSchema)},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),orderBy:s.string().optional(),restaurantId:s.coerce.number().optional(),vendorId:s.coerce.number().optional(),status:s.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]).optional()}),summary:"Get all orders"},getOrder:{method:"GET",path:"/orders/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.OrderSchema,404:s.object({message:s.string()})},summary:"Get an order by ID"},updateOrder:{method:"PUT",path:"/orders/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.OrderSchema,404:s.object({message:s.string()})},body:w.OrderUncheckedUpdateInputSchema,summary:"Update an order"},deleteOrder:{method:"DELETE",path:"/orders/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.OrderSchema,404:s.object({message:s.string()})},summary:"Delete an order"}}),Qve=s.enum(["ADMIN","MANAGER","CHEF","STAFF"]),Gve=s.object({id:s.number(),email:s.string().email(),firstName:s.string(),lastName:s.string(),passwordHash:s.string(),role:Qve,restaurantId:s.number(),createdAt:s.date(),updatedAt:s.date()}),Yve=Gve.omit({id:!0,createdAt:!0,updatedAt:!0});Yve.partial();w.ShiftStatusSchema;w.ShiftCreateInputSchema;s.object({id:s.number(),restaurantId:s.number()});s.object({id:s.number(),inventoryId:s.number(),ingredientId:s.number(),quantity:s.number(),unit:s.string(),minQuantity:s.number(),lastUpdated:s.date()});var One=s.object({ingredientId:s.number(),quantity:s.string(),unit:s.string()});s.object({id:s.number(),stepNumber:s.number(),instruction:s.string(),imageUrl:s.string().nullable(),createdAt:s.date().optional().nullable(),updatedAt:s.date().optional().nullable(),isDeleted:s.boolean(),deleted:s.date().nullable()});var wne=s.object({stepNumber:s.number(),instruction:s.string(),imageUrl:s.string().optional()}),Jve=s.object({name:s.string(),imageUrl:s.array(s.string()),description:s.string().optional(),servings:s.number(),cookTime:s.number(),restaurantId:s.number(),cookBookId:s.number(),ingredients:s.array(One),instructions:s.array(wne)});s.object({id:s.number().optional(),name:s.string().optional(),imageUrl:s.string().optional()||s.array(s.string()).optional(),description:s.string().optional().nullish(),servings:s.number(),cookTime:s.number(),prepTime:s.number(),frequency:s.number().optional().nullable(),foodCost:s.number().optional().nullable(),restaurantId:s.number().optional().nullable(),cookBookId:s.number().optional().nullable(),isDeleted:s.boolean().default(!1).optional(),ingredients:s.array(One),instructions:s.array(wne)});Jve.partial();var Qh=s.object({id:s.number(),orderId:s.number(),ingredientId:s.number(),quantity:s.number(),unit:s.string(),price:s.number()}),Kve=Qh.omit({id:!0}),Xve=Qh.partial().omit({id:!0,orderId:!0}),eAe=s.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),tAe=s.object({id:s.number(),name:s.string()}),aAe=s.object({id:s.number(),restaurantId:s.number(),vendorId:s.number(),vendor:tAe,status:eAe,items:s.array(Qh),createdAt:s.date(),updatedAt:s.date()}),nAe=aAe.omit({id:!0,createdAt:!0,updatedAt:!0}),oAe=nAe.partial();s.object({id:s.number(),name:s.string(),category:s.string()});var iAe=s.object({id:s.number(),name:s.string(),imageUrl:s.string().optional().nullable(),createdAt:s.date(),updatedAt:s.date()}),rAe=iAe.omit({id:!0,createdAt:!0,updatedAt:!0});rAe.partial();var eS=s.object({id:s.number(),name:s.string(),contact:s.string(),email:s.string().email(),phone:s.string(),orders:s.array(oAe),createdAt:s.date(),updatedAt:s.date()}),Tne=eS.omit({id:!0,createdAt:!0,updatedAt:!0,orders:!0}),lAe=Tne.partial(),ph={INTERNAL_SERVER_ERROR:500,OK:200,BAD_REQUEST:400,CREATED:201},Rg=s.object({message:s.string()});s.object({status:s.literal(ph.INTERNAL_SERVER_ERROR),body:Rg});s.discriminatedUnion("status",[s.object({status:s.literal(ph.OK),body:s.object({access_token:s.string(),session_token:s.string()})}),s.object({status:s.literal(ph.INTERNAL_SERVER_ERROR),body:Rg})]);s.discriminatedUnion("status",[s.object({status:s.literal(ph.CREATED),body:w.UserSchema.omit({passwordHash:!0})}),s.object({status:s.literal(ph.BAD_REQUEST),body:Rg})]);s.discriminatedUnion("status",[s.object({status:s.literal(ph.OK),body:Rg}),s.object({status:s.literal(ph.BAD_REQUEST),body:Rg})]);s.discriminatedUnion("status",[s.object({status:s.literal(ph.OK),body:Rg}),s.object({status:s.literal(ph.BAD_REQUEST),body:Rg})]);var cAe=yo(),pAe=cAe.router({createOrderItem:{method:"POST",path:"/order-items",responses:{201:Qh,400:s.object({message:s.string()})},body:Kve,summary:"Create a new order item"},getOrderItems:{method:"GET",path:"/order-items",responses:{200:s.array(Qh)},query:s.object({orderId:s.string().optional(),skip:s.string().optional(),take:s.string().optional()}),summary:"Get all order items"},getOrderItem:{method:"GET",path:"/order-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Qh,404:s.object({message:s.string()})},summary:"Get an order item by ID"},updateOrderItem:{method:"PUT",path:"/order-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Qh,404:s.object({message:s.string()})},body:Xve,summary:"Update an order item"},deleteOrderItem:{method:"DELETE",path:"/order-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:Qh,404:s.object({message:s.string()})},summary:"Delete an order item"}}),uAe=yo(),sAe=uAe.router({createRestaurant:{method:"POST",path:"/restaurants",responses:{201:w.RestaurantSchema,400:s.object({message:s.string()})},body:w.RestaurantCreateInputSchema,summary:"Create a new restaurant"},getRestaurants:{method:"GET",path:"/restaurants",responses:{200:s.array(w.RestaurantSchema)},query:s.object({skip:s.string().optional(),take:s.string().optional(),organizationId:s.string().optional()}),summary:"Get all restaurants"},getRestaurant:{method:"GET",path:"/restaurants/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RestaurantSchema,404:s.object({message:s.string()})},summary:"Get a restaurant by ID"},updateRestaurant:{method:"PUT",path:"/restaurants/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RestaurantSchema,404:s.object({message:s.string()})},body:w.RestaurantUpdateInputSchema,summary:"Update a restaurant"},deleteRestaurant:{method:"DELETE",path:"/restaurants/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RestaurantSchema,404:s.object({message:s.string()})},summary:"Delete a restaurant"}}),yAe=yo(),dAe=yAe.router({createShift:{method:"POST",path:"/shifts",responses:{201:w.ShiftSchema,400:s.object({message:s.string()})},body:w.ShiftUncheckedCreateInputSchema,summary:"Create a new shift"},getShifts:{method:"GET",path:"/shifts",responses:{200:s.array(w.ShiftSchema),400:s.object({message:s.string()}),500:s.object({message:s.string()})},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),userId:s.coerce.number().optional(),startTime:s.string().optional().pipe(s.coerce.date()),endTime:s.string().optional().pipe(s.coerce.date()),status:s.enum(["SCHEDULED","COMPLETED","CANCELLED"]).optional()}),summary:"Get all shifts"},getShift:{method:"GET",path:"/shifts/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.ShiftSchema,404:s.object({message:s.string()})},summary:"Get a shift by ID"},updateShift:{method:"PUT",path:"/shifts/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.ShiftSchema,404:s.object({message:s.string()})},body:w.ShiftUncheckedUpdateInputSchema,summary:"Update a shift"},deleteShift:{method:"DELETE",path:"/shifts/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.ShiftSchema,404:s.object({message:s.string()})},summary:"Delete a shift"}}),mAe=yo(),zAe=s.object({ingredientIds:s.array(s.number()),instructionIds:s.array(s.number())}),hAe=s.object({data:w.RecipeUpdateInputSchema,deleteIds:zAe.optional()}),bAe=mAe.router({createRecipe:{method:"POST",path:"/recipes",responses:{201:w.RecipeSchema,400:s.object({message:s.string()})},body:w.RecipeCreateInputSchema,summary:"Create a new recipe"},uploadFileS3:{method:"POST",path:"/recipes/upload",contentType:"multipart/form-data",responses:{201:s.object({url:s.string()}),400:s.object({message:s.string()})},body:s.string(),summary:"uploads recipe images to s3 bucket"},getRecipes:{method:"GET",path:"/recipes",responses:{200:s.object({recipes:s.array(w.RecipeSchema),totalCount:s.number()})},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),restaurantId:s.coerce.number().optional(),searchTerm:s.string().optional()}),summary:"Get all recipes"},getRecipe:{method:"GET",path:"/recipes/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RecipeSchema,404:s.object({message:s.string()})},summary:"Get a recipe by ID"},updateRecipe:{method:"PUT",path:"/recipes/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RecipeSchema,400:s.object({message:s.string()}),404:s.object({message:s.string()})},body:hAe,summary:"Update a recipe"},deleteRecipe:{method:"DELETE",path:"/recipes/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.RecipeSchema,404:s.object({message:s.string()})},summary:"Delete a recipe"},addIngredientToRecipe:{method:"POST",path:"/recipes/:recipeId/ingredients",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:w.RecipeIngredientSchema,400:s.object({message:s.string()}),404:s.object({message:s.string()})},body:w.RecipeIngredientUncheckedCreateInputSchema,summary:"Add an ingredient to a recipe"},removeIngredientFromRecipe:{method:"DELETE",path:"/recipes/:recipeId/ingredients/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeIngredientSchema,404:s.object({message:s.string()})},summary:"Remove an ingredient from a recipe"},updateIngredientInRecipe:{method:"PUT",path:"/recipes/:recipeId/ingredients/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeIngredientSchema,400:s.object({message:s.string()}),404:s.object({message:s.string()})},body:w.RecipeIngredientUncheckedUpdateInputSchema,summary:"Update an ingredient in a recipe"},getRecipeIngredients:{method:"GET",path:"/recipes/:recipeId/ingredients",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:s.array(w.RecipeIngredientSchema),404:s.object({message:s.string()})},summary:"Get all ingredients for a recipe"},getRecipeIngredient:{method:"GET",path:"/recipes/:recipeId/ingredients/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeIngredientSchema,404:s.object({message:s.string()})},summary:"Get a specific ingredient from a recipe"},addInstructionToRecipe:{method:"POST",path:"/recipes/:recipeId/instructions",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:w.RecipeInstructionSchema,400:s.object({message:s.string()}),404:s.object({message:s.string()})},body:w.RecipeInstructionCreateInputSchema,summary:"Add an instruction to a recipe"},removeInstructionFromRecipe:{method:"DELETE",path:"/recipes/:recipeId/instructions/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeInstructionSchema,404:s.object({message:s.string()})},summary:"Remove an instruction from a recipe"},updateInstructionInRecipe:{method:"PUT",path:"/recipes/:recipeId/instructions/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeInstructionSchema,400:s.object({message:s.string()}),404:s.object({message:s.string()})},body:w.RecipeInstructionUpdateInputSchema,summary:"Update an instruction in a recipe"},getRecipeInstruction:{method:"GET",path:"/recipes/:recipeId/instructions/:id",pathParams:s.object({recipeId:s.coerce.number(),id:s.coerce.number()}),responses:{200:w.RecipeInstructionSchema,404:s.object({message:s.string()})},summary:"Get a specific instruction from a recipe"},getRecipeInstructions:{method:"GET",path:"/recipes/:recipeId/instructions",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:s.array(w.RecipeInstructionSchema),404:s.object({message:s.string()})},summary:"Get all instructions for a recipe"},calculateFoodCost:{method:"POST",path:"/recipes/:recipeId/calculate-food-cost",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:s.object({totalCost:s.number()}),404:s.object({message:s.string()})},body:s.object({ingredientPrices:s.array(s.object({ingredientId:s.number(),price:s.number()}))}),summary:"Calculate the total food cost for a recipe"},getFoodCostHistory:{method:"GET",path:"/recipes/:recipeId/food-cost-history",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:s.array(w.FoodCostHistorySchema),404:s.object({message:s.string()})},summary:"Get the food cost history for a recipe"},calculateRecipePrice:{method:"POST",path:"/recipes/:recipeId/calculate-price",pathParams:s.object({recipeId:s.coerce.number()}),body:s.object({profitMargin:s.number().optional()}),responses:{200:s.object({price:s.number()}),404:s.object({message:s.string()})},summary:"Calculate the selling price for a recipe"},getRecipePrice:{method:"GET",path:"/recipes/:recipeId/price",pathParams:s.object({recipeId:s.coerce.number()}),query:s.object({profitMargin:s.number().optional()}),responses:{200:s.object({price:s.number()}),404:s.object({message:s.string()})},summary:"Get the selling price for a recipe"}}),IAe=yo(),gAe=IAe.router({createVendor:{method:"POST",path:"/vendors",responses:{201:eS,400:s.object({message:s.string()})},body:Tne,summary:"Create a new vendor"},getVendors:{method:"GET",path:"/vendors",responses:{200:s.array(eS)},query:s.object({skip:s.string().optional(),take:s.string().optional(),name:s.string().optional()}),summary:"Get all vendors"},getVendor:{method:"GET",path:"/vendors/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:eS,404:s.object({message:s.string()})},summary:"Get a vendor by ID"},updateVendor:{method:"PUT",path:"/vendors/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:eS,404:s.object({message:s.string()})},body:lAe,summary:"Update a vendor"},deleteVendor:{method:"DELETE",path:"/vendors/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:eS,404:s.object({message:s.string()})},summary:"Delete a vendor"}}),SAe=yo(),vAe=SAe.router({createPrepBoard:{method:"POST",path:"/prepBoards",responses:{201:w.PrepBoardSchema,400:s.object({message:s.string()})},body:w.PrepBoardCreateInputSchema,summary:"Create a new prep board"},getPrepBoards:{method:"GET",path:"/prepBoards",responses:{200:s.array(w.PrepBoardSchema)},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),where:s.record(s.any()).optional(),orderBy:s.record(s.enum(["asc","desc"])).optional()}),summary:"Get all prep boards"},getPrepBoard:{method:"GET",path:"/prepBoards/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.PrepBoardSchema,404:s.object({message:s.string()})},summary:"Get a prep board by ID"},updatePrepBoard:{method:"PUT",path:"/prepBoards/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.PrepBoardSchema,404:s.object({message:s.string()})},body:w.PrepBoardUpdateInputSchema,summary:"Update a prep board"},deletePrepBoard:{method:"DELETE",path:"/prepBoards/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete a prep board"}}),AAe=yo(),CAe=AAe.router({resendCode:{method:"POST",path:"/auth/resend-code",responses:{200:s.object({code:s.string()}),401:s.object({message:s.string()})},body:s.object({email:s.string().email()}),summary:"Resend the verifyLoginCode"},login:{method:"POST",path:"/auth/login",responses:{200:s.object({code:s.string()}),401:s.object({message:s.string()})},body:s.object({email:s.string().email(),password:s.string()}),summary:"User login"},verifyLoginCode:{method:"POST",path:"/auth/verify-login",responses:{200:s.object({accessToken:s.string(),user:w.UserSchema.omit({passwordHash:!0})}),401:s.object({message:s.string()})},body:s.object({code:s.string()}),summary:"Verify login code"},register:{method:"POST",path:"/auth/register",responses:{201:w.UserSchema.omit({passwordHash:!0}),400:s.object({message:s.string()})},body:w.UserUncheckedCreateInputSchema,summary:"User registration"},changePassword:{method:"POST",path:"/auth/change-password/:userId",responses:{200:s.object({message:s.string()}),400:s.object({message:s.string()})},body:s.object({oldPassword:s.string(),newPassword:s.string()}),pathParams:s.object({userId:s.coerce.number()}),summary:"Change user password"},logout:{method:"POST",path:"/auth/logout",responses:{200:s.object({message:s.string()}),400:s.object({message:s.string()})},body:s.object({userId:s.number(),accessToken:s.string()}),summary:"User logout"},forgotPassword:{method:"POST",path:"/auth/forgot-password",responses:{200:s.object({message:s.string()}),400:s.object({message:s.string()})},body:s.object({email:s.string().email()}),summary:"Request password reset"},resetPassword:{method:"POST",path:"/auth/reset-password",responses:{200:s.object({message:s.string()}),400:s.object({message:s.string()})},body:s.object({resetToken:s.string(),newPassword:s.string()}),summary:"Reset password"}}),WAe=yo(),UAe=WAe.router({storeEmail:{method:"POST",path:"/early-access",responses:{200:s.object({message:s.string()}),401:s.object({message:s.string()})},body:s.object({email:s.string().email()}),summary:"Add potential customer to the database"},deleteEmail:{method:"DELETE",path:"/early-access/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({email:s.string()}),401:s.object({message:s.string()})},summary:"Delete a potential customer from the database"},getEmails:{method:"GET",path:"/early-access",responses:{201:s.array(w.EarlyAccessSchema),400:s.object({message:s.string()})},query:s.object({skip:s.string().optional(),take:s.string().optional(),orderBy:s.string().optional(),isEmailSent:s.boolean().optional()}),summary:"get all potential customers from the database"},getEmail:{method:"GET",path:"/early-access/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.EarlyAccessSchema,404:s.object({message:s.string()})},summary:"Get an order by ID"}}),kAe=yo(),RAe=kAe.router({createMenu:{method:"POST",path:"/menus",responses:{201:w.MenuSchema,400:s.object({message:s.string()})},body:s.object({name:s.string(),restaurantId:s.number()}),summary:"Create a new menu"},getMenus:{method:"GET",path:"/menus",responses:{200:s.array(w.MenuSchema)},query:s.object({restaurantId:s.coerce.number().optional(),skip:s.coerce.number().optional(),take:s.coerce.number().optional()}),summary:"Get all menus"},getMenu:{method:"GET",path:"/menus/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.MenuSchema,404:s.object({message:s.string()})},summary:"Get a menu by ID"},updateMenu:{method:"PUT",path:"/menus/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.MenuSchema,404:s.object({message:s.string()})},body:s.object({name:s.string().optional()}),summary:"Update a menu"},deleteMenu:{method:"DELETE",path:"/menus/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete a menu"}}),fAe=yo(),jAe=fAe.router({createMenuItem:{method:"POST",path:"/menu-items",responses:{201:w.MenuItemSchema,400:s.object({message:s.string()})},body:w.MenuItemCreateInputSchema,summary:"Create a new menu item"},getMenuItems:{method:"GET",path:"/menu-items",responses:{200:s.array(w.MenuItemSchema)},query:s.object({menuId:s.coerce.number().optional(),skip:s.coerce.number().optional(),take:s.coerce.number().optional()}),summary:"Get all menu items"},getMenuItem:{method:"GET",path:"/menu-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.MenuItemSchema,404:s.object({message:s.string()})},summary:"Get a menu item by ID"},updateMenuItem:{method:"PUT",path:"/menu-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.MenuItemSchema,404:s.object({message:s.string()})},body:w.MenuItemUpdateInputSchema,summary:"Update a menu item"},deleteMenuItem:{method:"DELETE",path:"/menu-items/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete a menu item"},addRecipeToMenuItem:{method:"POST",path:"/menu-items/recipes",responses:{200:w.MenuItemSchema,404:s.object({message:s.string()})},body:s.object({menuItemId:s.coerce.number(),recipeId:s.coerce.number()}),summary:"Add a recipe to a menu item"},getMenuItemByRecipeId:{method:"GET",path:"/menu-items/recipes/:recipeId",pathParams:s.object({recipeId:s.coerce.number()}),responses:{200:w.MenuItemSchema,404:s.object({message:s.string()})},summary:"Get a menu item by recipe ID"},calculateMenuItemPrice:{method:"GET",path:"/menu-items/:menuItemId/price",pathParams:s.object({menuItemId:s.coerce.number()}),responses:{200:s.number(),404:s.object({message:s.string()})},summary:"Calculate a menu item price"},calculateMenuItemFoodCostPercentage:{method:"GET",path:"/menu-items/:menuItemId/food-cost-percentage",pathParams:s.object({menuItemId:s.coerce.number()}),responses:{200:s.number(),404:s.object({message:s.string()})},summary:"Calculate a menu item food cost percentage"},calculateItemsFoodCostPercentage:{method:"GET",path:"/menu-items/food-cost-percentage",query:s.object({menuItemIds:s.array(s.coerce.number())}),responses:{200:s.number(),404:s.object({message:s.string()})},summary:"Calculate items food cost percentage"}}),MAe=yo(),OAe=MAe.router({getFoodCostHistory:{method:"GET",path:"/analytics/food-cost-history",responses:{200:s.array(w.FoodCostHistorySchema)},query:s.object({recipeId:s.string(),startDate:s.string(),endDate:s.string()}),summary:"Get food cost history for a recipe"},getPrepHistory:{method:"GET",path:"/analytics/prep-history",responses:{200:s.array(w.PrepHistorySchema)},query:s.object({recipeId:s.string(),startDate:s.string(),endDate:s.string()}),summary:"Get prep history for a recipe"},getMenuAnalytics:{method:"GET",path:"/analytics/menu",responses:{200:s.object({lowestCostItem:w.MenuItemSchema,highestCostItem:w.MenuItemSchema,averageFoodCost:s.number()})},query:s.object({menuId:s.string()}),summary:"Get menu analytics"},getRecipeAnalytics:{method:"GET",path:"/analytics/recipe",responses:{200:s.object({averagePrepsPerWeek:s.number(),totalPrepCount:s.number(),averageFoodCost:s.number(),foodCostTrend:s.array(s.object({date:s.string(),cost:s.number()}))})},query:s.object({recipeId:s.string(),startDate:s.string(),endDate:s.string()}),summary:"Get recipe analytics"},getRestaurantAnalytics:{method:"GET",path:"/analytics/restaurant",responses:{200:s.object({totalRecipes:s.number(),totalMenuItems:s.number(),averageFoodCost:s.number(),mostPreparedRecipes:s.array(s.object({recipe:w.RecipeSchema,prepCount:s.number()})),foodCostTrend:s.array(s.object({date:s.string(),cost:s.number()}))})},query:s.object({restaurantId:s.string(),startDate:s.string(),endDate:s.string()}),summary:"Get restaurant analytics"}}),wAe=yo(),TAe=wAe.router({createCookBook:{method:"POST",path:"/cookbooks",responses:{201:w.CookBookSchema,400:s.object({message:s.string()})},body:s.object({name:s.string(),imageUrl:s.string().optional(),category:s.string(),restaurantId:s.number().optional()}),summary:"Create a new cookbook"},getCookBooks:{method:"GET",path:"/cookbooks",responses:{200:s.array(w.CookBookSchema)},query:s.object({restaurantId:s.coerce.number().optional(),skip:s.coerce.number().optional(),take:s.coerce.number().optional()}),summary:"Get all cookbooks"},getCookBook:{method:"GET",path:"/cookbooks/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.CookBookSchema,404:s.object({message:s.string()})},summary:"Get a cookbook by ID"},updateCookBook:{method:"PUT",path:"/cookbooks/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.CookBookSchema,404:s.object({message:s.string()})},body:s.object({name:s.string().optional(),imageUrl:s.string().optional(),category:s.string().optional(),restaurantId:s.number().optional()}),summary:"Update a cookbook"},deleteCookBook:{method:"DELETE",path:"/cookbooks/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete a cookbook"}}),PAe=yo(),NAe=PAe.router({createIngredient:{method:"POST",path:"/ingredients",responses:{201:w.IngredientSchema,400:s.object({message:s.string()})},body:s.object({name:s.string(),category:s.string(),price:s.number()}),summary:"Create a new ingredient"},getIngredients:{method:"GET",path:"/ingredients",responses:{200:s.array(w.IngredientSchema)},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),where:s.record(s.any()).optional(),orderBy:s.record(s.enum(["asc","desc"])).optional()}),summary:"Get all ingredients"},getIngredient:{method:"GET",path:"/ingredients/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.IngredientSchema,404:s.object({message:s.string()})},summary:"Get an ingredient by ID"},updateIngredient:{method:"PUT",path:"/ingredients/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.IngredientSchema,404:s.object({message:s.string()})},body:s.object({name:s.string().optional(),category:s.string().optional(),price:s.number().optional()}),summary:"Update an ingredient"},deleteIngredient:{method:"DELETE",path:"/ingredients/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete an ingredient"}}),BAe=yo(),_Ae=BAe.router({createPrepItem:{method:"POST",path:"/prepItems",responses:{201:w.PrepItemSchema,400:s.object({message:s.string()})},body:w.PrepItemCreateInputSchema,summary:"Create a new prep item"},getPrepItems:{method:"GET",path:"/prepItems",responses:{200:s.array(w.PrepItemSchema)},query:s.object({skip:s.coerce.number().optional(),take:s.coerce.number().optional(),where:s.record(s.any()).optional(),orderBy:s.record(s.enum(["asc","desc"])).optional()}),summary:"Get all prep items"},getPrepItem:{method:"GET",path:"/prepItems/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.PrepItemSchema,404:s.object({message:s.string()})},summary:"Get a prep item by ID"},updatePrepItem:{method:"PUT",path:"/prepItems/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:w.PrepItemSchema,404:s.object({message:s.string()})},body:w.PrepItemUpdateInputSchema,summary:"Update a prep item"},deletePrepItem:{method:"DELETE",path:"/prepItems/:id",pathParams:s.object({id:s.coerce.number()}),responses:{200:s.object({message:s.string()}),404:s.object({message:s.string()})},summary:"Delete a prep item"}}),qAe=yo(),FAe=qAe.router({users:Vve,orgs:Lve,orders:$ve,orderItem:pAe,restaurant:sAe,shifts:dAe,recipe:bAe,vendor:gAe,prepBoard:vAe,auth:CAe,earlyAccess:UAe,menu:RAe,menuItem:jAe,analytics:OAe,cookbook:TAe,ingredient:NAe,prepItem:_Ae},{pathPrefix:"/api/v1"}),BCe=u5(FAe,{baseUrl:"http://localhost:3000",baseHeaders:{}});export{BCe as a,e as z};
