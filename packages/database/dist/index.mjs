export*from'@prisma/client';var ydt=Object.defineProperty;var ddt=(c,i)=>{for(var p in i)ydt(c,p,{get:i[p],enumerable:true});};var sdt={};ddt(sdt,{AllergenAggregateArgsSchema:()=>Rgt,AllergenArgsSchema:()=>A0,AllergenAvgOrderByAggregateInputSchema:()=>Wnt,AllergenCountOrderByAggregateInputSchema:()=>Unt,AllergenCountOutputTypeArgsSchema:()=>S0,AllergenCountOutputTypeSelectSchema:()=>ctt,AllergenCreateArgsSchema:()=>nkt,AllergenCreateInputSchema:()=>Z1,AllergenCreateManyAndReturnArgsSchema:()=>lkt,AllergenCreateManyArgsSchema:()=>ikt,AllergenCreateManyInputSchema:()=>oU,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>h5,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>j3,AllergenCreateWithoutIngredientsInputSchema:()=>yO,AllergenDeleteArgsSchema:()=>rkt,AllergenDeleteManyArgsSchema:()=>skt,AllergenFindFirstArgsSchema:()=>Pgt,AllergenFindFirstOrThrowArgsSchema:()=>Ugt,AllergenFindManyArgsSchema:()=>Wgt,AllergenFindUniqueArgsSchema:()=>xgt,AllergenFindUniqueOrThrowArgsSchema:()=>jgt,AllergenGroupByArgsSchema:()=>kgt,AllergenIncludeSchema:()=>Ld,AllergenMaxOrderByAggregateInputSchema:()=>Rnt,AllergenMinOrderByAggregateInputSchema:()=>knt,AllergenOrderByWithAggregationInputSchema:()=>GV,AllergenOrderByWithRelationInputSchema:()=>Hm,AllergenScalarFieldEnumSchema:()=>tC,AllergenScalarRelationFilterSchema:()=>t2,AllergenScalarWhereWithAggregatesInputSchema:()=>jA,AllergenSchema:()=>Kzt,AllergenSelectSchema:()=>Vd,AllergenSumOrderByAggregateInputSchema:()=>xnt,AllergenUncheckedCreateInputSchema:()=>v1,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>dO,AllergenUncheckedUpdateInputSchema:()=>f1,AllergenUncheckedUpdateManyInputSchema:()=>N1,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>fE,AllergenUpdateArgsSchema:()=>pkt,AllergenUpdateInputSchema:()=>O1,AllergenUpdateManyAndReturnArgsSchema:()=>ukt,AllergenUpdateManyArgsSchema:()=>ckt,AllergenUpdateManyMutationInputSchema:()=>w1,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>g5,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Fct,AllergenUpdateWithoutIngredientsInputSchema:()=>OE,AllergenUpsertArgsSchema:()=>akt,AllergenUpsertWithoutIngredientsInputSchema:()=>qct,AllergenWhereInputSchema:()=>co,AllergenWhereUniqueInputSchema:()=>pp,AuthAggregateArgsSchema:()=>PCt,AuthArgsSchema:()=>Xmt,AuthAvgOrderByAggregateInputSchema:()=>Pat,AuthCountOrderByAggregateInputSchema:()=>Tat,AuthCreateArgsSchema:()=>Axt,AuthCreateInputSchema:()=>S9,AuthCreateManyAndReturnArgsSchema:()=>Pxt,AuthCreateManyArgsSchema:()=>Txt,AuthCreateManyInputSchema:()=>uU,AuthCreateManyUserInputEnvelopeSchema:()=>cf,AuthCreateManyUserInputSchema:()=>CQ,AuthCreateNestedManyWithoutUserInputSchema:()=>ni,AuthCreateOrConnectWithoutUserInputSchema:()=>Dh,AuthCreateWithoutUserInputSchema:()=>Yu,AuthDeleteArgsSchema:()=>Uxt,AuthDeleteManyArgsSchema:()=>xxt,AuthFindFirstArgsSchema:()=>SCt,AuthFindFirstOrThrowArgsSchema:()=>TCt,AuthFindManyArgsSchema:()=>jX,AuthFindUniqueArgsSchema:()=>WCt,AuthFindUniqueOrThrowArgsSchema:()=>RCt,AuthGroupByArgsSchema:()=>UCt,AuthIncludeSchema:()=>az,AuthListRelationFilterSchema:()=>I2,AuthMaxOrderByAggregateInputSchema:()=>Uat,AuthMinOrderByAggregateInputSchema:()=>Wat,AuthOrderByRelationAggregateInputSchema:()=>hat,AuthOrderByWithAggregationInputSchema:()=>nH,AuthOrderByWithRelationInputSchema:()=>vb,AuthScalarFieldEnumSchema:()=>pC,AuthScalarWhereInputSchema:()=>wp,AuthScalarWhereWithAggregatesInputSchema:()=>BA,AuthSchema:()=>lmt,AuthSelectSchema:()=>iz,AuthSumOrderByAggregateInputSchema:()=>Rat,AuthUncheckedCreateInputSchema:()=>T9,AuthUncheckedCreateNestedManyWithoutUserInputSchema:()=>Si,AuthUncheckedCreateWithoutUserInputSchema:()=>Gu,AuthUncheckedUpdateInputSchema:()=>U9,AuthUncheckedUpdateManyInputSchema:()=>W9,AuthUncheckedUpdateManyWithoutUserInputSchema:()=>myt,AuthUncheckedUpdateManyWithoutUserNestedInputSchema:()=>pl,AuthUncheckedUpdateWithoutUserInputSchema:()=>TJ,AuthUpdateArgsSchema:()=>Wxt,AuthUpdateInputSchema:()=>P9,AuthUpdateManyAndReturnArgsSchema:()=>kxt,AuthUpdateManyArgsSchema:()=>Rxt,AuthUpdateManyMutationInputSchema:()=>AB,AuthUpdateManyWithWhereWithoutUserInputSchema:()=>Uk,AuthUpdateManyWithoutUserNestedInputSchema:()=>Ei,AuthUpdateWithWhereUniqueWithoutUserInputSchema:()=>Pk,AuthUpdateWithoutUserInputSchema:()=>SJ,AuthUpsertArgsSchema:()=>Sxt,AuthUpsertWithWhereUniqueWithoutUserInputSchema:()=>Tk,AuthWhereInputSchema:()=>Pa,AuthWhereUniqueInputSchema:()=>We,AvailabilityAggregateArgsSchema:()=>pgt,AvailabilityArgsSchema:()=>Ymt,AvailabilityAvgOrderByAggregateInputSchema:()=>cnt,AvailabilityCountOrderByAggregateInputSchema:()=>pnt,AvailabilityCreateArgsSchema:()=>jRt,AvailabilityCreateInputSchema:()=>h1,AvailabilityCreateManyAndReturnArgsSchema:()=>vRt,AvailabilityCreateManyArgsSchema:()=>ZRt,AvailabilityCreateManyInputSchema:()=>XP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>XO,AvailabilityCreateManyUserInputSchema:()=>sQ,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>Ya,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>Zh,AvailabilityCreateWithoutUserInputSchema:()=>ju,AvailabilityDeleteArgsSchema:()=>ORt,AvailabilityDeleteManyArgsSchema:()=>BRt,AvailabilityFindFirstArgsSchema:()=>lgt,AvailabilityFindFirstOrThrowArgsSchema:()=>rgt,AvailabilityFindManyArgsSchema:()=>WX,AvailabilityFindUniqueArgsSchema:()=>ugt,AvailabilityFindUniqueOrThrowArgsSchema:()=>sgt,AvailabilityGroupByArgsSchema:()=>cgt,AvailabilityIncludeSchema:()=>Bd,AvailabilityListRelationFilterSchema:()=>b2,AvailabilityMaxOrderByAggregateInputSchema:()=>unt,AvailabilityMinOrderByAggregateInputSchema:()=>snt,AvailabilityOrderByRelationAggregateInputSchema:()=>mat,AvailabilityOrderByWithAggregationInputSchema:()=>HV,AvailabilityOrderByWithRelationInputSchema:()=>Rb,AvailabilityScalarFieldEnumSchema:()=>Jg,AvailabilityScalarWhereInputSchema:()=>Op,AvailabilityScalarWhereWithAggregatesInputSchema:()=>RA,AvailabilitySchema:()=>Gzt,AvailabilitySelectSchema:()=>qd,AvailabilitySumOrderByAggregateInputSchema:()=>ynt,AvailabilityUncheckedCreateInputSchema:()=>I1,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>di,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>Mu,AvailabilityUncheckedUpdateInputSchema:()=>C1,AvailabilityUncheckedUpdateManyInputSchema:()=>A1,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>lyt,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Xi,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>iJ,AvailabilityUpdateArgsSchema:()=>fRt,AvailabilityUpdateInputSchema:()=>g1,AvailabilityUpdateManyAndReturnArgsSchema:()=>NRt,AvailabilityUpdateManyArgsSchema:()=>wRt,AvailabilityUpdateManyMutationInputSchema:()=>hB,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>KR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>Oi,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>JR,AvailabilityUpdateWithoutUserInputSchema:()=>aJ,AvailabilityUpsertArgsSchema:()=>MRt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>$R,AvailabilityWhereInputSchema:()=>ga,AvailabilityWhereUniqueInputSchema:()=>Te,BoolFieldUpdateOperationsInputSchema:()=>d,BoolFilterSchema:()=>mt,BoolWithAggregatesFilterSchema:()=>Jn,CategorySchema:()=>U,ChecklistCompleteAggregateArgsSchema:()=>$ht,ChecklistCompleteArgsSchema:()=>m0,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>not,ChecklistCompleteCountOrderByAggregateInputSchema:()=>oot,ChecklistCompleteCountOutputTypeArgsSchema:()=>b0,ChecklistCompleteCountOutputTypeSelectSchema:()=>itt,ChecklistCompleteCreateArgsSchema:()=>qUt,ChecklistCompleteCreateInputSchema:()=>bG,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>_Ut,ChecklistCompleteCreateManyArgsSchema:()=>DUt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>iv,ChecklistCompleteCreateManyChecklistInputSchema:()=>OH,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>of,ChecklistCompleteCreateManyCompletedByInputSchema:()=>zQ,ChecklistCompleteCreateManyInputSchema:()=>_P,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>Wq,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>Ja,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>p5,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Jb,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>fh,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>i3,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>zc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>wu,ChecklistCompleteCreateWithoutItemsInputSchema:()=>zv,ChecklistCompleteDeleteArgsSchema:()=>EUt,ChecklistCompleteDeleteManyArgsSchema:()=>QUt,ChecklistCompleteFindFirstArgsSchema:()=>Yht,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>Ght,ChecklistCompleteFindManyArgsSchema:()=>jN,ChecklistCompleteFindUniqueArgsSchema:()=>Kht,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>Xht,ChecklistCompleteGroupByArgsSchema:()=>Jht,ChecklistCompleteIncludeSchema:()=>bd,ChecklistCompleteListRelationFilterSchema:()=>wM,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>aot,ChecklistCompleteMinOrderByAggregateInputSchema:()=>iot,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>V4,ChecklistCompleteOrderByWithAggregationInputSchema:()=>fV,ChecklistCompleteOrderByWithRelationInputSchema:()=>Lm,ChecklistCompleteScalarFieldEnumSchema:()=>Fg,ChecklistCompleteScalarRelationFilterSchema:()=>Q4,ChecklistCompleteScalarWhereInputSchema:()=>Wl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>bA,ChecklistCompleteSchema:()=>Bzt,ChecklistCompleteSelectSchema:()=>hd,ChecklistCompleteSumOrderByAggregateInputSchema:()=>lot,ChecklistCompleteUncheckedCreateInputSchema:()=>hG,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>kq,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>bi,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>mc,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Nu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>mv,ChecklistCompleteUncheckedUpdateInputSchema:()=>gG,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>CG,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>Ust,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>vq,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>cyt,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>ol,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>E8,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>sJ,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>q_,ChecklistCompleteUpdateArgsSchema:()=>LUt,ChecklistCompleteUpdateInputSchema:()=>IG,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>HUt,ChecklistCompleteUpdateManyArgsSchema:()=>VUt,ChecklistCompleteUpdateManyMutationInputSchema:()=>gM,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>eW,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>rk,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>Mq,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Ni,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>u5,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Lpt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>tW,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>lk,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>_8,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>uJ,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>B_,ChecklistCompleteUpsertArgsSchema:()=>FUt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>XU,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>ik,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>Ept,ChecklistCompleteWhereInputSchema:()=>Ye,ChecklistCompleteWhereUniqueInputSchema:()=>lt,ChecklistFrequencySchema:()=>qt,ChecklistItemAggregateArgsSchema:()=>Lht,ChecklistItemArgsSchema:()=>d0,ChecklistItemAvgOrderByAggregateInputSchema:()=>Jet,ChecklistItemCompleteAggregateArgsSchema:()=>oIt,ChecklistItemCompleteArgsSchema:()=>qmt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>pot,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>rot,ChecklistItemCompleteCreateArgsSchema:()=>YUt,ChecklistItemCompleteCreateInputSchema:()=>AG,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>JUt,ChecklistItemCompleteCreateManyArgsSchema:()=>$Ut,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>dv,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>wH,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>pv,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>fH,ChecklistItemCompleteCreateManyInputSchema:()=>EP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>wq,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>n5,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>Xb,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>Kb,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>Ic,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>bc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>ab,ChecklistItemCompleteDeleteArgsSchema:()=>KUt,ChecklistItemCompleteDeleteManyArgsSchema:()=>oWt,ChecklistItemCompleteFindFirstArgsSchema:()=>tIt,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>eIt,ChecklistItemCompleteFindManyArgsSchema:()=>MN,ChecklistItemCompleteFindUniqueArgsSchema:()=>aIt,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>iIt,ChecklistItemCompleteGroupByArgsSchema:()=>nIt,ChecklistItemCompleteIncludeSchema:()=>Id,ChecklistItemCompleteListRelationFilterSchema:()=>BM,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>cot,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>uot,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>H4,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>wV,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>Ib,ChecklistItemCompleteScalarFieldEnumSchema:()=>Dg,ChecklistItemCompleteScalarWhereInputSchema:()=>Rl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>hA,ChecklistItemCompleteSchema:()=>qzt,ChecklistItemCompleteSelectSchema:()=>gd,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>sot,ChecklistItemCompleteUncheckedCreateInputSchema:()=>SG,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>Nq,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>a5,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>gc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>hc,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>PG,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>UG,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Rst,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>Dq,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>Wst,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>r5,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>Q8,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>V8,ChecklistItemCompleteUpdateArgsSchema:()=>XUt,ChecklistItemCompleteUpdateInputSchema:()=>TG,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>eWt,ChecklistItemCompleteUpdateManyArgsSchema:()=>tWt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>CM,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>rW,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>aW,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>Fq,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>l5,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>lW,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>nW,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>H8,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>L8,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>em,ChecklistItemCompleteUpsertArgsSchema:()=>GUt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>iW,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>oW,ChecklistItemCompleteWhereInputSchema:()=>ua,ChecklistItemCompleteWhereUniqueInputSchema:()=>ht,ChecklistItemCountOrderByAggregateInputSchema:()=>$et,ChecklistItemCountOutputTypeArgsSchema:()=>z0,ChecklistItemCountOutputTypeSelectSchema:()=>att,ChecklistItemCreateArgsSchema:()=>jUt,ChecklistItemCreateInputSchema:()=>sG,ChecklistItemCreateManyAndReturnArgsSchema:()=>vUt,ChecklistItemCreateManyArgsSchema:()=>ZUt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>av,ChecklistItemCreateManyChecklistInputSchema:()=>vH,ChecklistItemCreateManyInputSchema:()=>DP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>Uq,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>c5,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>$b,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>l3,ChecklistItemCreateWithoutChecklistInputSchema:()=>yc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>bv,ChecklistItemDeleteArgsSchema:()=>OUt,ChecklistItemDeleteManyArgsSchema:()=>BUt,ChecklistItemFindFirstArgsSchema:()=>_ht,ChecklistItemFindFirstOrThrowArgsSchema:()=>Eht,ChecklistItemFindManyArgsSchema:()=>TX,ChecklistItemFindUniqueArgsSchema:()=>Hht,ChecklistItemFindUniqueOrThrowArgsSchema:()=>Qht,ChecklistItemGroupByArgsSchema:()=>Vht,ChecklistItemIncludeSchema:()=>zd,ChecklistItemListRelationFilterSchema:()=>L4,ChecklistItemMaxOrderByAggregateInputSchema:()=>Ket,ChecklistItemMinOrderByAggregateInputSchema:()=>Xet,ChecklistItemOrderByRelationAggregateInputSchema:()=>Eet,ChecklistItemOrderByWithAggregationInputSchema:()=>OV,ChecklistItemOrderByWithRelationInputSchema:()=>Em,ChecklistItemScalarFieldEnumSchema:()=>qg,ChecklistItemScalarRelationFilterSchema:()=>Y4,ChecklistItemScalarWhereInputSchema:()=>Up,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>mA,ChecklistItemSchema:()=>Nzt,ChecklistItemSelectSchema:()=>md,ChecklistItemSumOrderByAggregateInputSchema:()=>tot,ChecklistItemTypeSchema:()=>Lt,ChecklistItemUncheckedCreateInputSchema:()=>yG,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>Rq,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>dc,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>hv,ChecklistItemUncheckedUpdateInputSchema:()=>zG,ChecklistItemUncheckedUpdateManyInputSchema:()=>mG,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>Pst,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>Zq,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>D8,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>D_,ChecklistItemUpdateArgsSchema:()=>fUt,ChecklistItemUpdateInputSchema:()=>dG,ChecklistItemUpdateManyAndReturnArgsSchema:()=>NUt,ChecklistItemUpdateManyArgsSchema:()=>wUt,ChecklistItemUpdateManyMutationInputSchema:()=>zB,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>KU,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>jq,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>s5,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Hpt,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>JU,ChecklistItemUpdateWithoutChecklistInputSchema:()=>F8,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>F_,ChecklistItemUpsertArgsSchema:()=>MUt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>$U,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>Vpt,ChecklistItemWhereInputSchema:()=>Qe,ChecklistItemWhereUniqueInputSchema:()=>te,ChecklistStatusSchema:()=>Et,ConstraintTypeSchema:()=>ue,CookBookAggregateArgsSchema:()=>wCt,CookBookArgsSchema:()=>R0,CookBookAvgOrderByAggregateInputSchema:()=>fat,CookBookCountOrderByAggregateInputSchema:()=>Oat,CookBookCountOutputTypeArgsSchema:()=>k0,CookBookCountOutputTypeSelectSchema:()=>ztt,CookBookCreateArgsSchema:()=>qxt,CookBookCreateInputSchema:()=>Z9,CookBookCreateManyAndReturnArgsSchema:()=>_xt,CookBookCreateManyArgsSchema:()=>Dxt,CookBookCreateManyInputSchema:()=>yU,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>WO,CookBookCreateManyRestaurantInputSchema:()=>VH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>$l,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>so,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>_3,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>yh,CookBookCreateWithoutRecipesInputSchema:()=>gf,CookBookCreateWithoutRestaurantInputSchema:()=>Lc,CookBookDeleteArgsSchema:()=>Ext,CookBookDeleteManyArgsSchema:()=>Qxt,CookBookFindFirstArgsSchema:()=>OCt,CookBookFindFirstOrThrowArgsSchema:()=>fCt,CookBookFindManyArgsSchema:()=>ZX,CookBookFindUniqueArgsSchema:()=>BCt,CookBookFindUniqueOrThrowArgsSchema:()=>qCt,CookBookGroupByArgsSchema:()=>NCt,CookBookIncludeSchema:()=>pz,CookBookListRelationFilterSchema:()=>i2,CookBookMaxOrderByAggregateInputSchema:()=>wat,CookBookMinOrderByAggregateInputSchema:()=>Nat,CookBookOrderByRelationAggregateInputSchema:()=>nat,CookBookOrderByWithAggregationInputSchema:()=>iH,CookBookOrderByWithRelationInputSchema:()=>Qm,CookBookScalarFieldEnumSchema:()=>uC,CookBookScalarRelationFilterSchema:()=>g2,CookBookScalarWhereInputSchema:()=>Rp,CookBookScalarWhereWithAggregatesInputSchema:()=>FA,CookBookSchema:()=>pmt,CookBookSelectSchema:()=>cz,CookBookSumOrderByAggregateInputSchema:()=>Bat,CookBookUncheckedCreateInputSchema:()=>v9,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>Cf,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,CookBookUncheckedUpdateInputSchema:()=>f9,CookBookUncheckedUpdateManyInputSchema:()=>w9,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Fst,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>eL,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>g7,CookBookUpdateArgsSchema:()=>Lxt,CookBookUpdateInputSchema:()=>O9,CookBookUpdateManyAndReturnArgsSchema:()=>Hxt,CookBookUpdateManyArgsSchema:()=>Vxt,CookBookUpdateManyMutationInputSchema:()=>TB,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>HW,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>an,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>lut,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>VW,CookBookUpdateWithoutRecipesInputSchema:()=>tL,CookBookUpdateWithoutRestaurantInputSchema:()=>I7,CookBookUpsertArgsSchema:()=>Fxt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>LW,CookBookUpsertWithoutRecipesInputSchema:()=>iut,CookBookWhereInputSchema:()=>$e,CookBookWhereUniqueInputSchema:()=>ee,CountStatusSchema:()=>ft,CustomerFeedbackAggregateArgsSchema:()=>zIt,CustomerFeedbackArgsSchema:()=>Dmt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>got,CustomerFeedbackCountOrderByAggregateInputSchema:()=>Iot,CustomerFeedbackCreateArgsSchema:()=>yWt,CustomerFeedbackCreateInputSchema:()=>MG,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>mWt,CustomerFeedbackCreateManyArgsSchema:()=>zWt,CustomerFeedbackCreateManyInputSchema:()=>VP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>CN,CustomerFeedbackCreateManyMenuItemInputSchema:()=>i0,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>nf,CustomerFeedbackCreateManyRespondedByInputSchema:()=>mQ,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>NO,CustomerFeedbackCreateManyRestaurantInputSchema:()=>eQ,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>um,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>Ka,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>rr,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>fI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>wh,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>Sh,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>wy,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Bu,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>uu,CustomerFeedbackCreatetagsInputSchema:()=>sp,CustomerFeedbackDeleteArgsSchema:()=>bWt,CustomerFeedbackDeleteManyArgsSchema:()=>CWt,CustomerFeedbackFindFirstArgsSchema:()=>yIt,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>dIt,CustomerFeedbackFindManyArgsSchema:()=>jT,CustomerFeedbackFindUniqueArgsSchema:()=>bIt,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>hIt,CustomerFeedbackGroupByArgsSchema:()=>mIt,CustomerFeedbackIncludeSchema:()=>Sd,CustomerFeedbackListRelationFilterSchema:()=>GS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>Cot,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Aot,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>$B,CustomerFeedbackOrderByWithAggregationInputSchema:()=>BV,CustomerFeedbackOrderByWithRelationInputSchema:()=>Cb,CustomerFeedbackScalarFieldEnumSchema:()=>Eg,CustomerFeedbackScalarWhereInputSchema:()=>bl,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>gA,CustomerFeedbackSchema:()=>Dzt,CustomerFeedbackSelectSchema:()=>Td,CustomerFeedbackSumOrderByAggregateInputSchema:()=>Sot,CustomerFeedbackUncheckedCreateInputSchema:()=>ZG,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Im,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>hi,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Cr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>Ny,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>qu,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>su,CustomerFeedbackUncheckedUpdateInputSchema:()=>OG,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>fG,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>cdt,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>wm,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>uyt,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>nl,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>$st,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Qr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>sX,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>dJ,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>q7,CustomerFeedbackUpdateArgsSchema:()=>hWt,CustomerFeedbackUpdateInputSchema:()=>vG,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>gWt,CustomerFeedbackUpdateManyArgsSchema:()=>IWt,CustomerFeedbackUpdateManyMutationInputSchema:()=>KT,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>rM,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>uk,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>SR,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>km,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>Bi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>lM,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>ck,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>AR,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>uX,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>yJ,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>B7,CustomerFeedbackUpdatetagsInputSchema:()=>Jr,CustomerFeedbackUpsertArgsSchema:()=>dWt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>iM,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>pk,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>CR,CustomerFeedbackWhereInputSchema:()=>ya,CustomerFeedbackWhereUniqueInputSchema:()=>q,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>z,DateTimeNullableFilterSchema:()=>$t,DateTimeNullableWithAggregatesFilterSchema:()=>Gr,DateTimeWithAggregatesFilterSchema:()=>Z,DayOfWeekSchema:()=>ce,DietaryRestrictionAggregateArgsSchema:()=>CIt,DietaryRestrictionArgsSchema:()=>_mt,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>Wot,DietaryRestrictionCountOrderByAggregateInputSchema:()=>Uot,DietaryRestrictionCountOutputTypeArgsSchema:()=>h0,DietaryRestrictionCountOutputTypeSelectSchema:()=>ltt,DietaryRestrictionCreateArgsSchema:()=>AWt,DietaryRestrictionCreateInputSchema:()=>wG,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>PWt,DietaryRestrictionCreateManyArgsSchema:()=>TWt,DietaryRestrictionCreateManyInputSchema:()=>HP,DietaryRestrictionCreateNestedManyWithoutIngredientsInputSchema:()=>$I,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>sm,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Wo,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>mI,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>wI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>oI,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>$s,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>By,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>Ps,DietaryRestrictionDeleteArgsSchema:()=>UWt,DietaryRestrictionDeleteManyArgsSchema:()=>xWt,DietaryRestrictionFindFirstArgsSchema:()=>IIt,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>gIt,DietaryRestrictionFindManyArgsSchema:()=>MT,DietaryRestrictionFindUniqueArgsSchema:()=>SIt,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>TIt,DietaryRestrictionGroupByArgsSchema:()=>AIt,DietaryRestrictionIncludeSchema:()=>Pd,DietaryRestrictionListRelationFilterSchema:()=>KS,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Rot,DietaryRestrictionMinOrderByAggregateInputSchema:()=>kot,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>oq,DietaryRestrictionOrderByWithAggregationInputSchema:()=>qV,DietaryRestrictionOrderByWithRelationInputSchema:()=>Ab,DietaryRestrictionScalarFieldEnumSchema:()=>Lg,DietaryRestrictionScalarWhereInputSchema:()=>Cl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>CA,DietaryRestrictionSchema:()=>_zt,DietaryRestrictionSelectSchema:()=>Ud,DietaryRestrictionSumOrderByAggregateInputSchema:()=>xot,DietaryRestrictionUncheckedCreateInputSchema:()=>NG,DietaryRestrictionUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>ag,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>gm,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Yo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>Js,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>qy,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>Us,DietaryRestrictionUncheckedUpdateInputSchema:()=>qG,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>FG,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Eyt,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>Cg,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>udt,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Nm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>jyt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Dn,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>UK,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>dX,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>XJ,DietaryRestrictionUpdateArgsSchema:()=>WWt,DietaryRestrictionUpdateInputSchema:()=>BG,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>kWt,DietaryRestrictionUpdateManyArgsSchema:()=>RWt,DietaryRestrictionUpdateManyMutationInputSchema:()=>XT,DietaryRestrictionUpdateManyWithWhereWithoutIngredientsInputSchema:()=>ej,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>uM,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>bx,DietaryRestrictionUpdateManyWithoutIngredientsNestedInputSchema:()=>yg,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>xm,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>gn,DietaryRestrictionUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>tj,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>cM,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>mx,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>PK,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>yX,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>KJ,DietaryRestrictionUpsertArgsSchema:()=>SWt,DietaryRestrictionUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>Xx,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>pM,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>zx,DietaryRestrictionWhereInputSchema:()=>da,DietaryRestrictionWhereUniqueInputSchema:()=>F,EarlyAccessAggregateArgsSchema:()=>Hgt,EarlyAccessAvgOrderByAggregateInputSchema:()=>Dnt,EarlyAccessCountOrderByAggregateInputSchema:()=>Fnt,EarlyAccessCreateArgsSchema:()=>jkt,EarlyAccessCreateInputSchema:()=>Y1,EarlyAccessCreateManyAndReturnArgsSchema:()=>vkt,EarlyAccessCreateManyArgsSchema:()=>Zkt,EarlyAccessCreateManyInputSchema:()=>iU,EarlyAccessDeleteArgsSchema:()=>Okt,EarlyAccessDeleteManyArgsSchema:()=>Bkt,EarlyAccessFindFirstArgsSchema:()=>Egt,EarlyAccessFindFirstOrThrowArgsSchema:()=>Lgt,EarlyAccessFindManyArgsSchema:()=>Vgt,EarlyAccessFindUniqueArgsSchema:()=>Ygt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>Ggt,EarlyAccessGroupByArgsSchema:()=>Qgt,EarlyAccessMaxOrderByAggregateInputSchema:()=>_nt,EarlyAccessMinOrderByAggregateInputSchema:()=>Ent,EarlyAccessOrderByWithAggregationInputSchema:()=>KV,EarlyAccessOrderByWithRelationInputSchema:()=>Zb,EarlyAccessScalarFieldEnumSchema:()=>nC,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>vA,EarlyAccessSchema:()=>emt,EarlyAccessSelectSchema:()=>eb,EarlyAccessSumOrderByAggregateInputSchema:()=>Lnt,EarlyAccessUncheckedCreateInputSchema:()=>G1,EarlyAccessUncheckedUpdateInputSchema:()=>J1,EarlyAccessUncheckedUpdateManyInputSchema:()=>X1,EarlyAccessUpdateArgsSchema:()=>fkt,EarlyAccessUpdateInputSchema:()=>$1,EarlyAccessUpdateManyAndReturnArgsSchema:()=>Nkt,EarlyAccessUpdateManyArgsSchema:()=>wkt,EarlyAccessUpdateManyMutationInputSchema:()=>K1,EarlyAccessUpsertArgsSchema:()=>Mkt,EarlyAccessWhereInputSchema:()=>Al,EarlyAccessWhereUniqueInputSchema:()=>ob,EnumCategoryFieldUpdateOperationsInputSchema:()=>dt,EnumCategoryFilterSchema:()=>eq,EnumCategoryWithAggregatesFilterSchema:()=>tit,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>Sp,EnumChecklistFrequencyFilterSchema:()=>wB,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>Get,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>nb,EnumChecklistItemTypeFilterSchema:()=>NB,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>eot,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>tm,EnumChecklistStatusFilterSchema:()=>BB,EnumChecklistStatusWithAggregatesFilterSchema:()=>yot,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>NC,EnumConstraintTypeFilterSchema:()=>VB,EnumConstraintTypeWithAggregatesFilterSchema:()=>gnt,EnumCountStatusFieldUpdateOperationsInputSchema:()=>mp,EnumCountStatusFilterSchema:()=>iq,EnumCountStatusWithAggregatesFilterSchema:()=>Oit,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>wC,EnumDayOfWeekFilterSchema:()=>LB,EnumDayOfWeekWithAggregatesFilterSchema:()=>dnt,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>Ap,EnumEquipmentStatusFilterSchema:()=>vB,EnumEquipmentStatusWithAggregatesFilterSchema:()=>Met,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>$r,EnumFeedbackSourceFilterSchema:()=>qB,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Tot,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Kr,EnumFeedbackStatusFilterSchema:()=>FB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>Pot,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>dp,EnumInventoryTypeFilterSchema:()=>n2,EnumInventoryTypeWithAggregatesFilterSchema:()=>oat,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>OC,EnumMaintenanceTypeFilterSchema:()=>fB,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>_et,EnumNutritionSourceNullableFilterSchema:()=>nq,EnumNutritionSourceNullableWithAggregatesFilterSchema:()=>rit,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>bp,EnumOrderStatusFilterSchema:()=>lq,EnumOrderStatusWithAggregatesFilterSchema:()=>$it,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>vC,EnumPhotoTypeFilterSchema:()=>MB,EnumPhotoTypeWithAggregatesFilterSchema:()=>Htt,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>ea,EnumPrepStatusFilterSchema:()=>tT,EnumPrepStatusWithAggregatesFilterSchema:()=>F2,EnumProductionStatusFieldUpdateOperationsInputSchema:()=>yp,EnumProductionStatusFilterSchema:()=>DB,EnumProductionStatusWithAggregatesFilterSchema:()=>$ot,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>ib,EnumShiftStatusFilterSchema:()=>rq,EnumShiftStatusWithAggregatesFilterSchema:()=>dlt,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>yt,EnumSkillLevelFilterSchema:()=>tq,EnumSkillLevelWithAggregatesFilterSchema:()=>Xat,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>fC,EnumTaskTypeFilterSchema:()=>EB,EnumTaskTypeWithAggregatesFilterSchema:()=>rnt,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>tp,EnumTransactionTypeFilterSchema:()=>aq,EnumTransactionTypeWithAggregatesFilterSchema:()=>kit,EnumUserRoleFieldUpdateOperationsInputSchema:()=>BC,EnumUserRoleFilterSchema:()=>XB,EnumUserRoleWithAggregatesFilterSchema:()=>kat,EquipmentAggregateArgsSchema:()=>Cht,EquipmentArgsSchema:()=>dM,EquipmentAvgOrderByAggregateInputSchema:()=>Ret,EquipmentCountOrderByAggregateInputSchema:()=>Wet,EquipmentCountOutputTypeArgsSchema:()=>s0,EquipmentCountOutputTypeSelectSchema:()=>ott,EquipmentCreateArgsSchema:()=>YPt,EquipmentCreateInputSchema:()=>VY,EquipmentCreateManyAndReturnArgsSchema:()=>JPt,EquipmentCreateManyArgsSchema:()=>$Pt,EquipmentCreateManyInputSchema:()=>NP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>fO,EquipmentCreateManyRestaurantInputSchema:()=>XH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>ir,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>Art,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>gq,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>t3,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>K6,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>Ch,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>tv,EquipmentCreateWithoutRecipesInputSchema:()=>$Z,EquipmentCreateWithoutRestaurantInputSchema:()=>lu,EquipmentDeleteArgsSchema:()=>KPt,EquipmentDeleteManyArgsSchema:()=>oUt,EquipmentFindFirstArgsSchema:()=>Iht,EquipmentFindFirstOrThrowArgsSchema:()=>ght,EquipmentFindManyArgsSchema:()=>CX,EquipmentFindUniqueArgsSchema:()=>Sht,EquipmentFindUniqueOrThrowArgsSchema:()=>Tht,EquipmentGroupByArgsSchema:()=>Aht,EquipmentIncludeSchema:()=>ld,EquipmentListRelationFilterSchema:()=>p2,EquipmentMaxOrderByAggregateInputSchema:()=>ket,EquipmentMinOrderByAggregateInputSchema:()=>xet,EquipmentOrderByRelationAggregateInputSchema:()=>iat,EquipmentOrderByWithAggregationInputSchema:()=>jV,EquipmentOrderByWithRelationInputSchema:()=>Jp,EquipmentScalarFieldEnumSchema:()=>fg,EquipmentScalarRelationFilterSchema:()=>fM,EquipmentScalarWhereInputSchema:()=>xp,EquipmentScalarWhereWithAggregatesInputSchema:()=>sA,EquipmentSchema:()=>vzt,EquipmentSelectSchema:()=>rd,EquipmentStatusSchema:()=>Bt,EquipmentSumOrderByAggregateInputSchema:()=>jet,EquipmentUncheckedCreateInputSchema:()=>HY,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>Ir,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>ev,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>JZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>ru,EquipmentUncheckedUpdateInputSchema:()=>YY,EquipmentUncheckedUpdateManyInputSchema:()=>GY,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Yst,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Vr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>x_,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>U_,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>f7,EquipmentUpdateArgsSchema:()=>XPt,EquipmentUpdateInputSchema:()=>QY,EquipmentUpdateManyAndReturnArgsSchema:()=>eUt,EquipmentUpdateManyArgsSchema:()=>tUt,EquipmentUpdateManyMutationInputSchema:()=>sB,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>bR,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>Srt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>Sq,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Opt,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>jpt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>mR,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>k_,EquipmentUpdateWithoutRecipesInputSchema:()=>P_,EquipmentUpdateWithoutRestaurantInputSchema:()=>O7,EquipmentUpsertArgsSchema:()=>GPt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>zR,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>vpt,EquipmentUpsertWithoutRecipesInputSchema:()=>xpt,EquipmentWhereInputSchema:()=>Ze,EquipmentWhereUniqueInputSchema:()=>Ht,FeedbackSourceSchema:()=>Mt,FeedbackStatusSchema:()=>Zt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>R,FloatNullableFilterSchema:()=>et,FloatNullableListFilterSchema:()=>Lb,FloatNullableWithAggregatesFilterSchema:()=>Kn,FloatWithAggregatesFilterSchema:()=>Ut,FoodCostHistoryAggregateArgsSchema:()=>oTt,FoodCostHistoryArgsSchema:()=>pbt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>Klt,FoodCostHistoryCountOrderByAggregateInputSchema:()=>Jlt,FoodCostHistoryCreateArgsSchema:()=>yvt,FoodCostHistoryCreateInputSchema:()=>M4,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>mvt,FoodCostHistoryCreateManyArgsSchema:()=>zvt,FoodCostHistoryCreateManyInputSchema:()=>vU,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>Tf,FoodCostHistoryCreateManyRecipeInputSchema:()=>PQ,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>bo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Hh,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>as,FoodCostHistoryDeleteArgsSchema:()=>bvt,FoodCostHistoryDeleteManyArgsSchema:()=>Cvt,FoodCostHistoryFindFirstArgsSchema:()=>tTt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>eTt,FoodCostHistoryFindManyArgsSchema:()=>BX,FoodCostHistoryFindUniqueArgsSchema:()=>aTt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>iTt,FoodCostHistoryGroupByArgsSchema:()=>nTt,FoodCostHistoryIncludeSchema:()=>$z,FoodCostHistoryListRelationFilterSchema:()=>C2,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>Xlt,FoodCostHistoryMinOrderByAggregateInputSchema:()=>trt,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>qat,FoodCostHistoryOrderByWithAggregationInputSchema:()=>WH,FoodCostHistoryOrderByWithRelationInputSchema:()=>_b,FoodCostHistoryScalarFieldEnumSchema:()=>MC,FoodCostHistoryScalarWhereInputSchema:()=>Np,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>rS,FoodCostHistorySchema:()=>xmt,FoodCostHistorySelectSchema:()=>Jz,FoodCostHistorySumOrderByAggregateInputSchema:()=>ert,FoodCostHistoryUncheckedCreateInputSchema:()=>Z4,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>is,FoodCostHistoryUncheckedUpdateInputSchema:()=>O4,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>f4,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Cyt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Mn,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>vJ,FoodCostHistoryUpdateArgsSchema:()=>hvt,FoodCostHistoryUpdateInputSchema:()=>v4,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>gvt,FoodCostHistoryUpdateManyArgsSchema:()=>Ivt,FoodCostHistoryUpdateManyMutationInputSchema:()=>xB,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>Fk,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>cn,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>qk,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>ZJ,FoodCostHistoryUpsertArgsSchema:()=>dvt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Bk,FoodCostHistoryWhereInputSchema:()=>va,FoodCostHistoryWhereUniqueInputSchema:()=>xe,IngredientAggregateArgsSchema:()=>YCt,IngredientAllergenAggregateArgsSchema:()=>vgt,IngredientAllergenArgsSchema:()=>Jmt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>Mnt,IngredientAllergenCountOrderByAggregateInputSchema:()=>jnt,IngredientAllergenCreateArgsSchema:()=>ykt,IngredientAllergenCreateInputSchema:()=>B1,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>cO,IngredientAllergenCreateManyAllergenInputSchema:()=>BH,IngredientAllergenCreateManyAndReturnArgsSchema:()=>mkt,IngredientAllergenCreateManyArgsSchema:()=>zkt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>Gf,IngredientAllergenCreateManyIngredientInputSchema:()=>DQ,IngredientAllergenCreateManyInputSchema:()=>nU,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>vrt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>YI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>ih,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>dI,IngredientAllergenCreateWithoutAllergenInputSchema:()=>jc,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Hs,IngredientAllergenDeleteArgsSchema:()=>bkt,IngredientAllergenDeleteManyArgsSchema:()=>Ckt,IngredientAllergenFindFirstArgsSchema:()=>Mgt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>Zgt,IngredientAllergenFindManyArgsSchema:()=>ON,IngredientAllergenFindUniqueArgsSchema:()=>fgt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>wgt,IngredientAllergenGroupByArgsSchema:()=>Ogt,IngredientAllergenIncludeSchema:()=>Hd,IngredientAllergenIngredientIdAllergenIdCompoundUniqueInputSchema:()=>XN,IngredientAllergenListRelationFilterSchema:()=>_M,IngredientAllergenMaxOrderByAggregateInputSchema:()=>Znt,IngredientAllergenMinOrderByAggregateInputSchema:()=>vnt,IngredientAllergenOrderByRelationAggregateInputSchema:()=>X4,IngredientAllergenOrderByWithAggregationInputSchema:()=>$V,IngredientAllergenOrderByWithRelationInputSchema:()=>jb,IngredientAllergenScalarFieldEnumSchema:()=>eC,IngredientAllergenScalarWhereInputSchema:()=>xl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>MA,IngredientAllergenSchema:()=>Xzt,IngredientAllergenSelectSchema:()=>Qd,IngredientAllergenSumOrderByAggregateInputSchema:()=>Ont,IngredientAllergenUncheckedCreateInputSchema:()=>q1,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>Ort,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>og,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>Mc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>Qs,IngredientAllergenUncheckedUpdateInputSchema:()=>D1,IngredientAllergenUncheckedUpdateManyInputSchema:()=>_1,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>vst,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>wrt,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Dyt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>Ig,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>i7,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>AK,IngredientAllergenUpdateArgsSchema:()=>hkt,IngredientAllergenUpdateInputSchema:()=>F1,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>gkt,IngredientAllergenUpdateManyArgsSchema:()=>Ikt,IngredientAllergenUpdateManyMutationInputSchema:()=>TM,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>UW,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>Gx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>frt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>ug,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>PW,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Yx,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>a7,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>CK,IngredientAllergenUpsertArgsSchema:()=>dkt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>TW,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Qx,IngredientAllergenWhereInputSchema:()=>Sa,IngredientAllergenWhereUniqueInputSchema:()=>gt,IngredientArgsSchema:()=>lp,IngredientAvgOrderByAggregateInputSchema:()=>nit,IngredientCountOrderByAggregateInputSchema:()=>oit,IngredientCountOutputTypeArgsSchema:()=>j0,IngredientCountOutputTypeSelectSchema:()=>btt,IngredientCreateArgsSchema:()=>njt,IngredientCreateInputSchema:()=>_9,IngredientCreateManyAndReturnArgsSchema:()=>ljt,IngredientCreateManyArgsSchema:()=>ijt,IngredientCreateManyInputSchema:()=>zU,IngredientCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>$q,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>AD,IngredientCreateNestedOneWithoutIngredientAllergensInputSchema:()=>b5,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>oT,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>q5,IngredientCreateNestedOneWithoutPriceHistoryInputSchema:()=>d5,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>qF,IngredientCreateNestedOneWithoutWasteRecordsInputSchema:()=>dF,IngredientCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>oh,IngredientCreateOrConnectWithoutIngredientAllergensInputSchema:()=>x3,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>e8,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>z8,IngredientCreateOrConnectWithoutPriceHistoryInputSchema:()=>p3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>$3,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>TI,IngredientCreateOrConnectWithoutWasteRecordsInputSchema:()=>b3,IngredientCreateWithoutDietaryRestrictionsInputSchema:()=>Pc,IngredientCreateWithoutIngredientAllergensInputSchema:()=>uO,IngredientCreateWithoutInventoryItemsInputSchema:()=>uw,IngredientCreateWithoutOrderItemsInputSchema:()=>Dw,IngredientCreateWithoutPriceHistoryInputSchema:()=>Cv,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>Xf,IngredientCreateWithoutVendorsInputSchema:()=>yy,IngredientCreateWithoutWasteRecordsInputSchema:()=>wv,IngredientDeleteArgsSchema:()=>rjt,IngredientDeleteManyArgsSchema:()=>sjt,IngredientFindFirstArgsSchema:()=>HCt,IngredientFindFirstOrThrowArgsSchema:()=>QCt,IngredientFindManyArgsSchema:()=>wN,IngredientFindUniqueArgsSchema:()=>$Ct,IngredientFindUniqueOrThrowArgsSchema:()=>JCt,IngredientGroupByArgsSchema:()=>GCt,IngredientIncludeSchema:()=>yz,IngredientListRelationFilterSchema:()=>DM,IngredientMaxOrderByAggregateInputSchema:()=>ait,IngredientMinOrderByAggregateInputSchema:()=>iit,IngredientOrderByRelationAggregateInputSchema:()=>G4,IngredientOrderByWithAggregationInputSchema:()=>rH,IngredientOrderByWithRelationInputSchema:()=>_l,IngredientScalarFieldEnumSchema:()=>yC,IngredientScalarRelationFilterSchema:()=>cp,IngredientScalarWhereInputSchema:()=>kl,IngredientScalarWhereWithAggregatesInputSchema:()=>_A,IngredientSchema:()=>umt,IngredientSelectSchema:()=>dz,IngredientSumOrderByAggregateInputSchema:()=>lit,IngredientUncheckedCreateInputSchema:()=>E9,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Xq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>PD,IngredientUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>Uc,IngredientUncheckedCreateWithoutIngredientAllergensInputSchema:()=>sO,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>sw,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>_w,IngredientUncheckedCreateWithoutPriceHistoryInputSchema:()=>Av,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>tw,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>dy,IngredientUncheckedCreateWithoutWasteRecordsInputSchema:()=>Nv,IngredientUncheckedUpdateInputSchema:()=>V9,IngredientUncheckedUpdateManyInputSchema:()=>H9,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>jst,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>iF,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>Jyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>jD,IngredientUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>X8,IngredientUncheckedUpdateWithoutIngredientAllergensInputSchema:()=>vE,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>mL,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>DL,IngredientUncheckedUpdateWithoutPriceHistoryInputSchema:()=>V_,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>iL,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>DK,IngredientUncheckedUpdateWithoutWasteRecordsInputSchema:()=>rE,IngredientUpdateArgsSchema:()=>pjt,IngredientUpdateInputSchema:()=>L9,IngredientUpdateManyAndReturnArgsSchema:()=>ujt,IngredientUpdateManyArgsSchema:()=>cjt,IngredientUpdateManyMutationInputSchema:()=>UM,IngredientUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>bW,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Uj,IngredientUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>oF,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>RD,IngredientUpdateOneRequiredWithoutIngredientAllergensNestedInputSchema:()=>I5,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>sT,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>D5,IngredientUpdateOneRequiredWithoutPriceHistoryNestedInputSchema:()=>m5,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>_F,IngredientUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>bF,IngredientUpdateToOneWithWhereWithoutIngredientAllergensInputSchema:()=>Bct,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>Cut,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Hut,IngredientUpdateToOneWithWhereWithoutPriceHistoryInputSchema:()=>$pt,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>uut,IngredientUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>yct,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>mW,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>Pj,IngredientUpdateWithoutDietaryRestrictionsInputSchema:()=>K8,IngredientUpdateWithoutIngredientAllergensInputSchema:()=>ZE,IngredientUpdateWithoutInventoryItemsInputSchema:()=>zL,IngredientUpdateWithoutOrderItemsInputSchema:()=>FL,IngredientUpdateWithoutPriceHistoryInputSchema:()=>L_,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>aL,IngredientUpdateWithoutVendorsInputSchema:()=>FK,IngredientUpdateWithoutWasteRecordsInputSchema:()=>lE,IngredientUpsertArgsSchema:()=>ajt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>zW,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>Tj,IngredientUpsertWithoutIngredientAllergensInputSchema:()=>Nct,IngredientUpsertWithoutInventoryItemsInputSchema:()=>gut,IngredientUpsertWithoutOrderItemsInputSchema:()=>Vut,IngredientUpsertWithoutPriceHistoryInputSchema:()=>Gpt,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>cut,IngredientUpsertWithoutWasteRecordsInputSchema:()=>sct,IngredientWhereInputSchema:()=>jt,IngredientWhereUniqueInputSchema:()=>$,IntFieldUpdateOperationsInputSchema:()=>n,IntFilterSchema:()=>s,IntNullableFilterSchema:()=>at,IntNullableListFilterSchema:()=>_I,IntNullableWithAggregatesFilterSchema:()=>fa,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>lCt,InventoryArgsSchema:()=>NI,InventoryAvgOrderByAggregateInputSchema:()=>Knt,InventoryCountOrderByAggregateInputSchema:()=>Jnt,InventoryCountOutputTypeArgsSchema:()=>P0,InventoryCountOutputTypeSelectSchema:()=>stt,InventoryCreateArgsSchema:()=>Ykt,InventoryCreateInputSchema:()=>l9,InventoryCreateManyAndReturnArgsSchema:()=>Jkt,InventoryCreateManyArgsSchema:()=>$kt,InventoryCreateManyInputSchema:()=>rU,InventoryCreateNestedOneWithoutItemsInputSchema:()=>eT,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Jl,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>aD,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>KF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>t8,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>RO,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>l8,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>n8,InventoryCreateWithoutItemsInputSchema:()=>pw,InventoryCreateWithoutRestaurantInputSchema:()=>gT,InventoryCreateWithoutStockCountsInputSchema:()=>Tw,InventoryCreateWithoutTransactionsInputSchema:()=>hw,InventoryDeleteArgsSchema:()=>Kkt,InventoryDeleteManyArgsSchema:()=>oxt,InventoryFindFirstArgsSchema:()=>nCt,InventoryFindFirstOrThrowArgsSchema:()=>aCt,InventoryFindManyArgsSchema:()=>iCt,InventoryFindUniqueArgsSchema:()=>pCt,InventoryFindUniqueOrThrowArgsSchema:()=>cCt,InventoryGroupByArgsSchema:()=>rCt,InventoryIncludeSchema:()=>Kd,InventoryItemAggregateArgsSchema:()=>yAt,InventoryItemArgsSchema:()=>BS,InventoryItemAvgOrderByAggregateInputSchema:()=>git,InventoryItemCountOrderByAggregateInputSchema:()=>Iit,InventoryItemCountOutputTypeArgsSchema:()=>v0,InventoryItemCountOutputTypeSelectSchema:()=>Itt,InventoryItemCreateArgsSchema:()=>jjt,InventoryItemCreateInputSchema:()=>n$,InventoryItemCreateManyAndReturnArgsSchema:()=>vjt,InventoryItemCreateManyArgsSchema:()=>Zjt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>Hf,InventoryItemCreateManyIngredientInputSchema:()=>BQ,InventoryItemCreateManyInputSchema:()=>hU,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>CO,InventoryItemCreateManyInventoryInputSchema:()=>DH,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>HO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>aQ,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>LI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>oZ,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Da,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>f5,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>XF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>ZF,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>cI,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>ph,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>Uh,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>c8,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>a8,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>W3,InventoryItemCreateWithoutIngredientInputSchema:()=>Bs,InventoryItemCreateWithoutInventoryInputSchema:()=>wc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>bu,InventoryItemCreateWithoutStockCountsInputSchema:()=>jw,InventoryItemCreateWithoutTransactionsInputSchema:()=>gw,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>nO,InventoryItemDeleteArgsSchema:()=>Ojt,InventoryItemDeleteManyArgsSchema:()=>Bjt,InventoryItemFindFirstArgsSchema:()=>uAt,InventoryItemFindFirstOrThrowArgsSchema:()=>sAt,InventoryItemFindManyArgsSchema:()=>NT,InventoryItemFindUniqueArgsSchema:()=>zAt,InventoryItemFindUniqueOrThrowArgsSchema:()=>mAt,InventoryItemGroupByArgsSchema:()=>dAt,InventoryItemIncludeSchema:()=>Iz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>eB,InventoryItemListRelationFilterSchema:()=>VS,InventoryItemMaxOrderByAggregateInputSchema:()=>Cit,InventoryItemMinOrderByAggregateInputSchema:()=>Ait,InventoryItemOrderByRelationAggregateInputSchema:()=>HB,InventoryItemOrderByWithAggregationInputSchema:()=>uH,InventoryItemOrderByWithRelationInputSchema:()=>Cp,InventoryItemScalarFieldEnumSchema:()=>mC,InventoryItemScalarRelationFilterSchema:()=>LS,InventoryItemScalarWhereInputSchema:()=>yl,InventoryItemScalarWhereWithAggregatesInputSchema:()=>VA,InventoryItemSchema:()=>dmt,InventoryItemSelectSchema:()=>gz,InventoryItemSumOrderByAggregateInputSchema:()=>Sit,InventoryItemUncheckedCreateInputSchema:()=>a$,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>KI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>iZ,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>li,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>qs,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Nc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>hu,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>Mw,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>Cw,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>aO,InventoryItemUncheckedUpdateInputSchema:()=>l$,InventoryItemUncheckedUpdateManyInputSchema:()=>r$,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Nyt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>zg,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>wst,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>yZ,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Xst,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Hi,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>dK,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>s7,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>V7,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>ML,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>AL,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>RE,InventoryItemUpdateArgsSchema:()=>fjt,InventoryItemUpdateInputSchema:()=>i$,InventoryItemUpdateManyAndReturnArgsSchema:()=>Njt,InventoryItemUpdateManyArgsSchema:()=>wjt,InventoryItemUpdateManyMutationInputSchema:()=>iP,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Nx,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>OW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>MR,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>lg,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>cZ,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Ri,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>N5,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>oD,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>fF,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>wut,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Wut,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Zct,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>wx,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>vW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>jR,InventoryItemUpdateWithoutIngredientInputSchema:()=>yK,InventoryItemUpdateWithoutInventoryInputSchema:()=>u7,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>L7,InventoryItemUpdateWithoutStockCountsInputSchema:()=>jL,InventoryItemUpdateWithoutTransactionsInputSchema:()=>CL,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>WE,InventoryItemUpsertArgsSchema:()=>Mjt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>fx,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>ZW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>xR,InventoryItemUpsertWithoutStockCountsInputSchema:()=>fut,InventoryItemUpsertWithoutTransactionsInputSchema:()=>Uut,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Mct,InventoryItemWhereInputSchema:()=>ie,InventoryItemWhereUniqueInputSchema:()=>f,InventoryMaxOrderByAggregateInputSchema:()=>Xnt,InventoryMinOrderByAggregateInputSchema:()=>tat,InventoryNullableScalarRelationFilterSchema:()=>l2,InventoryOrderByWithAggregationInputSchema:()=>tH,InventoryOrderByWithRelationInputSchema:()=>ip,InventoryScalarFieldEnumSchema:()=>iC,InventoryScalarRelationFilterSchema:()=>XS,InventoryScalarWhereWithAggregatesInputSchema:()=>fA,InventorySchema:()=>nmt,InventorySelectSchema:()=>Xd,InventorySumOrderByAggregateInputSchema:()=>eat,InventoryTransactionAggregateArgsSchema:()=>IAt,InventoryTransactionArgsSchema:()=>obt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>Pit,InventoryTransactionCountOrderByAggregateInputSchema:()=>Tit,InventoryTransactionCreateArgsSchema:()=>qjt,InventoryTransactionCreateInputSchema:()=>p$,InventoryTransactionCreateManyAndReturnArgsSchema:()=>_jt,InventoryTransactionCreateManyArgsSchema:()=>Djt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>rf,InventoryTransactionCreateManyCreatedByInputSchema:()=>IQ,InventoryTransactionCreateManyInputSchema:()=>IU,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>AO,InventoryTransactionCreateManyInventoryInputSchema:()=>_H,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>zw,InventoryTransactionCreateManyItemInputSchema:()=>LQ,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ei,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>nZ,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>aT,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>qh,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>ch,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>hI,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Lu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>Bc,InventoryTransactionCreateWithoutItemInputSchema:()=>ty,InventoryTransactionDeleteArgsSchema:()=>Ejt,InventoryTransactionDeleteManyArgsSchema:()=>Qjt,InventoryTransactionFindFirstArgsSchema:()=>bAt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>hAt,InventoryTransactionFindManyArgsSchema:()=>BT,InventoryTransactionFindUniqueArgsSchema:()=>CAt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>AAt,InventoryTransactionGroupByArgsSchema:()=>gAt,InventoryTransactionIncludeSchema:()=>Cz,InventoryTransactionListRelationFilterSchema:()=>HS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>Uit,InventoryTransactionMinOrderByAggregateInputSchema:()=>Wit,InventoryTransactionOrderByRelationAggregateInputSchema:()=>QB,InventoryTransactionOrderByWithAggregationInputSchema:()=>sH,InventoryTransactionOrderByWithRelationInputSchema:()=>wb,InventoryTransactionScalarFieldEnumSchema:()=>bC,InventoryTransactionScalarWhereInputSchema:()=>dl,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>HA,InventoryTransactionSchema:()=>zmt,InventoryTransactionSelectSchema:()=>Az,InventoryTransactionSumOrderByAggregateInputSchema:()=>Rit,InventoryTransactionUncheckedCreateInputSchema:()=>c$,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ci,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>lZ,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>rT,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>Vu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>qc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>ey,InventoryTransactionUncheckedUpdateInputSchema:()=>s$,InventoryTransactionUncheckedUpdateManyInputSchema:()=>y$,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>dyt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ll,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Nst,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>dZ,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>Vyt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>bT,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>gJ,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>d7,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>xK,InventoryTransactionUpdateArgsSchema:()=>Ljt,InventoryTransactionUpdateInputSchema:()=>u$,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>Hjt,InventoryTransactionUpdateManyArgsSchema:()=>Vjt,InventoryTransactionUpdateManyMutationInputSchema:()=>lP,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>gk,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>NW,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>rj,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>Di,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>uZ,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>dT,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>Ik,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>wW,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>lj,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>IJ,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>y7,InventoryTransactionUpdateWithoutItemInputSchema:()=>kK,InventoryTransactionUpsertArgsSchema:()=>Fjt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>hk,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>fW,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>ij,InventoryTransactionWhereInputSchema:()=>Ra,InventoryTransactionWhereUniqueInputSchema:()=>H,InventoryTypeSchema:()=>Nt,InventoryUncheckedCreateInputSchema:()=>r9,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>ur,InventoryUncheckedCreateWithoutItemsInputSchema:()=>cw,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>CT,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>Pw,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>Iw,InventoryUncheckedUpdateInputSchema:()=>c9,InventoryUncheckedUpdateManyInputSchema:()=>s9,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Nr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>dL,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>qO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>UL,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>gL,InventoryUpdateArgsSchema:()=>Xkt,InventoryUpdateInputSchema:()=>p9,InventoryUpdateManyAndReturnArgsSchema:()=>ext,InventoryUpdateManyArgsSchema:()=>txt,InventoryUpdateManyMutationInputSchema:()=>u9,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>uT,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>pD,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>eD,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>Pr,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>Iut,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>f3,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>jut,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Put,InventoryUpdateWithoutItemsInputSchema:()=>yL,InventoryUpdateWithoutRestaurantInputSchema:()=>BO,InventoryUpdateWithoutStockCountsInputSchema:()=>PL,InventoryUpdateWithoutTransactionsInputSchema:()=>IL,InventoryUpsertArgsSchema:()=>Gkt,InventoryUpsertWithoutItemsInputSchema:()=>hut,InventoryUpsertWithoutRestaurantInputSchema:()=>O3,InventoryUpsertWithoutStockCountsInputSchema:()=>xut,InventoryUpsertWithoutTransactionsInputSchema:()=>Tut,InventoryWhereInputSchema:()=>Ft,InventoryWhereUniqueInputSchema:()=>$n,InventoryWithdrawalAggregateArgsSchema:()=>Cgt,InventoryWithdrawalArgsSchema:()=>$mt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>Ant,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>Cnt,InventoryWithdrawalCreateArgsSchema:()=>YRt,InventoryWithdrawalCreateInputSchema:()=>R1,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>JRt,InventoryWithdrawalCreateManyArgsSchema:()=>$Rt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>ef,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>dQ,InventoryWithdrawalCreateManyInputSchema:()=>eU,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>mw,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>VQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>kf,InventoryWithdrawalCreateManyRecipeInputSchema:()=>xQ,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>$a,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>iT,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>So,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>Oh,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>II,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Kh,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Ou,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>oy,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>bs,InventoryWithdrawalDeleteArgsSchema:()=>KRt,InventoryWithdrawalDeleteManyArgsSchema:()=>okt,InventoryWithdrawalFindFirstArgsSchema:()=>Igt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>ggt,InventoryWithdrawalFindManyArgsSchema:()=>fT,InventoryWithdrawalFindUniqueArgsSchema:()=>Sgt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>Tgt,InventoryWithdrawalGroupByArgsSchema:()=>Agt,InventoryWithdrawalIncludeSchema:()=>_d,InventoryWithdrawalListRelationFilterSchema:()=>JS,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>Snt,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Tnt,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>KB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>YV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>xb,InventoryWithdrawalScalarFieldEnumSchema:()=>Xg,InventoryWithdrawalScalarWhereInputSchema:()=>Il,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>xA,InventoryWithdrawalSchema:()=>Jzt,InventoryWithdrawalSelectSchema:()=>Ed,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Pnt,InventoryWithdrawalUncheckedCreateInputSchema:()=>k1,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>mi,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>pT,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>fu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>ny,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>hs,InventoryWithdrawalUncheckedUpdateInputSchema:()=>j1,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>M1,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>pyt,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>el,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Hyt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>hT,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>Wyt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Nn,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>cJ,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>MK,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>VJ,InventoryWithdrawalUpdateArgsSchema:()=>XRt,InventoryWithdrawalUpdateInputSchema:()=>x1,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>ekt,InventoryWithdrawalUpdateManyArgsSchema:()=>tkt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>nP,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>ak,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>uj,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>ax,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>wi,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>zT,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>mn,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>nk,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>cj,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>nx,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>pJ,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>jK,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>LJ,InventoryWithdrawalUpsertArgsSchema:()=>GRt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>ok,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>pj,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ox,InventoryWithdrawalWhereInputSchema:()=>Aa,InventoryWithdrawalWhereUniqueInputSchema:()=>L,LeftoverItemAggregateArgsSchema:()=>ZIt,LeftoverItemArgsSchema:()=>Lmt,LeftoverItemAvgOrderByAggregateInputSchema:()=>wot,LeftoverItemCountOrderByAggregateInputSchema:()=>fot,LeftoverItemCreateArgsSchema:()=>qWt,LeftoverItemCreateInputSchema:()=>HG,LeftoverItemCreateManyAndReturnArgsSchema:()=>_Wt,LeftoverItemCreateManyArgsSchema:()=>DWt,LeftoverItemCreateManyInputSchema:()=>YP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>gN,LeftoverItemCreateManyMenuItemInputSchema:()=>a0,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>GO,LeftoverItemCreateManyRecordedByInputSchema:()=>rQ,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>ZO,LeftoverItemCreateManyRestaurantInputSchema:()=>$H,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>cm,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>La,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>or,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>OI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>kh,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>hh,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Oy,LeftoverItemCreateWithoutRecordedByInputSchema:()=>Su,LeftoverItemCreateWithoutRestaurantInputSchema:()=>tu,LeftoverItemDeleteArgsSchema:()=>EWt,LeftoverItemDeleteManyArgsSchema:()=>QWt,LeftoverItemFindFirstArgsSchema:()=>jIt,LeftoverItemFindFirstOrThrowArgsSchema:()=>MIt,LeftoverItemFindManyArgsSchema:()=>ZT,LeftoverItemFindUniqueArgsSchema:()=>OIt,LeftoverItemFindUniqueOrThrowArgsSchema:()=>fIt,LeftoverItemGroupByArgsSchema:()=>vIt,LeftoverItemIncludeSchema:()=>kd,LeftoverItemListRelationFilterSchema:()=>QS,LeftoverItemMaxOrderByAggregateInputSchema:()=>Not,LeftoverItemMinOrderByAggregateInputSchema:()=>Bot,LeftoverItemOrderByRelationAggregateInputSchema:()=>YB,LeftoverItemOrderByWithAggregationInputSchema:()=>DV,LeftoverItemOrderByWithRelationInputSchema:()=>Tb,LeftoverItemScalarFieldEnumSchema:()=>Hg,LeftoverItemScalarWhereInputSchema:()=>zl,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>SA,LeftoverItemSchema:()=>Lzt,LeftoverItemSelectSchema:()=>xd,LeftoverItemSumOrderByAggregateInputSchema:()=>qot,LeftoverItemUncheckedCreateInputSchema:()=>QG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>hm,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>ci,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>mr,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>fy,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>Tu,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>eu,LeftoverItemUncheckedUpdateInputSchema:()=>GG,LeftoverItemUncheckedUpdateManyInputSchema:()=>$G,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>pdt,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>fm,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>oyt,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Gi,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Vst,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>_r,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>cX,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>J7,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>x7,LeftoverItemUpdateArgsSchema:()=>LWt,LeftoverItemUpdateInputSchema:()=>YG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>HWt,LeftoverItemUpdateManyArgsSchema:()=>VWt,LeftoverItemUpdateManyMutationInputSchema:()=>tP,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>aM,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>FR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>rR,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>Rm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>ji,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>nM,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>qR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>lR,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>pX,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>$7,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>k7,LeftoverItemUpsertArgsSchema:()=>FWt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>oM,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>BR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>iR,LeftoverItemWhereInputSchema:()=>ma,LeftoverItemWhereUniqueInputSchema:()=>D,MaintenanceLogAggregateArgsSchema:()=>Zht,MaintenanceLogArgsSchema:()=>Bmt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Bet,MaintenanceLogCountOrderByAggregateInputSchema:()=>Net,MaintenanceLogCreateArgsSchema:()=>yUt,MaintenanceLogCreateInputSchema:()=>eG,MaintenanceLogCreateManyAndReturnArgsSchema:()=>mUt,MaintenanceLogCreateManyArgsSchema:()=>zUt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>QZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>ZH,MaintenanceLogCreateManyInputSchema:()=>qP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>uq,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Gb,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>uc,MaintenanceLogDeleteArgsSchema:()=>bUt,MaintenanceLogDeleteManyArgsSchema:()=>CUt,MaintenanceLogFindFirstArgsSchema:()=>jht,MaintenanceLogFindFirstOrThrowArgsSchema:()=>Mht,MaintenanceLogFindManyArgsSchema:()=>AX,MaintenanceLogFindUniqueArgsSchema:()=>Oht,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>fht,MaintenanceLogGroupByArgsSchema:()=>vht,MaintenanceLogIncludeSchema:()=>ud,MaintenanceLogListRelationFilterSchema:()=>_4,MaintenanceLogMaxOrderByAggregateInputSchema:()=>qet,MaintenanceLogMinOrderByAggregateInputSchema:()=>Fet,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Uet,MaintenanceLogOrderByWithAggregationInputSchema:()=>ZV,MaintenanceLogOrderByWithRelationInputSchema:()=>hb,MaintenanceLogScalarFieldEnumSchema:()=>Ng,MaintenanceLogScalarWhereInputSchema:()=>Pp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>dA,MaintenanceLogSchema:()=>fzt,MaintenanceLogSelectSchema:()=>sd,MaintenanceLogSumOrderByAggregateInputSchema:()=>Det,MaintenanceLogUncheckedCreateInputSchema:()=>oG,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>yq,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>sc,MaintenanceLogUncheckedUpdateInputSchema:()=>aG,MaintenanceLogUncheckedUpdateManyInputSchema:()=>iG,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>Tst,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>hq,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>q8,MaintenanceLogUpdateArgsSchema:()=>hUt,MaintenanceLogUpdateInputSchema:()=>nG,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>gUt,MaintenanceLogUpdateManyArgsSchema:()=>IUt,MaintenanceLogUpdateManyMutationInputSchema:()=>yB,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>GU,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>mq,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>YU,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>B8,MaintenanceLogUpsertArgsSchema:()=>dUt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>QU,MaintenanceLogWhereInputSchema:()=>ca,MaintenanceLogWhereUniqueInputSchema:()=>Ce,MaintenanceTypeSchema:()=>re,MenuAggregateArgsSchema:()=>MSt,MenuArgsSchema:()=>hM,MenuAvgOrderByAggregateInputSchema:()=>Mlt,MenuCategoryAggregateArgsSchema:()=>pht,MenuCategoryArgsSchema:()=>p0,MenuCategoryAvgOrderByAggregateInputSchema:()=>met,MenuCategoryCountOrderByAggregateInputSchema:()=>zet,MenuCategoryCountOutputTypeArgsSchema:()=>c0,MenuCategoryCountOutputTypeSelectSchema:()=>ttt,MenuCategoryCreateArgsSchema:()=>jPt,MenuCategoryCreateInputSchema:()=>fY,MenuCategoryCreateManyAndReturnArgsSchema:()=>vPt,MenuCategoryCreateManyArgsSchema:()=>ZPt,MenuCategoryCreateManyInputSchema:()=>fP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>lN,MenuCategoryCreateManyMenuInputSchema:()=>t0,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>FD,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>nm,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>xI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>P8,MenuCategoryCreateWithoutMenuInputSchema:()=>Py,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>dN,MenuCategoryDeleteArgsSchema:()=>OPt,MenuCategoryDeleteManyArgsSchema:()=>BPt,MenuCategoryFindFirstArgsSchema:()=>lht,MenuCategoryFindFirstOrThrowArgsSchema:()=>rht,MenuCategoryFindManyArgsSchema:()=>gX,MenuCategoryFindUniqueArgsSchema:()=>uht,MenuCategoryFindUniqueOrThrowArgsSchema:()=>sht,MenuCategoryGroupByArgsSchema:()=>cht,MenuCategoryIncludeSchema:()=>od,MenuCategoryListRelationFilterSchema:()=>_2,MenuCategoryMaxOrderByAggregateInputSchema:()=>bet,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>$N,MenuCategoryMinOrderByAggregateInputSchema:()=>het,MenuCategoryNullableScalarRelationFilterSchema:()=>E2,MenuCategoryOrderByRelationAggregateInputSchema:()=>xlt,MenuCategoryOrderByWithAggregationInputSchema:()=>kV,MenuCategoryOrderByWithRelationInputSchema:()=>_m,MenuCategoryScalarFieldEnumSchema:()=>vg,MenuCategoryScalarWhereInputSchema:()=>Yp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>cA,MenuCategorySchema:()=>Mzt,MenuCategorySelectSchema:()=>nd,MenuCategorySumOrderByAggregateInputSchema:()=>Iet,MenuCategoryUncheckedCreateInputSchema:()=>wY,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>_D,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>Uy,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>zN,MenuCategoryUncheckedUpdateInputSchema:()=>BY,MenuCategoryUncheckedUpdateManyInputSchema:()=>qY,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>ndt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>QD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>XK,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>rV,MenuCategoryUpdateArgsSchema:()=>fPt,MenuCategoryUpdateInputSchema:()=>NY,MenuCategoryUpdateManyAndReturnArgsSchema:()=>NPt,MenuCategoryUpdateManyArgsSchema:()=>wPt,MenuCategoryUpdateManyMutationInputSchema:()=>uB,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>Ej,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>VD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>Am,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>yst,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>_j,MenuCategoryUpdateWithoutMenuInputSchema:()=>KK,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>lV,MenuCategoryUpsertArgsSchema:()=>MPt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Dj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>sst,MenuCategoryWhereInputSchema:()=>Ne,MenuCategoryWhereUniqueInputSchema:()=>Xt,MenuCountOrderByAggregateInputSchema:()=>jlt,MenuCountOutputTypeArgsSchema:()=>L0,MenuCountOutputTypeSelectSchema:()=>Ptt,MenuCreateArgsSchema:()=>jZt,MenuCreateInputSchema:()=>u4,MenuCreateManyAndReturnArgsSchema:()=>vZt,MenuCreateManyArgsSchema:()=>ZZt,MenuCreateManyInputSchema:()=>xU,MenuCreateManyRestaurantInputEnvelopeSchema:()=>jO,MenuCreateManyRestaurantInputSchema:()=>YH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>tr,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>$2,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>om,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>H6,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>T8,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>mh,MenuCreateWithoutMenuCategoryInputSchema:()=>vZ,MenuCreateWithoutMenuItemsInputSchema:()=>sN,MenuCreateWithoutRestaurantInputSchema:()=>$c,MenuDeleteArgsSchema:()=>OZt,MenuDeleteManyArgsSchema:()=>BZt,MenuFindFirstArgsSchema:()=>xSt,MenuFindFirstOrThrowArgsSchema:()=>jSt,MenuFindManyArgsSchema:()=>NX,MenuFindUniqueArgsSchema:()=>vSt,MenuFindUniqueOrThrowArgsSchema:()=>OSt,MenuGroupByArgsSchema:()=>ZSt,MenuIncludeSchema:()=>_z,MenuItemAggregateArgsSchema:()=>ESt,MenuItemArgsSchema:()=>rp,MenuItemAvgOrderByAggregateInputSchema:()=>_lt,MenuItemCountOrderByAggregateInputSchema:()=>Dlt,MenuItemCountOutputTypeArgsSchema:()=>V0,MenuItemCountOutputTypeSelectSchema:()=>Utt,MenuItemCreateArgsSchema:()=>YZt,MenuItemCreateInputSchema:()=>C4,MenuItemCreateManyAndReturnArgsSchema:()=>JZt,MenuItemCreateManyArgsSchema:()=>$Zt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>fZ,MenuItemCreateManyCategoryInputSchema:()=>kH,MenuItemCreateManyInputSchema:()=>MU,MenuItemCreateManyMenuInputEnvelopeSchema:()=>iN,MenuItemCreateManyMenuInputSchema:()=>XQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>J2,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Yq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>qD,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>mo,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>Eq,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>rF,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>o6,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Qrt,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>Nrt,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>Q2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>Vb,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>th,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>u3,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>d3,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>kI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>A8,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>R8,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Vh,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>M3,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>V6,MenuItemCreateWithoutCategoryInputSchema:()=>oc,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>Cc,MenuItemCreateWithoutFeedbackInputSchema:()=>Pv,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>jv,MenuItemCreateWithoutMenuInputSchema:()=>Sy,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>rN,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>TN,MenuItemCreateWithoutRecipesInputSchema:()=>os,MenuItemCreateWithoutRecommendationsInputSchema:()=>zO,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>MZ,MenuItemCreateallergensInputSchema:()=>po,MenuItemCreaterecipeIdsInputSchema:()=>io,MenuItemCreaterecipeServingsAmountInputSchema:()=>lo,MenuItemCreaterecipeServingsCostInputSchema:()=>ro,MenuItemDeleteArgsSchema:()=>KZt,MenuItemDeleteManyArgsSchema:()=>ovt,MenuItemFindFirstArgsSchema:()=>DSt,MenuItemFindFirstOrThrowArgsSchema:()=>_St,MenuItemFindManyArgsSchema:()=>Ag,MenuItemFindUniqueArgsSchema:()=>VSt,MenuItemFindUniqueOrThrowArgsSchema:()=>HSt,MenuItemGroupByArgsSchema:()=>LSt,MenuItemIncludeSchema:()=>Hz,MenuItemListRelationFilterSchema:()=>FI,MenuItemMaxOrderByAggregateInputSchema:()=>Elt,MenuItemMinOrderByAggregateInputSchema:()=>Llt,MenuItemNullableScalarRelationFilterSchema:()=>FM,MenuItemOrderByRelationAggregateInputSchema:()=>vM,MenuItemOrderByWithAggregationInputSchema:()=>PH,MenuItemOrderByWithRelationInputSchema:()=>El,MenuItemRecipeAggregateArgsSchema:()=>NSt,MenuItemRecipeArgsSchema:()=>rbt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>wlt,MenuItemRecipeCountOrderByAggregateInputSchema:()=>flt,MenuItemRecipeCreateArgsSchema:()=>qZt,MenuItemRecipeCreateInputSchema:()=>m4,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>_Zt,MenuItemRecipeCreateManyArgsSchema:()=>DZt,MenuItemRecipeCreateManyInputSchema:()=>jU,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>mN,MenuItemRecipeCreateManyMenuItemInputSchema:()=>e0,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>Wf,MenuItemRecipeCreateManyRecipeInputSchema:()=>RQ,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>im,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Co,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>MI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>$h,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>ky,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>ys,MenuItemRecipeDeleteArgsSchema:()=>EZt,MenuItemRecipeDeleteManyArgsSchema:()=>QZt,MenuItemRecipeFindFirstArgsSchema:()=>fSt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>wSt,MenuItemRecipeFindManyArgsSchema:()=>_N,MenuItemRecipeFindUniqueArgsSchema:()=>qSt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>FSt,MenuItemRecipeGroupByArgsSchema:()=>BSt,MenuItemRecipeIncludeSchema:()=>Lz,MenuItemRecipeListRelationFilterSchema:()=>$M,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>Nlt,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>nB,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Blt,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>Z2,MenuItemRecipeOrderByWithAggregationInputSchema:()=>TH,MenuItemRecipeOrderByWithRelationInputSchema:()=>Db,MenuItemRecipeScalarFieldEnumSchema:()=>kC,MenuItemRecipeScalarWhereInputSchema:()=>fl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>aS,MenuItemRecipeSchema:()=>Wmt,MenuItemRecipeSelectSchema:()=>Vz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>qlt,MenuItemRecipeUncheckedCreateInputSchema:()=>b4,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>dm,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>_o,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>xy,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>ds,MenuItemRecipeUncheckedUpdateInputSchema:()=>I4,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>g4,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>idt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Mm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>Pyt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fn,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>nX,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>DJ,MenuItemRecipeUpdateArgsSchema:()=>LZt,MenuItemRecipeUpdateInputSchema:()=>h4,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>HZt,MenuItemRecipeUpdateManyArgsSchema:()=>VZt,MenuItemRecipeUpdateManyMutationInputSchema:()=>MM,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Gj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>Kk,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>Tm,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>dn,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Yj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Jk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>oX,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>FJ,MenuItemRecipeUpsertArgsSchema:()=>FZt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Qj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>$k,MenuItemRecipeWhereInputSchema:()=>Za,MenuItemRecipeWhereUniqueInputSchema:()=>St,MenuItemScalarFieldEnumSchema:()=>xC,MenuItemScalarRelationFilterSchema:()=>qI,MenuItemScalarWhereInputSchema:()=>ao,MenuItemScalarWhereWithAggregatesInputSchema:()=>iS,MenuItemSchema:()=>Rmt,MenuItemSelectSchema:()=>Qz,MenuItemSumOrderByAggregateInputSchema:()=>Vlt,MenuItemUncheckedCreateInputSchema:()=>A4,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>K2,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Jq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>DD,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>No,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>nc,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>Ac,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>Uv,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>Mv,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>Ty,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>pN,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>PN,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>ns,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>mO,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>ZZ,MenuItemUncheckedUpdateInputSchema:()=>T4,MenuItemUncheckedUpdateManyInputSchema:()=>P4,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>gst,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>e5,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>kst,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>nF,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>odt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>HD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>gyt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>jn,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>M8,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>G8,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>G_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>eE,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>JK,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>eV,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>cV,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>MJ,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>NE,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>s_,MenuItemUpdateArgsSchema:()=>XZt,MenuItemUpdateInputSchema:()=>S4,MenuItemUpdateManyAndReturnArgsSchema:()=>evt,MenuItemUpdateManyArgsSchema:()=>tvt,MenuItemUpdateManyMutationInputSchema:()=>qS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>NU,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>uW,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>Fj,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>Nk,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>t5,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>tF,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>LD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>pn,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>uF,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>a6,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Brt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>G2,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>Hq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>Yrt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>tct,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>lct,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>lst,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>zst,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>_ct,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>bpt,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>wU,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>cW,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>qj,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>wk,MenuItemUpdateWithoutCategoryInputSchema:()=>j8,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>Y8,MenuItemUpdateWithoutFeedbackInputSchema:()=>Y_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>tE,MenuItemUpdateWithoutMenuInputSchema:()=>$K,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>tV,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>pV,MenuItemUpdateWithoutRecipesInputSchema:()=>jJ,MenuItemUpdateWithoutRecommendationsInputSchema:()=>wE,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>u_,MenuItemUpdateallergensInputSchema:()=>He,MenuItemUpdaterecipeIdsInputSchema:()=>Ee,MenuItemUpdaterecipeServingsAmountInputSchema:()=>Le,MenuItemUpdaterecipeServingsCostInputSchema:()=>Ve,MenuItemUpsertArgsSchema:()=>GZt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>fU,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>pW,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Bj,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>fk,MenuItemUpsertWithoutFeedbackInputSchema:()=>Xpt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>ict,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>ist,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>dst,MenuItemUpsertWithoutRecommendationsInputSchema:()=>Dct,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>mpt,MenuItemWhereInputSchema:()=>Tt,MenuItemWhereUniqueInputSchema:()=>x,MenuListRelationFilterSchema:()=>r2,MenuMaxOrderByAggregateInputSchema:()=>Zlt,MenuMinOrderByAggregateInputSchema:()=>vlt,MenuOrderByRelationAggregateInputSchema:()=>aat,MenuOrderByWithAggregationInputSchema:()=>SH,MenuOrderByWithRelationInputSchema:()=>ec,MenuScalarFieldEnumSchema:()=>RC,MenuScalarRelationFilterSchema:()=>ZM,MenuScalarWhereInputSchema:()=>kp,MenuScalarWhereWithAggregatesInputSchema:()=>nS,MenuSchema:()=>Umt,MenuSelectSchema:()=>Ez,MenuSumOrderByAggregateInputSchema:()=>Olt,MenuUncheckedCreateInputSchema:()=>s4,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>dr,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>OZ,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>yN,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,MenuUncheckedUpdateInputSchema:()=>d4,MenuUncheckedUpdateManyInputSchema:()=>z4,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Est,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Fr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>d_,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>iV,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>U7,MenuUpdateArgsSchema:()=>fZt,MenuUpdateInputSchema:()=>y4,MenuUpdateManyAndReturnArgsSchema:()=>NZt,MenuUpdateManyArgsSchema:()=>wZt,MenuUpdateManyMutationInputSchema:()=>kB,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>eR,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>X2,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>Cm,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>Ipt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>ust,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>tR,MenuUpdateWithoutMenuCategoryInputSchema:()=>y_,MenuUpdateWithoutMenuItemsInputSchema:()=>aV,MenuUpdateWithoutRestaurantInputSchema:()=>P7,MenuUpsertArgsSchema:()=>MZt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>XW,MenuUpsertWithoutMenuCategoryInputSchema:()=>hpt,MenuUpsertWithoutMenuItemsInputSchema:()=>cst,MenuWhereInputSchema:()=>fe,MenuWhereUniqueInputSchema:()=>Gt,NestedBoolFilterSchema:()=>sS,NestedBoolWithAggregatesFilterSchema:()=>c6,NestedDateTimeFilterSchema:()=>dS,NestedDateTimeNullableFilterSchema:()=>mS,NestedDateTimeNullableWithAggregatesFilterSchema:()=>m6,NestedDateTimeWithAggregatesFilterSchema:()=>y6,NestedEnumCategoryFilterSchema:()=>jS,NestedEnumCategoryWithAggregatesFilterSchema:()=>j6,NestedEnumChecklistFrequencyFilterSchema:()=>IS,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>I6,NestedEnumChecklistItemTypeFilterSchema:()=>gS,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>g6,NestedEnumChecklistStatusFilterSchema:()=>CS,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>C6,NestedEnumConstraintTypeFilterSchema:()=>WS,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>W6,NestedEnumCountStatusFilterSchema:()=>vS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>v6,NestedEnumDayOfWeekFilterSchema:()=>US,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>U6,NestedEnumEquipmentStatusFilterSchema:()=>bS,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>b6,NestedEnumFeedbackSourceFilterSchema:()=>AS,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>A6,NestedEnumFeedbackStatusFilterSchema:()=>SS,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>S6,NestedEnumInventoryTypeFilterSchema:()=>RS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>R6,NestedEnumMaintenanceTypeFilterSchema:()=>hS,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>h6,NestedEnumNutritionSourceNullableFilterSchema:()=>MS,NestedEnumNutritionSourceNullableWithAggregatesFilterSchema:()=>M6,NestedEnumOrderStatusFilterSchema:()=>OS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>O6,NestedEnumPhotoTypeFilterSchema:()=>zS,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>d6,NestedEnumPrepStatusFilterSchema:()=>wS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>w6,NestedEnumProductionStatusFilterSchema:()=>TS,NestedEnumProductionStatusWithAggregatesFilterSchema:()=>T6,NestedEnumShiftStatusFilterSchema:()=>fS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>f6,NestedEnumSkillLevelFilterSchema:()=>xS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>x6,NestedEnumTaskTypeFilterSchema:()=>PS,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>P6,NestedEnumTransactionTypeFilterSchema:()=>ZS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>Z6,NestedEnumUserRoleFilterSchema:()=>kS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>k6,NestedFloatFilterSchema:()=>np,NestedFloatNullableFilterSchema:()=>ap,NestedFloatNullableWithAggregatesFilterSchema:()=>u6,NestedFloatWithAggregatesFilterSchema:()=>r6,NestedIntFilterSchema:()=>nt,NestedIntNullableFilterSchema:()=>Sl,NestedIntNullableWithAggregatesFilterSchema:()=>z6,NestedIntWithAggregatesFilterSchema:()=>l6,NestedStringFilterSchema:()=>uS,NestedStringNullableFilterSchema:()=>yS,NestedStringNullableWithAggregatesFilterSchema:()=>s6,NestedStringWithAggregatesFilterSchema:()=>p6,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableEnumNutritionSourceFieldUpdateOperationsInputSchema:()=>ta,NullableFloatFieldUpdateOperationsInputSchema:()=>u,NullableIntFieldUpdateOperationsInputSchema:()=>b,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>XX,NutritionSourceSchema:()=>ot,NutritionalInfoAggregateArgsSchema:()=>$St,NutritionalInfoArgsSchema:()=>H0,NutritionalInfoAvgOrderByAggregateInputSchema:()=>Qlt,NutritionalInfoCountOrderByAggregateInputSchema:()=>Hlt,NutritionalInfoCreateArgsSchema:()=>nvt,NutritionalInfoCreateInputSchema:()=>U4,NutritionalInfoCreateManyAndReturnArgsSchema:()=>lvt,NutritionalInfoCreateManyArgsSchema:()=>ivt,NutritionalInfoCreateManyInputSchema:()=>ZU,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>lm,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>bN,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>RT,NutritionalInfoDeleteArgsSchema:()=>rvt,NutritionalInfoDeleteManyArgsSchema:()=>svt,NutritionalInfoFindFirstArgsSchema:()=>QSt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>YSt,NutritionalInfoFindManyArgsSchema:()=>GSt,NutritionalInfoFindUniqueArgsSchema:()=>KSt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>XSt,NutritionalInfoGroupByArgsSchema:()=>JSt,NutritionalInfoIncludeSchema:()=>Yz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>Ylt,NutritionalInfoMinOrderByAggregateInputSchema:()=>Glt,NutritionalInfoNullableScalarRelationFilterSchema:()=>L2,NutritionalInfoOrderByWithAggregationInputSchema:()=>UH,NutritionalInfoOrderByWithRelationInputSchema:()=>tb,NutritionalInfoScalarFieldEnumSchema:()=>jC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>lS,NutritionalInfoSchema:()=>kmt,NutritionalInfoSelectSchema:()=>Gz,NutritionalInfoSumOrderByAggregateInputSchema:()=>$lt,NutritionalInfoUncheckedCreateInputSchema:()=>W4,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>zm,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>kT,NutritionalInfoUncheckedUpdateInputSchema:()=>k4,NutritionalInfoUncheckedUpdateManyInputSchema:()=>j4,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>Zm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>SN,NutritionalInfoUpdateArgsSchema:()=>pvt,NutritionalInfoUpdateInputSchema:()=>R4,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>uvt,NutritionalInfoUpdateManyArgsSchema:()=>cvt,NutritionalInfoUpdateManyMutationInputSchema:()=>x4,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>Pm,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>W8,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>AN,NutritionalInfoUpsertArgsSchema:()=>avt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>U8,NutritionalInfoWhereInputSchema:()=>_e,NutritionalInfoWhereUniqueInputSchema:()=>Ql,NutritionalRecommendationAggregateArgsSchema:()=>qgt,NutritionalRecommendationArgsSchema:()=>Kmt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>wnt,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>fnt,NutritionalRecommendationCreateArgsSchema:()=>Akt,NutritionalRecommendationCreateInputSchema:()=>E1,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>Pkt,NutritionalRecommendationCreateManyArgsSchema:()=>Tkt,NutritionalRecommendationCreateManyInputSchema:()=>aU,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>hN,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>o0,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>rm,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>ZI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>jy,NutritionalRecommendationDeleteArgsSchema:()=>Ukt,NutritionalRecommendationDeleteManyArgsSchema:()=>xkt,NutritionalRecommendationFindFirstArgsSchema:()=>Ngt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>Bgt,NutritionalRecommendationFindManyArgsSchema:()=>kX,NutritionalRecommendationFindUniqueArgsSchema:()=>Dgt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>_gt,NutritionalRecommendationGroupByArgsSchema:()=>Fgt,NutritionalRecommendationIncludeSchema:()=>Yd,NutritionalRecommendationListRelationFilterSchema:()=>V2,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>Nnt,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>Bnt,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>Flt,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>JV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>Mb,NutritionalRecommendationScalarFieldEnumSchema:()=>oC,NutritionalRecommendationScalarWhereInputSchema:()=>Gp,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>ZA,NutritionalRecommendationSchema:()=>tmt,NutritionalRecommendationSelectSchema:()=>Gd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>qnt,NutritionalRecommendationUncheckedCreateInputSchema:()=>L1,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>mm,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>My,NutritionalRecommendationUncheckedUpdateInputSchema:()=>H1,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>Q1,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>ldt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>vm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>iX,NutritionalRecommendationUpdateArgsSchema:()=>Wkt,NutritionalRecommendationUpdateInputSchema:()=>V1,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>kkt,NutritionalRecommendationUpdateManyArgsSchema:()=>Rkt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>gB,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Kj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>Um,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Jj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>aX,NutritionalRecommendationUpsertArgsSchema:()=>Skt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>$j,NutritionalRecommendationWhereInputSchema:()=>Ta,NutritionalRecommendationWhereUniqueInputSchema:()=>Ue,OrderAggregateArgsSchema:()=>EAt,OrderArgsSchema:()=>N0,OrderAvgOrderByAggregateInputSchema:()=>Hit,OrderCountOrderByAggregateInputSchema:()=>Vit,OrderCountOutputTypeArgsSchema:()=>B0,OrderCountOutputTypeSelectSchema:()=>Ctt,OrderCreateArgsSchema:()=>AMt,OrderCreateInputSchema:()=>x$,OrderCreateManyAndReturnArgsSchema:()=>PMt,OrderCreateManyArgsSchema:()=>TMt,OrderCreateManyInputSchema:()=>SU,OrderCreateManyRestaurantInputEnvelopeSchema:()=>kO,OrderCreateManyRestaurantInputSchema:()=>HH,OrderCreateManyVendorInputEnvelopeSchema:()=>Ew,OrderCreateManyVendorInputSchema:()=>GQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,OrderCreateNestedManyWithoutVendorInputSchema:()=>CD,OrderCreateNestedOneWithoutItemsInputSchema:()=>B5,OrderCreateOrConnectWithoutItemsInputSchema:()=>d8,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>dh,OrderCreateOrConnectWithoutVendorInputSchema:()=>SI,OrderCreateWithoutItemsInputSchema:()=>qw,OrderCreateWithoutRestaurantInputSchema:()=>Hc,OrderCreateWithoutVendorInputSchema:()=>uy,OrderDeleteArgsSchema:()=>UMt,OrderDeleteManyArgsSchema:()=>xMt,OrderFindFirstArgsSchema:()=>DAt,OrderFindFirstOrThrowArgsSchema:()=>_At,OrderFindManyArgsSchema:()=>FN,OrderFindUniqueArgsSchema:()=>VAt,OrderFindUniqueOrThrowArgsSchema:()=>HAt,OrderGroupByArgsSchema:()=>LAt,OrderIncludeSchema:()=>kz,OrderItemAggregateArgsSchema:()=>GAt,OrderItemArgsSchema:()=>abt,OrderItemAvgOrderByAggregateInputSchema:()=>Kit,OrderItemCountOrderByAggregateInputSchema:()=>Jit,OrderItemCreateArgsSchema:()=>jMt,OrderItemCreateInputSchema:()=>O$,OrderItemCreateManyAndReturnArgsSchema:()=>vMt,OrderItemCreateManyArgsSchema:()=>ZMt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>Qf,OrderItemCreateManyIngredientInputSchema:()=>qQ,OrderItemCreateManyInputSchema:()=>TU,OrderItemCreateManyOrderInputEnvelopeSchema:()=>Bw,OrderItemCreateManyOrderInputSchema:()=>YQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>VI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>zD,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>uI,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>AI,OrderItemCreateWithoutIngredientInputSchema:()=>Fs,OrderItemCreateWithoutOrderInputSchema:()=>py,OrderItemDeleteArgsSchema:()=>OMt,OrderItemDeleteManyArgsSchema:()=>BMt,OrderItemFindFirstArgsSchema:()=>QAt,OrderItemFindFirstOrThrowArgsSchema:()=>YAt,OrderItemFindManyArgsSchema:()=>DN,OrderItemFindUniqueArgsSchema:()=>JAt,OrderItemFindUniqueOrThrowArgsSchema:()=>KAt,OrderItemGroupByArgsSchema:()=>$At,OrderItemIncludeSchema:()=>jz,OrderItemListRelationFilterSchema:()=>JM,OrderItemMaxOrderByAggregateInputSchema:()=>Xit,OrderItemMinOrderByAggregateInputSchema:()=>tlt,OrderItemOrderByRelationAggregateInputSchema:()=>O2,OrderItemOrderByWithAggregationInputSchema:()=>bH,OrderItemOrderByWithRelationInputSchema:()=>Bb,OrderItemScalarFieldEnumSchema:()=>AC,OrderItemScalarWhereInputSchema:()=>wl,OrderItemScalarWhereWithAggregatesInputSchema:()=>JA,OrderItemSchema:()=>gmt,OrderItemSelectSchema:()=>Mz,OrderItemSumOrderByAggregateInputSchema:()=>elt,OrderItemUncheckedCreateInputSchema:()=>f$,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>XI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>mD,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>Ds,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>cy,OrderItemUncheckedUpdateInputSchema:()=>N$,OrderItemUncheckedUpdateManyInputSchema:()=>B$,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Byt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>mg,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>Gyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>gD,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>mK,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>NK,OrderItemUpdateArgsSchema:()=>fMt,OrderItemUpdateInputSchema:()=>w$,OrderItemUpdateManyAndReturnArgsSchema:()=>NMt,OrderItemUpdateManyArgsSchema:()=>wMt,OrderItemUpdateManyMutationInputSchema:()=>jM,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Fx,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>gj,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>rg,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>ID,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>qx,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Ij,OrderItemUpdateWithoutIngredientInputSchema:()=>zK,OrderItemUpdateWithoutOrderInputSchema:()=>wK,OrderItemUpsertArgsSchema:()=>MMt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Bx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>hj,OrderItemWhereInputSchema:()=>xa,OrderItemWhereUniqueInputSchema:()=>At,OrderListRelationFilterSchema:()=>HM,OrderMaxOrderByAggregateInputSchema:()=>Qit,OrderMinOrderByAggregateInputSchema:()=>Yit,OrderOrderByRelationAggregateInputSchema:()=>u2,OrderOrderByWithAggregationInputSchema:()=>mH,OrderOrderByWithRelationInputSchema:()=>Jm,OrderScalarFieldEnumSchema:()=>CC,OrderScalarRelationFilterSchema:()=>B2,OrderScalarWhereInputSchema:()=>Zl,OrderScalarWhereWithAggregatesInputSchema:()=>$A,OrderSchema:()=>Imt,OrderSelectSchema:()=>xz,OrderStatusSchema:()=>wt,OrderSumOrderByAggregateInputSchema:()=>Git,OrderUncheckedCreateInputSchema:()=>j$,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>TD,OrderUncheckedCreateWithoutItemsInputSchema:()=>Fw,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,OrderUncheckedCreateWithoutVendorInputSchema:()=>sy,OrderUncheckedUpdateInputSchema:()=>Z$,OrderUncheckedUpdateManyInputSchema:()=>v$,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Dst,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>$yt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>xD,OrderUncheckedUpdateWithoutItemsInputSchema:()=>qL,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>A7,OrderUncheckedUpdateWithoutVendorInputSchema:()=>qK,OrderUpdateArgsSchema:()=>WMt,OrderUpdateInputSchema:()=>M$,OrderUpdateManyAndReturnArgsSchema:()=>kMt,OrderUpdateManyArgsSchema:()=>RMt,OrderUpdateManyMutationInputSchema:()=>xM,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>GW,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>Sj,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,OrderUpdateManyWithoutVendorNestedInputSchema:()=>WD,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>F5,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Lut,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>YW,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Aj,OrderUpdateWithoutItemsInputSchema:()=>BL,OrderUpdateWithoutRestaurantInputSchema:()=>C7,OrderUpdateWithoutVendorInputSchema:()=>BK,OrderUpsertArgsSchema:()=>SMt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>QW,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>Cj,OrderUpsertWithoutItemsInputSchema:()=>Eut,OrderWhereInputSchema:()=>Ke,OrderWhereUniqueInputSchema:()=>ut,OrganizationAggregateArgsSchema:()=>Xgt,OrganizationArgsSchema:()=>mM,OrganizationAvgOrderByAggregateInputSchema:()=>Qnt,OrganizationCountOrderByAggregateInputSchema:()=>Hnt,OrganizationCountOutputTypeArgsSchema:()=>T0,OrganizationCountOutputTypeSelectSchema:()=>utt,OrganizationCreateArgsSchema:()=>qkt,OrganizationCreateInputSchema:()=>t9,OrganizationCreateManyAndReturnArgsSchema:()=>_kt,OrganizationCreateManyArgsSchema:()=>Dkt,OrganizationCreateManyInputSchema:()=>lU,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Yl,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Na,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>v3,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>w3,OrganizationCreateWithoutRestaurantsInputSchema:()=>TO,OrganizationCreateWithoutUsersInputSchema:()=>FO,OrganizationDeleteArgsSchema:()=>Ekt,OrganizationDeleteManyArgsSchema:()=>Qkt,OrganizationFindFirstArgsSchema:()=>$gt,OrganizationFindFirstOrThrowArgsSchema:()=>Jgt,OrganizationFindManyArgsSchema:()=>Kgt,OrganizationFindUniqueArgsSchema:()=>eCt,OrganizationFindUniqueOrThrowArgsSchema:()=>oCt,OrganizationGroupByArgsSchema:()=>tCt,OrganizationIncludeSchema:()=>$d,OrganizationMaxOrderByAggregateInputSchema:()=>Ynt,OrganizationMinOrderByAggregateInputSchema:()=>Gnt,OrganizationNullableScalarRelationFilterSchema:()=>VM,OrganizationOrderByWithAggregationInputSchema:()=>XV,OrganizationOrderByWithRelationInputSchema:()=>Xp,OrganizationScalarFieldEnumSchema:()=>aC,OrganizationScalarWhereWithAggregatesInputSchema:()=>OA,OrganizationSchema:()=>omt,OrganizationSelectSchema:()=>Jd,OrganizationSumOrderByAggregateInputSchema:()=>$nt,OrganizationUncheckedCreateInputSchema:()=>e9,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>PO,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>DO,OrganizationUncheckedUpdateInputSchema:()=>n9,OrganizationUncheckedUpdateManyInputSchema:()=>i9,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>DE,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>EE,OrganizationUpdateArgsSchema:()=>Lkt,OrganizationUpdateInputSchema:()=>o9,OrganizationUpdateManyAndReturnArgsSchema:()=>Hkt,OrganizationUpdateManyArgsSchema:()=>Vkt,OrganizationUpdateManyMutationInputSchema:()=>a9,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>Ar,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Ti,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>Hct,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>Yct,OrganizationUpdateWithoutRestaurantsInputSchema:()=>FE,OrganizationUpdateWithoutUsersInputSchema:()=>_E,OrganizationUpsertArgsSchema:()=>Fkt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>Vct,OrganizationUpsertWithoutUsersInputSchema:()=>Qct,OrganizationWhereInputSchema:()=>Me,OrganizationWhereUniqueInputSchema:()=>ql,PasswordResetAggregateArgsSchema:()=>USt,PasswordResetArgsSchema:()=>lbt,PasswordResetAvgOrderByAggregateInputSchema:()=>Ult,PasswordResetCountOrderByAggregateInputSchema:()=>Plt,PasswordResetCreateArgsSchema:()=>AZt,PasswordResetCreateInputSchema:()=>i4,PasswordResetCreateManyAndReturnArgsSchema:()=>PZt,PasswordResetCreateManyArgsSchema:()=>TZt,PasswordResetCreateManyInputSchema:()=>kU,PasswordResetCreateManyUserInputEnvelopeSchema:()=>YO,PasswordResetCreateManyUserInputSchema:()=>lQ,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Ea,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>Rh,PasswordResetCreateWithoutUserInputSchema:()=>Cu,PasswordResetDeleteArgsSchema:()=>UZt,PasswordResetDeleteManyArgsSchema:()=>xZt,PasswordResetFindFirstArgsSchema:()=>TSt,PasswordResetFindFirstOrThrowArgsSchema:()=>PSt,PasswordResetFindManyArgsSchema:()=>wX,PasswordResetFindUniqueArgsSchema:()=>RSt,PasswordResetFindUniqueOrThrowArgsSchema:()=>kSt,PasswordResetGroupByArgsSchema:()=>WSt,PasswordResetIncludeSchema:()=>Fz,PasswordResetListRelationFilterSchema:()=>m2,PasswordResetMaxOrderByAggregateInputSchema:()=>Wlt,PasswordResetMinOrderByAggregateInputSchema:()=>Rlt,PasswordResetOrderByRelationAggregateInputSchema:()=>zat,PasswordResetOrderByWithAggregationInputSchema:()=>AH,PasswordResetOrderByWithRelationInputSchema:()=>Fb,PasswordResetScalarFieldEnumSchema:()=>WC,PasswordResetScalarWhereInputSchema:()=>vp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>oS,PasswordResetSchema:()=>Pmt,PasswordResetSelectSchema:()=>Dz,PasswordResetSumOrderByAggregateInputSchema:()=>klt,PasswordResetUncheckedCreateInputSchema:()=>l4,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>pi,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>Au,PasswordResetUncheckedUpdateInputSchema:()=>p4,PasswordResetUncheckedUpdateManyInputSchema:()=>c4,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>eyt,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Yi,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>G7,PasswordResetUpdateArgsSchema:()=>WZt,PasswordResetUpdateInputSchema:()=>r4,PasswordResetUpdateManyAndReturnArgsSchema:()=>kZt,PasswordResetUpdateManyArgsSchema:()=>RZt,PasswordResetUpdateManyMutationInputSchema:()=>RB,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>NR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>xi,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>wR,PasswordResetUpdateWithoutUserInputSchema:()=>Y7,PasswordResetUpsertArgsSchema:()=>SZt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>fR,PasswordResetWhereInputSchema:()=>Ma,PasswordResetWhereUniqueInputSchema:()=>ke,PhotoTypeSchema:()=>ye,PrepBoardAggregateArgsSchema:()=>dSt,PrepBoardArgsSchema:()=>_0,PrepBoardAvgOrderByAggregateInputSchema:()=>mlt,PrepBoardCountOrderByAggregateInputSchema:()=>zlt,PrepBoardCountOutputTypeArgsSchema:()=>E0,PrepBoardCountOutputTypeSelectSchema:()=>Ttt,PrepBoardCreateArgsSchema:()=>nZt,PrepBoardCreateInputSchema:()=>G$,PrepBoardCreateManyAndReturnArgsSchema:()=>lZt,PrepBoardCreateManyArgsSchema:()=>iZt,PrepBoardCreateManyInputSchema:()=>WU,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>Io,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>ZD,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>b8,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>Yh,PrepBoardCreateWithoutPrepItemsInputSchema:()=>Gw,PrepBoardCreateWithoutRecipesInputSchema:()=>ps,PrepBoardDeleteArgsSchema:()=>rZt,PrepBoardDeleteManyArgsSchema:()=>sZt,PrepBoardFindFirstArgsSchema:()=>sSt,PrepBoardFindFirstOrThrowArgsSchema:()=>ySt,PrepBoardFindManyArgsSchema:()=>fX,PrepBoardFindUniqueArgsSchema:()=>mSt,PrepBoardFindUniqueOrThrowArgsSchema:()=>bSt,PrepBoardGroupByArgsSchema:()=>zSt,PrepBoardIncludeSchema:()=>wz,PrepBoardListRelationFilterSchema:()=>S2,PrepBoardMaxOrderByAggregateInputSchema:()=>blt,PrepBoardMinOrderByAggregateInputSchema:()=>hlt,PrepBoardOrderByRelationAggregateInputSchema:()=>Dat,PrepBoardOrderByWithAggregationInputSchema:()=>gH,PrepBoardOrderByWithRelationInputSchema:()=>Xm,PrepBoardScalarFieldEnumSchema:()=>PC,PrepBoardScalarRelationFilterSchema:()=>D2,PrepBoardScalarWhereInputSchema:()=>qp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>tS,PrepBoardSchema:()=>Smt,PrepBoardSelectSchema:()=>Nz,PrepBoardSumOrderByAggregateInputSchema:()=>Ilt,PrepBoardUncheckedCreateInputSchema:()=>$$,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Fo,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>$w,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>cs,PrepBoardUncheckedUpdateInputSchema:()=>K$,PrepBoardUncheckedUpdateManyInputSchema:()=>X$,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>Syt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>vn,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>VL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>NJ,PrepBoardUpdateArgsSchema:()=>pZt,PrepBoardUpdateInputSchema:()=>J$,PrepBoardUpdateManyAndReturnArgsSchema:()=>uZt,PrepBoardUpdateManyArgsSchema:()=>cZt,PrepBoardUpdateManyMutationInputSchema:()=>WB,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>Hk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>sn,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>fD,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>$ut,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Vk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>LL,PrepBoardUpdateWithoutRecipesInputSchema:()=>wJ,PrepBoardUpsertArgsSchema:()=>aZt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Lk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>Gut,PrepBoardWhereInputSchema:()=>to,PrepBoardWhereUniqueInputSchema:()=>ne,PrepHistoryAggregateArgsSchema:()=>pTt,PrepHistoryArgsSchema:()=>cbt,PrepHistoryAvgOrderByAggregateInputSchema:()=>nrt,PrepHistoryCountOrderByAggregateInputSchema:()=>ort,PrepHistoryCreateArgsSchema:()=>Avt,PrepHistoryCreateInputSchema:()=>w4,PrepHistoryCreateManyAndReturnArgsSchema:()=>Pvt,PrepHistoryCreateManyArgsSchema:()=>Tvt,PrepHistoryCreateManyInputSchema:()=>OU,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>Pf,PrepHistoryCreateManyRecipeInputSchema:()=>UQ,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Qh,PrepHistoryCreateWithoutRecipeInputSchema:()=>ls,PrepHistoryDeleteArgsSchema:()=>Uvt,PrepHistoryDeleteManyArgsSchema:()=>xvt,PrepHistoryFindFirstArgsSchema:()=>lTt,PrepHistoryFindFirstOrThrowArgsSchema:()=>rTt,PrepHistoryFindManyArgsSchema:()=>qX,PrepHistoryFindUniqueArgsSchema:()=>uTt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>sTt,PrepHistoryGroupByArgsSchema:()=>cTt,PrepHistoryIncludeSchema:()=>Kz,PrepHistoryListRelationFilterSchema:()=>A2,PrepHistoryMaxOrderByAggregateInputSchema:()=>art,PrepHistoryMinOrderByAggregateInputSchema:()=>irt,PrepHistoryOrderByRelationAggregateInputSchema:()=>Fat,PrepHistoryOrderByWithAggregationInputSchema:()=>RH,PrepHistoryOrderByWithRelationInputSchema:()=>Eb,PrepHistoryScalarFieldEnumSchema:()=>ZC,PrepHistoryScalarWhereInputSchema:()=>Bp,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>pS,PrepHistorySchema:()=>jmt,PrepHistorySelectSchema:()=>Xz,PrepHistorySumOrderByAggregateInputSchema:()=>lrt,PrepHistoryUncheckedCreateInputSchema:()=>N4,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>rs,PrepHistoryUncheckedUpdateInputSchema:()=>q4,PrepHistoryUncheckedUpdateManyInputSchema:()=>F4,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ayt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Zn,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>fJ,PrepHistoryUpdateArgsSchema:()=>Wvt,PrepHistoryUpdateInputSchema:()=>B4,PrepHistoryUpdateManyAndReturnArgsSchema:()=>kvt,PrepHistoryUpdateManyArgsSchema:()=>Rvt,PrepHistoryUpdateManyMutationInputSchema:()=>jB,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ek,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>un,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>_k,PrepHistoryUpdateWithoutRecipeInputSchema:()=>OJ,PrepHistoryUpsertArgsSchema:()=>Svt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Dk,PrepHistoryWhereInputSchema:()=>Oa,PrepHistoryWhereUniqueInputSchema:()=>je,PrepItemAggregateArgsSchema:()=>gSt,PrepItemArgsSchema:()=>ibt,PrepItemAvgOrderByAggregateInputSchema:()=>Clt,PrepItemCountOrderByAggregateInputSchema:()=>glt,PrepItemCreateArgsSchema:()=>yZt,PrepItemCreateInputSchema:()=>t4,PrepItemCreateManyAndReturnArgsSchema:()=>mZt,PrepItemCreateManyArgsSchema:()=>zZt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>VO,PrepItemCreateManyAssignedToInputSchema:()=>nQ,PrepItemCreateManyInputSchema:()=>RU,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>Yw,PrepItemCreateManyPrepBoardInputSchema:()=>KQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>Uf,PrepItemCreateManyRecipeInputSchema:()=>WQ,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Fa,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>G5,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>go,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>Ph,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>RI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>Gh,PrepItemCreateWithoutAssignedToInputSchema:()=>zu,PrepItemCreateWithoutPrepBoardInputSchema:()=>Cy,PrepItemCreateWithoutRecipeInputSchema:()=>us,PrepItemDeleteArgsSchema:()=>bZt,PrepItemDeleteManyArgsSchema:()=>CZt,PrepItemFindFirstArgsSchema:()=>hSt,PrepItemFindFirstOrThrowArgsSchema:()=>ISt,PrepItemFindManyArgsSchema:()=>qT,PrepItemFindUniqueArgsSchema:()=>ASt,PrepItemFindUniqueOrThrowArgsSchema:()=>SSt,PrepItemGroupByArgsSchema:()=>CSt,PrepItemIncludeSchema:()=>Bz,PrepItemListRelationFilterSchema:()=>$S,PrepItemMaxOrderByAggregateInputSchema:()=>Alt,PrepItemMinOrderByAggregateInputSchema:()=>Slt,PrepItemOrderByRelationAggregateInputSchema:()=>JB,PrepItemOrderByWithAggregationInputSchema:()=>CH,PrepItemOrderByWithRelationInputSchema:()=>qb,PrepItemScalarFieldEnumSchema:()=>UC,PrepItemScalarWhereInputSchema:()=>hl,PrepItemScalarWhereWithAggregatesInputSchema:()=>eS,PrepItemSchema:()=>Tmt,PrepItemSelectSchema:()=>qz,PrepItemSumOrderByAggregateInputSchema:()=>Tlt,PrepItemUncheckedCreateInputSchema:()=>e4,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>ii,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>J5,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>mu,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>Ay,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>ss,PrepItemUncheckedUpdateInputSchema:()=>n4,PrepItemUncheckedUpdateManyInputSchema:()=>a4,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Kst,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Vi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>edt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>e6,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Tyt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>On,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>E7,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>GK,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>qJ,PrepItemUpdateArgsSchema:()=>hZt,PrepItemUpdateInputSchema:()=>o4,PrepItemUpdateManyAndReturnArgsSchema:()=>gZt,PrepItemUpdateManyArgsSchema:()=>IZt,PrepItemUpdateManyMutationInputSchema:()=>rP,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>kR,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>Nj,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>Gk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Wi,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>X5,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>yn,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>RR,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>wj,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Yk,PrepItemUpdateWithoutAssignedToInputSchema:()=>_7,PrepItemUpdateWithoutPrepBoardInputSchema:()=>YK,PrepItemUpdateWithoutRecipeInputSchema:()=>BJ,PrepItemUpsertArgsSchema:()=>dZt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>WR,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>fj,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Qk,PrepItemWhereInputSchema:()=>ja,PrepItemWhereUniqueInputSchema:()=>Q,PrepStatusSchema:()=>tt,ProductionPlanAggregateArgsSchema:()=>LIt,ProductionPlanArgsSchema:()=>g0,ProductionPlanAvgOrderByAggregateInputSchema:()=>Hot,ProductionPlanCountOrderByAggregateInputSchema:()=>Vot,ProductionPlanCountOutputTypeArgsSchema:()=>C0,ProductionPlanCountOutputTypeSelectSchema:()=>ptt,ProductionPlanCreateArgsSchema:()=>nRt,ProductionPlanCreateInputSchema:()=>o1,ProductionPlanCreateManyAndReturnArgsSchema:()=>lRt,ProductionPlanCreateManyArgsSchema:()=>iRt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>JO,ProductionPlanCreateManyCreatedByInputSchema:()=>cQ,ProductionPlanCreateManyInputSchema:()=>$P,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>OO,ProductionPlanCreateManyRestaurantInputSchema:()=>KH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>Ha,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>ar,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>WF,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>jh,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>C3,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>gh,ProductionPlanCreateWithoutCreatedByInputSchema:()=>Wu,ProductionPlanCreateWithoutItemsInputSchema:()=>Vv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>au,ProductionPlanDeleteArgsSchema:()=>rRt,ProductionPlanDeleteManyArgsSchema:()=>sRt,ProductionPlanFindFirstArgsSchema:()=>_It,ProductionPlanFindFirstOrThrowArgsSchema:()=>EIt,ProductionPlanFindManyArgsSchema:()=>vN,ProductionPlanFindUniqueArgsSchema:()=>HIt,ProductionPlanFindUniqueOrThrowArgsSchema:()=>QIt,ProductionPlanGroupByArgsSchema:()=>VIt,ProductionPlanIncludeSchema:()=>Zd,ProductionPlanItemAggregateArgsSchema:()=>$It,ProductionPlanItemArgsSchema:()=>Hmt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>Kot,ProductionPlanItemCountOrderByAggregateInputSchema:()=>Jot,ProductionPlanItemCreateArgsSchema:()=>yRt,ProductionPlanItemCreateInputSchema:()=>r1,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>mRt,ProductionPlanItemCreateManyArgsSchema:()=>zRt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>KO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>uQ,ProductionPlanItemCreateManyInputSchema:()=>JP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>Lv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>NH,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>Rf,ProductionPlanItemCreateManyRecipeInputSchema:()=>kQ,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>Qa,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>CF,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>Ao,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>Mh,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>ah,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>Jh,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>ku,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>kc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>zs,ProductionPlanItemDeleteArgsSchema:()=>bRt,ProductionPlanItemDeleteManyArgsSchema:()=>CRt,ProductionPlanItemFindFirstArgsSchema:()=>YIt,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>GIt,ProductionPlanItemFindManyArgsSchema:()=>OT,ProductionPlanItemFindUniqueArgsSchema:()=>KIt,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>XIt,ProductionPlanItemGroupByArgsSchema:()=>JIt,ProductionPlanItemIncludeSchema:()=>Od,ProductionPlanItemListRelationFilterSchema:()=>ES,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>Xot,ProductionPlanItemMinOrderByAggregateInputSchema:()=>tnt,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>_B,ProductionPlanItemOrderByWithAggregationInputSchema:()=>LV,ProductionPlanItemOrderByWithRelationInputSchema:()=>Ub,ProductionPlanItemScalarFieldEnumSchema:()=>Gg,ProductionPlanItemScalarWhereInputSchema:()=>sl,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>UA,ProductionPlanItemSchema:()=>Qzt,ProductionPlanItemSelectSchema:()=>fd,ProductionPlanItemSumOrderByAggregateInputSchema:()=>ent,ProductionPlanItemUncheckedCreateInputSchema:()=>p1,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>yi,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>AF,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>xu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>xc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>ms,ProductionPlanItemUncheckedUpdateInputSchema:()=>u1,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>s1,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>iyt,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Ki,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Zst,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>UF,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Uyt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wn,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>nJ,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>n7,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>EJ,ProductionPlanItemUpdateArgsSchema:()=>hRt,ProductionPlanItemUpdateInputSchema:()=>c1,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>gRt,ProductionPlanItemUpdateManyArgsSchema:()=>IRt,ProductionPlanItemUpdateManyMutationInputSchema:()=>oP,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>GR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>SW,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>ex,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>vi,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>PF,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>zn,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>YR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>AW,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>tx,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>oJ,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>o7,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>_J,ProductionPlanItemUpsertArgsSchema:()=>dRt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>QR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>CW,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Xk,ProductionPlanItemWhereInputSchema:()=>ha,ProductionPlanItemWhereUniqueInputSchema:()=>E,ProductionPlanListRelationFilterSchema:()=>YM,ProductionPlanMaxOrderByAggregateInputSchema:()=>Qot,ProductionPlanMinOrderByAggregateInputSchema:()=>Yot,ProductionPlanOrderByRelationAggregateInputSchema:()=>y2,ProductionPlanOrderByWithAggregationInputSchema:()=>EV,ProductionPlanOrderByWithRelationInputSchema:()=>Vm,ProductionPlanScalarFieldEnumSchema:()=>Yg,ProductionPlanScalarRelationFilterSchema:()=>$4,ProductionPlanScalarWhereInputSchema:()=>Ol,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>PA,ProductionPlanSchema:()=>Hzt,ProductionPlanSelectSchema:()=>vd,ProductionPlanSumOrderByAggregateInputSchema:()=>Got,ProductionPlanUncheckedCreateInputSchema:()=>n1,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>si,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>hr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>Ru,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>Hv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>iu,ProductionPlanUncheckedUpdateInputSchema:()=>i1,ProductionPlanUncheckedUpdateManyInputSchema:()=>l1,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>ayt,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>Ji,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Qst,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Lr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>eJ,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>mE,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>v7,ProductionPlanUpdateArgsSchema:()=>pRt,ProductionPlanUpdateInputSchema:()=>a1,ProductionPlanUpdateManyAndReturnArgsSchema:()=>uRt,ProductionPlanUpdateManyArgsSchema:()=>cRt,ProductionPlanUpdateManyMutationInputSchema:()=>SM,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>HR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>dR,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>Zi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>xF,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>Cct,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>VR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>yR,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>tJ,ProductionPlanUpdateWithoutItemsInputSchema:()=>zE,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>Z7,ProductionPlanUpsertArgsSchema:()=>aRt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>LR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>sR,ProductionPlanUpsertWithoutItemsInputSchema:()=>gct,ProductionPlanWhereInputSchema:()=>Ge,ProductionPlanWhereUniqueInputSchema:()=>rt,ProductionStatusSchema:()=>Ot,QualityChecklistAggregateArgsSchema:()=>Bht,QualityChecklistArgsSchema:()=>zM,QualityChecklistAvgOrderByAggregateInputSchema:()=>Vet,QualityChecklistCountOrderByAggregateInputSchema:()=>Let,QualityChecklistCountOutputTypeArgsSchema:()=>y0,QualityChecklistCountOutputTypeSelectSchema:()=>ntt,QualityChecklistCreateArgsSchema:()=>AUt,QualityChecklistCreateInputSchema:()=>lG,QualityChecklistCreateManyAndReturnArgsSchema:()=>PUt,QualityChecklistCreateManyArgsSchema:()=>TUt,QualityChecklistCreateManyInputSchema:()=>FP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>wO,QualityChecklistCreateManyRestaurantInputSchema:()=>tQ,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>lr,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>Oq,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>o5,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>n3,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>o3,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>Ah,QualityChecklistCreateWithoutCompletionsInputSchema:()=>cv,QualityChecklistCreateWithoutItemsInputSchema:()=>lv,QualityChecklistCreateWithoutRestaurantInputSchema:()=>pu,QualityChecklistDeleteArgsSchema:()=>UUt,QualityChecklistDeleteManyArgsSchema:()=>xUt,QualityChecklistFindFirstArgsSchema:()=>wht,QualityChecklistFindFirstOrThrowArgsSchema:()=>Nht,QualityChecklistFindManyArgsSchema:()=>SX,QualityChecklistFindUniqueArgsSchema:()=>Fht,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Dht,QualityChecklistGroupByArgsSchema:()=>qht,QualityChecklistIncludeSchema:()=>yd,QualityChecklistListRelationFilterSchema:()=>c2,QualityChecklistMaxOrderByAggregateInputSchema:()=>Het,QualityChecklistMinOrderByAggregateInputSchema:()=>Qet,QualityChecklistOrderByRelationAggregateInputSchema:()=>lat,QualityChecklistOrderByWithAggregationInputSchema:()=>vV,QualityChecklistOrderByWithRelationInputSchema:()=>Kp,QualityChecklistScalarFieldEnumSchema:()=>Bg,QualityChecklistScalarRelationFilterSchema:()=>NM,QualityChecklistScalarWhereInputSchema:()=>jp,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>zA,QualityChecklistSchema:()=>wzt,QualityChecklistSelectSchema:()=>dd,QualityChecklistSumOrderByAggregateInputSchema:()=>Yet,QualityChecklistUncheckedCreateInputSchema:()=>rG,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>gr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>uv,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>rv,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>cu,QualityChecklistUncheckedUpdateInputSchema:()=>cG,QualityChecklistUncheckedUpdateManyInputSchema:()=>uG,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Gst,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Hr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>f_,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>v_,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>N7,QualityChecklistUpdateArgsSchema:()=>WUt,QualityChecklistUpdateInputSchema:()=>pG,QualityChecklistUpdateManyAndReturnArgsSchema:()=>kUt,QualityChecklistUpdateManyArgsSchema:()=>RUt,QualityChecklistUpdateManyMutationInputSchema:()=>dB,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>gR,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>Bq,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>i5,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Fpt,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Bpt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>IR,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>O_,QualityChecklistUpdateWithoutItemsInputSchema:()=>Z_,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>w7,QualityChecklistUpsertArgsSchema:()=>SUt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>hR,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>qpt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Npt,QualityChecklistWhereInputSchema:()=>ve,QualityChecklistWhereUniqueInputSchema:()=>Qt,QueryModeSchema:()=>sM,RecipeAggregateArgsSchema:()=>_Ct,RecipeArgsSchema:()=>Kt,RecipeAvgOrderByAggregateInputSchema:()=>Gat,RecipeCountOrderByAggregateInputSchema:()=>Yat,RecipeCountOutputTypeArgsSchema:()=>x0,RecipeCountOutputTypeSelectSchema:()=>mtt,RecipeCreateArgsSchema:()=>Yxt,RecipeCreateInputSchema:()=>N9,RecipeCreateManyAndReturnArgsSchema:()=>Jxt,RecipeCreateManyArgsSchema:()=>$xt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>zf,RecipeCreateManyCookBookInputSchema:()=>AQ,RecipeCreateManyInputSchema:()=>dU,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>xO,RecipeCreateManyRestaurantInputSchema:()=>QH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>k5,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Gq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>am,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>Y5,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,RecipeCreateNestedManyWithoutTagsInputSchema:()=>Trt,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>crt,RecipeCreateNestedOneWithoutEquipmentsInputSchema:()=>Iq,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>Grt,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>BF,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>LF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>grt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>n6,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>rrt,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>drt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>Jrt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>vD,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>RF,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>Ert,RecipeCreateNestedOneWithoutStorageInputSchema:()=>srt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>mrt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>pP,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>vF,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>hrt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>_h,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>B6,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>eh,RecipeCreateOrConnectWithoutEquipmentsInputSchema:()=>J6,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>k8,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>G3,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>K3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>E6,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>S8,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>jI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>N6,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>F6,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>WI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>x8,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>h8,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>A3,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>u8,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>zh,RecipeCreateOrConnectWithoutStorageInputSchema:()=>q6,RecipeCreateOrConnectWithoutTagsInputSchema:()=>nh,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>D6,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>Q6,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>R3,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>_6,RecipeCreateWithoutCookBookInputSchema:()=>$u,RecipeCreateWithoutCriticalPointsInputSchema:()=>hZ,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>Sc,RecipeCreateWithoutEquipmentsInputSchema:()=>YZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>UN,RecipeCreateWithoutIngredientsInputSchema:()=>Jf,RecipeCreateWithoutInstructionsInputSchema:()=>nw,RecipeCreateWithoutLaborCostsInputSchema:()=>RZ,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>cN,RecipeCreateWithoutMenuItemsInputSchema:()=>Wy,RecipeCreateWithoutNutritionalInfoInputSchema:()=>mZ,RecipeCreateWithoutPhotosInputSchema:()=>AZ,RecipeCreateWithoutPrepBoardsInputSchema:()=>Iy,RecipeCreateWithoutPrepHistoryInputSchema:()=>RN,RecipeCreateWithoutPrepItemsInputSchema:()=>Jw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>Qv,RecipeCreateWithoutRecipeStatsInputSchema:()=>Zw,RecipeCreateWithoutRestaurantInputSchema:()=>Yc,RecipeCreateWithoutStorageInputSchema:()=>gZ,RecipeCreateWithoutTagsInputSchema:()=>Wc,RecipeCreateWithoutTemperaturesInputSchema:()=>TZ,RecipeCreateWithoutVersionsInputSchema:()=>wZ,RecipeCreateWithoutWithdrawalsInputSchema:()=>iO,RecipeCreateWithoutYieldsInputSchema:()=>UZ,RecipeCreateimageUrlsInputSchema:()=>Pt,RecipeCriticalPointAggregateArgsSchema:()=>gbt,RecipeCriticalPointArgsSchema:()=>Mmt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>Ztt,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>Mtt,RecipeCriticalPointCreateArgsSchema:()=>ATt,RecipeCriticalPointCreateInputSchema:()=>X0,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>PTt,RecipeCriticalPointCreateManyArgsSchema:()=>TTt,RecipeCriticalPointCreateManyInputSchema:()=>kP,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>ff,RecipeCriticalPointCreateManyRecipeInputSchema:()=>fQ,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>Mo,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>lI,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Zs,RecipeCriticalPointDeleteArgsSchema:()=>UTt,RecipeCriticalPointDeleteManyArgsSchema:()=>xTt,RecipeCriticalPointFindFirstArgsSchema:()=>hbt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>Ibt,RecipeCriticalPointFindManyArgsSchema:()=>zX,RecipeCriticalPointFindUniqueArgsSchema:()=>Abt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>Sbt,RecipeCriticalPointGroupByArgsSchema:()=>Cbt,RecipeCriticalPointIncludeSchema:()=>_y,RecipeCriticalPointListRelationFilterSchema:()=>k2,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>vtt,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>Ott,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>Hat,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>AV,RecipeCriticalPointOrderByWithRelationInputSchema:()=>ub,RecipeCriticalPointScalarFieldEnumSchema:()=>Wg,RecipeCriticalPointScalarWhereInputSchema:()=>Lp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>oA,RecipeCriticalPointSchema:()=>Pzt,RecipeCriticalPointSelectSchema:()=>Ey,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>ftt,RecipeCriticalPointUncheckedCreateInputSchema:()=>tY,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Xo,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>vs,RecipeCriticalPointUncheckedUpdateInputSchema:()=>oY,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>nY,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Oyt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Hn,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>rK,RecipeCriticalPointUpdateArgsSchema:()=>WTt,RecipeCriticalPointUpdateInputSchema:()=>eY,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>kTt,RecipeCriticalPointUpdateManyArgsSchema:()=>RTt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>iB,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>kx,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Pn,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Rx,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>lK,RecipeCriticalPointUpsertArgsSchema:()=>STt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Wx,RecipeCriticalPointWhereInputSchema:()=>oa,RecipeCriticalPointWhereUniqueInputSchema:()=>me,RecipeDeleteArgsSchema:()=>Kxt,RecipeDeleteManyArgsSchema:()=>ojt,RecipeEquipmentAggregateArgsSchema:()=>Wht,RecipeEquipmentArgsSchema:()=>Nmt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>vet,RecipeEquipmentCountOrderByAggregateInputSchema:()=>Zet,RecipeEquipmentCreateArgsSchema:()=>nUt,RecipeEquipmentCreateInputSchema:()=>$Y,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>lUt,RecipeEquipmentCreateManyArgsSchema:()=>iUt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>HZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>MH,RecipeEquipmentCreateManyInputSchema:()=>BP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>jf,RecipeEquipmentCreateManyRecipeInputSchema:()=>MQ,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>rw,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>EQ,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>cq,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>HF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>Yb,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>eI,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>bI,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>pc,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>Ss,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>Ks,RecipeEquipmentDeleteArgsSchema:()=>rUt,RecipeEquipmentDeleteManyArgsSchema:()=>sUt,RecipeEquipmentFindFirstArgsSchema:()=>Pht,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>Uht,RecipeEquipmentFindManyArgsSchema:()=>xT,RecipeEquipmentFindUniqueArgsSchema:()=>kht,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>xht,RecipeEquipmentGroupByArgsSchema:()=>Rht,RecipeEquipmentIncludeSchema:()=>pd,RecipeEquipmentListRelationFilterSchema:()=>DS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>Oet,RecipeEquipmentMinOrderByAggregateInputSchema:()=>fet,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>OB,RecipeEquipmentOrderByWithAggregationInputSchema:()=>MV,RecipeEquipmentOrderByWithRelationInputSchema:()=>bb,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>KN,RecipeEquipmentScalarFieldEnumSchema:()=>wg,RecipeEquipmentScalarWhereInputSchema:()=>ul,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>yA,RecipeEquipmentSchema:()=>Ozt,RecipeEquipmentSelectSchema:()=>cd,RecipeEquipmentSumOrderByAggregateInputSchema:()=>wet,RecipeEquipmentUncheckedCreateInputSchema:()=>JY,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>sq,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>QF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>cc,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>Ts,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>Xs,RecipeEquipmentUncheckedUpdateInputSchema:()=>XY,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>tG,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>Sst,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>bq,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>xyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>Lyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>JF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fn,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>N8,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>JJ,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>RK,RecipeEquipmentUpdateArgsSchema:()=>pUt,RecipeEquipmentUpdateInputSchema:()=>KY,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>uUt,RecipeEquipmentUpdateManyArgsSchema:()=>cUt,RecipeEquipmentUpdateManyMutationInputSchema:()=>JT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>HU,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>dx,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>aj,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>zq,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>$F,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>In,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>VU,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>yx,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>nj,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>w8,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>$J,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>WK,RecipeEquipmentUpsertArgsSchema:()=>aUt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>LU,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>sx,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>oj,RecipeEquipmentWhereInputSchema:()=>pa,RecipeEquipmentWhereUniqueInputSchema:()=>B,RecipeFindFirstArgsSchema:()=>FCt,RecipeFindFirstOrThrowArgsSchema:()=>DCt,RecipeFindManyArgsSchema:()=>hp,RecipeFindUniqueArgsSchema:()=>LCt,RecipeFindUniqueOrThrowArgsSchema:()=>VCt,RecipeGroupByArgsSchema:()=>ECt,RecipeIncludeSchema:()=>uz,RecipeIngredientAggregateArgsSchema:()=>tAt,RecipeIngredientArgsSchema:()=>ebt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>cit,RecipeIngredientCountOrderByAggregateInputSchema:()=>pit,RecipeIngredientCreateArgsSchema:()=>yjt,RecipeIngredientCreateInputSchema:()=>Q9,RecipeIngredientCreateManyAndReturnArgsSchema:()=>mjt,RecipeIngredientCreateManyArgsSchema:()=>zjt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>Vf,RecipeIngredientCreateManyIngredientInputSchema:()=>NQ,RecipeIngredientCreateManyInputSchema:()=>mU,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>Af,RecipeIngredientCreateManyRecipeInputSchema:()=>SQ,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>BZ,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>xH,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>EI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>yo,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>cP,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>pI,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Eh,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>Hb,RecipeIngredientCreateWithoutIngredientInputSchema:()=>ws,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Ku,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>ac,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>zp,RecipeIngredientDeleteArgsSchema:()=>bjt,RecipeIngredientDeleteManyArgsSchema:()=>Cjt,RecipeIngredientFindFirstArgsSchema:()=>KCt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>XCt,RecipeIngredientFindManyArgsSchema:()=>wT,RecipeIngredientFindUniqueArgsSchema:()=>oAt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>nAt,RecipeIngredientGroupByArgsSchema:()=>eAt,RecipeIngredientIncludeSchema:()=>zz,RecipeIngredientListRelationFilterSchema:()=>FS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>uit,RecipeIngredientMinOrderByAggregateInputSchema:()=>sit,RecipeIngredientOrderByRelationAggregateInputSchema:()=>ZB,RecipeIngredientOrderByWithAggregationInputSchema:()=>pH,RecipeIngredientOrderByWithRelationInputSchema:()=>fb,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>GT,RecipeIngredientRecipeIdRecipeVersionIdCompoundUniqueInputSchema:()=>YT,RecipeIngredientScalarFieldEnumSchema:()=>dC,RecipeIngredientScalarWhereInputSchema:()=>cl,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>EA,RecipeIngredientSchema:()=>smt,RecipeIngredientSelectSchema:()=>mz,RecipeIngredientSumOrderByAggregateInputSchema:()=>yit,RecipeIngredientUncheckedCreateInputSchema:()=>Y9,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>JI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>fo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>dP,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Ns,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>Xu,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>ic,RecipeIngredientUncheckedUpdateInputSchema:()=>$9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>J9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>wyt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>dg,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>hyt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>kn,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Cst,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>CP,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>sK,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>RJ,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>v8,RecipeIngredientUpdateArgsSchema:()=>hjt,RecipeIngredientUpdateInputSchema:()=>G9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>gjt,RecipeIngredientUpdateManyArgsSchema:()=>Ijt,RecipeIngredientUpdateManyMutationInputSchema:()=>aP,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>Ox,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>Mk,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>FU,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>ig,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>ln,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>bP,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>vx,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>jk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>qU,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>uK,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>WJ,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>Z8,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>Xr,RecipeIngredientUpsertArgsSchema:()=>djt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Zx,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>xk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>BU,RecipeIngredientWhereInputSchema:()=>Wa,RecipeIngredientWhereUniqueInputSchema:()=>V,RecipeInstructionAggregateArgsSchema:()=>lAt,RecipeInstructionArgsSchema:()=>M0,RecipeInstructionAvgOrderByAggregateInputSchema:()=>zit,RecipeInstructionCountOrderByAggregateInputSchema:()=>dit,RecipeInstructionCountOutputTypeArgsSchema:()=>Z0,RecipeInstructionCountOutputTypeSelectSchema:()=>htt,RecipeInstructionCreateArgsSchema:()=>Ajt,RecipeInstructionCreateInputSchema:()=>K9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>Pjt,RecipeInstructionCreateManyArgsSchema:()=>Tjt,RecipeInstructionCreateManyInputSchema:()=>bU,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>Sf,RecipeInstructionCreateManyRecipeInputSchema:()=>TQ,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>qZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>jH,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>zo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>uP,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>Cq,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>X6,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Lh,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>Qb,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>KZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>ts,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>lc,RecipeInstructionDeleteArgsSchema:()=>Ujt,RecipeInstructionDeleteManyArgsSchema:()=>xjt,RecipeInstructionFindFirstArgsSchema:()=>aAt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>iAt,RecipeInstructionFindManyArgsSchema:()=>NN,RecipeInstructionFindUniqueArgsSchema:()=>pAt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>cAt,RecipeInstructionGroupByArgsSchema:()=>rAt,RecipeInstructionIncludeSchema:()=>bz,RecipeInstructionListRelationFilterSchema:()=>OM,RecipeInstructionMaxOrderByAggregateInputSchema:()=>mit,RecipeInstructionMinOrderByAggregateInputSchema:()=>bit,RecipeInstructionNullableScalarRelationFilterSchema:()=>E4,RecipeInstructionOrderByRelationAggregateInputSchema:()=>D4,RecipeInstructionOrderByWithAggregationInputSchema:()=>cH,RecipeInstructionOrderByWithRelationInputSchema:()=>Ym,RecipeInstructionRecipeIdStepNumberRecipeVersionIdCompoundUniqueInputSchema:()=>tB,RecipeInstructionScalarFieldEnumSchema:()=>zC,RecipeInstructionScalarWhereInputSchema:()=>Ul,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>LA,RecipeInstructionSchema:()=>ymt,RecipeInstructionSelectSchema:()=>hz,RecipeInstructionSumOrderByAggregateInputSchema:()=>hit,RecipeInstructionUncheckedCreateInputSchema:()=>X9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>zP,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>XZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>es,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>rc,RecipeInstructionUncheckedUpdateInputSchema:()=>e$,RecipeInstructionUncheckedUpdateManyInputSchema:()=>o$,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Iyt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>xn,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Ast,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>AP,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>R_,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>xJ,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>f8,RecipeInstructionUpdateArgsSchema:()=>Wjt,RecipeInstructionUpdateInputSchema:()=>t$,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>kjt,RecipeInstructionUpdateManyArgsSchema:()=>Rjt,RecipeInstructionUpdateManyMutationInputSchema:()=>WM,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ok,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>EU,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>rn,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>hP,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>Tq,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Zpt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>vk,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>_U,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>W_,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>kJ,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>O8,RecipeInstructionUpsertArgsSchema:()=>Sjt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Zk,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>DU,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Mpt,RecipeInstructionWhereInputSchema:()=>Be,RecipeInstructionWhereUniqueInputSchema:()=>pt,RecipeLaborCostAggregateArgsSchema:()=>$bt,RecipeLaborCostArgsSchema:()=>fmt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>aet,RecipeLaborCostCountOrderByAggregateInputSchema:()=>net,RecipeLaborCostCreateArgsSchema:()=>yPt,RecipeLaborCostCreateInputSchema:()=>UY,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>mPt,RecipeLaborCostCreateManyArgsSchema:()=>zPt,RecipeLaborCostCreateManyInputSchema:()=>vP,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>vf,RecipeLaborCostCreateManyRecipeInputSchema:()=>OQ,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>xo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>iI,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>js,RecipeLaborCostDeleteArgsSchema:()=>bPt,RecipeLaborCostDeleteManyArgsSchema:()=>CPt,RecipeLaborCostFindFirstArgsSchema:()=>Ybt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>Gbt,RecipeLaborCostFindManyArgsSchema:()=>IX,RecipeLaborCostFindUniqueArgsSchema:()=>Kbt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>Xbt,RecipeLaborCostGroupByArgsSchema:()=>Jbt,RecipeLaborCostIncludeSchema:()=>Ky,RecipeLaborCostListRelationFilterSchema:()=>W2,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>iet,RecipeLaborCostMinOrderByAggregateInputSchema:()=>ret,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>Vat,RecipeLaborCostOrderByWithAggregationInputSchema:()=>WV,RecipeLaborCostOrderByWithRelationInputSchema:()=>zb,RecipeLaborCostScalarFieldEnumSchema:()=>Mg,RecipeLaborCostScalarWhereInputSchema:()=>Ep,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>rA,RecipeLaborCostSchema:()=>xzt,RecipeLaborCostSelectSchema:()=>Xy,RecipeLaborCostSumOrderByAggregateInputSchema:()=>pet,RecipeLaborCostUncheckedCreateInputSchema:()=>WY,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Jo,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>Ms,RecipeLaborCostUncheckedUpdateInputSchema:()=>kY,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>xY,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>vyt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ln,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>iK,RecipeLaborCostUpdateArgsSchema:()=>hPt,RecipeLaborCostUpdateInputSchema:()=>RY,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>gPt,RecipeLaborCostUpdateManyArgsSchema:()=>IPt,RecipeLaborCostUpdateManyMutationInputSchema:()=>cB,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ux,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Sn,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Px,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>aK,RecipeLaborCostUpsertArgsSchema:()=>dPt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Tx,RecipeLaborCostWhereInputSchema:()=>la,RecipeLaborCostWhereUniqueInputSchema:()=>ge,RecipeListRelationFilterSchema:()=>up,RecipeMaxOrderByAggregateInputSchema:()=>$at,RecipeMinOrderByAggregateInputSchema:()=>Jat,RecipeNullableScalarRelationFilterSchema:()=>K4,RecipeNutritionAggregateArgsSchema:()=>dbt,RecipeNutritionArgsSchema:()=>l0,RecipeNutritionAvgOrderByAggregateInputSchema:()=>Rtt,RecipeNutritionCountOrderByAggregateInputSchema:()=>Wtt,RecipeNutritionCreateArgsSchema:()=>yTt,RecipeNutritionCreateInputSchema:()=>Q0,RecipeNutritionCreateManyAndReturnArgsSchema:()=>mTt,RecipeNutritionCreateManyArgsSchema:()=>zTt,RecipeNutritionCreateManyInputSchema:()=>RP,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>jo,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>Of,RecipeNutritionCreateWithoutRecipeInputSchema:()=>AT,RecipeNutritionDeleteArgsSchema:()=>bTt,RecipeNutritionDeleteManyArgsSchema:()=>CTt,RecipeNutritionFindFirstArgsSchema:()=>ubt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>sbt,RecipeNutritionFindManyArgsSchema:()=>ybt,RecipeNutritionFindUniqueArgsSchema:()=>mbt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>bbt,RecipeNutritionGroupByArgsSchema:()=>zbt,RecipeNutritionIncludeSchema:()=>Fy,RecipeNutritionMaxOrderByAggregateInputSchema:()=>ktt,RecipeNutritionMinOrderByAggregateInputSchema:()=>xtt,RecipeNutritionNullableScalarRelationFilterSchema:()=>R2,RecipeNutritionOrderByWithAggregationInputSchema:()=>CV,RecipeNutritionOrderByWithRelationInputSchema:()=>Fm,RecipeNutritionScalarFieldEnumSchema:()=>Ug,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>eA,RecipeNutritionSchema:()=>Tzt,RecipeNutritionSelectSchema:()=>Dy,RecipeNutritionSumOrderByAggregateInputSchema:()=>jtt,RecipeNutritionUncheckedCreateInputSchema:()=>Y0,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Ko,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>ST,RecipeNutritionUncheckedUpdateInputSchema:()=>$0,RecipeNutritionUncheckedUpdateManyInputSchema:()=>K0,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Vn,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>Ff,RecipeNutritionUpdateArgsSchema:()=>hTt,RecipeNutritionUpdateInputSchema:()=>G0,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>gTt,RecipeNutritionUpdateManyArgsSchema:()=>ITt,RecipeNutritionUpdateManyMutationInputSchema:()=>J0,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>Tn,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>L3,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>qf,RecipeNutritionUpsertArgsSchema:()=>dTt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>E3,RecipeNutritionWhereInputSchema:()=>qe,RecipeNutritionWhereUniqueInputSchema:()=>Ll,RecipeOrderByRelationAggregateInputSchema:()=>_S,RecipeOrderByWithAggregationInputSchema:()=>lH,RecipeOrderByWithRelationInputSchema:()=>oo,RecipePhotoAggregateArgsSchema:()=>Zbt,RecipePhotoArgsSchema:()=>Zmt,RecipePhotoAvgOrderByAggregateInputSchema:()=>_tt,RecipePhotoCountOrderByAggregateInputSchema:()=>Dtt,RecipePhotoCreateArgsSchema:()=>qTt,RecipePhotoCreateInputSchema:()=>uY,RecipePhotoCreateManyAndReturnArgsSchema:()=>_Tt,RecipePhotoCreateManyArgsSchema:()=>DTt,RecipePhotoCreateManyInputSchema:()=>jP,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>Nf,RecipePhotoCreateManyRecipeInputSchema:()=>wQ,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>rI,RecipePhotoCreateWithoutRecipeInputSchema:()=>Os,RecipePhotoDeleteArgsSchema:()=>ETt,RecipePhotoDeleteManyArgsSchema:()=>QTt,RecipePhotoFindFirstArgsSchema:()=>jbt,RecipePhotoFindFirstOrThrowArgsSchema:()=>Mbt,RecipePhotoFindManyArgsSchema:()=>mX,RecipePhotoFindUniqueArgsSchema:()=>Obt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>fbt,RecipePhotoGroupByArgsSchema:()=>vbt,RecipePhotoIncludeSchema:()=>Hy,RecipePhotoListRelationFilterSchema:()=>j2,RecipePhotoMaxOrderByAggregateInputSchema:()=>Ett,RecipePhotoMinOrderByAggregateInputSchema:()=>Ltt,RecipePhotoOrderByRelationAggregateInputSchema:()=>Qat,RecipePhotoOrderByWithAggregationInputSchema:()=>TV,RecipePhotoOrderByWithRelationInputSchema:()=>sb,RecipePhotoScalarFieldEnumSchema:()=>kg,RecipePhotoScalarWhereInputSchema:()=>Vp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>aA,RecipePhotoSchema:()=>Wzt,RecipePhotoSelectSchema:()=>Qy,RecipePhotoSumOrderByAggregateInputSchema:()=>Vtt,RecipePhotoUncheckedCreateInputSchema:()=>sY,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>en,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>fs,RecipePhotoUncheckedUpdateInputSchema:()=>dY,RecipePhotoUncheckedUpdateManyInputSchema:()=>zY,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>fyt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Yn,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>cK,RecipePhotoUpdateArgsSchema:()=>LTt,RecipePhotoUpdateInputSchema:()=>yY,RecipePhotoUpdateManyAndReturnArgsSchema:()=>HTt,RecipePhotoUpdateManyArgsSchema:()=>VTt,RecipePhotoUpdateManyMutationInputSchema:()=>lB,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>Mx,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Wn,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>jx,RecipePhotoUpdateWithoutRecipeInputSchema:()=>pK,RecipePhotoUpsertArgsSchema:()=>FTt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>xx,RecipePhotoWhereInputSchema:()=>na,RecipePhotoWhereUniqueInputSchema:()=>be,RecipeScalarFieldEnumSchema:()=>sC,RecipeScalarRelationFilterSchema:()=>de,RecipeScalarWhereInputSchema:()=>le,RecipeScalarWhereWithAggregatesInputSchema:()=>DA,RecipeSchema:()=>cmt,RecipeSelectSchema:()=>sz,RecipeStatsAggregateArgsSchema:()=>NAt,RecipeStatsArgsSchema:()=>w0,RecipeStatsAvgOrderByAggregateInputSchema:()=>Dit,RecipeStatsCountOrderByAggregateInputSchema:()=>Fit,RecipeStatsCreateArgsSchema:()=>yMt,RecipeStatsCreateInputSchema:()=>T$,RecipeStatsCreateManyAndReturnArgsSchema:()=>mMt,RecipeStatsCreateManyArgsSchema:()=>zMt,RecipeStatsCreateManyInputSchema:()=>AU,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Oo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>Bf,RecipeStatsCreateWithoutRecipeInputSchema:()=>UT,RecipeStatsDeleteArgsSchema:()=>bMt,RecipeStatsDeleteManyArgsSchema:()=>CMt,RecipeStatsFindFirstArgsSchema:()=>OAt,RecipeStatsFindFirstOrThrowArgsSchema:()=>fAt,RecipeStatsFindManyArgsSchema:()=>wAt,RecipeStatsFindUniqueArgsSchema:()=>qAt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>FAt,RecipeStatsGroupByArgsSchema:()=>BAt,RecipeStatsIncludeSchema:()=>Wz,RecipeStatsMaxOrderByAggregateInputSchema:()=>_it,RecipeStatsMinOrderByAggregateInputSchema:()=>Eit,RecipeStatsNullableScalarRelationFilterSchema:()=>M2,RecipeStatsOrderByWithAggregationInputSchema:()=>zH,RecipeStatsOrderByWithRelationInputSchema:()=>$m,RecipeStatsScalarFieldEnumSchema:()=>gC,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>GA,RecipeStatsSchema:()=>hmt,RecipeStatsSelectSchema:()=>Rz,RecipeStatsSumOrderByAggregateInputSchema:()=>Lit,RecipeStatsUncheckedCreateInputSchema:()=>P$,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>on,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>WT,RecipeStatsUncheckedUpdateInputSchema:()=>W$,RecipeStatsUncheckedUpdateManyInputSchema:()=>k$,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Gn,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>Lf,RecipeStatsUpdateArgsSchema:()=>hMt,RecipeStatsUpdateInputSchema:()=>U$,RecipeStatsUpdateManyAndReturnArgsSchema:()=>gMt,RecipeStatsUpdateManyArgsSchema:()=>IMt,RecipeStatsUpdateManyMutationInputSchema:()=>R$,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Rn,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>Y3,RecipeStatsUpdateWithoutRecipeInputSchema:()=>Ef,RecipeStatsUpsertArgsSchema:()=>dMt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>Q3,RecipeStatsWhereInputSchema:()=>De,RecipeStatsWhereUniqueInputSchema:()=>Hl,RecipeStorageAggregateArgsSchema:()=>Wbt,RecipeStorageArgsSchema:()=>r0,RecipeStorageAvgOrderByAggregateInputSchema:()=>Ntt,RecipeStorageCountOrderByAggregateInputSchema:()=>wtt,RecipeStorageCreateArgsSchema:()=>jTt,RecipeStorageCreateInputSchema:()=>aY,RecipeStorageCreateManyAndReturnArgsSchema:()=>vTt,RecipeStorageCreateManyArgsSchema:()=>ZTt,RecipeStorageCreateManyInputSchema:()=>xP,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>Zo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>wf,RecipeStorageCreateWithoutRecipeInputSchema:()=>TT,RecipeStorageDeleteArgsSchema:()=>OTt,RecipeStorageDeleteManyArgsSchema:()=>BTt,RecipeStorageFindFirstArgsSchema:()=>Tbt,RecipeStorageFindFirstOrThrowArgsSchema:()=>Pbt,RecipeStorageFindManyArgsSchema:()=>Ubt,RecipeStorageFindUniqueArgsSchema:()=>kbt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>xbt,RecipeStorageGroupByArgsSchema:()=>Rbt,RecipeStorageIncludeSchema:()=>Ly,RecipeStorageMaxOrderByAggregateInputSchema:()=>Btt,RecipeStorageMinOrderByAggregateInputSchema:()=>qtt,RecipeStorageNullableScalarRelationFilterSchema:()=>x2,RecipeStorageOrderByWithAggregationInputSchema:()=>SV,RecipeStorageOrderByWithRelationInputSchema:()=>Dm,RecipeStorageScalarFieldEnumSchema:()=>Rg,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>nA,RecipeStorageSchema:()=>Uzt,RecipeStorageSelectSchema:()=>Vy,RecipeStorageSumOrderByAggregateInputSchema:()=>Ftt,RecipeStorageUncheckedCreateInputSchema:()=>iY,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>tn,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>PT,RecipeStorageUncheckedUpdateInputSchema:()=>rY,RecipeStorageUncheckedUpdateManyInputSchema:()=>cY,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Qn,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>_f,RecipeStorageUpdateArgsSchema:()=>fTt,RecipeStorageUpdateInputSchema:()=>lY,RecipeStorageUpdateManyAndReturnArgsSchema:()=>NTt,RecipeStorageUpdateManyArgsSchema:()=>wTt,RecipeStorageUpdateManyMutationInputSchema:()=>pY,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Un,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>H3,RecipeStorageUpdateWithoutRecipeInputSchema:()=>Df,RecipeStorageUpsertArgsSchema:()=>MTt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>V3,RecipeStorageWhereInputSchema:()=>Fe,RecipeStorageWhereUniqueInputSchema:()=>Vl,RecipeSumOrderByAggregateInputSchema:()=>Kat,RecipeTagAggregateArgsSchema:()=>WIt,RecipeTagArgsSchema:()=>Emt,RecipeTagAvgOrderByAggregateInputSchema:()=>Mot,RecipeTagCountOrderByAggregateInputSchema:()=>jot,RecipeTagCountOutputTypeArgsSchema:()=>I0,RecipeTagCountOutputTypeSelectSchema:()=>rtt,RecipeTagCreateArgsSchema:()=>jWt,RecipeTagCreateInputSchema:()=>DG,RecipeTagCreateManyAndReturnArgsSchema:()=>vWt,RecipeTagCreateManyArgsSchema:()=>ZWt,RecipeTagCreateManyInputSchema:()=>QP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>To,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>Xh,RecipeTagCreateWithoutRecipesInputSchema:()=>Is,RecipeTagDeleteArgsSchema:()=>OWt,RecipeTagDeleteManyArgsSchema:()=>BWt,RecipeTagFindFirstArgsSchema:()=>PIt,RecipeTagFindFirstOrThrowArgsSchema:()=>UIt,RecipeTagFindManyArgsSchema:()=>PX,RecipeTagFindUniqueArgsSchema:()=>kIt,RecipeTagFindUniqueOrThrowArgsSchema:()=>xIt,RecipeTagGroupByArgsSchema:()=>RIt,RecipeTagIncludeSchema:()=>Wd,RecipeTagListRelationFilterSchema:()=>T2,RecipeTagMaxOrderByAggregateInputSchema:()=>Zot,RecipeTagMinOrderByAggregateInputSchema:()=>vot,RecipeTagOrderByRelationAggregateInputSchema:()=>_at,RecipeTagOrderByWithAggregationInputSchema:()=>FV,RecipeTagOrderByWithRelationInputSchema:()=>Sb,RecipeTagScalarFieldEnumSchema:()=>Vg,RecipeTagScalarWhereInputSchema:()=>Fp,RecipeTagScalarWhereWithAggregatesInputSchema:()=>AA,RecipeTagSchema:()=>Ezt,RecipeTagSelectSchema:()=>Rd,RecipeTagSumOrderByAggregateInputSchema:()=>Oot,RecipeTagUncheckedCreateInputSchema:()=>_G,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Vo,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>gs,RecipeTagUncheckedUpdateInputSchema:()=>LG,RecipeTagUncheckedUpdateManyInputSchema:()=>VG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>Ryt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Bn,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>QJ,RecipeTagUpdateArgsSchema:()=>fWt,RecipeTagUpdateInputSchema:()=>EG,RecipeTagUpdateManyAndReturnArgsSchema:()=>NWt,RecipeTagUpdateManyArgsSchema:()=>wWt,RecipeTagUpdateManyMutationInputSchema:()=>mB,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>rx,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>bn,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>lx,RecipeTagUpdateWithoutRecipesInputSchema:()=>HJ,RecipeTagUpsertArgsSchema:()=>MWt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>ix,RecipeTagWhereInputSchema:()=>za,RecipeTagWhereUniqueInputSchema:()=>Ae,RecipeTemperatureAggregateArgsSchema:()=>Bbt,RecipeTemperatureArgsSchema:()=>vmt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>Ytt,RecipeTemperatureCountOrderByAggregateInputSchema:()=>Qtt,RecipeTemperatureCreateArgsSchema:()=>YTt,RecipeTemperatureCreateInputSchema:()=>mY,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>JTt,RecipeTemperatureCreateManyArgsSchema:()=>$Tt,RecipeTemperatureCreateManyInputSchema:()=>MP,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>Mf,RecipeTemperatureCreateManyRecipeInputSchema:()=>ZQ,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Ro,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>nI,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>Ws,RecipeTemperatureDeleteArgsSchema:()=>KTt,RecipeTemperatureDeleteManyArgsSchema:()=>oPt,RecipeTemperatureFindFirstArgsSchema:()=>wbt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>Nbt,RecipeTemperatureFindManyArgsSchema:()=>bX,RecipeTemperatureFindUniqueArgsSchema:()=>Fbt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Dbt,RecipeTemperatureGroupByArgsSchema:()=>qbt,RecipeTemperatureIncludeSchema:()=>Yy,RecipeTemperatureListRelationFilterSchema:()=>P2,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>Gtt,RecipeTemperatureMinOrderByAggregateInputSchema:()=>$tt,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>Eat,RecipeTemperatureOrderByWithAggregationInputSchema:()=>PV,RecipeTemperatureOrderByWithRelationInputSchema:()=>yb,RecipeTemperatureScalarFieldEnumSchema:()=>xg,RecipeTemperatureScalarWhereInputSchema:()=>Dp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>iA,RecipeTemperatureSchema:()=>Rzt,RecipeTemperatureSelectSchema:()=>Gy,RecipeTemperatureSumOrderByAggregateInputSchema:()=>Jtt,RecipeTemperatureUncheckedCreateInputSchema:()=>bY,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Go,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>Rs,RecipeTemperatureUncheckedUpdateInputSchema:()=>IY,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>gY,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>Myt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_n,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>eK,RecipeTemperatureUpdateArgsSchema:()=>XTt,RecipeTemperatureUpdateInputSchema:()=>hY,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>ePt,RecipeTemperatureUpdateManyArgsSchema:()=>tPt,RecipeTemperatureUpdateManyMutationInputSchema:()=>rB,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>gx,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>Cn,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ix,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>tK,RecipeTemperatureUpsertArgsSchema:()=>GTt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>hx,RecipeTemperatureWhereInputSchema:()=>aa,RecipeTemperatureWhereUniqueInputSchema:()=>he,RecipeUncheckedCreateInputSchema:()=>B9,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>j5,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Kq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>ym,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>$5,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>Prt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Ju,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>IZ,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>Tc,RecipeUncheckedCreateWithoutEquipmentsInputSchema:()=>GZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>WN,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>Kf,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>aw,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>kZ,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>uN,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>Ry,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>bZ,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>SZ,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>gy,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>kN,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>Kw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>Yv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>vw,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>CZ,RecipeUncheckedCreateWithoutTagsInputSchema:()=>Rc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>PZ,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>NZ,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>lO,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>WZ,RecipeUncheckedUpdateInputSchema:()=>F9,RecipeUncheckedUpdateManyInputSchema:()=>D9,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>byt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>v5,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>xst,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>aF,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>adt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>jm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>tdt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>t6,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>_st,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Mst,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>Wrt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>UJ,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>JD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>J8,RecipeUncheckedUpdateWithoutEquipmentsInputSchema:()=>T_,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>sV,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>nL,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>cL,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>r_,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>nV,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>eX,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>GD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>e_,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>QK,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>dV,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>QL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>hE,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>vL,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>T7,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>XD,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>e7,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>n_,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>m_,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>xE,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>i_,RecipeUpdateArgsSchema:()=>Xxt,RecipeUpdateInputSchema:()=>q9,RecipeUpdateManyAndReturnArgsSchema:()=>ejt,RecipeUpdateManyArgsSchema:()=>tjt,RecipeUpdateManyMutationInputSchema:()=>BI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>kk,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>dW,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Hj,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>Oj,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>KW,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>gW,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>M5,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>eF,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>Sm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>K5,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>Urt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>urt,RecipeUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>Aq,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>$rt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>DF,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>YF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>Crt,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>i6,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>prt,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>zrt,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>Krt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>wD,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>jF,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Lrt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>yrt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>brt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>mP,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>Irt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>wF,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>opt,RecipeUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>kpt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>bst,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>put,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>zut,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>ypt,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>pst,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>tpt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>lpt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>Ist,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Kut,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>Sct,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>But,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>apt,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>ppt,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>Cpt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Oct,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>upt,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>Rk,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>yW,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Vj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>vj,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>JW,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>IW,RecipeUpdateWithoutCookBookInputSchema:()=>PJ,RecipeUpdateWithoutCriticalPointsInputSchema:()=>$D,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>$8,RecipeUpdateWithoutEquipmentsInputSchema:()=>S_,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>uV,RecipeUpdateWithoutIngredientsInputSchema:()=>oL,RecipeUpdateWithoutInstructionsInputSchema:()=>pL,RecipeUpdateWithoutLaborCostsInputSchema:()=>l_,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>oV,RecipeUpdateWithoutMenuItemsInputSchema:()=>tX,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>YD,RecipeUpdateWithoutPhotosInputSchema:()=>t_,RecipeUpdateWithoutPrepBoardsInputSchema:()=>HK,RecipeUpdateWithoutPrepHistoryInputSchema:()=>yV,RecipeUpdateWithoutPrepItemsInputSchema:()=>HL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>bE,RecipeUpdateWithoutRecipeStatsInputSchema:()=>ZL,RecipeUpdateWithoutRestaurantInputSchema:()=>S7,RecipeUpdateWithoutStorageInputSchema:()=>KD,RecipeUpdateWithoutTagsInputSchema:()=>t7,RecipeUpdateWithoutTemperaturesInputSchema:()=>o_,RecipeUpdateWithoutVersionsInputSchema:()=>z_,RecipeUpdateWithoutWithdrawalsInputSchema:()=>kE,RecipeUpdateWithoutYieldsInputSchema:()=>a_,RecipeUpdateimageUrlsInputSchema:()=>st,RecipeUpsertArgsSchema:()=>Gxt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>Wk,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>sW,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Lj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Zj,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>$W,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>hW,RecipeUpsertWithoutCriticalPointsInputSchema:()=>ept,RecipeUpsertWithoutEquipmentsInputSchema:()=>Rpt,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>mst,RecipeUpsertWithoutIngredientsInputSchema:()=>rut,RecipeUpsertWithoutInstructionsInputSchema:()=>dut,RecipeUpsertWithoutLaborCostsInputSchema:()=>spt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>rst,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>Xrt,RecipeUpsertWithoutPhotosInputSchema:()=>ipt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>hst,RecipeUpsertWithoutPrepItemsInputSchema:()=>Jut,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>Act,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Nut,RecipeUpsertWithoutStorageInputSchema:()=>npt,RecipeUpsertWithoutTemperaturesInputSchema:()=>rpt,RecipeUpsertWithoutVersionsInputSchema:()=>gpt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>vct,RecipeUpsertWithoutYieldsInputSchema:()=>cpt,RecipeVersionAggregateArgsSchema:()=>zht,RecipeVersionArgsSchema:()=>yM,RecipeVersionAvgOrderByAggregateInputSchema:()=>Cet,RecipeVersionCountOrderByAggregateInputSchema:()=>get,RecipeVersionCountOutputTypeArgsSchema:()=>u0,RecipeVersionCountOutputTypeSelectSchema:()=>ett,RecipeVersionCreateArgsSchema:()=>qPt,RecipeVersionCreateInputSchema:()=>FY,RecipeVersionCreateManyAndReturnArgsSchema:()=>_Pt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>lf,RecipeVersionCreateManyApprovedByInputSchema:()=>hQ,RecipeVersionCreateManyArgsSchema:()=>DPt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>af,RecipeVersionCreateManyCreatedByInputSchema:()=>bQ,RecipeVersionCreateManyInputSchema:()=>wP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>xf,RecipeVersionCreateManyRecipeInputSchema:()=>jQ,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>ti,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>Xa,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Po,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>FF,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>VF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Bh,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Nh,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>J3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>X3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>tI,RecipeVersionCreateWithoutApprovedByInputSchema:()=>_u,RecipeVersionCreateWithoutCreatedByInputSchema:()=>Fu,RecipeVersionCreateWithoutIngredientsInputSchema:()=>ew,RecipeVersionCreateWithoutInstructionsInputSchema:()=>iw,RecipeVersionCreateWithoutRecipeInputSchema:()=>Cs,RecipeVersionDeleteArgsSchema:()=>EPt,RecipeVersionDeleteManyArgsSchema:()=>QPt,RecipeVersionFindFirstArgsSchema:()=>yht,RecipeVersionFindFirstOrThrowArgsSchema:()=>dht,RecipeVersionFindManyArgsSchema:()=>NS,RecipeVersionFindUniqueArgsSchema:()=>bht,RecipeVersionFindUniqueOrThrowArgsSchema:()=>hht,RecipeVersionGroupByArgsSchema:()=>mht,RecipeVersionIncludeSchema:()=>ad,RecipeVersionListRelationFilterSchema:()=>cS,RecipeVersionMaxOrderByAggregateInputSchema:()=>Aet,RecipeVersionMinOrderByAggregateInputSchema:()=>Tet,RecipeVersionNullableScalarRelationFilterSchema:()=>XM,RecipeVersionOrderByRelationAggregateInputSchema:()=>aB,RecipeVersionOrderByWithAggregationInputSchema:()=>xV,RecipeVersionOrderByWithRelationInputSchema:()=>$p,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>JN,RecipeVersionScalarFieldEnumSchema:()=>Og,RecipeVersionScalarWhereInputSchema:()=>gl,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>uA,RecipeVersionSchema:()=>Zzt,RecipeVersionSelectSchema:()=>id,RecipeVersionSumOrderByAggregateInputSchema:()=>Pet,RecipeVersionUncheckedCreateInputSchema:()=>DY,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>gi,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ii,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Eu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>Du,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>ow,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>lw,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>As,RecipeVersionUncheckedUpdateInputSchema:()=>EY,RecipeVersionUncheckedUpdateManyInputSchema:()=>LY,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>yyt,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>il,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>syt,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>al,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>kyt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>qn,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>hJ,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>mJ,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>rL,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>sL,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>GJ,RecipeVersionUpdateArgsSchema:()=>LPt,RecipeVersionUpdateInputSchema:()=>_Y,RecipeVersionUpdateManyAndReturnArgsSchema:()=>HPt,RecipeVersionUpdateManyArgsSchema:()=>VPt,RecipeVersionUpdateManyMutationInputSchema:()=>$T,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>bk,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>dk,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>ux,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Fi,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>qi,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>hn,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>EF,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>GF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>yut,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>but,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>mk,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>yk,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>cx,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>bJ,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>zJ,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>lL,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>uL,RecipeVersionUpdateWithoutRecipeInputSchema:()=>YJ,RecipeVersionUpsertArgsSchema:()=>FPt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>zk,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>sk,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>px,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>sut,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>mut,RecipeVersionWhereInputSchema:()=>ae,RecipeVersionWhereUniqueInputSchema:()=>w,RecipeWhereInputSchema:()=>v,RecipeWhereUniqueInputSchema:()=>C,RecipeYieldAggregateArgsSchema:()=>Lbt,RecipeYieldArgsSchema:()=>Omt,RecipeYieldAvgOrderByAggregateInputSchema:()=>Xtt,RecipeYieldCountOrderByAggregateInputSchema:()=>Ktt,RecipeYieldCreateArgsSchema:()=>nPt,RecipeYieldCreateInputSchema:()=>CY,RecipeYieldCreateManyAndReturnArgsSchema:()=>lPt,RecipeYieldCreateManyArgsSchema:()=>iPt,RecipeYieldCreateManyInputSchema:()=>ZP,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>Zf,RecipeYieldCreateManyRecipeInputSchema:()=>vQ,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>aI,RecipeYieldCreateWithoutRecipeInputSchema:()=>ks,RecipeYieldDeleteArgsSchema:()=>rPt,RecipeYieldDeleteManyArgsSchema:()=>sPt,RecipeYieldFindFirstArgsSchema:()=>_bt,RecipeYieldFindFirstOrThrowArgsSchema:()=>Ebt,RecipeYieldFindManyArgsSchema:()=>hX,RecipeYieldFindUniqueArgsSchema:()=>Hbt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Qbt,RecipeYieldGroupByArgsSchema:()=>Vbt,RecipeYieldIncludeSchema:()=>$y,RecipeYieldListRelationFilterSchema:()=>U2,RecipeYieldMaxOrderByAggregateInputSchema:()=>tet,RecipeYieldMinOrderByAggregateInputSchema:()=>eet,RecipeYieldOrderByRelationAggregateInputSchema:()=>Lat,RecipeYieldOrderByWithAggregationInputSchema:()=>UV,RecipeYieldOrderByWithRelationInputSchema:()=>db,RecipeYieldScalarFieldEnumSchema:()=>jg,RecipeYieldScalarWhereInputSchema:()=>_p,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>lA,RecipeYieldSchema:()=>kzt,RecipeYieldSelectSchema:()=>Jy,RecipeYieldSumOrderByAggregateInputSchema:()=>oet,RecipeYieldUncheckedCreateInputSchema:()=>AY,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>xs,RecipeYieldUncheckedUpdateInputSchema:()=>TY,RecipeYieldUncheckedUpdateManyInputSchema:()=>PY,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Zyt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>En,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>nK,RecipeYieldUpdateArgsSchema:()=>pPt,RecipeYieldUpdateInputSchema:()=>SY,RecipeYieldUpdateManyAndReturnArgsSchema:()=>uPt,RecipeYieldUpdateManyArgsSchema:()=>cPt,RecipeYieldUpdateManyMutationInputSchema:()=>pB,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>Sx,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>An,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ax,RecipeYieldUpdateWithoutRecipeInputSchema:()=>oK,RecipeYieldUpsertArgsSchema:()=>aPt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Cx,RecipeYieldWhereInputSchema:()=>ia,RecipeYieldWhereUniqueInputSchema:()=>Ie,RestaurantAggregateArgsSchema:()=>yCt,RestaurantArgsSchema:()=>no,RestaurantAvgOrderByAggregateInputSchema:()=>pat,RestaurantCountOrderByAggregateInputSchema:()=>rat,RestaurantCountOutputTypeArgsSchema:()=>U0,RestaurantCountOutputTypeSelectSchema:()=>ytt,RestaurantCreateArgsSchema:()=>nxt,RestaurantCreateInputSchema:()=>y9,RestaurantCreateManyAndReturnArgsSchema:()=>lxt,RestaurantCreateManyArgsSchema:()=>ixt,RestaurantCreateManyInputSchema:()=>pU,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>bO,RestaurantCreateManyOrganizationInputSchema:()=>qH,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>C5,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>x5,RestaurantCreateNestedOneWithoutCustomerFeedbacksInputSchema:()=>_q,RestaurantCreateNestedOneWithoutEquipmentsInputSchema:()=>pq,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>eZ,RestaurantCreateNestedOneWithoutLeftoverItemsInputSchema:()=>lF,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>BD,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>yD,RestaurantCreateNestedOneWithoutProductionPlansInputSchema:()=>IF,RestaurantCreateNestedOneWithoutQualityChecklistsInputSchema:()=>Pq,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>uo,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>H2,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Ba,RestaurantCreateNestedOneWithoutWasteRecordsInputSchema:()=>yF,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>F3,RestaurantCreateOrConnectWithoutCustomerFeedbacksInputSchema:()=>c3,RestaurantCreateOrConnectWithoutEquipmentsInputSchema:()=>$6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>Z3,RestaurantCreateOrConnectWithoutLeftoverItemsInputSchema:()=>y3,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>C8,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>s8,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>lh,RestaurantCreateOrConnectWithoutProductionPlansInputSchema:()=>I3,RestaurantCreateOrConnectWithoutQualityChecklistsInputSchema:()=>e3,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>D3,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>L6,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>N3,RestaurantCreateOrConnectWithoutWasteRecordsInputSchema:()=>m3,RestaurantCreateWithoutCookbooksInputSchema:()=>mf,RestaurantCreateWithoutCustomerFeedbacksInputSchema:()=>Sv,RestaurantCreateWithoutEquipmentsInputSchema:()=>LZ,RestaurantCreateWithoutInventoryInputSchema:()=>IO,RestaurantCreateWithoutLeftoverItemsInputSchema:()=>kv,RestaurantCreateWithoutMenusInputSchema:()=>nN,RestaurantCreateWithoutOrdersInputSchema:()=>Ow,RestaurantCreateWithoutOrganizationInputSchema:()=>Zc,RestaurantCreateWithoutProductionPlansInputSchema:()=>Fv,RestaurantCreateWithoutQualityChecklistsInputSchema:()=>ov,RestaurantCreateWithoutRecipesInputSchema:()=>hf,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>xZ,RestaurantCreateWithoutUsersInputSchema:()=>_O,RestaurantCreateWithoutWasteRecordsInputSchema:()=>Ov,RestaurantDeleteArgsSchema:()=>rxt,RestaurantDeleteManyArgsSchema:()=>sxt,RestaurantFindFirstArgsSchema:()=>uCt,RestaurantFindFirstOrThrowArgsSchema:()=>sCt,RestaurantFindManyArgsSchema:()=>xX,RestaurantFindUniqueArgsSchema:()=>zCt,RestaurantFindUniqueOrThrowArgsSchema:()=>mCt,RestaurantGroupByArgsSchema:()=>dCt,RestaurantIncludeSchema:()=>tz,RestaurantListRelationFilterSchema:()=>e2,RestaurantMaxOrderByAggregateInputSchema:()=>cat,RestaurantMinOrderByAggregateInputSchema:()=>uat,RestaurantNullableScalarRelationFilterSchema:()=>GM,RestaurantOrderByRelationAggregateInputSchema:()=>Vnt,RestaurantOrderByWithAggregationInputSchema:()=>eH,RestaurantOrderByWithRelationInputSchema:()=>wa,RestaurantScalarFieldEnumSchema:()=>lC,RestaurantScalarRelationFilterSchema:()=>Xn,RestaurantScalarWhereInputSchema:()=>Wp,RestaurantScalarWhereWithAggregatesInputSchema:()=>wA,RestaurantSchema:()=>amt,RestaurantSelectSchema:()=>ez,RestaurantSumOrderByAggregateInputSchema:()=>sat,RestaurantUncheckedCreateInputSchema:()=>d9,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>S5,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>bf,RestaurantUncheckedCreateWithoutCustomerFeedbacksInputSchema:()=>Tv,RestaurantUncheckedCreateWithoutEquipmentsInputSchema:()=>VZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>gO,RestaurantUncheckedCreateWithoutLeftoverItemsInputSchema:()=>xv,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>aN,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>fw,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>vc,RestaurantUncheckedCreateWithoutProductionPlansInputSchema:()=>Dv,RestaurantUncheckedCreateWithoutQualityChecklistsInputSchema:()=>nv,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>If,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>jZ,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>EO,RestaurantUncheckedCreateWithoutWasteRecordsInputSchema:()=>fv,RestaurantUncheckedUpdateInputSchema:()=>m9,RestaurantUncheckedUpdateManyInputSchema:()=>b9,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Ost,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>W5,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>JE,RestaurantUncheckedUpdateWithoutCustomerFeedbacksInputSchema:()=>Q_,RestaurantUncheckedUpdateWithoutEquipmentsInputSchema:()=>A_,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>qE,RestaurantUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>X_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>XL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>fL,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>r7,RestaurantUncheckedUpdateWithoutProductionPlansInputSchema:()=>sE,RestaurantUncheckedUpdateWithoutQualityChecklistsInputSchema:()=>M_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>XE,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>c_,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>VE,RestaurantUncheckedUpdateWithoutWasteRecordsInputSchema:()=>iE,RestaurantUpdateArgsSchema:()=>pxt,RestaurantUpdateInputSchema:()=>z9,RestaurantUpdateManyAndReturnArgsSchema:()=>uxt,RestaurantUpdateManyArgsSchema:()=>cxt,RestaurantUpdateManyMutationInputSchema:()=>CB,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>kW,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>P5,RestaurantUpdateOneRequiredWithoutCustomerFeedbacksNestedInputSchema:()=>Vq,RestaurantUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>dq,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>pZ,RestaurantUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>cF,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>ED,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>bD,RestaurantUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>SF,RestaurantUpdateOneRequiredWithoutQualityChecklistsNestedInputSchema:()=>xq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>nn,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>Y2,RestaurantUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>mF,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>Z5,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>Pi,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>out,RestaurantUpdateToOneWithWhereWithoutCustomerFeedbacksInputSchema:()=>Kpt,RestaurantUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>Wpt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Lct,RestaurantUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>act,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>ast,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Fut,RestaurantUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>bct,RestaurantUpdateToOneWithWhereWithoutQualityChecklistsInputSchema:()=>wpt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>aut,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>zpt,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>$ct,RestaurantUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>uct,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>RW,RestaurantUpdateWithoutCookbooksInputSchema:()=>$E,RestaurantUpdateWithoutCustomerFeedbacksInputSchema:()=>H_,RestaurantUpdateWithoutEquipmentsInputSchema:()=>C_,RestaurantUpdateWithoutInventoryInputSchema:()=>BE,RestaurantUpdateWithoutLeftoverItemsInputSchema:()=>K_,RestaurantUpdateWithoutMenusInputSchema:()=>KL,RestaurantUpdateWithoutOrdersInputSchema:()=>OL,RestaurantUpdateWithoutOrganizationInputSchema:()=>l7,RestaurantUpdateWithoutProductionPlansInputSchema:()=>uE,RestaurantUpdateWithoutQualityChecklistsInputSchema:()=>j_,RestaurantUpdateWithoutRecipesInputSchema:()=>KE,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>p_,RestaurantUpdateWithoutUsersInputSchema:()=>LE,RestaurantUpdateWithoutWasteRecordsInputSchema:()=>aE,RestaurantUpsertArgsSchema:()=>axt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>WW,RestaurantUpsertWithoutCookbooksInputSchema:()=>eut,RestaurantUpsertWithoutCustomerFeedbacksInputSchema:()=>Jpt,RestaurantUpsertWithoutEquipmentsInputSchema:()=>Upt,RestaurantUpsertWithoutInventoryInputSchema:()=>Ect,RestaurantUpsertWithoutLeftoverItemsInputSchema:()=>nct,RestaurantUpsertWithoutMenusInputSchema:()=>nst,RestaurantUpsertWithoutOrdersInputSchema:()=>qut,RestaurantUpsertWithoutProductionPlansInputSchema:()=>mct,RestaurantUpsertWithoutQualityChecklistsInputSchema:()=>fpt,RestaurantUpsertWithoutRecipesInputSchema:()=>nut,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>dpt,RestaurantUpsertWithoutUsersInputSchema:()=>Gct,RestaurantUpsertWithoutWasteRecordsInputSchema:()=>cct,RestaurantWhereInputSchema:()=>N,RestaurantWhereUniqueInputSchema:()=>K,SalesTransactionsAggregateArgsSchema:()=>oht,SalesTransactionsArgsSchema:()=>wmt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>uet,SalesTransactionsCountOrderByAggregateInputSchema:()=>cet,SalesTransactionsCreateArgsSchema:()=>APt,SalesTransactionsCreateInputSchema:()=>jY,SalesTransactionsCreateManyAndReturnArgsSchema:()=>PPt,SalesTransactionsCreateManyArgsSchema:()=>TPt,SalesTransactionsCreateManyInputSchema:()=>OP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>IN,SalesTransactionsCreateManyMenuItemInputSchema:()=>n0,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>MO,SalesTransactionsCreateManyRestaurantInputSchema:()=>GH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>pm,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>er,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>vI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>bh,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>Zy,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Kc,SalesTransactionsDeleteArgsSchema:()=>UPt,SalesTransactionsDeleteManyArgsSchema:()=>xPt,SalesTransactionsFindFirstArgsSchema:()=>tht,SalesTransactionsFindFirstOrThrowArgsSchema:()=>eht,SalesTransactionsFindManyArgsSchema:()=>xN,SalesTransactionsFindUniqueArgsSchema:()=>aht,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>iht,SalesTransactionsGroupByArgsSchema:()=>nht,SalesTransactionsIncludeSchema:()=>td,SalesTransactionsListRelationFilterSchema:()=>QM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>set,SalesTransactionsMinOrderByAggregateInputSchema:()=>yet,SalesTransactionsOrderByRelationAggregateInputSchema:()=>s2,SalesTransactionsOrderByWithAggregationInputSchema:()=>RV,SalesTransactionsOrderByWithRelationInputSchema:()=>mb,SalesTransactionsScalarFieldEnumSchema:()=>Zg,SalesTransactionsScalarWhereInputSchema:()=>vl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>pA,SalesTransactionsSchema:()=>jzt,SalesTransactionsSelectSchema:()=>ed,SalesTransactionsSumOrderByAggregateInputSchema:()=>det,SalesTransactionsUncheckedCreateInputSchema:()=>MY,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>bm,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>zr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>vy,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,SalesTransactionsUncheckedUpdateInputSchema:()=>vY,SalesTransactionsUncheckedUpdateManyInputSchema:()=>OY,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>rdt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Om,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Lst,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Dr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>rX,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>R7,SalesTransactionsUpdateArgsSchema:()=>WPt,SalesTransactionsUpdateInputSchema:()=>ZY,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>kPt,SalesTransactionsUpdateManyArgsSchema:()=>RPt,SalesTransactionsUpdateManyMutationInputSchema:()=>IM,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>eM,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>aR,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>Wm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>tM,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>nR,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>lX,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>W7,SalesTransactionsUpsertArgsSchema:()=>SPt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Xj,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>oR,SalesTransactionsWhereInputSchema:()=>ra,SalesTransactionsWhereUniqueInputSchema:()=>bt,SchedulingConstraintAggregateArgsSchema:()=>zgt,SchedulingConstraintArgsSchema:()=>Gmt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>mnt,SchedulingConstraintCountOrderByAggregateInputSchema:()=>znt,SchedulingConstraintCreateArgsSchema:()=>qRt,SchedulingConstraintCreateInputSchema:()=>S1,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>_Rt,SchedulingConstraintCreateManyArgsSchema:()=>DRt,SchedulingConstraintCreateManyInputSchema:()=>tU,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>tf,SchedulingConstraintCreateManyUserInputSchema:()=>yQ,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>Ga,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>vh,SchedulingConstraintCreateWithoutUserInputSchema:()=>Zu,SchedulingConstraintDeleteArgsSchema:()=>ERt,SchedulingConstraintDeleteManyArgsSchema:()=>QRt,SchedulingConstraintFindFirstArgsSchema:()=>ygt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>dgt,SchedulingConstraintFindManyArgsSchema:()=>RX,SchedulingConstraintFindUniqueArgsSchema:()=>bgt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>hgt,SchedulingConstraintGroupByArgsSchema:()=>mgt,SchedulingConstraintIncludeSchema:()=>Fd,SchedulingConstraintListRelationFilterSchema:()=>h2,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>bnt,SchedulingConstraintMinOrderByAggregateInputSchema:()=>hnt,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>bat,SchedulingConstraintOrderByWithAggregationInputSchema:()=>QV,SchedulingConstraintOrderByWithRelationInputSchema:()=>kb,SchedulingConstraintScalarFieldEnumSchema:()=>Kg,SchedulingConstraintScalarWhereInputSchema:()=>fp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>kA,SchedulingConstraintSchema:()=>$zt,SchedulingConstraintSelectSchema:()=>Dd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>Int,SchedulingConstraintUncheckedCreateInputSchema:()=>T1,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>zi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>vu,SchedulingConstraintUncheckedUpdateInputSchema:()=>U1,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>W1,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>ryt,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>tl,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>rJ,SchedulingConstraintUpdateArgsSchema:()=>LRt,SchedulingConstraintUpdateInputSchema:()=>P1,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>HRt,SchedulingConstraintUpdateManyArgsSchema:()=>VRt,SchedulingConstraintUpdateManyMutationInputSchema:()=>IB,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>ek,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>fi,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>tk,SchedulingConstraintUpdateWithoutUserInputSchema:()=>lJ,SchedulingConstraintUpsertArgsSchema:()=>FRt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>XR,SchedulingConstraintWhereInputSchema:()=>Ca,SchedulingConstraintWhereUniqueInputSchema:()=>Pe,SessionAggregateArgsSchema:()=>jCt,SessionArgsSchema:()=>tbt,SessionAvgOrderByAggregateInputSchema:()=>jat,SessionCountOrderByAggregateInputSchema:()=>xat,SessionCreateArgsSchema:()=>jxt,SessionCreateInputSchema:()=>R9,SessionCreateManyAndReturnArgsSchema:()=>vxt,SessionCreateManyArgsSchema:()=>Zxt,SessionCreateManyInputSchema:()=>sU,SessionCreateManyUserInputEnvelopeSchema:()=>QO,SessionCreateManyUserInputSchema:()=>iQ,SessionCreateNestedManyWithoutUserInputSchema:()=>_a,SessionCreateOrConnectWithoutUserInputSchema:()=>Wh,SessionCreateWithoutUserInputSchema:()=>Iu,SessionDeleteArgsSchema:()=>Oxt,SessionDeleteManyArgsSchema:()=>Bxt,SessionFindFirstArgsSchema:()=>kCt,SessionFindFirstOrThrowArgsSchema:()=>xCt,SessionFindManyArgsSchema:()=>MX,SessionFindUniqueArgsSchema:()=>ZCt,SessionFindUniqueOrThrowArgsSchema:()=>vCt,SessionGroupByArgsSchema:()=>MCt,SessionIncludeSchema:()=>lz,SessionListRelationFilterSchema:()=>z2,SessionMaxOrderByAggregateInputSchema:()=>Mat,SessionMinOrderByAggregateInputSchema:()=>Zat,SessionOrderByRelationAggregateInputSchema:()=>dat,SessionOrderByWithAggregationInputSchema:()=>aH,SessionOrderByWithRelationInputSchema:()=>Ob,SessionScalarFieldEnumSchema:()=>cC,SessionScalarWhereInputSchema:()=>Zp,SessionScalarWhereWithAggregatesInputSchema:()=>qA,SessionSchema:()=>rmt,SessionSelectSchema:()=>rz,SessionSumOrderByAggregateInputSchema:()=>vat,SessionUncheckedCreateInputSchema:()=>k9,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>ri,SessionUncheckedCreateWithoutUserInputSchema:()=>gu,SessionUncheckedUpdateInputSchema:()=>j9,SessionUncheckedUpdateManyInputSchema:()=>M9,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>tyt,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Qi,SessionUncheckedUpdateWithoutUserInputSchema:()=>Q7,SessionUpdateArgsSchema:()=>fxt,SessionUpdateInputSchema:()=>x9,SessionUpdateManyAndReturnArgsSchema:()=>Nxt,SessionUpdateManyArgsSchema:()=>wxt,SessionUpdateManyMutationInputSchema:()=>SB,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>OR,SessionUpdateManyWithoutUserNestedInputSchema:()=>ki,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>vR,SessionUpdateWithoutUserInputSchema:()=>H7,SessionUpsertArgsSchema:()=>Mxt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>ZR,SessionWhereInputSchema:()=>Ua,SessionWhereUniqueInputSchema:()=>Re,ShiftAggregateArgsSchema:()=>rSt,ShiftArgsSchema:()=>F0,ShiftAvgOrderByAggregateInputSchema:()=>clt,ShiftCountOrderByAggregateInputSchema:()=>plt,ShiftCountOutputTypeArgsSchema:()=>D0,ShiftCountOutputTypeSelectSchema:()=>Stt,ShiftCreateArgsSchema:()=>YMt,ShiftCreateInputSchema:()=>L$,ShiftCreateManyAndReturnArgsSchema:()=>JMt,ShiftCreateManyArgsSchema:()=>$Mt,ShiftCreateManyInputSchema:()=>UU,ShiftCreateManyUserInputEnvelopeSchema:()=>LO,ShiftCreateManyUserInputSchema:()=>oQ,ShiftCreateNestedManyWithoutUserInputSchema:()=>qa,ShiftCreateNestedOneWithoutTasksInputSchema:()=>Rrt,ShiftCreateOrConnectWithoutTasksInputSchema:()=>T3,ShiftCreateOrConnectWithoutUserInputSchema:()=>Th,ShiftCreateWithoutTasksInputSchema:()=>Jv,ShiftCreateWithoutUserInputSchema:()=>yu,ShiftDeleteArgsSchema:()=>KMt,ShiftDeleteManyArgsSchema:()=>oZt,ShiftFindFirstArgsSchema:()=>iSt,ShiftFindFirstOrThrowArgsSchema:()=>lSt,ShiftFindManyArgsSchema:()=>OX,ShiftFindUniqueArgsSchema:()=>cSt,ShiftFindUniqueOrThrowArgsSchema:()=>uSt,ShiftGroupByArgsSchema:()=>pSt,ShiftIncludeSchema:()=>Oz,ShiftListRelationFilterSchema:()=>d2,ShiftMaxOrderByAggregateInputSchema:()=>ult,ShiftMinOrderByAggregateInputSchema:()=>slt,ShiftOrderByRelationAggregateInputSchema:()=>yat,ShiftOrderByWithAggregationInputSchema:()=>IH,ShiftOrderByWithRelationInputSchema:()=>Km,ShiftScalarFieldEnumSchema:()=>TC,ShiftScalarRelationFilterSchema:()=>J4,ShiftScalarWhereInputSchema:()=>Mp,ShiftScalarWhereWithAggregatesInputSchema:()=>XA,ShiftSchema:()=>Amt,ShiftSelectSchema:()=>fz,ShiftStatusSchema:()=>Vt,ShiftSumOrderByAggregateInputSchema:()=>ylt,ShiftTaskAggregateArgsSchema:()=>ogt,ShiftTaskArgsSchema:()=>Qmt,ShiftTaskAvgOrderByAggregateInputSchema:()=>nnt,ShiftTaskCountOrderByAggregateInputSchema:()=>ont,ShiftTaskCreateArgsSchema:()=>ARt,ShiftTaskCreateInputSchema:()=>y1,ShiftTaskCreateManyAndReturnArgsSchema:()=>PRt,ShiftTaskCreateManyArgsSchema:()=>TRt,ShiftTaskCreateManyInputSchema:()=>KP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>Qw,ShiftTaskCreateManyShiftInputSchema:()=>JQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>E5,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>UI,ShiftTaskCreateWithoutShiftInputSchema:()=>by,ShiftTaskDeleteArgsSchema:()=>URt,ShiftTaskDeleteManyArgsSchema:()=>xRt,ShiftTaskFindFirstArgsSchema:()=>tgt,ShiftTaskFindFirstOrThrowArgsSchema:()=>egt,ShiftTaskFindManyArgsSchema:()=>UX,ShiftTaskFindUniqueArgsSchema:()=>agt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>igt,ShiftTaskGroupByArgsSchema:()=>ngt,ShiftTaskIncludeSchema:()=>wd,ShiftTaskListRelationFilterSchema:()=>q2,ShiftTaskMaxOrderByAggregateInputSchema:()=>ant,ShiftTaskMinOrderByAggregateInputSchema:()=>int,ShiftTaskOrderByRelationAggregateInputSchema:()=>rlt,ShiftTaskOrderByWithAggregationInputSchema:()=>VV,ShiftTaskOrderByWithRelationInputSchema:()=>Wb,ShiftTaskScalarFieldEnumSchema:()=>$g,ShiftTaskScalarWhereInputSchema:()=>Qp,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>WA,ShiftTaskSchema:()=>Yzt,ShiftTaskSelectSchema:()=>Nd,ShiftTaskSumOrderByAggregateInputSchema:()=>lnt,ShiftTaskUncheckedCreateInputSchema:()=>d1,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>L5,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>hy,ShiftTaskUncheckedUpdateInputSchema:()=>m1,ShiftTaskUncheckedUpdateManyInputSchema:()=>b1,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>Xyt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>Q5,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>VK,ShiftTaskUpdateArgsSchema:()=>WRt,ShiftTaskUpdateInputSchema:()=>z1,ShiftTaskUpdateManyAndReturnArgsSchema:()=>kRt,ShiftTaskUpdateManyArgsSchema:()=>RRt,ShiftTaskUpdateManyMutationInputSchema:()=>bB,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>Mj,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>H5,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>jj,ShiftTaskUpdateWithoutShiftInputSchema:()=>LK,ShiftTaskUpsertArgsSchema:()=>SRt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>xj,ShiftTaskWhereInputSchema:()=>Ia,ShiftTaskWhereUniqueInputSchema:()=>Se,ShiftUncheckedCreateInputSchema:()=>V$,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>ai,ShiftUncheckedCreateWithoutTasksInputSchema:()=>Kv,ShiftUncheckedCreateWithoutUserInputSchema:()=>du,ShiftUncheckedUpdateInputSchema:()=>Q$,ShiftUncheckedUpdateManyInputSchema:()=>Y$,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>Jst,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Li,ShiftUncheckedUpdateWithoutTasksInputSchema:()=>AE,ShiftUncheckedUpdateWithoutUserInputSchema:()=>D7,ShiftUpdateArgsSchema:()=>XMt,ShiftUpdateInputSchema:()=>H$,ShiftUpdateManyAndReturnArgsSchema:()=>eZt,ShiftUpdateManyArgsSchema:()=>tZt,ShiftUpdateManyMutationInputSchema:()=>UB,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>UR,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Ui,ShiftUpdateOneRequiredWithoutTasksNestedInputSchema:()=>krt,ShiftUpdateToOneWithWhereWithoutTasksInputSchema:()=>Wct,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>PR,ShiftUpdateWithoutTasksInputSchema:()=>CE,ShiftUpdateWithoutUserInputSchema:()=>F7,ShiftUpsertArgsSchema:()=>GMt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>TR,ShiftUpsertWithoutTasksInputSchema:()=>Uct,ShiftWhereInputSchema:()=>Xe,ShiftWhereUniqueInputSchema:()=>oe,SkillLevelSchema:()=>W,SortOrderInputSchema:()=>g,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>PAt,StockCountArgsSchema:()=>O0,StockCountAvgOrderByAggregateInputSchema:()=>jit,StockCountCountOrderByAggregateInputSchema:()=>xit,StockCountCountOutputTypeArgsSchema:()=>f0,StockCountCountOutputTypeSelectSchema:()=>gtt,StockCountCreateArgsSchema:()=>Yjt,StockCountCreateInputSchema:()=>d$,StockCountCreateManyAndReturnArgsSchema:()=>Jjt,StockCountCreateManyArgsSchema:()=>$jt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>pf,StockCountCreateManyCreatedByInputSchema:()=>gQ,StockCountCreateManyInputSchema:()=>gU,StockCountCreateManyInventoryInputEnvelopeSchema:()=>SO,StockCountCreateManyInventoryInputSchema:()=>EH,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>oi,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>aZ,StockCountCreateNestedOneWithoutItemsInputSchema:()=>O5,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Fh,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>uh,StockCountCreateOrConnectWithoutItemsInputSchema:()=>p8,StockCountCreateWithoutCreatedByInputSchema:()=>Hu,StockCountCreateWithoutInventoryInputSchema:()=>Fc,StockCountCreateWithoutItemsInputSchema:()=>kw,StockCountDeleteArgsSchema:()=>Kjt,StockCountDeleteManyArgsSchema:()=>oMt,StockCountFindFirstArgsSchema:()=>SAt,StockCountFindFirstOrThrowArgsSchema:()=>TAt,StockCountFindManyArgsSchema:()=>BN,StockCountFindUniqueArgsSchema:()=>WAt,StockCountFindUniqueOrThrowArgsSchema:()=>RAt,StockCountGroupByArgsSchema:()=>UAt,StockCountIncludeSchema:()=>Sz,StockCountItemAggregateArgsSchema:()=>jAt,StockCountItemArgsSchema:()=>nbt,StockCountItemAvgOrderByAggregateInputSchema:()=>wit,StockCountItemCountOrderByAggregateInputSchema:()=>fit,StockCountItemCreateArgsSchema:()=>nMt,StockCountItemCreateInputSchema:()=>I$,StockCountItemCreateManyAndReturnArgsSchema:()=>lMt,StockCountItemCreateManyArgsSchema:()=>iMt,StockCountItemCreateManyInputSchema:()=>CU,StockCountItemCreateManyItemInputEnvelopeSchema:()=>bw,StockCountItemCreateManyItemInputSchema:()=>HQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>Rw,StockCountItemCreateManyStockCountInputSchema:()=>QQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>lT,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>lD,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>gI,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>CI,StockCountItemCreateWithoutItemInputSchema:()=>ay,StockCountItemCreateWithoutStockCountInputSchema:()=>ly,StockCountItemDeleteArgsSchema:()=>rMt,StockCountItemDeleteManyArgsSchema:()=>sMt,StockCountItemFindFirstArgsSchema:()=>kAt,StockCountItemFindFirstOrThrowArgsSchema:()=>xAt,StockCountItemFindManyArgsSchema:()=>qN,StockCountItemFindUniqueArgsSchema:()=>ZAt,StockCountItemFindUniqueOrThrowArgsSchema:()=>vAt,StockCountItemGroupByArgsSchema:()=>MAt,StockCountItemIncludeSchema:()=>Pz,StockCountItemListRelationFilterSchema:()=>tZ,StockCountItemMaxOrderByAggregateInputSchema:()=>Nit,StockCountItemMinOrderByAggregateInputSchema:()=>Bit,StockCountItemOrderByRelationAggregateInputSchema:()=>w2,StockCountItemOrderByWithAggregationInputSchema:()=>dH,StockCountItemOrderByWithRelationInputSchema:()=>Nb,StockCountItemScalarFieldEnumSchema:()=>IC,StockCountItemScalarWhereInputSchema:()=>Bl,StockCountItemScalarWhereWithAggregatesInputSchema:()=>YA,StockCountItemSchema:()=>bmt,StockCountItemSelectSchema:()=>Uz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>oB,StockCountItemSumOrderByAggregateInputSchema:()=>qit,StockCountItemUncheckedCreateInputSchema:()=>g$,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>cT,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>rD,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>iy,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>ry,StockCountItemUncheckedUpdateInputSchema:()=>A$,StockCountItemUncheckedUpdateManyInputSchema:()=>S$,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>Qyt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>IT,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>Yyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>sD,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>vK,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>fK,StockCountItemUpdateArgsSchema:()=>pMt,StockCountItemUpdateInputSchema:()=>C$,StockCountItemUpdateManyAndReturnArgsSchema:()=>uMt,StockCountItemUpdateManyArgsSchema:()=>cMt,StockCountItemUpdateManyMutationInputSchema:()=>kM,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>dj,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>bj,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>mT,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>uD,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>yj,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>mj,StockCountItemUpdateWithoutItemInputSchema:()=>ZK,StockCountItemUpdateWithoutStockCountInputSchema:()=>OK,StockCountItemUpsertArgsSchema:()=>aMt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>sj,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>zj,StockCountItemWhereInputSchema:()=>ka,StockCountItemWhereUniqueInputSchema:()=>Ct,StockCountListRelationFilterSchema:()=>LM,StockCountMaxOrderByAggregateInputSchema:()=>Mit,StockCountMinOrderByAggregateInputSchema:()=>Zit,StockCountOrderByRelationAggregateInputSchema:()=>a2,StockCountOrderByWithAggregationInputSchema:()=>yH,StockCountOrderByWithRelationInputSchema:()=>Gm,StockCountScalarFieldEnumSchema:()=>hC,StockCountScalarRelationFilterSchema:()=>N2,StockCountScalarWhereInputSchema:()=>Ml,StockCountScalarWhereWithAggregatesInputSchema:()=>QA,StockCountSchema:()=>mmt,StockCountSelectSchema:()=>Tz,StockCountSumOrderByAggregateInputSchema:()=>vit,StockCountUncheckedCreateInputSchema:()=>z$,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ai,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>rZ,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>Qu,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>Dc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>xw,StockCountUncheckedUpdateInputSchema:()=>b$,StockCountUncheckedUpdateManyInputSchema:()=>h$,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>zyt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>rl,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Bst,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>zZ,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>AJ,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>m7,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>xL,StockCountUpdateArgsSchema:()=>Xjt,StockCountUpdateInputSchema:()=>m$,StockCountUpdateManyAndReturnArgsSchema:()=>eMt,StockCountUpdateManyArgsSchema:()=>tMt,StockCountUpdateManyMutationInputSchema:()=>RM,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>Sk,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>FW,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>_i,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>sZ,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>w5,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Out,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>Ak,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>qW,StockCountUpdateWithoutCreatedByInputSchema:()=>CJ,StockCountUpdateWithoutInventoryInputSchema:()=>z7,StockCountUpdateWithoutItemsInputSchema:()=>kL,StockCountUpsertArgsSchema:()=>Gjt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>Ck,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>BW,StockCountUpsertWithoutItemsInputSchema:()=>vut,StockCountWhereInputSchema:()=>Je,StockCountWhereUniqueInputSchema:()=>ct,StringFieldUpdateOperationsInputSchema:()=>a,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>Tl,StringNullableWithAggregatesFilterSchema:()=>Rt,StringWithAggregatesFilterSchema:()=>zt,SupplierPriceHistoryAggregateArgsSchema:()=>pIt,SupplierPriceHistoryArgsSchema:()=>Fmt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>zot,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>dot,SupplierPriceHistoryCreateArgsSchema:()=>nWt,SupplierPriceHistoryCreateInputSchema:()=>WG,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>lWt,SupplierPriceHistoryCreateManyArgsSchema:()=>iWt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>$f,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>_Q,SupplierPriceHistoryCreateManyInputSchema:()=>LP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>Lw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>$Q,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>GI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>SD,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>zI,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>PI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>Ys,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>zy,SupplierPriceHistoryDeleteArgsSchema:()=>rWt,SupplierPriceHistoryDeleteManyArgsSchema:()=>sWt,SupplierPriceHistoryFindFirstArgsSchema:()=>lIt,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>rIt,SupplierPriceHistoryFindManyArgsSchema:()=>ZN,SupplierPriceHistoryFindUniqueArgsSchema:()=>uIt,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>sIt,SupplierPriceHistoryGroupByArgsSchema:()=>cIt,SupplierPriceHistoryIncludeSchema:()=>Cd,SupplierPriceHistoryListRelationFilterSchema:()=>KM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>mot,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>bot,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>f2,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>NV,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>gb,SupplierPriceHistoryScalarFieldEnumSchema:()=>_g,SupplierPriceHistoryScalarWhereInputSchema:()=>Nl,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>IA,SupplierPriceHistorySchema:()=>Fzt,SupplierPriceHistorySelectSchema:()=>Ad,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>hot,SupplierPriceHistoryUncheckedCreateInputSchema:()=>RG,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>ng,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>UD,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>Gs,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>my,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>xG,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>jG,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>_yt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>gg,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>Kyt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>MD,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>TK,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>EK,SupplierPriceHistoryUpdateArgsSchema:()=>pWt,SupplierPriceHistoryUpdateInputSchema:()=>kG,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>uWt,SupplierPriceHistoryUpdateManyArgsSchema:()=>cWt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>AM,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>Kx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>kj,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>sg,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>kD,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Jx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Rj,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>SK,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>_K,SupplierPriceHistoryUpsertArgsSchema:()=>aWt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>$x,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>Wj,SupplierPriceHistoryWhereInputSchema:()=>sa,SupplierPriceHistoryWhereUniqueInputSchema:()=>It,TaskTypeSchema:()=>pe,TransactionIsolationLevelSchema:()=>Szt,TransactionTypeSchema:()=>vt,UserAggregateArgsSchema:()=>ICt,UserArgsSchema:()=>Jt,UserAvgOrderByAggregateInputSchema:()=>gat,UserCountOrderByAggregateInputSchema:()=>Iat,UserCountOutputTypeArgsSchema:()=>W0,UserCountOutputTypeSelectSchema:()=>dtt,UserCreateArgsSchema:()=>yxt,UserCreateInputSchema:()=>h9,UserCreateManyAndReturnArgsSchema:()=>mxt,UserCreateManyArgsSchema:()=>zxt,UserCreateManyInputSchema:()=>cU,UserCreateManyOrganizationInputEnvelopeSchema:()=>hO,UserCreateManyOrganizationInputSchema:()=>FH,UserCreateManyRestaurantInputEnvelopeSchema:()=>UO,UserCreateManyRestaurantInputSchema:()=>LH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>A5,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,UserCreateNestedOneWithoutAuthInputSchema:()=>qrt,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>xrt,UserCreateNestedOneWithoutChecklistCompletesInputSchema:()=>fq,UserCreateNestedOneWithoutCustomerFeedbackResponsesInputSchema:()=>Lq,UserCreateNestedOneWithoutInventoryTransactionsInputSchema:()=>tD,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>nT,UserCreateNestedOneWithoutInventoryWithdrawalsInputSchema:()=>OF,UserCreateNestedOneWithoutLeftoverItemsInputSchema:()=>pF,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>Vrt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>OD,UserCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>kF,UserCreateNestedOneWithoutProductionPlansInputSchema:()=>gF,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>yP,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>sP,UserCreateNestedOneWithoutSchedulingConstraintsInputSchema:()=>Mrt,UserCreateNestedOneWithoutSessionsInputSchema:()=>Drt,UserCreateNestedOneWithoutShiftsInputSchema:()=>_5,UserCreateNestedOneWithoutStockCountsInputSchema:()=>iD,UserCreateNestedOneWithoutWasteRecordsInputSchema:()=>zF,UserCreateOrConnectWithoutAuthInputSchema:()=>B3,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>P3,UserCreateOrConnectWithoutChecklistCompletesInputSchema:()=>a3,UserCreateOrConnectWithoutCustomerFeedbackResponsesInputSchema:()=>s3,UserCreateOrConnectWithoutInventoryTransactionsInputSchema:()=>i8,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>o8,UserCreateOrConnectWithoutInventoryWithdrawalsInputSchema:()=>k3,UserCreateOrConnectWithoutLeftoverItemsInputSchema:()=>z3,UserCreateOrConnectWithoutOrganizationInputSchema:()=>rh,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>g8,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>I8,UserCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>S3,UserCreateOrConnectWithoutProductionPlansInputSchema:()=>g3,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>G6,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>Y6,UserCreateOrConnectWithoutRestaurantInputSchema:()=>sh,UserCreateOrConnectWithoutSchedulingConstraintsInputSchema:()=>U3,UserCreateOrConnectWithoutSessionsInputSchema:()=>q3,UserCreateOrConnectWithoutShiftsInputSchema:()=>m8,UserCreateOrConnectWithoutStockCountsInputSchema:()=>r8,UserCreateOrConnectWithoutWasteRecordsInputSchema:()=>h3,UserCreateWithoutAuthInputSchema:()=>uf,UserCreateWithoutAvailabilityInputSchema:()=>Xv,UserCreateWithoutChecklistCompletesInputSchema:()=>sv,UserCreateWithoutCustomerFeedbackResponsesInputSchema:()=>Wv,UserCreateWithoutInventoryTransactionsInputSchema:()=>Aw,UserCreateWithoutInventoryUpdatesInputSchema:()=>yw,UserCreateWithoutInventoryWithdrawalsInputSchema:()=>rO,UserCreateWithoutLeftoverItemsInputSchema:()=>Zv,UserCreateWithoutOrganizationInputSchema:()=>Oc,UserCreateWithoutPasswordResetsInputSchema:()=>eN,UserCreateWithoutPrepItemsInputSchema:()=>Xw,UserCreateWithoutProductionPlanItemsInputSchema:()=>Gv,UserCreateWithoutProductionPlansInputSchema:()=>_v,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>_Z,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>FZ,UserCreateWithoutRestaurantInputSchema:()=>_c,UserCreateWithoutSchedulingConstraintsInputSchema:()=>eO,UserCreateWithoutSessionsInputSchema:()=>yf,UserCreateWithoutShiftsInputSchema:()=>Vw,UserCreateWithoutStockCountsInputSchema:()=>Uw,UserCreateWithoutWasteRecordsInputSchema:()=>Bv,UserDeleteArgsSchema:()=>bxt,UserDeleteManyArgsSchema:()=>Cxt,UserFindFirstArgsSchema:()=>bCt,UserFindFirstOrThrowArgsSchema:()=>hCt,UserFindManyArgsSchema:()=>fN,UserFindUniqueArgsSchema:()=>CCt,UserFindUniqueOrThrowArgsSchema:()=>ACt,UserGroupByArgsSchema:()=>gCt,UserIncludeSchema:()=>oz,UserListRelationFilterSchema:()=>EM,UserMaxOrderByAggregateInputSchema:()=>Cat,UserMinOrderByAggregateInputSchema:()=>Aat,UserNullableScalarRelationFilterSchema:()=>DI,UserOrderByRelationAggregateInputSchema:()=>o2,UserOrderByWithAggregationInputSchema:()=>oH,UserOrderByWithRelationInputSchema:()=>eo,UserRoleSchema:()=>se,UserScalarFieldEnumSchema:()=>rC,UserScalarRelationFilterSchema:()=>we,UserScalarWhereInputSchema:()=>jl,UserScalarWhereWithAggregatesInputSchema:()=>NA,UserSchema:()=>imt,UserSelectSchema:()=>nz,UserSumOrderByAggregateInputSchema:()=>Sat,UserUncheckedCreateInputSchema:()=>I9,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>T5,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,UserUncheckedCreateWithoutAuthInputSchema:()=>sf,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>tO,UserUncheckedCreateWithoutChecklistCompletesInputSchema:()=>yv,UserUncheckedCreateWithoutCustomerFeedbackResponsesInputSchema:()=>Rv,UserUncheckedCreateWithoutInventoryTransactionsInputSchema:()=>Sw,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>dw,UserUncheckedCreateWithoutInventoryWithdrawalsInputSchema:()=>pO,UserUncheckedCreateWithoutLeftoverItemsInputSchema:()=>vv,UserUncheckedCreateWithoutOrganizationInputSchema:()=>fc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>oN,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>tN,UserUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>$v,UserUncheckedCreateWithoutProductionPlansInputSchema:()=>Ev,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>EZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>DZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Ec,UserUncheckedCreateWithoutSchedulingConstraintsInputSchema:()=>oO,UserUncheckedCreateWithoutSessionsInputSchema:()=>df,UserUncheckedCreateWithoutShiftsInputSchema:()=>Hw,UserUncheckedCreateWithoutStockCountsInputSchema:()=>Ww,UserUncheckedCreateWithoutWasteRecordsInputSchema:()=>qv,UserUncheckedUpdateInputSchema:()=>C9,UserUncheckedUpdateManyInputSchema:()=>A9,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>fst,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>R5,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>qst,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,UserUncheckedUpdateWithoutAuthInputSchema:()=>QE,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>TE,UserUncheckedUpdateWithoutChecklistCompletesInputSchema:()=>N_,UserUncheckedUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>J_,UserUncheckedUpdateWithoutInventoryTransactionsInputSchema:()=>TL,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>hL,UserUncheckedUpdateWithoutInventoryWithdrawalsInputSchema:()=>ME,UserUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>nE,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>c7,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>JL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>GL,UserUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>gE,UserUncheckedUpdateWithoutProductionPlansInputSchema:()=>dE,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>g_,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>h_,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>h7,UserUncheckedUpdateWithoutSchedulingConstraintsInputSchema:()=>UE,UserUncheckedUpdateWithoutSessionsInputSchema:()=>GE,UserUncheckedUpdateWithoutShiftsInputSchema:()=>EL,UserUncheckedUpdateWithoutStockCountsInputSchema:()=>RL,UserUncheckedUpdateWithoutWasteRecordsInputSchema:()=>cE,UserUpdateArgsSchema:()=>hxt,UserUpdateInputSchema:()=>g9,UserUpdateManyAndReturnArgsSchema:()=>gxt,UserUpdateManyArgsSchema:()=>Ixt,UserUpdateManyMutationInputSchema:()=>PM,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>MW,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>EW,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>U5,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,UserUpdateOneRequiredWithoutAuthNestedInputSchema:()=>Frt,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>jrt,UserUpdateOneRequiredWithoutChecklistCompletesNestedInputSchema:()=>qq,UserUpdateOneRequiredWithoutInventoryTransactionsNestedInputSchema:()=>nD,UserUpdateOneRequiredWithoutInventoryWithdrawalsNestedInputSchema:()=>NF,UserUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>sF,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>Hrt,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>ND,UserUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>TF,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>IP,UserUpdateOneRequiredWithoutSchedulingConstraintsNestedInputSchema:()=>Zrt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>_rt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>V5,UserUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>cD,UserUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>hF,UserUpdateOneWithoutCustomerFeedbackResponsesNestedInputSchema:()=>Qq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>yT,UserUpdateOneWithoutProductionPlanItemsNestedInputSchema:()=>MF,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>gP,UserUpdateToOneWithWhereWithoutAuthInputSchema:()=>Kct,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>kct,UserUpdateToOneWithWhereWithoutChecklistCompletesInputSchema:()=>_pt,UserUpdateToOneWithWhereWithoutCustomerFeedbackResponsesInputSchema:()=>oct,UserUpdateToOneWithWhereWithoutInventoryTransactionsInputSchema:()=>kut,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>Sut,UserUpdateToOneWithWhereWithoutInventoryWithdrawalsInputSchema:()=>wct,UserUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>pct,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>ost,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>tst,UserUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>Pct,UserUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>Ict,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>Ppt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>Spt,UserUpdateToOneWithWhereWithoutSchedulingConstraintsInputSchema:()=>jct,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>tut,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>Yut,UserUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Zut,UserUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>zct,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>jW,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>_W,UserUpdateWithoutAuthInputSchema:()=>HE,UserUpdateWithoutAvailabilityInputSchema:()=>SE,UserUpdateWithoutChecklistCompletesInputSchema:()=>w_,UserUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>$_,UserUpdateWithoutInventoryTransactionsInputSchema:()=>SL,UserUpdateWithoutInventoryUpdatesInputSchema:()=>bL,UserUpdateWithoutInventoryWithdrawalsInputSchema:()=>jE,UserUpdateWithoutLeftoverItemsInputSchema:()=>oE,UserUpdateWithoutOrganizationInputSchema:()=>p7,UserUpdateWithoutPasswordResetsInputSchema:()=>$L,UserUpdateWithoutPrepItemsInputSchema:()=>YL,UserUpdateWithoutProductionPlanItemsInputSchema:()=>IE,UserUpdateWithoutProductionPlansInputSchema:()=>yE,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>I_,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>b_,UserUpdateWithoutRestaurantInputSchema:()=>b7,UserUpdateWithoutSchedulingConstraintsInputSchema:()=>PE,UserUpdateWithoutSessionsInputSchema:()=>YE,UserUpdateWithoutShiftsInputSchema:()=>_L,UserUpdateWithoutStockCountsInputSchema:()=>WL,UserUpdateWithoutWasteRecordsInputSchema:()=>pE,UserUpsertArgsSchema:()=>dxt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>xW,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>DW,UserUpsertWithoutAuthInputSchema:()=>Jct,UserUpsertWithoutAvailabilityInputSchema:()=>Rct,UserUpsertWithoutChecklistCompletesInputSchema:()=>Dpt,UserUpsertWithoutCustomerFeedbackResponsesInputSchema:()=>ect,UserUpsertWithoutInventoryTransactionsInputSchema:()=>Rut,UserUpsertWithoutInventoryUpdatesInputSchema:()=>Aut,UserUpsertWithoutInventoryWithdrawalsInputSchema:()=>fct,UserUpsertWithoutLeftoverItemsInputSchema:()=>rct,UserUpsertWithoutPasswordResetsInputSchema:()=>est,UserUpsertWithoutPrepItemsInputSchema:()=>Xut,UserUpsertWithoutProductionPlanItemsInputSchema:()=>Tct,UserUpsertWithoutProductionPlansInputSchema:()=>hct,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>Tpt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>Apt,UserUpsertWithoutSchedulingConstraintsInputSchema:()=>xct,UserUpsertWithoutSessionsInputSchema:()=>Xct,UserUpsertWithoutShiftsInputSchema:()=>Qut,UserUpsertWithoutStockCountsInputSchema:()=>Mut,UserUpsertWithoutWasteRecordsInputSchema:()=>dct,UserWhereInputSchema:()=>M,UserWhereUniqueInputSchema:()=>j,VendorAggregateArgsSchema:()=>eSt,VendorArgsSchema:()=>bM,VendorAvgOrderByAggregateInputSchema:()=>nlt,VendorCountOrderByAggregateInputSchema:()=>olt,VendorCountOutputTypeArgsSchema:()=>q0,VendorCountOutputTypeSelectSchema:()=>Att,VendorCreateArgsSchema:()=>qMt,VendorCreateInputSchema:()=>q$,VendorCreateManyAndReturnArgsSchema:()=>_Mt,VendorCreateManyArgsSchema:()=>DMt,VendorCreateManyInputSchema:()=>PU,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>HI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>dD,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>y5,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>sI,VendorCreateOrConnectWithoutOrdersInputSchema:()=>y8,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>r3,VendorCreateWithoutIngredientsInputSchema:()=>_s,VendorCreateWithoutOrdersInputSchema:()=>ww,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>Iv,VendorDeleteArgsSchema:()=>EMt,VendorDeleteManyArgsSchema:()=>QMt,VendorFindFirstArgsSchema:()=>XAt,VendorFindFirstOrThrowArgsSchema:()=>tSt,VendorFindManyArgsSchema:()=>vX,VendorFindUniqueArgsSchema:()=>nSt,VendorFindUniqueOrThrowArgsSchema:()=>aSt,VendorGroupByArgsSchema:()=>oSt,VendorIncludeSchema:()=>Zz,VendorListRelationFilterSchema:()=>v2,VendorMaxOrderByAggregateInputSchema:()=>alt,VendorMinOrderByAggregateInputSchema:()=>ilt,VendorOrderByRelationAggregateInputSchema:()=>eit,VendorOrderByWithAggregationInputSchema:()=>hH,VendorOrderByWithRelationInputSchema:()=>tc,VendorScalarFieldEnumSchema:()=>SC,VendorScalarRelationFilterSchema:()=>qM,VendorScalarWhereInputSchema:()=>Hp,VendorScalarWhereWithAggregatesInputSchema:()=>KA,VendorSchema:()=>Cmt,VendorSelectSchema:()=>vz,VendorSumOrderByAggregateInputSchema:()=>llt,VendorUncheckedCreateInputSchema:()=>F$,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>tg,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>Es,VendorUncheckedCreateWithoutOrdersInputSchema:()=>Nw,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>gv,VendorUncheckedUpdateInputSchema:()=>_$,VendorUncheckedUpdateManyInputSchema:()=>E$,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>qyt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>bg,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>hK,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>NL,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>E_,VendorUpdateArgsSchema:()=>LMt,VendorUpdateInputSchema:()=>D$,VendorUpdateManyAndReturnArgsSchema:()=>HMt,VendorUpdateManyArgsSchema:()=>VMt,VendorUpdateManyMutationInputSchema:()=>PB,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>Ex,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>pg,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>hD,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>z5,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>_ut,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>Ypt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>_x,VendorUpdateWithoutIngredientsInputSchema:()=>bK,VendorUpdateWithoutOrdersInputSchema:()=>wL,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>__,VendorUpsertArgsSchema:()=>FMt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>Dx,VendorUpsertWithoutOrdersInputSchema:()=>Dut,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>Qpt,VendorWhereInputSchema:()=>Oe,VendorWhereUniqueInputSchema:()=>Yt,WasteRecordAggregateArgsSchema:()=>BIt,WasteRecordArgsSchema:()=>Vmt,WasteRecordAvgOrderByAggregateInputSchema:()=>Dot,WasteRecordCountOrderByAggregateInputSchema:()=>Fot,WasteRecordCreateArgsSchema:()=>YWt,WasteRecordCreateInputSchema:()=>JG,WasteRecordCreateManyAndReturnArgsSchema:()=>JWt,WasteRecordCreateManyArgsSchema:()=>$Wt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>Yf,WasteRecordCreateManyIngredienteInputSchema:()=>FQ,WasteRecordCreateManyInputSchema:()=>GP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>$O,WasteRecordCreateManyRecordedByInputSchema:()=>pQ,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>vO,WasteRecordCreateManyRestaurantInputSchema:()=>JH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>QI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>Va,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>nr,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>yI,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>xh,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>Ih,WasteRecordCreateWithoutIngredienteInputSchema:()=>Ls,WasteRecordCreateWithoutRecordedByInputSchema:()=>Pu,WasteRecordCreateWithoutRestaurantInputSchema:()=>ou,WasteRecordDeleteArgsSchema:()=>KWt,WasteRecordDeleteManyArgsSchema:()=>oRt,WasteRecordFindFirstArgsSchema:()=>wIt,WasteRecordFindFirstOrThrowArgsSchema:()=>NIt,WasteRecordFindManyArgsSchema:()=>vT,WasteRecordFindUniqueArgsSchema:()=>FIt,WasteRecordFindUniqueOrThrowArgsSchema:()=>DIt,WasteRecordGroupByArgsSchema:()=>qIt,WasteRecordIncludeSchema:()=>jd,WasteRecordListRelationFilterSchema:()=>YS,WasteRecordMaxOrderByAggregateInputSchema:()=>_ot,WasteRecordMinOrderByAggregateInputSchema:()=>Eot,WasteRecordOrderByRelationAggregateInputSchema:()=>GB,WasteRecordOrderByWithAggregationInputSchema:()=>_V,WasteRecordOrderByWithRelationInputSchema:()=>Pb,WasteRecordScalarFieldEnumSchema:()=>Qg,WasteRecordScalarWhereInputSchema:()=>ml,WasteRecordScalarWhereWithAggregatesInputSchema:()=>TA,WasteRecordSchema:()=>Vzt,WasteRecordSelectSchema:()=>Md,WasteRecordSumOrderByAggregateInputSchema:()=>Lot,WasteRecordUncheckedCreateInputSchema:()=>KG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>eg,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>ui,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>br,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>Vs,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>Uu,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>nu,WasteRecordUncheckedUpdateInputSchema:()=>t1,WasteRecordUncheckedUpdateManyInputSchema:()=>e1,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Fyt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>hg,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>nyt,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>$i,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Hst,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Er,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>gK,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>X7,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>M7,WasteRecordUpdateArgsSchema:()=>XWt,WasteRecordUpdateInputSchema:()=>XG,WasteRecordUpdateManyAndReturnArgsSchema:()=>eRt,WasteRecordUpdateManyArgsSchema:()=>tRt,WasteRecordUpdateManyMutationInputSchema:()=>eP,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>Hx,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>ER,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>uR,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>cg,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>Mi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>Vx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>_R,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>cR,WasteRecordUpdateWithoutIngredienteInputSchema:()=>IK,WasteRecordUpdateWithoutRecordedByInputSchema:()=>K7,WasteRecordUpdateWithoutRestaurantInputSchema:()=>j7,WasteRecordUpsertArgsSchema:()=>GWt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>Lx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>DR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>pR,WasteRecordWhereInputSchema:()=>ba,WasteRecordWhereUniqueInputSchema:()=>_});var ze;(function(c){c.assertEqual=m=>m;function i(m){}c.assertIs=i;function p(m){throw new Error}c.assertNever=p,c.arrayToEnum=m=>{let h={};for(let P of m)h[P]=P;return h},c.getValidEnumValues=m=>{let h=c.objectKeys(m).filter(k=>typeof m[m[k]]!="number"),P={};for(let k of h)P[k]=m[k];return c.objectValues(P)},c.objectValues=m=>c.objectKeys(m).map(function(h){return m[h]}),c.objectKeys=typeof Object.keys=="function"?m=>Object.keys(m):m=>{let h=[];for(let P in m)Object.prototype.hasOwnProperty.call(m,P)&&h.push(P);return h},c.find=(m,h)=>{for(let P of m)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?m=>Number.isInteger(m):m=>typeof m=="number"&&isFinite(m)&&Math.floor(m)===m;function y(m,h=" | "){return m.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=y,c.jsonStringifyReplacer=(m,h)=>typeof h=="bigint"?h.toString():h;})(ze||(ze={}));var bV;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(bV||(bV={}));var X=ze.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),rb=c=>{switch(typeof c){case "undefined":return X.undefined;case "string":return X.string;case "number":return isNaN(c)?X.nan:X.number;case "boolean":return X.boolean;case "function":return X.function;case "bigint":return X.bigint;case "symbol":return X.symbol;case "object":return Array.isArray(c)?X.array:c===null?X.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?X.promise:typeof Map<"u"&&c instanceof Map?X.map:typeof Set<"u"&&c instanceof Set?X.set:typeof Date<"u"&&c instanceof Date?X.date:X.object;default:return X.unknown}},O=ze.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),zdt=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),ep=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=y=>{this.issues=[...this.issues,y];},this.addIssues=(y=[])=>{this.issues=[...this.issues,...y];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(h){return h.message},y={_errors:[]},m=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(m);else if(P.code==="invalid_return_type")m(P.returnTypeError);else if(P.code==="invalid_arguments")m(P.argumentsError);else if(P.path.length===0)y._errors.push(p(P));else {let k=y,J=0;for(;J<P.path.length;){let Y=P.path[J];J===P.path.length-1?(k[Y]=k[Y]||{_errors:[]},k[Y]._errors.push(p(P))):k[Y]=k[Y]||{_errors:[]},k=k[Y],J++;}}};return m(this),y}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ze.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},y=[];for(let m of this.issues)m.path.length>0?(p[m.path[0]]=p[m.path[0]]||[],p[m.path[0]].push(i(m))):y.push(i(m));return {formErrors:y,fieldErrors:p}}get formErrors(){return this.flatten()}};ep.create=c=>new ep(c);var _T=(c,i)=>{let p;switch(c.code){case O.invalid_type:c.received===X.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case O.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,ze.jsonStringifyReplacer)}`;break;case O.unrecognized_keys:p=`Unrecognized key(s) in object: ${ze.joinValues(c.keys,", ")}`;break;case O.invalid_union:p="Invalid input";break;case O.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${ze.joinValues(c.options)}`;break;case O.invalid_enum_value:p=`Invalid enum value. Expected ${ze.joinValues(c.options)}, received '${c.received}'`;break;case O.invalid_arguments:p="Invalid function arguments";break;case O.invalid_return_type:p="Invalid function return type";break;case O.invalid_date:p="Invalid date";break;case O.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:ze.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case O.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case O.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case O.custom:p="Invalid input";break;case O.invalid_intersection_types:p="Intersection results could not be merged";break;case O.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case O.not_finite:p="Number must be finite";break;default:p=i.defaultError,ze.assertNever(c);}return {message:p}},EX=_T;function mdt(c){EX=c;}function LN(){return EX}var VN=c=>{let{data:i,path:p,errorMaps:y,issueData:m}=c,h=[...p,...m.path||[]],P={...m,path:h};if(m.message!==void 0)return {...m,path:h,message:m.message};let k="",J=y.filter(Y=>!!Y).slice().reverse();for(let Y of J)k=Y(P,{data:i,defaultError:k}).message;return {...m,path:h,message:k}},bdt=[];function G(c,i){let p=LN(),y=VN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===_T?void 0:_T].filter(m=>!!m)});c.common.issues.push(y);}var Pl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let y=[];for(let m of p){if(m.status==="aborted")return xt;m.status==="dirty"&&i.dirty(),y.push(m.value);}return {status:i.value,value:y}}static async mergeObjectAsync(i,p){let y=[];for(let m of p){let h=await m.key,P=await m.value;y.push({key:h,value:P});}return c.mergeObjectSync(i,y)}static mergeObjectSync(i,p){let y={};for(let m of p){let{key:h,value:P}=m;if(h.status==="aborted"||P.status==="aborted")return xt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||m.alwaysSet)&&(y[h.value]=P.value);}return {status:i.value,value:y}}},xt=Object.freeze({status:"aborted"}),DT=c=>({status:"dirty",value:c}),Dl=c=>({status:"valid",value:c}),hV=c=>c.status==="aborted",IV=c=>c.status==="dirty",qC=c=>c.status==="valid",PP=c=>typeof Promise<"u"&&c instanceof Promise;function HN(c,i,p,y){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function LX(c,i,p,y,m){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var it;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(it||(it={}));var SP,TP,gp=class{constructor(i,p,y,m){this._cachedPath=[],this.parent=i,this.data=p,this._path=y,this._key=m;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},FX=(c,i)=>{if(qC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new ep(c.common.issues);return this._error=p,this._error}}};function Dt(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:y,description:m}=c;if(i&&(p||y))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:m}:{errorMap:(P,k)=>{var J,Y;let{message:Wt}=c;return P.code==="invalid_enum_value"?{message:Wt??k.defaultError}:typeof k.data>"u"?{message:(J=Wt??y)!==null&&J!==void 0?J:k.defaultError}:P.code!=="invalid_type"?{message:k.defaultError}:{message:(Y=Wt??p)!==null&&Y!==void 0?Y:k.defaultError}},description:m}}var _t=class{get description(){return this._def.description}_getType(i){return rb(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:rb(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new Pl,ctx:{common:i.parent.common,data:i.data,parsedType:rb(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(PP(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let y=this.safeParse(i,p);if(y.success)return y.data;throw y.error}safeParse(i,p){var y;let m={common:{issues:[],async:(y=p?.async)!==null&&y!==void 0?y:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:rb(i)},h=this._parseSync({data:i,path:m.path,parent:m});return FX(m,h)}"~validate"(i){var p,y;let m={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:rb(i)};if(!this["~standard"].async)try{let h=this._parseSync({data:i,path:[],parent:m});return qC(h)?{value:h.value}:{issues:m.common.issues}}catch(h){!((y=(p=h?.message)===null||p===void 0?void 0:p.toLowerCase())===null||y===void 0)&&y.includes("encountered")&&(this["~standard"].async=true),m.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:m}).then(h=>qC(h)?{value:h.value}:{issues:m.common.issues})}async parseAsync(i,p){let y=await this.safeParseAsync(i,p);if(y.success)return y.data;throw y.error}async safeParseAsync(i,p){let y={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:rb(i)},m=this._parse({data:i,path:y.path,parent:y}),h=await(PP(m)?m:Promise.resolve(m));return FX(y,h)}refine(i,p){let y=m=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(m):p;return this._refinement((m,h)=>{let P=i(m),k=()=>h.addIssue({code:O.custom,...y(m)});return typeof Promise<"u"&&P instanceof Promise?P.then(J=>J?true:(k(),false)):P?true:(k(),false)})}refinement(i,p){return this._refinement((y,m)=>i(y)?true:(m.addIssue(typeof p=="function"?p(y,m):p),false))}_refinement(i){return new op({schema:this,typeName:kt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return Ip.create(this,this._def)}nullable(){return qm.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return cb.create(this)}promise(){return Pg.create(this,this._def)}or(i){return HC.create([this,i],this._def)}and(i){return QC.create(this,i,this._def)}transform(i){return new op({...Dt(this._def),schema:this,typeName:kt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new KC({...Dt(this._def),innerType:this,defaultValue:p,typeName:kt.ZodDefault})}brand(){return new UP({typeName:kt.ZodBranded,type:this,...Dt(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new XC({...Dt(this._def),innerType:this,catchValue:p,typeName:kt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return WP.create(this,i)}readonly(){return tA.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},hdt=/^c[^\s-]{8,}$/i,Idt=/^[0-9a-z]+$/,gdt=/^[0-9A-HJKMNP-TV-Z]{26}$/i,Cdt=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Adt=/^[a-z0-9_-]{21}$/i,Sdt=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,Tdt=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Pdt=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Udt="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",mV,Wdt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Rdt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,kdt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,xdt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,jdt=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Mdt=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,VX="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Zdt=new RegExp(`^${VX}$`);function HX(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function vdt(c){return new RegExp(`^${HX(c)}$`)}function QX(c){let i=`${VX}T${HX(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Odt(c,i){return !!((i==="v4"||!i)&&Wdt.test(c)||(i==="v6"||!i)&&kdt.test(c))}function fdt(c,i){if(!Sdt.test(c))return  false;try{let[p]=c.split("."),y=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),m=JSON.parse(atob(y));return !(typeof m!="object"||m===null||!m.typ||!m.alg||i&&m.alg!==i)}catch{return  false}}function wdt(c,i){return !!((i==="v4"||!i)&&Rdt.test(c)||(i==="v6"||!i)&&xdt.test(c))}var Sg=class c extends _t{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==X.string){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:X.string,received:h.parsedType}),xt}let y=new Pl,m;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),y.dirty());else if(h.kind==="max")i.data.length>h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),y.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,k=i.data.length<h.value;(P||k)&&(m=this._getOrReturnCtx(i,m),P?G(m,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:true,message:h.message}):k&&G(m,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:true,message:h.message}),y.dirty());}else if(h.kind==="email")Pdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"email",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="emoji")mV||(mV=new RegExp(Udt,"u")),mV.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"emoji",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="uuid")Cdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"uuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="nanoid")Adt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"nanoid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid")hdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="cuid2")Idt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cuid2",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="ulid")gdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ulid",code:O.invalid_string,message:h.message}),y.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{m=this._getOrReturnCtx(i,m),G(m,{validation:"url",code:O.invalid_string,message:h.message}),y.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"regex",code:O.invalid_string,message:h.message}),y.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),y.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{startsWith:h.value},message:h.message}),y.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:{endsWith:h.value},message:h.message}),y.dirty()):h.kind==="datetime"?QX(h).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"datetime",message:h.message}),y.dirty()):h.kind==="date"?Zdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"date",message:h.message}),y.dirty()):h.kind==="time"?vdt(h).test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{code:O.invalid_string,validation:"time",message:h.message}),y.dirty()):h.kind==="duration"?Tdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"duration",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="ip"?Odt(i.data,h.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"ip",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="jwt"?fdt(i.data,h.alg)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"jwt",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="cidr"?wdt(i.data,h.version)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"cidr",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="base64"?jdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64",code:O.invalid_string,message:h.message}),y.dirty()):h.kind==="base64url"?Mdt.test(i.data)||(m=this._getOrReturnCtx(i,m),G(m,{validation:"base64url",code:O.invalid_string,message:h.message}),y.dirty()):ze.assertNever(h);return {status:y.value,value:i.data}}_regex(i,p,y){return this.refinement(m=>i.test(m),{validation:p,code:O.invalid_string,...it.errToObj(y)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...it.errToObj(i)})}url(i){return this._addCheck({kind:"url",...it.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...it.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...it.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...it.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...it.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...it.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...it.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...it.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...it.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...it.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...it.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...it.errToObj(i)})}datetime(i){var p,y;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(y=i?.local)!==null&&y!==void 0?y:false,...it.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...it.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...it.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...it.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...it.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...it.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...it.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...it.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...it.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...it.errToObj(p)})}nonempty(i){return this.min(1,it.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};Sg.create=c=>{var i;return new Sg({checks:[],typeName:kt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Dt(c)})};function Ndt(c,i){let p=(c.toString().split(".")[1]||"").length,y=(i.toString().split(".")[1]||"").length,m=p>y?p:y,h=parseInt(c.toFixed(m).replace(".","")),P=parseInt(i.toFixed(m).replace(".",""));return h%P/Math.pow(10,m)}var FC=class c extends _t{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==X.number){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:X.number,received:h.parsedType}),xt}let y,m=new Pl;for(let h of this._def.checks)h.kind==="int"?ze.isInteger(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.invalid_type,expected:"integer",received:"float",message:h.message}),m.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="multipleOf"?Ndt(i.data,h.value)!==0&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_finite,message:h.message}),m.dirty()):ze.assertNever(h);return {status:m.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,it.toString(p))}gt(i,p){return this.setLimit("min",i,false,it.toString(p))}lte(i,p){return this.setLimit("max",i,true,it.toString(p))}lt(i,p){return this.setLimit("max",i,false,it.toString(p))}setLimit(i,p,y,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:it.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:it.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:it.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:it.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:it.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:it.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:it.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:it.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:it.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:it.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&ze.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let y of this._def.checks){if(y.kind==="finite"||y.kind==="int"||y.kind==="multipleOf")return  true;y.kind==="min"?(p===null||y.value>p)&&(p=y.value):y.kind==="max"&&(i===null||y.value<i)&&(i=y.value);}return Number.isFinite(p)&&Number.isFinite(i)}};FC.create=c=>new FC({checks:[],typeName:kt.ZodNumber,coerce:c?.coerce||false,...Dt(c)});var DC=class c extends _t{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==X.bigint)return this._getInvalidInput(i);let y,m=new Pl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(y=this._getOrReturnCtx(i,y),G(y,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):ze.assertNever(h);return {status:m.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return G(p,{code:O.invalid_type,expected:X.bigint,received:p.parsedType}),xt}gte(i,p){return this.setLimit("min",i,true,it.toString(p))}gt(i,p){return this.setLimit("min",i,false,it.toString(p))}lte(i,p){return this.setLimit("max",i,true,it.toString(p))}lt(i,p){return this.setLimit("max",i,false,it.toString(p))}setLimit(i,p,y,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:y,message:it.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:it.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:it.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:it.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:it.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:it.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};DC.create=c=>{var i;return new DC({checks:[],typeName:kt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Dt(c)})};var _C=class extends _t{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==X.boolean){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.boolean,received:y.parsedType}),xt}return Dl(i.data)}};_C.create=c=>new _C({typeName:kt.ZodBoolean,coerce:c?.coerce||false,...Dt(c)});var EC=class c extends _t{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==X.date){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_type,expected:X.date,received:h.parsedType}),xt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return G(h,{code:O.invalid_date}),xt}let y=new Pl,m;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_small,message:h.message,inclusive:true,exact:false,minimum:h.value,type:"date"}),y.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(m=this._getOrReturnCtx(i,m),G(m,{code:O.too_big,message:h.message,inclusive:true,exact:false,maximum:h.value,type:"date"}),y.dirty()):ze.assertNever(h);return {status:y.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:it.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:it.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};EC.create=c=>new EC({checks:[],coerce:c?.coerce||false,typeName:kt.ZodDate,...Dt(c)});var ET=class extends _t{_parse(i){if(this._getType(i)!==X.symbol){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.symbol,received:y.parsedType}),xt}return Dl(i.data)}};ET.create=c=>new ET({typeName:kt.ZodSymbol,...Dt(c)});var LC=class extends _t{_parse(i){if(this._getType(i)!==X.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.undefined,received:y.parsedType}),xt}return Dl(i.data)}};LC.create=c=>new LC({typeName:kt.ZodUndefined,...Dt(c)});var VC=class extends _t{_parse(i){if(this._getType(i)!==X.null){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.null,received:y.parsedType}),xt}return Dl(i.data)}};VC.create=c=>new VC({typeName:kt.ZodNull,...Dt(c)});var Tg=class extends _t{constructor(){super(...arguments),this._any=true;}_parse(i){return Dl(i.data)}};Tg.create=c=>new Tg({typeName:kt.ZodAny,...Dt(c)});var pb=class extends _t{constructor(){super(...arguments),this._unknown=true;}_parse(i){return Dl(i.data)}};pb.create=c=>new pb({typeName:kt.ZodUnknown,...Dt(c)});var Tp=class extends _t{_parse(i){let p=this._getOrReturnCtx(i);return G(p,{code:O.invalid_type,expected:X.never,received:p.parsedType}),xt}};Tp.create=c=>new Tp({typeName:kt.ZodNever,...Dt(c)});var LT=class extends _t{_parse(i){if(this._getType(i)!==X.undefined){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.void,received:y.parsedType}),xt}return Dl(i.data)}};LT.create=c=>new LT({typeName:kt.ZodVoid,...Dt(c)});var cb=class c extends _t{_parse(i){let{ctx:p,status:y}=this._processInputParams(i),m=this._def;if(p.parsedType!==X.array)return G(p,{code:O.invalid_type,expected:X.array,received:p.parsedType}),xt;if(m.exactLength!==null){let P=p.data.length>m.exactLength.value,k=p.data.length<m.exactLength.value;(P||k)&&(G(p,{code:P?O.too_big:O.too_small,minimum:k?m.exactLength.value:void 0,maximum:P?m.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:m.exactLength.message}),y.dirty());}if(m.minLength!==null&&p.data.length<m.minLength.value&&(G(p,{code:O.too_small,minimum:m.minLength.value,type:"array",inclusive:true,exact:false,message:m.minLength.message}),y.dirty()),m.maxLength!==null&&p.data.length>m.maxLength.value&&(G(p,{code:O.too_big,maximum:m.maxLength.value,type:"array",inclusive:true,exact:false,message:m.maxLength.message}),y.dirty()),p.common.async)return Promise.all([...p.data].map((P,k)=>m.type._parseAsync(new gp(p,P,p.path,k)))).then(P=>Pl.mergeArray(y,P));let h=[...p.data].map((P,k)=>m.type._parseSync(new gp(p,P,p.path,k)));return Pl.mergeArray(y,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:it.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:it.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:it.toString(p)}})}nonempty(i){return this.min(1,i)}};cb.create=(c,i)=>new cb({type:c,minLength:null,maxLength:null,exactLength:null,typeName:kt.ZodArray,...Dt(i)});function FT(c){if(c instanceof Yr){let i={};for(let p in c.shape){let y=c.shape[p];i[p]=Ip.create(FT(y));}return new Yr({...c._def,shape:()=>i})}else return c instanceof cb?new cb({...c._def,type:FT(c.element)}):c instanceof Ip?Ip.create(FT(c.unwrap())):c instanceof qm?qm.create(FT(c.unwrap())):c instanceof Bm?Bm.create(c.items.map(i=>FT(i))):c}var Yr=class c extends _t{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=ze.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==X.object){let Y=this._getOrReturnCtx(i);return G(Y,{code:O.invalid_type,expected:X.object,received:Y.parsedType}),xt}let{status:y,ctx:m}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),k=[];if(!(this._def.catchall instanceof Tp&&this._def.unknownKeys==="strip"))for(let Y in m.data)P.includes(Y)||k.push(Y);let J=[];for(let Y of P){let Wt=h[Y],Fl=m.data[Y];J.push({key:{status:"valid",value:Y},value:Wt._parse(new gp(m,Fl,m.path,Y)),alwaysSet:Y in m.data});}if(this._def.catchall instanceof Tp){let Y=this._def.unknownKeys;if(Y==="passthrough")for(let Wt of k)J.push({key:{status:"valid",value:Wt},value:{status:"valid",value:m.data[Wt]}});else if(Y==="strict")k.length>0&&(G(m,{code:O.unrecognized_keys,keys:k}),y.dirty());else if(Y!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Y=this._def.catchall;for(let Wt of k){let Fl=m.data[Wt];J.push({key:{status:"valid",value:Wt},value:Y._parse(new gp(m,Fl,m.path,Wt)),alwaysSet:Wt in m.data});}}return m.common.async?Promise.resolve().then(async()=>{let Y=[];for(let Wt of J){let Fl=await Wt.key,EN=await Wt.value;Y.push({key:Fl,value:EN,alwaysSet:Wt.alwaysSet});}return Y}).then(Y=>Pl.mergeObjectSync(y,Y)):Pl.mergeObjectSync(y,J)}get shape(){return this._def.shape()}strict(i){return it.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,y)=>{var m,h,P,k;let J=(P=(h=(m=this._def).errorMap)===null||h===void 0?void 0:h.call(m,p,y).message)!==null&&P!==void 0?P:y.defaultError;return p.code==="unrecognized_keys"?{message:(k=it.errToObj(i).message)!==null&&k!==void 0?k:J}:{message:J}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:kt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return ze.objectKeys(i).forEach(y=>{i[y]&&this.shape[y]&&(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{i[y]||(p[y]=this.shape[y]);}),new c({...this._def,shape:()=>p})}deepPartial(){return FT(this)}partial(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{let m=this.shape[y];i&&!i[y]?p[y]=m:p[y]=m.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return ze.objectKeys(this.shape).forEach(y=>{if(i&&!i[y])p[y]=this.shape[y];else {let h=this.shape[y];for(;h instanceof Ip;)h=h._def.innerType;p[y]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return YX(ze.objectKeys(this.shape))}};Yr.create=(c,i)=>new Yr({shape:()=>c,unknownKeys:"strip",catchall:Tp.create(),typeName:kt.ZodObject,...Dt(i)});Yr.strictCreate=(c,i)=>new Yr({shape:()=>c,unknownKeys:"strict",catchall:Tp.create(),typeName:kt.ZodObject,...Dt(i)});Yr.lazycreate=(c,i)=>new Yr({shape:c,unknownKeys:"strip",catchall:Tp.create(),typeName:kt.ZodObject,...Dt(i)});var HC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),y=this._def.options;function m(h){for(let k of h)if(k.result.status==="valid")return k.result;for(let k of h)if(k.result.status==="dirty")return p.common.issues.push(...k.ctx.common.issues),k.result;let P=h.map(k=>new ep(k.ctx.common.issues));return G(p,{code:O.invalid_union,unionErrors:P}),xt}if(p.common.async)return Promise.all(y.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(m);{let h,P=[];for(let J of y){let Y={...p,common:{...p.common,issues:[]},parent:null},Wt=J._parseSync({data:p.data,path:p.path,parent:Y});if(Wt.status==="valid")return Wt;Wt.status==="dirty"&&!h&&(h={result:Wt,ctx:Y}),Y.common.issues.length&&P.push(Y.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let k=P.map(J=>new ep(J));return G(p,{code:O.invalid_union,unionErrors:k}),xt}}get options(){return this._def.options}};HC.create=(c,i)=>new HC({options:c,typeName:kt.ZodUnion,...Dt(i)});var lb=c=>c instanceof YC?lb(c.schema):c instanceof op?lb(c.innerType()):c instanceof GC?[c.value]:c instanceof $C?c.options:c instanceof JC?ze.objectValues(c.enum):c instanceof KC?lb(c._def.innerType):c instanceof LC?[void 0]:c instanceof VC?[null]:c instanceof Ip?[void 0,...lb(c.unwrap())]:c instanceof qm?[null,...lb(c.unwrap())]:c instanceof UP||c instanceof tA?lb(c.unwrap()):c instanceof XC?lb(c._def.innerType):[],QN=class c extends _t{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.object)return G(p,{code:O.invalid_type,expected:X.object,received:p.parsedType}),xt;let y=this.discriminator,m=p.data[y],h=this.optionsMap.get(m);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):(G(p,{code:O.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[y]}),xt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,y){let m=new Map;for(let h of p){let P=lb(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let k of P){if(m.has(k))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(k)}`);m.set(k,h);}}return new c({typeName:kt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:m,...Dt(y)})}};function gV(c,i){let p=rb(c),y=rb(i);if(c===i)return {valid:true,data:c};if(p===X.object&&y===X.object){let m=ze.objectKeys(i),h=ze.objectKeys(c).filter(k=>m.indexOf(k)!==-1),P={...c,...i};for(let k of h){let J=gV(c[k],i[k]);if(!J.valid)return {valid:false};P[k]=J.data;}return {valid:true,data:P}}else if(p===X.array&&y===X.array){if(c.length!==i.length)return {valid:false};let m=[];for(let h=0;h<c.length;h++){let P=c[h],k=i[h],J=gV(P,k);if(!J.valid)return {valid:false};m.push(J.data);}return {valid:true,data:m}}else return p===X.date&&y===X.date&&+c==+i?{valid:true,data:c}:{valid:false}}var QC=class extends _t{_parse(i){let{status:p,ctx:y}=this._processInputParams(i),m=(h,P)=>{if(hV(h)||hV(P))return xt;let k=gV(h.value,P.value);return k.valid?((IV(h)||IV(P))&&p.dirty(),{status:p.value,value:k.data}):(G(y,{code:O.invalid_intersection_types}),xt)};return y.common.async?Promise.all([this._def.left._parseAsync({data:y.data,path:y.path,parent:y}),this._def.right._parseAsync({data:y.data,path:y.path,parent:y})]).then(([h,P])=>m(h,P)):m(this._def.left._parseSync({data:y.data,path:y.path,parent:y}),this._def.right._parseSync({data:y.data,path:y.path,parent:y}))}};QC.create=(c,i,p)=>new QC({left:c,right:i,typeName:kt.ZodIntersection,...Dt(p)});var Bm=class c extends _t{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.array)return G(y,{code:O.invalid_type,expected:X.array,received:y.parsedType}),xt;if(y.data.length<this._def.items.length)return G(y,{code:O.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),xt;!this._def.rest&&y.data.length>this._def.items.length&&(G(y,{code:O.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let h=[...y.data].map((P,k)=>{let J=this._def.items[k]||this._def.rest;return J?J._parse(new gp(y,P,y.path,k)):null}).filter(P=>!!P);return y.common.async?Promise.all(h).then(P=>Pl.mergeArray(p,P)):Pl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Bm.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Bm({items:c,typeName:kt.ZodTuple,rest:null,...Dt(i)})};var YN=class c extends _t{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.object)return G(y,{code:O.invalid_type,expected:X.object,received:y.parsedType}),xt;let m=[],h=this._def.keyType,P=this._def.valueType;for(let k in y.data)m.push({key:h._parse(new gp(y,k,y.path,k)),value:P._parse(new gp(y,y.data[k],y.path,k)),alwaysSet:k in y.data});return y.common.async?Pl.mergeObjectAsync(p,m):Pl.mergeObjectSync(p,m)}get element(){return this._def.valueType}static create(i,p,y){return p instanceof _t?new c({keyType:i,valueType:p,typeName:kt.ZodRecord,...Dt(y)}):new c({keyType:Sg.create(),valueType:i,typeName:kt.ZodRecord,...Dt(p)})}},VT=class extends _t{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.map)return G(y,{code:O.invalid_type,expected:X.map,received:y.parsedType}),xt;let m=this._def.keyType,h=this._def.valueType,P=[...y.data.entries()].map(([k,J],Y)=>({key:m._parse(new gp(y,k,y.path,[Y,"key"])),value:h._parse(new gp(y,J,y.path,[Y,"value"]))}));if(y.common.async){let k=new Map;return Promise.resolve().then(async()=>{for(let J of P){let Y=await J.key,Wt=await J.value;if(Y.status==="aborted"||Wt.status==="aborted")return xt;(Y.status==="dirty"||Wt.status==="dirty")&&p.dirty(),k.set(Y.value,Wt.value);}return {status:p.value,value:k}})}else {let k=new Map;for(let J of P){let Y=J.key,Wt=J.value;if(Y.status==="aborted"||Wt.status==="aborted")return xt;(Y.status==="dirty"||Wt.status==="dirty")&&p.dirty(),k.set(Y.value,Wt.value);}return {status:p.value,value:k}}}};VT.create=(c,i,p)=>new VT({valueType:i,keyType:c,typeName:kt.ZodMap,...Dt(p)});var HT=class c extends _t{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.parsedType!==X.set)return G(y,{code:O.invalid_type,expected:X.set,received:y.parsedType}),xt;let m=this._def;m.minSize!==null&&y.data.size<m.minSize.value&&(G(y,{code:O.too_small,minimum:m.minSize.value,type:"set",inclusive:true,exact:false,message:m.minSize.message}),p.dirty()),m.maxSize!==null&&y.data.size>m.maxSize.value&&(G(y,{code:O.too_big,maximum:m.maxSize.value,type:"set",inclusive:true,exact:false,message:m.maxSize.message}),p.dirty());let h=this._def.valueType;function P(J){let Y=new Set;for(let Wt of J){if(Wt.status==="aborted")return xt;Wt.status==="dirty"&&p.dirty(),Y.add(Wt.value);}return {status:p.value,value:Y}}let k=[...y.data.values()].map((J,Y)=>h._parse(new gp(y,J,y.path,Y)));return y.common.async?Promise.all(k).then(J=>P(J)):P(k)}min(i,p){return new c({...this._def,minSize:{value:i,message:it.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:it.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};HT.create=(c,i)=>new HT({valueType:c,minSize:null,maxSize:null,typeName:kt.ZodSet,...Dt(i)});var GN=class c extends _t{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.function)return G(p,{code:O.invalid_type,expected:X.function,received:p.parsedType}),xt;function y(k,J){return VN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,LN(),_T].filter(Y=>!!Y),issueData:{code:O.invalid_arguments,argumentsError:J}})}function m(k,J){return VN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,LN(),_T].filter(Y=>!!Y),issueData:{code:O.invalid_return_type,returnTypeError:J}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof Pg){let k=this;return Dl(async function(...J){let Y=new ep([]),Wt=await k._def.args.parseAsync(J,h).catch(zV=>{throw Y.addIssue(y(J,zV)),Y}),Fl=await Reflect.apply(P,this,Wt);return await k._def.returns._def.type.parseAsync(Fl,h).catch(zV=>{throw Y.addIssue(m(Fl,zV)),Y})})}else {let k=this;return Dl(function(...J){let Y=k._def.args.safeParse(J,h);if(!Y.success)throw new ep([y(J,Y.error)]);let Wt=Reflect.apply(P,this,Y.data),Fl=k._def.returns.safeParse(Wt,h);if(!Fl.success)throw new ep([m(Wt,Fl.error)]);return Fl.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Bm.create(i).rest(pb.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,y){return new c({args:i||Bm.create([]).rest(pb.create()),returns:p||pb.create(),typeName:kt.ZodFunction,...Dt(y)})}},YC=class extends _t{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};YC.create=(c,i)=>new YC({getter:c,typeName:kt.ZodLazy,...Dt(i)});var GC=class extends _t{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return G(p,{received:p.data,code:O.invalid_literal,expected:this._def.value}),xt}return {status:"valid",value:i.data}}get value(){return this._def.value}};GC.create=(c,i)=>new GC({value:c,typeName:kt.ZodLiteral,...Dt(i)});function YX(c,i){return new $C({values:c,typeName:kt.ZodEnum,...Dt(i)})}var $C=class c extends _t{constructor(){super(...arguments),SP.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{expected:ze.joinValues(y),received:p.parsedType,code:O.invalid_type}),xt}if(HN(this,SP)||LX(this,SP,new Set(this._def.values)),!HN(this,SP).has(i.data)){let p=this._getOrReturnCtx(i),y=this._def.values;return G(p,{received:p.data,code:O.invalid_enum_value,options:y}),xt}return Dl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(y=>!i.includes(y)),{...this._def,...p})}};SP=new WeakMap;$C.create=YX;var JC=class extends _t{constructor(){super(...arguments),TP.set(this,void 0);}_parse(i){let p=ze.getValidEnumValues(this._def.values),y=this._getOrReturnCtx(i);if(y.parsedType!==X.string&&y.parsedType!==X.number){let m=ze.objectValues(p);return G(y,{expected:ze.joinValues(m),received:y.parsedType,code:O.invalid_type}),xt}if(HN(this,TP)||LX(this,TP,new Set(ze.getValidEnumValues(this._def.values))),!HN(this,TP).has(i.data)){let m=ze.objectValues(p);return G(y,{received:y.data,code:O.invalid_enum_value,options:m}),xt}return Dl(i.data)}get enum(){return this._def.values}};TP=new WeakMap;JC.create=(c,i)=>new JC({values:c,typeName:kt.ZodNativeEnum,...Dt(i)});var Pg=class extends _t{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==X.promise&&p.common.async===false)return G(p,{code:O.invalid_type,expected:X.promise,received:p.parsedType}),xt;let y=p.parsedType===X.promise?p.data:Promise.resolve(p.data);return Dl(y.then(m=>this._def.type.parseAsync(m,{path:p.path,errorMap:p.common.contextualErrorMap})))}};Pg.create=(c,i)=>new Pg({type:c,typeName:kt.ZodPromise,...Dt(i)});var op=class extends _t{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===kt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:y}=this._processInputParams(i),m=this._def.effect||null,h={addIssue:P=>{G(y,P),P.fatal?p.abort():p.dirty();},get path(){return y.path}};if(h.addIssue=h.addIssue.bind(h),m.type==="preprocess"){let P=m.transform(y.data,h);if(y.common.async)return Promise.resolve(P).then(async k=>{if(p.value==="aborted")return xt;let J=await this._def.schema._parseAsync({data:k,path:y.path,parent:y});return J.status==="aborted"?xt:J.status==="dirty"||p.value==="dirty"?DT(J.value):J});{if(p.value==="aborted")return xt;let k=this._def.schema._parseSync({data:P,path:y.path,parent:y});return k.status==="aborted"?xt:k.status==="dirty"||p.value==="dirty"?DT(k.value):k}}if(m.type==="refinement"){let P=k=>{let J=m.refinement(k,h);if(y.common.async)return Promise.resolve(J);if(J instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return k};if(y.common.async===false){let k=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});return k.status==="aborted"?xt:(k.status==="dirty"&&p.dirty(),P(k.value),{status:p.value,value:k.value})}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(k=>k.status==="aborted"?xt:(k.status==="dirty"&&p.dirty(),P(k.value).then(()=>({status:p.value,value:k.value}))))}if(m.type==="transform")if(y.common.async===false){let P=this._def.schema._parseSync({data:y.data,path:y.path,parent:y});if(!qC(P))return P;let k=m.transform(P.value,h);if(k instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:k}}else return this._def.schema._parseAsync({data:y.data,path:y.path,parent:y}).then(P=>qC(P)?Promise.resolve(m.transform(P.value,h)).then(k=>({status:p.value,value:k})):P);ze.assertNever(m);}};op.create=(c,i,p)=>new op({schema:c,typeName:kt.ZodEffects,effect:i,...Dt(p)});op.createWithPreprocess=(c,i,p)=>new op({schema:i,effect:{type:"preprocess",transform:c},typeName:kt.ZodEffects,...Dt(p)});var Ip=class extends _t{_parse(i){return this._getType(i)===X.undefined?Dl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Ip.create=(c,i)=>new Ip({innerType:c,typeName:kt.ZodOptional,...Dt(i)});var qm=class extends _t{_parse(i){return this._getType(i)===X.null?Dl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};qm.create=(c,i)=>new qm({innerType:c,typeName:kt.ZodNullable,...Dt(i)});var KC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return p.parsedType===X.undefined&&(y=this._def.defaultValue()),this._def.innerType._parse({data:y,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};KC.create=(c,i)=>new KC({innerType:c,typeName:kt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Dt(i)});var XC=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),y={...p,common:{...p.common,issues:[]}},m=this._def.innerType._parse({data:y.data,path:y.path,parent:{...y}});return PP(m)?m.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new ep(y.common.issues)},input:y.data})})):{status:"valid",value:m.status==="valid"?m.value:this._def.catchValue({get error(){return new ep(y.common.issues)},input:y.data})}}removeCatch(){return this._def.innerType}};XC.create=(c,i)=>new XC({innerType:c,typeName:kt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Dt(i)});var QT=class extends _t{_parse(i){if(this._getType(i)!==X.nan){let y=this._getOrReturnCtx(i);return G(y,{code:O.invalid_type,expected:X.nan,received:y.parsedType}),xt}return {status:"valid",value:i.data}}};QT.create=c=>new QT({typeName:kt.ZodNaN,...Dt(c)});var Bdt=Symbol("zod_brand"),UP=class extends _t{_parse(i){let{ctx:p}=this._processInputParams(i),y=p.data;return this._def.type._parse({data:y,path:p.path,parent:p})}unwrap(){return this._def.type}},WP=class c extends _t{_parse(i){let{status:p,ctx:y}=this._processInputParams(i);if(y.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:y.data,path:y.path,parent:y});return h.status==="aborted"?xt:h.status==="dirty"?(p.dirty(),DT(h.value)):this._def.out._parseAsync({data:h.value,path:y.path,parent:y})})();{let m=this._def.in._parseSync({data:y.data,path:y.path,parent:y});return m.status==="aborted"?xt:m.status==="dirty"?(p.dirty(),{status:"dirty",value:m.value}):this._def.out._parseSync({data:m.value,path:y.path,parent:y})}}static create(i,p){return new c({in:i,out:p,typeName:kt.ZodPipeline})}},tA=class extends _t{_parse(i){let p=this._def.innerType._parse(i),y=m=>(qC(m)&&(m.value=Object.freeze(m.value)),m);return PP(p)?p.then(m=>y(m)):y(p)}unwrap(){return this._def.innerType}};tA.create=(c,i)=>new tA({innerType:c,typeName:kt.ZodReadonly,...Dt(i)});function DX(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function GX(c,i={},p){return c?Tg.create().superRefine((y,m)=>{var h,P;let k=c(y);if(k instanceof Promise)return k.then(J=>{var Y,Wt;if(!J){let Fl=DX(i,y),EN=(Wt=(Y=Fl.fatal)!==null&&Y!==void 0?Y:p)!==null&&Wt!==void 0?Wt:true;m.addIssue({code:"custom",...Fl,fatal:EN});}});if(!k){let J=DX(i,y),Y=(P=(h=J.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:true;m.addIssue({code:"custom",...J,fatal:Y});}}):Tg.create()}var qdt={object:Yr.lazycreate},kt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(kt||(kt={}));var Fdt=(c,i={message:`Input not instance of ${c.name}`})=>GX(p=>p instanceof c,i),$X=Sg.create,JX=FC.create,Ddt=QT.create,_dt=DC.create,KX=_C.create,Edt=EC.create,Ldt=ET.create,Vdt=LC.create,Hdt=VC.create,Qdt=Tg.create,Ydt=pb.create,Gdt=Tp.create,$dt=LT.create,Jdt=cb.create,Kdt=Yr.create,Xdt=Yr.strictCreate,tzt=HC.create,ezt=QN.create,ozt=QC.create,nzt=Bm.create,azt=YN.create,izt=VT.create,lzt=HT.create,rzt=GN.create,pzt=YC.create,czt=GC.create,uzt=$C.create,szt=JC.create,yzt=Pg.create,_X=op.create,dzt=Ip.create,zzt=qm.create,mzt=op.createWithPreprocess,bzt=WP.create,hzt=()=>$X().optional(),Izt=()=>JX().optional(),gzt=()=>KX().optional(),Czt={string:c=>Sg.create({...c,coerce:true}),number:c=>FC.create({...c,coerce:true}),boolean:c=>_C.create({...c,coerce:true}),bigint:c=>DC.create({...c,coerce:true}),date:c=>EC.create({...c,coerce:true})},Azt=xt,t=Object.freeze({__proto__:null,defaultErrorMap:_T,setErrorMap:mdt,getErrorMap:LN,makeIssue:VN,EMPTY_PATH:bdt,addIssueToContext:G,ParseStatus:Pl,INVALID:xt,DIRTY:DT,OK:Dl,isAborted:hV,isDirty:IV,isValid:qC,isAsync:PP,get util(){return ze},get objectUtil(){return bV},ZodParsedType:X,getParsedType:rb,ZodType:_t,datetimeRegex:QX,ZodString:Sg,ZodNumber:FC,ZodBigInt:DC,ZodBoolean:_C,ZodDate:EC,ZodSymbol:ET,ZodUndefined:LC,ZodNull:VC,ZodAny:Tg,ZodUnknown:pb,ZodNever:Tp,ZodVoid:LT,ZodArray:cb,ZodObject:Yr,ZodUnion:HC,ZodDiscriminatedUnion:QN,ZodIntersection:QC,ZodTuple:Bm,ZodRecord:YN,ZodMap:VT,ZodSet:HT,ZodFunction:GN,ZodLazy:YC,ZodLiteral:GC,ZodEnum:$C,ZodNativeEnum:JC,ZodPromise:Pg,ZodEffects:op,ZodTransformer:op,ZodOptional:Ip,ZodNullable:qm,ZodDefault:KC,ZodCatch:XC,ZodNaN:QT,BRAND:Bdt,ZodBranded:UP,ZodPipeline:WP,ZodReadonly:tA,custom:GX,Schema:_t,ZodSchema:_t,late:qdt,get ZodFirstPartyTypeKind(){return kt},coerce:Czt,any:Qdt,array:Jdt,bigint:_dt,boolean:KX,date:Edt,discriminatedUnion:ezt,effect:_X,enum:uzt,function:rzt,instanceof:Fdt,intersection:ozt,lazy:pzt,literal:czt,map:izt,nan:Ddt,nativeEnum:szt,never:Gdt,null:Hdt,nullable:zzt,number:JX,object:Kdt,oboolean:gzt,onumber:Izt,optional:dzt,ostring:hzt,pipeline:bzt,preprocess:mzt,promise:yzt,record:azt,set:lzt,strictObject:Xdt,string:$X,symbol:Ldt,transformer:_X,tuple:nzt,undefined:Vdt,union:tzt,unknown:Ydt,void:$dt,NEVER:Azt,ZodIssueCode:O,quotelessJson:zdt,ZodError:ep});var Szt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),Ug=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium","containsGluten","containsDairy","containsNuts","containsEggs","containsSoy","containsFish","containsShellfish","containsSesame"]),Wg=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),Rg=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),kg=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),xg=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),jg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),Mg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),Zg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),vg=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),Og=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),fg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),wg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),Ng=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),Bg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),qg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),Fg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Dg=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),_g=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Eg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Lg=t.enum(["id","name","description","icon","createdAt","updatedAt"]),Vg=t.enum(["id","name","description","createdAt","updatedAt"]),Hg=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),Qg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),Yg=t.enum(["id","restaurantId","date","status","createdById","createdAt","updatedAt"]),Gg=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),$g=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),Jg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),Kg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),Xg=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),tC=t.enum(["id","name","description"]),eC=t.enum(["id","ingredientId","allergenId"]),oC=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),nC=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),aC=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),iC=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),lC=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),rC=t.enum(["id","email","sub","firstName","lastName","profileImage","organizationId","restaurantId","createdAt","updatedAt"]),pC=t.enum(["id","userId","passwordHash","role"]),cC=t.enum(["id","userId","verificationCode","token","verified","expiresAt","createdAt"]),uC=t.enum(["id","name","imageUrl","category","restaurantId"]),sC=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel","category"]),yC=t.enum(["id","name","category","price","density","dietaryRestrictionId","calories","protein","carbohydrates","fat","fiber","sugar","sodium","usdaFoodId","nutritionSource","nutritionUpdatedAt"]),dC=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),zC=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),mC=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),bC=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),hC=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),IC=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),gC=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),CC=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),AC=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),SC=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),TC=t.enum(["id","userId","startTime","endTime","status"]),PC=t.enum(["id","name","status","createdAt","updatedAt"]),UC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),WC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),RC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),kC=t.enum(["id","menuItemId","recipeId","joinAt"]),xC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),jC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),MC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),ZC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),sM=t.enum(["default","insensitive"]),XX=t.enum(["first","last"]),Lt=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),Bt=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),re=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),qt=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),Et=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Mt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),Zt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),Ot=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED","HAS_NOT_START"]),pe=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),ce=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ue=t.enum(["UNAVAILABLE","PREFERRED"]),U=t.enum(["APPETIZER","SOUP","SALAD","MAIN_COURSE","SIDE_DISH","DESSERT","BEVERAGE","BREAKFAST","BRUNCH","LUNCH","DINNER","SNACK","BAKED_GOOD","SAUCE","CONDIMENT","SPECIAL"]),Nt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),vt=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),ft=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),se=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),wt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Vt=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),tt=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),W=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),ye=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),ot=t.enum(["MANUAL","USDA","CUSTOM","ESTIMATED"]),Tzt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean(),containsDairy:t.boolean(),containsNuts:t.boolean(),containsEggs:t.boolean(),containsSoy:t.boolean(),containsFish:t.boolean(),containsShellfish:t.boolean(),containsSesame:t.boolean()}),Pzt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Uzt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wzt=t.object({type:ye,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rzt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kzt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xzt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jzt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zzt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vzt=t.object({status:Bt,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ozt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),fzt=t.object({type:re,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wzt=t.object({frequency:qt,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Nzt=t.object({type:Lt,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bzt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),qzt=t.object({status:Et,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fzt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Dzt=t.object({source:Mt,status:Zt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_zt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ezt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Lzt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Vzt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Hzt=t.object({status:Ot,id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Qzt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Yzt=t.object({taskType:pe,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Gzt=t.object({dayOfWeek:ce,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),$zt=t.object({constraintsType:ue,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Jzt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Kzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),Xzt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),tmt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),emt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),omt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),nmt=t.object({type:Nt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),amt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),imt=t.object({id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),lmt=t.object({role:se,id:t.string().uuid(),userId:t.number().int(),passwordHash:t.string()}),rmt=t.object({id:t.string().uuid(),userId:t.number().int(),verificationCode:t.string(),token:t.string(),verified:t.boolean(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),pmt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),cmt=t.object({skillLevel:W,category:U,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),umt=t.object({nutritionSource:ot.nullable(),id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),density:t.number().nullable(),dietaryRestrictionId:t.number().int().nullable(),calories:t.number().nullable(),protein:t.number().nullable(),carbohydrates:t.number().nullable(),fat:t.number().nullable(),fiber:t.number().nullable(),sugar:t.number().nullable(),sodium:t.number().nullable(),usdaFoodId:t.string().nullable(),nutritionUpdatedAt:t.coerce.date().nullable()}),smt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),ymt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),dmt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),zmt=t.object({type:vt,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),mmt=t.object({status:ft,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),bmt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),hmt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),Imt=t.object({status:wt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gmt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),Cmt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Amt=t.object({status:Vt,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),Smt=t.object({status:tt,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Tmt=t.object({status:tt,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),Pmt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Umt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wmt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),Rmt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),kmt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xmt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jmt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),l0=t.object({select:t.lazy(()=>Dy).optional(),include:t.lazy(()=>Fy).optional()}).strict(),Dy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),_y=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Mmt=t.object({select:t.lazy(()=>Ey).optional(),include:t.lazy(()=>_y).optional()}).strict(),Ey=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Ly=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),r0=t.object({select:t.lazy(()=>Vy).optional(),include:t.lazy(()=>Ly).optional()}).strict(),Vy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Hy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Zmt=t.object({select:t.lazy(()=>Qy).optional(),include:t.lazy(()=>Hy).optional()}).strict(),Qy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Yy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),vmt=t.object({select:t.lazy(()=>Gy).optional(),include:t.lazy(()=>Yy).optional()}).strict(),Gy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),$y=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Omt=t.object({select:t.lazy(()=>Jy).optional(),include:t.lazy(()=>$y).optional()}).strict(),Jy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Ky=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),fmt=t.object({select:t.lazy(()=>Xy).optional(),include:t.lazy(()=>Ky).optional()}).strict(),Xy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),td=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),wmt=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),ed=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),od=t.object({menu:t.union([t.boolean(),t.lazy(()=>hM)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>c0)]).optional()}).strict(),p0=t.object({select:t.lazy(()=>nd).optional(),include:t.lazy(()=>od).optional()}).strict(),c0=t.object({select:t.lazy(()=>ttt).nullish()}).strict(),ttt=t.object({menuItems:t.boolean().optional()}).strict(),nd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>hM)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>c0)]).optional()}).strict(),ad=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>u0)]).optional()}).strict(),yM=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>ad).optional()}).strict(),u0=t.object({select:t.lazy(()=>ett).nullish()}).strict(),ett=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),id=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>u0)]).optional()}).strict(),ld=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>AX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>s0)]).optional()}).strict(),dM=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),s0=t.object({select:t.lazy(()=>ott).nullish()}).strict(),ott=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),rd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>AX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>s0)]).optional()}).strict(),pd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>dM)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>M0)]).optional()}).strict(),Nmt=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),cd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>dM)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>M0)]).optional()}).strict(),ud=t.object({equipment:t.union([t.boolean(),t.lazy(()=>dM)]).optional()}).strict(),Bmt=t.object({select:t.lazy(()=>sd).optional(),include:t.lazy(()=>ud).optional()}).strict(),sd=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>dM)]).optional()}).strict(),yd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>TX)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>jN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>y0)]).optional()}).strict(),zM=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>yd).optional()}).strict(),y0=t.object({select:t.lazy(()=>ntt).nullish()}).strict(),ntt=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),dd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>TX)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>jN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>y0)]).optional()}).strict(),zd=t.object({checklist:t.union([t.boolean(),t.lazy(()=>zM)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>MN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>z0)]).optional()}).strict(),d0=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),z0=t.object({select:t.lazy(()=>att).nullish()}).strict(),att=t.object({completions:t.boolean().optional()}).strict(),md=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>zM)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>MN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>z0)]).optional()}).strict(),bd=t.object({checklist:t.union([t.boolean(),t.lazy(()=>zM)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>MN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>b0)]).optional()}).strict(),m0=t.object({select:t.lazy(()=>hd).optional(),include:t.lazy(()=>bd).optional()}).strict(),b0=t.object({select:t.lazy(()=>itt).nullish()}).strict(),itt=t.object({items:t.boolean().optional()}).strict(),hd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>zM)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>MN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>b0)]).optional()}).strict(),Id=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>m0)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>d0)]).optional()}).strict(),qmt=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),gd=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>m0)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>d0)]).optional()}).strict(),Cd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>bM)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional()}).strict(),Fmt=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),Ad=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>bM)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional()}).strict(),Sd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Dmt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Pd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>h0)]).optional()}).strict(),_mt=t.object({select:t.lazy(()=>Ud).optional(),include:t.lazy(()=>Pd).optional()}).strict(),h0=t.object({select:t.lazy(()=>ltt).nullish()}).strict(),ltt=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),Ud=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>h0)]).optional()}).strict(),Wd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>I0)]).optional()}).strict(),Emt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Wd).optional()}).strict(),I0=t.object({select:t.lazy(()=>rtt).nullish()}).strict(),rtt=t.object({recipes:t.boolean().optional()}).strict(),Rd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>I0)]).optional()}).strict(),kd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Lmt=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),xd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),jd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Vmt=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),Md=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>C0)]).optional()}).strict(),g0=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),C0=t.object({select:t.lazy(()=>ptt).nullish()}).strict(),ptt=t.object({items:t.boolean().optional()}).strict(),vd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),status:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>C0)]).optional()}).strict(),Od=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>g0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Hmt=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),fd=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>g0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),wd=t.object({shift:t.union([t.boolean(),t.lazy(()=>F0)]).optional()}).strict(),Qmt=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),Nd=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>F0)]).optional()}).strict(),Bd=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Ymt=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),qd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Fd=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Gmt=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),Dd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),_d=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>BS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),$mt=t.object({select:t.lazy(()=>Ed).optional(),include:t.lazy(()=>_d).optional()}).strict(),Ed=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>BS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Ld=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>ON)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>S0)]).optional()}).strict(),A0=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),S0=t.object({select:t.lazy(()=>ctt).nullish()}).strict(),ctt=t.object({ingredients:t.boolean().optional()}).strict(),Vd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>ON)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>S0)]).optional()}).strict(),Hd=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>A0)]).optional()}).strict(),Jmt=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),Qd=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>A0)]).optional()}).strict(),Yd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),Kmt=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),Gd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),eb=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),$d=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>xX)]).optional(),users:t.union([t.boolean(),t.lazy(()=>fN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>T0)]).optional()}).strict(),mM=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),T0=t.object({select:t.lazy(()=>utt).nullish()}).strict(),utt=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),Jd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>xX)]).optional(),users:t.union([t.boolean(),t.lazy(()=>fN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>T0)]).optional()}).strict(),Kd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>P0)]).optional()}).strict(),NI=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),P0=t.object({select:t.lazy(()=>stt).nullish()}).strict(),stt=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Xd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>P0)]).optional()}).strict(),tz=t.object({organization:t.union([t.boolean(),t.lazy(()=>mM)]).optional(),users:t.union([t.boolean(),t.lazy(()=>fN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>ZX)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>NX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>xN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>vN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>CX)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>SX)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>U0)]).optional()}).strict(),no=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),U0=t.object({select:t.lazy(()=>ytt).nullish()}).strict(),ytt=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),equipments:t.boolean().optional(),qualityChecklists:t.boolean().optional(),customerFeedbacks:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>mM)]).optional(),users:t.union([t.boolean(),t.lazy(()=>fN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>ZX)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>NX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>xN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>vN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>CX)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>SX)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>U0)]).optional()}).strict(),oz=t.object({organization:t.union([t.boolean(),t.lazy(()=>mM)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>OX)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>MX)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>wX)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>vN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>WX)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>RX)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>jN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),auth:t.union([t.boolean(),t.lazy(()=>jX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>W0)]).optional()}).strict(),Jt=t.object({select:t.lazy(()=>nz).optional(),include:t.lazy(()=>oz).optional()}).strict(),W0=t.object({select:t.lazy(()=>dtt).nullish()}).strict(),dtt=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),productionPlanItems:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraints:t.boolean().optional(),inventoryWithdrawals:t.boolean().optional(),checklistCompletes:t.boolean().optional(),customerFeedbackResponses:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransactions:t.boolean().optional(),StockCounts:t.boolean().optional(),auth:t.boolean().optional()}).strict(),nz=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>mM)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>OX)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>MX)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>wX)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>vN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>WX)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>RX)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>jN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>BN)]).optional(),auth:t.union([t.boolean(),t.lazy(()=>jX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>W0)]).optional()}).strict(),az=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Xmt=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>az).optional()}).strict(),iz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),passwordHash:t.boolean().optional(),role:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),lz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),tbt=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),rz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),verificationCode:t.boolean().optional(),token:t.boolean().optional(),verified:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),pz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>k0)]).optional()}).strict(),R0=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),k0=t.object({select:t.lazy(()=>ztt).nullish()}).strict(),ztt=t.object({recipes:t.boolean().optional()}).strict(),cz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>k0)]).optional()}).strict(),uz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>R0)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>BX)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>qX)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>fX)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>PX)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>bX)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>hX)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>IX)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>l0)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>zX)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>mX)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>w0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>x0)]).optional()}).strict(),Kt=t.object({select:t.lazy(()=>sz).optional(),include:t.lazy(()=>uz).optional()}).strict(),x0=t.object({select:t.lazy(()=>mtt).nullish()}).strict(),mtt=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipments:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),sz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),category:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>R0)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>NN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>BX)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>qX)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>fX)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>OT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>PX)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>NS)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>bX)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>hX)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>IX)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>l0)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>zX)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>mX)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>w0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>x0)]).optional()}).strict(),yz=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>vX)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>ON)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>ZN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>j0)]).optional()}).strict(),lp=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>yz).optional()}).strict(),j0=t.object({select:t.lazy(()=>btt).nullish()}).strict(),btt=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecords:t.boolean().optional(),IngredientAllergens:t.boolean().optional(),priceHistory:t.boolean().optional(),DietaryRestrictions:t.boolean().optional()}).strict(),dz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),density:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),usdaFoodId:t.boolean().optional(),nutritionSource:t.boolean().optional(),nutritionUpdatedAt:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>wT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>NT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>vX)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>vT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>ON)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>ZN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>j0)]).optional()}).strict(),zz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>yM)]).optional()}).strict(),ebt=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),mz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>yM)]).optional()}).strict(),bz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>yM)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>Z0)]).optional()}).strict(),M0=t.object({select:t.lazy(()=>hz).optional(),include:t.lazy(()=>bz).optional()}).strict(),Z0=t.object({select:t.lazy(()=>htt).nullish()}).strict(),htt=t.object({equipment:t.boolean().optional()}).strict(),hz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>yM)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>xT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>Z0)]).optional()}).strict(),Iz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>v0)]).optional()}).strict(),BS=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),v0=t.object({select:t.lazy(()=>Itt).nullish()}).strict(),Itt=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>BT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>fT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>v0)]).optional()}).strict(),Cz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>BS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),obt=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),Az=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>BS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Sz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>f0)]).optional()}).strict(),O0=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),f0=t.object({select:t.lazy(()=>gtt).nullish()}).strict(),gtt=t.object({items:t.boolean().optional()}).strict(),Tz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>NI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>qN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>f0)]).optional()}).strict(),Pz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>O0)]).optional(),item:t.union([t.boolean(),t.lazy(()=>BS)]).optional()}).strict(),nbt=t.object({select:t.lazy(()=>Uz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),Uz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>O0)]).optional(),item:t.union([t.boolean(),t.lazy(()=>BS)]).optional()}).strict(),Wz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),w0=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Wz).optional()}).strict(),Rz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),kz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>bM)]).optional(),items:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>B0)]).optional()}).strict(),N0=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),B0=t.object({select:t.lazy(()=>Ctt).nullish()}).strict(),Ctt=t.object({items:t.boolean().optional()}).strict(),xz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>bM)]).optional(),items:t.union([t.boolean(),t.lazy(()=>DN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>B0)]).optional()}).strict(),jz=t.object({order:t.union([t.boolean(),t.lazy(()=>N0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional()}).strict(),abt=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>N0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>lp)]).optional()}).strict(),Zz=t.object({orders:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>ZN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>q0)]).optional()}).strict(),bM=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),q0=t.object({select:t.lazy(()=>Att).nullish()}).strict(),Att=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),vz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>FN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>wN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>ZN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>q0)]).optional()}).strict(),Oz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>UX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>D0)]).optional()}).strict(),F0=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),D0=t.object({select:t.lazy(()=>Stt).nullish()}).strict(),Stt=t.object({tasks:t.boolean().optional()}).strict(),fz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>UX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>D0)]).optional()}).strict(),wz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>E0)]).optional()}).strict(),_0=t.object({select:t.lazy(()=>Nz).optional(),include:t.lazy(()=>wz).optional()}).strict(),E0=t.object({select:t.lazy(()=>Ttt).nullish()}).strict(),Ttt=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),Nz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>qT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>E0)]).optional()}).strict(),Bz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>_0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ibt=t.object({select:t.lazy(()=>qz).optional(),include:t.lazy(()=>Bz).optional()}).strict(),qz=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>_0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Fz=t.object({user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),lbt=t.object({select:t.lazy(()=>Dz).optional(),include:t.lazy(()=>Fz).optional()}).strict(),Dz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),_z=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>gX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>L0)]).optional()}).strict(),hM=t.object({select:t.lazy(()=>Ez).optional(),include:t.lazy(()=>_z).optional()}).strict(),L0=t.object({select:t.lazy(()=>Ptt).nullish()}).strict(),Ptt=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),Ez=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>Ag)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>gX)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>L0)]).optional()}).strict(),Lz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),rbt=t.object({select:t.lazy(()=>Vz).optional(),include:t.lazy(()=>Lz).optional()}).strict(),Vz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Hz=t.object({menu:t.union([t.boolean(),t.lazy(()=>hM)]).optional(),category:t.union([t.boolean(),t.lazy(()=>p0)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>H0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>kX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>xN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>V0)]).optional()}).strict(),rp=t.object({select:t.lazy(()=>Qz).optional(),include:t.lazy(()=>Hz).optional()}).strict(),V0=t.object({select:t.lazy(()=>Utt).nullish()}).strict(),Utt=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),Qz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>hM)]).optional(),category:t.union([t.boolean(),t.lazy(()=>p0)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>hp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>_N)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>H0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>kX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>xN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>ZT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>jT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>MT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>V0)]).optional()}).strict(),Yz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),H0=t.object({select:t.lazy(()=>Gz).optional(),include:t.lazy(()=>Yz).optional()}).strict(),Gz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>rp)]).optional()}).strict(),$z=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),pbt=t.object({select:t.lazy(()=>Jz).optional(),include:t.lazy(()=>$z).optional()}).strict(),Jz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),Kz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),cbt=t.object({select:t.lazy(()=>Xz).optional(),include:t.lazy(()=>Kz).optional()}).strict(),Xz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Kt)]).optional()}).strict(),qe=t.object({AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Fm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ll=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wtt).optional(),_avg:t.lazy(()=>Rtt).optional(),_max:t.lazy(()=>ktt).optional(),_min:t.lazy(()=>xtt).optional(),_sum:t.lazy(()=>jtt).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>Ut),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>zt),t.string()]).optional(),calories:t.union([t.lazy(()=>Ut),t.number()]).optional(),protein:t.union([t.lazy(()=>Ut),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Ut),t.number()]).optional(),fat:t.union([t.lazy(()=>Ut),t.number()]).optional(),fiber:t.union([t.lazy(()=>Ut),t.number()]).optional(),sugar:t.union([t.lazy(()=>Ut),t.number()]).optional(),sodium:t.union([t.lazy(()=>Ut),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>Jn),t.boolean()]).optional()}).strict(),oa=t.object({AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),ub=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mtt).optional(),_avg:t.lazy(()=>Ztt).optional(),_max:t.lazy(()=>vtt).optional(),_min:t.lazy(()=>Ott).optional(),_sum:t.lazy(()=>ftt).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>zt),t.string()]).optional(),threshold:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>zt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Fe=t.object({AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Dm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Vl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>wtt).optional(),_avg:t.lazy(()=>Ntt).optional(),_max:t.lazy(()=>Btt).optional(),_min:t.lazy(()=>qtt).optional(),_sum:t.lazy(()=>Ftt).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>zt),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),na=t.object({AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>MB),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),sb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>MB),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dtt).optional(),_avg:t.lazy(()=>_tt).optional(),_max:t.lazy(()=>Ett).optional(),_min:t.lazy(()=>Ltt).optional(),_sum:t.lazy(()=>Vtt).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>zt),t.string()]).optional(),type:t.union([t.lazy(()=>Htt),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),aa=t.object({AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),yb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qtt).optional(),_avg:t.lazy(()=>Ytt).optional(),_max:t.lazy(()=>Gtt).optional(),_min:t.lazy(()=>$tt).optional(),_sum:t.lazy(()=>Jtt).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>Ut),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>Ut),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ia=t.object({AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),db=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ktt).optional(),_avg:t.lazy(()=>Xtt).optional(),_max:t.lazy(()=>tet).optional(),_min:t.lazy(()=>eet).optional(),_sum:t.lazy(()=>oet).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>Ut),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),la=t.object({AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),zb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>net).optional(),_avg:t.lazy(()=>aet).optional(),_max:t.lazy(()=>iet).optional(),_min:t.lazy(()=>ret).optional(),_sum:t.lazy(()=>pet).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>Ut),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>Ut),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ra=t.object({AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional()}).strict(),mb=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),menuItem:t.lazy(()=>El).optional()}).strict(),bt=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>cet).optional(),_avg:t.lazy(()=>uet).optional(),_max:t.lazy(()=>set).optional(),_min:t.lazy(()=>yet).optional(),_sum:t.lazy(()=>det).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Ut),t.number()]).optional(),total:t.union([t.lazy(()=>Ut),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>ZM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>FI).optional()}).strict(),_m=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>ec).optional(),menuItems:t.lazy(()=>vM).optional()}).strict(),Xt=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>$N)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>$N)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>$N).optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>ZM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>FI).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>zet).optional(),_avg:t.lazy(()=>met).optional(),_max:t.lazy(()=>bet).optional(),_min:t.lazy(()=>het).optional(),_sum:t.lazy(()=>Iet).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ae=t.object({AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>FS).optional(),instructions:t.lazy(()=>OM).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),approvedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict(),$p=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional(),ingredients:t.lazy(()=>ZB).optional(),instructions:t.lazy(()=>D4).optional(),createdBy:t.lazy(()=>eo).optional(),approvedBy:t.lazy(()=>eo).optional()}).strict(),w=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>JN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>JN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>JN).optional(),AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>FS).optional(),instructions:t.lazy(()=>OM).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),approvedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>get).optional(),_avg:t.lazy(()=>Cet).optional(),_max:t.lazy(()=>Aet).optional(),_min:t.lazy(()=>Tet).optional(),_sum:t.lazy(()=>Pet).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>vB),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>DS).optional(),maintenanceLogs:t.lazy(()=>_4).optional()}).strict(),Jp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),recipes:t.lazy(()=>OB).optional(),maintenanceLogs:t.lazy(()=>Uet).optional()}).strict(),Ht=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>vB),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>DS).optional(),maintenanceLogs:t.lazy(()=>_4).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wet).optional(),_avg:t.lazy(()=>Ret).optional(),_max:t.lazy(()=>ket).optional(),_min:t.lazy(()=>xet).optional(),_sum:t.lazy(()=>jet).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>Met),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),pa=t.object({AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>fM),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>E4),t.lazy(()=>Be)]).optional().nullable()}).strict(),bb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),equipment:t.lazy(()=>Jp).optional(),RecipeInstruction:t.lazy(()=>Ym).optional()}).strict(),B=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>KN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>KN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>KN).optional(),AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>fM),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>E4),t.lazy(()=>Be)]).optional().nullable()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Zet).optional(),_avg:t.lazy(()=>vet).optional(),_max:t.lazy(()=>Oet).optional(),_min:t.lazy(()=>fet).optional(),_sum:t.lazy(()=>wet).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable()}).strict(),ca=t.object({AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>fM),t.lazy(()=>Ze)]).optional()}).strict(),hb=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>Jp).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>fM),t.lazy(()=>Ze)]).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Net).optional(),_avg:t.lazy(()=>Bet).optional(),_max:t.lazy(()=>qet).optional(),_min:t.lazy(()=>Fet).optional(),_sum:t.lazy(()=>Det).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>_et),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>zt),t.string()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>zt),t.string()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>wB),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),items:t.lazy(()=>L4).optional(),completions:t.lazy(()=>wM).optional()}).strict(),Kp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),items:t.lazy(()=>Eet).optional(),completions:t.lazy(()=>V4).optional()}).strict(),Qt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>wB),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),items:t.lazy(()=>L4).optional(),completions:t.lazy(()=>wM).optional()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Let).optional(),_avg:t.lazy(()=>Vet).optional(),_max:t.lazy(()=>Het).optional(),_min:t.lazy(()=>Qet).optional(),_sum:t.lazy(()=>Yet).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Get),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>NB),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>NM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>BM).optional()}).strict(),Em=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Kp).optional(),completions:t.lazy(()=>H4).optional()}).strict(),te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>NB),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>NM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>BM).optional()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>$et).optional(),_avg:t.lazy(()=>Jet).optional(),_max:t.lazy(()=>Ket).optional(),_min:t.lazy(()=>Xet).optional(),_sum:t.lazy(()=>tot).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>zt),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>eot),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>NM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>BM).optional()}).strict(),Lm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Kp).optional(),completedBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>H4).optional()}).strict(),lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>NM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>BM).optional()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>oot).optional(),_avg:t.lazy(()=>not).optional(),_max:t.lazy(()=>aot).optional(),_min:t.lazy(()=>iot).optional(),_sum:t.lazy(()=>lot).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ua=t.object({AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Et)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Tl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>Q4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>Y4),t.lazy(()=>Qe)]).optional()}).strict(),Ib=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>Lm).optional(),checklistItem:t.lazy(()=>Em).optional()}).strict(),ht=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Et)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Tl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>Q4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>Y4),t.lazy(()=>Qe)]).optional()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>rot).optional(),_avg:t.lazy(()=>pot).optional(),_max:t.lazy(()=>cot).optional(),_min:t.lazy(()=>uot).optional(),_sum:t.lazy(()=>sot).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>yot),t.lazy(()=>Et)]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Tl).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),sa=t.object({AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>qM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional()}).strict(),gb=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>tc).optional(),ingredient:t.lazy(()=>_l).optional()}).strict(),It=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>qM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional()}).strict()),NV=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dot).optional(),_avg:t.lazy(()=>zot).optional(),_max:t.lazy(()=>mot).optional(),_min:t.lazy(()=>bot).optional(),_sum:t.lazy(()=>hot).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),startDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ya=t.object({AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>qB),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Tl).optional(),status:t.union([t.lazy(()=>FB),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>FM),t.lazy(()=>Tt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict(),Cb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),menuItem:t.lazy(()=>El).optional(),respondedBy:t.lazy(()=>eo).optional()}).strict(),q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>qB),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Tl).optional(),status:t.union([t.lazy(()=>FB),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>FM),t.lazy(()=>Tt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict()),BV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Iot).optional(),_avg:t.lazy(()=>got).optional(),_max:t.lazy(()=>Cot).optional(),_min:t.lazy(()=>Aot).optional(),_sum:t.lazy(()=>Sot).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Tot),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Tl).optional(),status:t.union([t.lazy(()=>Pot),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),da=t.object({AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>FI).optional(),recipes:t.lazy(()=>up).optional(),ingredients:t.lazy(()=>DM).optional()}).strict(),Ab=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>vM).optional(),recipes:t.lazy(()=>_S).optional(),ingredients:t.lazy(()=>G4).optional()}).strict(),F=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>FI).optional(),recipes:t.lazy(()=>up).optional(),ingredients:t.lazy(()=>DM).optional()}).strict()),qV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Uot).optional(),_avg:t.lazy(()=>Wot).optional(),_max:t.lazy(()=>Rot).optional(),_min:t.lazy(()=>kot).optional(),_sum:t.lazy(()=>xot).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),za=t.object({AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>up).optional()}).strict(),Sb=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>_S).optional()}).strict(),Ae=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>up).optional()}).strict()),FV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>jot).optional(),_avg:t.lazy(()=>Mot).optional(),_max:t.lazy(()=>Zot).optional(),_min:t.lazy(()=>vot).optional(),_sum:t.lazy(()=>Oot).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ma=t.object({AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Tb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),menuItem:t.lazy(()=>El).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),DV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fot).optional(),_avg:t.lazy(()=>wot).optional(),_max:t.lazy(()=>Not).optional(),_min:t.lazy(()=>Bot).optional(),_sum:t.lazy(()=>qot).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>zt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ba=t.object({AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Pb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),ingrediente:t.lazy(()=>_l).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),recordedBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),_V=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fot).optional(),_avg:t.lazy(()=>Dot).optional(),_max:t.lazy(()=>_ot).optional(),_min:t.lazy(()=>Eot).optional(),_sum:t.lazy(()=>Lot).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),reason:t.union([t.lazy(()=>zt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>DB),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>ES).optional()}).strict(),Vm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>_B).optional()}).strict(),rt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>DB),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>ES).optional()}).strict()),EV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Vot).optional(),_avg:t.lazy(()=>Hot).optional(),_max:t.lazy(()=>Qot).optional(),_min:t.lazy(()=>Yot).optional(),_sum:t.lazy(()=>Got).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>$ot),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ha=t.object({AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>$4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict(),Ub=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>Vm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>$4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable()}).strict()),LV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jot).optional(),_avg:t.lazy(()=>Kot).optional(),_max:t.lazy(()=>Xot).optional(),_min:t.lazy(()=>tnt).optional(),_sum:t.lazy(()=>ent).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ia=t.object({AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>EB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>J4),t.lazy(()=>Xe)]).optional()}).strict(),Wb=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>Km).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>EB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>J4),t.lazy(()=>Xe)]).optional()}).strict()),VV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ont).optional(),_avg:t.lazy(()=>nnt).optional(),_max:t.lazy(()=>ant).optional(),_min:t.lazy(()=>int).optional(),_sum:t.lazy(()=>lnt).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>rnt),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ga=t.object({AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>LB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Rb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>LB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),HV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>pnt).optional(),_avg:t.lazy(()=>cnt).optional(),_max:t.lazy(()=>unt).optional(),_min:t.lazy(()=>snt).optional(),_sum:t.lazy(()=>ynt).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>dnt),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ca=t.object({AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>VB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),kb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Pe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>VB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),QV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>znt).optional(),_avg:t.lazy(()=>mnt).optional(),_max:t.lazy(()=>bnt).optional(),_min:t.lazy(()=>hnt).optional(),_sum:t.lazy(()=>Int).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>gnt),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Aa=t.object({AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional(),recipe:t.union([t.lazy(()=>K4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),xb=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>Cp).optional(),recipe:t.lazy(()=>oo).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),L=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional(),recipe:t.union([t.lazy(()=>K4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),YV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cnt).optional(),_avg:t.lazy(()=>Ant).optional(),_max:t.lazy(()=>Snt).optional(),_min:t.lazy(()=>Tnt).optional(),_sum:t.lazy(()=>Pnt).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),recipeId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),co=t.object({AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>_M).optional()}).strict(),Hm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),ingredients:t.lazy(()=>X4).optional()}).strict(),pp=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>_M).optional()}).strict()),GV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Unt).optional(),_avg:t.lazy(()=>Wnt).optional(),_max:t.lazy(()=>Rnt).optional(),_min:t.lazy(()=>knt).optional(),_sum:t.lazy(()=>xnt).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable()}).strict(),Sa=t.object({AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),allergen:t.union([t.lazy(()=>t2),t.lazy(()=>co)]).optional()}).strict(),jb=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>_l).optional(),allergen:t.lazy(()=>Hm).optional()}).strict(),gt=t.union([t.object({id:t.number().int(),ingredientId_allergenId:t.lazy(()=>XN)}),t.object({id:t.number().int()}),t.object({ingredientId_allergenId:t.lazy(()=>XN)})]).and(t.object({id:t.number().int().optional(),ingredientId_allergenId:t.lazy(()=>XN).optional(),AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),allergen:t.union([t.lazy(()=>t2),t.lazy(()=>co)]).optional()}).strict()),$V=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>jnt).optional(),_avg:t.lazy(()=>Mnt).optional(),_max:t.lazy(()=>Znt).optional(),_min:t.lazy(()=>vnt).optional(),_sum:t.lazy(()=>Ont).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Ta=t.object({AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional()}).strict(),Mb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>El).optional()}).strict(),Ue=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional()}).strict()),JV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fnt).optional(),_avg:t.lazy(()=>wnt).optional(),_max:t.lazy(()=>Nnt).optional(),_min:t.lazy(()=>Bnt).optional(),_sum:t.lazy(()=>qnt).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>zt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Zb=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ob=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict()),KV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fnt).optional(),_avg:t.lazy(()=>Dnt).optional(),_max:t.lazy(()=>_nt).optional(),_min:t.lazy(()=>Ent).optional(),_sum:t.lazy(()=>Lnt).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>zt),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>e2).optional(),users:t.lazy(()=>EM).optional()}).strict(),Xp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>Vnt).optional(),users:t.lazy(()=>o2).optional()}).strict(),ql=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>e2).optional(),users:t.lazy(()=>EM).optional()}).strict()),XV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hnt).optional(),_avg:t.lazy(()=>Qnt).optional(),_max:t.lazy(()=>Ynt).optional(),_min:t.lazy(()=>Gnt).optional(),_sum:t.lazy(()=>$nt).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ft=t.object({AND:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),OR:t.lazy(()=>Ft).array().optional(),NOT:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>n2),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),items:t.lazy(()=>VS).optional(),transactions:t.lazy(()=>HS).optional(),stockCounts:t.lazy(()=>LM).optional()}).strict(),ip=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),items:t.lazy(()=>HB).optional(),transactions:t.lazy(()=>QB).optional(),stockCounts:t.lazy(()=>a2).optional()}).strict(),$n=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),OR:t.lazy(()=>Ft).array().optional(),NOT:t.union([t.lazy(()=>Ft),t.lazy(()=>Ft).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>n2),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),items:t.lazy(()=>VS).optional(),transactions:t.lazy(()=>HS).optional(),stockCounts:t.lazy(()=>LM).optional()}).strict()),tH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jnt).optional(),_avg:t.lazy(()=>Knt).optional(),_max:t.lazy(()=>Xnt).optional(),_min:t.lazy(()=>tat).optional(),_sum:t.lazy(()=>eat).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>oat),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),N=t.object({AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>VM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>EM).optional(),cookbooks:t.lazy(()=>i2).optional(),inventory:t.union([t.lazy(()=>l2),t.lazy(()=>Ft)]).optional().nullable(),orders:t.lazy(()=>HM).optional(),recipes:t.lazy(()=>up).optional(),menus:t.lazy(()=>r2).optional(),salesTransactions:t.lazy(()=>QM).optional(),leftoverItems:t.lazy(()=>QS).optional(),wasteRecords:t.lazy(()=>YS).optional(),productionPlans:t.lazy(()=>YM).optional(),equipments:t.lazy(()=>p2).optional(),qualityChecklists:t.lazy(()=>c2).optional(),customerFeedbacks:t.lazy(()=>GS).optional()}).strict(),wa=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organization:t.lazy(()=>Xp).optional(),users:t.lazy(()=>o2).optional(),cookbooks:t.lazy(()=>nat).optional(),inventory:t.lazy(()=>ip).optional(),orders:t.lazy(()=>u2).optional(),recipes:t.lazy(()=>_S).optional(),menus:t.lazy(()=>aat).optional(),salesTransactions:t.lazy(()=>s2).optional(),leftoverItems:t.lazy(()=>YB).optional(),wasteRecords:t.lazy(()=>GB).optional(),productionPlans:t.lazy(()=>y2).optional(),equipments:t.lazy(()=>iat).optional(),qualityChecklists:t.lazy(()=>lat).optional(),customerFeedbacks:t.lazy(()=>$B).optional()}).strict(),K=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>VM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>EM).optional(),cookbooks:t.lazy(()=>i2).optional(),inventory:t.union([t.lazy(()=>l2),t.lazy(()=>Ft)]).optional().nullable(),orders:t.lazy(()=>HM).optional(),recipes:t.lazy(()=>up).optional(),menus:t.lazy(()=>r2).optional(),salesTransactions:t.lazy(()=>QM).optional(),leftoverItems:t.lazy(()=>QS).optional(),wasteRecords:t.lazy(()=>YS).optional(),productionPlans:t.lazy(()=>YM).optional(),equipments:t.lazy(()=>p2).optional(),qualityChecklists:t.lazy(()=>c2).optional(),customerFeedbacks:t.lazy(()=>GS).optional()}).strict()),eH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>rat).optional(),_avg:t.lazy(()=>pat).optional(),_max:t.lazy(()=>cat).optional(),_min:t.lazy(()=>uat).optional(),_sum:t.lazy(()=>sat).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>zt),t.string()]).optional(),city:t.union([t.lazy(()=>zt),t.string()]).optional(),zipCode:t.union([t.lazy(()=>zt),t.string()]).optional(),state:t.union([t.lazy(()=>zt),t.string()]).optional(),owner:t.union([t.lazy(()=>zt),t.string()]).optional(),organizationId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable()}).strict(),M=t.object({AND:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),OR:t.lazy(()=>M).array().optional(),NOT:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>VM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>GM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>d2).optional(),prepItems:t.lazy(()=>$S).optional(),inventoryUpdates:t.lazy(()=>VS).optional(),sessions:t.lazy(()=>z2).optional(),passwordResets:t.lazy(()=>m2).optional(),leftoverItems:t.lazy(()=>QS).optional(),wasteRecords:t.lazy(()=>YS).optional(),productionPlans:t.lazy(()=>YM).optional(),productionPlanItems:t.lazy(()=>ES).optional(),availability:t.lazy(()=>b2).optional(),schedulingConstraints:t.lazy(()=>h2).optional(),inventoryWithdrawals:t.lazy(()=>JS).optional(),checklistCompletes:t.lazy(()=>wM).optional(),customerFeedbackResponses:t.lazy(()=>GS).optional(),recipeVersionsCreated:t.lazy(()=>cS).optional(),recipeVersionsApproved:t.lazy(()=>cS).optional(),InventoryTransactions:t.lazy(()=>HS).optional(),StockCounts:t.lazy(()=>LM).optional(),auth:t.lazy(()=>I2).optional()}).strict(),eo=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Xp).optional(),restaurant:t.lazy(()=>wa).optional(),shifts:t.lazy(()=>yat).optional(),prepItems:t.lazy(()=>JB).optional(),inventoryUpdates:t.lazy(()=>HB).optional(),sessions:t.lazy(()=>dat).optional(),passwordResets:t.lazy(()=>zat).optional(),leftoverItems:t.lazy(()=>YB).optional(),wasteRecords:t.lazy(()=>GB).optional(),productionPlans:t.lazy(()=>y2).optional(),productionPlanItems:t.lazy(()=>_B).optional(),availability:t.lazy(()=>mat).optional(),schedulingConstraints:t.lazy(()=>bat).optional(),inventoryWithdrawals:t.lazy(()=>KB).optional(),checklistCompletes:t.lazy(()=>V4).optional(),customerFeedbackResponses:t.lazy(()=>$B).optional(),recipeVersionsCreated:t.lazy(()=>aB).optional(),recipeVersionsApproved:t.lazy(()=>aB).optional(),InventoryTransactions:t.lazy(()=>QB).optional(),StockCounts:t.lazy(()=>a2).optional(),auth:t.lazy(()=>hat).optional()}).strict(),j=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),OR:t.lazy(()=>M).array().optional(),NOT:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>VM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>GM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>d2).optional(),prepItems:t.lazy(()=>$S).optional(),inventoryUpdates:t.lazy(()=>VS).optional(),sessions:t.lazy(()=>z2).optional(),passwordResets:t.lazy(()=>m2).optional(),leftoverItems:t.lazy(()=>QS).optional(),wasteRecords:t.lazy(()=>YS).optional(),productionPlans:t.lazy(()=>YM).optional(),productionPlanItems:t.lazy(()=>ES).optional(),availability:t.lazy(()=>b2).optional(),schedulingConstraints:t.lazy(()=>h2).optional(),inventoryWithdrawals:t.lazy(()=>JS).optional(),checklistCompletes:t.lazy(()=>wM).optional(),customerFeedbackResponses:t.lazy(()=>GS).optional(),recipeVersionsCreated:t.lazy(()=>cS).optional(),recipeVersionsApproved:t.lazy(()=>cS).optional(),InventoryTransactions:t.lazy(()=>HS).optional(),StockCounts:t.lazy(()=>LM).optional(),auth:t.lazy(()=>I2).optional()}).strict()),oH=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Iat).optional(),_avg:t.lazy(()=>gat).optional(),_max:t.lazy(()=>Cat).optional(),_min:t.lazy(()=>Aat).optional(),_sum:t.lazy(()=>Sat).optional()}).strict(),NA=t.object({AND:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),OR:t.lazy(()=>NA).array().optional(),NOT:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>zt),t.string()]).optional(),sub:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>zt),t.string()]).optional(),lastName:t.union([t.lazy(()=>zt),t.string()]).optional(),profileImage:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Pa=t.object({AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>XB),t.lazy(()=>se)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),vb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),We=t.union([t.object({id:t.string().uuid(),userId:t.number().int()}),t.object({id:t.string().uuid()}),t.object({userId:t.number().int()})]).and(t.object({id:t.string().uuid().optional(),userId:t.number().int().optional(),AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>XB),t.lazy(()=>se)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),nH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),_count:t.lazy(()=>Tat).optional(),_avg:t.lazy(()=>Pat).optional(),_max:t.lazy(()=>Uat).optional(),_min:t.lazy(()=>Wat).optional(),_sum:t.lazy(()=>Rat).optional()}).strict(),BA=t.object({AND:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),OR:t.lazy(()=>BA).array().optional(),NOT:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),id:t.union([t.lazy(()=>zt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>zt),t.string()]).optional(),role:t.union([t.lazy(()=>kat),t.lazy(()=>se)]).optional()}).strict(),Ua=t.object({AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Ob=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Re=t.union([t.object({id:t.string().uuid(),verificationCode:t.string(),token:t.string()}),t.object({id:t.string().uuid(),verificationCode:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({verificationCode:t.string(),token:t.string()}),t.object({verificationCode:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),verificationCode:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),aH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>xat).optional(),_avg:t.lazy(()=>jat).optional(),_max:t.lazy(()=>Mat).optional(),_min:t.lazy(()=>Zat).optional(),_sum:t.lazy(()=>vat).optional()}).strict(),qA=t.object({AND:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),OR:t.lazy(()=>qA).array().optional(),NOT:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),id:t.union([t.lazy(()=>zt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>zt),t.string()]).optional(),token:t.union([t.lazy(()=>zt),t.string()]).optional(),verified:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipes:t.lazy(()=>up).optional(),restaurant:t.union([t.lazy(()=>GM),t.lazy(()=>N)]).optional().nullable()}).strict(),Qm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipes:t.lazy(()=>_S).optional(),restaurant:t.lazy(()=>wa).optional()}).strict(),ee=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>up).optional(),restaurant:t.union([t.lazy(()=>GM),t.lazy(()=>N)]).optional().nullable()}).strict()),iH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Oat).optional(),_avg:t.lazy(()=>fat).optional(),_max:t.lazy(()=>wat).optional(),_min:t.lazy(()=>Nat).optional(),_sum:t.lazy(()=>Bat).optional()}).strict(),FA=t.object({AND:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),OR:t.lazy(()=>FA).array().optional(),NOT:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>zt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Tl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>tq),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>eq),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>g2),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>FS).optional(),instructions:t.lazy(()=>OM).optional(),menuItems:t.lazy(()=>FI).optional(),foodCostHistory:t.lazy(()=>C2).optional(),prepHistory:t.lazy(()=>A2).optional(),prepBoards:t.lazy(()=>S2).optional(),prepItems:t.lazy(()=>$S).optional(),menuItemRecipes:t.lazy(()=>$M).optional(),productionPlanItems:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>JS).optional(),tags:t.lazy(()=>T2).optional(),versions:t.lazy(()=>cS).optional(),equipments:t.lazy(()=>DS).optional(),dietaryRestrictions:t.lazy(()=>KS).optional(),temperatures:t.lazy(()=>P2).optional(),yields:t.lazy(()=>U2).optional(),laborCosts:t.lazy(()=>W2).optional(),nutritionalInfo:t.union([t.lazy(()=>R2),t.lazy(()=>qe)]).optional().nullable(),criticalPoints:t.lazy(()=>k2).optional(),storage:t.union([t.lazy(()=>x2),t.lazy(()=>Fe)]).optional().nullable(),photos:t.lazy(()=>j2).optional(),recipeStats:t.union([t.lazy(()=>M2),t.lazy(()=>De)]).optional().nullable()}).strict(),oo=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),cookBook:t.lazy(()=>Qm).optional(),ingredients:t.lazy(()=>ZB).optional(),instructions:t.lazy(()=>D4).optional(),menuItems:t.lazy(()=>vM).optional(),foodCostHistory:t.lazy(()=>qat).optional(),prepHistory:t.lazy(()=>Fat).optional(),prepBoards:t.lazy(()=>Dat).optional(),prepItems:t.lazy(()=>JB).optional(),menuItemRecipes:t.lazy(()=>Z2).optional(),productionPlanItems:t.lazy(()=>_B).optional(),withdrawals:t.lazy(()=>KB).optional(),tags:t.lazy(()=>_at).optional(),versions:t.lazy(()=>aB).optional(),equipments:t.lazy(()=>OB).optional(),dietaryRestrictions:t.lazy(()=>oq).optional(),temperatures:t.lazy(()=>Eat).optional(),yields:t.lazy(()=>Lat).optional(),laborCosts:t.lazy(()=>Vat).optional(),nutritionalInfo:t.lazy(()=>Fm).optional(),criticalPoints:t.lazy(()=>Hat).optional(),storage:t.lazy(()=>Dm).optional(),photos:t.lazy(()=>Qat).optional(),recipeStats:t.lazy(()=>$m).optional()}).strict(),C=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),imageUrls:t.lazy(()=>Tl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>tq),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>eq),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>g2),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>FS).optional(),instructions:t.lazy(()=>OM).optional(),menuItems:t.lazy(()=>FI).optional(),foodCostHistory:t.lazy(()=>C2).optional(),prepHistory:t.lazy(()=>A2).optional(),prepBoards:t.lazy(()=>S2).optional(),prepItems:t.lazy(()=>$S).optional(),menuItemRecipes:t.lazy(()=>$M).optional(),productionPlanItems:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>JS).optional(),tags:t.lazy(()=>T2).optional(),versions:t.lazy(()=>cS).optional(),equipments:t.lazy(()=>DS).optional(),dietaryRestrictions:t.lazy(()=>KS).optional(),temperatures:t.lazy(()=>P2).optional(),yields:t.lazy(()=>U2).optional(),laborCosts:t.lazy(()=>W2).optional(),nutritionalInfo:t.union([t.lazy(()=>R2),t.lazy(()=>qe)]).optional().nullable(),criticalPoints:t.lazy(()=>k2).optional(),storage:t.union([t.lazy(()=>x2),t.lazy(()=>Fe)]).optional().nullable(),photos:t.lazy(()=>j2).optional(),recipeStats:t.union([t.lazy(()=>M2),t.lazy(()=>De)]).optional().nullable()}).strict()),lH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),_count:t.lazy(()=>Yat).optional(),_avg:t.lazy(()=>Gat).optional(),_max:t.lazy(()=>$at).optional(),_min:t.lazy(()=>Jat).optional(),_sum:t.lazy(()=>Kat).optional()}).strict(),DA=t.object({AND:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),OR:t.lazy(()=>DA).array().optional(),NOT:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),imageUrls:t.lazy(()=>Tl).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>zt),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>Xat),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>tit),t.lazy(()=>U)]).optional()}).strict(),jt=t.object({AND:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),OR:t.lazy(()=>jt).array().optional(),NOT:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>FS).optional(),inventoryItems:t.lazy(()=>VS).optional(),orderItems:t.lazy(()=>JM).optional(),vendors:t.lazy(()=>v2).optional(),WasteRecords:t.lazy(()=>YS).optional(),IngredientAllergens:t.lazy(()=>_M).optional(),priceHistory:t.lazy(()=>KM).optional(),DietaryRestrictions:t.lazy(()=>KS).optional()}).strict(),_l=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeIngredients:t.lazy(()=>ZB).optional(),inventoryItems:t.lazy(()=>HB).optional(),orderItems:t.lazy(()=>O2).optional(),vendors:t.lazy(()=>eit).optional(),WasteRecords:t.lazy(()=>GB).optional(),IngredientAllergens:t.lazy(()=>X4).optional(),priceHistory:t.lazy(()=>f2).optional(),DietaryRestrictions:t.lazy(()=>oq).optional()}).strict(),$=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),OR:t.lazy(()=>jt).array().optional(),NOT:t.union([t.lazy(()=>jt),t.lazy(()=>jt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>FS).optional(),inventoryItems:t.lazy(()=>VS).optional(),orderItems:t.lazy(()=>JM).optional(),vendors:t.lazy(()=>v2).optional(),WasteRecords:t.lazy(()=>YS).optional(),IngredientAllergens:t.lazy(()=>_M).optional(),priceHistory:t.lazy(()=>KM).optional(),DietaryRestrictions:t.lazy(()=>KS).optional()}).strict()),rH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>oit).optional(),_avg:t.lazy(()=>nit).optional(),_max:t.lazy(()=>ait).optional(),_min:t.lazy(()=>iit).optional(),_sum:t.lazy(()=>lit).optional()}).strict(),_A=t.object({AND:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),OR:t.lazy(()=>_A).array().optional(),NOT:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),category:t.union([t.lazy(()=>zt),t.string()]).optional(),price:t.union([t.lazy(()=>Ut),t.number()]).optional(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>rit),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable()}).strict(),Wa=t.object({AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>_I).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),recipeVersion:t.union([t.lazy(()=>XM),t.lazy(()=>ae)]).optional().nullable()}).strict(),fb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),ingredient:t.lazy(()=>_l).optional(),recipeVersion:t.lazy(()=>$p).optional()}).strict(),V=t.union([t.object({id:t.number().int(),recipeId_recipeVersionId:t.lazy(()=>YT),recipeId_ingredientId:t.lazy(()=>GT)}),t.object({id:t.number().int(),recipeId_recipeVersionId:t.lazy(()=>YT)}),t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>GT)}),t.object({id:t.number().int()}),t.object({recipeId_recipeVersionId:t.lazy(()=>YT),recipeId_ingredientId:t.lazy(()=>GT)}),t.object({recipeId_recipeVersionId:t.lazy(()=>YT)}),t.object({recipeId_ingredientId:t.lazy(()=>GT)})]).and(t.object({id:t.number().int().optional(),recipeId_recipeVersionId:t.lazy(()=>YT).optional(),recipeId_ingredientId:t.lazy(()=>GT).optional(),AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>_I).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),recipeVersion:t.union([t.lazy(()=>XM),t.lazy(()=>ae)]).optional().nullable()}).strict()),pH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>pit).optional(),_avg:t.lazy(()=>cit).optional(),_max:t.lazy(()=>uit).optional(),_min:t.lazy(()=>sit).optional(),_sum:t.lazy(()=>yit).optional()}).strict(),EA=t.object({AND:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),OR:t.lazy(()=>EA).array().optional(),NOT:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>_I).optional(),isOptional:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>XM),t.lazy(()=>ae)]).optional().nullable(),equipment:t.lazy(()=>DS).optional()}).strict(),Ym=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),RecipeVersion:t.lazy(()=>$p).optional(),equipment:t.lazy(()=>OB).optional()}).strict(),pt=t.union([t.object({id:t.number().int(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>tB)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber_recipeVersionId:t.lazy(()=>tB)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>tB).optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>XM),t.lazy(()=>ae)]).optional().nullable(),equipment:t.lazy(()=>DS).optional()}).strict()),cH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>dit).optional(),_avg:t.lazy(()=>zit).optional(),_max:t.lazy(()=>mit).optional(),_min:t.lazy(()=>bit).optional(),_sum:t.lazy(()=>hit).optional()}).strict(),LA=t.object({AND:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),OR:t.lazy(()=>LA).array().optional(),NOT:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>zt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable()}).strict(),ie=t.object({AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>JS).optional(),stockCounts:t.lazy(()=>tZ).optional()}).strict(),Cp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>ip).optional(),ingredient:t.lazy(()=>_l).optional(),lastUpdatedBy:t.lazy(()=>eo).optional(),transactions:t.lazy(()=>QB).optional(),withdrawals:t.lazy(()=>KB).optional(),stockCounts:t.lazy(()=>w2).optional()}).strict(),f=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>eB)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>eB)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>eB).optional(),AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>DI),t.lazy(()=>M)]).optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>JS).optional(),stockCounts:t.lazy(()=>tZ).optional()}).strict()),uH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Iit).optional(),_avg:t.lazy(()=>git).optional(),_max:t.lazy(()=>Cit).optional(),_min:t.lazy(()=>Ait).optional(),_sum:t.lazy(()=>Sit).optional()}).strict(),VA=t.object({AND:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),OR:t.lazy(()=>VA).array().optional(),NOT:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>Ut),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>Ut),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>Ut),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>Ut),t.number()]).optional(),averageCost:t.union([t.lazy(()=>Ut),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable()}).strict(),Ra=t.object({AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>aq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),item:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),wb=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>ip).optional(),item:t.lazy(()=>Cp).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>aq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),item:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),sH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Tit).optional(),_avg:t.lazy(()=>Pit).optional(),_max:t.lazy(()=>Uit).optional(),_min:t.lazy(()=>Wit).optional(),_sum:t.lazy(()=>Rit).optional()}).strict(),HA=t.object({AND:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),OR:t.lazy(()=>HA).array().optional(),NOT:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>kit),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),previousQty:t.union([t.lazy(()=>Ut),t.number()]).optional(),newQty:t.union([t.lazy(()=>Ut),t.number()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>iq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>tZ).optional()}).strict(),Gm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>ip).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>w2).optional()}).strict(),ct=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>iq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>XS),t.lazy(()=>Ft)]).optional(),createdBy:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),items:t.lazy(()=>tZ).optional()}).strict()),yH=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>xit).optional(),_avg:t.lazy(()=>jit).optional(),_max:t.lazy(()=>Mit).optional(),_min:t.lazy(()=>Zit).optional(),_sum:t.lazy(()=>vit).optional()}).strict(),QA=t.object({AND:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),OR:t.lazy(()=>QA).array().optional(),NOT:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Oit),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable()}).strict(),ka=t.object({AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>N2),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional()}).strict(),Nb=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),stockCount:t.lazy(()=>Gm).optional(),item:t.lazy(()=>Cp).optional()}).strict(),Ct=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>oB)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>oB)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>oB).optional(),AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>N2),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>LS),t.lazy(()=>ie)]).optional()}).strict()),dH=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>fit).optional(),_avg:t.lazy(()=>wit).optional(),_max:t.lazy(()=>Nit).optional(),_min:t.lazy(()=>Bit).optional(),_sum:t.lazy(()=>qit).optional()}).strict(),YA=t.object({AND:t.union([t.lazy(()=>YA),t.lazy(()=>YA).array()]).optional(),OR:t.lazy(()=>YA).array().optional(),NOT:t.union([t.lazy(()=>YA),t.lazy(()=>YA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>Ut),t.number()]).optional(),actualQty:t.union([t.lazy(()=>Ut),t.number()]).optional(),difference:t.union([t.lazy(()=>Ut),t.number()]).optional(),notes:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable()}).strict(),De=t.object({AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),$m=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Hl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),zH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Fit).optional(),_avg:t.lazy(()=>Dit).optional(),_max:t.lazy(()=>_it).optional(),_min:t.lazy(()=>Eit).optional(),_sum:t.lazy(()=>Lit).optional()}).strict(),GA=t.object({AND:t.union([t.lazy(()=>GA),t.lazy(()=>GA).array()]).optional(),OR:t.lazy(()=>GA).array().optional(),NOT:t.union([t.lazy(()=>GA),t.lazy(()=>GA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>Ut),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>Ut),t.number()]).optional(),averageRating:t.union([t.lazy(()=>Ut),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Gr),t.coerce.date()]).optional().nullable()}).strict(),Ke=t.object({AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>lq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>qM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>JM).optional()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),vendor:t.lazy(()=>tc).optional(),items:t.lazy(()=>O2).optional()}).strict(),ut=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>lq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>qM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>JM).optional()}).strict()),mH=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Vit).optional(),_avg:t.lazy(()=>Hit).optional(),_max:t.lazy(()=>Qit).optional(),_min:t.lazy(()=>Yit).optional(),_sum:t.lazy(()=>Git).optional()}).strict(),$A=t.object({AND:t.union([t.lazy(()=>$A),t.lazy(()=>$A).array()]).optional(),OR:t.lazy(()=>$A).array().optional(),NOT:t.union([t.lazy(()=>$A),t.lazy(()=>$A).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>$it),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),xa=t.object({AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>B2),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional()}).strict(),Bb=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>Jm).optional(),ingredient:t.lazy(()=>_l).optional()}).strict(),At=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),orderId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>B2),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>cp),t.lazy(()=>jt)]).optional()}).strict()),bH=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jit).optional(),_avg:t.lazy(()=>Kit).optional(),_max:t.lazy(()=>Xit).optional(),_min:t.lazy(()=>tlt).optional(),_sum:t.lazy(()=>elt).optional()}).strict(),JA=t.object({AND:t.union([t.lazy(()=>JA),t.lazy(()=>JA).array()]).optional(),OR:t.lazy(()=>JA).array().optional(),NOT:t.union([t.lazy(()=>JA),t.lazy(()=>JA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Ut),t.number()]).optional(),unit:t.union([t.lazy(()=>zt),t.string()]).optional(),price:t.union([t.lazy(()=>Ut),t.number()]).optional()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>HM).optional(),ingredients:t.lazy(()=>DM).optional(),supplierPriceHistory:t.lazy(()=>KM).optional()}).strict(),tc=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>u2).optional(),ingredients:t.lazy(()=>G4).optional(),supplierPriceHistory:t.lazy(()=>f2).optional()}).strict(),Yt=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>HM).optional(),ingredients:t.lazy(()=>DM).optional(),supplierPriceHistory:t.lazy(()=>KM).optional()}).strict()),hH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>olt).optional(),_avg:t.lazy(()=>nlt).optional(),_max:t.lazy(()=>alt).optional(),_min:t.lazy(()=>ilt).optional(),_sum:t.lazy(()=>llt).optional()}).strict(),KA=t.object({AND:t.union([t.lazy(()=>KA),t.lazy(()=>KA).array()]).optional(),OR:t.lazy(()=>KA).array().optional(),NOT:t.union([t.lazy(()=>KA),t.lazy(()=>KA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),contact:t.union([t.lazy(()=>zt),t.string()]).optional(),email:t.union([t.lazy(()=>zt),t.string()]).optional(),phone:t.union([t.lazy(()=>zt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Xe=t.object({AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>rq),t.lazy(()=>Vt)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),tasks:t.lazy(()=>q2).optional()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional(),tasks:t.lazy(()=>rlt).optional()}).strict(),oe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>rq),t.lazy(()=>Vt)]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional(),tasks:t.lazy(()=>q2).optional()}).strict()),IH=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>plt).optional(),_avg:t.lazy(()=>clt).optional(),_max:t.lazy(()=>ult).optional(),_min:t.lazy(()=>slt).optional(),_sum:t.lazy(()=>ylt).optional()}).strict(),XA=t.object({AND:t.union([t.lazy(()=>XA),t.lazy(()=>XA).array()]).optional(),OR:t.lazy(()=>XA).array().optional(),NOT:t.union([t.lazy(()=>XA),t.lazy(()=>XA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>dlt),t.lazy(()=>Vt)]).optional()}).strict(),to=t.object({AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>up).optional(),prepItems:t.lazy(()=>$S).optional()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>_S).optional(),prepItems:t.lazy(()=>JB).optional()}).strict(),ne=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>up).optional(),prepItems:t.lazy(()=>$S).optional()}).strict()),gH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>zlt).optional(),_avg:t.lazy(()=>mlt).optional(),_max:t.lazy(()=>blt).optional(),_min:t.lazy(()=>hlt).optional(),_sum:t.lazy(()=>Ilt).optional()}).strict(),tS=t.object({AND:t.union([t.lazy(()=>tS),t.lazy(()=>tS).array()]).optional(),OR:t.lazy(()=>tS).array().optional(),NOT:t.union([t.lazy(()=>tS),t.lazy(()=>tS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),status:t.union([t.lazy(()=>F2),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ja=t.object({AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>D2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),qb=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>Xm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),Q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>D2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),CH=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>glt).optional(),_avg:t.lazy(()=>Clt).optional(),_max:t.lazy(()=>Alt).optional(),_min:t.lazy(()=>Slt).optional(),_sum:t.lazy(()=>Tlt).optional()}).strict(),eS=t.object({AND:t.union([t.lazy(()=>eS),t.lazy(()=>eS).array()]).optional(),OR:t.lazy(()=>eS).array().optional(),NOT:t.union([t.lazy(()=>eS),t.lazy(()=>eS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>F2),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Ma=t.object({AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict(),Fb=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),ke=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>we),t.lazy(()=>M)]).optional()}).strict()),AH=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Plt).optional(),_avg:t.lazy(()=>Ult).optional(),_max:t.lazy(()=>Wlt).optional(),_min:t.lazy(()=>Rlt).optional(),_sum:t.lazy(()=>klt).optional()}).strict(),oS=t.object({AND:t.union([t.lazy(()=>oS),t.lazy(()=>oS).array()]).optional(),OR:t.lazy(()=>oS).array().optional(),NOT:t.union([t.lazy(()=>oS),t.lazy(()=>oS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>zt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>FI).optional(),MenuCategory:t.lazy(()=>_2).optional()}).strict(),ec=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>wa).optional(),menuItems:t.lazy(()=>vM).optional(),MenuCategory:t.lazy(()=>xlt).optional()}).strict(),Gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>FI).optional(),MenuCategory:t.lazy(()=>_2).optional()}).strict()),SH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>jlt).optional(),_avg:t.lazy(()=>Mlt).optional(),_max:t.lazy(()=>Zlt).optional(),_min:t.lazy(()=>vlt).optional(),_sum:t.lazy(()=>Olt).optional()}).strict(),nS=t.object({AND:t.union([t.lazy(()=>nS),t.lazy(()=>nS).array()]).optional(),OR:t.lazy(()=>nS).array().optional(),NOT:t.union([t.lazy(()=>nS),t.lazy(()=>nS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Za=t.object({AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Db=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>El).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),St=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>nB)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>nB)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>nB).optional(),AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>qI),t.lazy(()=>Tt)]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),TH=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>flt).optional(),_avg:t.lazy(()=>wlt).optional(),_max:t.lazy(()=>Nlt).optional(),_min:t.lazy(()=>Blt).optional(),_sum:t.lazy(()=>qlt).optional()}).strict(),aS=t.object({AND:t.union([t.lazy(()=>aS),t.lazy(()=>aS).array()]).optional(),OR:t.lazy(()=>aS).array().optional(),NOT:t.union([t.lazy(()=>aS),t.lazy(()=>aS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Tt=t.object({AND:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),OR:t.lazy(()=>Tt).array().optional(),NOT:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>_I).optional(),recipeServingsAmount:t.lazy(()=>Lb).optional(),recipeServingsCost:t.lazy(()=>Lb).optional(),allergens:t.lazy(()=>Tl).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>ZM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>E2),t.lazy(()=>Ne)]).optional().nullable(),recipes:t.lazy(()=>up).optional(),menuItemRecipes:t.lazy(()=>$M).optional(),nutritionalInfo:t.union([t.lazy(()=>L2),t.lazy(()=>_e)]).optional().nullable(),recommendations:t.lazy(()=>V2).optional(),salesTransactions:t.lazy(()=>QM).optional(),leftoverItems:t.lazy(()=>QS).optional(),feedback:t.lazy(()=>GS).optional(),dietaryRestrictions:t.lazy(()=>KS).optional()}).strict(),El=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),menu:t.lazy(()=>ec).optional(),category:t.lazy(()=>_m).optional(),recipes:t.lazy(()=>_S).optional(),menuItemRecipes:t.lazy(()=>Z2).optional(),nutritionalInfo:t.lazy(()=>tb).optional(),recommendations:t.lazy(()=>Flt).optional(),salesTransactions:t.lazy(()=>s2).optional(),leftoverItems:t.lazy(()=>YB).optional(),feedback:t.lazy(()=>$B).optional(),dietaryRestrictions:t.lazy(()=>oq).optional()}).strict(),x=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),OR:t.lazy(()=>Tt).array().optional(),NOT:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>_I).optional(),recipeServingsAmount:t.lazy(()=>Lb).optional(),recipeServingsCost:t.lazy(()=>Lb).optional(),allergens:t.lazy(()=>Tl).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>ZM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>E2),t.lazy(()=>Ne)]).optional().nullable(),recipes:t.lazy(()=>up).optional(),menuItemRecipes:t.lazy(()=>$M).optional(),nutritionalInfo:t.union([t.lazy(()=>L2),t.lazy(()=>_e)]).optional().nullable(),recommendations:t.lazy(()=>V2).optional(),salesTransactions:t.lazy(()=>QM).optional(),leftoverItems:t.lazy(()=>QS).optional(),feedback:t.lazy(()=>GS).optional(),dietaryRestrictions:t.lazy(()=>KS).optional()}).strict()),PH=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Dlt).optional(),_avg:t.lazy(()=>_lt).optional(),_max:t.lazy(()=>Elt).optional(),_min:t.lazy(()=>Llt).optional(),_sum:t.lazy(()=>Vlt).optional()}).strict(),iS=t.object({AND:t.union([t.lazy(()=>iS),t.lazy(()=>iS).array()]).optional(),OR:t.lazy(()=>iS).array().optional(),NOT:t.union([t.lazy(()=>iS),t.lazy(()=>iS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>zt),t.string()]).optional(),description:t.union([t.lazy(()=>Rt),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>Ut),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Ut),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),recipeIds:t.lazy(()=>_I).optional(),recipeServingsAmount:t.lazy(()=>Lb).optional(),recipeServingsCost:t.lazy(()=>Lb).optional(),allergens:t.lazy(()=>Tl).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable()}).strict(),_e=t.object({AND:t.union([t.lazy(()=>_e),t.lazy(()=>_e).array()]).optional(),OR:t.lazy(()=>_e).array().optional(),NOT:t.union([t.lazy(()=>_e),t.lazy(()=>_e).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>FM),t.lazy(()=>Tt)]).optional().nullable()}).strict(),tb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>El).optional()}).strict(),Ql=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>_e),t.lazy(()=>_e).array()]).optional(),OR:t.lazy(()=>_e).array().optional(),NOT:t.union([t.lazy(()=>_e),t.lazy(()=>_e).array()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>FM),t.lazy(()=>Tt)]).optional().nullable()}).strict()),UH=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hlt).optional(),_avg:t.lazy(()=>Qlt).optional(),_max:t.lazy(()=>Ylt).optional(),_min:t.lazy(()=>Glt).optional(),_sum:t.lazy(()=>$lt).optional()}).strict(),lS=t.object({AND:t.union([t.lazy(()=>lS),t.lazy(()=>lS).array()]).optional(),OR:t.lazy(()=>lS).array().optional(),NOT:t.union([t.lazy(()=>lS),t.lazy(()=>lS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>fa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Ut),t.number()]).optional(),fat:t.union([t.lazy(()=>Ut),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>Ut),t.number()]).optional(),transFat:t.union([t.lazy(()=>Ut),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>Ut),t.number()]).optional(),sodium:t.union([t.lazy(()=>Ut),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Ut),t.number()]).optional(),fiber:t.union([t.lazy(()=>Ut),t.number()]).optional(),sugar:t.union([t.lazy(()=>Ut),t.number()]).optional(),protein:t.union([t.lazy(()=>Ut),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),va=t.object({AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),_b=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),xe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),WH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Jlt).optional(),_avg:t.lazy(()=>Klt).optional(),_max:t.lazy(()=>Xlt).optional(),_min:t.lazy(()=>trt).optional(),_sum:t.lazy(()=>ert).optional()}).strict(),rS=t.object({AND:t.union([t.lazy(()=>rS),t.lazy(()=>rS).array()]).optional(),OR:t.lazy(()=>rS).array().optional(),NOT:t.union([t.lazy(()=>rS),t.lazy(()=>rS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>Ut),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Oa=t.object({AND:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),OR:t.lazy(()=>Oa).array().optional(),NOT:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict(),Eb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),je=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),OR:t.lazy(()=>Oa).array().optional(),NOT:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>de),t.lazy(()=>v)]).optional()}).strict()),RH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ort).optional(),_avg:t.lazy(()=>nrt).optional(),_max:t.lazy(()=>art).optional(),_min:t.lazy(()=>irt).optional(),_sum:t.lazy(()=>lrt).optional()}).strict(),pS=t.object({AND:t.union([t.lazy(()=>pS),t.lazy(()=>pS).array()]).optional(),OR:t.lazy(()=>pS).array().optional(),NOT:t.union([t.lazy(()=>pS),t.lazy(()=>pS).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Q0=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.lazy(()=>rrt)}).strict(),Y0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),G0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipe:t.lazy(()=>prt).optional()}).strict(),$0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),RP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),J0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),K0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),X0=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>crt)}).strict(),tY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eY=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>urt).optional()}).strict(),oY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iB=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aY=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>srt)}).strict(),iY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lY=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>yrt).optional()}).strict(),rY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pY=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uY=t.object({url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>drt)}).strict(),sY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yY=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>zrt).optional()}).strict(),dY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lB=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mY=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mrt)}).strict(),bY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hY=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>brt).optional()}).strict(),IY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rB=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CY=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>hrt)}).strict(),AY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SY=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Irt).optional()}).strict(),TY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pB=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UY=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>grt)}).strict(),WY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RY=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Crt).optional()}).strict(),kY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cB=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jY=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>H2),menuItem:t.lazy(()=>Q2)}).strict(),MY=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZY=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Y2).optional(),menuItem:t.lazy(()=>G2).optional()}).strict(),vY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IM=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fY=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>$2),menuItems:t.lazy(()=>J2).optional()}).strict(),wY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>K2).optional()}).strict(),NY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>X2).optional(),menuItems:t.lazy(()=>t5).optional()}).strict(),BY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>e5).optional()}).strict(),fP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FY=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>pP),ingredients:t.lazy(()=>cP).optional(),instructions:t.lazy(()=>uP).optional(),createdBy:t.lazy(()=>sP),approvedBy:t.lazy(()=>yP).optional()}).strict(),DY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>dP).optional(),instructions:t.lazy(()=>zP).optional()}).strict(),_Y=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>mP).optional(),ingredients:t.lazy(()=>bP).optional(),instructions:t.lazy(()=>hP).optional(),createdBy:t.lazy(()=>IP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),EY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),wP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$T=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VY=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>pq),recipes:t.lazy(()=>cq).optional(),maintenanceLogs:t.lazy(()=>uq).optional()}).strict(),HY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>sq).optional(),maintenanceLogs:t.lazy(()=>yq).optional()}).strict(),QY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional(),maintenanceLogs:t.lazy(()=>mq).optional()}).strict(),YY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>bq).optional(),maintenanceLogs:t.lazy(()=>hq).optional()}).strict(),NP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$Y=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Iq),equipment:t.lazy(()=>gq),RecipeInstruction:t.lazy(()=>Cq).optional()}).strict(),JY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),KY=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Aq).optional(),equipment:t.lazy(()=>Sq).optional(),RecipeInstruction:t.lazy(()=>Tq).optional()}).strict(),XY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),BP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),JT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),tG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),eG=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>Art)}).strict(),oG=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>Srt).optional()}).strict(),aG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yB=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lG=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Pq),items:t.lazy(()=>Uq).optional(),completions:t.lazy(()=>Wq).optional()}).strict(),rG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Rq).optional(),completions:t.lazy(()=>kq).optional()}).strict(),pG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xq).optional(),items:t.lazy(()=>jq).optional(),completions:t.lazy(()=>Mq).optional()}).strict(),cG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Zq).optional(),completions:t.lazy(()=>vq).optional()}).strict(),FP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sG=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>o5),completions:t.lazy(()=>n5).optional()}).strict(),yG=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>a5).optional()}).strict(),dG=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>i5).optional(),completions:t.lazy(()=>l5).optional()}).strict(),zG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>r5).optional()}).strict(),DP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zB=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bG=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>Oq),completedBy:t.lazy(()=>fq),items:t.lazy(()=>wq).optional()}).strict(),hG=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Nq).optional()}).strict(),IG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>Bq).optional(),completedBy:t.lazy(()=>qq).optional(),items:t.lazy(()=>Fq).optional()}).strict(),gG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Dq).optional()}).strict(),_P=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AG=t.object({status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>p5),checklistItem:t.lazy(()=>c5)}).strict(),SG=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TG=t.object({status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>u5).optional(),checklistItem:t.lazy(()=>s5).optional()}).strict(),PG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CM=t.object({status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WG=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>y5),ingredient:t.lazy(()=>d5)}).strict(),RG=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kG=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>z5).optional(),ingredient:t.lazy(()=>m5).optional()}).strict(),xG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AM=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MG=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_q),menuItem:t.lazy(()=>Eq).optional(),respondedBy:t.lazy(()=>Lq).optional()}).strict(),ZG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vG=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Vq).optional(),menuItem:t.lazy(()=>Hq).optional(),respondedBy:t.lazy(()=>Qq).optional()}).strict(),OG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KT=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wG=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Yq).optional(),recipes:t.lazy(()=>Gq).optional(),ingredients:t.lazy(()=>$q).optional()}).strict(),NG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Jq).optional(),recipes:t.lazy(()=>Kq).optional(),ingredients:t.lazy(()=>Xq).optional()}).strict(),BG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>tF).optional(),recipes:t.lazy(()=>eF).optional(),ingredients:t.lazy(()=>oF).optional()}).strict(),qG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>nF).optional(),recipes:t.lazy(()=>aF).optional(),ingredients:t.lazy(()=>iF).optional()}).strict(),HP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XT=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DG=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Trt).optional()}).strict(),_G=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Prt).optional()}).strict(),EG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Urt).optional()}).strict(),LG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Wrt).optional()}).strict(),QP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>lF),menuItem:t.lazy(()=>rF),recordedBy:t.lazy(()=>pF)}).strict(),QG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>cF).optional(),menuItem:t.lazy(()=>uF).optional(),recordedBy:t.lazy(()=>sF).optional()}).strict(),GG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tP=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$G=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yF),ingrediente:t.lazy(()=>dF),recordedBy:t.lazy(()=>zF)}).strict(),KG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mF).optional(),ingrediente:t.lazy(()=>bF).optional(),recordedBy:t.lazy(()=>hF).optional()}).strict(),t1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eP=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o1=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IF),createdBy:t.lazy(()=>gF),items:t.lazy(()=>CF).optional()}).strict(),n1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>AF).optional()}).strict(),a1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>SF).optional(),createdBy:t.lazy(()=>TF).optional(),items:t.lazy(()=>PF).optional()}).strict(),i1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>UF).optional()}).strict(),$P=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r1=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>WF),recipe:t.lazy(()=>RF),assignedTo:t.lazy(()=>kF).optional()}).strict(),p1=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),c1=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>xF).optional(),recipe:t.lazy(()=>jF).optional(),assignedTo:t.lazy(()=>MF).optional()}).strict(),u1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oP=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y1=t.object({taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>Rrt)}).strict(),d1=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z1=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>krt).optional()}).strict(),m1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bB=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h1=t.object({dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>xrt)}).strict(),I1=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),g1=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>jrt).optional()}).strict(),C1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hB=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S1=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Mrt)}).strict(),T1=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),P1=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Zrt).optional()}).strict(),U1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tU=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IB=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R1=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>ZF),recipe:t.lazy(()=>vF).optional(),createdBy:t.lazy(()=>OF)}).strict(),k1=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x1=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>fF).optional(),recipe:t.lazy(()=>wF).optional(),createdBy:t.lazy(()=>NF).optional()}).strict(),j1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eU=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nP=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z1=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>vrt).optional()}).strict(),v1=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Ort).optional()}).strict(),O1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>frt).optional()}).strict(),f1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>wrt).optional()}).strict(),oU=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),w1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),N1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),B1=t.object({ingredient:t.lazy(()=>b5),allergen:t.lazy(()=>h5)}).strict(),q1=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),F1=t.object({ingredient:t.lazy(()=>I5).optional(),allergen:t.lazy(()=>g5).optional()}).strict(),D1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),nU=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),TM=t.object({}).strict(),_1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),E1=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Nrt)}).strict(),L1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),V1=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Brt).optional()}).strict(),H1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aU=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gB=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y1=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G1=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iU=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),K1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>C5).optional(),users:t.lazy(()=>A5).optional()}).strict(),e9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>S5).optional(),users:t.lazy(()=>T5).optional()}).strict(),o9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>P5).optional(),users:t.lazy(()=>U5).optional()}).strict(),n9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>W5).optional(),users:t.lazy(()=>R5).optional()}).strict(),lU=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),a9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),l9=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eZ),items:t.lazy(()=>oZ).optional(),transactions:t.lazy(()=>nZ).optional(),stockCounts:t.lazy(()=>aZ).optional()}).strict(),r9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>iZ).optional(),transactions:t.lazy(()=>lZ).optional(),stockCounts:t.lazy(()=>rZ).optional()}).strict(),p9=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pZ).optional(),items:t.lazy(()=>cZ).optional(),transactions:t.lazy(()=>uZ).optional(),stockCounts:t.lazy(()=>sZ).optional()}).strict(),c9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>yZ).optional(),transactions:t.lazy(()=>dZ).optional(),stockCounts:t.lazy(()=>zZ).optional()}).strict(),rU=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u9=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),d9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),z9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),m9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),pU=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),CB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),b9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),h9=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),I9=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),g9=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),C9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),cU=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PM=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S9=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional(),user:t.lazy(()=>qrt)}).strict(),T9=t.object({id:t.string().uuid().optional(),userId:t.number().int(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),P9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional(),user:t.lazy(()=>Frt).optional()}).strict(),U9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),uU=t.object({id:t.string().uuid().optional(),userId:t.number().int(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),AB=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),W9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),R9=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>Drt)}).strict(),k9=t.object({id:t.string().uuid().optional(),userId:t.number().int(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),x9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>_rt).optional()}).strict(),j9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sU=t.object({id:t.string().uuid().optional(),userId:t.number().int(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),SB=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M9=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>k5).optional(),restaurant:t.lazy(()=>x5).optional()}).strict(),v9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>j5).optional()}).strict(),O9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>M5).optional(),restaurant:t.lazy(()=>Z5).optional()}).strict(),f9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>v5).optional()}).strict(),yU=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),TB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),w9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),N9=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),B9=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),q9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),F9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),dU=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),BI=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),D9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),_9=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),E9=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),L9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),V9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),zU=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),UM=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),H9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Q9=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>BF),ingredient:t.lazy(()=>qF),recipeVersion:t.lazy(()=>FF).optional()}).strict(),Y9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),G9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DF).optional(),ingredient:t.lazy(()=>_F).optional(),recipeVersion:t.lazy(()=>EF).optional()}).strict(),$9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),mU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),aP=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),K9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>LF),RecipeVersion:t.lazy(()=>VF).optional(),equipment:t.lazy(()=>HF).optional()}).strict(),X9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>QF).optional()}).strict(),t$=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>YF).optional(),RecipeVersion:t.lazy(()=>GF).optional(),equipment:t.lazy(()=>$F).optional()}).strict(),e$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>JF).optional()}).strict(),bU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),WM=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),o$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),n$=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),ingredient:t.lazy(()=>oT),lastUpdatedBy:t.lazy(()=>nT).optional(),transactions:t.lazy(()=>aT).optional(),withdrawals:t.lazy(()=>iT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),a$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),withdrawals:t.lazy(()=>pT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),i$=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),ingredient:t.lazy(()=>sT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),l$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),withdrawals:t.lazy(()=>hT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),hU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),iP=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),r$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),p$=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>KF),item:t.lazy(()=>XF),createdBy:t.lazy(()=>tD)}).strict(),c$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),u$=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>eD).optional(),item:t.lazy(()=>oD).optional(),createdBy:t.lazy(()=>nD).optional()}).strict(),s$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),lP=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),d$=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>aD),createdBy:t.lazy(()=>iD),items:t.lazy(()=>lD).optional()}).strict(),z$=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>rD).optional()}).strict(),m$=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>pD).optional(),createdBy:t.lazy(()=>cD).optional(),items:t.lazy(()=>uD).optional()}).strict(),b$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>sD).optional()}).strict(),gU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),RM=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),h$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),I$=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>O5),item:t.lazy(()=>f5)}).strict(),g$=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),C$=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>w5).optional(),item:t.lazy(()=>N5).optional()}).strict(),A$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),CU=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),kM=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),S$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),T$=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>Ert)}).strict(),P$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),U$=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Lrt).optional()}).strict(),W$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),AU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),R$=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),k$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),x$=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yD),vendor:t.lazy(()=>dD),items:t.lazy(()=>zD).optional()}).strict(),j$=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>mD).optional()}).strict(),M$=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bD).optional(),vendor:t.lazy(()=>hD).optional(),items:t.lazy(()=>ID).optional()}).strict(),Z$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>gD).optional()}).strict(),SU=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xM=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O$=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>B5),ingredient:t.lazy(()=>q5)}).strict(),f$=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),w$=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>F5).optional(),ingredient:t.lazy(()=>D5).optional()}).strict(),N$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),TU=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),jM=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),B$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),q$=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>CD).optional(),ingredients:t.lazy(()=>AD).optional(),supplierPriceHistory:t.lazy(()=>SD).optional()}).strict(),F$=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>TD).optional(),ingredients:t.lazy(()=>PD).optional(),supplierPriceHistory:t.lazy(()=>UD).optional()}).strict(),D$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>WD).optional(),ingredients:t.lazy(()=>RD).optional(),supplierPriceHistory:t.lazy(()=>kD).optional()}).strict(),_$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>xD).optional(),ingredients:t.lazy(()=>jD).optional(),supplierPriceHistory:t.lazy(()=>MD).optional()}).strict(),PU=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L$=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),user:t.lazy(()=>_5),tasks:t.lazy(()=>E5).optional()}).strict(),V$=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>L5).optional()}).strict(),H$=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional(),user:t.lazy(()=>V5).optional(),tasks:t.lazy(()=>H5).optional()}).strict(),Q$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional(),tasks:t.lazy(()=>Q5).optional()}).strict(),UU=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),UB=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional()}).strict(),Y$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional()}).strict(),G$=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Y5).optional(),prepItems:t.lazy(()=>G5).optional()}).strict(),$$=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>$5).optional(),prepItems:t.lazy(()=>J5).optional()}).strict(),J$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>K5).optional(),prepItems:t.lazy(()=>X5).optional()}).strict(),K$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>t6).optional(),prepItems:t.lazy(()=>e6).optional()}).strict(),WU=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t4=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>ZD),recipe:t.lazy(()=>vD),assignedTo:t.lazy(()=>OD)}).strict(),e4=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),o4=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>fD).optional(),recipe:t.lazy(()=>wD).optional(),assignedTo:t.lazy(()=>ND).optional()}).strict(),n4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),RU=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),rP=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),a4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),i4=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Vrt)}).strict(),l4=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),r4=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Hrt).optional()}).strict(),p4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kU=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RB=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u4=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),menuItems:t.lazy(()=>qD).optional(),MenuCategory:t.lazy(()=>FD).optional()}).strict(),s4=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>DD).optional(),MenuCategory:t.lazy(()=>_D).optional()}).strict(),y4=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),menuItems:t.lazy(()=>LD).optional(),MenuCategory:t.lazy(()=>VD).optional()}).strict(),d4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>HD).optional(),MenuCategory:t.lazy(()=>QD).optional()}).strict(),xU=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m4=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>o6),recipe:t.lazy(()=>n6)}).strict(),b4=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),h4=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>a6).optional(),recipe:t.lazy(()=>i6).optional()}).strict(),I4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jU=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),MM=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C4=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),A4=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),S4=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),T4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),MU=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),qS=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional()}).strict(),P4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),U4=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Qrt).optional()}).strict(),W4=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R4=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Yrt).optional()}).strict(),k4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZU=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x4=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M4=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Grt)}).strict(),Z4=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v4=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>$rt).optional()}).strict(),O4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xB=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w4=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Jrt)}).strict(),N4=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),B4=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Krt).optional()}).strict(),q4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jB=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>nt)]).optional()}).strict(),R=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>np)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>sM).optional(),not:t.union([t.string(),t.lazy(()=>uS)]).optional()}).strict(),mt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>sS)]).optional()}).strict(),de=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),Rtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),ktt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>l6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>np).optional(),_sum:t.lazy(()=>nt).optional(),_min:t.lazy(()=>nt).optional(),_max:t.lazy(()=>nt).optional()}).strict(),Ut=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>r6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>np).optional(),_sum:t.lazy(()=>np).optional(),_min:t.lazy(()=>np).optional(),_max:t.lazy(()=>np).optional()}).strict(),zt=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>sM).optional(),not:t.union([t.string(),t.lazy(()=>p6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),Jn=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>c6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),et=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>ap)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>sM).optional(),not:t.union([t.string(),t.lazy(()=>yS)]).optional().nullable()}).strict(),z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>dS)]).optional()}).strict(),g=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>XX).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),vtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Kn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>u6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_avg:t.lazy(()=>ap).optional(),_sum:t.lazy(()=>ap).optional(),_min:t.lazy(()=>ap).optional(),_max:t.lazy(()=>ap).optional()}).strict(),Rt=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>sM).optional(),not:t.union([t.string(),t.lazy(()=>s6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),Z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>y6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),Btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ftt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),MB=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>zS)]).optional()}).strict(),at=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Sl)]).optional().nullable()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ltt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),Htt=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>d6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>zS).optional(),_max:t.lazy(()=>zS).optional()}).strict(),fa=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>z6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_avg:t.lazy(()=>ap).optional(),_sum:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>Sl).optional(),_max:t.lazy(()=>Sl).optional()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$tt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),Ktt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),net=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Xn=t.object({is:t.lazy(()=>N).optional(),isNot:t.lazy(()=>N).optional()}).strict(),qI=t.object({is:t.lazy(()=>Tt).optional(),isNot:t.lazy(()=>Tt).optional()}).strict(),cet=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),uet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),set=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),ZM=t.object({is:t.lazy(()=>fe).optional(),isNot:t.lazy(()=>fe).optional()}).strict(),FI=t.object({every:t.lazy(()=>Tt).optional(),some:t.lazy(()=>Tt).optional(),none:t.lazy(()=>Tt).optional()}).strict(),vM=t.object({_count:t.lazy(()=>e).optional()}).strict(),$N=t.object({menuId:t.number(),name:t.string()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),met=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),het=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),$t=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>mS)]).optional().nullable()}).strict(),FS=t.object({every:t.lazy(()=>Wa).optional(),some:t.lazy(()=>Wa).optional(),none:t.lazy(()=>Wa).optional()}).strict(),OM=t.object({every:t.lazy(()=>Be).optional(),some:t.lazy(()=>Be).optional(),none:t.lazy(()=>Be).optional()}).strict(),we=t.object({is:t.lazy(()=>M).optional(),isNot:t.lazy(()=>M).optional()}).strict(),DI=t.object({is:t.lazy(()=>M).optional().nullable(),isNot:t.lazy(()=>M).optional().nullable()}).strict(),ZB=t.object({_count:t.lazy(()=>e).optional()}).strict(),D4=t.object({_count:t.lazy(()=>e).optional()}).strict(),JN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Aet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Gr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>m6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),vB=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>bS)]).optional()}).strict(),DS=t.object({every:t.lazy(()=>pa).optional(),some:t.lazy(()=>pa).optional(),none:t.lazy(()=>pa).optional()}).strict(),_4=t.object({every:t.lazy(()=>ca).optional(),some:t.lazy(()=>ca).optional(),none:t.lazy(()=>ca).optional()}).strict(),OB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Uet=t.object({_count:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ret=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),ket=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Met=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>b6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),fM=t.object({is:t.lazy(()=>Ze).optional(),isNot:t.lazy(()=>Ze).optional()}).strict(),E4=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),KN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),Zet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),vet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),fet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),fB=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>hS)]).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Det=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),_et=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>h6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),wB=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>IS)]).optional()}).strict(),L4=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),wM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),Eet=t.object({_count:t.lazy(()=>e).optional()}).strict(),V4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Get=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>I6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),NB=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>gS)]).optional()}).strict(),NM=t.object({is:t.lazy(()=>ve).optional(),isNot:t.lazy(()=>ve).optional()}).strict(),BM=t.object({every:t.lazy(()=>ua).optional(),some:t.lazy(()=>ua).optional(),none:t.lazy(()=>ua).optional()}).strict(),H4=t.object({_count:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),eot=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>g6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),not=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iot=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),BB=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>CS)]).optional()}).strict(),Tl=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),Q4=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),Y4=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),uot=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),yot=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>C6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),qM=t.object({is:t.lazy(()=>Oe).optional(),isNot:t.lazy(()=>Oe).optional()}).strict(),cp=t.object({is:t.lazy(()=>jt).optional(),isNot:t.lazy(()=>jt).optional()}).strict(),dot=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),mot=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bot=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hot=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),qB=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>AS)]).optional()}).strict(),FB=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>SS)]).optional()}).strict(),FM=t.object({is:t.lazy(()=>Tt).optional().nullable(),isNot:t.lazy(()=>Tt).optional().nullable()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Tot=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>A6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),Pot=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>S6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>SS).optional(),_max:t.lazy(()=>SS).optional()}).strict(),up=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),DM=t.object({every:t.lazy(()=>jt).optional(),some:t.lazy(()=>jt).optional(),none:t.lazy(()=>jt).optional()}).strict(),_S=t.object({_count:t.lazy(()=>e).optional()}).strict(),G4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional()}).strict(),Rot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional()}).strict(),jot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Not=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),DB=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>TS)]).optional()}).strict(),ES=t.object({every:t.lazy(()=>ha).optional(),some:t.lazy(()=>ha).optional(),none:t.lazy(()=>ha).optional()}).strict(),_B=t.object({_count:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),$ot=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>T6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>TS).optional(),_max:t.lazy(()=>TS).optional()}).strict(),$4=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Xot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),EB=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>PS)]).optional()}).strict(),J4=t.object({is:t.lazy(()=>Xe).optional(),isNot:t.lazy(()=>Xe).optional()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),rnt=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>P6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>PS).optional(),_max:t.lazy(()=>PS).optional()}).strict(),LB=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>US)]).optional()}).strict(),pnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),dnt=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>U6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>US).optional(),_max:t.lazy(()=>US).optional()}).strict(),VB=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>WS)]).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),bnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Int=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),gnt=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>W6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>WS).optional(),_max:t.lazy(()=>WS).optional()}).strict(),LS=t.object({is:t.lazy(()=>ie).optional(),isNot:t.lazy(()=>ie).optional()}).strict(),K4=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),Cnt=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ant=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Snt=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),_M=t.object({every:t.lazy(()=>Sa).optional(),some:t.lazy(()=>Sa).optional(),none:t.lazy(()=>Sa).optional()}).strict(),X4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional()}).strict(),t2=t.object({is:t.lazy(()=>co).optional(),isNot:t.lazy(()=>co).optional()}).strict(),XN=t.object({ingredientId:t.number(),allergenId:t.number()}).strict(),jnt=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Znt=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Fnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dnt=t.object({id:t.lazy(()=>e).optional()}).strict(),_nt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ent=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({id:t.lazy(()=>e).optional()}).strict(),e2=t.object({every:t.lazy(()=>N).optional(),some:t.lazy(()=>N).optional(),none:t.lazy(()=>N).optional()}).strict(),EM=t.object({every:t.lazy(()=>M).optional(),some:t.lazy(()=>M).optional(),none:t.lazy(()=>M).optional()}).strict(),Vnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),o2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$nt=t.object({id:t.lazy(()=>e).optional()}).strict(),n2=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>RS)]).optional()}).strict(),VS=t.object({every:t.lazy(()=>ie).optional(),some:t.lazy(()=>ie).optional(),none:t.lazy(()=>ie).optional()}).strict(),HS=t.object({every:t.lazy(()=>Ra).optional(),some:t.lazy(()=>Ra).optional(),none:t.lazy(()=>Ra).optional()}).strict(),LM=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),HB=t.object({_count:t.lazy(()=>e).optional()}).strict(),QB=t.object({_count:t.lazy(()=>e).optional()}).strict(),a2=t.object({_count:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),tat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),oat=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>R6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>RS).optional(),_max:t.lazy(()=>RS).optional()}).strict(),VM=t.object({is:t.lazy(()=>Me).optional().nullable(),isNot:t.lazy(()=>Me).optional().nullable()}).strict(),i2=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),l2=t.object({is:t.lazy(()=>Ft).optional().nullable(),isNot:t.lazy(()=>Ft).optional().nullable()}).strict(),HM=t.object({every:t.lazy(()=>Ke).optional(),some:t.lazy(()=>Ke).optional(),none:t.lazy(()=>Ke).optional()}).strict(),r2=t.object({every:t.lazy(()=>fe).optional(),some:t.lazy(()=>fe).optional(),none:t.lazy(()=>fe).optional()}).strict(),QM=t.object({every:t.lazy(()=>ra).optional(),some:t.lazy(()=>ra).optional(),none:t.lazy(()=>ra).optional()}).strict(),QS=t.object({every:t.lazy(()=>ma).optional(),some:t.lazy(()=>ma).optional(),none:t.lazy(()=>ma).optional()}).strict(),YS=t.object({every:t.lazy(()=>ba).optional(),some:t.lazy(()=>ba).optional(),none:t.lazy(()=>ba).optional()}).strict(),YM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),p2=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),c2=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),GS=t.object({every:t.lazy(()=>ya).optional(),some:t.lazy(()=>ya).optional(),none:t.lazy(()=>ya).optional()}).strict(),nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),u2=t.object({_count:t.lazy(()=>e).optional()}).strict(),aat=t.object({_count:t.lazy(()=>e).optional()}).strict(),s2=t.object({_count:t.lazy(()=>e).optional()}).strict(),YB=t.object({_count:t.lazy(()=>e).optional()}).strict(),GB=t.object({_count:t.lazy(()=>e).optional()}).strict(),y2=t.object({_count:t.lazy(()=>e).optional()}).strict(),iat=t.object({_count:t.lazy(()=>e).optional()}).strict(),lat=t.object({_count:t.lazy(()=>e).optional()}).strict(),$B=t.object({_count:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),cat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),uat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),sat=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),GM=t.object({is:t.lazy(()=>N).optional().nullable(),isNot:t.lazy(()=>N).optional().nullable()}).strict(),d2=t.object({every:t.lazy(()=>Xe).optional(),some:t.lazy(()=>Xe).optional(),none:t.lazy(()=>Xe).optional()}).strict(),$S=t.object({every:t.lazy(()=>ja).optional(),some:t.lazy(()=>ja).optional(),none:t.lazy(()=>ja).optional()}).strict(),z2=t.object({every:t.lazy(()=>Ua).optional(),some:t.lazy(()=>Ua).optional(),none:t.lazy(()=>Ua).optional()}).strict(),m2=t.object({every:t.lazy(()=>Ma).optional(),some:t.lazy(()=>Ma).optional(),none:t.lazy(()=>Ma).optional()}).strict(),b2=t.object({every:t.lazy(()=>ga).optional(),some:t.lazy(()=>ga).optional(),none:t.lazy(()=>ga).optional()}).strict(),h2=t.object({every:t.lazy(()=>Ca).optional(),some:t.lazy(()=>Ca).optional(),none:t.lazy(()=>Ca).optional()}).strict(),JS=t.object({every:t.lazy(()=>Aa).optional(),some:t.lazy(()=>Aa).optional(),none:t.lazy(()=>Aa).optional()}).strict(),cS=t.object({every:t.lazy(()=>ae).optional(),some:t.lazy(()=>ae).optional(),none:t.lazy(()=>ae).optional()}).strict(),I2=t.object({every:t.lazy(()=>Pa).optional(),some:t.lazy(()=>Pa).optional(),none:t.lazy(()=>Pa).optional()}).strict(),yat=t.object({_count:t.lazy(()=>e).optional()}).strict(),JB=t.object({_count:t.lazy(()=>e).optional()}).strict(),dat=t.object({_count:t.lazy(()=>e).optional()}).strict(),zat=t.object({_count:t.lazy(()=>e).optional()}).strict(),mat=t.object({_count:t.lazy(()=>e).optional()}).strict(),bat=t.object({_count:t.lazy(()=>e).optional()}).strict(),KB=t.object({_count:t.lazy(()=>e).optional()}).strict(),aB=t.object({_count:t.lazy(()=>e).optional()}).strict(),hat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),XB=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>kS)]).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),Pat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),Wat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional()}).strict(),Rat=t.object({userId:t.lazy(()=>e).optional()}).strict(),kat=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>k6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>kS).optional(),_max:t.lazy(()=>kS).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),jat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Mat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Zat=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),verificationCode:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),vat=t.object({userId:t.lazy(()=>e).optional()}).strict(),Oat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),fat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),wat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Nat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Bat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),tq=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>xS)]).optional()}).strict(),eq=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>jS)]).optional()}).strict(),g2=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),C2=t.object({every:t.lazy(()=>va).optional(),some:t.lazy(()=>va).optional(),none:t.lazy(()=>va).optional()}).strict(),A2=t.object({every:t.lazy(()=>Oa).optional(),some:t.lazy(()=>Oa).optional(),none:t.lazy(()=>Oa).optional()}).strict(),S2=t.object({every:t.lazy(()=>to).optional(),some:t.lazy(()=>to).optional(),none:t.lazy(()=>to).optional()}).strict(),$M=t.object({every:t.lazy(()=>Za).optional(),some:t.lazy(()=>Za).optional(),none:t.lazy(()=>Za).optional()}).strict(),T2=t.object({every:t.lazy(()=>za).optional(),some:t.lazy(()=>za).optional(),none:t.lazy(()=>za).optional()}).strict(),KS=t.object({every:t.lazy(()=>da).optional(),some:t.lazy(()=>da).optional(),none:t.lazy(()=>da).optional()}).strict(),P2=t.object({every:t.lazy(()=>aa).optional(),some:t.lazy(()=>aa).optional(),none:t.lazy(()=>aa).optional()}).strict(),U2=t.object({every:t.lazy(()=>ia).optional(),some:t.lazy(()=>ia).optional(),none:t.lazy(()=>ia).optional()}).strict(),W2=t.object({every:t.lazy(()=>la).optional(),some:t.lazy(()=>la).optional(),none:t.lazy(()=>la).optional()}).strict(),R2=t.object({is:t.lazy(()=>qe).optional().nullable(),isNot:t.lazy(()=>qe).optional().nullable()}).strict(),k2=t.object({every:t.lazy(()=>oa).optional(),some:t.lazy(()=>oa).optional(),none:t.lazy(()=>oa).optional()}).strict(),x2=t.object({is:t.lazy(()=>Fe).optional().nullable(),isNot:t.lazy(()=>Fe).optional().nullable()}).strict(),j2=t.object({every:t.lazy(()=>na).optional(),some:t.lazy(()=>na).optional(),none:t.lazy(()=>na).optional()}).strict(),M2=t.object({is:t.lazy(()=>De).optional().nullable(),isNot:t.lazy(()=>De).optional().nullable()}).strict(),qat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Fat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Z2=t.object({_count:t.lazy(()=>e).optional()}).strict(),_at=t.object({_count:t.lazy(()=>e).optional()}).strict(),oq=t.object({_count:t.lazy(()=>e).optional()}).strict(),Eat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Lat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Vat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Hat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Qat=t.object({_count:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Xat=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>x6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>xS).optional(),_max:t.lazy(()=>xS).optional()}).strict(),tit=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>j6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>jS).optional(),_max:t.lazy(()=>jS).optional()}).strict(),nq=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>MS)]).optional().nullable()}).strict(),JM=t.object({every:t.lazy(()=>xa).optional(),some:t.lazy(()=>xa).optional(),none:t.lazy(()=>xa).optional()}).strict(),v2=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),KM=t.object({every:t.lazy(()=>sa).optional(),some:t.lazy(()=>sa).optional(),none:t.lazy(()=>sa).optional()}).strict(),O2=t.object({_count:t.lazy(()=>e).optional()}).strict(),eit=t.object({_count:t.lazy(()=>e).optional()}).strict(),f2=t.object({_count:t.lazy(()=>e).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),rit=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>M6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>MS).optional(),_max:t.lazy(()=>MS).optional()}).strict(),_I=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),XM=t.object({is:t.lazy(()=>ae).optional().nullable(),isNot:t.lazy(()=>ae).optional().nullable()}).strict(),YT=t.object({recipeId:t.number(),recipeVersionId:t.number()}).strict(),GT=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),pit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),cit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),tB=t.object({recipeId:t.number(),stepNumber:t.number(),recipeVersionId:t.number()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),XS=t.object({is:t.lazy(()=>Ft).optional(),isNot:t.lazy(()=>Ft).optional()}).strict(),tZ=t.object({every:t.lazy(()=>ka).optional(),some:t.lazy(()=>ka).optional(),none:t.lazy(()=>ka).optional()}).strict(),w2=t.object({_count:t.lazy(()=>e).optional()}).strict(),eB=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),Iit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),aq=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>ZS)]).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),kit=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>Z6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>ZS).optional(),_max:t.lazy(()=>ZS).optional()}).strict(),iq=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>vS)]).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Oit=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>v6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>vS).optional(),_max:t.lazy(()=>vS).optional()}).strict(),N2=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),oB=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),lq=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>OS)]).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),$it=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>O6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>OS).optional(),_max:t.lazy(()=>OS).optional()}).strict(),B2=t.object({is:t.lazy(()=>Ke).optional(),isNot:t.lazy(()=>Ke).optional()}).strict(),Jit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Kit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Xit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),tlt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),elt=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),olt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nlt=t.object({id:t.lazy(()=>e).optional()}).strict(),alt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ilt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),llt=t.object({id:t.lazy(()=>e).optional()}).strict(),rq=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>fS)]).optional()}).strict(),q2=t.object({every:t.lazy(()=>Ia).optional(),some:t.lazy(()=>Ia).optional(),none:t.lazy(()=>Ia).optional()}).strict(),rlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),plt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),clt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),ult=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),slt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),ylt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),dlt=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>f6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>fS).optional(),_max:t.lazy(()=>fS).optional()}).strict(),tT=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>wS)]).optional()}).strict(),zlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mlt=t.object({id:t.lazy(()=>e).optional()}).strict(),blt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ilt=t.object({id:t.lazy(()=>e).optional()}).strict(),F2=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>w6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>wS).optional(),_max:t.lazy(()=>wS).optional()}).strict(),D2=t.object({is:t.lazy(()=>to).optional(),isNot:t.lazy(()=>to).optional()}).strict(),glt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Clt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Alt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Slt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Tlt=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Plt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ult=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Wlt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rlt=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),klt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),_2=t.object({every:t.lazy(()=>Ne).optional(),some:t.lazy(()=>Ne).optional(),none:t.lazy(()=>Ne).optional()}).strict(),xlt=t.object({_count:t.lazy(()=>e).optional()}).strict(),jlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mlt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Zlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Olt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),nB=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),flt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),wlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Nlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Blt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),qlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Lb=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),E2=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),L2=t.object({is:t.lazy(()=>_e).optional().nullable(),isNot:t.lazy(()=>_e).optional().nullable()}).strict(),V2=t.object({every:t.lazy(()=>Ta).optional(),some:t.lazy(()=>Ta).optional(),none:t.lazy(()=>Ta).optional()}).strict(),Flt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),_lt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Elt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Llt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Vlt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Hlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Ylt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Glt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$lt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Jlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Klt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Xlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),trt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ert=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),ort=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),art=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),irt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lrt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),rrt=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),connect:t.lazy(()=>C).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),a=t.object({set:t.string().optional()}).strict(),d=t.object({set:t.boolean().optional()}).strict(),prt=t.object({create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),upsert:t.lazy(()=>Xrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>tpt),t.lazy(()=>YD),t.lazy(()=>GD)]).optional()}).strict(),n=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),crt=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),connect:t.lazy(()=>C).optional()}).strict(),u=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),urt=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),upsert:t.lazy(()=>ept).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>opt),t.lazy(()=>$D),t.lazy(()=>JD)]).optional()}).strict(),srt=t.object({create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),connect:t.lazy(()=>C).optional()}).strict(),yrt=t.object({create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),upsert:t.lazy(()=>npt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>apt),t.lazy(()=>KD),t.lazy(()=>XD)]).optional()}).strict(),drt=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>C).optional()}).strict(),vC=t.object({set:t.lazy(()=>ye).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),zrt=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>ipt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>lpt),t.lazy(()=>t_),t.lazy(()=>e_)]).optional()}).strict(),mrt=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>C).optional()}).strict(),brt=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>rpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>ppt),t.lazy(()=>o_),t.lazy(()=>n_)]).optional()}).strict(),hrt=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Irt=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>cpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>upt),t.lazy(()=>a_),t.lazy(()=>i_)]).optional()}).strict(),grt=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Crt=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),upsert:t.lazy(()=>spt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>ypt),t.lazy(()=>l_),t.lazy(()=>r_)]).optional()}).strict(),H2=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),connect:t.lazy(()=>K).optional()}).strict(),Q2=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>x).optional()}).strict(),Y2=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),upsert:t.lazy(()=>dpt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>zpt),t.lazy(()=>p_),t.lazy(()=>c_)]).optional()}).strict(),G2=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>mpt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>bpt),t.lazy(()=>u_),t.lazy(()=>s_)]).optional()}).strict(),$2=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),J2=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>fZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>fZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),upsert:t.lazy(()=>hpt).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Ipt),t.lazy(()=>y_),t.lazy(()=>d_)]).optional()}).strict(),t5=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),createMany:t.lazy(()=>fZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),updateMany:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),e5=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),createMany:t.lazy(()=>fZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),updateMany:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),pP=t.object({create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),connect:t.lazy(()=>C).optional()}).strict(),cP=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>BZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),uP=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),sP=t.object({create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),connect:t.lazy(()=>j).optional()}).strict(),yP=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),connect:t.lazy(()=>j).optional()}).strict(),dP=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>BZ).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),zP=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),mP=t.object({create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),upsert:t.lazy(()=>gpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Cpt),t.lazy(()=>z_),t.lazy(()=>m_)]).optional()}).strict(),bP=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),createMany:t.lazy(()=>BZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),updateMany:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),hP=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),IP=t.object({create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),upsert:t.lazy(()=>Apt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Spt),t.lazy(()=>b_),t.lazy(()=>h_)]).optional()}).strict(),gP=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),upsert:t.lazy(()=>Tpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ppt),t.lazy(()=>I_),t.lazy(()=>g_)]).optional()}).strict(),CP=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),createMany:t.lazy(()=>BZ).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),updateMany:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),AP=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),updateMany:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),connect:t.lazy(()=>K).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Ap=t.object({set:t.lazy(()=>Bt).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),upsert:t.lazy(()=>Upt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Wpt),t.lazy(()=>C_),t.lazy(()=>A_)]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),updateMany:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),updateMany:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),updateMany:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),createMany:t.lazy(()=>QZ).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),updateMany:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),connect:t.lazy(()=>C).optional()}).strict(),gq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),connect:t.lazy(()=>pt).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),upsert:t.lazy(()=>Rpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>kpt),t.lazy(()=>S_),t.lazy(()=>T_)]).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),upsert:t.lazy(()=>xpt).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>jpt),t.lazy(()=>P_),t.lazy(()=>U_)]).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),upsert:t.lazy(()=>Mpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>pt).optional(),update:t.union([t.lazy(()=>Zpt),t.lazy(()=>W_),t.lazy(()=>R_)]).optional()}).strict(),Art=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),OC=t.object({set:t.lazy(()=>re).optional()}).strict(),Srt=t.object({create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),upsert:t.lazy(()=>vpt).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>Opt),t.lazy(()=>k_),t.lazy(()=>x_)]).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),connect:t.lazy(()=>K).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>av).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>iv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>av).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>iv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Sp=t.object({set:t.lazy(()=>qt).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]).optional(),connectOrCreate:t.lazy(()=>e3).optional(),upsert:t.lazy(()=>fpt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>wpt),t.lazy(()=>j_),t.lazy(()=>M_)]).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),createMany:t.lazy(()=>av).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),updateMany:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),createMany:t.lazy(()=>iv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),updateMany:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),createMany:t.lazy(()=>av).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),updateMany:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),createMany:t.lazy(()=>iv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),updateMany:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),o5=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),n5=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>pv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),a5=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>pv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),nb=t.object({set:t.lazy(()=>Lt).optional()}).strict(),i5=t.object({create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]).optional(),connectOrCreate:t.lazy(()=>o3).optional(),upsert:t.lazy(()=>Npt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Bpt),t.lazy(()=>Z_),t.lazy(()=>v_)]).optional()}).strict(),l5=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),createMany:t.lazy(()=>pv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),r5=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),createMany:t.lazy(()=>pv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),updateMany:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),connect:t.lazy(()=>j).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>dv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>dv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),upsert:t.lazy(()=>qpt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>Fpt),t.lazy(()=>O_),t.lazy(()=>f_)]).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),upsert:t.lazy(()=>Dpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>_pt),t.lazy(()=>w_),t.lazy(()=>N_)]).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),createMany:t.lazy(()=>dv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),updateMany:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),createMany:t.lazy(()=>dv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),updateMany:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),ab=t.object({set:t.string().array()}).strict(),p5=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),connect:t.lazy(()=>lt).optional()}).strict(),c5=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),connect:t.lazy(()=>te).optional()}).strict(),tm=t.object({set:t.lazy(()=>Et).optional()}).strict(),em=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),u5=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),upsert:t.lazy(()=>Ept).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>Lpt),t.lazy(()=>B_),t.lazy(()=>q_)]).optional()}).strict(),s5=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),upsert:t.lazy(()=>Vpt).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>Hpt),t.lazy(()=>F_),t.lazy(()=>D_)]).optional()}).strict(),y5=t.object({create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),d5=t.object({create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>$).optional()}).strict(),z5=t.object({create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),upsert:t.lazy(()=>Qpt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>Ypt),t.lazy(()=>__),t.lazy(()=>E_)]).optional()}).strict(),m5=t.object({create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>Gpt).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>$pt),t.lazy(()=>L_),t.lazy(()=>V_)]).optional()}).strict(),sp=t.object({set:t.string().array()}).strict(),_q=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),connect:t.lazy(()=>K).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),connect:t.lazy(()=>x).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),connect:t.lazy(()=>j).optional()}).strict(),$r=t.object({set:t.lazy(()=>Mt).optional()}).strict(),Jr=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Kr=t.object({set:t.lazy(()=>Zt).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),upsert:t.lazy(()=>Jpt).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Kpt),t.lazy(()=>H_),t.lazy(()=>Q_)]).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),upsert:t.lazy(()=>Xpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>tct),t.lazy(()=>Y_),t.lazy(()=>G_)]).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),upsert:t.lazy(()=>ect).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>oct),t.lazy(()=>$_),t.lazy(()=>J_)]).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),updateMany:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),updateMany:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),updateMany:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),updateMany:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),updateMany:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Trt=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Prt=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Urt=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),updateMany:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Wrt=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),updateMany:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),connect:t.lazy(()=>K).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),connect:t.lazy(()=>x).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),connect:t.lazy(()=>j).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),upsert:t.lazy(()=>nct).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>act),t.lazy(()=>K_),t.lazy(()=>X_)]).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),upsert:t.lazy(()=>ict).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>lct),t.lazy(()=>tE),t.lazy(()=>eE)]).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),upsert:t.lazy(()=>rct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>pct),t.lazy(()=>oE),t.lazy(()=>nE)]).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>K).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>$).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>j).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>cct).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>uct),t.lazy(()=>aE),t.lazy(()=>iE)]).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>sct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>yct),t.lazy(()=>lE),t.lazy(()=>rE)]).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>dct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>zct),t.lazy(()=>pE),t.lazy(()=>cE)]).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>K).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>j).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),yp=t.object({set:t.lazy(()=>Ot).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>mct).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>bct),t.lazy(()=>uE),t.lazy(()=>sE)]).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>hct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ict),t.lazy(()=>yE),t.lazy(()=>dE)]).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),updateMany:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),updateMany:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>rt).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>C).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>j).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>gct).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>Cct),t.lazy(()=>zE),t.lazy(()=>mE)]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>Act).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Sct),t.lazy(()=>bE),t.lazy(()=>hE)]).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>Tct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Pct),t.lazy(()=>IE),t.lazy(()=>gE)]).optional()}).strict(),Rrt=t.object({create:t.union([t.lazy(()=>Jv),t.lazy(()=>Kv)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>oe).optional()}).strict(),fC=t.object({set:t.lazy(()=>pe).optional()}).strict(),krt=t.object({create:t.union([t.lazy(()=>Jv),t.lazy(()=>Kv)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>Uct).optional(),connect:t.lazy(()=>oe).optional(),update:t.union([t.lazy(()=>Wct),t.lazy(()=>CE),t.lazy(()=>AE)]).optional()}).strict(),xrt=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>j).optional()}).strict(),wC=t.object({set:t.lazy(()=>ce).optional()}).strict(),jrt=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Rct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>kct),t.lazy(()=>SE),t.lazy(()=>TE)]).optional()}).strict(),Mrt=t.object({create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>j).optional()}).strict(),NC=t.object({set:t.lazy(()=>ue).optional()}).strict(),Zrt=t.object({create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>xct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>jct),t.lazy(()=>PE),t.lazy(()=>UE)]).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>f).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>C).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>j).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Mct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Zct),t.lazy(()=>WE),t.lazy(()=>RE)]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>vct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Oct),t.lazy(()=>kE),t.lazy(()=>xE)]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>fct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>wct),t.lazy(()=>jE),t.lazy(()=>ME)]).optional()}).strict(),vrt=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),Ort=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),frt=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),wrt=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),updateMany:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),b5=t.object({create:t.union([t.lazy(()=>uO),t.lazy(()=>sO)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),connect:t.lazy(()=>$).optional()}).strict(),h5=t.object({create:t.union([t.lazy(()=>yO),t.lazy(()=>dO)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>pp).optional()}).strict(),I5=t.object({create:t.union([t.lazy(()=>uO),t.lazy(()=>sO)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),upsert:t.lazy(()=>Nct).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Bct),t.lazy(()=>ZE),t.lazy(()=>vE)]).optional()}).strict(),g5=t.object({create:t.union([t.lazy(()=>yO),t.lazy(()=>dO)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>qct).optional(),connect:t.lazy(()=>pp).optional(),update:t.union([t.lazy(()=>Fct),t.lazy(()=>OE),t.lazy(()=>fE)]).optional()}).strict(),Nrt=t.object({create:t.union([t.lazy(()=>zO),t.lazy(()=>mO)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>x).optional()}).strict(),Brt=t.object({create:t.union([t.lazy(()=>zO),t.lazy(()=>mO)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>Dct).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>_ct),t.lazy(()=>wE),t.lazy(()=>NE)]).optional()}).strict(),C5=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),A5=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),S5=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional()}).strict(),T5=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),P5=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),updateMany:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),U5=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),updateMany:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),W5=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),disconnect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),delete:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),connect:t.union([t.lazy(()=>K),t.lazy(()=>K).array()]).optional(),update:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),updateMany:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),R5=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),updateMany:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),eZ=t.object({create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>K).optional()}).strict(),oZ=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),nZ=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),aZ=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),iZ=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),lZ=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),rZ=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),dp=t.object({set:t.lazy(()=>Nt).optional()}).strict(),pZ=t.object({create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>Ect).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Lct),t.lazy(()=>BE),t.lazy(()=>qE)]).optional()}).strict(),cZ=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),updateMany:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),uZ=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),updateMany:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),sZ=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),updateMany:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),yZ=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),updateMany:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),dZ=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),updateMany:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),zZ=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),updateMany:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)]).optional(),connectOrCreate:t.lazy(()=>RO).optional(),connect:t.lazy(()=>$n).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>MO).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)]).optional(),connectOrCreate:t.lazy(()=>RO).optional(),connect:t.lazy(()=>$n).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>MO).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>Vct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>Hct),t.lazy(()=>FE),t.lazy(()=>DE)]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),updateMany:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)]).optional(),connectOrCreate:t.lazy(()=>RO).optional(),upsert:t.lazy(()=>O3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>f3),t.lazy(()=>BO),t.lazy(()=>qO)]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),updateMany:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),updateMany:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),updateMany:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),createMany:t.lazy(()=>MO).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),updateMany:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),updateMany:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),updateMany:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),updateMany:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),updateMany:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),updateMany:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),updateMany:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)]).optional(),connectOrCreate:t.lazy(()=>RO).optional(),upsert:t.lazy(()=>O3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ft)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>f3),t.lazy(()=>BO),t.lazy(()=>qO)]).optional()}).strict(),Br=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),updateMany:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),qr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),updateMany:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Fr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),updateMany:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),Dr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),createMany:t.lazy(()=>MO).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),updateMany:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),_r=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),updateMany:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Er=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),updateMany:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Lr=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),updateMany:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),Vr=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),updateMany:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),Hr=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),updateMany:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Qr=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),updateMany:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Na=t.object({create:t.union([t.lazy(()=>FO),t.lazy(()=>DO)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Ba=t.object({create:t.union([t.lazy(()=>_O),t.lazy(()=>EO)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),connect:t.lazy(()=>K).optional()}).strict(),qa=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),Fa=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Da=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),_a=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),Ea=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),La=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Va=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Ha=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>JO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Qa=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ya=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Ga=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),$a=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Ja=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Ka=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Xa=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>GO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>JO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>FO),t.lazy(()=>DO)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),upsert:t.lazy(()=>Qct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>Yct),t.lazy(()=>_E),t.lazy(()=>EE)]).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>_O),t.lazy(()=>EO)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),upsert:t.lazy(()=>Gct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>$ct),t.lazy(()=>LE),t.lazy(()=>VE)]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),updateMany:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),updateMany:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),updateMany:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),updateMany:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),updateMany:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),createMany:t.lazy(()=>JO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),updateMany:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),updateMany:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),updateMany:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),updateMany:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),updateMany:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),updateMany:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),updateMany:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),updateMany:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),updateMany:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),updateMany:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),updateMany:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),updateMany:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),updateMany:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),updateMany:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),createMany:t.lazy(()=>GO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),updateMany:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),updateMany:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),createMany:t.lazy(()=>JO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),updateMany:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),updateMany:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),updateMany:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),updateMany:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),updateMany:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),updateMany:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),updateMany:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),updateMany:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),updateMany:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),updateMany:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),updateMany:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),pl=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),updateMany:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),qrt=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>sf)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),connect:t.lazy(()=>j).optional()}).strict(),BC=t.object({set:t.lazy(()=>se).optional()}).strict(),Frt=t.object({create:t.union([t.lazy(()=>uf),t.lazy(()=>sf)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),upsert:t.lazy(()=>Jct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Kct),t.lazy(()=>HE),t.lazy(()=>QE)]).optional()}).strict(),Drt=t.object({create:t.union([t.lazy(()=>yf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),connect:t.lazy(()=>j).optional()}).strict(),_rt=t.object({create:t.union([t.lazy(()=>yf),t.lazy(()=>df)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),upsert:t.lazy(()=>Xct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>tut),t.lazy(()=>YE),t.lazy(()=>GE)]).optional()}).strict(),k5=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),x5=t.object({create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),connect:t.lazy(()=>K).optional()}).strict(),j5=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>zf).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),M5=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),updateMany:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Z5=t.object({create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),upsert:t.lazy(()=>eut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>out),t.lazy(()=>$E),t.lazy(()=>JE)]).optional()}).strict(),v5=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),createMany:t.lazy(()=>zf).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),updateMany:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Pt=t.object({set:t.string().array()}).strict(),uo=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),connect:t.lazy(()=>K).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),connect:t.lazy(()=>ee).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>Af).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)]).optional(),connectOrCreate:t.lazy(()=>Of).optional(),connect:t.lazy(()=>Ll).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)]).optional(),connectOrCreate:t.lazy(()=>wf).optional(),connect:t.lazy(()=>Vl).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)]).optional(),connectOrCreate:t.lazy(()=>Bf).optional(),connect:t.lazy(()=>Hl).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>Af).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>xf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>jf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)]).optional(),connectOrCreate:t.lazy(()=>Of).optional(),connect:t.lazy(()=>Ll).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>ff).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),tn=t.object({create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)]).optional(),connectOrCreate:t.lazy(()=>wf).optional(),connect:t.lazy(()=>Vl).optional()}).strict(),en=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),on=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)]).optional(),connectOrCreate:t.lazy(()=>Bf).optional(),connect:t.lazy(()=>Hl).optional()}).strict(),st=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),yt=t.object({set:t.lazy(()=>W).optional()}).strict(),dt=t.object({set:t.lazy(()=>U).optional()}).strict(),nn=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),upsert:t.lazy(()=>nut).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>aut),t.lazy(()=>KE),t.lazy(()=>XE)]).optional()}).strict(),an=t.object({create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),upsert:t.lazy(()=>iut).optional(),connect:t.lazy(()=>ee).optional(),update:t.union([t.lazy(()=>lut),t.lazy(()=>tL),t.lazy(()=>eL)]).optional()}).strict(),ln=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),createMany:t.lazy(()=>Af).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),updateMany:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),rn=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),pn=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),cn=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),updateMany:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),un=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),sn=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),updateMany:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),yn=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),updateMany:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),dn=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),updateMany:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),zn=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),updateMany:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),mn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),bn=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),updateMany:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),hn=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),updateMany:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),In=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),updateMany:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),gn=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Cn=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),updateMany:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),An=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),updateMany:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),Sn=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),Tn=t.object({create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)]).optional(),connectOrCreate:t.lazy(()=>Of).optional(),upsert:t.lazy(()=>E3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Ll).optional(),update:t.union([t.lazy(()=>L3),t.lazy(()=>qf),t.lazy(()=>Ff)]).optional()}).strict(),Pn=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),updateMany:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional()}).strict(),Un=t.object({create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)]).optional(),connectOrCreate:t.lazy(()=>wf).optional(),upsert:t.lazy(()=>V3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Vl).optional(),update:t.union([t.lazy(()=>H3),t.lazy(()=>Df),t.lazy(()=>_f)]).optional()}).strict(),Wn=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),updateMany:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional()}).strict(),Rn=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)]).optional(),connectOrCreate:t.lazy(()=>Bf).optional(),upsert:t.lazy(()=>Q3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Hl).optional(),update:t.union([t.lazy(()=>Y3),t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional()}).strict(),kn=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),createMany:t.lazy(()=>Af).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),updateMany:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),xn=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),createMany:t.lazy(()=>Sf).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),jn=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Mn=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),updateMany:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Zn=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),updateMany:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),vn=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),updateMany:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),On=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),updateMany:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),fn=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),updateMany:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),wn=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),updateMany:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),deleteMany:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional()}).strict(),Nn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),updateMany:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Bn=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),updateMany:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),qn=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),createMany:t.lazy(()=>xf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),updateMany:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>jf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),updateMany:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),updateMany:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),createMany:t.lazy(()=>Mf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),updateMany:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),updateMany:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),updateMany:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)]).optional(),connectOrCreate:t.lazy(()=>Of).optional(),upsert:t.lazy(()=>E3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Ll).optional(),update:t.union([t.lazy(()=>L3),t.lazy(()=>qf),t.lazy(()=>Ff)]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),createMany:t.lazy(()=>ff).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),updateMany:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)]).optional(),connectOrCreate:t.lazy(()=>wf).optional(),upsert:t.lazy(()=>V3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Vl).optional(),update:t.union([t.lazy(()=>H3),t.lazy(()=>Df),t.lazy(()=>_f)]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),createMany:t.lazy(()=>Nf).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),updateMany:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)]).optional(),connectOrCreate:t.lazy(()=>Bf).optional(),upsert:t.lazy(()=>Q3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>Hl).optional(),update:t.union([t.lazy(()=>Y3),t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),QI=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Gf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>$f).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),KI=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),XI=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),tg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),eg=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),og=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Gf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),ng=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>$f).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),ag=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ta=t.object({set:t.lazy(()=>ot).optional().nullable()}).strict(),ig=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),lg=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),rg=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),updateMany:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),pg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),deleteMany:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional()}).strict(),cg=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),updateMany:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),ug=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),createMany:t.lazy(()=>Gf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),updateMany:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),sg=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),createMany:t.lazy(()=>$f).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),updateMany:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),yg=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),updateMany:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),dg=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional()}).strict(),zg=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),deleteMany:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional()}).strict(),mg=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),updateMany:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),bg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),updateMany:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),deleteMany:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional()}).strict(),hg=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),updateMany:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),Ig=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),createMany:t.lazy(()=>Gf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),updateMany:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),gg=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),createMany:t.lazy(()=>$f).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),updateMany:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),Cg=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),updateMany:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),zp=t.object({set:t.number().array()}).strict(),BF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),connect:t.lazy(()=>C).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>$3).optional(),connect:t.lazy(()=>$).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>J3).optional(),connect:t.lazy(()=>w).optional()}).strict(),Xr=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),upsert:t.lazy(()=>rut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>put),t.lazy(()=>oL),t.lazy(()=>nL)]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>$3).optional(),upsert:t.lazy(()=>cut).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>uut),t.lazy(()=>aL),t.lazy(()=>iL)]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>J3).optional(),upsert:t.lazy(()=>sut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>yut),t.lazy(()=>lL),t.lazy(()=>rL)]).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>K3).optional(),connect:t.lazy(()=>C).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>X3).optional(),connect:t.lazy(()=>w).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>rw).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>rw).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>K3).optional(),upsert:t.lazy(()=>dut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>zut),t.lazy(()=>pL),t.lazy(()=>cL)]).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>X3).optional(),upsert:t.lazy(()=>mut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ae)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>but),t.lazy(()=>uL),t.lazy(()=>sL)]).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),createMany:t.lazy(()=>rw).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),createMany:t.lazy(()=>rw).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),updateMany:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional()}).strict(),eT=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>t8).optional(),connect:t.lazy(()=>$n).optional()}).strict(),oT=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]).optional(),connectOrCreate:t.lazy(()=>e8).optional(),connect:t.lazy(()=>$).optional()}).strict(),nT=t.object({create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>o8).optional(),connect:t.lazy(()=>j).optional()}).strict(),aT=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>zw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),iT=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),lT=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),createMany:t.lazy(()=>bw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),rT=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>zw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),pT=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),createMany:t.lazy(()=>mw).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),cT=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),createMany:t.lazy(()=>bw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),uT=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>t8).optional(),upsert:t.lazy(()=>hut).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Iut),t.lazy(()=>yL),t.lazy(()=>dL)]).optional()}).strict(),sT=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]).optional(),connectOrCreate:t.lazy(()=>e8).optional(),upsert:t.lazy(()=>gut).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Cut),t.lazy(()=>zL),t.lazy(()=>mL)]).optional()}).strict(),yT=t.object({create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>o8).optional(),upsert:t.lazy(()=>Aut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>M)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>M)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Sut),t.lazy(()=>bL),t.lazy(()=>hL)]).optional()}).strict(),dT=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),createMany:t.lazy(()=>zw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),updateMany:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),zT=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),updateMany:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),mT=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>bw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),updateMany:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),bT=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),createMany:t.lazy(()=>zw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),updateMany:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional()}).strict(),hT=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),createMany:t.lazy(()=>mw).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),updateMany:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),IT=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>bw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),updateMany:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>n8).optional(),connect:t.lazy(()=>$n).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>a8).optional(),connect:t.lazy(()=>f).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]).optional(),connectOrCreate:t.lazy(()=>i8).optional(),connect:t.lazy(()=>j).optional()}).strict(),tp=t.object({set:t.lazy(()=>vt).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>n8).optional(),upsert:t.lazy(()=>Tut).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Put),t.lazy(()=>IL),t.lazy(()=>gL)]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>a8).optional(),upsert:t.lazy(()=>Uut).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Wut),t.lazy(()=>CL),t.lazy(()=>AL)]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]).optional(),connectOrCreate:t.lazy(()=>i8).optional(),upsert:t.lazy(()=>Rut).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>kut),t.lazy(()=>SL),t.lazy(()=>TL)]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]).optional(),connectOrCreate:t.lazy(()=>l8).optional(),connect:t.lazy(()=>$n).optional()}).strict(),iD=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>r8).optional(),connect:t.lazy(()=>j).optional()}).strict(),lD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),rD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),mp=t.object({set:t.lazy(()=>ft).optional()}).strict(),pD=t.object({create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]).optional(),connectOrCreate:t.lazy(()=>l8).optional(),upsert:t.lazy(()=>xut).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>jut),t.lazy(()=>PL),t.lazy(()=>UL)]).optional()}).strict(),cD=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>r8).optional(),upsert:t.lazy(()=>Mut).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Zut),t.lazy(()=>WL),t.lazy(()=>RL)]).optional()}).strict(),uD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),sD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),createMany:t.lazy(()=>Rw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),updateMany:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional()}).strict(),O5=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>p8).optional(),connect:t.lazy(()=>ct).optional()}).strict(),f5=t.object({create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]).optional(),connectOrCreate:t.lazy(()=>c8).optional(),connect:t.lazy(()=>f).optional()}).strict(),w5=t.object({create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]).optional(),connectOrCreate:t.lazy(()=>p8).optional(),upsert:t.lazy(()=>vut).optional(),connect:t.lazy(()=>ct).optional(),update:t.union([t.lazy(()=>Out),t.lazy(()=>kL),t.lazy(()=>xL)]).optional()}).strict(),N5=t.object({create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]).optional(),connectOrCreate:t.lazy(()=>c8).optional(),upsert:t.lazy(()=>fut).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>wut),t.lazy(()=>jL),t.lazy(()=>ML)]).optional()}).strict(),Ert=t.object({create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]).optional(),connectOrCreate:t.lazy(()=>u8).optional(),connect:t.lazy(()=>C).optional()}).strict(),Lrt=t.object({create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]).optional(),connectOrCreate:t.lazy(()=>u8).optional(),upsert:t.lazy(()=>Nut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>But),t.lazy(()=>ZL),t.lazy(()=>vL)]).optional()}).strict(),yD=t.object({create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]).optional(),connectOrCreate:t.lazy(()=>s8).optional(),connect:t.lazy(()=>K).optional()}).strict(),dD=t.object({create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]).optional(),connectOrCreate:t.lazy(()=>y8).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),zD=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),mD=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),bp=t.object({set:t.lazy(()=>wt).optional()}).strict(),bD=t.object({create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]).optional(),connectOrCreate:t.lazy(()=>s8).optional(),upsert:t.lazy(()=>qut).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>Fut),t.lazy(()=>OL),t.lazy(()=>fL)]).optional()}).strict(),hD=t.object({create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]).optional(),connectOrCreate:t.lazy(()=>y8).optional(),upsert:t.lazy(()=>Dut).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>_ut),t.lazy(()=>wL),t.lazy(()=>NL)]).optional()}).strict(),ID=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),updateMany:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),gD=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),updateMany:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),deleteMany:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional()}).strict(),B5=t.object({create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]).optional(),connectOrCreate:t.lazy(()=>d8).optional(),connect:t.lazy(()=>ut).optional()}).strict(),q5=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>z8).optional(),connect:t.lazy(()=>$).optional()}).strict(),F5=t.object({create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]).optional(),connectOrCreate:t.lazy(()=>d8).optional(),upsert:t.lazy(()=>Eut).optional(),connect:t.lazy(()=>ut).optional(),update:t.union([t.lazy(()=>Lut),t.lazy(()=>BL),t.lazy(()=>qL)]).optional()}).strict(),D5=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>z8).optional(),upsert:t.lazy(()=>Vut).optional(),connect:t.lazy(()=>$).optional(),update:t.union([t.lazy(()=>Hut),t.lazy(()=>FL),t.lazy(()=>DL)]).optional()}).strict(),CD=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Ew).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),AD=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),SD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),createMany:t.lazy(()=>Lw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),TD=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Ew).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),PD=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional()}).strict(),UD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),createMany:t.lazy(()=>Lw).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),WD=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),createMany:t.lazy(()=>Ew).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),updateMany:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),RD=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),updateMany:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),kD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),createMany:t.lazy(()=>Lw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),updateMany:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),xD=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),createMany:t.lazy(()=>Ew).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),updateMany:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),jD=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),set:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),disconnect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),delete:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),connect:t.union([t.lazy(()=>$),t.lazy(()=>$).array()]).optional(),update:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),updateMany:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),MD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),createMany:t.lazy(()=>Lw).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),updateMany:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional()}).strict(),_5=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>m8).optional(),connect:t.lazy(()=>j).optional()}).strict(),E5=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),L5=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),ib=t.object({set:t.lazy(()=>Vt).optional()}).strict(),V5=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>m8).optional(),upsert:t.lazy(()=>Qut).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Yut),t.lazy(()=>_L),t.lazy(()=>EL)]).optional()}).strict(),H5=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),upsert:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),updateMany:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional()}).strict(),Q5=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>UI),t.lazy(()=>UI).array()]).optional(),upsert:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),updateMany:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional()}).strict(),Y5=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),G5=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),createMany:t.lazy(()=>Yw).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),$5=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),J5=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),createMany:t.lazy(()=>Yw).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),ea=t.object({set:t.lazy(()=>tt).optional()}).strict(),K5=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),upsert:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),updateMany:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),X5=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),upsert:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),createMany:t.lazy(()=>Yw).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),t6=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>WI),t.lazy(()=>WI).array()]).optional(),upsert:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),updateMany:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),e6=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>RI),t.lazy(()=>RI).array()]).optional(),upsert:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),createMany:t.lazy(()=>Yw).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),ZD=t.object({create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]).optional(),connectOrCreate:t.lazy(()=>b8).optional(),connect:t.lazy(()=>ne).optional()}).strict(),vD=t.object({create:t.union([t.lazy(()=>Jw),t.lazy(()=>Kw)]).optional(),connectOrCreate:t.lazy(()=>h8).optional(),connect:t.lazy(()=>C).optional()}).strict(),OD=t.object({create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]).optional(),connectOrCreate:t.lazy(()=>I8).optional(),connect:t.lazy(()=>j).optional()}).strict(),fD=t.object({create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]).optional(),connectOrCreate:t.lazy(()=>b8).optional(),upsert:t.lazy(()=>Gut).optional(),connect:t.lazy(()=>ne).optional(),update:t.union([t.lazy(()=>$ut),t.lazy(()=>LL),t.lazy(()=>VL)]).optional()}).strict(),wD=t.object({create:t.union([t.lazy(()=>Jw),t.lazy(()=>Kw)]).optional(),connectOrCreate:t.lazy(()=>h8).optional(),upsert:t.lazy(()=>Jut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Kut),t.lazy(()=>HL),t.lazy(()=>QL)]).optional()}).strict(),ND=t.object({create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]).optional(),connectOrCreate:t.lazy(()=>I8).optional(),upsert:t.lazy(()=>Xut).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>tst),t.lazy(()=>YL),t.lazy(()=>GL)]).optional()}).strict(),Vrt=t.object({create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]).optional(),connectOrCreate:t.lazy(()=>g8).optional(),connect:t.lazy(()=>j).optional()}).strict(),Hrt=t.object({create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]).optional(),connectOrCreate:t.lazy(()=>g8).optional(),upsert:t.lazy(()=>est).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ost),t.lazy(()=>$L),t.lazy(()=>JL)]).optional()}).strict(),BD=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>C8).optional(),connect:t.lazy(()=>K).optional()}).strict(),qD=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),createMany:t.lazy(()=>iN).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),FD=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),createMany:t.lazy(()=>lN).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),DD=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),createMany:t.lazy(()=>iN).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),_D=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),createMany:t.lazy(()=>lN).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),ED=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>C8).optional(),upsert:t.lazy(()=>nst).optional(),connect:t.lazy(()=>K).optional(),update:t.union([t.lazy(()=>ast),t.lazy(()=>KL),t.lazy(()=>XL)]).optional()}).strict(),LD=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),upsert:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),createMany:t.lazy(()=>iN).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),updateMany:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),VD=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),upsert:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),createMany:t.lazy(()=>lN).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),updateMany:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),deleteMany:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional()}).strict(),HD=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kI),t.lazy(()=>kI).array()]).optional(),upsert:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),createMany:t.lazy(()=>iN).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),updateMany:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),QD=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xI),t.lazy(()=>xI).array()]).optional(),upsert:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),createMany:t.lazy(()=>lN).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),updateMany:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),deleteMany:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional()}).strict(),o6=t.object({create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]).optional(),connectOrCreate:t.lazy(()=>A8).optional(),connect:t.lazy(()=>x).optional()}).strict(),n6=t.object({create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]).optional(),connectOrCreate:t.lazy(()=>S8).optional(),connect:t.lazy(()=>C).optional()}).strict(),a6=t.object({create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]).optional(),connectOrCreate:t.lazy(()=>A8).optional(),upsert:t.lazy(()=>ist).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>lst),t.lazy(()=>tV),t.lazy(()=>eV)]).optional()}).strict(),i6=t.object({create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]).optional(),connectOrCreate:t.lazy(()=>S8).optional(),upsert:t.lazy(()=>rst).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>pst),t.lazy(()=>oV),t.lazy(()=>nV)]).optional()}).strict(),io=t.object({set:t.number().array()}).strict(),lo=t.object({set:t.number().array()}).strict(),ro=t.object({set:t.number().array()}).strict(),po=t.object({set:t.string().array()}).strict(),om=t.object({create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]).optional(),connectOrCreate:t.lazy(()=>T8).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>dN),t.lazy(()=>zN)]).optional(),connectOrCreate:t.lazy(()=>P8).optional(),connect:t.lazy(()=>Xt).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),createMany:t.lazy(()=>mN).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>bN).optional(),connect:t.lazy(()=>Ql).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),createMany:t.lazy(()=>hN).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),createMany:t.lazy(()=>IN).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),createMany:t.lazy(()=>gN).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),createMany:t.lazy(()=>CN).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),createMany:t.lazy(()=>mN).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>bN).optional(),connect:t.lazy(()=>Ql).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),createMany:t.lazy(()=>hN).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),createMany:t.lazy(()=>IN).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),createMany:t.lazy(()=>gN).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),createMany:t.lazy(()=>CN).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Ee=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Le=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ve=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),He=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Cm=t.object({create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]).optional(),connectOrCreate:t.lazy(()=>T8).optional(),upsert:t.lazy(()=>cst).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>ust),t.lazy(()=>aV),t.lazy(()=>iV)]).optional()}).strict(),Am=t.object({create:t.union([t.lazy(()=>dN),t.lazy(()=>zN)]).optional(),connectOrCreate:t.lazy(()=>P8).optional(),upsert:t.lazy(()=>sst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>Xt).optional(),update:t.union([t.lazy(()=>yst),t.lazy(()=>lV),t.lazy(()=>rV)]).optional()}).strict(),Sm=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),upsert:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),updateMany:t.union([t.lazy(()=>Hj),t.lazy(()=>Hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Tm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),upsert:t.union([t.lazy(()=>Qj),t.lazy(()=>Qj).array()]).optional(),createMany:t.lazy(()=>mN).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Yj),t.lazy(()=>Yj).array()]).optional(),updateMany:t.union([t.lazy(()=>Gj),t.lazy(()=>Gj).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),Pm=t.object({create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>bN).optional(),upsert:t.lazy(()=>U8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>_e)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>_e)]).optional(),connect:t.lazy(()=>Ql).optional(),update:t.union([t.lazy(()=>W8),t.lazy(()=>AN),t.lazy(()=>SN)]).optional()}).strict(),Um=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),upsert:t.union([t.lazy(()=>$j),t.lazy(()=>$j).array()]).optional(),createMany:t.lazy(()=>hN).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>Jj),t.lazy(()=>Jj).array()]).optional(),updateMany:t.union([t.lazy(()=>Kj),t.lazy(()=>Kj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional()}).strict(),Wm=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),upsert:t.union([t.lazy(()=>Xj),t.lazy(()=>Xj).array()]).optional(),createMany:t.lazy(()=>IN).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>tM),t.lazy(()=>tM).array()]).optional(),updateMany:t.union([t.lazy(()=>eM),t.lazy(()=>eM).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),Rm=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),upsert:t.union([t.lazy(()=>oM),t.lazy(()=>oM).array()]).optional(),createMany:t.lazy(()=>gN).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>nM),t.lazy(()=>nM).array()]).optional(),updateMany:t.union([t.lazy(()=>aM),t.lazy(()=>aM).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),km=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),upsert:t.union([t.lazy(()=>iM),t.lazy(()=>iM).array()]).optional(),createMany:t.lazy(()=>CN).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>lM),t.lazy(()=>lM).array()]).optional(),updateMany:t.union([t.lazy(()=>rM),t.lazy(()=>rM).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),xm=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),upsert:t.union([t.lazy(()=>pM),t.lazy(()=>pM).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>cM),t.lazy(()=>cM).array()]).optional(),updateMany:t.union([t.lazy(()=>uM),t.lazy(()=>uM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),jm=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jI),t.lazy(()=>jI).array()]).optional(),upsert:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),updateMany:t.union([t.lazy(()=>Hj),t.lazy(()=>Hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional()}).strict(),Mm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>MI),t.lazy(()=>MI).array()]).optional(),upsert:t.union([t.lazy(()=>Qj),t.lazy(()=>Qj).array()]).optional(),createMany:t.lazy(()=>mN).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Yj),t.lazy(()=>Yj).array()]).optional(),updateMany:t.union([t.lazy(()=>Gj),t.lazy(()=>Gj).array()]).optional(),deleteMany:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional()}).strict(),Zm=t.object({create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)]).optional(),connectOrCreate:t.lazy(()=>bN).optional(),upsert:t.lazy(()=>U8).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>_e)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>_e)]).optional(),connect:t.lazy(()=>Ql).optional(),update:t.union([t.lazy(()=>W8),t.lazy(()=>AN),t.lazy(()=>SN)]).optional()}).strict(),vm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ZI),t.lazy(()=>ZI).array()]).optional(),upsert:t.union([t.lazy(()=>$j),t.lazy(()=>$j).array()]).optional(),createMany:t.lazy(()=>hN).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>Jj),t.lazy(()=>Jj).array()]).optional(),updateMany:t.union([t.lazy(()=>Kj),t.lazy(()=>Kj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional()}).strict(),Om=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vI),t.lazy(()=>vI).array()]).optional(),upsert:t.union([t.lazy(()=>Xj),t.lazy(()=>Xj).array()]).optional(),createMany:t.lazy(()=>IN).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>tM),t.lazy(()=>tM).array()]).optional(),updateMany:t.union([t.lazy(()=>eM),t.lazy(()=>eM).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),fm=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>OI),t.lazy(()=>OI).array()]).optional(),upsert:t.union([t.lazy(()=>oM),t.lazy(()=>oM).array()]).optional(),createMany:t.lazy(()=>gN).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>nM),t.lazy(()=>nM).array()]).optional(),updateMany:t.union([t.lazy(()=>aM),t.lazy(()=>aM).array()]).optional(),deleteMany:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional()}).strict(),wm=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fI),t.lazy(()=>fI).array()]).optional(),upsert:t.union([t.lazy(()=>iM),t.lazy(()=>iM).array()]).optional(),createMany:t.lazy(()=>CN).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>lM),t.lazy(()=>lM).array()]).optional(),updateMany:t.union([t.lazy(()=>rM),t.lazy(()=>rM).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),Nm=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wI),t.lazy(()=>wI).array()]).optional(),upsert:t.union([t.lazy(()=>pM),t.lazy(()=>pM).array()]).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>cM),t.lazy(()=>cM).array()]).optional(),updateMany:t.union([t.lazy(()=>uM),t.lazy(()=>uM).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),Qrt=t.object({create:t.union([t.lazy(()=>TN),t.lazy(()=>PN)]).optional(),connectOrCreate:t.lazy(()=>R8).optional(),connect:t.lazy(()=>x).optional()}).strict(),Yrt=t.object({create:t.union([t.lazy(()=>TN),t.lazy(()=>PN)]).optional(),connectOrCreate:t.lazy(()=>R8).optional(),upsert:t.lazy(()=>dst).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Tt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>zst),t.lazy(()=>pV),t.lazy(()=>cV)]).optional()}).strict(),Grt=t.object({create:t.union([t.lazy(()=>UN),t.lazy(()=>WN)]).optional(),connectOrCreate:t.lazy(()=>k8).optional(),connect:t.lazy(()=>C).optional()}).strict(),$rt=t.object({create:t.union([t.lazy(()=>UN),t.lazy(()=>WN)]).optional(),connectOrCreate:t.lazy(()=>k8).optional(),upsert:t.lazy(()=>mst).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>bst),t.lazy(()=>uV),t.lazy(()=>sV)]).optional()}).strict(),Jrt=t.object({create:t.union([t.lazy(()=>RN),t.lazy(()=>kN)]).optional(),connectOrCreate:t.lazy(()=>x8).optional(),connect:t.lazy(()=>C).optional()}).strict(),Krt=t.object({create:t.union([t.lazy(()=>RN),t.lazy(()=>kN)]).optional(),connectOrCreate:t.lazy(()=>x8).optional(),upsert:t.lazy(()=>hst).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Ist),t.lazy(()=>yV),t.lazy(()=>dV)]).optional()}).strict(),nt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>nt)]).optional()}).strict(),np=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>np)]).optional()}).strict(),uS=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>uS)]).optional()}).strict(),sS=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>sS)]).optional()}).strict(),l6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>l6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>np).optional(),_sum:t.lazy(()=>nt).optional(),_min:t.lazy(()=>nt).optional(),_max:t.lazy(()=>nt).optional()}).strict(),r6=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>r6)]).optional(),_count:t.lazy(()=>nt).optional(),_avg:t.lazy(()=>np).optional(),_sum:t.lazy(()=>np).optional(),_min:t.lazy(()=>np).optional(),_max:t.lazy(()=>np).optional()}).strict(),p6=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>p6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),c6=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>c6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),ap=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>ap)]).optional().nullable()}).strict(),yS=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>yS)]).optional().nullable()}).strict(),dS=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>dS)]).optional()}).strict(),u6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>u6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_avg:t.lazy(()=>ap).optional(),_sum:t.lazy(()=>ap).optional(),_min:t.lazy(()=>ap).optional(),_max:t.lazy(()=>ap).optional()}).strict(),Sl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Sl)]).optional().nullable()}).strict(),s6=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>s6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),y6=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>y6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),zS=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>zS)]).optional()}).strict(),d6=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>d6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>zS).optional(),_max:t.lazy(()=>zS).optional()}).strict(),z6=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>z6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_avg:t.lazy(()=>ap).optional(),_sum:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>Sl).optional(),_max:t.lazy(()=>Sl).optional()}).strict(),mS=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>mS)]).optional().nullable()}).strict(),m6=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>m6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),bS=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>bS)]).optional()}).strict(),b6=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>b6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),hS=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>hS)]).optional()}).strict(),h6=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>h6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),IS=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>IS)]).optional()}).strict(),I6=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>I6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),gS=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>gS)]).optional()}).strict(),g6=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>g6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),CS=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>CS)]).optional()}).strict(),C6=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>C6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),AS=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>AS)]).optional()}).strict(),SS=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>SS)]).optional()}).strict(),A6=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>A6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),S6=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>S6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>SS).optional(),_max:t.lazy(()=>SS).optional()}).strict(),TS=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>TS)]).optional()}).strict(),T6=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>T6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>TS).optional(),_max:t.lazy(()=>TS).optional()}).strict(),PS=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>PS)]).optional()}).strict(),P6=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>P6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>PS).optional(),_max:t.lazy(()=>PS).optional()}).strict(),US=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>US)]).optional()}).strict(),U6=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>U6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>US).optional(),_max:t.lazy(()=>US).optional()}).strict(),WS=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>WS)]).optional()}).strict(),W6=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>W6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>WS).optional(),_max:t.lazy(()=>WS).optional()}).strict(),RS=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>RS)]).optional()}).strict(),R6=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>R6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>RS).optional(),_max:t.lazy(()=>RS).optional()}).strict(),kS=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>kS)]).optional()}).strict(),k6=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>k6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>kS).optional(),_max:t.lazy(()=>kS).optional()}).strict(),xS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>xS)]).optional()}).strict(),jS=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>jS)]).optional()}).strict(),x6=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>x6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>xS).optional(),_max:t.lazy(()=>xS).optional()}).strict(),j6=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>j6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>jS).optional(),_max:t.lazy(()=>jS).optional()}).strict(),MS=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>MS)]).optional().nullable()}).strict(),M6=t.object({equals:t.lazy(()=>ot).optional().nullable(),in:t.lazy(()=>ot).array().optional().nullable(),notIn:t.lazy(()=>ot).array().optional().nullable(),not:t.union([t.lazy(()=>ot),t.lazy(()=>M6)]).optional().nullable(),_count:t.lazy(()=>Sl).optional(),_min:t.lazy(()=>MS).optional(),_max:t.lazy(()=>MS).optional()}).strict(),ZS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>ZS)]).optional()}).strict(),Z6=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>Z6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>ZS).optional(),_max:t.lazy(()=>ZS).optional()}).strict(),vS=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>vS)]).optional()}).strict(),v6=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>v6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>vS).optional(),_max:t.lazy(()=>vS).optional()}).strict(),OS=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>OS)]).optional()}).strict(),O6=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>O6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>OS).optional(),_max:t.lazy(()=>OS).optional()}).strict(),fS=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>fS)]).optional()}).strict(),f6=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>f6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>fS).optional(),_max:t.lazy(()=>fS).optional()}).strict(),wS=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>wS)]).optional()}).strict(),w6=t.object({equals:t.lazy(()=>tt).optional(),in:t.lazy(()=>tt).array().optional(),notIn:t.lazy(()=>tt).array().optional(),not:t.union([t.lazy(()=>tt),t.lazy(()=>w6)]).optional(),_count:t.lazy(()=>nt).optional(),_min:t.lazy(()=>wS).optional(),_max:t.lazy(()=>wS).optional()}).strict(),mZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),bZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),N6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)])}).strict(),Xrt=t.object({update:t.union([t.lazy(()=>YD),t.lazy(()=>GD)]),create:t.union([t.lazy(()=>mZ),t.lazy(()=>bZ)]),where:t.lazy(()=>v).optional()}).strict(),tpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>YD),t.lazy(()=>GD)])}).strict(),YD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),GD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),hZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),IZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),B6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)])}).strict(),ept=t.object({update:t.union([t.lazy(()=>$D),t.lazy(()=>JD)]),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]),where:t.lazy(()=>v).optional()}).strict(),opt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>$D),t.lazy(()=>JD)])}).strict(),$D=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),JD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),gZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),CZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),q6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)])}).strict(),npt=t.object({update:t.union([t.lazy(()=>KD),t.lazy(()=>XD)]),create:t.union([t.lazy(()=>gZ),t.lazy(()=>CZ)]),where:t.lazy(()=>v).optional()}).strict(),apt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>KD),t.lazy(()=>XD)])}).strict(),KD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),XD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),AZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),SZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),F6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)])}).strict(),ipt=t.object({update:t.union([t.lazy(()=>t_),t.lazy(()=>e_)]),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]),where:t.lazy(()=>v).optional()}).strict(),lpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>t_),t.lazy(()=>e_)])}).strict(),t_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),e_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),TZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),PZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),D6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)])}).strict(),rpt=t.object({update:t.union([t.lazy(()=>o_),t.lazy(()=>n_)]),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]),where:t.lazy(()=>v).optional()}).strict(),ppt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>o_),t.lazy(()=>n_)])}).strict(),o_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),n_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),UZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),WZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),_6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)])}).strict(),cpt=t.object({update:t.union([t.lazy(()=>a_),t.lazy(()=>i_)]),create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]),where:t.lazy(()=>v).optional()}).strict(),upt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>a_),t.lazy(()=>i_)])}).strict(),a_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),i_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),RZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),kZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),E6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)])}).strict(),spt=t.object({update:t.union([t.lazy(()=>l_),t.lazy(()=>r_)]),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]),where:t.lazy(()=>v).optional()}).strict(),ypt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>l_),t.lazy(()=>r_)])}).strict(),l_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),r_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),xZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),jZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),L6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),MZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),ZZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),V6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)])}).strict(),dpt=t.object({update:t.union([t.lazy(()=>p_),t.lazy(()=>c_)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>N).optional()}).strict(),zpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>p_),t.lazy(()=>c_)])}).strict(),p_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),c_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),mpt=t.object({update:t.union([t.lazy(()=>u_),t.lazy(()=>s_)]),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]),where:t.lazy(()=>Tt).optional()}).strict(),bpt=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>u_),t.lazy(()=>s_)])}).strict(),u_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),s_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),vZ=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),menuItems:t.lazy(()=>qD).optional()}).strict(),OZ=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>DD).optional()}).strict(),H6=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)])}).strict(),oc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),nc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Vb=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),fZ=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),hpt=t.object({update:t.union([t.lazy(()=>y_),t.lazy(()=>d_)]),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]),where:t.lazy(()=>fe).optional()}).strict(),Ipt=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>y_),t.lazy(()=>d_)])}).strict(),y_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),menuItems:t.lazy(()=>LD).optional()}).strict(),d_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>HD).optional()}).strict(),fU=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>j8),t.lazy(()=>M8)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),wU=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>j8),t.lazy(()=>M8)])}).strict(),NU=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>qS),t.lazy(()=>gst)])}).strict(),ao=t.object({AND:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),OR:t.lazy(()=>ao).array().optional(),NOT:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>_I).optional(),recipeServingsAmount:t.lazy(()=>Lb).optional(),recipeServingsCost:t.lazy(()=>Lb).optional(),allergens:t.lazy(()=>Tl).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),wZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),NZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Q6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)])}).strict(),ac=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>BF),ingredient:t.lazy(()=>qF)}).strict(),ic=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),Hb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),BZ=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lc=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>LF),equipment:t.lazy(()=>HF).optional()}).strict(),rc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>QF).optional()}).strict(),Qb=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),qZ=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),FZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),DZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),Y6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)])}).strict(),_Z=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),EZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),G6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)])}).strict(),gpt=t.object({update:t.union([t.lazy(()=>z_),t.lazy(()=>m_)]),create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]),where:t.lazy(()=>v).optional()}).strict(),Cpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>z_),t.lazy(()=>m_)])}).strict(),z_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),m_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),BU=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)]),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),qU=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)])}).strict(),FU=t.object({where:t.lazy(()=>cl),data:t.union([t.lazy(()=>aP),t.lazy(()=>Cst)])}).strict(),cl=t.object({AND:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional(),OR:t.lazy(()=>cl).array().optional(),NOT:t.union([t.lazy(()=>cl),t.lazy(()=>cl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>_I).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),DU=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>O8),t.lazy(()=>f8)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),_U=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>O8),t.lazy(()=>f8)])}).strict(),EU=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>WM),t.lazy(()=>Ast)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Apt=t.object({update:t.union([t.lazy(()=>b_),t.lazy(()=>h_)]),create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]),where:t.lazy(()=>M).optional()}).strict(),Spt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>b_),t.lazy(()=>h_)])}).strict(),b_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),h_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Tpt=t.object({update:t.union([t.lazy(()=>I_),t.lazy(()=>g_)]),create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]),where:t.lazy(()=>M).optional()}).strict(),Ppt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>I_),t.lazy(()=>g_)])}).strict(),I_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),g_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),LZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),$6=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),pc=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Iq),RecipeInstruction:t.lazy(()=>Cq).optional()}).strict(),cc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Yb=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),HZ=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uc=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sc=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Gb=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>uc),t.lazy(()=>sc)])}).strict(),QZ=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Upt=t.object({update:t.union([t.lazy(()=>C_),t.lazy(()=>A_)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>N).optional()}).strict(),Wpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>C_),t.lazy(()=>A_)])}).strict(),C_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),A_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),LU=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>w8),t.lazy(()=>N8)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),VU=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>w8),t.lazy(()=>N8)])}).strict(),HU=t.object({where:t.lazy(()=>ul),data:t.union([t.lazy(()=>JT),t.lazy(()=>Sst)])}).strict(),ul=t.object({AND:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional(),OR:t.lazy(()=>ul).array().optional(),NOT:t.union([t.lazy(()=>ul),t.lazy(()=>ul).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),QU=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>B8),t.lazy(()=>q8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>sc)])}).strict(),YU=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>B8),t.lazy(()=>q8)])}).strict(),GU=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>yB),t.lazy(()=>Tst)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>re)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),YZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),GZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),J6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)])}).strict(),$Z=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>pq),maintenanceLogs:t.lazy(()=>uq).optional()}).strict(),JZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>yq).optional()}).strict(),K6=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)])}).strict(),KZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>LF),RecipeVersion:t.lazy(()=>VF).optional()}).strict(),XZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),X6=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)])}).strict(),Rpt=t.object({update:t.union([t.lazy(()=>S_),t.lazy(()=>T_)]),create:t.union([t.lazy(()=>YZ),t.lazy(()=>GZ)]),where:t.lazy(()=>v).optional()}).strict(),kpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>S_),t.lazy(()=>T_)])}).strict(),S_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),T_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),xpt=t.object({update:t.union([t.lazy(()=>P_),t.lazy(()=>U_)]),create:t.union([t.lazy(()=>$Z),t.lazy(()=>JZ)]),where:t.lazy(()=>Ze).optional()}).strict(),jpt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>P_),t.lazy(()=>U_)])}).strict(),P_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>dq).optional(),maintenanceLogs:t.lazy(()=>mq).optional()}).strict(),U_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>hq).optional()}).strict(),Mpt=t.object({update:t.union([t.lazy(()=>W_),t.lazy(()=>R_)]),create:t.union([t.lazy(()=>KZ),t.lazy(()=>XZ)]),where:t.lazy(()=>Be).optional()}).strict(),Zpt=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>W_),t.lazy(()=>R_)])}).strict(),W_=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>YF).optional(),RecipeVersion:t.lazy(()=>GF).optional()}).strict(),R_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),tv=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>pq),recipes:t.lazy(()=>cq).optional()}).strict(),ev=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>sq).optional()}).strict(),t3=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)])}).strict(),vpt=t.object({update:t.union([t.lazy(()=>k_),t.lazy(()=>x_)]),create:t.union([t.lazy(()=>tv),t.lazy(()=>ev)]),where:t.lazy(()=>Ze).optional()}).strict(),Opt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>k_),t.lazy(()=>x_)])}).strict(),k_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>dq).optional(),recipes:t.lazy(()=>zq).optional()}).strict(),x_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>bq).optional()}).strict(),ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),nv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),e3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)])}).strict(),yc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>n5).optional()}).strict(),dc=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>a5).optional()}).strict(),$b=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>yc),t.lazy(()=>dc)])}).strict(),av=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>fq),items:t.lazy(()=>wq).optional()}).strict(),mc=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Nq).optional()}).strict(),Jb=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),iv=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),fpt=t.object({update:t.union([t.lazy(()=>j_),t.lazy(()=>M_)]),create:t.union([t.lazy(()=>ov),t.lazy(()=>nv)]),where:t.lazy(()=>N).optional()}).strict(),wpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>j_),t.lazy(()=>M_)])}).strict(),j_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),M_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),$U=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>F8),t.lazy(()=>D8)]),create:t.union([t.lazy(()=>yc),t.lazy(()=>dc)])}).strict(),JU=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>F8),t.lazy(()=>D8)])}).strict(),KU=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>zB),t.lazy(()=>Pst)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>NB),t.lazy(()=>Lt)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),XU=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>_8),t.lazy(()=>E8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),tW=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>_8),t.lazy(()=>E8)])}).strict(),eW=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>gM),t.lazy(()=>Ust)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),lv=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Pq),completions:t.lazy(()=>Wq).optional()}).strict(),rv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>kq).optional()}).strict(),o3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)])}).strict(),bc=t.object({status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>p5)}).strict(),hc=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Kb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),pv=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Npt=t.object({update:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)]),create:t.union([t.lazy(()=>lv),t.lazy(()=>rv)]),where:t.lazy(()=>ve).optional()}).strict(),Bpt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>Z_),t.lazy(()=>v_)])}).strict(),Z_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xq).optional(),completions:t.lazy(()=>Mq).optional()}).strict(),v_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>vq).optional()}).strict(),oW=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>L8),t.lazy(()=>V8)]),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),nW=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>L8),t.lazy(()=>V8)])}).strict(),aW=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>CM),t.lazy(()=>Wst)])}).strict(),Rl=t.object({AND:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),OR:t.lazy(()=>Rl).array().optional(),NOT:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Et)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Tl).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),cv=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Pq),items:t.lazy(()=>Uq).optional()}).strict(),uv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Rq).optional()}).strict(),n3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)])}).strict(),sv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),yv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),a3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)])}).strict(),Ic=t.object({status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>c5)}).strict(),gc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xb=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),dv=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),qpt=t.object({update:t.union([t.lazy(()=>O_),t.lazy(()=>f_)]),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]),where:t.lazy(()=>ve).optional()}).strict(),Fpt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>O_),t.lazy(()=>f_)])}).strict(),O_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>xq).optional(),items:t.lazy(()=>jq).optional()}).strict(),f_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Zq).optional()}).strict(),Dpt=t.object({update:t.union([t.lazy(()=>w_),t.lazy(()=>N_)]),create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]),where:t.lazy(()=>M).optional()}).strict(),_pt=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>w_),t.lazy(()=>N_)])}).strict(),w_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),N_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),iW=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),lW=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)])}).strict(),rW=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>CM),t.lazy(()=>Rst)])}).strict(),zv=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>Oq),completedBy:t.lazy(()=>fq)}).strict(),mv=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i3=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)])}).strict(),bv=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>o5)}).strict(),hv=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l3=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)])}).strict(),Ept=t.object({update:t.union([t.lazy(()=>B_),t.lazy(()=>q_)]),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]),where:t.lazy(()=>Ye).optional()}).strict(),Lpt=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>B_),t.lazy(()=>q_)])}).strict(),B_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>Bq).optional(),completedBy:t.lazy(()=>qq).optional()}).strict(),q_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vpt=t.object({update:t.union([t.lazy(()=>F_),t.lazy(()=>D_)]),create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]),where:t.lazy(()=>Qe).optional()}).strict(),Hpt=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>F_),t.lazy(()=>D_)])}).strict(),F_=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>i5).optional()}).strict(),D_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Iv=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>CD).optional(),ingredients:t.lazy(()=>AD).optional()}).strict(),gv=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>TD).optional(),ingredients:t.lazy(()=>PD).optional()}).strict(),r3=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)])}).strict(),Cv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),Av=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),p3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)])}).strict(),Qpt=t.object({update:t.union([t.lazy(()=>__),t.lazy(()=>E_)]),create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]),where:t.lazy(()=>Oe).optional()}).strict(),Ypt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>__),t.lazy(()=>E_)])}).strict(),__=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>WD).optional(),ingredients:t.lazy(()=>RD).optional()}).strict(),E_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>xD).optional(),ingredients:t.lazy(()=>jD).optional()}).strict(),Gpt=t.object({update:t.union([t.lazy(()=>L_),t.lazy(()=>V_)]),create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]),where:t.lazy(()=>jt).optional()}).strict(),$pt=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>L_),t.lazy(()=>V_)])}).strict(),L_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),V_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),Sv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional()}).strict(),Tv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional()}).strict(),c3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)])}).strict(),Pv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),Uv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),u3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)])}).strict(),Wv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Rv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),s3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)])}).strict(),Jpt=t.object({update:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)]),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]),where:t.lazy(()=>N).optional()}).strict(),Kpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>H_),t.lazy(()=>Q_)])}).strict(),H_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional()}).strict(),Q_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional()}).strict(),Xpt=t.object({update:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)]),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]),where:t.lazy(()=>Tt).optional()}).strict(),tct=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>Y_),t.lazy(()=>G_)])}).strict(),Y_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),G_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),ect=t.object({update:t.union([t.lazy(()=>$_),t.lazy(()=>J_)]),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]),where:t.lazy(()=>M).optional()}).strict(),oct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>$_),t.lazy(()=>J_)])}).strict(),$_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),J_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Cc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional()}).strict(),Ac=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional()}).strict(),th=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),Sc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Tc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),eh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),Pc=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional()}).strict(),Uc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional()}).strict(),oh=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),pW=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),cW=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)])}).strict(),uW=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>qS),t.lazy(()=>kst)])}).strict(),sW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>$8),t.lazy(()=>J8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),yW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>$8),t.lazy(()=>J8)])}).strict(),dW=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>xst)])}).strict(),le=t.object({AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Tl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>tq),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>eq),t.lazy(()=>U)]).optional()}).strict(),zW=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>K8),t.lazy(()=>X8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),mW=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>K8),t.lazy(()=>X8)])}).strict(),bW=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>UM),t.lazy(()=>jst)])}).strict(),kl=t.object({AND:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),OR:t.lazy(()=>kl).array().optional(),NOT:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nq),t.lazy(()=>ot)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable()}).strict(),Wc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Rc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),nh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),hW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>t7),t.lazy(()=>e7)]),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),IW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>t7),t.lazy(()=>e7)])}).strict(),gW=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>Mst)])}).strict(),kv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),xv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),y3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)])}).strict(),jv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),Mv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),d3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)])}).strict(),Zv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),vv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),z3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)])}).strict(),nct=t.object({update:t.union([t.lazy(()=>K_),t.lazy(()=>X_)]),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]),where:t.lazy(()=>N).optional()}).strict(),act=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>K_),t.lazy(()=>X_)])}).strict(),K_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),X_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),ict=t.object({update:t.union([t.lazy(()=>tE),t.lazy(()=>eE)]),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]),where:t.lazy(()=>Tt).optional()}).strict(),lct=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>tE),t.lazy(()=>eE)])}).strict(),tE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),eE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),rct=t.object({update:t.union([t.lazy(()=>oE),t.lazy(()=>nE)]),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]),where:t.lazy(()=>M).optional()}).strict(),pct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>oE),t.lazy(()=>nE)])}).strict(),oE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),nE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Ov=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),fv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),m3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),wv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),Nv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),b3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)])}).strict(),Bv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),qv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),h3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)])}).strict(),cct=t.object({update:t.union([t.lazy(()=>aE),t.lazy(()=>iE)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>N).optional()}).strict(),uct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>aE),t.lazy(()=>iE)])}).strict(),aE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),iE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),sct=t.object({update:t.union([t.lazy(()=>lE),t.lazy(()=>rE)]),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]),where:t.lazy(()=>jt).optional()}).strict(),yct=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>lE),t.lazy(()=>rE)])}).strict(),lE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),rE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),dct=t.object({update:t.union([t.lazy(()=>pE),t.lazy(()=>cE)]),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]),where:t.lazy(()=>M).optional()}).strict(),zct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>pE),t.lazy(()=>cE)])}).strict(),pE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),cE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Fv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),Dv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),I3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)])}).strict(),_v=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Ev=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),g3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)])}).strict(),kc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>RF),assignedTo:t.lazy(()=>kF).optional()}).strict(),xc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ah=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),mct=t.object({update:t.union([t.lazy(()=>uE),t.lazy(()=>sE)]),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]),where:t.lazy(()=>N).optional()}).strict(),bct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>uE),t.lazy(()=>sE)])}).strict(),uE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),sE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),hct=t.object({update:t.union([t.lazy(()=>yE),t.lazy(()=>dE)]),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]),where:t.lazy(()=>M).optional()}).strict(),Ict=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>yE),t.lazy(()=>dE)])}).strict(),yE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),dE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),CW=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>o7),t.lazy(()=>n7)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),AW=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>o7),t.lazy(()=>n7)])}).strict(),SW=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>oP),t.lazy(()=>Zst)])}).strict(),sl=t.object({AND:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),OR:t.lazy(()=>sl).array().optional(),NOT:t.union([t.lazy(()=>sl),t.lazy(()=>sl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Vv=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IF),createdBy:t.lazy(()=>gF)}).strict(),Hv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),C3=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)])}).strict(),Qv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Yv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),A3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)])}).strict(),Gv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),$v=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),S3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)])}).strict(),gct=t.object({update:t.union([t.lazy(()=>zE),t.lazy(()=>mE)]),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]),where:t.lazy(()=>Ge).optional()}).strict(),Cct=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>zE),t.lazy(()=>mE)])}).strict(),zE=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>SF).optional(),createdBy:t.lazy(()=>TF).optional()}).strict(),mE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Act=t.object({update:t.union([t.lazy(()=>bE),t.lazy(()=>hE)]),create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]),where:t.lazy(()=>v).optional()}).strict(),Sct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>bE),t.lazy(()=>hE)])}).strict(),bE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),hE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Tct=t.object({update:t.union([t.lazy(()=>IE),t.lazy(()=>gE)]),create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]),where:t.lazy(()=>M).optional()}).strict(),Pct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>IE),t.lazy(()=>gE)])}).strict(),IE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),gE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Jv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),user:t.lazy(()=>_5)}).strict(),Kv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),T3=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>Jv),t.lazy(()=>Kv)])}).strict(),Uct=t.object({update:t.union([t.lazy(()=>CE),t.lazy(()=>AE)]),create:t.union([t.lazy(()=>Jv),t.lazy(()=>Kv)]),where:t.lazy(()=>Xe).optional()}).strict(),Wct=t.object({where:t.lazy(()=>Xe).optional(),data:t.union([t.lazy(()=>CE),t.lazy(()=>AE)])}).strict(),CE=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional(),user:t.lazy(()=>V5).optional()}).strict(),AE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional()}).strict(),Xv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),tO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),P3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)])}).strict(),Rct=t.object({update:t.union([t.lazy(()=>SE),t.lazy(()=>TE)]),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]),where:t.lazy(()=>M).optional()}).strict(),kct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>SE),t.lazy(()=>TE)])}).strict(),SE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),TE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),eO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),oO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),U3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)])}).strict(),xct=t.object({update:t.union([t.lazy(()=>PE),t.lazy(()=>UE)]),create:t.union([t.lazy(()=>eO),t.lazy(()=>oO)]),where:t.lazy(()=>M).optional()}).strict(),jct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>PE),t.lazy(()=>UE)])}).strict(),PE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),UE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),nO=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),ingredient:t.lazy(()=>oT),lastUpdatedBy:t.lazy(()=>nT).optional(),transactions:t.lazy(()=>aT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),aO=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),W3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)])}).strict(),iO=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),lO=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),R3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)])}).strict(),rO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),pO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),k3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)])}).strict(),Mct=t.object({update:t.union([t.lazy(()=>WE),t.lazy(()=>RE)]),create:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]),where:t.lazy(()=>ie).optional()}).strict(),Zct=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>WE),t.lazy(()=>RE)])}).strict(),WE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),ingredient:t.lazy(()=>sT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),transactions:t.lazy(()=>dT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),RE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),vct=t.object({update:t.union([t.lazy(()=>kE),t.lazy(()=>xE)]),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]),where:t.lazy(()=>v).optional()}).strict(),Oct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>kE),t.lazy(()=>xE)])}).strict(),kE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),xE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),fct=t.object({update:t.union([t.lazy(()=>jE),t.lazy(()=>ME)]),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]),where:t.lazy(()=>M).optional()}).strict(),wct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>jE),t.lazy(()=>ME)])}).strict(),jE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),ME=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),jc=t.object({ingredient:t.lazy(()=>b5)}).strict(),Mc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),ih=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),cO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),TW=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>a7),t.lazy(()=>i7)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),PW=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>a7),t.lazy(()=>i7)])}).strict(),UW=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>TM),t.lazy(()=>vst)])}).strict(),xl=t.object({AND:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),OR:t.lazy(()=>xl).array().optional(),NOT:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),uO=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),sO=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),x3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>uO),t.lazy(()=>sO)])}).strict(),yO=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),dO=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),j3=t.object({where:t.lazy(()=>pp),create:t.union([t.lazy(()=>yO),t.lazy(()=>dO)])}).strict(),Nct=t.object({update:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)]),create:t.union([t.lazy(()=>uO),t.lazy(()=>sO)]),where:t.lazy(()=>jt).optional()}).strict(),Bct=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>ZE),t.lazy(()=>vE)])}).strict(),ZE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),vE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),qct=t.object({update:t.union([t.lazy(()=>OE),t.lazy(()=>fE)]),create:t.union([t.lazy(()=>yO),t.lazy(()=>dO)]),where:t.lazy(()=>co).optional()}).strict(),Fct=t.object({where:t.lazy(()=>co).optional(),data:t.union([t.lazy(()=>OE),t.lazy(()=>fE)])}).strict(),OE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),fE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),zO=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),mO=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),M3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>zO),t.lazy(()=>mO)])}).strict(),Dct=t.object({update:t.union([t.lazy(()=>wE),t.lazy(()=>NE)]),create:t.union([t.lazy(()=>zO),t.lazy(()=>mO)]),where:t.lazy(()=>Tt).optional()}).strict(),_ct=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>wE),t.lazy(()=>NE)])}).strict(),wE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),NE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),Zc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),vc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),lh=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),fc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),rh=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),WW=t.object({where:t.lazy(()=>K),update:t.union([t.lazy(()=>l7),t.lazy(()=>r7)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),RW=t.object({where:t.lazy(()=>K),data:t.union([t.lazy(()=>l7),t.lazy(()=>r7)])}).strict(),kW=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>CB),t.lazy(()=>Ost)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable()}).strict(),xW=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>p7),t.lazy(()=>c7)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),jW=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>p7),t.lazy(()=>c7)])}).strict(),MW=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>PM),t.lazy(()=>fst)])}).strict(),jl=t.object({AND:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),OR:t.lazy(()=>jl).array().optional(),NOT:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),organizationId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),IO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),gO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),Z3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)])}).strict(),wc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>oT),lastUpdatedBy:t.lazy(()=>nT).optional(),transactions:t.lazy(()=>aT).optional(),withdrawals:t.lazy(()=>iT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),withdrawals:t.lazy(()=>pT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),ph=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),CO=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bc=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>XF),createdBy:t.lazy(()=>tD)}).strict(),qc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),ch=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),AO=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fc=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>iD),items:t.lazy(()=>lD).optional()}).strict(),Dc=t.object({id:t.number().int().optional(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>rD).optional()}).strict(),uh=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),SO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ect=t.object({update:t.union([t.lazy(()=>BE),t.lazy(()=>qE)]),create:t.union([t.lazy(()=>IO),t.lazy(()=>gO)]),where:t.lazy(()=>N).optional()}).strict(),Lct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>BE),t.lazy(()=>qE)])}).strict(),BE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),qE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),ZW=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>u7),t.lazy(()=>s7)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),vW=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>u7),t.lazy(()=>s7)])}).strict(),OW=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>iP),t.lazy(()=>wst)])}).strict(),yl=t.object({AND:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),OR:t.lazy(()=>yl).array().optional(),NOT:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>et),t.number()]).optional().nullable()}).strict(),fW=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>y7),t.lazy(()=>d7)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),wW=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>y7),t.lazy(()=>d7)])}).strict(),NW=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>lP),t.lazy(()=>Nst)])}).strict(),dl=t.object({AND:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),OR:t.lazy(()=>dl).array().optional(),NOT:t.union([t.lazy(()=>dl),t.lazy(()=>dl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>aq),t.lazy(()=>vt)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),BW=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>z7),t.lazy(()=>m7)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),qW=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>z7),t.lazy(()=>m7)])}).strict(),FW=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>RM),t.lazy(()=>Bst)])}).strict(),Ml=t.object({AND:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),OR:t.lazy(()=>Ml).array().optional(),NOT:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>iq),t.lazy(()=>ft)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),TO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>A5).optional()}).strict(),PO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>T5).optional()}).strict(),v3=t.object({where:t.lazy(()=>ql),create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)])}).strict(),_c=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Ec=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),sh=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>k5).optional()}).strict(),Vc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>j5).optional()}).strict(),yh=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),WO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),gT=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>oZ).optional(),transactions:t.lazy(()=>nZ).optional(),stockCounts:t.lazy(()=>aZ).optional()}).strict(),CT=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>iZ).optional(),transactions:t.lazy(()=>lZ).optional(),stockCounts:t.lazy(()=>rZ).optional()}).strict(),RO=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)])}).strict(),Hc=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>dD),items:t.lazy(()=>zD).optional()}).strict(),Qc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>mD).optional()}).strict(),dh=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),kO=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Gc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),zh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),xO=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>qD).optional(),MenuCategory:t.lazy(()=>FD).optional()}).strict(),Jc=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>DD).optional(),MenuCategory:t.lazy(()=>_D).optional()}).strict(),mh=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),jO=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Q2)}).strict(),Xc=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bh=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),MO=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>rF),recordedBy:t.lazy(()=>pF)}).strict(),eu=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),ZO=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),ou=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>dF),recordedBy:t.lazy(()=>zF)}).strict(),nu=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ih=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),vO=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),au=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>gF),items:t.lazy(()=>CF).optional()}).strict(),iu=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>AF).optional()}).strict(),gh=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),OO=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lu=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>cq).optional(),maintenanceLogs:t.lazy(()=>uq).optional()}).strict(),ru=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>sq).optional(),maintenanceLogs:t.lazy(()=>yq).optional()}).strict(),Ch=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),fO=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Uq).optional(),completions:t.lazy(()=>Wq).optional()}).strict(),cu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Rq).optional(),completions:t.lazy(()=>kq).optional()}).strict(),Ah=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Eq).optional(),respondedBy:t.lazy(()=>Lq).optional()}).strict(),su=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Sh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>uu),t.lazy(()=>su)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Vct=t.object({update:t.union([t.lazy(()=>FE),t.lazy(()=>DE)]),create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]),where:t.lazy(()=>Me).optional()}).strict(),Hct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>FE),t.lazy(()=>DE)])}).strict(),FE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>U5).optional()}).strict(),DE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>R5).optional()}).strict(),DW=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>b7),t.lazy(()=>h7)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),_W=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>b7),t.lazy(()=>h7)])}).strict(),EW=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>PM),t.lazy(()=>qst)])}).strict(),LW=t.object({where:t.lazy(()=>ee),update:t.union([t.lazy(()=>I7),t.lazy(()=>g7)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),VW=t.object({where:t.lazy(()=>ee),data:t.union([t.lazy(()=>I7),t.lazy(()=>g7)])}).strict(),HW=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>TB),t.lazy(()=>Fst)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>at),t.number()]).optional().nullable()}).strict(),O3=t.object({update:t.union([t.lazy(()=>BO),t.lazy(()=>qO)]),create:t.union([t.lazy(()=>gT),t.lazy(()=>CT)]),where:t.lazy(()=>Ft).optional()}).strict(),f3=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>BO),t.lazy(()=>qO)])}).strict(),BO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>cZ).optional(),transactions:t.lazy(()=>uZ).optional(),stockCounts:t.lazy(()=>sZ).optional()}).strict(),qO=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>yZ).optional(),transactions:t.lazy(()=>dZ).optional(),stockCounts:t.lazy(()=>zZ).optional()}).strict(),QW=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>C7),t.lazy(()=>A7)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),YW=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>C7),t.lazy(()=>A7)])}).strict(),GW=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>xM),t.lazy(()=>Dst)])}).strict(),Zl=t.object({AND:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),OR:t.lazy(()=>Zl).array().optional(),NOT:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>lq),t.lazy(()=>wt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),$W=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>S7),t.lazy(()=>T7)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),JW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>S7),t.lazy(()=>T7)])}).strict(),KW=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>_st)])}).strict(),XW=t.object({where:t.lazy(()=>Gt),update:t.union([t.lazy(()=>P7),t.lazy(()=>U7)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),tR=t.object({where:t.lazy(()=>Gt),data:t.union([t.lazy(()=>P7),t.lazy(()=>U7)])}).strict(),eR=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>kB),t.lazy(()=>Est)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),oR=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>W7),t.lazy(()=>R7)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),nR=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>W7),t.lazy(()=>R7)])}).strict(),aR=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>IM),t.lazy(()=>Lst)])}).strict(),vl=t.object({AND:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),OR:t.lazy(()=>vl).array().optional(),NOT:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),iR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>k7),t.lazy(()=>x7)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),lR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>k7),t.lazy(()=>x7)])}).strict(),rR=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>tP),t.lazy(()=>Vst)])}).strict(),zl=t.object({AND:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),OR:t.lazy(()=>zl).array().optional(),NOT:t.union([t.lazy(()=>zl),t.lazy(()=>zl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),pR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>j7),t.lazy(()=>M7)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),cR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>j7),t.lazy(()=>M7)])}).strict(),uR=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>eP),t.lazy(()=>Hst)])}).strict(),ml=t.object({AND:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),OR:t.lazy(()=>ml).array().optional(),NOT:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),sR=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)]),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),yR=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)])}).strict(),dR=t.object({where:t.lazy(()=>Ol),data:t.union([t.lazy(()=>SM),t.lazy(()=>Qst)])}).strict(),Ol=t.object({AND:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional(),OR:t.lazy(()=>Ol).array().optional(),NOT:t.union([t.lazy(()=>Ol),t.lazy(()=>Ol).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>DB),t.lazy(()=>Ot)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),zR=t.object({where:t.lazy(()=>Ht),update:t.union([t.lazy(()=>O7),t.lazy(()=>f7)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),mR=t.object({where:t.lazy(()=>Ht),data:t.union([t.lazy(()=>O7),t.lazy(()=>f7)])}).strict(),bR=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>sB),t.lazy(()=>Yst)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>vB),t.lazy(()=>Bt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),hR=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>w7),t.lazy(()=>N7)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),IR=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>w7),t.lazy(()=>N7)])}).strict(),gR=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>dB),t.lazy(()=>Gst)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>wB),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),CR=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>B7),t.lazy(()=>q7)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>su)])}).strict(),AR=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>B7),t.lazy(()=>q7)])}).strict(),SR=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>KT),t.lazy(()=>$st)])}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>qB),t.lazy(()=>Mt)]).optional(),tags:t.lazy(()=>Tl).optional(),status:t.union([t.lazy(()=>FB),t.lazy(()=>Zt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),FO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>C5).optional()}).strict(),DO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>S5).optional()}).strict(),w3=t.object({where:t.lazy(()=>ql),create:t.union([t.lazy(()=>FO),t.lazy(()=>DO)])}).strict(),_O=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),EO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),N3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>_O),t.lazy(()=>EO)])}).strict(),yu=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>E5).optional()}).strict(),du=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt),tasks:t.lazy(()=>L5).optional()}).strict(),Th=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>yu),t.lazy(()=>du)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>ZD),recipe:t.lazy(()=>vD)}).strict(),mu=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),Ph=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),ingredient:t.lazy(()=>oT),transactions:t.lazy(()=>aT).optional(),withdrawals:t.lazy(()=>iT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),hu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),withdrawals:t.lazy(()=>pT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),Uh=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),HO=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),gu=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),Wh=t.object({where:t.lazy(()=>Re),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),QO=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Au=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Rh=t.object({where:t.lazy(()=>ke),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),YO=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>lF),menuItem:t.lazy(()=>rF)}).strict(),Tu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),GO=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yF),ingrediente:t.lazy(()=>dF)}).strict(),Uu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),$O=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wu=t.object({date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>IF),items:t.lazy(()=>CF).optional()}).strict(),Ru=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>AF).optional()}).strict(),jh=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),JO=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>WF),recipe:t.lazy(()=>RF)}).strict(),xu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),KO=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Mu=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zh=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),XO=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vu=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vh=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),tf=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>ZF),recipe:t.lazy(()=>vF).optional()}).strict(),fu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),ef=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),wu=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>Oq),items:t.lazy(()=>wq).optional()}).strict(),Nu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Nq).optional()}).strict(),fh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),of=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_q),menuItem:t.lazy(()=>Eq).optional()}).strict(),qu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),nf=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fu=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>pP),ingredients:t.lazy(()=>cP).optional(),instructions:t.lazy(()=>uP).optional(),approvedBy:t.lazy(()=>yP).optional()}).strict(),Du=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>dP).optional(),instructions:t.lazy(()=>zP).optional()}).strict(),Nh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),af=t.object({data:t.union([t.lazy(()=>bQ),t.lazy(()=>bQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_u=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>pP),ingredients:t.lazy(()=>cP).optional(),instructions:t.lazy(()=>uP).optional(),createdBy:t.lazy(()=>sP)}).strict(),Eu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>dP).optional(),instructions:t.lazy(()=>zP).optional()}).strict(),Bh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),lf=t.object({data:t.union([t.lazy(()=>hQ),t.lazy(()=>hQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lu=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>KF),item:t.lazy(()=>XF)}).strict(),Vu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),qh=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>IQ),t.lazy(()=>IQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hu=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>aD),items:t.lazy(()=>lD).optional()}).strict(),Qu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>rD).optional()}).strict(),Fh=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>gQ),t.lazy(()=>gQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yu=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),Gu=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),Dh=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>CQ),t.lazy(()=>CQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qct=t.object({update:t.union([t.lazy(()=>_E),t.lazy(()=>EE)]),create:t.union([t.lazy(()=>FO),t.lazy(()=>DO)]),where:t.lazy(()=>Me).optional()}).strict(),Yct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>_E),t.lazy(()=>EE)])}).strict(),_E=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>P5).optional()}).strict(),EE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>W5).optional()}).strict(),Gct=t.object({update:t.union([t.lazy(()=>LE),t.lazy(()=>VE)]),create:t.union([t.lazy(()=>_O),t.lazy(()=>EO)]),where:t.lazy(()=>N).optional()}).strict(),$ct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>LE),t.lazy(()=>VE)])}).strict(),LE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),VE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),TR=t.object({where:t.lazy(()=>oe),update:t.union([t.lazy(()=>F7),t.lazy(()=>D7)]),create:t.union([t.lazy(()=>yu),t.lazy(()=>du)])}).strict(),PR=t.object({where:t.lazy(()=>oe),data:t.union([t.lazy(()=>F7),t.lazy(()=>D7)])}).strict(),UR=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>UB),t.lazy(()=>Jst)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>rq),t.lazy(()=>Vt)]).optional()}).strict(),WR=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>_7),t.lazy(()=>E7)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),RR=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>_7),t.lazy(()=>E7)])}).strict(),kR=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>Kst)])}).strict(),hl=t.object({AND:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),OR:t.lazy(()=>hl).array().optional(),NOT:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),xR=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>L7),t.lazy(()=>V7)]),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),jR=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>L7),t.lazy(()=>V7)])}).strict(),MR=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>iP),t.lazy(()=>Xst)])}).strict(),ZR=t.object({where:t.lazy(()=>Re),update:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),vR=t.object({where:t.lazy(()=>Re),data:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)])}).strict(),OR=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>SB),t.lazy(()=>tyt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),verificationCode:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),fR=t.object({where:t.lazy(()=>ke),update:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),wR=t.object({where:t.lazy(()=>ke),data:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)])}).strict(),NR=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>RB),t.lazy(()=>eyt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),BR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>$7),t.lazy(()=>J7)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),qR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>$7),t.lazy(()=>J7)])}).strict(),FR=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>tP),t.lazy(()=>oyt)])}).strict(),DR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>K7),t.lazy(()=>X7)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),_R=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>K7),t.lazy(()=>X7)])}).strict(),ER=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>eP),t.lazy(()=>nyt)])}).strict(),LR=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)]),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),VR=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)])}).strict(),HR=t.object({where:t.lazy(()=>Ol),data:t.union([t.lazy(()=>SM),t.lazy(()=>ayt)])}).strict(),QR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),YR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)])}).strict(),GR=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>oP),t.lazy(()=>iyt)])}).strict(),$R=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),JR=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)])}).strict(),KR=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>hB),t.lazy(()=>lyt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>LB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),XR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),tk=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)])}).strict(),ek=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>IB),t.lazy(()=>ryt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>VB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ok=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),nk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)])}).strict(),ak=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>nP),t.lazy(()=>pyt)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ik=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>uJ),t.lazy(()=>sJ)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),lk=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>uJ),t.lazy(()=>sJ)])}).strict(),rk=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>gM),t.lazy(()=>cyt)])}).strict(),pk=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>yJ),t.lazy(()=>dJ)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),ck=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>yJ),t.lazy(()=>dJ)])}).strict(),uk=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>KT),t.lazy(()=>uyt)])}).strict(),sk=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),yk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)])}).strict(),dk=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>$T),t.lazy(()=>syt)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),zk=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),mk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)])}).strict(),bk=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>$T),t.lazy(()=>yyt)])}).strict(),hk=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),Ik=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)])}).strict(),gk=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>lP),t.lazy(()=>dyt)])}).strict(),Ck=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),Ak=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)])}).strict(),Sk=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>RM),t.lazy(()=>zyt)])}).strict(),Tk=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),Pk=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)])}).strict(),Uk=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>AB),t.lazy(()=>myt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),role:t.union([t.lazy(()=>XB),t.lazy(()=>se)]).optional()}).strict(),uf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional()}).strict(),sf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional()}).strict(),B3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>uf),t.lazy(()=>sf)])}).strict(),Jct=t.object({update:t.union([t.lazy(()=>HE),t.lazy(()=>QE)]),create:t.union([t.lazy(()=>uf),t.lazy(()=>sf)]),where:t.lazy(()=>M).optional()}).strict(),Kct=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>HE),t.lazy(()=>QE)])}).strict(),HE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional()}).strict(),QE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional()}).strict(),yf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),df=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),q3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>yf),t.lazy(()=>df)])}).strict(),Xct=t.object({update:t.union([t.lazy(()=>YE),t.lazy(()=>GE)]),create:t.union([t.lazy(()=>yf),t.lazy(()=>df)]),where:t.lazy(()=>M).optional()}).strict(),tut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>YE),t.lazy(()=>GE)])}).strict(),YE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),GE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),$u=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Ju=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),_h=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),zf=t.object({data:t.union([t.lazy(()=>AQ),t.lazy(()=>AQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),mf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),bf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),F3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)])}).strict(),Wk=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),Rk=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)])}).strict(),kk=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>byt)])}).strict(),eut=t.object({update:t.union([t.lazy(()=>$E),t.lazy(()=>JE)]),create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]),where:t.lazy(()=>N).optional()}).strict(),out=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>$E),t.lazy(()=>JE)])}).strict(),$E=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),JE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),hf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),If=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),D3=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>hf),t.lazy(()=>If)])}).strict(),gf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>x5).optional()}).strict(),Cf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),_3=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)])}).strict(),Ku=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>qF),recipeVersion:t.lazy(()=>FF).optional()}).strict(),Xu=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Eh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),Af=t.object({data:t.union([t.lazy(()=>SQ),t.lazy(()=>SQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ts=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>VF).optional(),equipment:t.lazy(()=>HF).optional()}).strict(),es=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>QF).optional()}).strict(),Lh=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),Sf=t.object({data:t.union([t.lazy(()=>TQ),t.lazy(()=>TQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),os=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),ns=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Vh=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),as=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),is=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Hh=t.object({where:t.lazy(()=>xe),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),Tf=t.object({data:t.union([t.lazy(()=>PQ),t.lazy(()=>PQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ls=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rs=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qh=t.object({where:t.lazy(()=>je),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Pf=t.object({data:t.union([t.lazy(()=>UQ),t.lazy(()=>UQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ps=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>G5).optional()}).strict(),cs=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>J5).optional()}).strict(),Yh=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),us=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),prepBoard:t.lazy(()=>ZD),assignedTo:t.lazy(()=>OD)}).strict(),ss=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),Gh=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>us),t.lazy(()=>ss)])}).strict(),Uf=t.object({data:t.union([t.lazy(()=>WQ),t.lazy(()=>WQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ys=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>o6)}).strict(),ds=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),$h=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>ys),t.lazy(()=>ds)])}).strict(),Wf=t.object({data:t.union([t.lazy(()=>RQ),t.lazy(()=>RQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),zs=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>WF),assignedTo:t.lazy(()=>kF).optional()}).strict(),ms=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Jh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),Rf=t.object({data:t.union([t.lazy(()=>kQ),t.lazy(()=>kQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bs=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>ZF),createdBy:t.lazy(()=>OF)}).strict(),hs=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Kh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),kf=t.object({data:t.union([t.lazy(()=>xQ),t.lazy(()=>xQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Is=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xh=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),Cs=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>cP).optional(),instructions:t.lazy(()=>uP).optional(),createdBy:t.lazy(()=>sP),approvedBy:t.lazy(()=>yP).optional()}).strict(),As=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>dP).optional(),instructions:t.lazy(()=>zP).optional()}).strict(),tI=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),xf=t.object({data:t.union([t.lazy(()=>jQ),t.lazy(()=>jQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>gq),RecipeInstruction:t.lazy(()=>Cq).optional()}).strict(),Ts=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),eI=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),jf=t.object({data:t.union([t.lazy(()=>MQ),t.lazy(()=>MQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ps=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Yq).optional(),ingredients:t.lazy(()=>$q).optional()}).strict(),Us=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Jq).optional(),ingredients:t.lazy(()=>Xq).optional()}).strict(),oI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),Ws=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Rs=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nI=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),Mf=t.object({data:t.union([t.lazy(()=>ZQ),t.lazy(()=>ZQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ks=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xs=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aI=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>ks),t.lazy(()=>xs)])}).strict(),Zf=t.object({data:t.union([t.lazy(()=>vQ),t.lazy(()=>vQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),js=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ms=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iI=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>js),t.lazy(()=>Ms)])}).strict(),vf=t.object({data:t.union([t.lazy(()=>OQ),t.lazy(()=>OQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),AT=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),ST=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),Of=t.object({where:t.lazy(()=>Ll),create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)])}).strict(),Zs=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vs=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lI=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>Zs),t.lazy(()=>vs)])}).strict(),ff=t.object({data:t.union([t.lazy(()=>fQ),t.lazy(()=>fQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),TT=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PT=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wf=t.object({where:t.lazy(()=>Vl),create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)])}).strict(),Os=t.object({url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fs=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rI=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>Os),t.lazy(()=>fs)])}).strict(),Nf=t.object({data:t.union([t.lazy(()=>wQ),t.lazy(()=>wQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),UT=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),WT=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),Bf=t.object({where:t.lazy(()=>Hl),create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)])}).strict(),nut=t.object({update:t.union([t.lazy(()=>KE),t.lazy(()=>XE)]),create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]),where:t.lazy(()=>N).optional()}).strict(),aut=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>KE),t.lazy(()=>XE)])}).strict(),KE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),XE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),iut=t.object({update:t.union([t.lazy(()=>tL),t.lazy(()=>eL)]),create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]),where:t.lazy(()=>$e).optional()}).strict(),lut=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>tL),t.lazy(()=>eL)])}).strict(),tL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurant:t.lazy(()=>Z5).optional()}).strict(),eL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),xk=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),jk=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)])}).strict(),Mk=t.object({where:t.lazy(()=>cl),data:t.union([t.lazy(()=>aP),t.lazy(()=>hyt)])}).strict(),Zk=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),vk=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)])}).strict(),Ok=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>WM),t.lazy(()=>Iyt)])}).strict(),fk=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)]),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),wk=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)])}).strict(),Nk=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>qS),t.lazy(()=>gyt)])}).strict(),Bk=t.object({where:t.lazy(()=>xe),update:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)]),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),qk=t.object({where:t.lazy(()=>xe),data:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)])}).strict(),Fk=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>xB),t.lazy(()=>Cyt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Dk=t.object({where:t.lazy(()=>je),update:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),_k=t.object({where:t.lazy(()=>je),data:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)])}).strict(),Ek=t.object({where:t.lazy(()=>Bp),data:t.union([t.lazy(()=>jB),t.lazy(()=>Ayt)])}).strict(),Bp=t.object({AND:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),OR:t.lazy(()=>Bp).array().optional(),NOT:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Lk=t.object({where:t.lazy(()=>ne),update:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),Vk=t.object({where:t.lazy(()=>ne),data:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)])}).strict(),Hk=t.object({where:t.lazy(()=>qp),data:t.union([t.lazy(()=>WB),t.lazy(()=>Syt)])}).strict(),qp=t.object({AND:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),OR:t.lazy(()=>qp).array().optional(),NOT:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>tT),t.lazy(()=>tt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Qk=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ss)])}).strict(),Yk=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)])}).strict(),Gk=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>Tyt)])}).strict(),$k=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)]),create:t.union([t.lazy(()=>ys),t.lazy(()=>ds)])}).strict(),Jk=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)])}).strict(),Kk=t.object({where:t.lazy(()=>fl),data:t.union([t.lazy(()=>MM),t.lazy(()=>Pyt)])}).strict(),fl=t.object({AND:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional(),OR:t.lazy(()=>fl).array().optional(),NOT:t.union([t.lazy(()=>fl),t.lazy(()=>fl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Xk=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),tx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)])}).strict(),ex=t.object({where:t.lazy(()=>sl),data:t.union([t.lazy(()=>oP),t.lazy(()=>Uyt)])}).strict(),ox=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)]),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),nx=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)])}).strict(),ax=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>nP),t.lazy(()=>Wyt)])}).strict(),ix=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),lx=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)])}).strict(),rx=t.object({where:t.lazy(()=>Fp),data:t.union([t.lazy(()=>mB),t.lazy(()=>Ryt)])}).strict(),Fp=t.object({AND:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),OR:t.lazy(()=>Fp).array().optional(),NOT:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),px=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),cx=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)])}).strict(),ux=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>$T),t.lazy(()=>kyt)])}).strict(),sx=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),yx=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)])}).strict(),dx=t.object({where:t.lazy(()=>ul),data:t.union([t.lazy(()=>JT),t.lazy(()=>xyt)])}).strict(),zx=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)]),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),mx=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)])}).strict(),bx=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>XT),t.lazy(()=>jyt)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),hx=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>tK),t.lazy(()=>eK)]),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),Ix=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>tK),t.lazy(()=>eK)])}).strict(),gx=t.object({where:t.lazy(()=>Dp),data:t.union([t.lazy(()=>rB),t.lazy(()=>Myt)])}).strict(),Dp=t.object({AND:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),OR:t.lazy(()=>Dp).array().optional(),NOT:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Cx=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>oK),t.lazy(()=>nK)]),create:t.union([t.lazy(()=>ks),t.lazy(()=>xs)])}).strict(),Ax=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>oK),t.lazy(()=>nK)])}).strict(),Sx=t.object({where:t.lazy(()=>_p),data:t.union([t.lazy(()=>pB),t.lazy(()=>Zyt)])}).strict(),_p=t.object({AND:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),OR:t.lazy(()=>_p).array().optional(),NOT:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Tx=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>aK),t.lazy(()=>iK)]),create:t.union([t.lazy(()=>js),t.lazy(()=>Ms)])}).strict(),Px=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>aK),t.lazy(()=>iK)])}).strict(),Ux=t.object({where:t.lazy(()=>Ep),data:t.union([t.lazy(()=>cB),t.lazy(()=>vyt)])}).strict(),Ep=t.object({AND:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),OR:t.lazy(()=>Ep).array().optional(),NOT:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),E3=t.object({update:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)]),create:t.union([t.lazy(()=>AT),t.lazy(()=>ST)]),where:t.lazy(()=>qe).optional()}).strict(),L3=t.object({where:t.lazy(()=>qe).optional(),data:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)])}).strict(),qf=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),Ff=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>d)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>d)]).optional()}).strict(),Wx=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>lK),t.lazy(()=>rK)]),create:t.union([t.lazy(()=>Zs),t.lazy(()=>vs)])}).strict(),Rx=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>lK),t.lazy(()=>rK)])}).strict(),kx=t.object({where:t.lazy(()=>Lp),data:t.union([t.lazy(()=>iB),t.lazy(()=>Oyt)])}).strict(),Lp=t.object({AND:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional(),OR:t.lazy(()=>Lp).array().optional(),NOT:t.union([t.lazy(()=>Lp),t.lazy(()=>Lp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>et),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),V3=t.object({update:t.union([t.lazy(()=>Df),t.lazy(()=>_f)]),create:t.union([t.lazy(()=>TT),t.lazy(()=>PT)]),where:t.lazy(()=>Fe).optional()}).strict(),H3=t.object({where:t.lazy(()=>Fe).optional(),data:t.union([t.lazy(()=>Df),t.lazy(()=>_f)])}).strict(),Df=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_f=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xx=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>pK),t.lazy(()=>cK)]),create:t.union([t.lazy(()=>Os),t.lazy(()=>fs)])}).strict(),jx=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>pK),t.lazy(()=>cK)])}).strict(),Mx=t.object({where:t.lazy(()=>Vp),data:t.union([t.lazy(()=>lB),t.lazy(()=>fyt)])}).strict(),Vp=t.object({AND:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),OR:t.lazy(()=>Vp).array().optional(),NOT:t.union([t.lazy(()=>Vp),t.lazy(()=>Vp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>MB),t.lazy(()=>ye)]).optional(),stepNumber:t.union([t.lazy(()=>at),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Q3=t.object({update:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]),create:t.union([t.lazy(()=>UT),t.lazy(()=>WT)]),where:t.lazy(()=>De).optional()}).strict(),Y3=t.object({where:t.lazy(()=>De).optional(),data:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)])}).strict(),Ef=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Lf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),ws=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>BF),recipeVersion:t.lazy(()=>FF).optional()}).strict(),Ns=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),pI=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>ws),t.lazy(()=>Ns)])}).strict(),Vf=t.object({data:t.union([t.lazy(()=>NQ),t.lazy(()=>NQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bs=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),lastUpdatedBy:t.lazy(()=>nT).optional(),transactions:t.lazy(()=>aT).optional(),withdrawals:t.lazy(()=>iT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),qs=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),withdrawals:t.lazy(()=>pT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),cI=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Bs),t.lazy(()=>qs)])}).strict(),Hf=t.object({data:t.union([t.lazy(()=>BQ),t.lazy(()=>BQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fs=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>B5)}).strict(),Ds=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),uI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>Fs),t.lazy(()=>Ds)])}).strict(),Qf=t.object({data:t.union([t.lazy(()=>qQ),t.lazy(()=>qQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_s=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>CD).optional(),supplierPriceHistory:t.lazy(()=>SD).optional()}).strict(),Es=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>TD).optional(),supplierPriceHistory:t.lazy(()=>UD).optional()}).strict(),sI=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>_s),t.lazy(()=>Es)])}).strict(),Ls=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yF),recordedBy:t.lazy(()=>zF)}).strict(),Vs=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yI=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Ls),t.lazy(()=>Vs)])}).strict(),Yf=t.object({data:t.union([t.lazy(()=>FQ),t.lazy(()=>FQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hs=t.object({allergen:t.lazy(()=>h5)}).strict(),Qs=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),dI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>Hs),t.lazy(()=>Qs)])}).strict(),Gf=t.object({data:t.union([t.lazy(()=>DQ),t.lazy(()=>DQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ys=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>y5)}).strict(),Gs=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Ys),t.lazy(()=>Gs)])}).strict(),$f=t.object({data:t.union([t.lazy(()=>_Q),t.lazy(()=>_Q).array()]),skipDuplicates:t.boolean().optional()}).strict(),$s=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Yq).optional(),recipes:t.lazy(()=>Gq).optional()}).strict(),Js=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Jq).optional(),recipes:t.lazy(()=>Kq).optional()}).strict(),mI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>$s),t.lazy(()=>Js)])}).strict(),Zx=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>uK),t.lazy(()=>sK)]),create:t.union([t.lazy(()=>ws),t.lazy(()=>Ns)])}).strict(),vx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>uK),t.lazy(()=>sK)])}).strict(),Ox=t.object({where:t.lazy(()=>cl),data:t.union([t.lazy(()=>aP),t.lazy(()=>wyt)])}).strict(),fx=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>yK),t.lazy(()=>dK)]),create:t.union([t.lazy(()=>Bs),t.lazy(()=>qs)])}).strict(),wx=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>yK),t.lazy(()=>dK)])}).strict(),Nx=t.object({where:t.lazy(()=>yl),data:t.union([t.lazy(()=>iP),t.lazy(()=>Nyt)])}).strict(),Bx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>zK),t.lazy(()=>mK)]),create:t.union([t.lazy(()=>Fs),t.lazy(()=>Ds)])}).strict(),qx=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>zK),t.lazy(()=>mK)])}).strict(),Fx=t.object({where:t.lazy(()=>wl),data:t.union([t.lazy(()=>jM),t.lazy(()=>Byt)])}).strict(),wl=t.object({AND:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional(),OR:t.lazy(()=>wl).array().optional(),NOT:t.union([t.lazy(()=>wl),t.lazy(()=>wl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional()}).strict(),Dx=t.object({where:t.lazy(()=>Yt),update:t.union([t.lazy(()=>bK),t.lazy(()=>hK)]),create:t.union([t.lazy(()=>_s),t.lazy(()=>Es)])}).strict(),_x=t.object({where:t.lazy(()=>Yt),data:t.union([t.lazy(()=>bK),t.lazy(()=>hK)])}).strict(),Ex=t.object({where:t.lazy(()=>Hp),data:t.union([t.lazy(()=>PB),t.lazy(()=>qyt)])}).strict(),Hp=t.object({AND:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional(),OR:t.lazy(()=>Hp).array().optional(),NOT:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Lx=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>IK),t.lazy(()=>gK)]),create:t.union([t.lazy(()=>Ls),t.lazy(()=>Vs)])}).strict(),Vx=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>IK),t.lazy(()=>gK)])}).strict(),Hx=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>eP),t.lazy(()=>Fyt)])}).strict(),Qx=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>CK),t.lazy(()=>AK)]),create:t.union([t.lazy(()=>Hs),t.lazy(()=>Qs)])}).strict(),Yx=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>CK),t.lazy(()=>AK)])}).strict(),Gx=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>TM),t.lazy(()=>Dyt)])}).strict(),$x=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>SK),t.lazy(()=>TK)]),create:t.union([t.lazy(()=>Ys),t.lazy(()=>Gs)])}).strict(),Jx=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>SK),t.lazy(()=>TK)])}).strict(),Kx=t.object({where:t.lazy(()=>Nl),data:t.union([t.lazy(()=>AM),t.lazy(()=>_yt)])}).strict(),Nl=t.object({AND:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional(),OR:t.lazy(()=>Nl).array().optional(),NOT:t.union([t.lazy(()=>Nl),t.lazy(()=>Nl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>$t),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Xx=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>PK),t.lazy(()=>UK)]),create:t.union([t.lazy(()=>$s),t.lazy(()=>Js)])}).strict(),tj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>PK),t.lazy(()=>UK)])}).strict(),ej=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>XT),t.lazy(()=>Eyt)])}).strict(),Jf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Kf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),G3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),Xf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),tw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),$3=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)])}).strict(),ew=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>pP),instructions:t.lazy(()=>uP).optional(),createdBy:t.lazy(()=>sP),approvedBy:t.lazy(()=>yP).optional()}).strict(),ow=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>zP).optional()}).strict(),J3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)])}).strict(),rut=t.object({update:t.union([t.lazy(()=>oL),t.lazy(()=>nL)]),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),where:t.lazy(()=>v).optional()}).strict(),put=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>oL),t.lazy(()=>nL)])}).strict(),oL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),nL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),cut=t.object({update:t.union([t.lazy(()=>aL),t.lazy(()=>iL)]),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]),where:t.lazy(()=>jt).optional()}).strict(),uut=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>aL),t.lazy(()=>iL)])}).strict(),aL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),iL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),sut=t.object({update:t.union([t.lazy(()=>lL),t.lazy(()=>rL)]),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]),where:t.lazy(()=>ae).optional()}).strict(),yut=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>lL),t.lazy(()=>rL)])}).strict(),lL=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>mP).optional(),instructions:t.lazy(()=>hP).optional(),createdBy:t.lazy(()=>IP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),rL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),nw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),aw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),K3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)])}).strict(),iw=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>pP),ingredients:t.lazy(()=>cP).optional(),createdBy:t.lazy(()=>sP),approvedBy:t.lazy(()=>yP).optional()}).strict(),lw=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>dP).optional()}).strict(),X3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)])}).strict(),Ks=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>Iq),equipment:t.lazy(()=>gq)}).strict(),Xs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),bI=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>Ks),t.lazy(()=>Xs)])}).strict(),rw=t.object({data:t.union([t.lazy(()=>EQ),t.lazy(()=>EQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),dut=t.object({update:t.union([t.lazy(()=>pL),t.lazy(()=>cL)]),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]),where:t.lazy(()=>v).optional()}).strict(),zut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>pL),t.lazy(()=>cL)])}).strict(),pL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),cL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),mut=t.object({update:t.union([t.lazy(()=>uL),t.lazy(()=>sL)]),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]),where:t.lazy(()=>ae).optional()}).strict(),but=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>uL),t.lazy(()=>sL)])}).strict(),uL=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>mP).optional(),ingredients:t.lazy(()=>bP).optional(),createdBy:t.lazy(()=>IP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),sL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>CP).optional()}).strict(),oj=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>WK),t.lazy(()=>RK)]),create:t.union([t.lazy(()=>Ks),t.lazy(()=>Xs)])}).strict(),nj=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>WK),t.lazy(()=>RK)])}).strict(),aj=t.object({where:t.lazy(()=>ul),data:t.union([t.lazy(()=>JT),t.lazy(()=>Lyt)])}).strict(),pw=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eZ),transactions:t.lazy(()=>nZ).optional(),stockCounts:t.lazy(()=>aZ).optional()}).strict(),cw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>lZ).optional(),stockCounts:t.lazy(()=>rZ).optional()}).strict(),t8=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)])}).strict(),uw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),orderItems:t.lazy(()=>VI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),sw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),orderItems:t.lazy(()=>XI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),e8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)])}).strict(),yw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),dw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),o8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)])}).strict(),ty=t.object({type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>KF),createdBy:t.lazy(()=>tD)}).strict(),ey=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),hI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),zw=t.object({data:t.union([t.lazy(()=>LQ),t.lazy(()=>LQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),oy=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>vF).optional(),createdBy:t.lazy(()=>OF)}).strict(),ny=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),II=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),mw=t.object({data:t.union([t.lazy(()=>VQ),t.lazy(()=>VQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ay=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>O5)}).strict(),iy=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),gI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),bw=t.object({data:t.union([t.lazy(()=>HQ),t.lazy(()=>HQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),hut=t.object({update:t.union([t.lazy(()=>yL),t.lazy(()=>dL)]),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]),where:t.lazy(()=>Ft).optional()}).strict(),Iut=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>yL),t.lazy(()=>dL)])}).strict(),yL=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pZ).optional(),transactions:t.lazy(()=>uZ).optional(),stockCounts:t.lazy(()=>sZ).optional()}).strict(),dL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>dZ).optional(),stockCounts:t.lazy(()=>zZ).optional()}).strict(),gut=t.object({update:t.union([t.lazy(()=>zL),t.lazy(()=>mL)]),create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]),where:t.lazy(()=>jt).optional()}).strict(),Cut=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>zL),t.lazy(()=>mL)])}).strict(),zL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),mL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),Aut=t.object({update:t.union([t.lazy(()=>bL),t.lazy(()=>hL)]),create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]),where:t.lazy(()=>M).optional()}).strict(),Sut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>bL),t.lazy(()=>hL)])}).strict(),bL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),hL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),ij=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>kK),t.lazy(()=>xK)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),lj=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>kK),t.lazy(()=>xK)])}).strict(),rj=t.object({where:t.lazy(()=>dl),data:t.union([t.lazy(()=>lP),t.lazy(()=>Vyt)])}).strict(),pj=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>jK),t.lazy(()=>MK)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),cj=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>jK),t.lazy(()=>MK)])}).strict(),uj=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>nP),t.lazy(()=>Hyt)])}).strict(),sj=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>ZK),t.lazy(()=>vK)]),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),yj=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>ZK),t.lazy(()=>vK)])}).strict(),dj=t.object({where:t.lazy(()=>Bl),data:t.union([t.lazy(()=>kM),t.lazy(()=>Qyt)])}).strict(),Bl=t.object({AND:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional(),OR:t.lazy(()=>Bl).array().optional(),NOT:t.union([t.lazy(()=>Bl),t.lazy(()=>Bl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),hw=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eZ),items:t.lazy(()=>oZ).optional(),stockCounts:t.lazy(()=>aZ).optional()}).strict(),Iw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>iZ).optional(),stockCounts:t.lazy(()=>rZ).optional()}).strict(),n8=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)])}).strict(),gw=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),ingredient:t.lazy(()=>oT),lastUpdatedBy:t.lazy(()=>nT).optional(),withdrawals:t.lazy(()=>iT).optional(),stockCounts:t.lazy(()=>lT).optional()}).strict(),Cw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>pT).optional(),stockCounts:t.lazy(()=>cT).optional()}).strict(),a8=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)])}).strict(),Aw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Sw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),i8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)])}).strict(),Tut=t.object({update:t.union([t.lazy(()=>IL),t.lazy(()=>gL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]),where:t.lazy(()=>Ft).optional()}).strict(),Put=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>IL),t.lazy(()=>gL)])}).strict(),IL=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pZ).optional(),items:t.lazy(()=>cZ).optional(),stockCounts:t.lazy(()=>sZ).optional()}).strict(),gL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>yZ).optional(),stockCounts:t.lazy(()=>zZ).optional()}).strict(),Uut=t.object({update:t.union([t.lazy(()=>CL),t.lazy(()=>AL)]),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]),where:t.lazy(()=>ie).optional()}).strict(),Wut=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>CL),t.lazy(()=>AL)])}).strict(),CL=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),ingredient:t.lazy(()=>sT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),AL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),withdrawals:t.lazy(()=>hT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),Rut=t.object({update:t.union([t.lazy(()=>SL),t.lazy(()=>TL)]),create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]),where:t.lazy(()=>M).optional()}).strict(),kut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>SL),t.lazy(()=>TL)])}).strict(),SL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),TL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),Tw=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eZ),items:t.lazy(()=>oZ).optional(),transactions:t.lazy(()=>nZ).optional()}).strict(),Pw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>iZ).optional(),transactions:t.lazy(()=>lZ).optional()}).strict(),l8=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)])}).strict(),Uw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Ww=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),auth:t.lazy(()=>Si).optional()}).strict(),r8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)])}).strict(),ly=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>f5)}).strict(),ry=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),CI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Rw=t.object({data:t.union([t.lazy(()=>QQ),t.lazy(()=>QQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),xut=t.object({update:t.union([t.lazy(()=>PL),t.lazy(()=>UL)]),create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]),where:t.lazy(()=>Ft).optional()}).strict(),jut=t.object({where:t.lazy(()=>Ft).optional(),data:t.union([t.lazy(()=>PL),t.lazy(()=>UL)])}).strict(),PL=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>pZ).optional(),items:t.lazy(()=>cZ).optional(),transactions:t.lazy(()=>uZ).optional()}).strict(),UL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>yZ).optional(),transactions:t.lazy(()=>dZ).optional()}).strict(),Mut=t.object({update:t.union([t.lazy(()=>WL),t.lazy(()=>RL)]),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]),where:t.lazy(()=>M).optional()}).strict(),Zut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>WL),t.lazy(()=>RL)])}).strict(),WL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),RL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),auth:t.lazy(()=>pl).optional()}).strict(),zj=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>OK),t.lazy(()=>fK)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),mj=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>OK),t.lazy(()=>fK)])}).strict(),bj=t.object({where:t.lazy(()=>Bl),data:t.union([t.lazy(()=>kM),t.lazy(()=>Yyt)])}).strict(),kw=t.object({status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>aD),createdBy:t.lazy(()=>iD)}).strict(),xw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),p8=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)])}).strict(),jw=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>eT),ingredient:t.lazy(()=>oT),lastUpdatedBy:t.lazy(()=>nT).optional(),transactions:t.lazy(()=>aT).optional(),withdrawals:t.lazy(()=>iT).optional()}).strict(),Mw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>rT).optional(),withdrawals:t.lazy(()=>pT).optional()}).strict(),c8=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)])}).strict(),vut=t.object({update:t.union([t.lazy(()=>kL),t.lazy(()=>xL)]),create:t.union([t.lazy(()=>kw),t.lazy(()=>xw)]),where:t.lazy(()=>Je).optional()}).strict(),Out=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>kL),t.lazy(()=>xL)])}).strict(),kL=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>pD).optional(),createdBy:t.lazy(()=>cD).optional()}).strict(),xL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),fut=t.object({update:t.union([t.lazy(()=>jL),t.lazy(()=>ML)]),create:t.union([t.lazy(()=>jw),t.lazy(()=>Mw)]),where:t.lazy(()=>ie).optional()}).strict(),wut=t.object({where:t.lazy(()=>ie).optional(),data:t.union([t.lazy(()=>jL),t.lazy(()=>ML)])}).strict(),jL=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),ingredient:t.lazy(()=>sT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional()}).strict(),ML=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),withdrawals:t.lazy(()=>hT).optional()}).strict(),Zw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional()}).strict(),vw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional()}).strict(),u8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)])}).strict(),Nut=t.object({update:t.union([t.lazy(()=>ZL),t.lazy(()=>vL)]),create:t.union([t.lazy(()=>Zw),t.lazy(()=>vw)]),where:t.lazy(()=>v).optional()}).strict(),But=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ZL),t.lazy(()=>vL)])}).strict(),ZL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional()}).strict(),vL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional()}).strict(),Ow=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),recipes:t.lazy(()=>Xl).optional(),menus:t.lazy(()=>tr).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),fw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),recipes:t.lazy(()=>yr).optional(),menus:t.lazy(()=>dr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),s8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)])}).strict(),ww=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>AD).optional(),supplierPriceHistory:t.lazy(()=>SD).optional()}).strict(),Nw=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>PD).optional(),supplierPriceHistory:t.lazy(()=>UD).optional()}).strict(),y8=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)])}).strict(),py=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>q5)}).strict(),cy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),AI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),Bw=t.object({data:t.union([t.lazy(()=>YQ),t.lazy(()=>YQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),qut=t.object({update:t.union([t.lazy(()=>OL),t.lazy(()=>fL)]),create:t.union([t.lazy(()=>Ow),t.lazy(()=>fw)]),where:t.lazy(()=>N).optional()}).strict(),Fut=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>OL),t.lazy(()=>fL)])}).strict(),OL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),fL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),Dut=t.object({update:t.union([t.lazy(()=>wL),t.lazy(()=>NL)]),create:t.union([t.lazy(()=>ww),t.lazy(()=>Nw)]),where:t.lazy(()=>Oe).optional()}).strict(),_ut=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>wL),t.lazy(()=>NL)])}).strict(),wL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>RD).optional(),supplierPriceHistory:t.lazy(()=>kD).optional()}).strict(),NL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>jD).optional(),supplierPriceHistory:t.lazy(()=>MD).optional()}).strict(),hj=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>wK),t.lazy(()=>NK)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),Ij=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>wK),t.lazy(()=>NK)])}).strict(),gj=t.object({where:t.lazy(()=>wl),data:t.union([t.lazy(()=>jM),t.lazy(()=>Gyt)])}).strict(),qw=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yD),vendor:t.lazy(()=>dD)}).strict(),Fw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d8=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)])}).strict(),Dw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),vendors:t.lazy(()=>HI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),_w=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),vendors:t.lazy(()=>tg).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),z8=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)])}).strict(),Eut=t.object({update:t.union([t.lazy(()=>BL),t.lazy(()=>qL)]),create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]),where:t.lazy(()=>Ke).optional()}).strict(),Lut=t.object({where:t.lazy(()=>Ke).optional(),data:t.union([t.lazy(()=>BL),t.lazy(()=>qL)])}).strict(),BL=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bD).optional(),vendor:t.lazy(()=>hD).optional()}).strict(),qL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vut=t.object({update:t.union([t.lazy(()=>FL),t.lazy(()=>DL)]),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]),where:t.lazy(()=>jt).optional()}).strict(),Hut=t.object({where:t.lazy(()=>jt).optional(),data:t.union([t.lazy(()=>FL),t.lazy(()=>DL)])}).strict(),FL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),DL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),uy=t.object({status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>yD),items:t.lazy(()=>zD).optional()}).strict(),sy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>mD).optional()}).strict(),SI=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>uy),t.lazy(()=>sy)])}).strict(),Ew=t.object({data:t.union([t.lazy(()=>GQ),t.lazy(()=>GQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),yy=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>EI).optional(),inventoryItems:t.lazy(()=>LI).optional(),orderItems:t.lazy(()=>VI).optional(),WasteRecords:t.lazy(()=>QI).optional(),IngredientAllergens:t.lazy(()=>YI).optional(),priceHistory:t.lazy(()=>GI).optional(),DietaryRestrictions:t.lazy(()=>$I).optional()}).strict(),dy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>ot).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>JI).optional(),inventoryItems:t.lazy(()=>KI).optional(),orderItems:t.lazy(()=>XI).optional(),WasteRecords:t.lazy(()=>eg).optional(),IngredientAllergens:t.lazy(()=>og).optional(),priceHistory:t.lazy(()=>ng).optional(),DietaryRestrictions:t.lazy(()=>ag).optional()}).strict(),TI=t.object({where:t.lazy(()=>$),create:t.union([t.lazy(()=>yy),t.lazy(()=>dy)])}).strict(),zy=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>d5)}).strict(),my=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Lw=t.object({data:t.union([t.lazy(()=>$Q),t.lazy(()=>$Q).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cj=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>BK),t.lazy(()=>qK)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>sy)])}).strict(),Aj=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>BK),t.lazy(()=>qK)])}).strict(),Sj=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>xM),t.lazy(()=>$yt)])}).strict(),Tj=t.object({where:t.lazy(()=>$),update:t.union([t.lazy(()=>FK),t.lazy(()=>DK)]),create:t.union([t.lazy(()=>yy),t.lazy(()=>dy)])}).strict(),Pj=t.object({where:t.lazy(()=>$),data:t.union([t.lazy(()=>FK),t.lazy(()=>DK)])}).strict(),Uj=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>UM),t.lazy(()=>Jyt)])}).strict(),Wj=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>_K),t.lazy(()=>EK)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Rj=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>_K),t.lazy(()=>EK)])}).strict(),kj=t.object({where:t.lazy(()=>Nl),data:t.union([t.lazy(()=>AM),t.lazy(()=>Kyt)])}).strict(),Vw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),Hw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),m8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)])}).strict(),by=t.object({taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hy=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UI=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),Qw=t.object({data:t.union([t.lazy(()=>JQ),t.lazy(()=>JQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Qut=t.object({update:t.union([t.lazy(()=>_L),t.lazy(()=>EL)]),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]),where:t.lazy(()=>M).optional()}).strict(),Yut=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>_L),t.lazy(()=>EL)])}).strict(),_L=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),EL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),xj=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>LK),t.lazy(()=>VK)]),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),jj=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>LK),t.lazy(()=>VK)])}).strict(),Mj=t.object({where:t.lazy(()=>Qp),data:t.union([t.lazy(()=>bB),t.lazy(()=>Xyt)])}).strict(),Qp=t.object({AND:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),OR:t.lazy(()=>Qp).array().optional(),NOT:t.union([t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>EB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Iy=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),gy=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),WI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Cy=t.object({quantity:t.number().int(),status:t.lazy(()=>tt),recipe:t.lazy(()=>vD),assignedTo:t.lazy(()=>OD)}).strict(),Ay=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),RI=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Yw=t.object({data:t.union([t.lazy(()=>KQ),t.lazy(()=>KQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>HK),t.lazy(()=>QK)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),vj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>HK),t.lazy(()=>QK)])}).strict(),Oj=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>tdt)])}).strict(),fj=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>YK),t.lazy(()=>GK)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),wj=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>YK),t.lazy(()=>GK)])}).strict(),Nj=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>rP),t.lazy(()=>edt)])}).strict(),Gw=t.object({name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Y5).optional()}).strict(),$w=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>tt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>$5).optional()}).strict(),b8=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)])}).strict(),Jw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Kw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),h8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Jw),t.lazy(()=>Kw)])}).strict(),Xw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),passwordResets:t.lazy(()=>Ea).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),tN=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),passwordResets:t.lazy(()=>pi).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),I8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)])}).strict(),Gut=t.object({update:t.union([t.lazy(()=>LL),t.lazy(()=>VL)]),create:t.union([t.lazy(()=>Gw),t.lazy(()=>$w)]),where:t.lazy(()=>to).optional()}).strict(),$ut=t.object({where:t.lazy(()=>to).optional(),data:t.union([t.lazy(()=>LL),t.lazy(()=>VL)])}).strict(),LL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>K5).optional()}).strict(),VL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>t6).optional()}).strict(),Jut=t.object({update:t.union([t.lazy(()=>HL),t.lazy(()=>QL)]),create:t.union([t.lazy(()=>Jw),t.lazy(()=>Kw)]),where:t.lazy(()=>v).optional()}).strict(),Kut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>HL),t.lazy(()=>QL)])}).strict(),HL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),QL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Xut=t.object({update:t.union([t.lazy(()=>YL),t.lazy(()=>GL)]),create:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]),where:t.lazy(()=>M).optional()}).strict(),tst=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>YL),t.lazy(()=>GL)])}).strict(),YL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),GL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),eN=t.object({email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Na).optional(),restaurant:t.lazy(()=>Ba).optional(),shifts:t.lazy(()=>qa).optional(),prepItems:t.lazy(()=>Fa).optional(),inventoryUpdates:t.lazy(()=>Da).optional(),sessions:t.lazy(()=>_a).optional(),leftoverItems:t.lazy(()=>La).optional(),wasteRecords:t.lazy(()=>Va).optional(),productionPlans:t.lazy(()=>Ha).optional(),productionPlanItems:t.lazy(()=>Qa).optional(),availability:t.lazy(()=>Ya).optional(),schedulingConstraints:t.lazy(()=>Ga).optional(),inventoryWithdrawals:t.lazy(()=>$a).optional(),checklistCompletes:t.lazy(()=>Ja).optional(),customerFeedbackResponses:t.lazy(()=>Ka).optional(),recipeVersionsCreated:t.lazy(()=>Xa).optional(),recipeVersionsApproved:t.lazy(()=>ti).optional(),InventoryTransactions:t.lazy(()=>ei).optional(),StockCounts:t.lazy(()=>oi).optional(),auth:t.lazy(()=>ni).optional()}).strict(),oN=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ai).optional(),prepItems:t.lazy(()=>ii).optional(),inventoryUpdates:t.lazy(()=>li).optional(),sessions:t.lazy(()=>ri).optional(),leftoverItems:t.lazy(()=>ci).optional(),wasteRecords:t.lazy(()=>ui).optional(),productionPlans:t.lazy(()=>si).optional(),productionPlanItems:t.lazy(()=>yi).optional(),availability:t.lazy(()=>di).optional(),schedulingConstraints:t.lazy(()=>zi).optional(),inventoryWithdrawals:t.lazy(()=>mi).optional(),checklistCompletes:t.lazy(()=>bi).optional(),customerFeedbackResponses:t.lazy(()=>hi).optional(),recipeVersionsCreated:t.lazy(()=>Ii).optional(),recipeVersionsApproved:t.lazy(()=>gi).optional(),InventoryTransactions:t.lazy(()=>Ci).optional(),StockCounts:t.lazy(()=>Ai).optional(),auth:t.lazy(()=>Si).optional()}).strict(),g8=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)])}).strict(),est=t.object({update:t.union([t.lazy(()=>$L),t.lazy(()=>JL)]),create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]),where:t.lazy(()=>M).optional()}).strict(),ost=t.object({where:t.lazy(()=>M).optional(),data:t.union([t.lazy(()=>$L),t.lazy(()=>JL)])}).strict(),$L=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),JL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),nN=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Yl).optional(),users:t.lazy(()=>Gl).optional(),cookbooks:t.lazy(()=>$l).optional(),inventory:t.lazy(()=>Jl).optional(),orders:t.lazy(()=>Kl).optional(),recipes:t.lazy(()=>Xl).optional(),salesTransactions:t.lazy(()=>er).optional(),leftoverItems:t.lazy(()=>or).optional(),wasteRecords:t.lazy(()=>nr).optional(),productionPlans:t.lazy(()=>ar).optional(),equipments:t.lazy(()=>ir).optional(),qualityChecklists:t.lazy(()=>lr).optional(),customerFeedbacks:t.lazy(()=>rr).optional()}).strict(),aN=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>pr).optional(),cookbooks:t.lazy(()=>cr).optional(),inventory:t.lazy(()=>ur).optional(),orders:t.lazy(()=>sr).optional(),recipes:t.lazy(()=>yr).optional(),salesTransactions:t.lazy(()=>zr).optional(),leftoverItems:t.lazy(()=>mr).optional(),wasteRecords:t.lazy(()=>br).optional(),productionPlans:t.lazy(()=>hr).optional(),equipments:t.lazy(()=>Ir).optional(),qualityChecklists:t.lazy(()=>gr).optional(),customerFeedbacks:t.lazy(()=>Cr).optional()}).strict(),C8=t.object({where:t.lazy(()=>K),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)])}).strict(),Sy=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),Ty=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),kI=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),iN=t.object({data:t.union([t.lazy(()=>XQ),t.lazy(()=>XQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Py=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>J2).optional()}).strict(),Uy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>K2).optional()}).strict(),xI=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),lN=t.object({data:t.union([t.lazy(()=>t0),t.lazy(()=>t0).array()]),skipDuplicates:t.boolean().optional()}).strict(),nst=t.object({update:t.union([t.lazy(()=>KL),t.lazy(()=>XL)]),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]),where:t.lazy(()=>N).optional()}).strict(),ast=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>KL),t.lazy(()=>XL)])}).strict(),KL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>Ar).optional(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),XL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),Bj=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>$K),t.lazy(()=>JK)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),qj=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>$K),t.lazy(()=>JK)])}).strict(),Fj=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>qS),t.lazy(()=>odt)])}).strict(),Dj=t.object({where:t.lazy(()=>Xt),update:t.union([t.lazy(()=>KK),t.lazy(()=>XK)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),_j=t.object({where:t.lazy(()=>Xt),data:t.union([t.lazy(()=>KK),t.lazy(()=>XK)])}).strict(),Ej=t.object({where:t.lazy(()=>Yp),data:t.union([t.lazy(()=>uB),t.lazy(()=>ndt)])}).strict(),Yp=t.object({AND:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional(),OR:t.lazy(()=>Yp).array().optional(),NOT:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),rN=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),nutritionalInfo:t.lazy(()=>lm).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),pN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),A8=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)])}).strict(),cN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),uN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),S8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)])}).strict(),ist=t.object({update:t.union([t.lazy(()=>tV),t.lazy(()=>eV)]),create:t.union([t.lazy(()=>rN),t.lazy(()=>pN)]),where:t.lazy(()=>Tt).optional()}).strict(),lst=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>tV),t.lazy(()=>eV)])}).strict(),tV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),eV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),rst=t.object({update:t.union([t.lazy(()=>oV),t.lazy(()=>nV)]),create:t.union([t.lazy(()=>cN),t.lazy(()=>uN)]),where:t.lazy(()=>v).optional()}).strict(),pst=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>oV),t.lazy(()=>nV)])}).strict(),oV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),nV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),sN=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>BD),MenuCategory:t.lazy(()=>FD).optional()}).strict(),yN=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>_D).optional()}).strict(),T8=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)])}).strict(),dN=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>$2)}).strict(),zN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),P8=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>dN),t.lazy(()=>zN)])}).strict(),Wy=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Ry=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),jI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),ky=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>n6)}).strict(),xy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),MI=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),mN=t.object({data:t.union([t.lazy(()=>e0),t.lazy(()=>e0).array()]),skipDuplicates:t.boolean().optional()}).strict(),RT=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kT=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bN=t.object({where:t.lazy(()=>Ql),create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)])}).strict(),jy=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),My=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZI=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),hN=t.object({data:t.union([t.lazy(()=>o0),t.lazy(()=>o0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zy=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>H2)}).strict(),vy=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vI=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),IN=t.object({data:t.union([t.lazy(()=>n0),t.lazy(()=>n0).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oy=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>lF),recordedBy:t.lazy(()=>pF)}).strict(),fy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OI=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),gN=t.object({data:t.union([t.lazy(()=>a0),t.lazy(()=>a0).array()]),skipDuplicates:t.boolean().optional()}).strict(),wy=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>_q),respondedBy:t.lazy(()=>Lq).optional()}).strict(),Ny=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),CN=t.object({data:t.union([t.lazy(()=>i0),t.lazy(()=>i0).array()]),skipDuplicates:t.boolean().optional()}).strict(),By=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Gq).optional(),ingredients:t.lazy(()=>$q).optional()}).strict(),qy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Kq).optional(),ingredients:t.lazy(()=>Xq).optional()}).strict(),wI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),cst=t.object({update:t.union([t.lazy(()=>aV),t.lazy(()=>iV)]),create:t.union([t.lazy(()=>sN),t.lazy(()=>yN)]),where:t.lazy(()=>fe).optional()}).strict(),ust=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>aV),t.lazy(()=>iV)])}).strict(),aV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ED).optional(),MenuCategory:t.lazy(()=>VD).optional()}).strict(),iV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>QD).optional()}).strict(),sst=t.object({update:t.union([t.lazy(()=>lV),t.lazy(()=>rV)]),create:t.union([t.lazy(()=>dN),t.lazy(()=>zN)]),where:t.lazy(()=>Ne).optional()}).strict(),yst=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>lV),t.lazy(()=>rV)])}).strict(),lV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>X2).optional()}).strict(),rV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>tX),t.lazy(()=>eX)]),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),Vj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>tX),t.lazy(()=>eX)])}).strict(),Hj=t.object({where:t.lazy(()=>le),data:t.union([t.lazy(()=>BI),t.lazy(()=>adt)])}).strict(),Qj=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>oX),t.lazy(()=>nX)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),Yj=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>oX),t.lazy(()=>nX)])}).strict(),Gj=t.object({where:t.lazy(()=>fl),data:t.union([t.lazy(()=>MM),t.lazy(()=>idt)])}).strict(),U8=t.object({update:t.union([t.lazy(()=>AN),t.lazy(()=>SN)]),create:t.union([t.lazy(()=>RT),t.lazy(()=>kT)]),where:t.lazy(()=>_e).optional()}).strict(),W8=t.object({where:t.lazy(()=>_e).optional(),data:t.union([t.lazy(()=>AN),t.lazy(()=>SN)])}).strict(),AN=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SN=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$j=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>aX),t.lazy(()=>iX)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),Jj=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>aX),t.lazy(()=>iX)])}).strict(),Kj=t.object({where:t.lazy(()=>Gp),data:t.union([t.lazy(()=>gB),t.lazy(()=>ldt)])}).strict(),Gp=t.object({AND:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),OR:t.lazy(()=>Gp).array().optional(),NOT:t.union([t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Xj=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>lX),t.lazy(()=>rX)]),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),tM=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>lX),t.lazy(()=>rX)])}).strict(),eM=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>IM),t.lazy(()=>rdt)])}).strict(),oM=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>pX),t.lazy(()=>cX)]),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),nM=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>pX),t.lazy(()=>cX)])}).strict(),aM=t.object({where:t.lazy(()=>zl),data:t.union([t.lazy(()=>tP),t.lazy(()=>pdt)])}).strict(),iM=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>uX),t.lazy(()=>sX)]),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),lM=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>uX),t.lazy(()=>sX)])}).strict(),rM=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>KT),t.lazy(()=>cdt)])}).strict(),pM=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>yX),t.lazy(()=>dX)]),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),cM=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>yX),t.lazy(()=>dX)])}).strict(),uM=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>XT),t.lazy(()=>udt)])}).strict(),TN=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>om),category:t.lazy(()=>nm).optional(),recipes:t.lazy(()=>am).optional(),menuItemRecipes:t.lazy(()=>im).optional(),recommendations:t.lazy(()=>rm).optional(),salesTransactions:t.lazy(()=>pm).optional(),leftoverItems:t.lazy(()=>cm).optional(),feedback:t.lazy(()=>um).optional(),dietaryRestrictions:t.lazy(()=>sm).optional()}).strict(),PN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),R8=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>TN),t.lazy(()=>PN)])}).strict(),dst=t.object({update:t.union([t.lazy(()=>pV),t.lazy(()=>cV)]),create:t.union([t.lazy(()=>TN),t.lazy(()=>PN)]),where:t.lazy(()=>Tt).optional()}).strict(),zst=t.object({where:t.lazy(()=>Tt).optional(),data:t.union([t.lazy(()=>pV),t.lazy(()=>cV)])}).strict(),pV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),cV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),UN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),WN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),k8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>UN),t.lazy(()=>WN)])}).strict(),mst=t.object({update:t.union([t.lazy(()=>uV),t.lazy(()=>sV)]),create:t.union([t.lazy(()=>UN),t.lazy(()=>WN)]),where:t.lazy(()=>v).optional()}).strict(),bst=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>uV),t.lazy(()=>sV)])}).strict(),uV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),sV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),RN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),kN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),x8=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>RN),t.lazy(()=>kN)])}).strict(),hst=t.object({update:t.union([t.lazy(()=>yV),t.lazy(()=>dV)]),create:t.union([t.lazy(()=>RN),t.lazy(()=>kN)]),where:t.lazy(()=>v).optional()}).strict(),Ist=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>yV),t.lazy(()=>dV)])}).strict(),yV=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),dV=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),kH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int()}).strict(),j8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),M8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),gst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),xH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),jH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),Z8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DF).optional(),ingredient:t.lazy(()=>_F).optional()}).strict(),v8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O8=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>YF).optional(),equipment:t.lazy(()=>$F).optional()}).strict(),f8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>JF).optional()}).strict(),Ast=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),MH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),ZH=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>re),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),w8=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Aq).optional(),RecipeInstruction:t.lazy(()=>Tq).optional()}).strict(),N8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Sst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),B8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Tst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>re),t.lazy(()=>OC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vH=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Lt),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OH=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),F8=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>l5).optional()}).strict(),D8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>r5).optional()}).strict(),Pst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Lt),t.lazy(()=>nb)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>qq).optional(),items:t.lazy(()=>Fq).optional()}).strict(),E8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Dq).optional()}).strict(),Ust=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fH=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L8=t.object({status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>u5).optional()}).strict(),V8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wH=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Et),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>ab),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),H8=t.object({status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>s5).optional()}).strict(),Q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Et),t.lazy(()=>tm)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>em),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional()}).strict(),G8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional()}).strict(),kst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),$8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),J8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),xst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),K8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),vendors:t.lazy(()=>pg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional()}).strict(),X8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),vendors:t.lazy(()=>bg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional()}).strict(),jst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),t7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),e7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Mst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),NH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),o7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>jF).optional(),assignedTo:t.lazy(()=>MF).optional()}).strict(),n7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BH=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),a7=t.object({ingredient:t.lazy(()=>I5).optional()}).strict(),i7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),vst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),qH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),FH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Sr).optional(),cookbooks:t.lazy(()=>Tr).optional(),inventory:t.lazy(()=>Pr).optional(),orders:t.lazy(()=>Ur).optional(),recipes:t.lazy(()=>Wr).optional(),menus:t.lazy(()=>Rr).optional(),salesTransactions:t.lazy(()=>kr).optional(),leftoverItems:t.lazy(()=>xr).optional(),wasteRecords:t.lazy(()=>jr).optional(),productionPlans:t.lazy(()=>Mr).optional(),equipments:t.lazy(()=>Zr).optional(),qualityChecklists:t.lazy(()=>vr).optional(),customerFeedbacks:t.lazy(()=>Or).optional()}).strict(),r7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>fr).optional(),cookbooks:t.lazy(()=>wr).optional(),inventory:t.lazy(()=>Nr).optional(),orders:t.lazy(()=>Br).optional(),recipes:t.lazy(()=>qr).optional(),menus:t.lazy(()=>Fr).optional(),salesTransactions:t.lazy(()=>Dr).optional(),leftoverItems:t.lazy(()=>_r).optional(),wasteRecords:t.lazy(()=>Er).optional(),productionPlans:t.lazy(()=>Lr).optional(),equipments:t.lazy(()=>Vr).optional(),qualityChecklists:t.lazy(()=>Hr).optional(),customerFeedbacks:t.lazy(()=>Qr).optional()}).strict(),Ost=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),p7=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Pi).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),c7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),fst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),_H=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),EH=t.object({id:t.number().int().optional(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),u7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),ingredient:t.lazy(()=>sT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),s7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),withdrawals:t.lazy(()=>hT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),wst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),y7=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>oD).optional(),createdBy:t.lazy(()=>nD).optional()}).strict(),d7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z7=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>cD).optional(),items:t.lazy(()=>uD).optional()}).strict(),m7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>sD).optional()}).strict(),Bst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),LH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),HH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),YH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$H=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KH=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Bt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eQ=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),b7=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ti).optional(),shifts:t.lazy(()=>Ui).optional(),prepItems:t.lazy(()=>Wi).optional(),inventoryUpdates:t.lazy(()=>Ri).optional(),sessions:t.lazy(()=>ki).optional(),passwordResets:t.lazy(()=>xi).optional(),leftoverItems:t.lazy(()=>ji).optional(),wasteRecords:t.lazy(()=>Mi).optional(),productionPlans:t.lazy(()=>Zi).optional(),productionPlanItems:t.lazy(()=>vi).optional(),availability:t.lazy(()=>Oi).optional(),schedulingConstraints:t.lazy(()=>fi).optional(),inventoryWithdrawals:t.lazy(()=>wi).optional(),checklistCompletes:t.lazy(()=>Ni).optional(),customerFeedbackResponses:t.lazy(()=>Bi).optional(),recipeVersionsCreated:t.lazy(()=>qi).optional(),recipeVersionsApproved:t.lazy(()=>Fi).optional(),InventoryTransactions:t.lazy(()=>Di).optional(),StockCounts:t.lazy(()=>_i).optional(),auth:t.lazy(()=>Ei).optional()}).strict(),h7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Li).optional(),prepItems:t.lazy(()=>Vi).optional(),inventoryUpdates:t.lazy(()=>Hi).optional(),sessions:t.lazy(()=>Qi).optional(),passwordResets:t.lazy(()=>Yi).optional(),leftoverItems:t.lazy(()=>Gi).optional(),wasteRecords:t.lazy(()=>$i).optional(),productionPlans:t.lazy(()=>Ji).optional(),productionPlanItems:t.lazy(()=>Ki).optional(),availability:t.lazy(()=>Xi).optional(),schedulingConstraints:t.lazy(()=>tl).optional(),inventoryWithdrawals:t.lazy(()=>el).optional(),checklistCompletes:t.lazy(()=>ol).optional(),customerFeedbackResponses:t.lazy(()=>nl).optional(),recipeVersionsCreated:t.lazy(()=>al).optional(),recipeVersionsApproved:t.lazy(()=>il).optional(),InventoryTransactions:t.lazy(()=>ll).optional(),StockCounts:t.lazy(()=>rl).optional(),auth:t.lazy(()=>pl).optional()}).strict(),qst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>M5).optional()}).strict(),g7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>v5).optional()}).strict(),Fst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),C7=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>hD).optional(),items:t.lazy(()=>ID).optional()}).strict(),A7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>gD).optional()}).strict(),Dst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),T7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),_st=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),P7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>LD).optional(),MenuCategory:t.lazy(()=>VD).optional()}).strict(),U7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>HD).optional(),MenuCategory:t.lazy(()=>QD).optional()}).strict(),Est=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W7=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>G2).optional()}).strict(),R7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>uF).optional(),recordedBy:t.lazy(()=>sF).optional()}).strict(),x7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>bF).optional(),recordedBy:t.lazy(()=>hF).optional()}).strict(),M7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>TF).optional(),items:t.lazy(()=>PF).optional()}).strict(),v7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>UF).optional()}).strict(),Qst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>zq).optional(),maintenanceLogs:t.lazy(()=>mq).optional()}).strict(),f7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>bq).optional(),maintenanceLogs:t.lazy(()=>hq).optional()}).strict(),Yst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>Ap)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jq).optional(),completions:t.lazy(()=>Mq).optional()}).strict(),N7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Zq).optional(),completions:t.lazy(()=>vq).optional()}).strict(),Gst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>qt),t.lazy(()=>Sp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B7=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Hq).optional(),respondedBy:t.lazy(()=>Qq).optional()}).strict(),q7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$st=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oQ=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Vt)}).strict(),nQ=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt)}).strict(),aQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),iQ=t.object({id:t.string().uuid().optional(),verificationCode:t.string(),token:t.string(),verified:t.boolean().optional(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),lQ=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>Ot).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uQ=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sQ=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yQ=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dQ=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zQ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),gQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>ft),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),CQ=t.object({id:t.string().uuid().optional(),passwordHash:t.string(),role:t.lazy(()=>se).optional()}).strict(),F7=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional(),tasks:t.lazy(()=>H5).optional()}).strict(),D7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional(),tasks:t.lazy(()=>Q5).optional()}).strict(),Jst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>ib)]).optional()}).strict(),_7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>fD).optional(),recipe:t.lazy(()=>wD).optional()}).strict(),E7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),Kst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional()}).strict(),L7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),ingredient:t.lazy(()=>sT).optional(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),V7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),withdrawals:t.lazy(()=>hT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),Xst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),H7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tyt=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),verificationCode:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),verified:t.union([t.boolean(),t.lazy(()=>d)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y7=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>cF).optional(),menuItem:t.lazy(()=>uF).optional()}).strict(),J7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mF).optional(),ingrediente:t.lazy(()=>bF).optional()}).strict(),X7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>SF).optional(),items:t.lazy(()=>PF).optional()}).strict(),eJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>UF).optional()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>yp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>xF).optional(),recipe:t.lazy(()=>jF).optional()}).strict(),nJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aJ=t.object({dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>ce),t.lazy(()=>wC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ue),t.lazy(()=>NC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>fF).optional(),recipe:t.lazy(()=>wF).optional()}).strict(),cJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>Bq).optional(),items:t.lazy(()=>Fq).optional()}).strict(),sJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Dq).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yJ=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Vq).optional(),menuItem:t.lazy(()=>Hq).optional()}).strict(),dJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>mP).optional(),ingredients:t.lazy(()=>bP).optional(),instructions:t.lazy(()=>hP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),mJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>mP).optional(),ingredients:t.lazy(()=>bP).optional(),instructions:t.lazy(()=>hP).optional(),createdBy:t.lazy(()=>IP).optional()}).strict(),hJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IJ=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>eD).optional(),item:t.lazy(()=>oD).optional()}).strict(),gJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CJ=t.object({status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>pD).optional(),items:t.lazy(()=>uD).optional()}).strict(),AJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>sD).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>ft),t.lazy(()=>mp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),SJ=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),TJ=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),myt=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),role:t.union([t.lazy(()=>se),t.lazy(()=>BC)]).optional()}).strict(),AQ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Pt),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),PJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),UJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),SQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),TQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),PQ=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UQ=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WQ=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),RQ=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),kQ=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xQ=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jQ=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MQ=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),ZQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vQ=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OQ=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wQ=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ye),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>_F).optional(),recipeVersion:t.lazy(()=>EF).optional()}).strict(),RJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),kJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>GF).optional(),equipment:t.lazy(()=>$F).optional()}).strict(),xJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>JF).optional()}).strict(),Iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),jJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>Cm).optional(),category:t.lazy(()=>Am).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),MJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),ZJ=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>X5).optional()}).strict(),NJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>e6).optional()}).strict(),Syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>fD).optional(),assignedTo:t.lazy(()=>ND).optional()}).strict(),qJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),FJ=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>a6).optional()}).strict(),DJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_J=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>xF).optional(),assignedTo:t.lazy(()=>MF).optional()}).strict(),EJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>fF).optional(),createdBy:t.lazy(()=>NF).optional()}).strict(),VJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>bP).optional(),instructions:t.lazy(()=>hP).optional(),createdBy:t.lazy(()=>IP).optional(),approvedBy:t.lazy(()=>gP).optional()}).strict(),GJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>CP).optional(),instructions:t.lazy(()=>AP).optional()}).strict(),kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$J=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>Sq).optional(),RecipeInstruction:t.lazy(()=>Tq).optional()}).strict(),JJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),KJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>tF).optional(),ingredients:t.lazy(()=>oF).optional()}).strict(),XJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>nF).optional(),ingredients:t.lazy(()=>iF).optional()}).strict(),jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tK=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>d)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oK=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aK=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lK=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pK=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ye),t.lazy(()=>vC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>zp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),BQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),qQ=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),FQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DQ=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),_Q=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>DF).optional(),recipeVersion:t.lazy(()=>EF).optional()}).strict(),sK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Xr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>d)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),yK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>uT).optional(),lastUpdatedBy:t.lazy(()=>yT).optional(),transactions:t.lazy(()=>dT).optional(),withdrawals:t.lazy(()=>zT).optional(),stockCounts:t.lazy(()=>mT).optional()}).strict(),dK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>bT).optional(),withdrawals:t.lazy(()=>hT).optional(),stockCounts:t.lazy(()=>IT).optional()}).strict(),Nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),zK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>F5).optional()}).strict(),mK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),bK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>WD).optional(),supplierPriceHistory:t.lazy(()=>kD).optional()}).strict(),hK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>xD).optional(),supplierPriceHistory:t.lazy(()=>MD).optional()}).strict(),qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>mF).optional(),recordedBy:t.lazy(()=>hF).optional()}).strict(),gK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CK=t.object({allergen:t.lazy(()=>g5).optional()}).strict(),AK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),SK=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>z5).optional()}).strict(),TK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>tF).optional(),recipes:t.lazy(()=>eF).optional()}).strict(),UK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>nF).optional(),recipes:t.lazy(()=>aF).optional()}).strict(),Eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),WK=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>Aq).optional(),equipment:t.lazy(()=>Sq).optional()}).strict(),RK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),LQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>vt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),VQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),kK=t.object({type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>eD).optional(),createdBy:t.lazy(()=>nD).optional()}).strict(),xK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>vt),t.lazy(()=>tp)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jK=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>wF).optional(),createdBy:t.lazy(()=>NF).optional()}).strict(),MK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZK=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>w5).optional()}).strict(),vK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),QQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),OK=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>N5).optional()}).strict(),fK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),YQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),wK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>D5).optional()}).strict(),NK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),GQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>wt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$Q=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BK=t.object({status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>bD).optional(),items:t.lazy(()=>ID).optional()}).strict(),qK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>gD).optional()}).strict(),$yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>bp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>ig).optional(),inventoryItems:t.lazy(()=>lg).optional(),orderItems:t.lazy(()=>rg).optional(),WasteRecords:t.lazy(()=>cg).optional(),IngredientAllergens:t.lazy(()=>ug).optional(),priceHistory:t.lazy(()=>sg).optional(),DietaryRestrictions:t.lazy(()=>yg).optional()}).strict(),DK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>dg).optional(),inventoryItems:t.lazy(()=>zg).optional(),orderItems:t.lazy(()=>mg).optional(),WasteRecords:t.lazy(()=>hg).optional(),IngredientAllergens:t.lazy(()=>Ig).optional(),priceHistory:t.lazy(()=>gg).optional(),DietaryRestrictions:t.lazy(()=>Cg).optional()}).strict(),Jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>ot),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),_K=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>m5).optional()}).strict(),EK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LK=t.object({taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>pe),t.lazy(()=>fC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>tt),assignedToId:t.number().int()}).strict(),HK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),QK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),tdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),YK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),recipe:t.lazy(()=>wD).optional(),assignedTo:t.lazy(()=>ND).optional()}).strict(),GK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),edt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>tt),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),XQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),t0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$K=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),category:t.lazy(()=>Am).optional(),recipes:t.lazy(()=>Sm).optional(),menuItemRecipes:t.lazy(()=>Tm).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),recommendations:t.lazy(()=>Um).optional(),salesTransactions:t.lazy(()=>Wm).optional(),leftoverItems:t.lazy(()=>Rm).optional(),feedback:t.lazy(()=>km).optional(),dietaryRestrictions:t.lazy(()=>xm).optional()}).strict(),JK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>jm).optional(),menuItemRecipes:t.lazy(()=>Mm).optional(),nutritionalInfo:t.lazy(()=>Zm).optional(),recommendations:t.lazy(()=>vm).optional(),salesTransactions:t.lazy(()=>Om).optional(),leftoverItems:t.lazy(()=>fm).optional(),feedback:t.lazy(()=>wm).optional(),dietaryRestrictions:t.lazy(()=>Nm).optional()}).strict(),odt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),KK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>t5).optional()}).strict(),XK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>e5).optional()}).strict(),ndt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>d)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),o0=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),n0=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),a0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),i0=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Mt),tags:t.union([t.lazy(()=>sp),t.string().array()]).optional(),status:t.lazy(()=>Zt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),eX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),adt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>st),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>d)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>d)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>yt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>dt)]).optional()}).strict(),oX=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>i6).optional()}).strict(),nX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),idt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aX=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ldt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lX=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Y2).optional()}).strict(),rX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pX=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>cF).optional(),recordedBy:t.lazy(()=>sF).optional()}).strict(),cX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uX=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Vq).optional(),respondedBy:t.lazy(()=>Qq).optional()}).strict(),sX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cdt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Mt),t.lazy(()=>$r)]).optional(),tags:t.union([t.lazy(()=>Jr),t.string().array()]).optional(),status:t.union([t.lazy(()=>Zt),t.lazy(()=>Kr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yX=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>eF).optional(),ingredients:t.lazy(()=>oF).optional()}).strict(),dX=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>aF).optional(),ingredients:t.lazy(()=>iF).optional()}).strict(),udt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ubt=t.object({select:Dy.optional(),include:Fy.optional(),where:qe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Ll.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),sbt=t.object({select:Dy.optional(),include:Fy.optional(),where:qe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Ll.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),ybt=t.object({select:Dy.optional(),include:Fy.optional(),where:qe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Ll.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),dbt=t.object({where:qe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Ll.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zbt=t.object({where:qe.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Ug.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mbt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ll}).strict(),bbt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ll}).strict(),hbt=t.object({select:Ey.optional(),include:_y.optional(),where:oa.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Ibt=t.object({select:Ey.optional(),include:_y.optional(),where:oa.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),zX=t.object({select:Ey.optional(),include:_y.optional(),where:oa.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),gbt=t.object({where:oa.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Cbt=t.object({where:oa.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:Wg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Abt=t.object({select:Ey.optional(),include:_y.optional(),where:me}).strict(),Sbt=t.object({select:Ey.optional(),include:_y.optional(),where:me}).strict(),Tbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Fe.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Pbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Fe.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Ubt=t.object({select:Vy.optional(),include:Ly.optional(),where:Fe.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Vl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Wbt=t.object({where:Fe.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:Vl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rbt=t.object({where:Fe.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:Rg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Vl}).strict(),xbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Vl}).strict(),jbt=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Mbt=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),mX=t.object({select:Qy.optional(),include:Hy.optional(),where:na.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Zbt=t.object({where:na.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vbt=t.object({where:na.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:kg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Obt=t.object({select:Qy.optional(),include:Hy.optional(),where:be}).strict(),fbt=t.object({select:Qy.optional(),include:Hy.optional(),where:be}).strict(),wbt=t.object({select:Gy.optional(),include:Yy.optional(),where:aa.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Nbt=t.object({select:Gy.optional(),include:Yy.optional(),where:aa.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),bX=t.object({select:Gy.optional(),include:Yy.optional(),where:aa.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Bbt=t.object({where:aa.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qbt=t.object({where:aa.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:xg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fbt=t.object({select:Gy.optional(),include:Yy.optional(),where:he}).strict(),Dbt=t.object({select:Gy.optional(),include:Yy.optional(),where:he}).strict(),_bt=t.object({select:Jy.optional(),include:$y.optional(),where:ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Ebt=t.object({select:Jy.optional(),include:$y.optional(),where:ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),hX=t.object({select:Jy.optional(),include:$y.optional(),where:ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Lbt=t.object({where:ia.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vbt=t.object({where:ia.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:jg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hbt=t.object({select:Jy.optional(),include:$y.optional(),where:Ie}).strict(),Qbt=t.object({select:Jy.optional(),include:$y.optional(),where:Ie}).strict(),Ybt=t.object({select:Xy.optional(),include:Ky.optional(),where:la.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Gbt=t.object({select:Xy.optional(),include:Ky.optional(),where:la.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),IX=t.object({select:Xy.optional(),include:Ky.optional(),where:la.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),$bt=t.object({where:la.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jbt=t.object({where:la.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:Mg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kbt=t.object({select:Xy.optional(),include:Ky.optional(),where:ge}).strict(),Xbt=t.object({select:Xy.optional(),include:Ky.optional(),where:ge}).strict(),tht=t.object({select:ed.optional(),include:td.optional(),where:ra.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),eht=t.object({select:ed.optional(),include:td.optional(),where:ra.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),xN=t.object({select:ed.optional(),include:td.optional(),where:ra.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),oht=t.object({where:ra.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nht=t.object({where:ra.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:Zg.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aht=t.object({select:ed.optional(),include:td.optional(),where:bt}).strict(),iht=t.object({select:ed.optional(),include:td.optional(),where:bt}).strict(),lht=t.object({select:nd.optional(),include:od.optional(),where:Ne.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),rht=t.object({select:nd.optional(),include:od.optional(),where:Ne.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),gX=t.object({select:nd.optional(),include:od.optional(),where:Ne.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),pht=t.object({where:Ne.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cht=t.object({where:Ne.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:vg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uht=t.object({select:nd.optional(),include:od.optional(),where:Xt}).strict(),sht=t.object({select:nd.optional(),include:od.optional(),where:Xt}).strict(),yht=t.object({select:id.optional(),include:ad.optional(),where:ae.optional(),orderBy:t.union([$p.array(),$p]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),dht=t.object({select:id.optional(),include:ad.optional(),where:ae.optional(),orderBy:t.union([$p.array(),$p]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),NS=t.object({select:id.optional(),include:ad.optional(),where:ae.optional(),orderBy:t.union([$p.array(),$p]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),zht=t.object({where:ae.optional(),orderBy:t.union([$p.array(),$p]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mht=t.object({where:ae.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:Og.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bht=t.object({select:id.optional(),include:ad.optional(),where:w}).strict(),hht=t.object({select:id.optional(),include:ad.optional(),where:w}).strict(),Iht=t.object({select:rd.optional(),include:ld.optional(),where:Ze.optional(),orderBy:t.union([Jp.array(),Jp]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),ght=t.object({select:rd.optional(),include:ld.optional(),where:Ze.optional(),orderBy:t.union([Jp.array(),Jp]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),CX=t.object({select:rd.optional(),include:ld.optional(),where:Ze.optional(),orderBy:t.union([Jp.array(),Jp]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),Cht=t.object({where:Ze.optional(),orderBy:t.union([Jp.array(),Jp]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Aht=t.object({where:Ze.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:fg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sht=t.object({select:rd.optional(),include:ld.optional(),where:Ht}).strict(),Tht=t.object({select:rd.optional(),include:ld.optional(),where:Ht}).strict(),Pht=t.object({select:cd.optional(),include:pd.optional(),where:pa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),Uht=t.object({select:cd.optional(),include:pd.optional(),where:pa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),xT=t.object({select:cd.optional(),include:pd.optional(),where:pa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),Wht=t.object({where:pa.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rht=t.object({where:pa.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:wg.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kht=t.object({select:cd.optional(),include:pd.optional(),where:B}).strict(),xht=t.object({select:cd.optional(),include:pd.optional(),where:B}).strict(),jht=t.object({select:sd.optional(),include:ud.optional(),where:ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),Mht=t.object({select:sd.optional(),include:ud.optional(),where:ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),AX=t.object({select:sd.optional(),include:ud.optional(),where:ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),Zht=t.object({where:ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vht=t.object({where:ca.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:Ng.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Oht=t.object({select:sd.optional(),include:ud.optional(),where:Ce}).strict(),fht=t.object({select:sd.optional(),include:ud.optional(),where:Ce}).strict(),wht=t.object({select:dd.optional(),include:yd.optional(),where:ve.optional(),orderBy:t.union([Kp.array(),Kp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),Nht=t.object({select:dd.optional(),include:yd.optional(),where:ve.optional(),orderBy:t.union([Kp.array(),Kp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),SX=t.object({select:dd.optional(),include:yd.optional(),where:ve.optional(),orderBy:t.union([Kp.array(),Kp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),Bht=t.object({where:ve.optional(),orderBy:t.union([Kp.array(),Kp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qht=t.object({where:ve.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:Bg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fht=t.object({select:dd.optional(),include:yd.optional(),where:Qt}).strict(),Dht=t.object({select:dd.optional(),include:yd.optional(),where:Qt}).strict(),_ht=t.object({select:md.optional(),include:zd.optional(),where:Qe.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),Eht=t.object({select:md.optional(),include:zd.optional(),where:Qe.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),TX=t.object({select:md.optional(),include:zd.optional(),where:Qe.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),Lht=t.object({where:Qe.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vht=t.object({where:Qe.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:qg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hht=t.object({select:md.optional(),include:zd.optional(),where:te}).strict(),Qht=t.object({select:md.optional(),include:zd.optional(),where:te}).strict(),Yht=t.object({select:hd.optional(),include:bd.optional(),where:Ye.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),Ght=t.object({select:hd.optional(),include:bd.optional(),where:Ye.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),jN=t.object({select:hd.optional(),include:bd.optional(),where:Ye.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),$ht=t.object({where:Ye.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jht=t.object({where:Ye.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:Fg.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kht=t.object({select:hd.optional(),include:bd.optional(),where:lt}).strict(),Xht=t.object({select:hd.optional(),include:bd.optional(),where:lt}).strict(),tIt=t.object({select:gd.optional(),include:Id.optional(),where:ua.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),eIt=t.object({select:gd.optional(),include:Id.optional(),where:ua.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),MN=t.object({select:gd.optional(),include:Id.optional(),where:ua.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),oIt=t.object({where:ua.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nIt=t.object({where:ua.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:Dg.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aIt=t.object({select:gd.optional(),include:Id.optional(),where:ht}).strict(),iIt=t.object({select:gd.optional(),include:Id.optional(),where:ht}).strict(),lIt=t.object({select:Ad.optional(),include:Cd.optional(),where:sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),rIt=t.object({select:Ad.optional(),include:Cd.optional(),where:sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),ZN=t.object({select:Ad.optional(),include:Cd.optional(),where:sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),pIt=t.object({where:sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cIt=t.object({where:sa.optional(),orderBy:t.union([NV.array(),NV]).optional(),by:_g.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uIt=t.object({select:Ad.optional(),include:Cd.optional(),where:It}).strict(),sIt=t.object({select:Ad.optional(),include:Cd.optional(),where:It}).strict(),yIt=t.object({select:Td.optional(),include:Sd.optional(),where:ya.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),dIt=t.object({select:Td.optional(),include:Sd.optional(),where:ya.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),jT=t.object({select:Td.optional(),include:Sd.optional(),where:ya.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),zIt=t.object({where:ya.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mIt=t.object({where:ya.optional(),orderBy:t.union([BV.array(),BV]).optional(),by:Eg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bIt=t.object({select:Td.optional(),include:Sd.optional(),where:q}).strict(),hIt=t.object({select:Td.optional(),include:Sd.optional(),where:q}).strict(),IIt=t.object({select:Ud.optional(),include:Pd.optional(),where:da.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),gIt=t.object({select:Ud.optional(),include:Pd.optional(),where:da.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),MT=t.object({select:Ud.optional(),include:Pd.optional(),where:da.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),CIt=t.object({where:da.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),AIt=t.object({where:da.optional(),orderBy:t.union([qV.array(),qV]).optional(),by:Lg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SIt=t.object({select:Ud.optional(),include:Pd.optional(),where:F}).strict(),TIt=t.object({select:Ud.optional(),include:Pd.optional(),where:F}).strict(),PIt=t.object({select:Rd.optional(),include:Wd.optional(),where:za.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),UIt=t.object({select:Rd.optional(),include:Wd.optional(),where:za.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),PX=t.object({select:Rd.optional(),include:Wd.optional(),where:za.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),WIt=t.object({where:za.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RIt=t.object({where:za.optional(),orderBy:t.union([FV.array(),FV]).optional(),by:Vg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ae}).strict(),xIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ae}).strict(),jIt=t.object({select:xd.optional(),include:kd.optional(),where:ma.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),MIt=t.object({select:xd.optional(),include:kd.optional(),where:ma.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),ZT=t.object({select:xd.optional(),include:kd.optional(),where:ma.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),ZIt=t.object({where:ma.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vIt=t.object({where:ma.optional(),orderBy:t.union([DV.array(),DV]).optional(),by:Hg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OIt=t.object({select:xd.optional(),include:kd.optional(),where:D}).strict(),fIt=t.object({select:xd.optional(),include:kd.optional(),where:D}).strict(),wIt=t.object({select:Md.optional(),include:jd.optional(),where:ba.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),NIt=t.object({select:Md.optional(),include:jd.optional(),where:ba.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),vT=t.object({select:Md.optional(),include:jd.optional(),where:ba.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),BIt=t.object({where:ba.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qIt=t.object({where:ba.optional(),orderBy:t.union([_V.array(),_V]).optional(),by:Qg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FIt=t.object({select:Md.optional(),include:jd.optional(),where:_}).strict(),DIt=t.object({select:Md.optional(),include:jd.optional(),where:_}).strict(),_It=t.object({select:vd.optional(),include:Zd.optional(),where:Ge.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),EIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ge.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),vN=t.object({select:vd.optional(),include:Zd.optional(),where:Ge.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),LIt=t.object({where:Ge.optional(),orderBy:t.union([Vm.array(),Vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({where:Ge.optional(),orderBy:t.union([EV.array(),EV]).optional(),by:Yg.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HIt=t.object({select:vd.optional(),include:Zd.optional(),where:rt}).strict(),QIt=t.object({select:vd.optional(),include:Zd.optional(),where:rt}).strict(),YIt=t.object({select:fd.optional(),include:Od.optional(),where:ha.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),GIt=t.object({select:fd.optional(),include:Od.optional(),where:ha.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),OT=t.object({select:fd.optional(),include:Od.optional(),where:ha.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),$It=t.object({where:ha.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({where:ha.optional(),orderBy:t.union([LV.array(),LV]).optional(),by:Gg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KIt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),XIt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),tgt=t.object({select:Nd.optional(),include:wd.optional(),where:Ia.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),egt=t.object({select:Nd.optional(),include:wd.optional(),where:Ia.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),UX=t.object({select:Nd.optional(),include:wd.optional(),where:Ia.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),ogt=t.object({where:Ia.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ngt=t.object({where:Ia.optional(),orderBy:t.union([VV.array(),VV]).optional(),by:$g.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({select:Nd.optional(),include:wd.optional(),where:Se}).strict(),igt=t.object({select:Nd.optional(),include:wd.optional(),where:Se}).strict(),lgt=t.object({select:qd.optional(),include:Bd.optional(),where:ga.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),rgt=t.object({select:qd.optional(),include:Bd.optional(),where:ga.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),WX=t.object({select:qd.optional(),include:Bd.optional(),where:ga.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),pgt=t.object({where:ga.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({where:ga.optional(),orderBy:t.union([HV.array(),HV]).optional(),by:Jg.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ugt=t.object({select:qd.optional(),include:Bd.optional(),where:Te}).strict(),sgt=t.object({select:qd.optional(),include:Bd.optional(),where:Te}).strict(),ygt=t.object({select:Dd.optional(),include:Fd.optional(),where:Ca.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),dgt=t.object({select:Dd.optional(),include:Fd.optional(),where:Ca.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),RX=t.object({select:Dd.optional(),include:Fd.optional(),where:Ca.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),zgt=t.object({where:Ca.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({where:Ca.optional(),orderBy:t.union([QV.array(),QV]).optional(),by:Kg.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bgt=t.object({select:Dd.optional(),include:Fd.optional(),where:Pe}).strict(),hgt=t.object({select:Dd.optional(),include:Fd.optional(),where:Pe}).strict(),Igt=t.object({select:Ed.optional(),include:_d.optional(),where:Aa.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),ggt=t.object({select:Ed.optional(),include:_d.optional(),where:Aa.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),fT=t.object({select:Ed.optional(),include:_d.optional(),where:Aa.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),Cgt=t.object({where:Aa.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({where:Aa.optional(),orderBy:t.union([YV.array(),YV]).optional(),by:Xg.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sgt=t.object({select:Ed.optional(),include:_d.optional(),where:L}).strict(),Tgt=t.object({select:Ed.optional(),include:_d.optional(),where:L}).strict(),Pgt=t.object({select:Vd.optional(),include:Ld.optional(),where:co.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:pp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),Ugt=t.object({select:Vd.optional(),include:Ld.optional(),where:co.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:pp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),Wgt=t.object({select:Vd.optional(),include:Ld.optional(),where:co.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:pp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),Rgt=t.object({where:co.optional(),orderBy:t.union([Hm.array(),Hm]).optional(),cursor:pp.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kgt=t.object({where:co.optional(),orderBy:t.union([GV.array(),GV]).optional(),by:tC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xgt=t.object({select:Vd.optional(),include:Ld.optional(),where:pp}).strict(),jgt=t.object({select:Vd.optional(),include:Ld.optional(),where:pp}).strict(),Mgt=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),Zgt=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),ON=t.object({select:Qd.optional(),include:Hd.optional(),where:Sa.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),vgt=t.object({where:Sa.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ogt=t.object({where:Sa.optional(),orderBy:t.union([$V.array(),$V]).optional(),by:eC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fgt=t.object({select:Qd.optional(),include:Hd.optional(),where:gt}).strict(),wgt=t.object({select:Qd.optional(),include:Hd.optional(),where:gt}).strict(),Ngt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ta.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),Bgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ta.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),kX=t.object({select:Gd.optional(),include:Yd.optional(),where:Ta.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),qgt=t.object({where:Ta.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fgt=t.object({where:Ta.optional(),orderBy:t.union([JV.array(),JV]).optional(),by:oC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dgt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ue}).strict(),_gt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ue}).strict(),Egt=t.object({select:eb.optional(),where:Al.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:ob.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),Lgt=t.object({select:eb.optional(),where:Al.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:ob.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),Vgt=t.object({select:eb.optional(),where:Al.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:ob.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),Hgt=t.object({where:Al.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:ob.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qgt=t.object({where:Al.optional(),orderBy:t.union([KV.array(),KV]).optional(),by:nC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ygt=t.object({select:eb.optional(),where:ob}).strict(),Ggt=t.object({select:eb.optional(),where:ob}).strict(),$gt=t.object({select:Jd.optional(),include:$d.optional(),where:Me.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),Jgt=t.object({select:Jd.optional(),include:$d.optional(),where:Me.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),Kgt=t.object({select:Jd.optional(),include:$d.optional(),where:Me.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),Xgt=t.object({where:Me.optional(),orderBy:t.union([Xp.array(),Xp]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tCt=t.object({where:Me.optional(),orderBy:t.union([XV.array(),XV]).optional(),by:aC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eCt=t.object({select:Jd.optional(),include:$d.optional(),where:ql}).strict(),oCt=t.object({select:Jd.optional(),include:$d.optional(),where:ql}).strict(),nCt=t.object({select:Xd.optional(),include:Kd.optional(),where:Ft.optional(),orderBy:t.union([ip.array(),ip]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),aCt=t.object({select:Xd.optional(),include:Kd.optional(),where:Ft.optional(),orderBy:t.union([ip.array(),ip]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),iCt=t.object({select:Xd.optional(),include:Kd.optional(),where:Ft.optional(),orderBy:t.union([ip.array(),ip]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),lCt=t.object({where:Ft.optional(),orderBy:t.union([ip.array(),ip]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rCt=t.object({where:Ft.optional(),orderBy:t.union([tH.array(),tH]).optional(),by:iC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pCt=t.object({select:Xd.optional(),include:Kd.optional(),where:$n}).strict(),cCt=t.object({select:Xd.optional(),include:Kd.optional(),where:$n}).strict(),uCt=t.object({select:ez.optional(),include:tz.optional(),where:N.optional(),orderBy:t.union([wa.array(),wa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),sCt=t.object({select:ez.optional(),include:tz.optional(),where:N.optional(),orderBy:t.union([wa.array(),wa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),xX=t.object({select:ez.optional(),include:tz.optional(),where:N.optional(),orderBy:t.union([wa.array(),wa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),yCt=t.object({where:N.optional(),orderBy:t.union([wa.array(),wa]).optional(),cursor:K.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dCt=t.object({where:N.optional(),orderBy:t.union([eH.array(),eH]).optional(),by:lC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zCt=t.object({select:ez.optional(),include:tz.optional(),where:K}).strict(),mCt=t.object({select:ez.optional(),include:tz.optional(),where:K}).strict(),bCt=t.object({select:nz.optional(),include:oz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),hCt=t.object({select:nz.optional(),include:oz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),fN=t.object({select:nz.optional(),include:oz.optional(),where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),ICt=t.object({where:M.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gCt=t.object({where:M.optional(),orderBy:t.union([oH.array(),oH]).optional(),by:rC.array(),having:NA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CCt=t.object({select:nz.optional(),include:oz.optional(),where:j}).strict(),ACt=t.object({select:nz.optional(),include:oz.optional(),where:j}).strict(),SCt=t.object({select:iz.optional(),include:az.optional(),where:Pa.optional(),orderBy:t.union([vb.array(),vb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),TCt=t.object({select:iz.optional(),include:az.optional(),where:Pa.optional(),orderBy:t.union([vb.array(),vb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),jX=t.object({select:iz.optional(),include:az.optional(),where:Pa.optional(),orderBy:t.union([vb.array(),vb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),PCt=t.object({where:Pa.optional(),orderBy:t.union([vb.array(),vb]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UCt=t.object({where:Pa.optional(),orderBy:t.union([nH.array(),nH]).optional(),by:pC.array(),having:BA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WCt=t.object({select:iz.optional(),include:az.optional(),where:We}).strict(),RCt=t.object({select:iz.optional(),include:az.optional(),where:We}).strict(),kCt=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ob.array(),Ob]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),xCt=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ob.array(),Ob]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),MX=t.object({select:rz.optional(),include:lz.optional(),where:Ua.optional(),orderBy:t.union([Ob.array(),Ob]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),jCt=t.object({where:Ua.optional(),orderBy:t.union([Ob.array(),Ob]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MCt=t.object({where:Ua.optional(),orderBy:t.union([aH.array(),aH]).optional(),by:cC.array(),having:qA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZCt=t.object({select:rz.optional(),include:lz.optional(),where:Re}).strict(),vCt=t.object({select:rz.optional(),include:lz.optional(),where:Re}).strict(),OCt=t.object({select:cz.optional(),include:pz.optional(),where:$e.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),fCt=t.object({select:cz.optional(),include:pz.optional(),where:$e.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),ZX=t.object({select:cz.optional(),include:pz.optional(),where:$e.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),wCt=t.object({where:$e.optional(),orderBy:t.union([Qm.array(),Qm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NCt=t.object({where:$e.optional(),orderBy:t.union([iH.array(),iH]).optional(),by:uC.array(),having:FA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BCt=t.object({select:cz.optional(),include:pz.optional(),where:ee}).strict(),qCt=t.object({select:cz.optional(),include:pz.optional(),where:ee}).strict(),FCt=t.object({select:sz.optional(),include:uz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),DCt=t.object({select:sz.optional(),include:uz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),hp=t.object({select:sz.optional(),include:uz.optional(),where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),_Ct=t.object({where:v.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ECt=t.object({where:v.optional(),orderBy:t.union([lH.array(),lH]).optional(),by:sC.array(),having:DA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LCt=t.object({select:sz.optional(),include:uz.optional(),where:C}).strict(),VCt=t.object({select:sz.optional(),include:uz.optional(),where:C}).strict(),HCt=t.object({select:dz.optional(),include:yz.optional(),where:jt.optional(),orderBy:t.union([_l.array(),_l]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),QCt=t.object({select:dz.optional(),include:yz.optional(),where:jt.optional(),orderBy:t.union([_l.array(),_l]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),wN=t.object({select:dz.optional(),include:yz.optional(),where:jt.optional(),orderBy:t.union([_l.array(),_l]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),YCt=t.object({where:jt.optional(),orderBy:t.union([_l.array(),_l]).optional(),cursor:$.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),GCt=t.object({where:jt.optional(),orderBy:t.union([rH.array(),rH]).optional(),by:yC.array(),having:_A.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$Ct=t.object({select:dz.optional(),include:yz.optional(),where:$}).strict(),JCt=t.object({select:dz.optional(),include:yz.optional(),where:$}).strict(),KCt=t.object({select:mz.optional(),include:zz.optional(),where:Wa.optional(),orderBy:t.union([fb.array(),fb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),XCt=t.object({select:mz.optional(),include:zz.optional(),where:Wa.optional(),orderBy:t.union([fb.array(),fb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),wT=t.object({select:mz.optional(),include:zz.optional(),where:Wa.optional(),orderBy:t.union([fb.array(),fb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),tAt=t.object({where:Wa.optional(),orderBy:t.union([fb.array(),fb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eAt=t.object({where:Wa.optional(),orderBy:t.union([pH.array(),pH]).optional(),by:dC.array(),having:EA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oAt=t.object({select:mz.optional(),include:zz.optional(),where:V}).strict(),nAt=t.object({select:mz.optional(),include:zz.optional(),where:V}).strict(),aAt=t.object({select:hz.optional(),include:bz.optional(),where:Be.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),iAt=t.object({select:hz.optional(),include:bz.optional(),where:Be.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),NN=t.object({select:hz.optional(),include:bz.optional(),where:Be.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),lAt=t.object({where:Be.optional(),orderBy:t.union([Ym.array(),Ym]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rAt=t.object({where:Be.optional(),orderBy:t.union([cH.array(),cH]).optional(),by:zC.array(),having:LA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pAt=t.object({select:hz.optional(),include:bz.optional(),where:pt}).strict(),cAt=t.object({select:hz.optional(),include:bz.optional(),where:pt}).strict(),uAt=t.object({select:gz.optional(),include:Iz.optional(),where:ie.optional(),orderBy:t.union([Cp.array(),Cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),sAt=t.object({select:gz.optional(),include:Iz.optional(),where:ie.optional(),orderBy:t.union([Cp.array(),Cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),NT=t.object({select:gz.optional(),include:Iz.optional(),where:ie.optional(),orderBy:t.union([Cp.array(),Cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),yAt=t.object({where:ie.optional(),orderBy:t.union([Cp.array(),Cp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dAt=t.object({where:ie.optional(),orderBy:t.union([uH.array(),uH]).optional(),by:mC.array(),having:VA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zAt=t.object({select:gz.optional(),include:Iz.optional(),where:f}).strict(),mAt=t.object({select:gz.optional(),include:Iz.optional(),where:f}).strict(),bAt=t.object({select:Az.optional(),include:Cz.optional(),where:Ra.optional(),orderBy:t.union([wb.array(),wb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),hAt=t.object({select:Az.optional(),include:Cz.optional(),where:Ra.optional(),orderBy:t.union([wb.array(),wb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),BT=t.object({select:Az.optional(),include:Cz.optional(),where:Ra.optional(),orderBy:t.union([wb.array(),wb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),IAt=t.object({where:Ra.optional(),orderBy:t.union([wb.array(),wb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gAt=t.object({where:Ra.optional(),orderBy:t.union([sH.array(),sH]).optional(),by:bC.array(),having:HA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CAt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),AAt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),SAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Je.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),TAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Je.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),BN=t.object({select:Tz.optional(),include:Sz.optional(),where:Je.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),PAt=t.object({where:Je.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UAt=t.object({where:Je.optional(),orderBy:t.union([yH.array(),yH]).optional(),by:hC.array(),having:QA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WAt=t.object({select:Tz.optional(),include:Sz.optional(),where:ct}).strict(),RAt=t.object({select:Tz.optional(),include:Sz.optional(),where:ct}).strict(),kAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Nb.array(),Nb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),xAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Nb.array(),Nb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),qN=t.object({select:Uz.optional(),include:Pz.optional(),where:ka.optional(),orderBy:t.union([Nb.array(),Nb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),jAt=t.object({where:ka.optional(),orderBy:t.union([Nb.array(),Nb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MAt=t.object({where:ka.optional(),orderBy:t.union([dH.array(),dH]).optional(),by:IC.array(),having:YA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ct}).strict(),vAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ct}).strict(),OAt=t.object({select:Rz.optional(),include:Wz.optional(),where:De.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:Hl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),fAt=t.object({select:Rz.optional(),include:Wz.optional(),where:De.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:Hl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),wAt=t.object({select:Rz.optional(),include:Wz.optional(),where:De.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:Hl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),NAt=t.object({where:De.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:Hl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BAt=t.object({where:De.optional(),orderBy:t.union([zH.array(),zH]).optional(),by:gC.array(),having:GA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Hl}).strict(),FAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Hl}).strict(),DAt=t.object({select:xz.optional(),include:kz.optional(),where:Ke.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),_At=t.object({select:xz.optional(),include:kz.optional(),where:Ke.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),FN=t.object({select:xz.optional(),include:kz.optional(),where:Ke.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([CC,CC.array()]).optional()}).strict(),EAt=t.object({where:Ke.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LAt=t.object({where:Ke.optional(),orderBy:t.union([mH.array(),mH]).optional(),by:CC.array(),having:$A.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VAt=t.object({select:xz.optional(),include:kz.optional(),where:ut}).strict(),HAt=t.object({select:xz.optional(),include:kz.optional(),where:ut}).strict(),QAt=t.object({select:Mz.optional(),include:jz.optional(),where:xa.optional(),orderBy:t.union([Bb.array(),Bb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),YAt=t.object({select:Mz.optional(),include:jz.optional(),where:xa.optional(),orderBy:t.union([Bb.array(),Bb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),DN=t.object({select:Mz.optional(),include:jz.optional(),where:xa.optional(),orderBy:t.union([Bb.array(),Bb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([AC,AC.array()]).optional()}).strict(),GAt=t.object({where:xa.optional(),orderBy:t.union([Bb.array(),Bb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$At=t.object({where:xa.optional(),orderBy:t.union([bH.array(),bH]).optional(),by:AC.array(),having:JA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JAt=t.object({select:Mz.optional(),include:jz.optional(),where:At}).strict(),KAt=t.object({select:Mz.optional(),include:jz.optional(),where:At}).strict(),XAt=t.object({select:vz.optional(),include:Zz.optional(),where:Oe.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),tSt=t.object({select:vz.optional(),include:Zz.optional(),where:Oe.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),vX=t.object({select:vz.optional(),include:Zz.optional(),where:Oe.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([SC,SC.array()]).optional()}).strict(),eSt=t.object({where:Oe.optional(),orderBy:t.union([tc.array(),tc]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oSt=t.object({where:Oe.optional(),orderBy:t.union([hH.array(),hH]).optional(),by:SC.array(),having:KA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nSt=t.object({select:vz.optional(),include:Zz.optional(),where:Yt}).strict(),aSt=t.object({select:vz.optional(),include:Zz.optional(),where:Yt}).strict(),iSt=t.object({select:fz.optional(),include:Oz.optional(),where:Xe.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),lSt=t.object({select:fz.optional(),include:Oz.optional(),where:Xe.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),OX=t.object({select:fz.optional(),include:Oz.optional(),where:Xe.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([TC,TC.array()]).optional()}).strict(),rSt=t.object({where:Xe.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pSt=t.object({where:Xe.optional(),orderBy:t.union([IH.array(),IH]).optional(),by:TC.array(),having:XA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cSt=t.object({select:fz.optional(),include:Oz.optional(),where:oe}).strict(),uSt=t.object({select:fz.optional(),include:Oz.optional(),where:oe}).strict(),sSt=t.object({select:Nz.optional(),include:wz.optional(),where:to.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),ySt=t.object({select:Nz.optional(),include:wz.optional(),where:to.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),fX=t.object({select:Nz.optional(),include:wz.optional(),where:to.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([PC,PC.array()]).optional()}).strict(),dSt=t.object({where:to.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zSt=t.object({where:to.optional(),orderBy:t.union([gH.array(),gH]).optional(),by:PC.array(),having:tS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mSt=t.object({select:Nz.optional(),include:wz.optional(),where:ne}).strict(),bSt=t.object({select:Nz.optional(),include:wz.optional(),where:ne}).strict(),hSt=t.object({select:qz.optional(),include:Bz.optional(),where:ja.optional(),orderBy:t.union([qb.array(),qb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),ISt=t.object({select:qz.optional(),include:Bz.optional(),where:ja.optional(),orderBy:t.union([qb.array(),qb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),qT=t.object({select:qz.optional(),include:Bz.optional(),where:ja.optional(),orderBy:t.union([qb.array(),qb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([UC,UC.array()]).optional()}).strict(),gSt=t.object({where:ja.optional(),orderBy:t.union([qb.array(),qb]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CSt=t.object({where:ja.optional(),orderBy:t.union([CH.array(),CH]).optional(),by:UC.array(),having:eS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ASt=t.object({select:qz.optional(),include:Bz.optional(),where:Q}).strict(),SSt=t.object({select:qz.optional(),include:Bz.optional(),where:Q}).strict(),TSt=t.object({select:Dz.optional(),include:Fz.optional(),where:Ma.optional(),orderBy:t.union([Fb.array(),Fb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),PSt=t.object({select:Dz.optional(),include:Fz.optional(),where:Ma.optional(),orderBy:t.union([Fb.array(),Fb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),wX=t.object({select:Dz.optional(),include:Fz.optional(),where:Ma.optional(),orderBy:t.union([Fb.array(),Fb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([WC,WC.array()]).optional()}).strict(),USt=t.object({where:Ma.optional(),orderBy:t.union([Fb.array(),Fb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WSt=t.object({where:Ma.optional(),orderBy:t.union([AH.array(),AH]).optional(),by:WC.array(),having:oS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),RSt=t.object({select:Dz.optional(),include:Fz.optional(),where:ke}).strict(),kSt=t.object({select:Dz.optional(),include:Fz.optional(),where:ke}).strict(),xSt=t.object({select:Ez.optional(),include:_z.optional(),where:fe.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),jSt=t.object({select:Ez.optional(),include:_z.optional(),where:fe.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),NX=t.object({select:Ez.optional(),include:_z.optional(),where:fe.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([RC,RC.array()]).optional()}).strict(),MSt=t.object({where:fe.optional(),orderBy:t.union([ec.array(),ec]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZSt=t.object({where:fe.optional(),orderBy:t.union([SH.array(),SH]).optional(),by:RC.array(),having:nS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vSt=t.object({select:Ez.optional(),include:_z.optional(),where:Gt}).strict(),OSt=t.object({select:Ez.optional(),include:_z.optional(),where:Gt}).strict(),fSt=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Db.array(),Db]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),wSt=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Db.array(),Db]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),_N=t.object({select:Vz.optional(),include:Lz.optional(),where:Za.optional(),orderBy:t.union([Db.array(),Db]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kC,kC.array()]).optional()}).strict(),NSt=t.object({where:Za.optional(),orderBy:t.union([Db.array(),Db]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BSt=t.object({where:Za.optional(),orderBy:t.union([TH.array(),TH]).optional(),by:kC.array(),having:aS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qSt=t.object({select:Vz.optional(),include:Lz.optional(),where:St}).strict(),FSt=t.object({select:Vz.optional(),include:Lz.optional(),where:St}).strict(),DSt=t.object({select:Qz.optional(),include:Hz.optional(),where:Tt.optional(),orderBy:t.union([El.array(),El]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),_St=t.object({select:Qz.optional(),include:Hz.optional(),where:Tt.optional(),orderBy:t.union([El.array(),El]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),Ag=t.object({select:Qz.optional(),include:Hz.optional(),where:Tt.optional(),orderBy:t.union([El.array(),El]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xC,xC.array()]).optional()}).strict(),ESt=t.object({where:Tt.optional(),orderBy:t.union([El.array(),El]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LSt=t.object({where:Tt.optional(),orderBy:t.union([PH.array(),PH]).optional(),by:xC.array(),having:iS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VSt=t.object({select:Qz.optional(),include:Hz.optional(),where:x}).strict(),HSt=t.object({select:Qz.optional(),include:Hz.optional(),where:x}).strict(),QSt=t.object({select:Gz.optional(),include:Yz.optional(),where:_e.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),YSt=t.object({select:Gz.optional(),include:Yz.optional(),where:_e.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),GSt=t.object({select:Gz.optional(),include:Yz.optional(),where:_e.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jC,jC.array()]).optional()}).strict(),$St=t.object({where:_e.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:Ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JSt=t.object({where:_e.optional(),orderBy:t.union([UH.array(),UH]).optional(),by:jC.array(),having:lS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KSt=t.object({select:Gz.optional(),include:Yz.optional(),where:Ql}).strict(),XSt=t.object({select:Gz.optional(),include:Yz.optional(),where:Ql}).strict(),tTt=t.object({select:Jz.optional(),include:$z.optional(),where:va.optional(),orderBy:t.union([_b.array(),_b]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),eTt=t.object({select:Jz.optional(),include:$z.optional(),where:va.optional(),orderBy:t.union([_b.array(),_b]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),BX=t.object({select:Jz.optional(),include:$z.optional(),where:va.optional(),orderBy:t.union([_b.array(),_b]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([MC,MC.array()]).optional()}).strict(),oTt=t.object({where:va.optional(),orderBy:t.union([_b.array(),_b]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nTt=t.object({where:va.optional(),orderBy:t.union([WH.array(),WH]).optional(),by:MC.array(),having:rS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aTt=t.object({select:Jz.optional(),include:$z.optional(),where:xe}).strict(),iTt=t.object({select:Jz.optional(),include:$z.optional(),where:xe}).strict(),lTt=t.object({select:Xz.optional(),include:Kz.optional(),where:Oa.optional(),orderBy:t.union([Eb.array(),Eb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),rTt=t.object({select:Xz.optional(),include:Kz.optional(),where:Oa.optional(),orderBy:t.union([Eb.array(),Eb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),qX=t.object({select:Xz.optional(),include:Kz.optional(),where:Oa.optional(),orderBy:t.union([Eb.array(),Eb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ZC,ZC.array()]).optional()}).strict(),pTt=t.object({where:Oa.optional(),orderBy:t.union([Eb.array(),Eb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cTt=t.object({where:Oa.optional(),orderBy:t.union([RH.array(),RH]).optional(),by:ZC.array(),having:pS.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uTt=t.object({select:Xz.optional(),include:Kz.optional(),where:je}).strict(),sTt=t.object({select:Xz.optional(),include:Kz.optional(),where:je}).strict(),yTt=t.object({select:Dy.optional(),include:Fy.optional(),data:t.union([Q0,Y0])}).strict(),dTt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ll,create:t.union([Q0,Y0]),update:t.union([G0,$0])}).strict(),zTt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mTt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),bTt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ll}).strict(),hTt=t.object({select:Dy.optional(),include:Fy.optional(),data:t.union([G0,$0]),where:Ll}).strict(),ITt=t.object({data:t.union([J0,K0]),where:qe.optional(),limit:t.number().optional()}).strict(),gTt=t.object({data:t.union([J0,K0]),where:qe.optional(),limit:t.number().optional()}).strict(),CTt=t.object({where:qe.optional(),limit:t.number().optional()}).strict(),ATt=t.object({select:Ey.optional(),include:_y.optional(),data:t.union([X0,tY])}).strict(),STt=t.object({select:Ey.optional(),include:_y.optional(),where:me,create:t.union([X0,tY]),update:t.union([eY,oY])}).strict(),TTt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PTt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),UTt=t.object({select:Ey.optional(),include:_y.optional(),where:me}).strict(),WTt=t.object({select:Ey.optional(),include:_y.optional(),data:t.union([eY,oY]),where:me}).strict(),RTt=t.object({data:t.union([iB,nY]),where:oa.optional(),limit:t.number().optional()}).strict(),kTt=t.object({data:t.union([iB,nY]),where:oa.optional(),limit:t.number().optional()}).strict(),xTt=t.object({where:oa.optional(),limit:t.number().optional()}).strict(),jTt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([aY,iY])}).strict(),MTt=t.object({select:Vy.optional(),include:Ly.optional(),where:Vl,create:t.union([aY,iY]),update:t.union([lY,rY])}).strict(),ZTt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vTt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),OTt=t.object({select:Vy.optional(),include:Ly.optional(),where:Vl}).strict(),fTt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([lY,rY]),where:Vl}).strict(),wTt=t.object({data:t.union([pY,cY]),where:Fe.optional(),limit:t.number().optional()}).strict(),NTt=t.object({data:t.union([pY,cY]),where:Fe.optional(),limit:t.number().optional()}).strict(),BTt=t.object({where:Fe.optional(),limit:t.number().optional()}).strict(),qTt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([uY,sY])}).strict(),FTt=t.object({select:Qy.optional(),include:Hy.optional(),where:be,create:t.union([uY,sY]),update:t.union([yY,dY])}).strict(),DTt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Tt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ETt=t.object({select:Qy.optional(),include:Hy.optional(),where:be}).strict(),LTt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([yY,dY]),where:be}).strict(),VTt=t.object({data:t.union([lB,zY]),where:na.optional(),limit:t.number().optional()}).strict(),HTt=t.object({data:t.union([lB,zY]),where:na.optional(),limit:t.number().optional()}).strict(),QTt=t.object({where:na.optional(),limit:t.number().optional()}).strict(),YTt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([mY,bY])}).strict(),GTt=t.object({select:Gy.optional(),include:Yy.optional(),where:he,create:t.union([mY,bY]),update:t.union([hY,IY])}).strict(),$Tt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JTt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),KTt=t.object({select:Gy.optional(),include:Yy.optional(),where:he}).strict(),XTt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([hY,IY]),where:he}).strict(),tPt=t.object({data:t.union([rB,gY]),where:aa.optional(),limit:t.number().optional()}).strict(),ePt=t.object({data:t.union([rB,gY]),where:aa.optional(),limit:t.number().optional()}).strict(),oPt=t.object({where:aa.optional(),limit:t.number().optional()}).strict(),nPt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([CY,AY])}).strict(),aPt=t.object({select:Jy.optional(),include:$y.optional(),where:Ie,create:t.union([CY,AY]),update:t.union([SY,TY])}).strict(),iPt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lPt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),rPt=t.object({select:Jy.optional(),include:$y.optional(),where:Ie}).strict(),pPt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([SY,TY]),where:Ie}).strict(),cPt=t.object({data:t.union([pB,PY]),where:ia.optional(),limit:t.number().optional()}).strict(),uPt=t.object({data:t.union([pB,PY]),where:ia.optional(),limit:t.number().optional()}).strict(),sPt=t.object({where:ia.optional(),limit:t.number().optional()}).strict(),yPt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([UY,WY])}).strict(),dPt=t.object({select:Xy.optional(),include:Ky.optional(),where:ge,create:t.union([UY,WY]),update:t.union([RY,kY])}).strict(),zPt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mPt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),bPt=t.object({select:Xy.optional(),include:Ky.optional(),where:ge}).strict(),hPt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([RY,kY]),where:ge}).strict(),IPt=t.object({data:t.union([cB,xY]),where:la.optional(),limit:t.number().optional()}).strict(),gPt=t.object({data:t.union([cB,xY]),where:la.optional(),limit:t.number().optional()}).strict(),CPt=t.object({where:la.optional(),limit:t.number().optional()}).strict(),APt=t.object({select:ed.optional(),include:td.optional(),data:t.union([jY,MY])}).strict(),SPt=t.object({select:ed.optional(),include:td.optional(),where:bt,create:t.union([jY,MY]),update:t.union([ZY,vY])}).strict(),TPt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PPt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),UPt=t.object({select:ed.optional(),include:td.optional(),where:bt}).strict(),WPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([ZY,vY]),where:bt}).strict(),RPt=t.object({data:t.union([IM,OY]),where:ra.optional(),limit:t.number().optional()}).strict(),kPt=t.object({data:t.union([IM,OY]),where:ra.optional(),limit:t.number().optional()}).strict(),xPt=t.object({where:ra.optional(),limit:t.number().optional()}).strict(),jPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([fY,wY])}).strict(),MPt=t.object({select:nd.optional(),include:od.optional(),where:Xt,create:t.union([fY,wY]),update:t.union([NY,BY])}).strict(),ZPt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vPt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),OPt=t.object({select:nd.optional(),include:od.optional(),where:Xt}).strict(),fPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([NY,BY]),where:Xt}).strict(),wPt=t.object({data:t.union([uB,qY]),where:Ne.optional(),limit:t.number().optional()}).strict(),NPt=t.object({data:t.union([uB,qY]),where:Ne.optional(),limit:t.number().optional()}).strict(),BPt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),qPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([FY,DY])}).strict(),FPt=t.object({select:id.optional(),include:ad.optional(),where:w,create:t.union([FY,DY]),update:t.union([_Y,EY])}).strict(),DPt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Pt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),EPt=t.object({select:id.optional(),include:ad.optional(),where:w}).strict(),LPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([_Y,EY]),where:w}).strict(),VPt=t.object({data:t.union([$T,LY]),where:ae.optional(),limit:t.number().optional()}).strict(),HPt=t.object({data:t.union([$T,LY]),where:ae.optional(),limit:t.number().optional()}).strict(),QPt=t.object({where:ae.optional(),limit:t.number().optional()}).strict(),YPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([VY,HY])}).strict(),GPt=t.object({select:rd.optional(),include:ld.optional(),where:Ht,create:t.union([VY,HY]),update:t.union([QY,YY])}).strict(),$Pt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JPt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),KPt=t.object({select:rd.optional(),include:ld.optional(),where:Ht}).strict(),XPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([QY,YY]),where:Ht}).strict(),tUt=t.object({data:t.union([sB,GY]),where:Ze.optional(),limit:t.number().optional()}).strict(),eUt=t.object({data:t.union([sB,GY]),where:Ze.optional(),limit:t.number().optional()}).strict(),oUt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),nUt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([$Y,JY])}).strict(),aUt=t.object({select:cd.optional(),include:pd.optional(),where:B,create:t.union([$Y,JY]),update:t.union([KY,XY])}).strict(),iUt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lUt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),rUt=t.object({select:cd.optional(),include:pd.optional(),where:B}).strict(),pUt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([KY,XY]),where:B}).strict(),cUt=t.object({data:t.union([JT,tG]),where:pa.optional(),limit:t.number().optional()}).strict(),uUt=t.object({data:t.union([JT,tG]),where:pa.optional(),limit:t.number().optional()}).strict(),sUt=t.object({where:pa.optional(),limit:t.number().optional()}).strict(),yUt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([eG,oG])}).strict(),dUt=t.object({select:sd.optional(),include:ud.optional(),where:Ce,create:t.union([eG,oG]),update:t.union([nG,aG])}).strict(),zUt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mUt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),bUt=t.object({select:sd.optional(),include:ud.optional(),where:Ce}).strict(),hUt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([nG,aG]),where:Ce}).strict(),IUt=t.object({data:t.union([yB,iG]),where:ca.optional(),limit:t.number().optional()}).strict(),gUt=t.object({data:t.union([yB,iG]),where:ca.optional(),limit:t.number().optional()}).strict(),CUt=t.object({where:ca.optional(),limit:t.number().optional()}).strict(),AUt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([lG,rG])}).strict(),SUt=t.object({select:dd.optional(),include:yd.optional(),where:Qt,create:t.union([lG,rG]),update:t.union([pG,cG])}).strict(),TUt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PUt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),UUt=t.object({select:dd.optional(),include:yd.optional(),where:Qt}).strict(),WUt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([pG,cG]),where:Qt}).strict(),RUt=t.object({data:t.union([dB,uG]),where:ve.optional(),limit:t.number().optional()}).strict(),kUt=t.object({data:t.union([dB,uG]),where:ve.optional(),limit:t.number().optional()}).strict(),xUt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),jUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([sG,yG])}).strict(),MUt=t.object({select:md.optional(),include:zd.optional(),where:te,create:t.union([sG,yG]),update:t.union([dG,zG])}).strict(),ZUt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vUt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),OUt=t.object({select:md.optional(),include:zd.optional(),where:te}).strict(),fUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([dG,zG]),where:te}).strict(),wUt=t.object({data:t.union([zB,mG]),where:Qe.optional(),limit:t.number().optional()}).strict(),NUt=t.object({data:t.union([zB,mG]),where:Qe.optional(),limit:t.number().optional()}).strict(),BUt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),qUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([bG,hG])}).strict(),FUt=t.object({select:hd.optional(),include:bd.optional(),where:lt,create:t.union([bG,hG]),update:t.union([IG,gG])}).strict(),DUt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Ut=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),EUt=t.object({select:hd.optional(),include:bd.optional(),where:lt}).strict(),LUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([IG,gG]),where:lt}).strict(),VUt=t.object({data:t.union([gM,CG]),where:Ye.optional(),limit:t.number().optional()}).strict(),HUt=t.object({data:t.union([gM,CG]),where:Ye.optional(),limit:t.number().optional()}).strict(),QUt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),YUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([AG,SG])}).strict(),GUt=t.object({select:gd.optional(),include:Id.optional(),where:ht,create:t.union([AG,SG]),update:t.union([TG,PG])}).strict(),$Ut=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JUt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),KUt=t.object({select:gd.optional(),include:Id.optional(),where:ht}).strict(),XUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([TG,PG]),where:ht}).strict(),tWt=t.object({data:t.union([CM,UG]),where:ua.optional(),limit:t.number().optional()}).strict(),eWt=t.object({data:t.union([CM,UG]),where:ua.optional(),limit:t.number().optional()}).strict(),oWt=t.object({where:ua.optional(),limit:t.number().optional()}).strict(),nWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([WG,RG])}).strict(),aWt=t.object({select:Ad.optional(),include:Cd.optional(),where:It,create:t.union([WG,RG]),update:t.union([kG,xG])}).strict(),iWt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),lWt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),rWt=t.object({select:Ad.optional(),include:Cd.optional(),where:It}).strict(),pWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([kG,xG]),where:It}).strict(),cWt=t.object({data:t.union([AM,jG]),where:sa.optional(),limit:t.number().optional()}).strict(),uWt=t.object({data:t.union([AM,jG]),where:sa.optional(),limit:t.number().optional()}).strict(),sWt=t.object({where:sa.optional(),limit:t.number().optional()}).strict(),yWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([MG,ZG])}).strict(),dWt=t.object({select:Td.optional(),include:Sd.optional(),where:q,create:t.union([MG,ZG]),update:t.union([vG,OG])}).strict(),zWt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mWt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),bWt=t.object({select:Td.optional(),include:Sd.optional(),where:q}).strict(),hWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([vG,OG]),where:q}).strict(),IWt=t.object({data:t.union([KT,fG]),where:ya.optional(),limit:t.number().optional()}).strict(),gWt=t.object({data:t.union([KT,fG]),where:ya.optional(),limit:t.number().optional()}).strict(),CWt=t.object({where:ya.optional(),limit:t.number().optional()}).strict(),AWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([wG,NG])}).strict(),SWt=t.object({select:Ud.optional(),include:Pd.optional(),where:F,create:t.union([wG,NG]),update:t.union([BG,qG])}).strict(),TWt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PWt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),UWt=t.object({select:Ud.optional(),include:Pd.optional(),where:F}).strict(),WWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([BG,qG]),where:F}).strict(),RWt=t.object({data:t.union([XT,FG]),where:da.optional(),limit:t.number().optional()}).strict(),kWt=t.object({data:t.union([XT,FG]),where:da.optional(),limit:t.number().optional()}).strict(),xWt=t.object({where:da.optional(),limit:t.number().optional()}).strict(),jWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([DG,_G])}).strict(),MWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ae,create:t.union([DG,_G]),update:t.union([EG,LG])}).strict(),ZWt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vWt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),OWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Ae}).strict(),fWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([EG,LG]),where:Ae}).strict(),wWt=t.object({data:t.union([mB,VG]),where:za.optional(),limit:t.number().optional()}).strict(),NWt=t.object({data:t.union([mB,VG]),where:za.optional(),limit:t.number().optional()}).strict(),BWt=t.object({where:za.optional(),limit:t.number().optional()}).strict(),qWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([HG,QG])}).strict(),FWt=t.object({select:xd.optional(),include:kd.optional(),where:D,create:t.union([HG,QG]),update:t.union([YG,GG])}).strict(),DWt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Wt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),EWt=t.object({select:xd.optional(),include:kd.optional(),where:D}).strict(),LWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([YG,GG]),where:D}).strict(),VWt=t.object({data:t.union([tP,$G]),where:ma.optional(),limit:t.number().optional()}).strict(),HWt=t.object({data:t.union([tP,$G]),where:ma.optional(),limit:t.number().optional()}).strict(),QWt=t.object({where:ma.optional(),limit:t.number().optional()}).strict(),YWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([JG,KG])}).strict(),GWt=t.object({select:Md.optional(),include:jd.optional(),where:_,create:t.union([JG,KG]),update:t.union([XG,t1])}).strict(),$Wt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),JWt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),KWt=t.object({select:Md.optional(),include:jd.optional(),where:_}).strict(),XWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([XG,t1]),where:_}).strict(),tRt=t.object({data:t.union([eP,e1]),where:ba.optional(),limit:t.number().optional()}).strict(),eRt=t.object({data:t.union([eP,e1]),where:ba.optional(),limit:t.number().optional()}).strict(),oRt=t.object({where:ba.optional(),limit:t.number().optional()}).strict(),nRt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([o1,n1])}).strict(),aRt=t.object({select:vd.optional(),include:Zd.optional(),where:rt,create:t.union([o1,n1]),update:t.union([a1,i1])}).strict(),iRt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),lRt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),rRt=t.object({select:vd.optional(),include:Zd.optional(),where:rt}).strict(),pRt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([a1,i1]),where:rt}).strict(),cRt=t.object({data:t.union([SM,l1]),where:Ge.optional(),limit:t.number().optional()}).strict(),uRt=t.object({data:t.union([SM,l1]),where:Ge.optional(),limit:t.number().optional()}).strict(),sRt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),yRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([r1,p1])}).strict(),dRt=t.object({select:fd.optional(),include:Od.optional(),where:E,create:t.union([r1,p1]),update:t.union([c1,u1])}).strict(),zRt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),mRt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),bRt=t.object({select:fd.optional(),include:Od.optional(),where:E}).strict(),hRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([c1,u1]),where:E}).strict(),IRt=t.object({data:t.union([oP,s1]),where:ha.optional(),limit:t.number().optional()}).strict(),gRt=t.object({data:t.union([oP,s1]),where:ha.optional(),limit:t.number().optional()}).strict(),CRt=t.object({where:ha.optional(),limit:t.number().optional()}).strict(),ARt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([y1,d1])}).strict(),SRt=t.object({select:Nd.optional(),include:wd.optional(),where:Se,create:t.union([y1,d1]),update:t.union([z1,m1])}).strict(),TRt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),PRt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),URt=t.object({select:Nd.optional(),include:wd.optional(),where:Se}).strict(),WRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([z1,m1]),where:Se}).strict(),RRt=t.object({data:t.union([bB,b1]),where:Ia.optional(),limit:t.number().optional()}).strict(),kRt=t.object({data:t.union([bB,b1]),where:Ia.optional(),limit:t.number().optional()}).strict(),xRt=t.object({where:Ia.optional(),limit:t.number().optional()}).strict(),jRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([h1,I1])}).strict(),MRt=t.object({select:qd.optional(),include:Bd.optional(),where:Te,create:t.union([h1,I1]),update:t.union([g1,C1])}).strict(),ZRt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),vRt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ORt=t.object({select:qd.optional(),include:Bd.optional(),where:Te}).strict(),fRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([g1,C1]),where:Te}).strict(),wRt=t.object({data:t.union([hB,A1]),where:ga.optional(),limit:t.number().optional()}).strict(),NRt=t.object({data:t.union([hB,A1]),where:ga.optional(),limit:t.number().optional()}).strict(),BRt=t.object({where:ga.optional(),limit:t.number().optional()}).strict(),qRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([S1,T1])}).strict(),FRt=t.object({select:Dd.optional(),include:Fd.optional(),where:Pe,create:t.union([S1,T1]),update:t.union([P1,U1])}).strict(),DRt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Rt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ERt=t.object({select:Dd.optional(),include:Fd.optional(),where:Pe}).strict(),LRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([P1,U1]),where:Pe}).strict(),VRt=t.object({data:t.union([IB,W1]),where:Ca.optional(),limit:t.number().optional()}).strict(),HRt=t.object({data:t.union([IB,W1]),where:Ca.optional(),limit:t.number().optional()}).strict(),QRt=t.object({where:Ca.optional(),limit:t.number().optional()}).strict(),YRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([R1,k1])}).strict(),GRt=t.object({select:Ed.optional(),include:_d.optional(),where:L,create:t.union([R1,k1]),update:t.union([x1,j1])}).strict(),$Rt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),JRt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),KRt=t.object({select:Ed.optional(),include:_d.optional(),where:L}).strict(),XRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([x1,j1]),where:L}).strict(),tkt=t.object({data:t.union([nP,M1]),where:Aa.optional(),limit:t.number().optional()}).strict(),ekt=t.object({data:t.union([nP,M1]),where:Aa.optional(),limit:t.number().optional()}).strict(),okt=t.object({where:Aa.optional(),limit:t.number().optional()}).strict(),nkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([Z1,v1])}).strict(),akt=t.object({select:Vd.optional(),include:Ld.optional(),where:pp,create:t.union([Z1,v1]),update:t.union([O1,f1])}).strict(),ikt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lkt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rkt=t.object({select:Vd.optional(),include:Ld.optional(),where:pp}).strict(),pkt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([O1,f1]),where:pp}).strict(),ckt=t.object({data:t.union([w1,N1]),where:co.optional(),limit:t.number().optional()}).strict(),ukt=t.object({data:t.union([w1,N1]),where:co.optional(),limit:t.number().optional()}).strict(),skt=t.object({where:co.optional(),limit:t.number().optional()}).strict(),ykt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([B1,q1])}).strict(),dkt=t.object({select:Qd.optional(),include:Hd.optional(),where:gt,create:t.union([B1,q1]),update:t.union([F1,D1])}).strict(),zkt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mkt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bkt=t.object({select:Qd.optional(),include:Hd.optional(),where:gt}).strict(),hkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([F1,D1]),where:gt}).strict(),Ikt=t.object({data:t.union([TM,_1]),where:Sa.optional(),limit:t.number().optional()}).strict(),gkt=t.object({data:t.union([TM,_1]),where:Sa.optional(),limit:t.number().optional()}).strict(),Ckt=t.object({where:Sa.optional(),limit:t.number().optional()}).strict(),Akt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([E1,L1])}).strict(),Skt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ue,create:t.union([E1,L1]),update:t.union([V1,H1])}).strict(),Tkt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pkt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ukt=t.object({select:Gd.optional(),include:Yd.optional(),where:Ue}).strict(),Wkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([V1,H1]),where:Ue}).strict(),Rkt=t.object({data:t.union([gB,Q1]),where:Ta.optional(),limit:t.number().optional()}).strict(),kkt=t.object({data:t.union([gB,Q1]),where:Ta.optional(),limit:t.number().optional()}).strict(),xkt=t.object({where:Ta.optional(),limit:t.number().optional()}).strict(),jkt=t.object({select:eb.optional(),data:t.union([Y1,G1])}).strict(),Mkt=t.object({select:eb.optional(),where:ob,create:t.union([Y1,G1]),update:t.union([$1,J1])}).strict(),Zkt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vkt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Okt=t.object({select:eb.optional(),where:ob}).strict(),fkt=t.object({select:eb.optional(),data:t.union([$1,J1]),where:ob}).strict(),wkt=t.object({data:t.union([K1,X1]),where:Al.optional(),limit:t.number().optional()}).strict(),Nkt=t.object({data:t.union([K1,X1]),where:Al.optional(),limit:t.number().optional()}).strict(),Bkt=t.object({where:Al.optional(),limit:t.number().optional()}).strict(),qkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([t9,e9])}).strict(),Fkt=t.object({select:Jd.optional(),include:$d.optional(),where:ql,create:t.union([t9,e9]),update:t.union([o9,n9])}).strict(),Dkt=t.object({data:t.union([lU,lU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_kt=t.object({data:t.union([lU,lU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ekt=t.object({select:Jd.optional(),include:$d.optional(),where:ql}).strict(),Lkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([o9,n9]),where:ql}).strict(),Vkt=t.object({data:t.union([a9,i9]),where:Me.optional(),limit:t.number().optional()}).strict(),Hkt=t.object({data:t.union([a9,i9]),where:Me.optional(),limit:t.number().optional()}).strict(),Qkt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),Ykt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([l9,r9])}).strict(),Gkt=t.object({select:Xd.optional(),include:Kd.optional(),where:$n,create:t.union([l9,r9]),update:t.union([p9,c9])}).strict(),$kt=t.object({data:t.union([rU,rU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jkt=t.object({data:t.union([rU,rU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Kkt=t.object({select:Xd.optional(),include:Kd.optional(),where:$n}).strict(),Xkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([p9,c9]),where:$n}).strict(),txt=t.object({data:t.union([u9,s9]),where:Ft.optional(),limit:t.number().optional()}).strict(),ext=t.object({data:t.union([u9,s9]),where:Ft.optional(),limit:t.number().optional()}).strict(),oxt=t.object({where:Ft.optional(),limit:t.number().optional()}).strict(),nxt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([y9,d9])}).strict(),axt=t.object({select:ez.optional(),include:tz.optional(),where:K,create:t.union([y9,d9]),update:t.union([z9,m9])}).strict(),ixt=t.object({data:t.union([pU,pU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lxt=t.object({data:t.union([pU,pU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rxt=t.object({select:ez.optional(),include:tz.optional(),where:K}).strict(),pxt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([z9,m9]),where:K}).strict(),cxt=t.object({data:t.union([CB,b9]),where:N.optional(),limit:t.number().optional()}).strict(),uxt=t.object({data:t.union([CB,b9]),where:N.optional(),limit:t.number().optional()}).strict(),sxt=t.object({where:N.optional(),limit:t.number().optional()}).strict(),yxt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([h9,I9])}).strict(),dxt=t.object({select:nz.optional(),include:oz.optional(),where:j,create:t.union([h9,I9]),update:t.union([g9,C9])}).strict(),zxt=t.object({data:t.union([cU,cU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mxt=t.object({data:t.union([cU,cU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bxt=t.object({select:nz.optional(),include:oz.optional(),where:j}).strict(),hxt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([g9,C9]),where:j}).strict(),Ixt=t.object({data:t.union([PM,A9]),where:M.optional(),limit:t.number().optional()}).strict(),gxt=t.object({data:t.union([PM,A9]),where:M.optional(),limit:t.number().optional()}).strict(),Cxt=t.object({where:M.optional(),limit:t.number().optional()}).strict(),Axt=t.object({select:iz.optional(),include:az.optional(),data:t.union([S9,T9])}).strict(),Sxt=t.object({select:iz.optional(),include:az.optional(),where:We,create:t.union([S9,T9]),update:t.union([P9,U9])}).strict(),Txt=t.object({data:t.union([uU,uU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pxt=t.object({data:t.union([uU,uU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Uxt=t.object({select:iz.optional(),include:az.optional(),where:We}).strict(),Wxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([P9,U9]),where:We}).strict(),Rxt=t.object({data:t.union([AB,W9]),where:Pa.optional(),limit:t.number().optional()}).strict(),kxt=t.object({data:t.union([AB,W9]),where:Pa.optional(),limit:t.number().optional()}).strict(),xxt=t.object({where:Pa.optional(),limit:t.number().optional()}).strict(),jxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([R9,k9])}).strict(),Mxt=t.object({select:rz.optional(),include:lz.optional(),where:Re,create:t.union([R9,k9]),update:t.union([x9,j9])}).strict(),Zxt=t.object({data:t.union([sU,sU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vxt=t.object({data:t.union([sU,sU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Oxt=t.object({select:rz.optional(),include:lz.optional(),where:Re}).strict(),fxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([x9,j9]),where:Re}).strict(),wxt=t.object({data:t.union([SB,M9]),where:Ua.optional(),limit:t.number().optional()}).strict(),Nxt=t.object({data:t.union([SB,M9]),where:Ua.optional(),limit:t.number().optional()}).strict(),Bxt=t.object({where:Ua.optional(),limit:t.number().optional()}).strict(),qxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([Z9,v9])}).strict(),Fxt=t.object({select:cz.optional(),include:pz.optional(),where:ee,create:t.union([Z9,v9]),update:t.union([O9,f9])}).strict(),Dxt=t.object({data:t.union([yU,yU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_xt=t.object({data:t.union([yU,yU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ext=t.object({select:cz.optional(),include:pz.optional(),where:ee}).strict(),Lxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([O9,f9]),where:ee}).strict(),Vxt=t.object({data:t.union([TB,w9]),where:$e.optional(),limit:t.number().optional()}).strict(),Hxt=t.object({data:t.union([TB,w9]),where:$e.optional(),limit:t.number().optional()}).strict(),Qxt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),Yxt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([N9,B9])}).strict(),Gxt=t.object({select:sz.optional(),include:uz.optional(),where:C,create:t.union([N9,B9]),update:t.union([q9,F9])}).strict(),$xt=t.object({data:t.union([dU,dU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jxt=t.object({data:t.union([dU,dU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Kxt=t.object({select:sz.optional(),include:uz.optional(),where:C}).strict(),Xxt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([q9,F9]),where:C}).strict(),tjt=t.object({data:t.union([BI,D9]),where:v.optional(),limit:t.number().optional()}).strict(),ejt=t.object({data:t.union([BI,D9]),where:v.optional(),limit:t.number().optional()}).strict(),ojt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),njt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([_9,E9])}).strict(),ajt=t.object({select:dz.optional(),include:yz.optional(),where:$,create:t.union([_9,E9]),update:t.union([L9,V9])}).strict(),ijt=t.object({data:t.union([zU,zU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ljt=t.object({data:t.union([zU,zU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rjt=t.object({select:dz.optional(),include:yz.optional(),where:$}).strict(),pjt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([L9,V9]),where:$}).strict(),cjt=t.object({data:t.union([UM,H9]),where:jt.optional(),limit:t.number().optional()}).strict(),ujt=t.object({data:t.union([UM,H9]),where:jt.optional(),limit:t.number().optional()}).strict(),sjt=t.object({where:jt.optional(),limit:t.number().optional()}).strict(),yjt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([Q9,Y9])}).strict(),djt=t.object({select:mz.optional(),include:zz.optional(),where:V,create:t.union([Q9,Y9]),update:t.union([G9,$9])}).strict(),zjt=t.object({data:t.union([mU,mU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mjt=t.object({data:t.union([mU,mU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bjt=t.object({select:mz.optional(),include:zz.optional(),where:V}).strict(),hjt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([G9,$9]),where:V}).strict(),Ijt=t.object({data:t.union([aP,J9]),where:Wa.optional(),limit:t.number().optional()}).strict(),gjt=t.object({data:t.union([aP,J9]),where:Wa.optional(),limit:t.number().optional()}).strict(),Cjt=t.object({where:Wa.optional(),limit:t.number().optional()}).strict(),Ajt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([K9,X9])}).strict(),Sjt=t.object({select:hz.optional(),include:bz.optional(),where:pt,create:t.union([K9,X9]),update:t.union([t$,e$])}).strict(),Tjt=t.object({data:t.union([bU,bU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pjt=t.object({data:t.union([bU,bU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ujt=t.object({select:hz.optional(),include:bz.optional(),where:pt}).strict(),Wjt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([t$,e$]),where:pt}).strict(),Rjt=t.object({data:t.union([WM,o$]),where:Be.optional(),limit:t.number().optional()}).strict(),kjt=t.object({data:t.union([WM,o$]),where:Be.optional(),limit:t.number().optional()}).strict(),xjt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),jjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([n$,a$])}).strict(),Mjt=t.object({select:gz.optional(),include:Iz.optional(),where:f,create:t.union([n$,a$]),update:t.union([i$,l$])}).strict(),Zjt=t.object({data:t.union([hU,hU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vjt=t.object({data:t.union([hU,hU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ojt=t.object({select:gz.optional(),include:Iz.optional(),where:f}).strict(),fjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([i$,l$]),where:f}).strict(),wjt=t.object({data:t.union([iP,r$]),where:ie.optional(),limit:t.number().optional()}).strict(),Njt=t.object({data:t.union([iP,r$]),where:ie.optional(),limit:t.number().optional()}).strict(),Bjt=t.object({where:ie.optional(),limit:t.number().optional()}).strict(),qjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([p$,c$])}).strict(),Fjt=t.object({select:Az.optional(),include:Cz.optional(),where:H,create:t.union([p$,c$]),update:t.union([u$,s$])}).strict(),Djt=t.object({data:t.union([IU,IU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_jt=t.object({data:t.union([IU,IU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ejt=t.object({select:Az.optional(),include:Cz.optional(),where:H}).strict(),Ljt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([u$,s$]),where:H}).strict(),Vjt=t.object({data:t.union([lP,y$]),where:Ra.optional(),limit:t.number().optional()}).strict(),Hjt=t.object({data:t.union([lP,y$]),where:Ra.optional(),limit:t.number().optional()}).strict(),Qjt=t.object({where:Ra.optional(),limit:t.number().optional()}).strict(),Yjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([d$,z$])}).strict(),Gjt=t.object({select:Tz.optional(),include:Sz.optional(),where:ct,create:t.union([d$,z$]),update:t.union([m$,b$])}).strict(),$jt=t.object({data:t.union([gU,gU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Jjt=t.object({data:t.union([gU,gU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Kjt=t.object({select:Tz.optional(),include:Sz.optional(),where:ct}).strict(),Xjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([m$,b$]),where:ct}).strict(),tMt=t.object({data:t.union([RM,h$]),where:Je.optional(),limit:t.number().optional()}).strict(),eMt=t.object({data:t.union([RM,h$]),where:Je.optional(),limit:t.number().optional()}).strict(),oMt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),nMt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([I$,g$])}).strict(),aMt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ct,create:t.union([I$,g$]),update:t.union([C$,A$])}).strict(),iMt=t.object({data:t.union([CU,CU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lMt=t.object({data:t.union([CU,CU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rMt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ct}).strict(),pMt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([C$,A$]),where:Ct}).strict(),cMt=t.object({data:t.union([kM,S$]),where:ka.optional(),limit:t.number().optional()}).strict(),uMt=t.object({data:t.union([kM,S$]),where:ka.optional(),limit:t.number().optional()}).strict(),sMt=t.object({where:ka.optional(),limit:t.number().optional()}).strict(),yMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([T$,P$])}).strict(),dMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Hl,create:t.union([T$,P$]),update:t.union([U$,W$])}).strict(),zMt=t.object({data:t.union([AU,AU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mMt=t.object({data:t.union([AU,AU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Hl}).strict(),hMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([U$,W$]),where:Hl}).strict(),IMt=t.object({data:t.union([R$,k$]),where:De.optional(),limit:t.number().optional()}).strict(),gMt=t.object({data:t.union([R$,k$]),where:De.optional(),limit:t.number().optional()}).strict(),CMt=t.object({where:De.optional(),limit:t.number().optional()}).strict(),AMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([x$,j$])}).strict(),SMt=t.object({select:xz.optional(),include:kz.optional(),where:ut,create:t.union([x$,j$]),update:t.union([M$,Z$])}).strict(),TMt=t.object({data:t.union([SU,SU.array()]),skipDuplicates:t.boolean().optional()}).strict(),PMt=t.object({data:t.union([SU,SU.array()]),skipDuplicates:t.boolean().optional()}).strict(),UMt=t.object({select:xz.optional(),include:kz.optional(),where:ut}).strict(),WMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([M$,Z$]),where:ut}).strict(),RMt=t.object({data:t.union([xM,v$]),where:Ke.optional(),limit:t.number().optional()}).strict(),kMt=t.object({data:t.union([xM,v$]),where:Ke.optional(),limit:t.number().optional()}).strict(),xMt=t.object({where:Ke.optional(),limit:t.number().optional()}).strict(),jMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([O$,f$])}).strict(),MMt=t.object({select:Mz.optional(),include:jz.optional(),where:At,create:t.union([O$,f$]),update:t.union([w$,N$])}).strict(),ZMt=t.object({data:t.union([TU,TU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vMt=t.object({data:t.union([TU,TU.array()]),skipDuplicates:t.boolean().optional()}).strict(),OMt=t.object({select:Mz.optional(),include:jz.optional(),where:At}).strict(),fMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([w$,N$]),where:At}).strict(),wMt=t.object({data:t.union([jM,B$]),where:xa.optional(),limit:t.number().optional()}).strict(),NMt=t.object({data:t.union([jM,B$]),where:xa.optional(),limit:t.number().optional()}).strict(),BMt=t.object({where:xa.optional(),limit:t.number().optional()}).strict(),qMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([q$,F$])}).strict(),FMt=t.object({select:vz.optional(),include:Zz.optional(),where:Yt,create:t.union([q$,F$]),update:t.union([D$,_$])}).strict(),DMt=t.object({data:t.union([PU,PU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Mt=t.object({data:t.union([PU,PU.array()]),skipDuplicates:t.boolean().optional()}).strict(),EMt=t.object({select:vz.optional(),include:Zz.optional(),where:Yt}).strict(),LMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([D$,_$]),where:Yt}).strict(),VMt=t.object({data:t.union([PB,E$]),where:Oe.optional(),limit:t.number().optional()}).strict(),HMt=t.object({data:t.union([PB,E$]),where:Oe.optional(),limit:t.number().optional()}).strict(),QMt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),YMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([L$,V$])}).strict(),GMt=t.object({select:fz.optional(),include:Oz.optional(),where:oe,create:t.union([L$,V$]),update:t.union([H$,Q$])}).strict(),$Mt=t.object({data:t.union([UU,UU.array()]),skipDuplicates:t.boolean().optional()}).strict(),JMt=t.object({data:t.union([UU,UU.array()]),skipDuplicates:t.boolean().optional()}).strict(),KMt=t.object({select:fz.optional(),include:Oz.optional(),where:oe}).strict(),XMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([H$,Q$]),where:oe}).strict(),tZt=t.object({data:t.union([UB,Y$]),where:Xe.optional(),limit:t.number().optional()}).strict(),eZt=t.object({data:t.union([UB,Y$]),where:Xe.optional(),limit:t.number().optional()}).strict(),oZt=t.object({where:Xe.optional(),limit:t.number().optional()}).strict(),nZt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([G$,$$])}).strict(),aZt=t.object({select:Nz.optional(),include:wz.optional(),where:ne,create:t.union([G$,$$]),update:t.union([J$,K$])}).strict(),iZt=t.object({data:t.union([WU,WU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lZt=t.object({data:t.union([WU,WU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rZt=t.object({select:Nz.optional(),include:wz.optional(),where:ne}).strict(),pZt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([J$,K$]),where:ne}).strict(),cZt=t.object({data:t.union([WB,X$]),where:to.optional(),limit:t.number().optional()}).strict(),uZt=t.object({data:t.union([WB,X$]),where:to.optional(),limit:t.number().optional()}).strict(),sZt=t.object({where:to.optional(),limit:t.number().optional()}).strict(),yZt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([t4,e4])}).strict(),dZt=t.object({select:qz.optional(),include:Bz.optional(),where:Q,create:t.union([t4,e4]),update:t.union([o4,n4])}).strict(),zZt=t.object({data:t.union([RU,RU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mZt=t.object({data:t.union([RU,RU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bZt=t.object({select:qz.optional(),include:Bz.optional(),where:Q}).strict(),hZt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([o4,n4]),where:Q}).strict(),IZt=t.object({data:t.union([rP,a4]),where:ja.optional(),limit:t.number().optional()}).strict(),gZt=t.object({data:t.union([rP,a4]),where:ja.optional(),limit:t.number().optional()}).strict(),CZt=t.object({where:ja.optional(),limit:t.number().optional()}).strict(),AZt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([i4,l4])}).strict(),SZt=t.object({select:Dz.optional(),include:Fz.optional(),where:ke,create:t.union([i4,l4]),update:t.union([r4,p4])}).strict(),TZt=t.object({data:t.union([kU,kU.array()]),skipDuplicates:t.boolean().optional()}).strict(),PZt=t.object({data:t.union([kU,kU.array()]),skipDuplicates:t.boolean().optional()}).strict(),UZt=t.object({select:Dz.optional(),include:Fz.optional(),where:ke}).strict(),WZt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([r4,p4]),where:ke}).strict(),RZt=t.object({data:t.union([RB,c4]),where:Ma.optional(),limit:t.number().optional()}).strict(),kZt=t.object({data:t.union([RB,c4]),where:Ma.optional(),limit:t.number().optional()}).strict(),xZt=t.object({where:Ma.optional(),limit:t.number().optional()}).strict(),jZt=t.object({select:Ez.optional(),include:_z.optional(),data:t.union([u4,s4])}).strict(),MZt=t.object({select:Ez.optional(),include:_z.optional(),where:Gt,create:t.union([u4,s4]),update:t.union([y4,d4])}).strict(),ZZt=t.object({data:t.union([xU,xU.array()]),skipDuplicates:t.boolean().optional()}).strict(),vZt=t.object({data:t.union([xU,xU.array()]),skipDuplicates:t.boolean().optional()}).strict(),OZt=t.object({select:Ez.optional(),include:_z.optional(),where:Gt}).strict(),fZt=t.object({select:Ez.optional(),include:_z.optional(),data:t.union([y4,d4]),where:Gt}).strict(),wZt=t.object({data:t.union([kB,z4]),where:fe.optional(),limit:t.number().optional()}).strict(),NZt=t.object({data:t.union([kB,z4]),where:fe.optional(),limit:t.number().optional()}).strict(),BZt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),qZt=t.object({select:Vz.optional(),include:Lz.optional(),data:t.union([m4,b4])}).strict(),FZt=t.object({select:Vz.optional(),include:Lz.optional(),where:St,create:t.union([m4,b4]),update:t.union([h4,I4])}).strict(),DZt=t.object({data:t.union([jU,jU.array()]),skipDuplicates:t.boolean().optional()}).strict(),_Zt=t.object({data:t.union([jU,jU.array()]),skipDuplicates:t.boolean().optional()}).strict(),EZt=t.object({select:Vz.optional(),include:Lz.optional(),where:St}).strict(),LZt=t.object({select:Vz.optional(),include:Lz.optional(),data:t.union([h4,I4]),where:St}).strict(),VZt=t.object({data:t.union([MM,g4]),where:Za.optional(),limit:t.number().optional()}).strict(),HZt=t.object({data:t.union([MM,g4]),where:Za.optional(),limit:t.number().optional()}).strict(),QZt=t.object({where:Za.optional(),limit:t.number().optional()}).strict(),YZt=t.object({select:Qz.optional(),include:Hz.optional(),data:t.union([C4,A4])}).strict(),GZt=t.object({select:Qz.optional(),include:Hz.optional(),where:x,create:t.union([C4,A4]),update:t.union([S4,T4])}).strict(),$Zt=t.object({data:t.union([MU,MU.array()]),skipDuplicates:t.boolean().optional()}).strict(),JZt=t.object({data:t.union([MU,MU.array()]),skipDuplicates:t.boolean().optional()}).strict(),KZt=t.object({select:Qz.optional(),include:Hz.optional(),where:x}).strict(),XZt=t.object({select:Qz.optional(),include:Hz.optional(),data:t.union([S4,T4]),where:x}).strict(),tvt=t.object({data:t.union([qS,P4]),where:Tt.optional(),limit:t.number().optional()}).strict(),evt=t.object({data:t.union([qS,P4]),where:Tt.optional(),limit:t.number().optional()}).strict(),ovt=t.object({where:Tt.optional(),limit:t.number().optional()}).strict(),nvt=t.object({select:Gz.optional(),include:Yz.optional(),data:t.union([U4,W4])}).strict(),avt=t.object({select:Gz.optional(),include:Yz.optional(),where:Ql,create:t.union([U4,W4]),update:t.union([R4,k4])}).strict(),ivt=t.object({data:t.union([ZU,ZU.array()]),skipDuplicates:t.boolean().optional()}).strict(),lvt=t.object({data:t.union([ZU,ZU.array()]),skipDuplicates:t.boolean().optional()}).strict(),rvt=t.object({select:Gz.optional(),include:Yz.optional(),where:Ql}).strict(),pvt=t.object({select:Gz.optional(),include:Yz.optional(),data:t.union([R4,k4]),where:Ql}).strict(),cvt=t.object({data:t.union([x4,j4]),where:_e.optional(),limit:t.number().optional()}).strict(),uvt=t.object({data:t.union([x4,j4]),where:_e.optional(),limit:t.number().optional()}).strict(),svt=t.object({where:_e.optional(),limit:t.number().optional()}).strict(),yvt=t.object({select:Jz.optional(),include:$z.optional(),data:t.union([M4,Z4])}).strict(),dvt=t.object({select:Jz.optional(),include:$z.optional(),where:xe,create:t.union([M4,Z4]),update:t.union([v4,O4])}).strict(),zvt=t.object({data:t.union([vU,vU.array()]),skipDuplicates:t.boolean().optional()}).strict(),mvt=t.object({data:t.union([vU,vU.array()]),skipDuplicates:t.boolean().optional()}).strict(),bvt=t.object({select:Jz.optional(),include:$z.optional(),where:xe}).strict(),hvt=t.object({select:Jz.optional(),include:$z.optional(),data:t.union([v4,O4]),where:xe}).strict(),Ivt=t.object({data:t.union([xB,f4]),where:va.optional(),limit:t.number().optional()}).strict(),gvt=t.object({data:t.union([xB,f4]),where:va.optional(),limit:t.number().optional()}).strict(),Cvt=t.object({where:va.optional(),limit:t.number().optional()}).strict(),Avt=t.object({select:Xz.optional(),include:Kz.optional(),data:t.union([w4,N4])}).strict(),Svt=t.object({select:Xz.optional(),include:Kz.optional(),where:je,create:t.union([w4,N4]),update:t.union([B4,q4])}).strict(),Tvt=t.object({data:t.union([OU,OU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Pvt=t.object({data:t.union([OU,OU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Uvt=t.object({select:Xz.optional(),include:Kz.optional(),where:je}).strict(),Wvt=t.object({select:Xz.optional(),include:Kz.optional(),data:t.union([B4,q4]),where:je}).strict(),Rvt=t.object({data:t.union([jB,F4]),where:Oa.optional(),limit:t.number().optional()}).strict(),kvt=t.object({data:t.union([jB,F4]),where:Oa.optional(),limit:t.number().optional()}).strict(),xvt=t.object({where:Oa.optional(),limit:t.number().optional()}).strict();export{sdt as zodSchemas};