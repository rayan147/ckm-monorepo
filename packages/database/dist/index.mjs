export*from'@prisma/client';var ast=Object.defineProperty;var ist=(c,i)=>{for(var p in i)ast(c,p,{get:i[p],enumerable:true});};var nst={};ist(nst,{AllergenAggregateArgsSchema:()=>hIt,AllergenArgsSchema:()=>wQ,AllergenAvgOrderByAggregateInputSchema:()=>xot,AllergenCountOrderByAggregateInputSchema:()=>kot,AllergenCountOutputTypeArgsSchema:()=>NQ,AllergenCountOutputTypeSelectSchema:()=>dX,AllergenCreateArgsSchema:()=>DWt,AllergenCreateInputSchema:()=>QG,AllergenCreateManyAndReturnArgsSchema:()=>LWt,AllergenCreateManyArgsSchema:()=>EWt,AllergenCreateManyInputSchema:()=>UP,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>k2,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>q6,AllergenCreateWithoutIngredientsInputSchema:()=>Mv,AllergenDeleteArgsSchema:()=>VWt,AllergenDeleteManyArgsSchema:()=>GWt,AllergenFindFirstArgsSchema:()=>zIt,AllergenFindFirstOrThrowArgsSchema:()=>mIt,AllergenFindManyArgsSchema:()=>bIt,AllergenFindUniqueArgsSchema:()=>gIt,AllergenFindUniqueOrThrowArgsSchema:()=>CIt,AllergenGroupByArgsSchema:()=>IIt,AllergenIncludeSchema:()=>jd,AllergenMaxOrderByAggregateInputSchema:()=>jot,AllergenMinOrderByAggregateInputSchema:()=>Mot,AllergenOrderByWithAggregationInputSchema:()=>uV,AllergenOrderByWithRelationInputSchema:()=>Mm,AllergenScalarFieldEnumSchema:()=>vg,AllergenScalarRelationFilterSchema:()=>u4,AllergenScalarWhereWithAggregatesInputSchema:()=>rA,AllergenSchema:()=>Vdt,AllergenSelectSchema:()=>Md,AllergenSumOrderByAggregateInputSchema:()=>Zot,AllergenUncheckedCreateInputSchema:()=>YG,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>Zv,AllergenUncheckedUpdateInputSchema:()=>$G,AllergenUncheckedUpdateManyInputSchema:()=>KG,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>$_,AllergenUpdateArgsSchema:()=>HWt,AllergenUpdateInputSchema:()=>GG,AllergenUpdateManyAndReturnArgsSchema:()=>YWt,AllergenUpdateManyArgsSchema:()=>QWt,AllergenUpdateManyMutationInputSchema:()=>JG,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>j2,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Opt,AllergenUpdateWithoutIngredientsInputSchema:()=>G_,AllergenUpsertArgsSchema:()=>_Wt,AllergenUpsertWithoutIngredientsInputSchema:()=>vpt,AllergenWhereInputSchema:()=>ro,AllergenWhereUniqueInputSchema:()=>tp,AvailabilityAggregateArgsSchema:()=>Kht,AvailabilityArgsSchema:()=>qzt,AvailabilityAvgOrderByAggregateInputSchema:()=>sot,AvailabilityCountOrderByAggregateInputSchema:()=>yot,AvailabilityCreateArgsSchema:()=>zWt,AvailabilityCreateInputSchema:()=>ZG,AvailabilityCreateManyAndReturnArgsSchema:()=>hWt,AvailabilityCreateManyArgsSchema:()=>bWt,AvailabilityCreateManyInputSchema:()=>SP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>IO,AvailabilityCreateManyUserInputSchema:()=>WH,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>ti,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>mh,AvailabilityCreateWithoutUserInputSchema:()=>Cu,AvailabilityDeleteArgsSchema:()=>IWt,AvailabilityDeleteManyArgsSchema:()=>SWt,AvailabilityFindFirstArgsSchema:()=>$ht,AvailabilityFindFirstOrThrowArgsSchema:()=>Jht,AvailabilityFindManyArgsSchema:()=>MK,AvailabilityFindUniqueArgsSchema:()=>tIt,AvailabilityFindUniqueOrThrowArgsSchema:()=>eIt,AvailabilityGroupByArgsSchema:()=>Xht,AvailabilityIncludeSchema:()=>Pd,AvailabilityListRelationFilterSchema:()=>W4,AvailabilityMaxOrderByAggregateInputSchema:()=>dot,AvailabilityMinOrderByAggregateInputSchema:()=>zot,AvailabilityOrderByRelationAggregateInputSchema:()=>Int,AvailabilityOrderByWithAggregationInputSchema:()=>rV,AvailabilityOrderByWithRelationInputSchema:()=>yb,AvailabilityScalarFieldEnumSchema:()=>jg,AvailabilityScalarWhereInputSchema:()=>Up,AvailabilityScalarWhereWithAggregatesInputSchema:()=>aA,AvailabilitySchema:()=>_dt,AvailabilitySelectSchema:()=>Ud,AvailabilitySumOrderByAggregateInputSchema:()=>mot,AvailabilityUncheckedCreateInputSchema:()=>vG,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>Ii,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>Au,AvailabilityUncheckedUpdateInputSchema:()=>fG,AvailabilityUncheckedUpdateManyInputSchema:()=>wG,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>tyt,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>ol,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>z7,AvailabilityUpdateArgsSchema:()=>gWt,AvailabilityUpdateInputSchema:()=>OG,AvailabilityUpdateManyAndReturnArgsSchema:()=>AWt,AvailabilityUpdateManyArgsSchema:()=>CWt,AvailabilityUpdateManyMutationInputSchema:()=>wN,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>CR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>Bi,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>gR,AvailabilityUpdateWithoutUserInputSchema:()=>d7,AvailabilityUpsertArgsSchema:()=>mWt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>IR,AvailabilityWhereInputSchema:()=>ma,AvailabilityWhereUniqueInputSchema:()=>Ae,BoolFieldUpdateOperationsInputSchema:()=>z,BoolFilterSchema:()=>_t,BoolWithAggregatesFilterSchema:()=>fl,ChecklistCompleteAggregateArgsSchema:()=>Fbt,ChecklistCompleteArgsSchema:()=>xQ,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>iet,ChecklistCompleteCountOrderByAggregateInputSchema:()=>aet,ChecklistCompleteCountOutputTypeArgsSchema:()=>jQ,ChecklistCompleteCountOutputTypeSelectSchema:()=>cX,ChecklistCompleteCreateArgsSchema:()=>TPt,ChecklistCompleteCreateInputSchema:()=>MY,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>WPt,ChecklistCompleteCreateManyArgsSchema:()=>UPt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>TZ,ChecklistCompleteCreateManyChecklistInputSchema:()=>YV,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>AO,ChecklistCompleteCreateManyCompletedByInputSchema:()=>xH,ChecklistCompleteCreateManyInputSchema:()=>yP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>DB,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>ni,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>g2,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Ob,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>Ih,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>z6,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>ac,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>Wu,ChecklistCompleteCreateWithoutItemsInputSchema:()=>ZZ,ChecklistCompleteDeleteArgsSchema:()=>RPt,ChecklistCompleteDeleteManyArgsSchema:()=>MPt,ChecklistCompleteFindFirstArgsSchema:()=>Bbt,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>qbt,ChecklistCompleteFindManyArgsSchema:()=>Yw,ChecklistCompleteFindUniqueArgsSchema:()=>_bt,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>Ebt,ChecklistCompleteGroupByArgsSchema:()=>Dbt,ChecklistCompleteIncludeSchema:()=>od,ChecklistCompleteListRelationFilterSchema:()=>Xj,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>ret,ChecklistCompleteMinOrderByAggregateInputSchema:()=>pet,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>e4,ChecklistCompleteOrderByWithAggregationInputSchema:()=>$L,ChecklistCompleteOrderByWithRelationInputSchema:()=>km,ChecklistCompleteScalarFieldEnumSchema:()=>gg,ChecklistCompleteScalarRelationFilterSchema:()=>n4,ChecklistCompleteScalarWhereInputSchema:()=>bl,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>QC,ChecklistCompleteSchema:()=>Mdt,ChecklistCompleteSelectSchema:()=>nd,ChecklistCompleteSumOrderByAggregateInputSchema:()=>cet,ChecklistCompleteUncheckedCreateInputSchema:()=>ZY,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>EB,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Ai,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>ic,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Ru,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>vZ,ChecklistCompleteUncheckedUpdateInputSchema:()=>OY,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>fY,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>gut,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>YB,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>nyt,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>il,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>K3,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>C7,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>t_,ChecklistCompleteUpdateArgsSchema:()=>kPt,ChecklistCompleteUpdateInputSchema:()=>vY,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>jPt,ChecklistCompleteUpdateManyArgsSchema:()=>xPt,ChecklistCompleteUpdateManyMutationInputSchema:()=>fj,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>TU,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>xR,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>HB,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Di,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>A2,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Brt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>SU,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>kR,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>J3,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>g7,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>XD,ChecklistCompleteUpsertArgsSchema:()=>PPt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>AU,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>RR,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>Nrt,ChecklistCompleteWhereInputSchema:()=>He,ChecklistCompleteWhereUniqueInputSchema:()=>at,ChecklistFrequencySchema:()=>Nt,ChecklistItemAggregateArgsSchema:()=>Obt,ChecklistItemArgsSchema:()=>RQ,ChecklistItemAvgOrderByAggregateInputSchema:()=>Xtt,ChecklistItemCompleteAggregateArgsSchema:()=>Hbt,ChecklistItemCompleteArgsSchema:()=>Mzt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>yet,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>uet,ChecklistItemCompleteCreateArgsSchema:()=>ZPt,ChecklistItemCompleteCreateInputSchema:()=>wY,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>fPt,ChecklistItemCompleteCreateManyArgsSchema:()=>OPt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>MZ,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>$V,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>WZ,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>GV,ChecklistItemCompleteCreateManyInputSchema:()=>sP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>JB,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>z2,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>wb,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>fb,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>pc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>lc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Em,ChecklistItemCompleteDeleteArgsSchema:()=>wPt,ChecklistItemCompleteDeleteManyArgsSchema:()=>FPt,ChecklistItemCompleteFindFirstArgsSchema:()=>Lbt,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>Vbt,ChecklistItemCompleteFindManyArgsSchema:()=>Gw,ChecklistItemCompleteFindUniqueArgsSchema:()=>Ybt,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>Gbt,ChecklistItemCompleteGroupByArgsSchema:()=>Qbt,ChecklistItemCompleteIncludeSchema:()=>ad,ChecklistItemCompleteListRelationFilterSchema:()=>eM,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>set,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>det,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>o4,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>JL,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>nb,ChecklistItemCompleteScalarFieldEnumSchema:()=>Cg,ChecklistItemCompleteScalarWhereInputSchema:()=>hl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>YC,ChecklistItemCompleteSchema:()=>Zdt,ChecklistItemCompleteSelectSchema:()=>id,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>zet,ChecklistItemCompleteUncheckedCreateInputSchema:()=>NY,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>KB,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>m2,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>cc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>rc,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>qY,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>FY,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Aut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>oq,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>Cut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>I2,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>o8,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>t8,ChecklistItemCompleteUpdateArgsSchema:()=>NPt,ChecklistItemCompleteUpdateInputSchema:()=>BY,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>qPt,ChecklistItemCompleteUpdateManyArgsSchema:()=>BPt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>wj,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>xU,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>WU,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>eq,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>h2,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>kU,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>UU,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>e8,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>X3,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>qz,ChecklistItemCompleteUpsertArgsSchema:()=>vPt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>RU,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>PU,ChecklistItemCompleteWhereInputSchema:()=>ra,ChecklistItemCompleteWhereUniqueInputSchema:()=>mt,ChecklistItemCountOrderByAggregateInputSchema:()=>Ktt,ChecklistItemCountOutputTypeArgsSchema:()=>kQ,ChecklistItemCountOutputTypeSelectSchema:()=>pX,ChecklistItemCreateArgsSchema:()=>zPt,ChecklistItemCreateInputSchema:()=>WY,ChecklistItemCreateManyAndReturnArgsSchema:()=>hPt,ChecklistItemCreateManyArgsSchema:()=>bPt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>SZ,ChecklistItemCreateManyChecklistInputSchema:()=>QV,ChecklistItemCreateManyInputSchema:()=>uP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>FB,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>C2,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>vb,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>m6,ChecklistItemCreateWithoutChecklistInputSchema:()=>oc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>OZ,ChecklistItemDeleteArgsSchema:()=>IPt,ChecklistItemDeleteManyArgsSchema:()=>SPt,ChecklistItemFindFirstArgsSchema:()=>Zbt,ChecklistItemFindFirstOrThrowArgsSchema:()=>vbt,ChecklistItemFindManyArgsSchema:()=>kK,ChecklistItemFindUniqueArgsSchema:()=>wbt,ChecklistItemFindUniqueOrThrowArgsSchema:()=>Nbt,ChecklistItemGroupByArgsSchema:()=>fbt,ChecklistItemIncludeSchema:()=>td,ChecklistItemListRelationFilterSchema:()=>t4,ChecklistItemMaxOrderByAggregateInputSchema:()=>tet,ChecklistItemMinOrderByAggregateInputSchema:()=>eet,ChecklistItemOrderByRelationAggregateInputSchema:()=>Vtt,ChecklistItemOrderByWithAggregationInputSchema:()=>GL,ChecklistItemOrderByWithRelationInputSchema:()=>Rm,ChecklistItemScalarFieldEnumSchema:()=>Ig,ChecklistItemScalarRelationFilterSchema:()=>a4,ChecklistItemScalarWhereInputSchema:()=>bp,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>HC,ChecklistItemSchema:()=>jdt,ChecklistItemSelectSchema:()=>ed,ChecklistItemSumOrderByAggregateInputSchema:()=>oet,ChecklistItemTypeSchema:()=>Et,ChecklistItemUncheckedCreateInputSchema:()=>RY,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>_B,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>nc,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>fZ,ChecklistItemUncheckedUpdateInputSchema:()=>xY,ChecklistItemUncheckedUpdateManyInputSchema:()=>jY,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>Iut,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>QB,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>$3,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>o_,ChecklistItemUpdateArgsSchema:()=>gPt,ChecklistItemUpdateInputSchema:()=>kY,ChecklistItemUpdateManyAndReturnArgsSchema:()=>APt,ChecklistItemUpdateManyArgsSchema:()=>CPt,ChecklistItemUpdateManyMutationInputSchema:()=>vN,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>CU,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>VB,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>S2,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Frt,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>gU,ChecklistItemUpdateWithoutChecklistInputSchema:()=>G3,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>e_,ChecklistItemUpsertArgsSchema:()=>mPt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>IU,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>qrt,ChecklistItemWhereInputSchema:()=>Ve,ChecklistItemWhereUniqueInputSchema:()=>Xt,ChecklistStatusSchema:()=>Dt,ConstraintTypeSchema:()=>ce,CookBookAggregateArgsSchema:()=>Cgt,CookBookArgsSchema:()=>_Q,CookBookAvgOrderByAggregateInputSchema:()=>Znt,CookBookCountOrderByAggregateInputSchema:()=>Mnt,CookBookCountOutputTypeArgsSchema:()=>EQ,CookBookCountOutputTypeSelectSchema:()=>IX,CookBookCreateArgsSchema:()=>zkt,CookBookCreateInputSchema:()=>_1,CookBookCreateManyAndReturnArgsSchema:()=>hkt,CookBookCreateManyArgsSchema:()=>bkt,CookBookCreateManyInputSchema:()=>OP,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>Vv,CookBookCreateManyRestaurantInputSchema:()=>lH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>_l,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>co,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>$6,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>Gb,CookBookCreateWithoutRecipesInputSchema:()=>OO,CookBookCreateWithoutRestaurantInputSchema:()=>Oc,CookBookDeleteArgsSchema:()=>Ikt,CookBookDeleteManyArgsSchema:()=>Skt,CookBookFindFirstArgsSchema:()=>Igt,CookBookFindFirstOrThrowArgsSchema:()=>ggt,CookBookFindManyArgsSchema:()=>wK,CookBookFindUniqueArgsSchema:()=>Sgt,CookBookFindUniqueOrThrowArgsSchema:()=>Tgt,CookBookGroupByArgsSchema:()=>Agt,CookBookIncludeSchema:()=>Hd,CookBookListRelationFilterSchema:()=>m4,CookBookMaxOrderByAggregateInputSchema:()=>vnt,CookBookMinOrderByAggregateInputSchema:()=>Ont,CookBookOrderByRelationAggregateInputSchema:()=>lnt,CookBookOrderByWithAggregationInputSchema:()=>gV,CookBookOrderByWithRelationInputSchema:()=>Zm,CookBookScalarFieldEnumSchema:()=>_g,CookBookScalarRelationFilterSchema:()=>k4,CookBookScalarWhereInputSchema:()=>Ip,CookBookScalarWhereWithAggregatesInputSchema:()=>bA,CookBookSchema:()=>tzt,CookBookSelectSchema:()=>Qd,CookBookSumOrderByAggregateInputSchema:()=>fnt,CookBookUncheckedCreateInputSchema:()=>E1,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>er,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>fO,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>fc,CookBookUncheckedUpdateInputSchema:()=>V1,CookBookUncheckedUpdateManyInputSchema:()=>H1,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Out,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>zE,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>k8,CookBookUpdateArgsSchema:()=>gkt,CookBookUpdateInputSchema:()=>L1,CookBookUpdateManyAndReturnArgsSchema:()=>Akt,CookBookUpdateManyArgsSchema:()=>Ckt,CookBookUpdateManyMutationInputSchema:()=>DN,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>zW,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>mr,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>on,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Kpt,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>dW,CookBookUpdateWithoutRecipesInputSchema:()=>dE,CookBookUpdateWithoutRestaurantInputSchema:()=>R8,CookBookUpsertArgsSchema:()=>mkt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>sW,CookBookUpsertWithoutRecipesInputSchema:()=>Jpt,CookBookWhereInputSchema:()=>Ye,CookBookWhereUniqueInputSchema:()=>te,CountStatusSchema:()=>vt,CustomerFeedbackAggregateArgsSchema:()=>aht,CustomerFeedbackArgsSchema:()=>vzt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>Tet,CustomerFeedbackCountOrderByAggregateInputSchema:()=>Aet,CustomerFeedbackCreateArgsSchema:()=>$Pt,CustomerFeedbackCreateInputSchema:()=>HY,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>XPt,CustomerFeedbackCreateManyArgsSchema:()=>KPt,CustomerFeedbackCreateManyInputSchema:()=>zP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>Bw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>gQ,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>SO,CustomerFeedbackCreateManyRespondedByInputSchema:()=>jH,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>oO,CustomerFeedbackCreateManyRestaurantInputSchema:()=>bH,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>Yz,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ai,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>bI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>gh,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>ih,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>Ss,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>ku,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>tu,CustomerFeedbackCreatetagsInputSchema:()=>np,CustomerFeedbackDeleteArgsSchema:()=>tUt,CustomerFeedbackDeleteManyArgsSchema:()=>aUt,CustomerFeedbackFindFirstArgsSchema:()=>oht,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>nht,CustomerFeedbackFindManyArgsSchema:()=>nT,CustomerFeedbackFindUniqueArgsSchema:()=>lht,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>rht,CustomerFeedbackGroupByArgsSchema:()=>iht,CustomerFeedbackIncludeSchema:()=>pd,CustomerFeedbackListRelationFilterSchema:()=>TS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>Pet,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Uet,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>dB,CustomerFeedbackOrderByWithAggregationInputSchema:()=>XL,CustomerFeedbackOrderByWithRelationInputSchema:()=>ib,CustomerFeedbackScalarFieldEnumSchema:()=>Sg,CustomerFeedbackScalarWhereInputSchema:()=>qa,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>$C,CustomerFeedbackSchema:()=>Odt,CustomerFeedbackSelectSchema:()=>cd,CustomerFeedbackSumOrderByAggregateInputSchema:()=>Wet,CustomerFeedbackUncheckedCreateInputSchema:()=>QY,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>om,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>Si,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>Ts,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>xu,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>eu,CustomerFeedbackUncheckedUpdateInputSchema:()=>GY,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>$Y,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>est,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Cm,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>ayt,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>ll,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Lut,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>bK,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>S7,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>Y8,CustomerFeedbackUpdateArgsSchema:()=>eUt,CustomerFeedbackUpdateInputSchema:()=>YY,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>nUt,CustomerFeedbackUpdateManyArgsSchema:()=>oUt,CustomerFeedbackUpdateManyMutationInputSchema:()=>ST,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Tj,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>ZR,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>LW,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>sm,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>_i,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Sj,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>MR,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>EW,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>mK,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>A7,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>Q8,CustomerFeedbackUpdatetagsInputSchema:()=>Er,CustomerFeedbackUpsertArgsSchema:()=>JPt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Aj,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>jR,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>_W,CustomerFeedbackWhereInputSchema:()=>ca,CustomerFeedbackWhereUniqueInputSchema:()=>q,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>d,DateTimeNullableFilterSchema:()=>Gt,DateTimeNullableWithAggregatesFilterSchema:()=>Dr,DateTimeWithAggregatesFilterSchema:()=>M,DayOfWeekSchema:()=>pe,DietaryRestrictionAggregateArgsSchema:()=>uht,DietaryRestrictionArgsSchema:()=>MQ,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>jet,DietaryRestrictionCountOrderByAggregateInputSchema:()=>xet,DietaryRestrictionCountOutputTypeArgsSchema:()=>ZQ,DietaryRestrictionCountOutputTypeSelectSchema:()=>uX,DietaryRestrictionCreateArgsSchema:()=>iUt,DietaryRestrictionCreateInputSchema:()=>JY,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>pUt,DietaryRestrictionCreateManyArgsSchema:()=>rUt,DietaryRestrictionCreateManyInputSchema:()=>mP,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>Gz,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Po,DietaryRestrictionCreateNestedOneWithoutIngredientsInputSchema:()=>MI,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>n3,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>hI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>Bh,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>df,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>Ps,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>sy,DietaryRestrictionDeleteArgsSchema:()=>cUt,DietaryRestrictionDeleteManyArgsSchema:()=>dUt,DietaryRestrictionFindFirstArgsSchema:()=>pht,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>cht,DietaryRestrictionFindManyArgsSchema:()=>Jw,DietaryRestrictionFindUniqueArgsSchema:()=>sht,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>dht,DietaryRestrictionGroupByArgsSchema:()=>yht,DietaryRestrictionIncludeSchema:()=>ud,DietaryRestrictionListRelationFilterSchema:()=>zM,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Met,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Zet,DietaryRestrictionNullableScalarRelationFilterSchema:()=>L4,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>_4,DietaryRestrictionOrderByWithAggregationInputSchema:()=>tV,DietaryRestrictionOrderByWithRelationInputSchema:()=>xm,DietaryRestrictionScalarFieldEnumSchema:()=>Tg,DietaryRestrictionScalarWhereInputSchema:()=>Wl,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>JC,DietaryRestrictionSchema:()=>fdt,DietaryRestrictionSelectSchema:()=>yd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>vet,DietaryRestrictionUncheckedCreateInputSchema:()=>KY,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>nm,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Ho,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>zf,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>Us,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>dy,DietaryRestrictionUncheckedUpdateInputSchema:()=>tG,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>eG,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>ost,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Am,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>Tyt,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>qn,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>bE,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>IK,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>lJ,DietaryRestrictionUpdateArgsSchema:()=>uUt,DietaryRestrictionUpdateInputSchema:()=>XY,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>sUt,DietaryRestrictionUpdateManyArgsSchema:()=>yUt,DietaryRestrictionUpdateManyMutationInputSchema:()=>Bj,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Wj,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>fk,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>dm,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>hn,DietaryRestrictionUpdateOneWithoutIngredientsNestedInputSchema:()=>HI,DietaryRestrictionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>tct,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Uj,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Ok,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>mE,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>hK,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>iJ,DietaryRestrictionUpsertArgsSchema:()=>lUt,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Pj,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>vk,DietaryRestrictionUpsertWithoutIngredientsInputSchema:()=>Xpt,DietaryRestrictionWhereInputSchema:()=>Oe,DietaryRestrictionWhereUniqueInputSchema:()=>it,EarlyAccessAggregateArgsSchema:()=>wIt,EarlyAccessAvgOrderByAggregateInputSchema:()=>Lot,EarlyAccessCountOrderByAggregateInputSchema:()=>Eot,EarlyAccessCreateArgsSchema:()=>zRt,EarlyAccessCreateInputSchema:()=>c1,EarlyAccessCreateManyAndReturnArgsSchema:()=>hRt,EarlyAccessCreateManyArgsSchema:()=>bRt,EarlyAccessCreateManyInputSchema:()=>kP,EarlyAccessDeleteArgsSchema:()=>IRt,EarlyAccessDeleteManyArgsSchema:()=>SRt,EarlyAccessFindFirstArgsSchema:()=>vIt,EarlyAccessFindFirstOrThrowArgsSchema:()=>OIt,EarlyAccessFindManyArgsSchema:()=>fIt,EarlyAccessFindUniqueArgsSchema:()=>BIt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>qIt,EarlyAccessGroupByArgsSchema:()=>NIt,EarlyAccessMaxOrderByAggregateInputSchema:()=>Vot,EarlyAccessMinOrderByAggregateInputSchema:()=>Hot,EarlyAccessOrderByWithAggregationInputSchema:()=>dV,EarlyAccessOrderByWithRelationInputSchema:()=>bb,EarlyAccessScalarFieldEnumSchema:()=>wg,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>uA,EarlyAccessSchema:()=>Ydt,EarlyAccessSelectSchema:()=>Fm,EarlyAccessSumOrderByAggregateInputSchema:()=>Qot,EarlyAccessUncheckedCreateInputSchema:()=>u1,EarlyAccessUncheckedUpdateInputSchema:()=>s1,EarlyAccessUncheckedUpdateManyInputSchema:()=>z1,EarlyAccessUpdateArgsSchema:()=>gRt,EarlyAccessUpdateInputSchema:()=>y1,EarlyAccessUpdateManyAndReturnArgsSchema:()=>ARt,EarlyAccessUpdateManyArgsSchema:()=>CRt,EarlyAccessUpdateManyMutationInputSchema:()=>d1,EarlyAccessUpsertArgsSchema:()=>mRt,EarlyAccessWhereInputSchema:()=>yl,EarlyAccessWhereUniqueInputSchema:()=>Dm,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>dp,EnumChecklistFrequencyFilterSchema:()=>tB,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>Jtt,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>_m,EnumChecklistItemTypeFilterSchema:()=>eB,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>net,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>Bz,EnumChecklistStatusFilterSchema:()=>oB,EnumChecklistStatusWithAggregatesFilterSchema:()=>met,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>mC,EnumConstraintTypeFilterSchema:()=>pB,EnumConstraintTypeWithAggregatesFilterSchema:()=>Sot,EnumCountStatusFieldUpdateOperationsInputSchema:()=>lp,EnumCountStatusFilterSchema:()=>CB,EnumCountStatusWithAggregatesFilterSchema:()=>jat,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>zC,EnumDayOfWeekFilterSchema:()=>rB,EnumDayOfWeekWithAggregatesFilterSchema:()=>bot,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>sp,EnumEquipmentStatusFilterSchema:()=>JN,EnumEquipmentStatusWithAggregatesFilterSchema:()=>vtt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>_r,EnumFeedbackSourceFilterSchema:()=>nB,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Ret,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Lr,EnumFeedbackStatusFilterSchema:()=>aB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>ket,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>ap,EnumInventoryTypeFilterSchema:()=>d4,EnumInventoryTypeWithAggregatesFilterSchema:()=>int,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>sC,EnumMaintenanceTypeFilterSchema:()=>XN,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>Ltt,EnumNutritionSourceNullableFilterSchema:()=>IB,EnumNutritionSourceNullableWithAggregatesFilterSchema:()=>nat,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>rp,EnumOrderStatusFilterSchema:()=>AB,EnumOrderStatusWithAggregatesFilterSchema:()=>Hat,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>yC,EnumPhotoTypeFilterSchema:()=>GN,EnumPhotoTypeWithAggregatesFilterSchema:()=>$X,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>Kn,EnumPrepStatusFilterSchema:()=>RS,EnumPrepStatusWithAggregatesFilterSchema:()=>J4,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>Lm,EnumShiftStatusFilterSchema:()=>SB,EnumShiftStatusWithAggregatesFilterSchema:()=>cit,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>yt,EnumSkillLevelFilterSchema:()=>hB,EnumSkillLevelWithAggregatesFilterSchema:()=>$nt,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>dC,EnumTaskTypeFilterSchema:()=>lB,EnumTaskTypeWithAggregatesFilterSchema:()=>uot,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>Hr,EnumTransactionTypeFilterSchema:()=>gB,EnumTransactionTypeWithAggregatesFilterSchema:()=>Pat,EnumUserRoleFieldUpdateOperationsInputSchema:()=>Zt,EnumUserRoleFilterSchema:()=>zB,EnumUserRoleWithAggregatesFilterSchema:()=>Unt,EquipmentAggregateArgsSchema:()=>ubt,EquipmentArgsSchema:()=>xj,EquipmentAvgOrderByAggregateInputSchema:()=>xtt,EquipmentCountOrderByAggregateInputSchema:()=>ktt,EquipmentCountOutputTypeArgsSchema:()=>UQ,EquipmentCountOutputTypeSelectSchema:()=>lX,EquipmentCreateArgsSchema:()=>ZTt,EquipmentCreateInputSchema:()=>lY,EquipmentCreateManyAndReturnArgsSchema:()=>fTt,EquipmentCreateManyArgsSchema:()=>OTt,EquipmentCreateManyInputSchema:()=>lP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>tO,EquipmentCreateManyRestaurantInputSchema:()=>zH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>Jl,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>hlt,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>OB,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>c6,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>r6,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>nh,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>IZ,EquipmentCreateWithoutRecipesInputSchema:()=>zZ,EquipmentCreateWithoutRestaurantInputSchema:()=>$c,EquipmentDeleteArgsSchema:()=>wTt,EquipmentDeleteManyArgsSchema:()=>FTt,EquipmentFindFirstArgsSchema:()=>pbt,EquipmentFindFirstOrThrowArgsSchema:()=>cbt,EquipmentFindManyArgsSchema:()=>UK,EquipmentFindUniqueArgsSchema:()=>sbt,EquipmentFindUniqueOrThrowArgsSchema:()=>dbt,EquipmentGroupByArgsSchema:()=>ybt,EquipmentIncludeSchema:()=>Hs,EquipmentListRelationFilterSchema:()=>I4,EquipmentMaxOrderByAggregateInputSchema:()=>jtt,EquipmentMinOrderByAggregateInputSchema:()=>Mtt,EquipmentOrderByRelationAggregateInputSchema:()=>pnt,EquipmentOrderByWithAggregationInputSchema:()=>VL,EquipmentOrderByWithRelationInputSchema:()=>Dp,EquipmentScalarFieldEnumSchema:()=>zg,EquipmentScalarRelationFilterSchema:()=>Kj,EquipmentScalarWhereInputSchema:()=>Cp,EquipmentScalarWhereWithAggregatesInputSchema:()=>_C,EquipmentSchema:()=>Wdt,EquipmentSelectSchema:()=>Qs,EquipmentStatusSchema:()=>wt,EquipmentSumOrderByAggregateInputSchema:()=>Ztt,EquipmentUncheckedCreateInputSchema:()=>rY,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ur,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>gZ,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>mZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,EquipmentUncheckedUpdateInputSchema:()=>cY,EquipmentUncheckedUpdateManyInputSchema:()=>uY,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>_ut,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>LD,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>FD,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>L8,EquipmentUpdateArgsSchema:()=>NTt,EquipmentUpdateInputSchema:()=>pY,EquipmentUpdateManyAndReturnArgsSchema:()=>qTt,EquipmentUpdateManyArgsSchema:()=>BTt,EquipmentUpdateManyMutationInputSchema:()=>jN,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>BW,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>Ilt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>NB,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>krt,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>Prt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>NW,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>ED,EquipmentUpdateWithoutRecipesInputSchema:()=>qD,EquipmentUpdateWithoutRestaurantInputSchema:()=>E8,EquipmentUpsertArgsSchema:()=>vTt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>wW,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>Rrt,EquipmentUpsertWithoutRecipesInputSchema:()=>Trt,EquipmentWhereInputSchema:()=>xe,EquipmentWhereUniqueInputSchema:()=>Vt,FeedbackSourceSchema:()=>xt,FeedbackStatusSchema:()=>jt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>W,FloatNullableFilterSchema:()=>tt,FloatNullableListFilterSchema:()=>Rb,FloatNullableWithAggregatesFilterSchema:()=>Gn,FloatWithAggregatesFilterSchema:()=>Tt,FoodCostHistoryAggregateArgsSchema:()=>FAt,FoodCostHistoryArgsSchema:()=>Kzt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>Yit,FoodCostHistoryCountOrderByAggregateInputSchema:()=>Qit,FoodCostHistoryCreateArgsSchema:()=>DMt,FoodCostHistoryCreateInputSchema:()=>D$,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>LMt,FoodCostHistoryCreateManyArgsSchema:()=>EMt,FoodCostHistoryCreateManyInputSchema:()=>eU,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>BO,FoodCostHistoryCreateManyRecipeInputSchema:()=>BH,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>zo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>kh,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>Hu,FoodCostHistoryDeleteArgsSchema:()=>VMt,FoodCostHistoryDeleteManyArgsSchema:()=>GMt,FoodCostHistoryFindFirstArgsSchema:()=>BAt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>qAt,FoodCostHistoryFindManyArgsSchema:()=>_K,FoodCostHistoryFindUniqueArgsSchema:()=>_At,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>EAt,FoodCostHistoryGroupByArgsSchema:()=>DAt,FoodCostHistoryIncludeSchema:()=>Oz,FoodCostHistoryListRelationFilterSchema:()=>x4,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>Git,FoodCostHistoryMinOrderByAggregateInputSchema:()=>$it,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>wnt,FoodCostHistoryOrderByWithAggregationInputSchema:()=>FV,FoodCostHistoryOrderByWithRelationInputSchema:()=>Ub,FoodCostHistoryScalarFieldEnumSchema:()=>cC,FoodCostHistoryScalarWhereInputSchema:()=>Rp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>NA,FoodCostHistorySchema:()=>Azt,FoodCostHistorySelectSchema:()=>fz,FoodCostHistorySumOrderByAggregateInputSchema:()=>Jit,FoodCostHistoryUncheckedCreateInputSchema:()=>_$,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Qu,FoodCostHistoryUncheckedUpdateInputSchema:()=>L$,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>V$,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>dyt,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>xn,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>F7,FoodCostHistoryUpdateArgsSchema:()=>HMt,FoodCostHistoryUpdateInputSchema:()=>E$,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>YMt,FoodCostHistoryUpdateManyArgsSchema:()=>QMt,FoodCostHistoryUpdateManyMutationInputSchema:()=>QN,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>ik,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>rn,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ak,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>q7,FoodCostHistoryUpsertArgsSchema:()=>_Mt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>nk,FoodCostHistoryWhereInputSchema:()=>ka,FoodCostHistoryWhereUniqueInputSchema:()=>We,IngredientAggregateArgsSchema:()=>Zgt,IngredientAllergenAggregateArgsSchema:()=>TIt,IngredientAllergenArgsSchema:()=>_zt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>Oot,IngredientAllergenCountOrderByAggregateInputSchema:()=>vot,IngredientAllergenCreateArgsSchema:()=>$Wt,IngredientAllergenCreateInputSchema:()=>XG,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>kv,IngredientAllergenCreateManyAllergenInputSchema:()=>XV,IngredientAllergenCreateManyAndReturnArgsSchema:()=>XWt,IngredientAllergenCreateManyArgsSchema:()=>KWt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>yf,IngredientAllergenCreateManyIngredientInputSchema:()=>eQ,IngredientAllergenCreateManyInputSchema:()=>WP,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>xlt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>xI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>_b,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>Gh,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Cc,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Oy,IngredientAllergenDeleteArgsSchema:()=>tRt,IngredientAllergenDeleteManyArgsSchema:()=>aRt,IngredientAllergenFindFirstArgsSchema:()=>AIt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>SIt,IngredientAllergenFindManyArgsSchema:()=>Xw,IngredientAllergenFindUniqueArgsSchema:()=>UIt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>WIt,IngredientAllergenGroupByArgsSchema:()=>PIt,IngredientAllergenIncludeSchema:()=>Zd,IngredientAllergenListRelationFilterSchema:()=>iM,IngredientAllergenMaxOrderByAggregateInputSchema:()=>fot,IngredientAllergenMinOrderByAggregateInputSchema:()=>wot,IngredientAllergenOrderByRelationAggregateInputSchema:()=>c4,IngredientAllergenOrderByWithAggregationInputSchema:()=>yV,IngredientAllergenOrderByWithRelationInputSchema:()=>zb,IngredientAllergenScalarFieldEnumSchema:()=>Og,IngredientAllergenScalarWhereInputSchema:()=>gl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>pA,IngredientAllergenSchema:()=>Hdt,IngredientAllergenSelectSchema:()=>vd,IngredientAllergenSumOrderByAggregateInputSchema:()=>Not,IngredientAllergenUncheckedCreateInputSchema:()=>t1,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>jlt,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>NI,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>Ac,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>fy,IngredientAllergenUncheckedUpdateInputSchema:()=>o1,IngredientAllergenUncheckedUpdateManyInputSchema:()=>n1,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>Rut,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Zlt,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Oyt,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>KI,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>z8,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>kJ,IngredientAllergenUpdateArgsSchema:()=>eRt,IngredientAllergenUpdateInputSchema:()=>e1,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>nRt,IngredientAllergenUpdateManyArgsSchema:()=>oRt,IngredientAllergenUpdateManyMutationInputSchema:()=>Fj,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>QU,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>zx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Mlt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>LI,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>HU,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>dx,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>d8,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>RJ,IngredientAllergenUpsertArgsSchema:()=>JWt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>VU,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>sx,IngredientAllergenWhereInputSchema:()=>Ia,IngredientAllergenWhereUniqueInputSchema:()=>ht,IngredientArgsSchema:()=>Kr,IngredientAvgOrderByAggregateInputSchema:()=>Xnt,IngredientCountOrderByAggregateInputSchema:()=>Knt,IngredientCountOutputTypeArgsSchema:()=>VQ,IngredientCountOutputTypeSelectSchema:()=>CX,IngredientCreateArgsSchema:()=>Zkt,IngredientCreateInputSchema:()=>K1,IngredientCreateManyAndReturnArgsSchema:()=>fkt,IngredientCreateManyArgsSchema:()=>Okt,IngredientCreateManyDietaryRestrictionInputEnvelopeSchema:()=>HZ,IngredientCreateManyDietaryRestrictionInputSchema:()=>JV,IngredientCreateManyInputSchema:()=>wP,IngredientCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>yq,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>wF,IngredientCreateNestedOneWithoutIngredientAllergenInputSchema:()=>R2,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>xS,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>$2,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>tF,IngredientCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>P2,IngredientCreateNestedOneWithoutWasteRecordInputSchema:()=>kq,IngredientCreateOrConnectWithoutDietaryRestrictionInputSchema:()=>qb,IngredientCreateOrConnectWithoutIngredientAllergenInputSchema:()=>B6,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>u3,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>T3,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>i3,IngredientCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>h6,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>aI,IngredientCreateOrConnectWithoutWasteRecordInputSchema:()=>U6,IngredientCreateWithoutDietaryRestrictionInputSchema:()=>zc,IngredientCreateWithoutIngredientAllergenInputSchema:()=>xv,IngredientCreateWithoutInventoryItemsInputSchema:()=>kf,IngredientCreateWithoutOrderItemsInputSchema:()=>iw,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>hf,IngredientCreateWithoutSupplierPriceHistoryInputSchema:()=>BZ,IngredientCreateWithoutVendorsInputSchema:()=>Ky,IngredientCreateWithoutWasteRecordInputSchema:()=>ev,IngredientDeleteArgsSchema:()=>wkt,IngredientDeleteManyArgsSchema:()=>Fkt,IngredientFindFirstArgsSchema:()=>jgt,IngredientFindFirstOrThrowArgsSchema:()=>Mgt,IngredientFindManyArgsSchema:()=>eN,IngredientFindUniqueArgsSchema:()=>Ogt,IngredientFindUniqueOrThrowArgsSchema:()=>fgt,IngredientGroupByArgsSchema:()=>vgt,IngredientIncludeSchema:()=>$d,IngredientListRelationFilterSchema:()=>aM,IngredientMaxOrderByAggregateInputSchema:()=>tat,IngredientMinOrderByAggregateInputSchema:()=>eat,IngredientOrderByRelationAggregateInputSchema:()=>i4,IngredientOrderByWithAggregationInputSchema:()=>AV,IngredientOrderByWithRelationInputSchema:()=>vl,IngredientScalarFieldEnumSchema:()=>Lg,IngredientScalarRelationFilterSchema:()=>ep,IngredientScalarWhereInputSchema:()=>Il,IngredientScalarWhereWithAggregatesInputSchema:()=>IA,IngredientSchema:()=>ozt,IngredientSelectSchema:()=>Jd,IngredientSumOrderByAggregateInputSchema:()=>oat,IngredientUncheckedCreateInputSchema:()=>X1,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionInputSchema:()=>zq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>qF,IngredientUncheckedCreateWithoutDietaryRestrictionInputSchema:()=>mc,IngredientUncheckedCreateWithoutIngredientAllergenInputSchema:()=>jv,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>xf,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>lw,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>If,IngredientUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>qZ,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>Xy,IngredientUncheckedCreateWithoutWasteRecordInputSchema:()=>ov,IngredientUncheckedUpdateInputSchema:()=>e9,IngredientUncheckedUpdateManyInputSchema:()=>o9,IngredientUncheckedUpdateManyWithoutDietaryRestrictionInputSchema:()=>Put,IngredientUncheckedUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>Cq,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>Eyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>VF,IngredientUncheckedUpdateWithoutDietaryRestrictionInputSchema:()=>p8,IngredientUncheckedUpdateWithoutIngredientAllergenInputSchema:()=>Y_,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>jE,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>oL,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>CE,IngredientUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>l_,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>HJ,IngredientUncheckedUpdateWithoutWasteRecordInputSchema:()=>S_,IngredientUpdateArgsSchema:()=>Nkt,IngredientUpdateInputSchema:()=>t9,IngredientUpdateManyAndReturnArgsSchema:()=>qkt,IngredientUpdateManyArgsSchema:()=>Bkt,IngredientUpdateManyMutationInputSchema:()=>_j,IngredientUpdateManyWithWhereWithoutDietaryRestrictionInputSchema:()=>BU,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>Dx,IngredientUpdateManyWithoutDietaryRestrictionNestedInputSchema:()=>hq,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>_F,IngredientUpdateOneRequiredWithoutIngredientAllergenNestedInputSchema:()=>x2,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>BS,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>K2,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>nF,IngredientUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>W2,IngredientUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Mq,IngredientUpdateToOneWithWhereWithoutIngredientAllergenInputSchema:()=>Zpt,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>zct,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Fct,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>act,IngredientUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>Lrt,IngredientUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>lpt,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>NU,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>Fx,IngredientUpdateWithoutDietaryRestrictionInputSchema:()=>r8,IngredientUpdateWithoutIngredientAllergenInputSchema:()=>Q_,IngredientUpdateWithoutInventoryItemsInputSchema:()=>xE,IngredientUpdateWithoutOrderItemsInputSchema:()=>eL,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>gE,IngredientUpdateWithoutSupplierPriceHistoryInputSchema:()=>i_,IngredientUpdateWithoutVendorsInputSchema:()=>VJ,IngredientUpdateWithoutWasteRecordInputSchema:()=>A_,IngredientUpsertArgsSchema:()=>vkt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionInputSchema:()=>wU,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>qx,IngredientUpsertWithoutIngredientAllergenInputSchema:()=>Mpt,IngredientUpsertWithoutInventoryItemsInputSchema:()=>dct,IngredientUpsertWithoutOrderItemsInputSchema:()=>qct,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>nct,IngredientUpsertWithoutSupplierPriceHistoryInputSchema:()=>Ert,IngredientUpsertWithoutWasteRecordInputSchema:()=>ipt,IngredientWhereInputSchema:()=>kt,IngredientWhereUniqueInputSchema:()=>G,IntFieldUpdateOperationsInputSchema:()=>n,IntFilterSchema:()=>y,IntNullableFilterSchema:()=>ot,IntNullableListFilterSchema:()=>TI,IntNullableWithAggregatesFilterSchema:()=>ja,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>$It,InventoryArgsSchema:()=>II,InventoryAvgOrderByAggregateInputSchema:()=>ent,InventoryCountOrderByAggregateInputSchema:()=>tnt,InventoryCountOutputTypeArgsSchema:()=>qQ,InventoryCountOutputTypeSelectSchema:()=>mX,InventoryCreateArgsSchema:()=>ZRt,InventoryCreateInputSchema:()=>A1,InventoryCreateManyAndReturnArgsSchema:()=>fRt,InventoryCreateManyArgsSchema:()=>ORt,InventoryCreateManyInputSchema:()=>jP,InventoryCreateNestedOneWithoutItemsInputSchema:()=>kS,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>El,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>gF,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>dF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>c3,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>Hv,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>m3,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>s3,InventoryCreateWithoutItemsInputSchema:()=>Wf,InventoryCreateWithoutRestaurantInputSchema:()=>HS,InventoryCreateWithoutStockCountsInputSchema:()=>Df,InventoryCreateWithoutTransactionsInputSchema:()=>ff,InventoryDeleteArgsSchema:()=>wRt,InventoryDeleteManyArgsSchema:()=>FRt,InventoryFindFirstArgsSchema:()=>QIt,InventoryFindFirstOrThrowArgsSchema:()=>YIt,InventoryFindManyArgsSchema:()=>GIt,InventoryFindUniqueArgsSchema:()=>KIt,InventoryFindUniqueOrThrowArgsSchema:()=>XIt,InventoryGroupByArgsSchema:()=>JIt,InventoryIncludeSchema:()=>Bd,InventoryItemAggregateArgsSchema:()=>$gt,InventoryItemArgsSchema:()=>sS,InventoryItemAvgOrderByAggregateInputSchema:()=>mat,InventoryItemCountOrderByAggregateInputSchema:()=>zat,InventoryItemCountOutputTypeArgsSchema:()=>YQ,InventoryItemCountOutputTypeSelectSchema:()=>SX,InventoryItemCreateArgsSchema:()=>ixt,InventoryItemCreateInputSchema:()=>d9,InventoryItemCreateManyAndReturnArgsSchema:()=>pxt,InventoryItemCreateManyArgsSchema:()=>rxt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>pf,InventoryItemCreateManyIngredientInputSchema:()=>KH,InventoryItemCreateManyInputSchema:()=>qP,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>qv,InventoryItemCreateManyInventoryInputSchema:()=>oH,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>yO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>gH,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>UI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>CM,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Qa,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>H2,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>zF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>Qq,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>Vh,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>Vb,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>ph,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>I3,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>d3,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>f6,InventoryItemCreateWithoutIngredientInputSchema:()=>Wy,InventoryItemCreateWithoutInventoryInputSchema:()=>Wc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>lu,InventoryItemCreateWithoutStockCountsInputSchema:()=>Yf,InventoryItemCreateWithoutTransactionsInputSchema:()=>Nf,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>Sv,InventoryItemDeleteArgsSchema:()=>cxt,InventoryItemDeleteManyArgsSchema:()=>dxt,InventoryItemFindFirstArgsSchema:()=>Ygt,InventoryItemFindFirstOrThrowArgsSchema:()=>Ggt,InventoryItemFindManyArgsSchema:()=>cT,InventoryItemFindUniqueArgsSchema:()=>Kgt,InventoryItemFindUniqueOrThrowArgsSchema:()=>Xgt,InventoryItemGroupByArgsSchema:()=>Jgt,InventoryItemIncludeSchema:()=>oz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>CN,InventoryItemListRelationFilterSchema:()=>gS,InventoryItemMaxOrderByAggregateInputSchema:()=>bat,InventoryItemMinOrderByAggregateInputSchema:()=>hat,InventoryItemOrderByRelationAggregateInputSchema:()=>cB,InventoryItemOrderByWithAggregationInputSchema:()=>PV,InventoryItemOrderByWithRelationInputSchema:()=>yp,InventoryItemScalarFieldEnumSchema:()=>Qg,InventoryItemScalarRelationFilterSchema:()=>IS,InventoryItemScalarWhereInputSchema:()=>fa,InventoryItemScalarWhereWithAggregatesInputSchema:()=>AA,InventoryItemSchema:()=>izt,InventoryItemSelectSchema:()=>nz,InventoryItemSumOrderByAggregateInputSchema:()=>Iat,InventoryItemUncheckedCreateInputSchema:()=>z9,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>vI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>TM,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>yi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>Ry,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Rc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>ru,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>Gf,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>Bf,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>Tv,InventoryItemUncheckedUpdateInputSchema:()=>b9,InventoryItemUncheckedUpdateManyInputSchema:()=>h9,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>jyt,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>YI,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>jut,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>jM,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>Qut,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Gi,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>CJ,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>C8,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>t7,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>HE,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>wE,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>__,InventoryItemUpdateArgsSchema:()=>uxt,InventoryItemUpdateInputSchema:()=>m9,InventoryItemUpdateManyAndReturnArgsSchema:()=>sxt,InventoryItemUpdateManyArgsSchema:()=>yxt,InventoryItemUpdateManyMutationInputSchema:()=>kT,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>ox,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>oW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>XW,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>FI,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>RM,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>Mi,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>Y2,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>hF,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>$q,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>jct,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Cct,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Wpt,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ex,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>eW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>KW,InventoryItemUpdateWithoutIngredientInputSchema:()=>gJ,InventoryItemUpdateWithoutInventoryInputSchema:()=>g8,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>X8,InventoryItemUpdateWithoutStockCountsInputSchema:()=>VE,InventoryItemUpdateWithoutTransactionsInputSchema:()=>fE,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>D_,InventoryItemUpsertArgsSchema:()=>lxt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>tx,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>tW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>JW,InventoryItemUpsertWithoutStockCountsInputSchema:()=>xct,InventoryItemUpsertWithoutTransactionsInputSchema:()=>gct,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Upt,InventoryItemWhereInputSchema:()=>ae,InventoryItemWhereUniqueInputSchema:()=>f,InventoryMaxOrderByAggregateInputSchema:()=>ont,InventoryMinOrderByAggregateInputSchema:()=>nnt,InventoryNullableScalarRelationFilterSchema:()=>b4,InventoryOrderByWithAggregationInputSchema:()=>mV,InventoryOrderByWithRelationInputSchema:()=>Jr,InventoryScalarFieldEnumSchema:()=>Bg,InventoryScalarRelationFilterSchema:()=>WS,InventoryScalarWhereWithAggregatesInputSchema:()=>sA,InventorySchema:()=>$dt,InventorySelectSchema:()=>qd,InventorySumOrderByAggregateInputSchema:()=>ant,InventoryTransactionAggregateArgsSchema:()=>oCt,InventoryTransactionArgsSchema:()=>Hzt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>Cat,InventoryTransactionCountOrderByAggregateInputSchema:()=>gat,InventoryTransactionCreateArgsSchema:()=>zxt,InventoryTransactionCreateInputSchema:()=>I9,InventoryTransactionCreateManyAndReturnArgsSchema:()=>hxt,InventoryTransactionCreateManyArgsSchema:()=>bxt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>UO,InventoryTransactionCreateManyCreatedByInputSchema:()=>vH,InventoryTransactionCreateManyInputSchema:()=>FP,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>Fv,InventoryTransactionCreateManyInventoryInputSchema:()=>nH,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>Zf,InventoryTransactionCreateManyItemInputSchema:()=>aQ,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>ri,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>AM,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>MS,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>Sh,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>Hb,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>Kh,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Ou,InventoryTransactionCreateWithoutInventoryInputSchema:()=>kc,InventoryTransactionCreateWithoutItemInputSchema:()=>Fy,InventoryTransactionDeleteArgsSchema:()=>Ixt,InventoryTransactionDeleteManyArgsSchema:()=>Sxt,InventoryTransactionFindFirstArgsSchema:()=>tCt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>eCt,InventoryTransactionFindManyArgsSchema:()=>uT,InventoryTransactionFindUniqueArgsSchema:()=>aCt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>iCt,InventoryTransactionGroupByArgsSchema:()=>nCt,InventoryTransactionIncludeSchema:()=>az,InventoryTransactionListRelationFilterSchema:()=>CS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>Aat,InventoryTransactionMinOrderByAggregateInputSchema:()=>Sat,InventoryTransactionOrderByRelationAggregateInputSchema:()=>uB,InventoryTransactionOrderByWithAggregationInputSchema:()=>UV,InventoryTransactionOrderByWithRelationInputSchema:()=>gb,InventoryTransactionScalarFieldEnumSchema:()=>Yg,InventoryTransactionScalarWhereInputSchema:()=>wa,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>SA,InventoryTransactionSchema:()=>lzt,InventoryTransactionSelectSchema:()=>iz,InventoryTransactionSumOrderByAggregateInputSchema:()=>Tat,InventoryTransactionUncheckedCreateInputSchema:()=>g9,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ui,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>PM,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>OS,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>fu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>xc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>Dy,InventoryTransactionUncheckedUpdateInputSchema:()=>A9,InventoryTransactionUncheckedUpdateManyInputSchema:()=>S9,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>ryt,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>cl,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Mut,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>MM,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>Nyt,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>ES,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>k7,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>S8,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>OJ,InventoryTransactionUpdateArgsSchema:()=>gxt,InventoryTransactionUpdateInputSchema:()=>C9,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>Axt,InventoryTransactionUpdateManyArgsSchema:()=>Cxt,InventoryTransactionUpdateManyMutationInputSchema:()=>xT,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>DR,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>iW,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>Tx,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>Vi,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>kM,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>FS,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>FR,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>aW,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>Sx,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>R7,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>A8,InventoryTransactionUpdateWithoutItemInputSchema:()=>vJ,InventoryTransactionUpsertArgsSchema:()=>mxt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>qR,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>nW,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>Ax,InventoryTransactionWhereInputSchema:()=>Sa,InventoryTransactionWhereUniqueInputSchema:()=>V,InventoryTypeSchema:()=>ft,InventoryUncheckedCreateInputSchema:()=>S1,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>or,InventoryUncheckedCreateWithoutItemsInputSchema:()=>Rf,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>QS,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>_f,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>wf,InventoryUncheckedUpdateInputSchema:()=>P1,InventoryUncheckedUpdateManyInputSchema:()=>W1,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>xr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>kE,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>aO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>FE,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>OE,InventoryUpdateArgsSchema:()=>NRt,InventoryUpdateInputSchema:()=>T1,InventoryUpdateManyAndReturnArgsSchema:()=>qRt,InventoryUpdateManyArgsSchema:()=>BRt,InventoryUpdateManyMutationInputSchema:()=>U1,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>NS,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>TF,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>bF,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>br,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>sct,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>L6,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Pct,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Ict,InventoryUpdateWithoutItemsInputSchema:()=>RE,InventoryUpdateWithoutRestaurantInputSchema:()=>nO,InventoryUpdateWithoutStockCountsInputSchema:()=>qE,InventoryUpdateWithoutTransactionsInputSchema:()=>vE,InventoryUpsertArgsSchema:()=>vRt,InventoryUpsertWithoutItemsInputSchema:()=>yct,InventoryUpsertWithoutRestaurantInputSchema:()=>E6,InventoryUpsertWithoutStockCountsInputSchema:()=>Tct,InventoryUpsertWithoutTransactionsInputSchema:()=>hct,InventoryWhereInputSchema:()=>Bt,InventoryWhereUniqueInputSchema:()=>Yn,InventoryWithdrawalAggregateArgsSchema:()=>uIt,InventoryWithdrawalArgsSchema:()=>Dzt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>Pot,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>Tot,InventoryWithdrawalCreateArgsSchema:()=>ZWt,InventoryWithdrawalCreateInputSchema:()=>_G,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>fWt,InventoryWithdrawalCreateManyArgsSchema:()=>OWt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>CO,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>kH,InventoryWithdrawalCreateManyInputSchema:()=>PP,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>vf,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>iQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>EO,InventoryWithdrawalCreateManyRecipeInputSchema:()=>EH,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>oi,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>ZS,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>Co,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>hh,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>Xh,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Oh,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>Pu,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>_y,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>ay,InventoryWithdrawalDeleteArgsSchema:()=>wWt,InventoryWithdrawalDeleteManyArgsSchema:()=>FWt,InventoryWithdrawalFindFirstArgsSchema:()=>pIt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>cIt,InventoryWithdrawalFindManyArgsSchema:()=>rT,InventoryWithdrawalFindUniqueArgsSchema:()=>sIt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>dIt,InventoryWithdrawalGroupByArgsSchema:()=>yIt,InventoryWithdrawalIncludeSchema:()=>kd,InventoryWithdrawalListRelationFilterSchema:()=>US,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>Uot,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Wot,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>bB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>cV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>db,InventoryWithdrawalScalarFieldEnumSchema:()=>Zg,InventoryWithdrawalScalarWhereInputSchema:()=>Da,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>lA,InventoryWithdrawalSchema:()=>Ldt,InventoryWithdrawalSelectSchema:()=>xd,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Rot,InventoryWithdrawalUncheckedCreateInputSchema:()=>EG,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ci,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>fS,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>_o,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>Uu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>Ey,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>iy,InventoryWithdrawalUncheckedUpdateInputSchema:()=>VG,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>HG,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>oyt,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>al,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Byt,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>LS,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>gyt,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fn,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>I7,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>wJ,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>K7,InventoryWithdrawalUpdateArgsSchema:()=>NWt,InventoryWithdrawalUpdateInputSchema:()=>LG,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>qWt,InventoryWithdrawalUpdateManyArgsSchema:()=>BWt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>WT,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>WR,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>Wx,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>Tk,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Fi,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>DS,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>dn,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>UR,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>Ux,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Sk,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>h7,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>fJ,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>J7,InventoryWithdrawalUpsertArgsSchema:()=>vWt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>PR,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>Px,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ak,InventoryWithdrawalWhereInputSchema:()=>ha,InventoryWithdrawalWhereUniqueInputSchema:()=>E,LeftoverItemAggregateArgsSchema:()=>Sht,LeftoverItemArgsSchema:()=>fzt,LeftoverItemAvgOrderByAggregateInputSchema:()=>Fet,LeftoverItemCountOrderByAggregateInputSchema:()=>qet,LeftoverItemCreateArgsSchema:()=>TUt,LeftoverItemCreateInputSchema:()=>rG,LeftoverItemCreateManyAndReturnArgsSchema:()=>WUt,LeftoverItemCreateManyArgsSchema:()=>UUt,LeftoverItemCreateManyInputSchema:()=>hP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>Nw,LeftoverItemCreateManyMenuItemInputSchema:()=>IQ,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>zO,LeftoverItemCreateManyRecordedByInputSchema:()=>SH,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>Jv,LeftoverItemCreateManyRestaurantInputSchema:()=>yH,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Qz,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>$a,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>Yl,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>mI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>yh,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>th,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Cs,LeftoverItemCreateWithoutRecordedByInputSchema:()=>su,LeftoverItemCreateWithoutRestaurantInputSchema:()=>Lc,LeftoverItemDeleteArgsSchema:()=>RUt,LeftoverItemDeleteManyArgsSchema:()=>MUt,LeftoverItemFindFirstArgsSchema:()=>Cht,LeftoverItemFindFirstOrThrowArgsSchema:()=>Aht,LeftoverItemFindManyArgsSchema:()=>aT,LeftoverItemFindUniqueArgsSchema:()=>Pht,LeftoverItemFindUniqueOrThrowArgsSchema:()=>Uht,LeftoverItemGroupByArgsSchema:()=>Tht,LeftoverItemIncludeSchema:()=>zd,LeftoverItemListRelationFilterSchema:()=>AS,LeftoverItemMaxOrderByAggregateInputSchema:()=>Det,LeftoverItemMinOrderByAggregateInputSchema:()=>_et,LeftoverItemOrderByRelationAggregateInputSchema:()=>yB,LeftoverItemOrderByWithAggregationInputSchema:()=>oV,LeftoverItemOrderByWithRelationInputSchema:()=>rb,LeftoverItemScalarFieldEnumSchema:()=>Ug,LeftoverItemScalarWhereInputSchema:()=>Na,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>XC,LeftoverItemSchema:()=>Ndt,LeftoverItemSelectSchema:()=>md,LeftoverItemSumOrderByAggregateInputSchema:()=>Eet,LeftoverItemUncheckedCreateInputSchema:()=>pG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>em,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>zi,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>As,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>du,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,LeftoverItemUncheckedUpdateInputSchema:()=>uG,LeftoverItemUncheckedUpdateManyInputSchema:()=>yG,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>tst,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>gm,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>$ut,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Ki,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>qut,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>zK,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>l7,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>B8,LeftoverItemUpdateArgsSchema:()=>kUt,LeftoverItemUpdateInputSchema:()=>cG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>jUt,LeftoverItemUpdateManyArgsSchema:()=>xUt,LeftoverItemUpdateManyMutationInputSchema:()=>TT,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>Cj,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>pR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>xW,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>ym,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>Oi,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>gj,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>rR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>kW,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>dK,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>i7,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>N8,LeftoverItemUpsertArgsSchema:()=>PUt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Ij,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>lR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>RW,LeftoverItemWhereInputSchema:()=>ya,LeftoverItemWhereUniqueInputSchema:()=>F,MaintenanceLogAggregateArgsSchema:()=>Sbt,MaintenanceLogArgsSchema:()=>jzt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Ftt,MaintenanceLogCountOrderByAggregateInputSchema:()=>qtt,MaintenanceLogCreateArgsSchema:()=>$Tt,MaintenanceLogCreateInputSchema:()=>bY,MaintenanceLogCreateManyAndReturnArgsSchema:()=>XTt,MaintenanceLogCreateManyArgsSchema:()=>KTt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>yZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>HV,MaintenanceLogCreateManyInputSchema:()=>pP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>UB,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Zb,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>tc,MaintenanceLogDeleteArgsSchema:()=>tPt,MaintenanceLogDeleteManyArgsSchema:()=>aPt,MaintenanceLogFindFirstArgsSchema:()=>Cbt,MaintenanceLogFindFirstOrThrowArgsSchema:()=>Abt,MaintenanceLogFindManyArgsSchema:()=>WK,MaintenanceLogFindUniqueArgsSchema:()=>Pbt,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>Ubt,MaintenanceLogGroupByArgsSchema:()=>Tbt,MaintenanceLogIncludeSchema:()=>$s,MaintenanceLogListRelationFilterSchema:()=>K$,MaintenanceLogMaxOrderByAggregateInputSchema:()=>Dtt,MaintenanceLogMinOrderByAggregateInputSchema:()=>_tt,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Rtt,MaintenanceLogOrderByWithAggregationInputSchema:()=>QL,MaintenanceLogOrderByWithRelationInputSchema:()=>ob,MaintenanceLogScalarFieldEnumSchema:()=>bg,MaintenanceLogScalarWhereInputSchema:()=>mp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>LC,MaintenanceLogSchema:()=>kdt,MaintenanceLogSelectSchema:()=>Js,MaintenanceLogSumOrderByAggregateInputSchema:()=>Ett,MaintenanceLogUncheckedCreateInputSchema:()=>hY,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>RB,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>ec,MaintenanceLogUncheckedUpdateInputSchema:()=>gY,MaintenanceLogUncheckedUpdateManyInputSchema:()=>CY,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>hut,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>ZB,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>Y3,MaintenanceLogUpdateArgsSchema:()=>ePt,MaintenanceLogUpdateInputSchema:()=>IY,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>nPt,MaintenanceLogUpdateManyArgsSchema:()=>oPt,MaintenanceLogUpdateManyMutationInputSchema:()=>MN,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>hU,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>jB,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>bU,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>Q3,MaintenanceLogUpsertArgsSchema:()=>JTt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>mU,MaintenanceLogWhereInputSchema:()=>la,MaintenanceLogWhereUniqueInputSchema:()=>Ie,MaintenanceTypeSchema:()=>le,MenuAggregateArgsSchema:()=>mAt,MenuArgsSchema:()=>vj,MenuAvgOrderByAggregateInputSchema:()=>Rit,MenuCategoryAggregateArgsSchema:()=>Kmt,MenuCategoryArgsSchema:()=>SQ,MenuCategoryAvgOrderByAggregateInputSchema:()=>Itt,MenuCategoryCountOrderByAggregateInputSchema:()=>htt,MenuCategoryCountOutputTypeArgsSchema:()=>TQ,MenuCategoryCountOutputTypeSelectSchema:()=>aX,MenuCategoryCreateArgsSchema:()=>zTt,MenuCategoryCreateInputSchema:()=>$0,MenuCategoryCreateManyAndReturnArgsSchema:()=>hTt,MenuCategoryCreateManyArgsSchema:()=>bTt,MenuCategoryCreateManyInputSchema:()=>aP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>Pw,MenuCategoryCreateManyMenuInputSchema:()=>zQ,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>eD,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>Dz,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>uI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>v3,MenuCategoryCreateWithoutMenuInputSchema:()=>us,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>Mw,MenuCategoryDeleteArgsSchema:()=>ITt,MenuCategoryDeleteManyArgsSchema:()=>STt,MenuCategoryFindFirstArgsSchema:()=>$mt,MenuCategoryFindFirstOrThrowArgsSchema:()=>Jmt,MenuCategoryFindManyArgsSchema:()=>PK,MenuCategoryFindUniqueArgsSchema:()=>tbt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>ebt,MenuCategoryGroupByArgsSchema:()=>Xmt,MenuCategoryIncludeSchema:()=>_s,MenuCategoryListRelationFilterSchema:()=>X4,MenuCategoryMaxOrderByAggregateInputSchema:()=>gtt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>mN,MenuCategoryMinOrderByAggregateInputSchema:()=>Ctt,MenuCategoryNullableScalarRelationFilterSchema:()=>t2,MenuCategoryOrderByRelationAggregateInputSchema:()=>Uit,MenuCategoryOrderByWithAggregationInputSchema:()=>EL,MenuCategoryOrderByWithRelationInputSchema:()=>Wm,MenuCategoryScalarFieldEnumSchema:()=>sg,MenuCategoryScalarWhereInputSchema:()=>Bp,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>FC,MenuCategorySchema:()=>Pdt,MenuCategorySelectSchema:()=>Es,MenuCategorySumOrderByAggregateInputSchema:()=>Att,MenuCategoryUncheckedCreateInputSchema:()=>J0,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>nD,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>ys,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>Zw,MenuCategoryUncheckedUpdateInputSchema:()=>X0,MenuCategoryUncheckedUpdateManyInputSchema:()=>tY,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>Gyt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>pD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>aK,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>SL,MenuCategoryUpdateArgsSchema:()=>gTt,MenuCategoryUpdateInputSchema:()=>K0,MenuCategoryUpdateManyAndReturnArgsSchema:()=>ATt,MenuCategoryUpdateManyArgsSchema:()=>CTt,MenuCategoryUpdateManyMutationInputSchema:()=>xN,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>ij,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>lD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>im,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>lut,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>aj,MenuCategoryUpdateWithoutMenuInputSchema:()=>nK,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>AL,MenuCategoryUpsertArgsSchema:()=>mTt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>nj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>iut,MenuCategoryWhereInputSchema:()=>ve,MenuCategoryWhereUniqueInputSchema:()=>Kt,MenuCountOrderByAggregateInputSchema:()=>Wit,MenuCountOutputTypeArgsSchema:()=>i0,MenuCountOutputTypeSelectSchema:()=>kX,MenuCreateArgsSchema:()=>iMt,MenuCreateInputSchema:()=>C$,MenuCreateManyAndReturnArgsSchema:()=>pMt,MenuCreateManyArgsSchema:()=>rMt,MenuCreateManyInputSchema:()=>JP,MenuCreateManyRestaurantInputEnvelopeSchema:()=>Gv,MenuCreateManyRestaurantInputSchema:()=>cH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>Hl,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>r2,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>Fz,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>e6,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>Z3,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>Kb,MenuCreateWithoutMenuCategoryInputSchema:()=>JM,MenuCreateWithoutMenuItemsInputSchema:()=>xw,MenuCreateWithoutRestaurantInputSchema:()=>Fc,MenuDeleteArgsSchema:()=>cMt,MenuDeleteManyArgsSchema:()=>dMt,MenuFindFirstArgsSchema:()=>dAt,MenuFindFirstOrThrowArgsSchema:()=>zAt,MenuFindManyArgsSchema:()=>DK,MenuFindUniqueArgsSchema:()=>hAt,MenuFindUniqueOrThrowArgsSchema:()=>IAt,MenuGroupByArgsSchema:()=>bAt,MenuIncludeSchema:()=>Wz,MenuItemAggregateArgsSchema:()=>RAt,MenuItemArgsSchema:()=>Xr,MenuItemAvgOrderByAggregateInputSchema:()=>Bit,MenuItemCountOrderByAggregateInputSchema:()=>Nit,MenuItemCountOutputTypeArgsSchema:()=>l0,MenuItemCountOutputTypeSelectSchema:()=>xX,MenuItemCreateArgsSchema:()=>TMt,MenuItemCreateInputSchema:()=>j$,MenuItemCreateManyAndReturnArgsSchema:()=>WMt,MenuItemCreateManyArgsSchema:()=>UMt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>XM,MenuItemCreateManyCategoryInputSchema:()=>_V,MenuItemCreateManyInputSchema:()=>XP,MenuItemCreateManyMenuInputEnvelopeSchema:()=>Tw,MenuItemCreateManyMenuInputSchema:()=>dQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>p2,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>cq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>tD,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>so,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>aq,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>Sq,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>d5,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Dlt,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>vlt,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>a2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>kb,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Nb,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>g6,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>S6,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>cI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>j3,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>w3,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>Rh,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>F6,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>t6,MenuItemCreateWithoutCategoryInputSchema:()=>Hp,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>uc,MenuItemCreateWithoutFeedbackInputSchema:()=>_Z,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>GZ,MenuItemCreateWithoutMenuInputSchema:()=>ps,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>Uw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>Dw,MenuItemCreateWithoutRecipesInputSchema:()=>Lu,MenuItemCreateWithoutRecommendationsInputSchema:()=>vv,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>GM,MenuItemCreateallergensInputSchema:()=>lo,MenuItemCreaterecipeIdsInputSchema:()=>no,MenuItemCreaterecipeServingsAmountInputSchema:()=>ao,MenuItemCreaterecipeServingsCostInputSchema:()=>io,MenuItemDeleteArgsSchema:()=>RMt,MenuItemDeleteManyArgsSchema:()=>MMt,MenuItemFindFirstArgsSchema:()=>UAt,MenuItemFindFirstOrThrowArgsSchema:()=>WAt,MenuItemFindManyArgsSchema:()=>tg,MenuItemFindUniqueArgsSchema:()=>xAt,MenuItemFindUniqueOrThrowArgsSchema:()=>jAt,MenuItemGroupByArgsSchema:()=>kAt,MenuItemIncludeSchema:()=>jz,MenuItemListRelationFilterSchema:()=>AI,MenuItemMaxOrderByAggregateInputSchema:()=>qit,MenuItemMinOrderByAggregateInputSchema:()=>Fit,MenuItemNullableScalarRelationFilterSchema:()=>nM,MenuItemOrderByRelationAggregateInputSchema:()=>$j,MenuItemOrderByWithAggregationInputSchema:()=>BV,MenuItemOrderByWithRelationInputSchema:()=>Ol,MenuItemRecipeAggregateArgsSchema:()=>AAt,MenuItemRecipeArgsSchema:()=>Jzt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Zit,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Mit,MenuItemRecipeCreateArgsSchema:()=>zMt,MenuItemRecipeCreateInputSchema:()=>U$,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>hMt,MenuItemRecipeCreateManyArgsSchema:()=>bMt,MenuItemRecipeCreateManyInputSchema:()=>KP,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>vw,MenuItemRecipeCreateManyMenuItemInputSchema:()=>mQ,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>DO,MenuItemRecipeCreateManyRecipeInputSchema:()=>DH,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Ez,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Io,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>sI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>Zh,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>zs,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>ty,MenuItemRecipeDeleteArgsSchema:()=>IMt,MenuItemRecipeDeleteManyArgsSchema:()=>SMt,MenuItemRecipeFindFirstArgsSchema:()=>gAt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>CAt,MenuItemRecipeFindManyArgsSchema:()=>rN,MenuItemRecipeFindUniqueArgsSchema:()=>TAt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>PAt,MenuItemRecipeGroupByArgsSchema:()=>SAt,MenuItemRecipeIncludeSchema:()=>kz,MenuItemRecipeListRelationFilterSchema:()=>dM,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>vit,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>SN,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Oit,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>D4,MenuItemRecipeOrderByWithAggregationInputSchema:()=>NV,MenuItemRecipeOrderByWithRelationInputSchema:()=>Pb,MenuItemRecipeScalarFieldEnumSchema:()=>lC,MenuItemRecipeScalarWhereInputSchema:()=>Ul,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>OA,MenuItemRecipeSchema:()=>Izt,MenuItemRecipeSelectSchema:()=>xz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>fit,MenuItemRecipeUncheckedCreateInputSchema:()=>W$,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Jz,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Fo,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>ms,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>ey,MenuItemRecipeUncheckedUpdateInputSchema:()=>k$,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>x$,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Jyt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>mm,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>hyt,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>vn,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>pK,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>Y7,MenuItemRecipeUpdateArgsSchema:()=>gMt,MenuItemRecipeUpdateInputSchema:()=>R$,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>AMt,MenuItemRecipeUpdateManyArgsSchema:()=>CMt,MenuItemRecipeUpdateManyMutationInputSchema:()=>Yj,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>yj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>hk,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>rm,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>yn,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>uj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>bk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>rK,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>Q7,MenuItemRecipeUpsertArgsSchema:()=>mMt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>cj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>mk,MenuItemRecipeWhereInputSchema:()=>Ra,MenuItemRecipeWhereUniqueInputSchema:()=>Ct,MenuItemScalarFieldEnumSchema:()=>rC,MenuItemScalarRelationFilterSchema:()=>CI,MenuItemScalarWhereInputSchema:()=>oo,MenuItemScalarWhereWithAggregatesInputSchema:()=>fA,MenuItemSchema:()=>gzt,MenuItemSelectSchema:()=>Mz,MenuItemSumOrderByAggregateInputSchema:()=>Dit,MenuItemUncheckedCreateInputSchema:()=>M$,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>c2,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>sq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>oD,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>fo,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Qp,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>yc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>EZ,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>$Z,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>cs,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Ww,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>_w,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Vu,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>Ov,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>$M,MenuItemUncheckedUpdateInputSchema:()=>v$,MenuItemUncheckedUpdateManyInputSchema:()=>O$,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>dut,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>s2,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Sut,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Iq,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>Yyt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>rD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>syt,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>kn,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>F3,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>a8,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>u_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>b_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>oK,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>bL,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>PL,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>B7,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>K_,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>WD,MenuItemUpdateArgsSchema:()=>kMt,MenuItemUpdateInputSchema:()=>Z$,MenuItemUpdateManyAndReturnArgsSchema:()=>jMt,MenuItemUpdateManyArgsSchema:()=>xMt,MenuItemUpdateManyMutationInputSchema:()=>dS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>iU,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>ZU,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>oj,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>ok,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>y2,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>mq,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>iD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>ln,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>Uq,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>m5,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Olt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>l2,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>rq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>_lt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>Yrt,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>tpt,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>tut,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>put,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>wpt,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>urt,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>aU,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>MU,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>ej,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>ek,MenuItemUpdateWithoutCategoryInputSchema:()=>q3,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>n8,MenuItemUpdateWithoutFeedbackInputSchema:()=>c_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>m_,MenuItemUpdateWithoutMenuInputSchema:()=>eK,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>mL,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>TL,MenuItemUpdateWithoutRecipesInputSchema:()=>N7,MenuItemUpdateWithoutRecommendationsInputSchema:()=>J_,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>UD,MenuItemUpdateallergensInputSchema:()=>Le,MenuItemUpdaterecipeIdsInputSchema:()=>De,MenuItemUpdaterecipeServingsAmountInputSchema:()=>_e,MenuItemUpdaterecipeServingsCostInputSchema:()=>Ee,MenuItemUpsertArgsSchema:()=>PMt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>nU,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>jU,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>tj,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>tk,MenuItemUpsertWithoutFeedbackInputSchema:()=>Qrt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>Xrt,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>Xct,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>rut,MenuItemUpsertWithoutRecommendationsInputSchema:()=>fpt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>crt,MenuItemWhereInputSchema:()=>At,MenuItemWhereUniqueInputSchema:()=>k,MenuListRelationFilterSchema:()=>h4,MenuMaxOrderByAggregateInputSchema:()=>kit,MenuMinOrderByAggregateInputSchema:()=>xit,MenuOrderByRelationAggregateInputSchema:()=>rnt,MenuOrderByWithAggregationInputSchema:()=>wV,MenuOrderByWithRelationInputSchema:()=>Vp,MenuScalarFieldEnumSchema:()=>iC,MenuScalarRelationFilterSchema:()=>Gj,MenuScalarWhereInputSchema:()=>gp,MenuScalarWhereWithAggregatesInputSchema:()=>vA,MenuSchema:()=>hzt,MenuSelectSchema:()=>Rz,MenuSumOrderByAggregateInputSchema:()=>jit,MenuUncheckedCreateInputSchema:()=>A$,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ir,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>KM,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>jw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,MenuUncheckedUpdateInputSchema:()=>T$,MenuUncheckedUpdateManyInputSchema:()=>P$,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Nut,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Zr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>kD,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>CL,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>O8,MenuUpdateArgsSchema:()=>uMt,MenuUpdateInputSchema:()=>S$,MenuUpdateManyAndReturnArgsSchema:()=>sMt,MenuUpdateManyArgsSchema:()=>yMt,MenuUpdateManyMutationInputSchema:()=>HN,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>TW,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>gr,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>u2,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>am,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>srt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>aut,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>SW,MenuUpdateWithoutMenuCategoryInputSchema:()=>RD,MenuUpdateWithoutMenuItemsInputSchema:()=>gL,MenuUpdateWithoutRestaurantInputSchema:()=>v8,MenuUpsertArgsSchema:()=>lMt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>AW,MenuUpsertWithoutMenuCategoryInputSchema:()=>yrt,MenuUpsertWithoutMenuItemsInputSchema:()=>nut,MenuWhereInputSchema:()=>Ze,MenuWhereUniqueInputSchema:()=>Yt,NestedBoolFilterSchema:()=>LA,NestedBoolWithAggregatesFilterSchema:()=>U5,NestedDateTimeFilterSchema:()=>_A,NestedDateTimeNullableFilterSchema:()=>VA,NestedDateTimeNullableWithAggregatesFilterSchema:()=>W5,NestedDateTimeWithAggregatesFilterSchema:()=>S5,NestedEnumChecklistFrequencyFilterSchema:()=>YA,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>x5,NestedEnumChecklistItemTypeFilterSchema:()=>GA,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>j5,NestedEnumChecklistStatusFilterSchema:()=>$A,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>M5,NestedEnumConstraintTypeFilterSchema:()=>eS,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>w5,NestedEnumCountStatusFilterSchema:()=>rS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>_5,NestedEnumDayOfWeekFilterSchema:()=>tS,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>f5,NestedEnumEquipmentStatusFilterSchema:()=>HA,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>R5,NestedEnumFeedbackSourceFilterSchema:()=>JA,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>Z5,NestedEnumFeedbackStatusFilterSchema:()=>KA,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>v5,NestedEnumInventoryTypeFilterSchema:()=>oS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>N5,NestedEnumMaintenanceTypeFilterSchema:()=>QA,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>k5,NestedEnumNutritionSourceNullableFilterSchema:()=>iS,NestedEnumNutritionSourceNullableWithAggregatesFilterSchema:()=>F5,NestedEnumOrderStatusFilterSchema:()=>pS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>E5,NestedEnumPhotoTypeFilterSchema:()=>EA,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>T5,NestedEnumPrepStatusFilterSchema:()=>uS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>V5,NestedEnumShiftStatusFilterSchema:()=>cS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>L5,NestedEnumSkillLevelFilterSchema:()=>aS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>q5,NestedEnumTaskTypeFilterSchema:()=>XA,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>O5,NestedEnumTransactionTypeFilterSchema:()=>lS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>D5,NestedEnumUserRoleFilterSchema:()=>nS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>B5,NestedFloatFilterSchema:()=>Gr,NestedFloatNullableFilterSchema:()=>$r,NestedFloatNullableWithAggregatesFilterSchema:()=>C5,NestedFloatWithAggregatesFilterSchema:()=>I5,NestedIntFilterSchema:()=>dt,NestedIntNullableFilterSchema:()=>sl,NestedIntNullableWithAggregatesFilterSchema:()=>P5,NestedIntWithAggregatesFilterSchema:()=>h5,NestedStringFilterSchema:()=>FA,NestedStringNullableFilterSchema:()=>DA,NestedStringNullableWithAggregatesFilterSchema:()=>A5,NestedStringWithAggregatesFilterSchema:()=>g5,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableEnumNutritionSourceFieldUpdateOperationsInputSchema:()=>Jn,NullableFloatFieldUpdateOperationsInputSchema:()=>u,NullableIntFieldUpdateOperationsInputSchema:()=>b,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>nX,NutritionSourceSchema:()=>et,NutritionalInfoAggregateArgsSchema:()=>OAt,NutritionalInfoArgsSchema:()=>r0,NutritionalInfoAvgOrderByAggregateInputSchema:()=>Eit,NutritionalInfoCountOrderByAggregateInputSchema:()=>_it,NutritionalInfoCreateArgsSchema:()=>ZMt,NutritionalInfoCreateInputSchema:()=>f$,NutritionalInfoCreateManyAndReturnArgsSchema:()=>fMt,NutritionalInfoCreateManyArgsSchema:()=>OMt,NutritionalInfoCreateManyInputSchema:()=>tU,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>Lz,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>Ow,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>tT,NutritionalInfoDeleteArgsSchema:()=>wMt,NutritionalInfoDeleteManyArgsSchema:()=>FMt,NutritionalInfoFindFirstArgsSchema:()=>MAt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>ZAt,NutritionalInfoFindManyArgsSchema:()=>vAt,NutritionalInfoFindUniqueArgsSchema:()=>wAt,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>NAt,NutritionalInfoGroupByArgsSchema:()=>fAt,NutritionalInfoIncludeSchema:()=>Zz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>Lit,NutritionalInfoMinOrderByAggregateInputSchema:()=>Vit,NutritionalInfoNullableScalarRelationFilterSchema:()=>e2,NutritionalInfoOrderByWithAggregationInputSchema:()=>qV,NutritionalInfoOrderByWithRelationInputSchema:()=>qm,NutritionalInfoScalarFieldEnumSchema:()=>pC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>wA,NutritionalInfoSchema:()=>Czt,NutritionalInfoSelectSchema:()=>vz,NutritionalInfoSumOrderByAggregateInputSchema:()=>Hit,NutritionalInfoUncheckedCreateInputSchema:()=>w$,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>Kz,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>eT,NutritionalInfoUncheckedUpdateInputSchema:()=>B$,NutritionalInfoUncheckedUpdateManyInputSchema:()=>F$,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>bm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>Fw,NutritionalInfoUpdateArgsSchema:()=>NMt,NutritionalInfoUpdateInputSchema:()=>N$,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>qMt,NutritionalInfoUpdateManyArgsSchema:()=>BMt,NutritionalInfoUpdateManyMutationInputSchema:()=>q$,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>pm,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>f3,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>qw,NutritionalInfoUpsertArgsSchema:()=>vMt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>O3,NutritionalInfoWhereInputSchema:()=>qe,NutritionalInfoWhereUniqueInputSchema:()=>ql,NutritionalRecommendationAggregateArgsSchema:()=>xIt,NutritionalRecommendationArgsSchema:()=>Ezt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>qot,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>Bot,NutritionalRecommendationCreateArgsSchema:()=>iRt,NutritionalRecommendationCreateInputSchema:()=>a1,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>pRt,NutritionalRecommendationCreateManyArgsSchema:()=>rRt,NutritionalRecommendationCreateManyInputSchema:()=>RP,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>fw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>bQ,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Vz,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>dI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>bs,NutritionalRecommendationDeleteArgsSchema:()=>cRt,NutritionalRecommendationDeleteManyArgsSchema:()=>dRt,NutritionalRecommendationFindFirstArgsSchema:()=>RIt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>kIt,NutritionalRecommendationFindManyArgsSchema:()=>vK,NutritionalRecommendationFindUniqueArgsSchema:()=>MIt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>ZIt,NutritionalRecommendationGroupByArgsSchema:()=>jIt,NutritionalRecommendationIncludeSchema:()=>Od,NutritionalRecommendationListRelationFilterSchema:()=>o2,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>Fot,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>Dot,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>wit,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>sV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>mb,NutritionalRecommendationScalarFieldEnumSchema:()=>fg,NutritionalRecommendationScalarWhereInputSchema:()=>qp,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>cA,NutritionalRecommendationSchema:()=>Qdt,NutritionalRecommendationSelectSchema:()=>fd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>_ot,NutritionalRecommendationUncheckedCreateInputSchema:()=>i1,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>Xz,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>hs,NutritionalRecommendationUncheckedUpdateInputSchema:()=>r1,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>p1,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Kyt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>hm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>uK,NutritionalRecommendationUpdateArgsSchema:()=>uRt,NutritionalRecommendationUpdateInputSchema:()=>l1,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>sRt,NutritionalRecommendationUpdateManyArgsSchema:()=>yRt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>BN,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>zj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>cm,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>dj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>cK,NutritionalRecommendationUpsertArgsSchema:()=>lRt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>sj,NutritionalRecommendationWhereInputSchema:()=>ga,NutritionalRecommendationWhereUniqueInputSchema:()=>Te,OrderAggregateArgsSchema:()=>RCt,OrderArgsSchema:()=>KQ,OrderAvgOrderByAggregateInputSchema:()=>_at,OrderCountOrderByAggregateInputSchema:()=>Dat,OrderCountOutputTypeArgsSchema:()=>XQ,OrderCountOutputTypeSelectSchema:()=>PX,OrderCreateArgsSchema:()=>$xt,OrderCreateInputSchema:()=>q9,OrderCreateManyAndReturnArgsSchema:()=>Xxt,OrderCreateManyArgsSchema:()=>Kxt,OrderCreateManyInputSchema:()=>LP,OrderCreateManyRestaurantInputEnvelopeSchema:()=>Qv,OrderCreateManyRestaurantInputSchema:()=>rH,OrderCreateManyVendorInputEnvelopeSchema:()=>rw,OrderCreateManyVendorInputSchema:()=>cQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>Ll,OrderCreateNestedManyWithoutVendorInputSchema:()=>fF,OrderCreateNestedOneWithoutItemsInputSchema:()=>G2,OrderCreateOrConnectWithoutItemsInputSchema:()=>S3,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>$b,OrderCreateOrConnectWithoutVendorInputSchema:()=>nI,OrderCreateWithoutItemsInputSchema:()=>nw,OrderCreateWithoutRestaurantInputSchema:()=>wc,OrderCreateWithoutVendorInputSchema:()=>$y,OrderDeleteArgsSchema:()=>tjt,OrderDeleteManyArgsSchema:()=>ajt,OrderFindFirstArgsSchema:()=>UCt,OrderFindFirstOrThrowArgsSchema:()=>WCt,OrderFindManyArgsSchema:()=>iN,OrderFindUniqueArgsSchema:()=>xCt,OrderFindUniqueOrThrowArgsSchema:()=>jCt,OrderGroupByArgsSchema:()=>kCt,OrderIncludeSchema:()=>sz,OrderItemAggregateArgsSchema:()=>vCt,OrderItemArgsSchema:()=>Yzt,OrderItemAvgOrderByAggregateInputSchema:()=>Yat,OrderItemCountOrderByAggregateInputSchema:()=>Qat,OrderItemCreateArgsSchema:()=>ijt,OrderItemCreateInputSchema:()=>L9,OrderItemCreateManyAndReturnArgsSchema:()=>pjt,OrderItemCreateManyArgsSchema:()=>rjt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>cf,OrderItemCreateManyIngredientInputSchema:()=>XH,OrderItemCreateManyInputSchema:()=>VP,OrderItemCreateManyOrderInputEnvelopeSchema:()=>ow,OrderItemCreateManyOrderInputSchema:()=>pQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>WI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>xF,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>Hh,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>oI,OrderItemCreateWithoutIngredientInputSchema:()=>ky,OrderItemCreateWithoutOrderInputSchema:()=>Yy,OrderItemDeleteArgsSchema:()=>cjt,OrderItemDeleteManyArgsSchema:()=>djt,OrderItemFindFirstArgsSchema:()=>MCt,OrderItemFindFirstOrThrowArgsSchema:()=>ZCt,OrderItemFindManyArgsSchema:()=>lN,OrderItemFindUniqueArgsSchema:()=>fCt,OrderItemFindUniqueOrThrowArgsSchema:()=>wCt,OrderItemGroupByArgsSchema:()=>OCt,OrderItemIncludeSchema:()=>zz,OrderItemListRelationFilterSchema:()=>mM,OrderItemMaxOrderByAggregateInputSchema:()=>Gat,OrderItemMinOrderByAggregateInputSchema:()=>$at,OrderItemOrderByRelationAggregateInputSchema:()=>V4,OrderItemOrderByWithAggregationInputSchema:()=>jV,OrderItemOrderByWithRelationInputSchema:()=>Ab,OrderItemScalarFieldEnumSchema:()=>Xg,OrderItemScalarWhereInputSchema:()=>Rl,OrderItemScalarWhereWithAggregatesInputSchema:()=>RA,OrderItemSchema:()=>yzt,OrderItemSelectSchema:()=>mz,OrderItemSumOrderByAggregateInputSchema:()=>Jat,OrderItemUncheckedCreateInputSchema:()=>V9,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>OI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>jF,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>xy,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>Gy,OrderItemUncheckedUpdateInputSchema:()=>Q9,OrderItemUncheckedUpdateManyInputSchema:()=>Y9,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Myt,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>GI,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>Dyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>OF,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>SJ,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>_J,OrderItemUpdateArgsSchema:()=>ujt,OrderItemUpdateInputSchema:()=>H9,OrderItemUpdateManyAndReturnArgsSchema:()=>sjt,OrderItemUpdateManyArgsSchema:()=>yjt,OrderItemUpdateManyMutationInputSchema:()=>Qj,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>ix,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>fx,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>DI,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>vF,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>ax,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Ox,OrderItemUpdateWithoutIngredientInputSchema:()=>AJ,OrderItemUpdateWithoutOrderInputSchema:()=>DJ,OrderItemUpsertArgsSchema:()=>ljt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>nx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>vx,OrderItemWhereInputSchema:()=>Pa,OrderItemWhereUniqueInputSchema:()=>gt,OrderListRelationFilterSchema:()=>cM,OrderMaxOrderByAggregateInputSchema:()=>Eat,OrderMinOrderByAggregateInputSchema:()=>Lat,OrderOrderByRelationAggregateInputSchema:()=>C4,OrderOrderByWithAggregationInputSchema:()=>xV,OrderOrderByWithRelationInputSchema:()=>wm,OrderScalarFieldEnumSchema:()=>Kg,OrderScalarRelationFilterSchema:()=>G4,OrderScalarWhereInputSchema:()=>Sl,OrderScalarWhereWithAggregatesInputSchema:()=>WA,OrderSchema:()=>uzt,OrderSelectSchema:()=>dz,OrderStatusSchema:()=>Ot,OrderSumOrderByAggregateInputSchema:()=>Vat,OrderUncheckedCreateInputSchema:()=>F9,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>BF,OrderUncheckedCreateWithoutItemsInputSchema:()=>aw,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,OrderUncheckedCreateWithoutVendorInputSchema:()=>Jy,OrderUncheckedUpdateInputSchema:()=>_9,OrderUncheckedUpdateManyInputSchema:()=>E9,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>fut,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>_yt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>LF,OrderUncheckedUpdateWithoutItemsInputSchema:()=>tL,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>j8,OrderUncheckedUpdateWithoutVendorInputSchema:()=>LJ,OrderUpdateArgsSchema:()=>ejt,OrderUpdateInputSchema:()=>D9,OrderUpdateManyAndReturnArgsSchema:()=>njt,OrderUpdateManyArgsSchema:()=>ojt,OrderUpdateManyMutationInputSchema:()=>Hj,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>hW,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>Bx,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>hr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>DF,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>J2,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Bct,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>bW,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Nx,OrderUpdateWithoutItemsInputSchema:()=>XE,OrderUpdateWithoutRestaurantInputSchema:()=>x8,OrderUpdateWithoutVendorInputSchema:()=>EJ,OrderUpsertArgsSchema:()=>Jxt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>mW,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>wx,OrderUpsertWithoutItemsInputSchema:()=>Nct,OrderWhereInputSchema:()=>$e,OrderWhereUniqueInputSchema:()=>ct,OrganizationAggregateArgsSchema:()=>EIt,OrganizationArgsSchema:()=>Mj,OrganizationAvgOrderByAggregateInputSchema:()=>$ot,OrganizationCountOrderByAggregateInputSchema:()=>Got,OrganizationCountOutputTypeArgsSchema:()=>BQ,OrganizationCountOutputTypeSelectSchema:()=>zX,OrganizationCreateArgsSchema:()=>TRt,OrganizationCreateInputSchema:()=>m1,OrganizationCreateManyAndReturnArgsSchema:()=>WRt,OrganizationCreateManyArgsSchema:()=>URt,OrganizationCreateManyInputSchema:()=>xP,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>Fl,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Ea,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>_6,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>V6,OrganizationCreateWithoutRestaurantsInputSchema:()=>_v,OrganizationCreateWithoutUsersInputSchema:()=>iO,OrganizationDeleteArgsSchema:()=>RRt,OrganizationDeleteManyArgsSchema:()=>MRt,OrganizationFindFirstArgsSchema:()=>FIt,OrganizationFindFirstOrThrowArgsSchema:()=>DIt,OrganizationFindManyArgsSchema:()=>_It,OrganizationFindUniqueArgsSchema:()=>VIt,OrganizationFindUniqueOrThrowArgsSchema:()=>HIt,OrganizationGroupByArgsSchema:()=>LIt,OrganizationIncludeSchema:()=>wd,OrganizationMaxOrderByAggregateInputSchema:()=>Jot,OrganizationMinOrderByAggregateInputSchema:()=>Kot,OrganizationNullableScalarRelationFilterSchema:()=>pM,OrganizationOrderByWithAggregationInputSchema:()=>zV,OrganizationOrderByWithRelationInputSchema:()=>Ep,OrganizationScalarFieldEnumSchema:()=>Ng,OrganizationScalarWhereWithAggregatesInputSchema:()=>yA,OrganizationSchema:()=>Gdt,OrganizationSelectSchema:()=>Nd,OrganizationSumOrderByAggregateInputSchema:()=>Xot,OrganizationUncheckedCreateInputSchema:()=>b1,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>Ev,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>lO,OrganizationUncheckedUpdateInputSchema:()=>I1,OrganizationUncheckedUpdateManyInputSchema:()=>C1,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>oE,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>aE,OrganizationUpdateArgsSchema:()=>kRt,OrganizationUpdateInputSchema:()=>h1,OrganizationUpdateManyAndReturnArgsSchema:()=>jRt,OrganizationUpdateManyArgsSchema:()=>xRt,OrganizationUpdateManyMutationInputSchema:()=>g1,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>dr,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Ri,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>Fpt,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>_pt,OrganizationUpdateWithoutRestaurantsInputSchema:()=>eE,OrganizationUpdateWithoutUsersInputSchema:()=>nE,OrganizationUpsertArgsSchema:()=>PRt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>qpt,OrganizationUpsertWithoutUsersInputSchema:()=>Dpt,OrganizationWhereInputSchema:()=>ke,OrganizationWhereUniqueInputSchema:()=>jl,PasswordResetAggregateArgsSchema:()=>cAt,PasswordResetArgsSchema:()=>$zt,PasswordResetAvgOrderByAggregateInputSchema:()=>Ait,PasswordResetCountOrderByAggregateInputSchema:()=>Cit,PasswordResetCreateArgsSchema:()=>$jt,PasswordResetCreateInputSchema:()=>m$,PasswordResetCreateManyAndReturnArgsSchema:()=>Xjt,PasswordResetCreateManyArgsSchema:()=>Kjt,PasswordResetCreateManyInputSchema:()=>$P,PasswordResetCreateManyUserInputEnvelopeSchema:()=>dO,PasswordResetCreateManyUserInputSchema:()=>AH,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>Ga,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>uh,PasswordResetCreateWithoutUserInputSchema:()=>uu,PasswordResetDeleteArgsSchema:()=>tMt,PasswordResetDeleteManyArgsSchema:()=>aMt,PasswordResetFindFirstArgsSchema:()=>rAt,PasswordResetFindFirstOrThrowArgsSchema:()=>pAt,PasswordResetFindManyArgsSchema:()=>FK,PasswordResetFindUniqueArgsSchema:()=>yAt,PasswordResetFindUniqueOrThrowArgsSchema:()=>sAt,PasswordResetGroupByArgsSchema:()=>uAt,PasswordResetIncludeSchema:()=>Pz,PasswordResetListRelationFilterSchema:()=>U4,PasswordResetMaxOrderByAggregateInputSchema:()=>Sit,PasswordResetMinOrderByAggregateInputSchema:()=>Tit,PasswordResetOrderByRelationAggregateInputSchema:()=>hnt,PasswordResetOrderByWithAggregationInputSchema:()=>fV,PasswordResetOrderByWithRelationInputSchema:()=>Tb,PasswordResetScalarFieldEnumSchema:()=>aC,PasswordResetScalarWhereInputSchema:()=>Pp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>ZA,PasswordResetSchema:()=>bzt,PasswordResetSelectSchema:()=>Uz,PasswordResetSumOrderByAggregateInputSchema:()=>Pit,PasswordResetUncheckedCreateInputSchema:()=>b$,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>di,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>yu,PasswordResetUncheckedUpdateInputSchema:()=>I$,PasswordResetUncheckedUpdateManyInputSchema:()=>g$,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>Gut,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Ji,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>a7,PasswordResetUpdateArgsSchema:()=>eMt,PasswordResetUpdateInputSchema:()=>h$,PasswordResetUpdateManyAndReturnArgsSchema:()=>nMt,PasswordResetUpdateManyArgsSchema:()=>oMt,PasswordResetUpdateManyMutationInputSchema:()=>VN,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>iR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>vi,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>aR,PasswordResetUpdateWithoutUserInputSchema:()=>n7,PasswordResetUpsertArgsSchema:()=>Jjt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>nR,PasswordResetWhereInputSchema:()=>Wa,PasswordResetWhereUniqueInputSchema:()=>Ue,PhotoTypeSchema:()=>ue,PrepBoardAggregateArgsSchema:()=>JCt,PrepBoardArgsSchema:()=>n0,PrepBoardAvgOrderByAggregateInputSchema:()=>yit,PrepBoardCountOrderByAggregateInputSchema:()=>uit,PrepBoardCountOutputTypeArgsSchema:()=>a0,PrepBoardCountOutputTypeSelectSchema:()=>RX,PrepBoardCreateArgsSchema:()=>Zjt,PrepBoardCreateInputSchema:()=>i$,PrepBoardCreateManyAndReturnArgsSchema:()=>fjt,PrepBoardCreateManyArgsSchema:()=>Ojt,PrepBoardCreateManyInputSchema:()=>YP,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>bo,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>QF,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>U3,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>jh,PrepBoardCreateWithoutPrepItemsInputSchema:()=>dw,PrepBoardCreateWithoutRecipesInputSchema:()=>$u,PrepBoardDeleteArgsSchema:()=>wjt,PrepBoardDeleteManyArgsSchema:()=>Fjt,PrepBoardFindFirstArgsSchema:()=>GCt,PrepBoardFindFirstOrThrowArgsSchema:()=>$Ct,PrepBoardFindManyArgsSchema:()=>qK,PrepBoardFindUniqueArgsSchema:()=>XCt,PrepBoardFindUniqueOrThrowArgsSchema:()=>tAt,PrepBoardGroupByArgsSchema:()=>KCt,PrepBoardIncludeSchema:()=>Cz,PrepBoardListRelationFilterSchema:()=>M4,PrepBoardMaxOrderByAggregateInputSchema:()=>sit,PrepBoardMinOrderByAggregateInputSchema:()=>dit,PrepBoardOrderByRelationAggregateInputSchema:()=>Bnt,PrepBoardOrderByWithAggregationInputSchema:()=>vV,PrepBoardOrderByWithRelationInputSchema:()=>Bm,PrepBoardScalarFieldEnumSchema:()=>oC,PrepBoardScalarRelationFilterSchema:()=>K4,PrepBoardScalarWhereInputSchema:()=>xp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>jA,PrepBoardSchema:()=>zzt,PrepBoardSelectSchema:()=>Az,PrepBoardSumOrderByAggregateInputSchema:()=>zit,PrepBoardUncheckedCreateInputSchema:()=>l$,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Bo,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>zw,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>Ju,PrepBoardUncheckedUpdateInputSchema:()=>p$,PrepBoardUncheckedUpdateManyInputSchema:()=>c$,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>myt,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Mn,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>lL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>L7,PrepBoardUpdateArgsSchema:()=>Njt,PrepBoardUpdateInputSchema:()=>r$,PrepBoardUpdateManyAndReturnArgsSchema:()=>qjt,PrepBoardUpdateManyArgsSchema:()=>Bjt,PrepBoardUpdateManyMutationInputSchema:()=>LN,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>yk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>cn,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>$F,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Lct,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>uk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>iL,PrepBoardUpdateWithoutRecipesInputSchema:()=>E7,PrepBoardUpsertArgsSchema:()=>vjt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>ck,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>Ect,PrepBoardWhereInputSchema:()=>Ke,PrepBoardWhereUniqueInputSchema:()=>oe,PrepHistoryAggregateArgsSchema:()=>HAt,PrepHistoryArgsSchema:()=>Xzt,PrepHistoryAvgOrderByAggregateInputSchema:()=>Xit,PrepHistoryCountOrderByAggregateInputSchema:()=>Kit,PrepHistoryCreateArgsSchema:()=>$Mt,PrepHistoryCreateInputSchema:()=>H$,PrepHistoryCreateManyAndReturnArgsSchema:()=>XMt,PrepHistoryCreateManyArgsSchema:()=>KMt,PrepHistoryCreateManyInputSchema:()=>oU,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>qO,PrepHistoryCreateManyRecipeInputSchema:()=>qH,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>mo,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>xh,PrepHistoryCreateWithoutRecipeInputSchema:()=>Yu,PrepHistoryDeleteArgsSchema:()=>tZt,PrepHistoryDeleteManyArgsSchema:()=>aZt,PrepHistoryFindFirstArgsSchema:()=>LAt,PrepHistoryFindFirstOrThrowArgsSchema:()=>VAt,PrepHistoryFindManyArgsSchema:()=>EK,PrepHistoryFindUniqueArgsSchema:()=>YAt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>GAt,PrepHistoryGroupByArgsSchema:()=>QAt,PrepHistoryIncludeSchema:()=>wz,PrepHistoryListRelationFilterSchema:()=>j4,PrepHistoryMaxOrderByAggregateInputSchema:()=>tlt,PrepHistoryMinOrderByAggregateInputSchema:()=>elt,PrepHistoryOrderByRelationAggregateInputSchema:()=>Nnt,PrepHistoryOrderByWithAggregationInputSchema:()=>DV,PrepHistoryOrderByWithRelationInputSchema:()=>Wb,PrepHistoryScalarFieldEnumSchema:()=>uC,PrepHistoryScalarWhereInputSchema:()=>kp,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>BA,PrepHistorySchema:()=>Szt,PrepHistorySelectSchema:()=>Nz,PrepHistorySumOrderByAggregateInputSchema:()=>olt,PrepHistoryUncheckedCreateInputSchema:()=>Q$,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>No,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Gu,PrepHistoryUncheckedUpdateInputSchema:()=>G$,PrepHistoryUncheckedUpdateManyInputSchema:()=>$$,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>zyt,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>jn,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>_7,PrepHistoryUpdateArgsSchema:()=>eZt,PrepHistoryUpdateInputSchema:()=>Y$,PrepHistoryUpdateManyAndReturnArgsSchema:()=>nZt,PrepHistoryUpdateManyArgsSchema:()=>oZt,PrepHistoryUpdateManyMutationInputSchema:()=>YN,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>pk,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>pn,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>rk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>D7,PrepHistoryUpsertArgsSchema:()=>JMt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>lk,PrepHistoryWhereInputSchema:()=>xa,PrepHistoryWhereUniqueInputSchema:()=>Re,PrepItemAggregateArgsSchema:()=>nAt,PrepItemArgsSchema:()=>Gzt,PrepItemAvgOrderByAggregateInputSchema:()=>bit,PrepItemCountOrderByAggregateInputSchema:()=>mit,PrepItemCreateArgsSchema:()=>Djt,PrepItemCreateInputSchema:()=>u$,PrepItemCreateManyAndReturnArgsSchema:()=>Ljt,PrepItemCreateManyArgsSchema:()=>Ejt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>uO,PrepItemCreateManyAssignedToInputSchema:()=>IH,PrepItemCreateManyInputSchema:()=>GP,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>sw,PrepItemCreateManyPrepBoardInputSchema:()=>sQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>FO,PrepItemCreateManyRecipeInputSchema:()=>FH,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ha,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>l5,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>rh,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>pI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>Mh,PrepItemCreateWithoutAssignedToInputSchema:()=>au,PrepItemCreateWithoutPrepBoardInputSchema:()=>ls,PrepItemCreateWithoutRecipeInputSchema:()=>Ku,PrepItemDeleteArgsSchema:()=>Vjt,PrepItemDeleteManyArgsSchema:()=>Gjt,PrepItemFindFirstArgsSchema:()=>eAt,PrepItemFindFirstOrThrowArgsSchema:()=>oAt,PrepItemFindManyArgsSchema:()=>yT,PrepItemFindUniqueArgsSchema:()=>iAt,PrepItemFindUniqueOrThrowArgsSchema:()=>lAt,PrepItemGroupByArgsSchema:()=>aAt,PrepItemIncludeSchema:()=>Sz,PrepItemListRelationFilterSchema:()=>PS,PrepItemMaxOrderByAggregateInputSchema:()=>hit,PrepItemMinOrderByAggregateInputSchema:()=>Iit,PrepItemOrderByRelationAggregateInputSchema:()=>mB,PrepItemOrderByWithAggregationInputSchema:()=>OV,PrepItemOrderByWithRelationInputSchema:()=>Sb,PrepItemScalarFieldEnumSchema:()=>nC,PrepItemScalarWhereInputSchema:()=>Fa,PrepItemScalarWhereWithAggregatesInputSchema:()=>MA,PrepItemSchema:()=>mzt,PrepItemSelectSchema:()=>Tz,PrepItemSumOrderByAggregateInputSchema:()=>git,PrepItemUncheckedCreateInputSchema:()=>y$,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>ui,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>p5,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>iu,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>rs,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>Xu,PrepItemUncheckedUpdateInputSchema:()=>d$,PrepItemUncheckedUpdateManyInputSchema:()=>z$,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Hut,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Yi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>Qyt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>s5,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>byt,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Zn,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>K8,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>tK,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>H7,PrepItemUpdateArgsSchema:()=>Hjt,PrepItemUpdateInputSchema:()=>s$,PrepItemUpdateManyAndReturnArgsSchema:()=>Yjt,PrepItemUpdateManyArgsSchema:()=>Qjt,PrepItemUpdateManyMutationInputSchema:()=>jT,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>$W,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>Xx,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>zk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>ji,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>u5,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>un,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>GW,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>Kx,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>dk,PrepItemUpdateWithoutAssignedToInputSchema:()=>J8,PrepItemUpdateWithoutPrepBoardInputSchema:()=>XJ,PrepItemUpdateWithoutRecipeInputSchema:()=>V7,PrepItemUpsertArgsSchema:()=>_jt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>YW,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>Jx,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>sk,PrepItemWhereInputSchema:()=>Ua,PrepItemWhereUniqueInputSchema:()=>H,PrepStatusSchema:()=>X,ProductionPlanAggregateArgsSchema:()=>Oht,ProductionPlanArgsSchema:()=>OQ,ProductionPlanAvgOrderByAggregateInputSchema:()=>$et,ProductionPlanCountOrderByAggregateInputSchema:()=>Get,ProductionPlanCountOutputTypeArgsSchema:()=>fQ,ProductionPlanCountOutputTypeSelectSchema:()=>sX,ProductionPlanCreateArgsSchema:()=>DUt,ProductionPlanCreateInputSchema:()=>hG,ProductionPlanCreateManyAndReturnArgsSchema:()=>LUt,ProductionPlanCreateManyArgsSchema:()=>EUt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>bO,ProductionPlanCreateManyCreatedByInputSchema:()=>PH,ProductionPlanCreateManyInputSchema:()=>gP,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>Xv,ProductionPlanCreateManyRestaurantInputSchema:()=>dH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>Ka,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>$l,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>Dq,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>dh,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>x6,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>oh,ProductionPlanCreateWithoutCreatedByInputSchema:()=>bu,ProductionPlanCreateWithoutItemsInputSchema:()=>uv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>Yc,ProductionPlanDeleteArgsSchema:()=>VUt,ProductionPlanDeleteManyArgsSchema:()=>GUt,ProductionPlanFindFirstArgsSchema:()=>Zht,ProductionPlanFindFirstOrThrowArgsSchema:()=>vht,ProductionPlanFindManyArgsSchema:()=>Kw,ProductionPlanFindUniqueArgsSchema:()=>wht,ProductionPlanFindUniqueOrThrowArgsSchema:()=>Nht,ProductionPlanGroupByArgsSchema:()=>fht,ProductionPlanIncludeSchema:()=>Id,ProductionPlanItemAggregateArgsSchema:()=>Fht,ProductionPlanItemArgsSchema:()=>Nzt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>eot,ProductionPlanItemCountOrderByAggregateInputSchema:()=>tot,ProductionPlanItemCreateArgsSchema:()=>$Ut,ProductionPlanItemCreateInputSchema:()=>SG,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>XUt,ProductionPlanItemCreateManyArgsSchema:()=>KUt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>hO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>UH,ProductionPlanItemCreateManyInputSchema:()=>CP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>cv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>KV,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>_O,ProductionPlanItemCreateManyRecipeInputSchema:()=>_H,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>Xa,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>fq,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>go,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>zh,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>Db,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>vh,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>Iu,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>Ic,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>oy,ProductionPlanItemDeleteArgsSchema:()=>tWt,ProductionPlanItemDeleteManyArgsSchema:()=>aWt,ProductionPlanItemFindFirstArgsSchema:()=>Bht,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>qht,ProductionPlanItemFindManyArgsSchema:()=>lT,ProductionPlanItemFindUniqueArgsSchema:()=>_ht,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>Eht,ProductionPlanItemGroupByArgsSchema:()=>Dht,ProductionPlanItemIncludeSchema:()=>Cd,ProductionPlanItemListRelationFilterSchema:()=>hS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>oot,ProductionPlanItemMinOrderByAggregateInputSchema:()=>not,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>iB,ProductionPlanItemOrderByWithAggregationInputSchema:()=>iV,ProductionPlanItemOrderByWithRelationInputSchema:()=>cb,ProductionPlanItemScalarFieldEnumSchema:()=>kg,ProductionPlanItemScalarWhereInputSchema:()=>Oa,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>oA,ProductionPlanItemSchema:()=>Fdt,ProductionPlanItemSelectSchema:()=>Ad,ProductionPlanItemSumOrderByAggregateInputSchema:()=>aot,ProductionPlanItemUncheckedCreateInputSchema:()=>TG,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>hi,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>wq,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>gu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>gc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>ny,ProductionPlanItemUncheckedUpdateInputSchema:()=>UG,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>WG,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>Xut,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>el,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>Wut,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>Fq,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Iyt,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>On,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>s7,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>s8,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>$7,ProductionPlanItemUpdateArgsSchema:()=>eWt,ProductionPlanItemUpdateInputSchema:()=>PG,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>nWt,ProductionPlanItemUpdateManyArgsSchema:()=>oWt,ProductionPlanItemUpdateManyMutationInputSchema:()=>UT,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>hR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>LU,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ck,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>Ni,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>qq,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>sn,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>bR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>EU,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>gk,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>y7,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>y8,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>G7,ProductionPlanItemUpsertArgsSchema:()=>JUt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>mR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>_U,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ik,ProductionPlanItemWhereInputSchema:()=>da,ProductionPlanItemWhereUniqueInputSchema:()=>_,ProductionPlanListRelationFilterSchema:()=>yM,ProductionPlanMaxOrderByAggregateInputSchema:()=>Jet,ProductionPlanMinOrderByAggregateInputSchema:()=>Ket,ProductionPlanOrderByRelationAggregateInputSchema:()=>S4,ProductionPlanOrderByWithAggregationInputSchema:()=>aV,ProductionPlanOrderByWithRelationInputSchema:()=>jm,ProductionPlanScalarFieldEnumSchema:()=>Rg,ProductionPlanScalarRelationFilterSchema:()=>l4,ProductionPlanScalarWhereInputSchema:()=>Pl,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>eA,ProductionPlanSchema:()=>qdt,ProductionPlanSelectSchema:()=>gd,ProductionPlanSumOrderByAggregateInputSchema:()=>Xet,ProductionPlanUncheckedCreateInputSchema:()=>IG,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>bi,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>hu,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>yv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,ProductionPlanUncheckedUpdateInputSchema:()=>CG,ProductionPlanUncheckedUpdateManyInputSchema:()=>AG,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Kut,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>tl,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Dut,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>u7,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>j_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>_8,ProductionPlanUpdateArgsSchema:()=>HUt,ProductionPlanUpdateInputSchema:()=>gG,ProductionPlanUpdateManyAndReturnArgsSchema:()=>YUt,ProductionPlanUpdateManyArgsSchema:()=>QUt,ProductionPlanUpdateManyMutationInputSchema:()=>qj,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>zR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>fW,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>wi,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>Lq,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>zpt,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>dR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>OW,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>c7,ProductionPlanUpdateWithoutItemsInputSchema:()=>x_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>D8,ProductionPlanUpsertArgsSchema:()=>_Ut,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>sR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>vW,ProductionPlanUpsertWithoutItemsInputSchema:()=>dpt,ProductionPlanWhereInputSchema:()=>Qe,ProductionPlanWhereUniqueInputSchema:()=>lt,ProductionStatusSchema:()=>mdt,QualityChecklistAggregateArgsSchema:()=>kbt,QualityChecklistArgsSchema:()=>jj,QualityChecklistAvgOrderByAggregateInputSchema:()=>Qtt,QualityChecklistCountOrderByAggregateInputSchema:()=>Htt,QualityChecklistCountOutputTypeArgsSchema:()=>WQ,QualityChecklistCountOutputTypeSelectSchema:()=>rX,QualityChecklistCreateArgsSchema:()=>iPt,QualityChecklistCreateInputSchema:()=>AY,QualityChecklistCreateManyAndReturnArgsSchema:()=>pPt,QualityChecklistCreateManyArgsSchema:()=>rPt,QualityChecklistCreateManyInputSchema:()=>cP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>eO,QualityChecklistCreateManyRestaurantInputSchema:()=>mH,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>GB,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>d2,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>s6,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>y6,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>ah,QualityChecklistCreateWithoutCompletionsInputSchema:()=>RZ,QualityChecklistCreateWithoutItemsInputSchema:()=>PZ,QualityChecklistCreateWithoutRestaurantInputSchema:()=>Kc,QualityChecklistDeleteArgsSchema:()=>cPt,QualityChecklistDeleteManyArgsSchema:()=>dPt,QualityChecklistFindFirstArgsSchema:()=>Wbt,QualityChecklistFindFirstOrThrowArgsSchema:()=>Rbt,QualityChecklistFindManyArgsSchema:()=>RK,QualityChecklistFindUniqueArgsSchema:()=>jbt,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Mbt,QualityChecklistGroupByArgsSchema:()=>xbt,QualityChecklistIncludeSchema:()=>Ks,QualityChecklistListRelationFilterSchema:()=>g4,QualityChecklistMaxOrderByAggregateInputSchema:()=>Ytt,QualityChecklistMinOrderByAggregateInputSchema:()=>Gtt,QualityChecklistOrderByRelationAggregateInputSchema:()=>cnt,QualityChecklistOrderByWithAggregationInputSchema:()=>YL,QualityChecklistOrderByWithRelationInputSchema:()=>_p,QualityChecklistScalarFieldEnumSchema:()=>hg,QualityChecklistScalarRelationFilterSchema:()=>tM,QualityChecklistScalarWhereInputSchema:()=>Ap,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>VC,QualityChecklistSchema:()=>xdt,QualityChecklistSelectSchema:()=>Xs,QualityChecklistSumOrderByAggregateInputSchema:()=>$tt,QualityChecklistUncheckedCreateInputSchema:()=>SY,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>kZ,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>UZ,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,QualityChecklistUncheckedUpdateInputSchema:()=>PY,QualityChecklistUncheckedUpdateManyInputSchema:()=>UY,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Eut,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>$D,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>YD,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>H8,QualityChecklistUpdateArgsSchema:()=>uPt,QualityChecklistUpdateInputSchema:()=>TY,QualityChecklistUpdateManyAndReturnArgsSchema:()=>sPt,QualityChecklistUpdateManyArgsSchema:()=>yPt,QualityChecklistUpdateManyMutationInputSchema:()=>ZN,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>DW,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>XB,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>b2,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Ort,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Zrt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>FW,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>GD,QualityChecklistUpdateWithoutItemsInputSchema:()=>QD,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>V8,QualityChecklistUpsertArgsSchema:()=>lPt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>qW,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>vrt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Mrt,QualityChecklistWhereInputSchema:()=>je,QualityChecklistWhereUniqueInputSchema:()=>Ht,QueryModeSchema:()=>Rj,RecipeAggregateArgsSchema:()=>Wgt,RecipeArgsSchema:()=>Jt,RecipeAvgOrderByAggregateInputSchema:()=>Hnt,RecipeCountOrderByAggregateInputSchema:()=>Vnt,RecipeCountOutputTypeArgsSchema:()=>LQ,RecipeCountOutputTypeSelectSchema:()=>gX,RecipeCreateArgsSchema:()=>Tkt,RecipeCreateInputSchema:()=>Q1,RecipeCreateManyAndReturnArgsSchema:()=>Wkt,RecipeCreateManyArgsSchema:()=>Ukt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>xO,RecipeCreateManyCookBookInputSchema:()=>fH,RecipeCreateManyInputSchema:()=>fP,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>Yv,RecipeCreateManyRestaurantInputSchema:()=>pH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>q2,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>uq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>_z,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>i5,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>Vl,RecipeCreateNestedManyWithoutTagsInputSchema:()=>glt,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>ilt,RecipeCreateNestedOneWithoutEquipmentInputSchema:()=>vB,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>Elt,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>Xq,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>iF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>mlt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>z5,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>nlt,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>clt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>Vlt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>YF,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>_q,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>Nlt,RecipeCreateNestedOneWithoutStorageInputSchema:()=>rlt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>ylt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>MT,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>Yq,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>dlt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>Ph,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>Q5,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Bb,RecipeCreateOrConnectWithoutEquipmentInputSchema:()=>l6,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>N3,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>a3,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>r3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>K5,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>M3,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>yI,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>H5,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>G5,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>rI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>B3,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>W3,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>j6,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>g3,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>Jb,RecipeCreateOrConnectWithoutStorageInputSchema:()=>Y5,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Fb,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>$5,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>o6,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>w6,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>J5,RecipeCreateWithoutCookBookInputSchema:()=>Bu,RecipeCreateWithoutCriticalPointsInputSchema:()=>fM,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>sc,RecipeCreateWithoutEquipmentInputSchema:()=>sZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>Ew,RecipeCreateWithoutIngredientsInputSchema:()=>mf,RecipeCreateWithoutInstructionsInputSchema:()=>Af,RecipeCreateWithoutLaborCostsInputSchema:()=>VM,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>Rw,RecipeCreateWithoutMenuItemsInputSchema:()=>ss,RecipeCreateWithoutNutritionalInfoInputSchema:()=>vM,RecipeCreateWithoutPhotosInputSchema:()=>qM,RecipeCreateWithoutPrepBoardsInputSchema:()=>as,RecipeCreateWithoutPrepHistoryInputSchema:()=>Vw,RecipeCreateWithoutPrepItemsInputSchema:()=>mw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>sv,RecipeCreateWithoutRecipeStatsInputSchema:()=>$f,RecipeCreateWithoutRestaurantInputSchema:()=>Bc,RecipeCreateWithoutStorageInputSchema:()=>NM,RecipeCreateWithoutTagsInputSchema:()=>bc,RecipeCreateWithoutTemperaturesInputSchema:()=>DM,RecipeCreateWithoutVersionsInputSchema:()=>tZ,RecipeCreateWithoutWithdrawalsInputSchema:()=>Pv,RecipeCreateWithoutYieldsInputSchema:()=>EM,RecipeCreateimageUrlsInputSchema:()=>St,RecipeCriticalPointAggregateArgsSchema:()=>cmt,RecipeCriticalPointArgsSchema:()=>Tzt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>wX,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>fX,RecipeCriticalPointCreateArgsSchema:()=>iSt,RecipeCriticalPointCreateInputSchema:()=>z0,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>pSt,RecipeCriticalPointCreateManyArgsSchema:()=>rSt,RecipeCriticalPointCreateManyInputSchema:()=>JT,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>$O,RecipeCriticalPointCreateManyRecipeInputSchema:()=>GH,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>xo,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>_h,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Cy,RecipeCriticalPointDeleteArgsSchema:()=>cSt,RecipeCriticalPointDeleteManyArgsSchema:()=>dSt,RecipeCriticalPointFindFirstArgsSchema:()=>rmt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>pmt,RecipeCriticalPointFindManyArgsSchema:()=>gK,RecipeCriticalPointFindUniqueArgsSchema:()=>ymt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>smt,RecipeCriticalPointGroupByArgsSchema:()=>umt,RecipeCriticalPointIncludeSchema:()=>ks,RecipeCriticalPointListRelationFilterSchema:()=>N4,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>NX,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>BX,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>Ent,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>wL,RecipeCriticalPointOrderByWithRelationInputSchema:()=>Gm,RecipeCriticalPointScalarFieldEnumSchema:()=>ig,RecipeCriticalPointScalarWhereInputSchema:()=>Op,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>vC,RecipeCriticalPointSchema:()=>hdt,RecipeCriticalPointSelectSchema:()=>xs,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>qX,RecipeCriticalPointUncheckedCreateInputSchema:()=>m0,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Jo,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>Ay,RecipeCriticalPointUncheckedUpdateInputSchema:()=>h0,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>I0,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ryt,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ln,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>zJ,RecipeCriticalPointUpdateArgsSchema:()=>uSt,RecipeCriticalPointUpdateInputSchema:()=>b0,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>sSt,RecipeCriticalPointUpdateManyArgsSchema:()=>ySt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>PN,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>Qk,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Sn,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>dJ,RecipeCriticalPointUpsertArgsSchema:()=>lSt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Vk,RecipeCriticalPointWhereInputSchema:()=>Xn,RecipeCriticalPointWhereUniqueInputSchema:()=>de,RecipeDeleteArgsSchema:()=>Rkt,RecipeDeleteManyArgsSchema:()=>Mkt,RecipeEquipmentAggregateArgsSchema:()=>bbt,RecipeEquipmentArgsSchema:()=>xzt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>ftt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>Ott,RecipeEquipmentCreateArgsSchema:()=>DTt,RecipeEquipmentCreateInputSchema:()=>yY,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>LTt,RecipeEquipmentCreateManyArgsSchema:()=>ETt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>uZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>VV,RecipeEquipmentCreateManyInputSchema:()=>rP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>VO,RecipeEquipmentCreateManyRecipeInputSchema:()=>VH,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>Uf,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>nQ,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>PB,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>To,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>rF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>Mb,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>Nh,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>Jh,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>Kp,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>uy,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>By,RecipeEquipmentDeleteArgsSchema:()=>VTt,RecipeEquipmentDeleteManyArgsSchema:()=>GTt,RecipeEquipmentFindFirstArgsSchema:()=>zbt,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>mbt,RecipeEquipmentFindManyArgsSchema:()=>oT,RecipeEquipmentFindUniqueArgsSchema:()=>Ibt,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>gbt,RecipeEquipmentGroupByArgsSchema:()=>hbt,RecipeEquipmentIncludeSchema:()=>Ys,RecipeEquipmentListRelationFilterSchema:()=>mS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>wtt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>Ntt,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>KN,RecipeEquipmentOrderByWithAggregationInputSchema:()=>HL,RecipeEquipmentOrderByWithRelationInputSchema:()=>eb,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>hN,RecipeEquipmentScalarFieldEnumSchema:()=>mg,RecipeEquipmentScalarWhereInputSchema:()=>va,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>EC,RecipeEquipmentSchema:()=>Rdt,RecipeEquipmentSelectSchema:()=>Gs,RecipeEquipmentSumOrderByAggregateInputSchema:()=>Btt,RecipeEquipmentUncheckedCreateInputSchema:()=>sY,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>WB,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Vo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>pF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>Xp,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>yy,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>qy,RecipeEquipmentUncheckedUpdateInputSchema:()=>zY,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>mY,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>but,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>MB,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>Syt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>wyt,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>sF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Bn,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>H3,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>aJ,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>ZJ,RecipeEquipmentUpdateArgsSchema:()=>HTt,RecipeEquipmentUpdateInputSchema:()=>dY,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>YTt,RecipeEquipmentUpdateManyArgsSchema:()=>QTt,RecipeEquipmentUpdateManyMutationInputSchema:()=>AT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>zU,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>Zk,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>Cx,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>xB,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>yF,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>bn,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>dU,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Mk,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>gx,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>V3,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>nJ,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>MJ,RecipeEquipmentUpsertArgsSchema:()=>_Tt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>sU,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>jk,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>Ix,RecipeEquipmentWhereInputSchema:()=>ia,RecipeEquipmentWhereUniqueInputSchema:()=>B,RecipeFindFirstArgsSchema:()=>Pgt,RecipeFindFirstOrThrowArgsSchema:()=>Ugt,RecipeFindManyArgsSchema:()=>pp,RecipeFindUniqueArgsSchema:()=>kgt,RecipeFindUniqueOrThrowArgsSchema:()=>xgt,RecipeGroupByArgsSchema:()=>Rgt,RecipeIncludeSchema:()=>Yd,RecipeIngredientAggregateArgsSchema:()=>Bgt,RecipeIngredientArgsSchema:()=>Vzt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>iat,RecipeIngredientCountOrderByAggregateInputSchema:()=>aat,RecipeIngredientCreateArgsSchema:()=>Dkt,RecipeIngredientCreateInputSchema:()=>n9,RecipeIngredientCreateManyAndReturnArgsSchema:()=>Lkt,RecipeIngredientCreateManyArgsSchema:()=>Ekt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>rf,RecipeIngredientCreateManyIngredientInputSchema:()=>JH,RecipeIngredientCreateManyInputSchema:()=>NP,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>wO,RecipeIngredientCreateManyRecipeInputSchema:()=>wH,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>oZ,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>EV,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>PI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>uo,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>ZT,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>Lh,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Uh,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>xb,RecipeIngredientCreateWithoutIngredientInputSchema:()=>Py,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Fu,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>Yp,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>ip,RecipeIngredientDeleteArgsSchema:()=>Vkt,RecipeIngredientDeleteManyArgsSchema:()=>Gkt,RecipeIngredientFindFirstArgsSchema:()=>wgt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>Ngt,RecipeIngredientFindManyArgsSchema:()=>pT,RecipeIngredientFindUniqueArgsSchema:()=>Fgt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>Dgt,RecipeIngredientGroupByArgsSchema:()=>qgt,RecipeIngredientIncludeSchema:()=>Kd,RecipeIngredientListRelationFilterSchema:()=>zS,RecipeIngredientMaxOrderByAggregateInputSchema:()=>lat,RecipeIngredientMinOrderByAggregateInputSchema:()=>rat,RecipeIngredientOrderByRelationAggregateInputSchema:()=>$N,RecipeIngredientOrderByWithAggregationInputSchema:()=>SV,RecipeIngredientOrderByWithRelationInputSchema:()=>Ib,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>IN,RecipeIngredientScalarFieldEnumSchema:()=>Vg,RecipeIngredientScalarWhereInputSchema:()=>Za,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>gA,RecipeIngredientSchema:()=>nzt,RecipeIngredientSelectSchema:()=>Xd,RecipeIngredientSumOrderByAggregateInputSchema:()=>pat,RecipeIngredientUncheckedCreateInputSchema:()=>a9,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>ZI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>wT,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>Uy,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>Du,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>Gp,RecipeIngredientUncheckedUpdateInputSchema:()=>l9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>r9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>xyt,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>QI,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>uyt,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Wn,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>zut,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>ET,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>IJ,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>O7,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>_3,RecipeIngredientUpdateArgsSchema:()=>Hkt,RecipeIngredientUpdateInputSchema:()=>i9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>Ykt,RecipeIngredientUpdateManyArgsSchema:()=>Qkt,RecipeIngredientUpdateManyMutationInputSchema:()=>RT,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>Xk,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>$R,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>pU,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>qI,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>nn,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>qT,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Kk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>GR,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>rU,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>hJ,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>v7,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>D3,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>Vr,RecipeIngredientUpsertArgsSchema:()=>_kt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Jk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>YR,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>lU,RecipeIngredientWhereInputSchema:()=>Aa,RecipeIngredientWhereUniqueInputSchema:()=>L,RecipeInstructionAggregateArgsSchema:()=>Lgt,RecipeInstructionArgsSchema:()=>HQ,RecipeInstructionAvgOrderByAggregateInputSchema:()=>uat,RecipeInstructionCountOrderByAggregateInputSchema:()=>cat,RecipeInstructionCountOutputTypeArgsSchema:()=>QQ,RecipeInstructionCountOutputTypeSelectSchema:()=>AX,RecipeInstructionCreateArgsSchema:()=>$kt,RecipeInstructionCreateInputSchema:()=>p9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>Xkt,RecipeInstructionCreateManyArgsSchema:()=>Kkt,RecipeInstructionCreateManyInputSchema:()=>BP,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>NO,RecipeInstructionCreateManyRecipeInputSchema:()=>NH,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>nZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>LV,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>yo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>vT,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>fB,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>p6,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Wh,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>jb,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>bZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>_u,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>$p,RecipeInstructionDeleteArgsSchema:()=>txt,RecipeInstructionDeleteManyArgsSchema:()=>axt,RecipeInstructionFindFirstArgsSchema:()=>_gt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>Egt,RecipeInstructionFindManyArgsSchema:()=>oN,RecipeInstructionFindUniqueArgsSchema:()=>Hgt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>Qgt,RecipeInstructionGroupByArgsSchema:()=>Vgt,RecipeInstructionIncludeSchema:()=>tz,RecipeInstructionListRelationFilterSchema:()=>Jj,RecipeInstructionMaxOrderByAggregateInputSchema:()=>yat,RecipeInstructionMinOrderByAggregateInputSchema:()=>sat,RecipeInstructionNullableScalarRelationFilterSchema:()=>X$,RecipeInstructionOrderByRelationAggregateInputSchema:()=>J$,RecipeInstructionOrderByWithAggregationInputSchema:()=>TV,RecipeInstructionOrderByWithRelationInputSchema:()=>vm,RecipeInstructionRecipeIdStepNumberCompoundUniqueInputSchema:()=>gN,RecipeInstructionScalarFieldEnumSchema:()=>Hg,RecipeInstructionScalarWhereInputSchema:()=>ml,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>CA,RecipeInstructionSchema:()=>azt,RecipeInstructionSelectSchema:()=>ez,RecipeInstructionSumOrderByAggregateInputSchema:()=>dat,RecipeInstructionUncheckedCreateInputSchema:()=>c9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Oo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>NT,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>hZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Eu,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>Jp,RecipeInstructionUncheckedUpdateInputSchema:()=>y9,RecipeInstructionUncheckedUpdateManyInputSchema:()=>s9,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>yyt,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Rn,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>mut,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>LT,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>_D,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>w7,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>L3,RecipeInstructionUpdateArgsSchema:()=>ext,RecipeInstructionUpdateInputSchema:()=>u9,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>nxt,RecipeInstructionUpdateManyArgsSchema:()=>oxt,RecipeInstructionUpdateManyMutationInputSchema:()=>Ej,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>XR,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>yU,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>an,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>FT,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>BB,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Wrt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>KR,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>uU,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>DD,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>f7,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>E3,RecipeInstructionUpsertArgsSchema:()=>Jkt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>JR,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>cU,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Urt,RecipeInstructionWhereInputSchema:()=>fe,RecipeInstructionWhereUniqueInputSchema:()=>rt,RecipeLaborCostAggregateArgsSchema:()=>Fmt,RecipeLaborCostArgsSchema:()=>Rzt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>ptt,RecipeLaborCostCountOrderByAggregateInputSchema:()=>rtt,RecipeLaborCostCreateArgsSchema:()=>$St,RecipeLaborCostCreateInputSchema:()=>F0,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>XSt,RecipeLaborCostCreateManyArgsSchema:()=>KSt,RecipeLaborCostCreateManyInputSchema:()=>oP,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>YO,RecipeLaborCostCreateManyRecipeInputSchema:()=>YH,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>Ro,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>Dh,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>Iy,RecipeLaborCostDeleteArgsSchema:()=>tTt,RecipeLaborCostDeleteManyArgsSchema:()=>aTt,RecipeLaborCostFindFirstArgsSchema:()=>Bmt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>qmt,RecipeLaborCostFindManyArgsSchema:()=>TK,RecipeLaborCostFindUniqueArgsSchema:()=>_mt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>Emt,RecipeLaborCostGroupByArgsSchema:()=>Dmt,RecipeLaborCostIncludeSchema:()=>Bs,RecipeLaborCostListRelationFilterSchema:()=>f4,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>ctt,RecipeLaborCostMinOrderByAggregateInputSchema:()=>utt,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>_nt,RecipeLaborCostOrderByWithAggregationInputSchema:()=>DL,RecipeLaborCostOrderByWithRelationInputSchema:()=>Xm,RecipeLaborCostScalarFieldEnumSchema:()=>ug,RecipeLaborCostScalarWhereInputSchema:()=>vp,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>BC,RecipeLaborCostSchema:()=>Sdt,RecipeLaborCostSelectSchema:()=>qs,RecipeLaborCostSumOrderByAggregateInputSchema:()=>ytt,RecipeLaborCostUncheckedCreateInputSchema:()=>D0,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Go,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>gy,RecipeLaborCostUncheckedUpdateInputSchema:()=>E0,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>L0,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>Wyt,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_n,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>sJ,RecipeLaborCostUpdateArgsSchema:()=>eTt,RecipeLaborCostUpdateInputSchema:()=>_0,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>nTt,RecipeLaborCostUpdateManyArgsSchema:()=>oTt,RecipeLaborCostUpdateManyMutationInputSchema:()=>kN,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>Lk,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Cn,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ek,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>yJ,RecipeLaborCostUpsertArgsSchema:()=>JSt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>_k,RecipeLaborCostWhereInputSchema:()=>na,RecipeLaborCostWhereUniqueInputSchema:()=>he,RecipeListRelationFilterSchema:()=>op,RecipeMaxOrderByAggregateInputSchema:()=>Qnt,RecipeMinOrderByAggregateInputSchema:()=>Ynt,RecipeNullableScalarRelationFilterSchema:()=>p4,RecipeNutritionAggregateArgsSchema:()=>nmt,RecipeNutritionArgsSchema:()=>CQ,RecipeNutritionAvgOrderByAggregateInputSchema:()=>MX,RecipeNutritionCountOrderByAggregateInputSchema:()=>jX,RecipeNutritionCreateArgsSchema:()=>$At,RecipeNutritionCreateInputSchema:()=>p0,RecipeNutritionCreateManyAndReturnArgsSchema:()=>XAt,RecipeNutritionCreateManyArgsSchema:()=>KAt,RecipeNutritionCreateManyInputSchema:()=>$T,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>ko,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>GO,RecipeNutritionCreateWithoutRecipeInputSchema:()=>YS,RecipeNutritionDeleteArgsSchema:()=>tSt,RecipeNutritionDeleteManyArgsSchema:()=>aSt,RecipeNutritionFindFirstArgsSchema:()=>tmt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>emt,RecipeNutritionFindManyArgsSchema:()=>omt,RecipeNutritionFindUniqueArgsSchema:()=>imt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>lmt,RecipeNutritionGroupByArgsSchema:()=>amt,RecipeNutritionIncludeSchema:()=>Ws,RecipeNutritionMaxOrderByAggregateInputSchema:()=>ZX,RecipeNutritionMinOrderByAggregateInputSchema:()=>vX,RecipeNutritionNullableScalarRelationFilterSchema:()=>w4,RecipeNutritionOrderByWithAggregationInputSchema:()=>fL,RecipeNutritionOrderByWithRelationInputSchema:()=>Pm,RecipeNutritionScalarFieldEnumSchema:()=>ag,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>ZC,RecipeNutritionSchema:()=>bdt,RecipeNutritionSelectSchema:()=>Rs,RecipeNutritionSumOrderByAggregateInputSchema:()=>OX,RecipeNutritionUncheckedCreateInputSchema:()=>c0,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>$o,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>GS,RecipeNutritionUncheckedUpdateInputSchema:()=>y0,RecipeNutritionUncheckedUpdateManyInputSchema:()=>d0,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>En,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>ef,RecipeNutritionUpdateArgsSchema:()=>eSt,RecipeNutritionUpdateInputSchema:()=>u0,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>nSt,RecipeNutritionUpdateManyArgsSchema:()=>oSt,RecipeNutritionUpdateManyMutationInputSchema:()=>s0,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>An,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>K6,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>tf,RecipeNutritionUpsertArgsSchema:()=>JAt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>J6,RecipeNutritionWhereInputSchema:()=>we,RecipeNutritionWhereUniqueInputSchema:()=>wl,RecipeOrderByRelationAggregateInputSchema:()=>bS,RecipeOrderByWithAggregationInputSchema:()=>CV,RecipeOrderByWithRelationInputSchema:()=>to,RecipePhotoAggregateArgsSchema:()=>Smt,RecipePhotoArgsSchema:()=>Pzt,RecipePhotoAvgOrderByAggregateInputSchema:()=>HX,RecipePhotoCountOrderByAggregateInputSchema:()=>VX,RecipePhotoCreateArgsSchema:()=>TSt,RecipePhotoCreateInputSchema:()=>U0,RecipePhotoCreateManyAndReturnArgsSchema:()=>WSt,RecipePhotoCreateManyArgsSchema:()=>USt,RecipePhotoCreateManyInputSchema:()=>XT,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>KO,RecipePhotoCreateManyRecipeInputSchema:()=>$H,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>Mo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>Eh,RecipePhotoCreateWithoutRecipeInputSchema:()=>Sy,RecipePhotoDeleteArgsSchema:()=>RSt,RecipePhotoDeleteManyArgsSchema:()=>MSt,RecipePhotoFindFirstArgsSchema:()=>Cmt,RecipePhotoFindFirstOrThrowArgsSchema:()=>Amt,RecipePhotoFindManyArgsSchema:()=>CK,RecipePhotoFindUniqueArgsSchema:()=>Pmt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>Umt,RecipePhotoGroupByArgsSchema:()=>Tmt,RecipePhotoIncludeSchema:()=>Zs,RecipePhotoListRelationFilterSchema:()=>q4,RecipePhotoMaxOrderByAggregateInputSchema:()=>QX,RecipePhotoMinOrderByAggregateInputSchema:()=>YX,RecipePhotoOrderByRelationAggregateInputSchema:()=>Lnt,RecipePhotoOrderByWithAggregationInputSchema:()=>BL,RecipePhotoOrderByWithRelationInputSchema:()=>$m,RecipePhotoScalarFieldEnumSchema:()=>rg,RecipePhotoScalarWhereInputSchema:()=>fp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>fC,RecipePhotoSchema:()=>gdt,RecipePhotoSelectSchema:()=>vs,RecipePhotoSumOrderByAggregateInputSchema:()=>GX,RecipePhotoUncheckedCreateInputSchema:()=>W0,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Xo,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Ty,RecipePhotoUncheckedUpdateInputSchema:()=>k0,RecipePhotoUncheckedUpdateManyInputSchema:()=>x0,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>kyt,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Hn,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>bJ,RecipePhotoUpdateArgsSchema:()=>kSt,RecipePhotoUpdateInputSchema:()=>R0,RecipePhotoUpdateManyAndReturnArgsSchema:()=>jSt,RecipePhotoUpdateManyArgsSchema:()=>xSt,RecipePhotoUpdateManyMutationInputSchema:()=>UN,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>$k,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Pn,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Gk,RecipePhotoUpdateWithoutRecipeInputSchema:()=>mJ,RecipePhotoUpsertArgsSchema:()=>PSt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Yk,RecipePhotoWhereInputSchema:()=>ta,RecipePhotoWhereUniqueInputSchema:()=>ze,RecipeScalarFieldEnumSchema:()=>Eg,RecipeScalarRelationFilterSchema:()=>ye,RecipeScalarWhereInputSchema:()=>ie,RecipeScalarWhereWithAggregatesInputSchema:()=>hA,RecipeSchema:()=>ezt,RecipeSelectSchema:()=>Gd,RecipeStatsAggregateArgsSchema:()=>ACt,RecipeStatsArgsSchema:()=>JQ,RecipeStatsAvgOrderByAggregateInputSchema:()=>Nat,RecipeStatsCountOrderByAggregateInputSchema:()=>wat,RecipeStatsCreateArgsSchema:()=>Dxt,RecipeStatsCreateInputSchema:()=>v9,RecipeStatsCreateManyAndReturnArgsSchema:()=>Lxt,RecipeStatsCreateManyArgsSchema:()=>Ext,RecipeStatsCreateManyInputSchema:()=>EP,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Zo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>XO,RecipeStatsCreateWithoutRecipeInputSchema:()=>KS,RecipeStatsDeleteArgsSchema:()=>Vxt,RecipeStatsDeleteManyArgsSchema:()=>Gxt,RecipeStatsFindFirstArgsSchema:()=>ICt,RecipeStatsFindFirstOrThrowArgsSchema:()=>gCt,RecipeStatsFindManyArgsSchema:()=>CCt,RecipeStatsFindUniqueArgsSchema:()=>TCt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>PCt,RecipeStatsGroupByArgsSchema:()=>SCt,RecipeStatsIncludeSchema:()=>uz,RecipeStatsMaxOrderByAggregateInputSchema:()=>Bat,RecipeStatsMinOrderByAggregateInputSchema:()=>qat,RecipeStatsNullableScalarRelationFilterSchema:()=>F4,RecipeStatsOrderByWithAggregationInputSchema:()=>kV,RecipeStatsOrderByWithRelationInputSchema:()=>fm,RecipeStatsScalarFieldEnumSchema:()=>Jg,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>UA,RecipeStatsSchema:()=>czt,RecipeStatsSelectSchema:()=>yz,RecipeStatsSumOrderByAggregateInputSchema:()=>Fat,RecipeStatsUncheckedCreateInputSchema:()=>O9,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>tn,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>XS,RecipeStatsUncheckedUpdateInputSchema:()=>w9,RecipeStatsUncheckedUpdateManyInputSchema:()=>B9,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Qn,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>lf,RecipeStatsUpdateArgsSchema:()=>Hxt,RecipeStatsUpdateInputSchema:()=>f9,RecipeStatsUpdateManyAndReturnArgsSchema:()=>Yxt,RecipeStatsUpdateManyArgsSchema:()=>Qxt,RecipeStatsUpdateManyMutationInputSchema:()=>N9,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Un,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>o3,RecipeStatsUpdateWithoutRecipeInputSchema:()=>af,RecipeStatsUpsertArgsSchema:()=>_xt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>e3,RecipeStatsWhereInputSchema:()=>Be,RecipeStatsWhereUniqueInputSchema:()=>Bl,RecipeStorageAggregateArgsSchema:()=>bmt,RecipeStorageArgsSchema:()=>AQ,RecipeStorageAvgOrderByAggregateInputSchema:()=>DX,RecipeStorageCountOrderByAggregateInputSchema:()=>FX,RecipeStorageCreateArgsSchema:()=>zSt,RecipeStorageCreateInputSchema:()=>g0,RecipeStorageCreateManyAndReturnArgsSchema:()=>hSt,RecipeStorageCreateManyArgsSchema:()=>bSt,RecipeStorageCreateManyInputSchema:()=>KT,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>jo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>JO,RecipeStorageCreateWithoutRecipeInputSchema:()=>$S,RecipeStorageDeleteArgsSchema:()=>ISt,RecipeStorageDeleteManyArgsSchema:()=>SSt,RecipeStorageFindFirstArgsSchema:()=>dmt,RecipeStorageFindFirstOrThrowArgsSchema:()=>zmt,RecipeStorageFindManyArgsSchema:()=>mmt,RecipeStorageFindUniqueArgsSchema:()=>Imt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>gmt,RecipeStorageGroupByArgsSchema:()=>hmt,RecipeStorageIncludeSchema:()=>js,RecipeStorageMaxOrderByAggregateInputSchema:()=>_X,RecipeStorageMinOrderByAggregateInputSchema:()=>EX,RecipeStorageNullableScalarRelationFilterSchema:()=>B4,RecipeStorageOrderByWithAggregationInputSchema:()=>NL,RecipeStorageOrderByWithRelationInputSchema:()=>Um,RecipeStorageScalarFieldEnumSchema:()=>lg,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>OC,RecipeStorageSchema:()=>Idt,RecipeStorageSelectSchema:()=>Ms,RecipeStorageSumOrderByAggregateInputSchema:()=>LX,RecipeStorageUncheckedCreateInputSchema:()=>C0,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Ko,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>JS,RecipeStorageUncheckedUpdateInputSchema:()=>S0,RecipeStorageUncheckedUpdateManyInputSchema:()=>P0,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Vn,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>nf,RecipeStorageUpdateArgsSchema:()=>gSt,RecipeStorageUpdateInputSchema:()=>A0,RecipeStorageUpdateManyAndReturnArgsSchema:()=>ASt,RecipeStorageUpdateManyArgsSchema:()=>CSt,RecipeStorageUpdateManyMutationInputSchema:()=>T0,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Tn,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>t3,RecipeStorageUpdateWithoutRecipeInputSchema:()=>of,RecipeStorageUpsertArgsSchema:()=>mSt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>X6,RecipeStorageWhereInputSchema:()=>Ne,RecipeStorageWhereUniqueInputSchema:()=>Nl,RecipeSumOrderByAggregateInputSchema:()=>Gnt,RecipeTagAggregateArgsSchema:()=>bht,RecipeTagArgsSchema:()=>Ozt,RecipeTagAvgOrderByAggregateInputSchema:()=>fet,RecipeTagCountOrderByAggregateInputSchema:()=>Oet,RecipeTagCountOutputTypeArgsSchema:()=>vQ,RecipeTagCountOutputTypeSelectSchema:()=>yX,RecipeTagCreateArgsSchema:()=>zUt,RecipeTagCreateInputSchema:()=>oG,RecipeTagCreateManyAndReturnArgsSchema:()=>hUt,RecipeTagCreateManyArgsSchema:()=>bUt,RecipeTagCreateManyInputSchema:()=>bP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>Ao,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>fh,RecipeTagCreateWithoutRecipesInputSchema:()=>ly,RecipeTagDeleteArgsSchema:()=>IUt,RecipeTagDeleteManyArgsSchema:()=>SUt,RecipeTagFindFirstArgsSchema:()=>zht,RecipeTagFindFirstOrThrowArgsSchema:()=>mht,RecipeTagFindManyArgsSchema:()=>xK,RecipeTagFindUniqueArgsSchema:()=>Iht,RecipeTagFindUniqueOrThrowArgsSchema:()=>ght,RecipeTagGroupByArgsSchema:()=>hht,RecipeTagIncludeSchema:()=>sd,RecipeTagListRelationFilterSchema:()=>Z4,RecipeTagMaxOrderByAggregateInputSchema:()=>wet,RecipeTagMinOrderByAggregateInputSchema:()=>Net,RecipeTagOrderByRelationAggregateInputSchema:()=>qnt,RecipeTagOrderByWithAggregationInputSchema:()=>eV,RecipeTagOrderByWithRelationInputSchema:()=>lb,RecipeTagScalarFieldEnumSchema:()=>Pg,RecipeTagScalarWhereInputSchema:()=>jp,RecipeTagScalarWhereWithAggregatesInputSchema:()=>KC,RecipeTagSchema:()=>wdt,RecipeTagSelectSchema:()=>dd,RecipeTagSumOrderByAggregateInputSchema:()=>Bet,RecipeTagUncheckedCreateInputSchema:()=>nG,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Eo,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>ry,RecipeTagUncheckedUpdateInputSchema:()=>iG,RecipeTagUncheckedUpdateManyInputSchema:()=>lG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>Cyt,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>wn,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>tJ,RecipeTagUpdateArgsSchema:()=>gUt,RecipeTagUpdateInputSchema:()=>aG,RecipeTagUpdateManyAndReturnArgsSchema:()=>AUt,RecipeTagUpdateManyArgsSchema:()=>CUt,RecipeTagUpdateManyMutationInputSchema:()=>ON,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>Wk,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>zn,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Uk,RecipeTagUpdateWithoutRecipesInputSchema:()=>X7,RecipeTagUpsertArgsSchema:()=>mUt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Pk,RecipeTagWhereInputSchema:()=>ua,RecipeTagWhereUniqueInputSchema:()=>ge,RecipeTemperatureAggregateArgsSchema:()=>kmt,RecipeTemperatureArgsSchema:()=>Uzt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>KX,RecipeTemperatureCountOrderByAggregateInputSchema:()=>JX,RecipeTemperatureCreateArgsSchema:()=>ZSt,RecipeTemperatureCreateInputSchema:()=>j0,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>fSt,RecipeTemperatureCreateManyArgsSchema:()=>OSt,RecipeTemperatureCreateManyInputSchema:()=>tP,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>HO,RecipeTemperatureCreateManyRecipeInputSchema:()=>HH,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>qh,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>zy,RecipeTemperatureDeleteArgsSchema:()=>wSt,RecipeTemperatureDeleteManyArgsSchema:()=>FSt,RecipeTemperatureFindFirstArgsSchema:()=>Wmt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>Rmt,RecipeTemperatureFindManyArgsSchema:()=>AK,RecipeTemperatureFindUniqueArgsSchema:()=>jmt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Mmt,RecipeTemperatureGroupByArgsSchema:()=>xmt,RecipeTemperatureIncludeSchema:()=>Os,RecipeTemperatureListRelationFilterSchema:()=>v4,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>XX,RecipeTemperatureMinOrderByAggregateInputSchema:()=>ttt,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>Fnt,RecipeTemperatureOrderByWithAggregationInputSchema:()=>qL,RecipeTemperatureOrderByWithRelationInputSchema:()=>Jm,RecipeTemperatureScalarFieldEnumSchema:()=>pg,RecipeTemperatureScalarWhereInputSchema:()=>Mp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>wC,RecipeTemperatureSchema:()=>Cdt,RecipeTemperatureSelectSchema:()=>fs,RecipeTemperatureSumOrderByAggregateInputSchema:()=>ett,RecipeTemperatureUncheckedCreateInputSchema:()=>M0,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>my,RecipeTemperatureUncheckedUpdateInputSchema:()=>v0,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>O0,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>Pyt,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fn,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>pJ,RecipeTemperatureUpdateArgsSchema:()=>NSt,RecipeTemperatureUpdateInputSchema:()=>Z0,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>qSt,RecipeTemperatureUpdateManyArgsSchema:()=>BSt,RecipeTemperatureUpdateManyMutationInputSchema:()=>WN,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>Bk,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>In,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Nk,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>rJ,RecipeTemperatureUpsertArgsSchema:()=>vSt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>wk,RecipeTemperatureWhereInputSchema:()=>ea,RecipeTemperatureWhereUniqueInputSchema:()=>me,RecipeUncheckedCreateInputSchema:()=>Y1,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>D2,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>dq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>$z,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>r5,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ar,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>Clt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>qu,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>wM,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>dc,RecipeUncheckedCreateWithoutEquipmentInputSchema:()=>dZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>Lw,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>bf,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>Sf,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>HM,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>kw,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>ds,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>OM,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>FM,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>is,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>Hw,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>bw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>dv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>Jf,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>qc,RecipeUncheckedCreateWithoutStorageInputSchema:()=>BM,RecipeUncheckedCreateWithoutTagsInputSchema:()=>hc,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>_M,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>eZ,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>Uv,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>LM,RecipeUncheckedUpdateInputSchema:()=>$1,RecipeUncheckedUpdateManyInputSchema:()=>J1,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>cyt,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>L2,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Tut,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>gq,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>$yt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>zm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>Hyt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>y5,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>wut,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>Uut,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>Slt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>Z7,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>sD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>l8,RecipeUncheckedUpdateWithoutEquipmentInputSchema:()=>BD,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>WL,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>IE,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>PE,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>SD,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>IL,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>lK,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>uD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>bD,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>KJ,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>kL,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>pL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>Z_,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>YE,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>Z8,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>zD,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>u8,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>ID,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>jD,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>L_,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>CD,RecipeUpdateArgsSchema:()=>kkt,RecipeUpdateInputSchema:()=>G1,RecipeUpdateManyAndReturnArgsSchema:()=>jkt,RecipeUpdateManyArgsSchema:()=>xkt,RecipeUpdateManyMutationInputSchema:()=>gI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>QR,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>fU,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>pj,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>$x,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>CW,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>DU,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>_2,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>bq,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>lm,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>c5,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>Ir,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>Alt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>llt,RecipeUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>wB,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>Llt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>oF,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>cF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>blt,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>b5,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>alt,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>ult,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>Hlt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>JF,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>Vq,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Blt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>plt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>slt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>BT,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>zlt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>Jq,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>$lt,RecipeUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Srt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>uut,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>oct,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>pct,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>lrt,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>out,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>Ylt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>trt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>sut,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Hct,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>bpt,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Zct,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>Klt,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>ort,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>zrt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>kpt,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>art,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>HR,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>OU,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>rj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Gx,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>gW,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>FU,RecipeUpdateWithoutCookBookInputSchema:()=>M7,RecipeUpdateWithoutCriticalPointsInputSchema:()=>yD,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>i8,RecipeUpdateWithoutEquipmentInputSchema:()=>ND,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>UL,RecipeUpdateWithoutIngredientsInputSchema:()=>hE,RecipeUpdateWithoutInstructionsInputSchema:()=>TE,RecipeUpdateWithoutLaborCostsInputSchema:()=>AD,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>hL,RecipeUpdateWithoutMenuItemsInputSchema:()=>iK,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>cD,RecipeUpdateWithoutPhotosInputSchema:()=>mD,RecipeUpdateWithoutPrepBoardsInputSchema:()=>JJ,RecipeUpdateWithoutPrepHistoryInputSchema:()=>RL,RecipeUpdateWithoutPrepItemsInputSchema:()=>rL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>M_,RecipeUpdateWithoutRecipeStatsInputSchema:()=>QE,RecipeUpdateWithoutRestaurantInputSchema:()=>M8,RecipeUpdateWithoutStorageInputSchema:()=>dD,RecipeUpdateWithoutTagsInputSchema:()=>c8,RecipeUpdateWithoutTemperaturesInputSchema:()=>hD,RecipeUpdateWithoutVersionsInputSchema:()=>xD,RecipeUpdateWithoutWithdrawalsInputSchema:()=>E_,RecipeUpdateWithoutYieldsInputSchema:()=>gD,RecipeUpdateimageUrlsInputSchema:()=>ut,RecipeUpsertArgsSchema:()=>Pkt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>VR,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>vU,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>lj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>Yx,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>IW,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>qU,RecipeUpsertWithoutCriticalPointsInputSchema:()=>Glt,RecipeUpsertWithoutEquipmentInputSchema:()=>Art,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>cut,RecipeUpsertWithoutIngredientsInputSchema:()=>ect,RecipeUpsertWithoutInstructionsInputSchema:()=>rct,RecipeUpsertWithoutLaborCostsInputSchema:()=>irt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>eut,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>Qlt,RecipeUpsertWithoutPhotosInputSchema:()=>Xlt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>yut,RecipeUpsertWithoutPrepItemsInputSchema:()=>Vct,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>mpt,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Mct,RecipeUpsertWithoutStorageInputSchema:()=>Jlt,RecipeUpsertWithoutTemperaturesInputSchema:()=>ert,RecipeUpsertWithoutVersionsInputSchema:()=>drt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>Rpt,RecipeUpsertWithoutYieldsInputSchema:()=>nrt,RecipeVersionAggregateArgsSchema:()=>abt,RecipeVersionArgsSchema:()=>kj,RecipeVersionAvgOrderByAggregateInputSchema:()=>Ttt,RecipeVersionCountOrderByAggregateInputSchema:()=>Stt,RecipeVersionCountOutputTypeArgsSchema:()=>PQ,RecipeVersionCountOutputTypeSelectSchema:()=>iX,RecipeVersionCreateArgsSchema:()=>TTt,RecipeVersionCreateInputSchema:()=>eY,RecipeVersionCreateManyAndReturnArgsSchema:()=>WTt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>PO,RecipeVersionCreateManyApprovedByInputSchema:()=>ZH,RecipeVersionCreateManyArgsSchema:()=>UTt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>TO,RecipeVersionCreateManyCreatedByInputSchema:()=>MH,RecipeVersionCreateManyInputSchema:()=>iP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>LO,RecipeVersionCreateManyRecipeInputSchema:()=>LH,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>li,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>ii,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>So,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>eF,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>lF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Ah,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Ch,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>l3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>p3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>wh,RecipeVersionCreateWithoutApprovedByInputSchema:()=>Zu,RecipeVersionCreateWithoutCreatedByInputSchema:()=>ju,RecipeVersionCreateWithoutIngredientsInputSchema:()=>gf,RecipeVersionCreateWithoutInstructionsInputSchema:()=>Tf,RecipeVersionCreateWithoutRecipeInputSchema:()=>py,RecipeVersionDeleteArgsSchema:()=>RTt,RecipeVersionDeleteManyArgsSchema:()=>MTt,RecipeVersionFindFirstArgsSchema:()=>obt,RecipeVersionFindFirstOrThrowArgsSchema:()=>nbt,RecipeVersionFindManyArgsSchema:()=>yS,RecipeVersionFindUniqueArgsSchema:()=>lbt,RecipeVersionFindUniqueOrThrowArgsSchema:()=>rbt,RecipeVersionGroupByArgsSchema:()=>ibt,RecipeVersionIncludeSchema:()=>Ls,RecipeVersionListRelationFilterSchema:()=>qA,RecipeVersionMaxOrderByAggregateInputSchema:()=>Ptt,RecipeVersionMinOrderByAggregateInputSchema:()=>Utt,RecipeVersionNullableScalarRelationFilterSchema:()=>hM,RecipeVersionOrderByRelationAggregateInputSchema:()=>TN,RecipeVersionOrderByWithAggregationInputSchema:()=>LL,RecipeVersionOrderByWithRelationInputSchema:()=>Fp,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>bN,RecipeVersionScalarFieldEnumSchema:()=>dg,RecipeVersionScalarWhereInputSchema:()=>_a,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>DC,RecipeVersionSchema:()=>Udt,RecipeVersionSelectSchema:()=>Vs,RecipeVersionSumOrderByAggregateInputSchema:()=>Wtt,RecipeVersionUncheckedCreateInputSchema:()=>oY,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>Pi,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ti,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>vu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>Mu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>Cf,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>Pf,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>cy,RecipeVersionUncheckedUpdateInputSchema:()=>aY,RecipeVersionUncheckedUpdateManyInputSchema:()=>iY,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>lyt,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>pl,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>iyt,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>rl,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ayt,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Nn,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>W7,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>P7,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>SE,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>WE,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>oJ,RecipeVersionUpdateArgsSchema:()=>kTt,RecipeVersionUpdateInputSchema:()=>nY,RecipeVersionUpdateManyAndReturnArgsSchema:()=>jTt,RecipeVersionUpdateManyArgsSchema:()=>xTt,RecipeVersionUpdateManyMutationInputSchema:()=>CT,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>BR,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>fR,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>xk,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Li,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Ei,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>mn,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>aF,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>uF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>lct,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>uct,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>NR,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>OR,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>kk,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>U7,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>T7,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>AE,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>UE,RecipeVersionUpdateWithoutRecipeInputSchema:()=>eJ,RecipeVersionUpsertArgsSchema:()=>PTt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>wR,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>vR,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Rk,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>ict,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>cct,RecipeVersionWhereInputSchema:()=>ne,RecipeVersionWhereUniqueInputSchema:()=>w,RecipeWhereInputSchema:()=>v,RecipeWhereUniqueInputSchema:()=>C,RecipeYieldAggregateArgsSchema:()=>Omt,RecipeYieldArgsSchema:()=>Wzt,RecipeYieldAvgOrderByAggregateInputSchema:()=>ntt,RecipeYieldCountOrderByAggregateInputSchema:()=>ott,RecipeYieldCreateArgsSchema:()=>DSt,RecipeYieldCreateInputSchema:()=>f0,RecipeYieldCreateManyAndReturnArgsSchema:()=>LSt,RecipeYieldCreateManyArgsSchema:()=>ESt,RecipeYieldCreateManyInputSchema:()=>eP,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>QO,RecipeYieldCreateManyRecipeInputSchema:()=>QH,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>Wo,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>Fh,RecipeYieldCreateWithoutRecipeInputSchema:()=>by,RecipeYieldDeleteArgsSchema:()=>VSt,RecipeYieldDeleteManyArgsSchema:()=>GSt,RecipeYieldFindFirstArgsSchema:()=>Zmt,RecipeYieldFindFirstOrThrowArgsSchema:()=>vmt,RecipeYieldFindManyArgsSchema:()=>SK,RecipeYieldFindUniqueArgsSchema:()=>wmt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Nmt,RecipeYieldGroupByArgsSchema:()=>fmt,RecipeYieldIncludeSchema:()=>ws,RecipeYieldListRelationFilterSchema:()=>O4,RecipeYieldMaxOrderByAggregateInputSchema:()=>att,RecipeYieldMinOrderByAggregateInputSchema:()=>itt,RecipeYieldOrderByRelationAggregateInputSchema:()=>Dnt,RecipeYieldOrderByWithAggregationInputSchema:()=>FL,RecipeYieldOrderByWithRelationInputSchema:()=>Km,RecipeYieldScalarFieldEnumSchema:()=>cg,RecipeYieldScalarWhereInputSchema:()=>Zp,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>NC,RecipeYieldSchema:()=>Adt,RecipeYieldSelectSchema:()=>Ns,RecipeYieldSumOrderByAggregateInputSchema:()=>ltt,RecipeYieldUncheckedCreateInputSchema:()=>w0,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Yo,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>hy,RecipeYieldUncheckedUpdateInputSchema:()=>B0,RecipeYieldUncheckedUpdateManyInputSchema:()=>q0,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Uyt,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Dn,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>uJ,RecipeYieldUpdateArgsSchema:()=>HSt,RecipeYieldUpdateInputSchema:()=>N0,RecipeYieldUpdateManyAndReturnArgsSchema:()=>YSt,RecipeYieldUpdateManyArgsSchema:()=>QSt,RecipeYieldUpdateManyMutationInputSchema:()=>RN,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>Dk,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>gn,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Fk,RecipeYieldUpdateWithoutRecipeInputSchema:()=>cJ,RecipeYieldUpsertArgsSchema:()=>_St,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>qk,RecipeYieldWhereInputSchema:()=>oa,RecipeYieldWhereUniqueInputSchema:()=>be,RestaurantAggregateArgsSchema:()=>ogt,RestaurantArgsSchema:()=>eo,RestaurantAvgOrderByAggregateInputSchema:()=>ynt,RestaurantCountOrderByAggregateInputSchema:()=>unt,RestaurantCountOutputTypeArgsSchema:()=>FQ,RestaurantCountOutputTypeSelectSchema:()=>bX,RestaurantCreateArgsSchema:()=>DRt,RestaurantCreateInputSchema:()=>R1,RestaurantCreateManyAndReturnArgsSchema:()=>LRt,RestaurantCreateManyArgsSchema:()=>ERt,RestaurantCreateManyInputSchema:()=>MP,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>fv,RestaurantCreateManyOrganizationInputSchema:()=>tH,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>M2,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>F2,RestaurantCreateNestedOneWithoutEquipmentInputSchema:()=>TB,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>gM,RestaurantCreateNestedOneWithoutLeftoverItemInputSchema:()=>Aq,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>XF,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>RF,RestaurantCreateNestedOneWithoutProductionPlanInputSchema:()=>vq,RestaurantCreateNestedOneWithoutQualityChecklistInputSchema:()=>qB,RestaurantCreateNestedOneWithoutQustomerFeedbackInputSchema:()=>nq,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>po,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>n2,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>La,RestaurantCreateNestedOneWithoutWasteRecordInputSchema:()=>Rq,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>Y6,RestaurantCreateOrConnectWithoutEquipmentInputSchema:()=>i6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>D6,RestaurantCreateOrConnectWithoutLeftoverItemInputSchema:()=>A6,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>x3,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>C3,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Eb,RestaurantCreateOrConnectWithoutProductionPlanInputSchema:()=>R6,RestaurantCreateOrConnectWithoutQualityChecklistInputSchema:()=>u6,RestaurantCreateOrConnectWithoutQustomerFeedbackInputSchema:()=>I6,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>G6,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>X5,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>H6,RestaurantCreateOrConnectWithoutWasteRecordInputSchema:()=>P6,RestaurantCreateWithoutCookbooksInputSchema:()=>jO,RestaurantCreateWithoutEquipmentInputSchema:()=>pZ,RestaurantCreateWithoutInventoryInputSchema:()=>Nv,RestaurantCreateWithoutLeftoverItemInputSchema:()=>QZ,RestaurantCreateWithoutMenusInputSchema:()=>Aw,RestaurantCreateWithoutOrdersInputSchema:()=>Kf,RestaurantCreateWithoutOrganizationInputSchema:()=>Sc,RestaurantCreateWithoutProductionPlanInputSchema:()=>iv,RestaurantCreateWithoutQualityChecklistInputSchema:()=>CZ,RestaurantCreateWithoutQustomerFeedbackInputSchema:()=>FZ,RestaurantCreateWithoutRecipesInputSchema:()=>ZO,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>QM,RestaurantCreateWithoutUsersInputSchema:()=>rO,RestaurantCreateWithoutWasteRecordInputSchema:()=>XZ,RestaurantDeleteArgsSchema:()=>VRt,RestaurantDeleteManyArgsSchema:()=>GRt,RestaurantFindFirstArgsSchema:()=>tgt,RestaurantFindFirstOrThrowArgsSchema:()=>egt,RestaurantFindManyArgsSchema:()=>OK,RestaurantFindUniqueArgsSchema:()=>agt,RestaurantFindUniqueOrThrowArgsSchema:()=>igt,RestaurantGroupByArgsSchema:()=>ngt,RestaurantIncludeSchema:()=>Fd,RestaurantListRelationFilterSchema:()=>y4,RestaurantMaxOrderByAggregateInputSchema:()=>snt,RestaurantMinOrderByAggregateInputSchema:()=>dnt,RestaurantNullableScalarRelationFilterSchema:()=>sM,RestaurantOrderByRelationAggregateInputSchema:()=>Yot,RestaurantOrderByWithAggregationInputSchema:()=>bV,RestaurantOrderByWithRelationInputSchema:()=>Ma,RestaurantScalarFieldEnumSchema:()=>qg,RestaurantScalarRelationFilterSchema:()=>$n,RestaurantScalarWhereInputSchema:()=>hp,RestaurantScalarWhereWithAggregatesInputSchema:()=>dA,RestaurantSchema:()=>Jdt,RestaurantSelectSchema:()=>Dd,RestaurantSumOrderByAggregateInputSchema:()=>znt,RestaurantUncheckedCreateInputSchema:()=>k1,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>v2,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>MO,RestaurantUncheckedCreateWithoutEquipmentInputSchema:()=>cZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>Bv,RestaurantUncheckedCreateWithoutLeftoverItemInputSchema:()=>YZ,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>Sw,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>Xf,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>Tc,RestaurantUncheckedCreateWithoutProductionPlanInputSchema:()=>lv,RestaurantUncheckedCreateWithoutQualityChecklistInputSchema:()=>AZ,RestaurantUncheckedCreateWithoutQustomerFeedbackInputSchema:()=>DZ,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>vO,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>YM,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>pO,RestaurantUncheckedCreateWithoutWasteRecordInputSchema:()=>tv,RestaurantUncheckedUpdateInputSchema:()=>j1,RestaurantUncheckedUpdateManyInputSchema:()=>M1,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>kut,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>N2,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>uE,RestaurantUncheckedUpdateWithoutEquipmentInputSchema:()=>wD,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>tE,RestaurantUncheckedUpdateWithoutLeftoverItemInputSchema:()=>z_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>zL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>$E,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>b8,RestaurantUncheckedUpdateWithoutProductionPlanInputSchema:()=>W_,RestaurantUncheckedUpdateWithoutQualityChecklistInputSchema:()=>HD,RestaurantUncheckedUpdateWithoutQustomerFeedbackInputSchema:()=>p_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>sE,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>PD,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>lE,RestaurantUncheckedUpdateWithoutWasteRecordInputSchema:()=>C_,RestaurantUpdateArgsSchema:()=>HRt,RestaurantUpdateInputSchema:()=>x1,RestaurantUpdateManyAndReturnArgsSchema:()=>YRt,RestaurantUpdateManyArgsSchema:()=>QRt,RestaurantUpdateManyMutationInputSchema:()=>qN,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>$U,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>f2,RestaurantUpdateOneRequiredWithoutEquipmentNestedInputSchema:()=>kB,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>WM,RestaurantUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>Pq,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>aD,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>MF,RestaurantUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Nq,RestaurantUpdateOneRequiredWithoutQualityChecklistNestedInputSchema:()=>LB,RestaurantUpdateOneRequiredWithoutQustomerFeedbackNestedInputSchema:()=>lq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>en,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>i2,RestaurantUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>jq,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>E2,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>ki,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>Ypt,RestaurantUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Crt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Bpt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>Krt,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>Kct,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Oct,RestaurantUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>upt,RestaurantUpdateToOneWithWhereWithoutQualityChecklistInputSchema:()=>jrt,RestaurantUpdateToOneWithWhereWithoutQustomerFeedbackInputSchema:()=>Hrt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>$pt,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>prt,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>Lpt,RestaurantUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>apt,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>GU,RestaurantUpdateWithoutCookbooksInputSchema:()=>cE,RestaurantUpdateWithoutEquipmentInputSchema:()=>fD,RestaurantUpdateWithoutInventoryInputSchema:()=>X_,RestaurantUpdateWithoutLeftoverItemInputSchema:()=>d_,RestaurantUpdateWithoutMenusInputSchema:()=>dL,RestaurantUpdateWithoutOrdersInputSchema:()=>GE,RestaurantUpdateWithoutOrganizationInputSchema:()=>m8,RestaurantUpdateWithoutProductionPlanInputSchema:()=>U_,RestaurantUpdateWithoutQualityChecklistInputSchema:()=>VD,RestaurantUpdateWithoutQustomerFeedbackInputSchema:()=>r_,RestaurantUpdateWithoutRecipesInputSchema:()=>yE,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>TD,RestaurantUpdateWithoutUsersInputSchema:()=>iE,RestaurantUpdateWithoutWasteRecordInputSchema:()=>g_,RestaurantUpsertArgsSchema:()=>_Rt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>YU,RestaurantUpsertWithoutCookbooksInputSchema:()=>Qpt,RestaurantUpsertWithoutEquipmentInputSchema:()=>grt,RestaurantUpsertWithoutInventoryInputSchema:()=>Npt,RestaurantUpsertWithoutLeftoverItemInputSchema:()=>Jrt,RestaurantUpsertWithoutMenusInputSchema:()=>Jct,RestaurantUpsertWithoutOrdersInputSchema:()=>vct,RestaurantUpsertWithoutProductionPlanInputSchema:()=>cpt,RestaurantUpsertWithoutQualityChecklistInputSchema:()=>xrt,RestaurantUpsertWithoutQustomerFeedbackInputSchema:()=>Vrt,RestaurantUpsertWithoutRecipesInputSchema:()=>Gpt,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>rrt,RestaurantUpsertWithoutUsersInputSchema:()=>Ept,RestaurantUpsertWithoutWasteRecordInputSchema:()=>npt,RestaurantWhereInputSchema:()=>N,RestaurantWhereUniqueInputSchema:()=>J,SalesTransactionsAggregateArgsSchema:()=>Hmt,SalesTransactionsArgsSchema:()=>kzt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>dtt,SalesTransactionsCountOrderByAggregateInputSchema:()=>stt,SalesTransactionsCreateArgsSchema:()=>iTt,SalesTransactionsCreateInputSchema:()=>V0,SalesTransactionsCreateManyAndReturnArgsSchema:()=>pTt,SalesTransactionsCreateManyArgsSchema:()=>rTt,SalesTransactionsCreateManyInputSchema:()=>nP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>ww,SalesTransactionsCreateManyMenuItemInputSchema:()=>hQ,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>$v,SalesTransactionsCreateManyRestaurantInputSchema:()=>uH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Hz,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>Ql,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>zI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>Xb,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>Is,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>_c,SalesTransactionsDeleteArgsSchema:()=>cTt,SalesTransactionsDeleteManyArgsSchema:()=>dTt,SalesTransactionsFindFirstArgsSchema:()=>Lmt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>Vmt,SalesTransactionsFindManyArgsSchema:()=>Qw,SalesTransactionsFindUniqueArgsSchema:()=>Ymt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>Gmt,SalesTransactionsGroupByArgsSchema:()=>Qmt,SalesTransactionsIncludeSchema:()=>Fs,SalesTransactionsListRelationFilterSchema:()=>uM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>ztt,SalesTransactionsMinOrderByAggregateInputSchema:()=>mtt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>A4,SalesTransactionsOrderByWithAggregationInputSchema:()=>_L,SalesTransactionsOrderByWithRelationInputSchema:()=>tb,SalesTransactionsScalarFieldEnumSchema:()=>yg,SalesTransactionsScalarWhereInputSchema:()=>Tl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>qC,SalesTransactionsSchema:()=>Tdt,SalesTransactionsSelectSchema:()=>Ds,SalesTransactionsSumOrderByAggregateInputSchema:()=>btt,SalesTransactionsUncheckedCreateInputSchema:()=>H0,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>tm,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>gs,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Ec,SalesTransactionsUncheckedUpdateInputSchema:()=>Y0,SalesTransactionsUncheckedUpdateManyInputSchema:()=>G0,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>Xyt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Im,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>But,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>sK,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>w8,SalesTransactionsUpdateArgsSchema:()=>uTt,SalesTransactionsUpdateInputSchema:()=>Q0,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>sTt,SalesTransactionsUpdateManyArgsSchema:()=>yTt,SalesTransactionsUpdateManyMutationInputSchema:()=>Oj,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>hj,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>WW,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>um,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>bj,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>UW,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>yK,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>f8,SalesTransactionsUpsertArgsSchema:()=>lTt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>mj,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>PW,SalesTransactionsWhereInputSchema:()=>aa,SalesTransactionsWhereUniqueInputSchema:()=>zt,SchedulingConstraintAggregateArgsSchema:()=>aIt,SchedulingConstraintArgsSchema:()=>Fzt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>Iot,SchedulingConstraintCountOrderByAggregateInputSchema:()=>hot,SchedulingConstraintCreateArgsSchema:()=>TWt,SchedulingConstraintCreateInputSchema:()=>NG,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>WWt,SchedulingConstraintCreateManyArgsSchema:()=>UWt,SchedulingConstraintCreateManyInputSchema:()=>TP,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>gO,SchedulingConstraintCreateManyUserInputSchema:()=>RH,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>ei,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>bh,SchedulingConstraintCreateWithoutUserInputSchema:()=>Su,SchedulingConstraintDeleteArgsSchema:()=>RWt,SchedulingConstraintDeleteManyArgsSchema:()=>MWt,SchedulingConstraintFindFirstArgsSchema:()=>oIt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>nIt,SchedulingConstraintFindManyArgsSchema:()=>ZK,SchedulingConstraintFindUniqueArgsSchema:()=>lIt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>rIt,SchedulingConstraintGroupByArgsSchema:()=>iIt,SchedulingConstraintIncludeSchema:()=>Wd,SchedulingConstraintListRelationFilterSchema:()=>R4,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>got,SchedulingConstraintMinOrderByAggregateInputSchema:()=>Cot,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>gnt,SchedulingConstraintOrderByWithAggregationInputSchema:()=>pV,SchedulingConstraintOrderByWithRelationInputSchema:()=>sb,SchedulingConstraintScalarFieldEnumSchema:()=>Mg,SchedulingConstraintScalarWhereInputSchema:()=>Wp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>iA,SchedulingConstraintSchema:()=>Edt,SchedulingConstraintSelectSchema:()=>Rd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>Aot,SchedulingConstraintUncheckedCreateInputSchema:()=>BG,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>gi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>Tu,SchedulingConstraintUncheckedUpdateInputSchema:()=>FG,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>DG,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>eyt,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>nl,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>b7,SchedulingConstraintUpdateArgsSchema:()=>kWt,SchedulingConstraintUpdateInputSchema:()=>qG,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>jWt,SchedulingConstraintUpdateManyArgsSchema:()=>xWt,SchedulingConstraintUpdateManyMutationInputSchema:()=>NN,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>TR,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>qi,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>SR,SchedulingConstraintUpdateWithoutUserInputSchema:()=>m7,SchedulingConstraintUpsertArgsSchema:()=>PWt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>AR,SchedulingConstraintWhereInputSchema:()=>ba,SchedulingConstraintWhereUniqueInputSchema:()=>Se,SessionAggregateArgsSchema:()=>zgt,SessionArgsSchema:()=>Lzt,SessionAvgOrderByAggregateInputSchema:()=>Rnt,SessionCountOrderByAggregateInputSchema:()=>Wnt,SessionCreateArgsSchema:()=>ikt,SessionCreateInputSchema:()=>N1,SessionCreateManyAndReturnArgsSchema:()=>pkt,SessionCreateManyArgsSchema:()=>rkt,SessionCreateManyInputSchema:()=>vP,SessionCreateManyUserInputEnvelopeSchema:()=>sO,SessionCreateManyUserInputSchema:()=>CH,SessionCreateNestedManyWithoutUserInputSchema:()=>Ya,SessionCreateOrConnectWithoutUserInputSchema:()=>ch,SessionCreateWithoutUserInputSchema:()=>pu,SessionDeleteArgsSchema:()=>ckt,SessionDeleteManyArgsSchema:()=>dkt,SessionFindFirstArgsSchema:()=>sgt,SessionFindFirstOrThrowArgsSchema:()=>dgt,SessionFindManyArgsSchema:()=>fK,SessionFindUniqueArgsSchema:()=>bgt,SessionFindUniqueOrThrowArgsSchema:()=>hgt,SessionGroupByArgsSchema:()=>mgt,SessionIncludeSchema:()=>Ld,SessionListRelationFilterSchema:()=>P4,SessionMaxOrderByAggregateInputSchema:()=>knt,SessionMinOrderByAggregateInputSchema:()=>xnt,SessionOrderByRelationAggregateInputSchema:()=>bnt,SessionOrderByWithAggregationInputSchema:()=>IV,SessionOrderByWithRelationInputSchema:()=>hb,SessionScalarFieldEnumSchema:()=>Dg,SessionScalarWhereInputSchema:()=>Tp,SessionScalarWhereWithAggregatesInputSchema:()=>mA,SessionSchema:()=>Xdt,SessionSelectSchema:()=>Vd,SessionSumOrderByAggregateInputSchema:()=>jnt,SessionUncheckedCreateInputSchema:()=>B1,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>si,SessionUncheckedCreateWithoutUserInputSchema:()=>cu,SessionUncheckedUpdateInputSchema:()=>F1,SessionUncheckedUpdateManyInputSchema:()=>D1,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>Yut,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>$i,SessionUncheckedUpdateWithoutUserInputSchema:()=>o7,SessionUpdateArgsSchema:()=>ukt,SessionUpdateInputSchema:()=>q1,SessionUpdateManyAndReturnArgsSchema:()=>skt,SessionUpdateManyArgsSchema:()=>ykt,SessionUpdateManyMutationInputSchema:()=>FN,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>oR,SessionUpdateManyWithoutUserNestedInputSchema:()=>Zi,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>eR,SessionUpdateWithoutUserInputSchema:()=>e7,SessionUpsertArgsSchema:()=>lkt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>tR,SessionWhereInputSchema:()=>Ca,SessionWhereUniqueInputSchema:()=>Pe,ShiftAggregateArgsSchema:()=>VCt,ShiftArgsSchema:()=>e0,ShiftAvgOrderByAggregateInputSchema:()=>iit,ShiftCountOrderByAggregateInputSchema:()=>ait,ShiftCountOutputTypeArgsSchema:()=>o0,ShiftCountOutputTypeSelectSchema:()=>WX,ShiftCreateArgsSchema:()=>Tjt,ShiftCreateInputSchema:()=>t$,ShiftCreateManyAndReturnArgsSchema:()=>Wjt,ShiftCreateManyArgsSchema:()=>Ujt,ShiftCreateManyInputSchema:()=>QP,ShiftCreateManyUserInputEnvelopeSchema:()=>cO,ShiftCreateManyUserInputSchema:()=>hH,ShiftCreateNestedManyWithoutUserInputSchema:()=>Va,ShiftCreateNestedOneWithoutShiftTaskInputSchema:()=>Tlt,ShiftCreateOrConnectWithoutShiftTaskInputSchema:()=>Z6,ShiftCreateOrConnectWithoutUserInputSchema:()=>lh,ShiftCreateWithoutShiftTaskInputSchema:()=>bv,ShiftCreateWithoutUserInputSchema:()=>ou,ShiftDeleteArgsSchema:()=>Rjt,ShiftDeleteManyArgsSchema:()=>Mjt,ShiftFindFirstArgsSchema:()=>ECt,ShiftFindFirstOrThrowArgsSchema:()=>LCt,ShiftFindManyArgsSchema:()=>BK,ShiftFindUniqueArgsSchema:()=>QCt,ShiftFindUniqueOrThrowArgsSchema:()=>YCt,ShiftGroupByArgsSchema:()=>HCt,ShiftIncludeSchema:()=>Iz,ShiftListRelationFilterSchema:()=>T4,ShiftMaxOrderByAggregateInputSchema:()=>lit,ShiftMinOrderByAggregateInputSchema:()=>rit,ShiftOrderByRelationAggregateInputSchema:()=>mnt,ShiftOrderByWithAggregationInputSchema:()=>ZV,ShiftOrderByWithRelationInputSchema:()=>Nm,ShiftScalarFieldEnumSchema:()=>eC,ShiftScalarRelationFilterSchema:()=>r4,ShiftScalarWhereInputSchema:()=>Sp,ShiftScalarWhereWithAggregatesInputSchema:()=>xA,ShiftSchema:()=>dzt,ShiftSelectSchema:()=>gz,ShiftStatusSchema:()=>Lt,ShiftSumOrderByAggregateInputSchema:()=>pit,ShiftTaskAggregateArgsSchema:()=>Hht,ShiftTaskArgsSchema:()=>Bzt,ShiftTaskAvgOrderByAggregateInputSchema:()=>lot,ShiftTaskCountOrderByAggregateInputSchema:()=>iot,ShiftTaskCreateArgsSchema:()=>iWt,ShiftTaskCreateInputSchema:()=>RG,ShiftTaskCreateManyAndReturnArgsSchema:()=>pWt,ShiftTaskCreateManyArgsSchema:()=>rWt,ShiftTaskCreateManyInputSchema:()=>AP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>yw,ShiftTaskCreateManyShiftInputSchema:()=>yQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>t5,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>lI,ShiftTaskCreateWithoutShiftInputSchema:()=>os,ShiftTaskDeleteArgsSchema:()=>cWt,ShiftTaskDeleteManyArgsSchema:()=>dWt,ShiftTaskFindFirstArgsSchema:()=>Lht,ShiftTaskFindFirstOrThrowArgsSchema:()=>Vht,ShiftTaskFindManyArgsSchema:()=>jK,ShiftTaskFindUniqueArgsSchema:()=>Yht,ShiftTaskFindUniqueOrThrowArgsSchema:()=>Ght,ShiftTaskGroupByArgsSchema:()=>Qht,ShiftTaskIncludeSchema:()=>Sd,ShiftTaskListRelationFilterSchema:()=>$4,ShiftTaskMaxOrderByAggregateInputSchema:()=>rot,ShiftTaskMinOrderByAggregateInputSchema:()=>pot,ShiftTaskOrderByRelationAggregateInputSchema:()=>nit,ShiftTaskOrderByWithAggregationInputSchema:()=>lV,ShiftTaskOrderByWithRelationInputSchema:()=>ub,ShiftTaskScalarFieldEnumSchema:()=>xg,ShiftTaskScalarWhereInputSchema:()=>Np,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>nA,ShiftTaskSchema:()=>Ddt,ShiftTaskSelectSchema:()=>Td,ShiftTaskSumOrderByAggregateInputSchema:()=>cot,ShiftTaskUncheckedCreateInputSchema:()=>kG,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>e5,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>ns,ShiftTaskUncheckedUpdateInputSchema:()=>jG,ShiftTaskUncheckedUpdateManyInputSchema:()=>MG,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>Vyt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>a5,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>$J,ShiftTaskUpdateArgsSchema:()=>uWt,ShiftTaskUpdateInputSchema:()=>xG,ShiftTaskUpdateManyAndReturnArgsSchema:()=>sWt,ShiftTaskUpdateManyArgsSchema:()=>yWt,ShiftTaskUpdateManyMutationInputSchema:()=>fN,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>Qx,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>n5,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>Hx,ShiftTaskUpdateWithoutShiftInputSchema:()=>GJ,ShiftTaskUpsertArgsSchema:()=>lWt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>Vx,ShiftTaskWhereInputSchema:()=>za,ShiftTaskWhereUniqueInputSchema:()=>Ce,ShiftUncheckedCreateInputSchema:()=>e$,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>ci,ShiftUncheckedCreateWithoutShiftTaskInputSchema:()=>hv,ShiftUncheckedCreateWithoutUserInputSchema:()=>nu,ShiftUncheckedUpdateInputSchema:()=>n$,ShiftUncheckedUpdateManyInputSchema:()=>a$,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>Vut,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Qi,ShiftUncheckedUpdateWithoutShiftTaskInputSchema:()=>w_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>$8,ShiftUpdateArgsSchema:()=>kjt,ShiftUpdateInputSchema:()=>o$,ShiftUpdateManyAndReturnArgsSchema:()=>jjt,ShiftUpdateManyArgsSchema:()=>xjt,ShiftUpdateManyMutationInputSchema:()=>EN,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>QW,ShiftUpdateManyWithoutUserNestedInputSchema:()=>xi,ShiftUpdateOneRequiredWithoutShiftTaskNestedInputSchema:()=>Plt,ShiftUpdateToOneWithWhereWithoutShiftTaskInputSchema:()=>Cpt,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>HW,ShiftUpdateWithoutShiftTaskInputSchema:()=>f_,ShiftUpdateWithoutUserInputSchema:()=>G8,ShiftUpsertArgsSchema:()=>Pjt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>VW,ShiftUpsertWithoutShiftTaskInputSchema:()=>gpt,ShiftWhereInputSchema:()=>Je,ShiftWhereUniqueInputSchema:()=>ee,SkillLevelSchema:()=>U,SortOrderInputSchema:()=>g,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>pCt,StockCountArgsSchema:()=>GQ,StockCountAvgOrderByAggregateInputSchema:()=>Wat,StockCountCountOrderByAggregateInputSchema:()=>Uat,StockCountCountOutputTypeArgsSchema:()=>$Q,StockCountCountOutputTypeSelectSchema:()=>TX,StockCountCreateArgsSchema:()=>Txt,StockCountCreateInputSchema:()=>T9,StockCountCreateManyAndReturnArgsSchema:()=>Wxt,StockCountCreateManyArgsSchema:()=>Uxt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>WO,StockCountCreateManyCreatedByInputSchema:()=>OH,StockCountCreateManyInputSchema:()=>DP,StockCountCreateManyInventoryInputEnvelopeSchema:()=>Dv,StockCountCreateManyInventoryInputSchema:()=>aH,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>pi,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>SM,StockCountCreateNestedOneWithoutItemsInputSchema:()=>V2,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>Th,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>Qb,StockCountCreateOrConnectWithoutItemsInputSchema:()=>h3,StockCountCreateWithoutCreatedByInputSchema:()=>wu,StockCountCreateWithoutInventoryInputSchema:()=>jc,StockCountCreateWithoutItemsInputSchema:()=>Hf,StockCountDeleteArgsSchema:()=>Rxt,StockCountDeleteManyArgsSchema:()=>Mxt,StockCountFindFirstArgsSchema:()=>lCt,StockCountFindFirstOrThrowArgsSchema:()=>rCt,StockCountFindManyArgsSchema:()=>nN,StockCountFindUniqueArgsSchema:()=>uCt,StockCountFindUniqueOrThrowArgsSchema:()=>yCt,StockCountGroupByArgsSchema:()=>cCt,StockCountIncludeSchema:()=>lz,StockCountItemAggregateArgsSchema:()=>zCt,StockCountItemArgsSchema:()=>Qzt,StockCountItemAvgOrderByAggregateInputSchema:()=>Zat,StockCountItemCountOrderByAggregateInputSchema:()=>Mat,StockCountItemCreateArgsSchema:()=>Zxt,StockCountItemCreateInputSchema:()=>k9,StockCountItemCreateManyAndReturnArgsSchema:()=>fxt,StockCountItemCreateManyArgsSchema:()=>Oxt,StockCountItemCreateManyInputSchema:()=>_P,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Of,StockCountItemCreateManyItemInputSchema:()=>lQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>Vf,StockCountItemCreateManyStockCountInputSchema:()=>rQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>vS,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>AF,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>tI,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>eI,StockCountItemCreateWithoutItemInputSchema:()=>Ly,StockCountItemCreateWithoutStockCountInputSchema:()=>Hy,StockCountItemDeleteArgsSchema:()=>wxt,StockCountItemDeleteManyArgsSchema:()=>Fxt,StockCountItemFindFirstArgsSchema:()=>sCt,StockCountItemFindFirstOrThrowArgsSchema:()=>dCt,StockCountItemFindManyArgsSchema:()=>aN,StockCountItemFindUniqueArgsSchema:()=>bCt,StockCountItemFindUniqueOrThrowArgsSchema:()=>hCt,StockCountItemGroupByArgsSchema:()=>mCt,StockCountItemIncludeSchema:()=>pz,StockCountItemListRelationFilterSchema:()=>IM,StockCountItemMaxOrderByAggregateInputSchema:()=>vat,StockCountItemMinOrderByAggregateInputSchema:()=>Oat,StockCountItemOrderByRelationAggregateInputSchema:()=>Q4,StockCountItemOrderByWithAggregationInputSchema:()=>RV,StockCountItemOrderByWithRelationInputSchema:()=>Cb,StockCountItemScalarFieldEnumSchema:()=>$g,StockCountItemScalarWhereInputSchema:()=>xl,StockCountItemScalarWhereWithAggregatesInputSchema:()=>PA,StockCountItemSchema:()=>pzt,StockCountItemSelectSchema:()=>cz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>AN,StockCountItemSumOrderByAggregateInputSchema:()=>fat,StockCountItemUncheckedCreateInputSchema:()=>x9,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>wS,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>SF,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>Vy,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>Qy,StockCountItemUncheckedUpdateInputSchema:()=>M9,StockCountItemUncheckedUpdateManyInputSchema:()=>Z9,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>qyt,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>VS,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>Fyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>WF,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>BJ,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>FJ,StockCountItemUpdateArgsSchema:()=>Nxt,StockCountItemUpdateInputSchema:()=>j9,StockCountItemUpdateManyAndReturnArgsSchema:()=>qxt,StockCountItemUpdateManyArgsSchema:()=>Bxt,StockCountItemUpdateManyMutationInputSchema:()=>Vj,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>xx,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>Zx,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>_S,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>UF,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>kx,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>Mx,StockCountItemUpdateWithoutItemInputSchema:()=>NJ,StockCountItemUpdateWithoutStockCountInputSchema:()=>qJ,StockCountItemUpsertArgsSchema:()=>vxt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>Rx,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>jx,StockCountItemWhereInputSchema:()=>Ta,StockCountItemWhereUniqueInputSchema:()=>It,StockCountListRelationFilterSchema:()=>rM,StockCountMaxOrderByAggregateInputSchema:()=>Rat,StockCountMinOrderByAggregateInputSchema:()=>kat,StockCountOrderByRelationAggregateInputSchema:()=>z4,StockCountOrderByWithAggregationInputSchema:()=>WV,StockCountOrderByWithRelationInputSchema:()=>Om,StockCountScalarFieldEnumSchema:()=>Gg,StockCountScalarRelationFilterSchema:()=>Y4,StockCountScalarWhereInputSchema:()=>Al,StockCountScalarWhereWithAggregatesInputSchema:()=>TA,StockCountSchema:()=>rzt,StockCountSelectSchema:()=>rz,StockCountSumOrderByAggregateInputSchema:()=>xat,StockCountUncheckedCreateInputSchema:()=>P9,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Wi,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>UM,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>Nu,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>Mc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>Qf,StockCountUncheckedUpdateInputSchema:()=>W9,StockCountUncheckedUpdateManyInputSchema:()=>R9,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>pyt,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ul,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Zut,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>ZM,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>j7,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>P8,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>LE,StockCountUpdateArgsSchema:()=>kxt,StockCountUpdateInputSchema:()=>U9,StockCountUpdateManyAndReturnArgsSchema:()=>jxt,StockCountUpdateManyArgsSchema:()=>xxt,StockCountUpdateManyMutationInputSchema:()=>Lj,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>LR,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>pW,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Hi,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>xM,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>Q2,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>kct,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>ER,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>rW,StockCountUpdateWithoutCreatedByInputSchema:()=>x7,StockCountUpdateWithoutInventoryInputSchema:()=>T8,StockCountUpdateWithoutItemsInputSchema:()=>EE,StockCountUpsertArgsSchema:()=>Pxt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>_R,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>lW,StockCountUpsertWithoutItemsInputSchema:()=>Rct,StockCountWhereInputSchema:()=>Ge,StockCountWhereUniqueInputSchema:()=>pt,StringFieldUpdateOperationsInputSchema:()=>a,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>dl,StringNullableWithAggregatesFilterSchema:()=>Ut,StringWithAggregatesFilterSchema:()=>st,SupplierPriceHistoryAggregateArgsSchema:()=>Kbt,SupplierPriceHistoryArgsSchema:()=>Zzt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>het,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>bet,SupplierPriceHistoryCreateArgsSchema:()=>DPt,SupplierPriceHistoryCreateInputSchema:()=>DY,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>LPt,SupplierPriceHistoryCreateManyArgsSchema:()=>EPt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>sf,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>oQ,SupplierPriceHistoryCreateManyInputSchema:()=>dP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>pw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>uQ,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>jI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>NF,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>$h,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>iI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>wy,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>ts,SupplierPriceHistoryDeleteArgsSchema:()=>VPt,SupplierPriceHistoryDeleteManyArgsSchema:()=>GPt,SupplierPriceHistoryFindFirstArgsSchema:()=>$bt,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>Jbt,SupplierPriceHistoryFindManyArgsSchema:()=>$w,SupplierPriceHistoryFindUniqueArgsSchema:()=>tht,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>eht,SupplierPriceHistoryGroupByArgsSchema:()=>Xbt,SupplierPriceHistoryIncludeSchema:()=>ld,SupplierPriceHistoryListRelationFilterSchema:()=>bM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>Iet,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>get,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>H4,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>KL,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>ab,SupplierPriceHistoryScalarFieldEnumSchema:()=>Ag,SupplierPriceHistoryScalarWhereInputSchema:()=>kl,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>GC,SupplierPriceHistorySchema:()=>vdt,SupplierPriceHistorySelectSchema:()=>rd,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>Cet,SupplierPriceHistoryUncheckedCreateInputSchema:()=>_Y,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>BI,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>FF,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>Ny,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>es,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>LY,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>VY,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>fyt,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>XI,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>Lyt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>HF,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>jJ,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>YJ,SupplierPriceHistoryUpdateArgsSchema:()=>HPt,SupplierPriceHistoryUpdateInputSchema:()=>EY,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>YPt,SupplierPriceHistoryUpdateManyArgsSchema:()=>QPt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>Nj,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>hx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>Lx,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>VI,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>EF,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>bx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>Ex,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>xJ,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>QJ,SupplierPriceHistoryUpsertArgsSchema:()=>_Pt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>mx,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>_x,SupplierPriceHistoryWhereInputSchema:()=>pa,SupplierPriceHistoryWhereUniqueInputSchema:()=>bt,TaskTypeSchema:()=>re,TransactionIsolationLevelSchema:()=>zdt,TransactionTypeSchema:()=>Mt,UserAggregateArgsSchema:()=>pgt,UserArgsSchema:()=>$t,UserAvgOrderByAggregateInputSchema:()=>Ant,UserCountOrderByAggregateInputSchema:()=>Cnt,UserCountOutputTypeArgsSchema:()=>DQ,UserCountOutputTypeSelectSchema:()=>hX,UserCreateArgsSchema:()=>$Rt,UserCreateInputSchema:()=>Z1,UserCreateManyAndReturnArgsSchema:()=>XRt,UserCreateManyArgsSchema:()=>KRt,UserCreateManyInputSchema:()=>ZP,UserCreateManyOrganizationInputEnvelopeSchema:()=>wv,UserCreateManyOrganizationInputSchema:()=>eH,UserCreateManyRestaurantInputEnvelopeSchema:()=>Lv,UserCreateManyRestaurantInputSchema:()=>iH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>Z2,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Dl,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>Ult,UserCreateNestedOneWithoutChecklistCompleteInputSchema:()=>$B,UserCreateNestedOneWithoutCustomerFeedbackInputSchema:()=>iq,UserCreateNestedOneWithoutInventoryTransactionInputSchema:()=>mF,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>jS,UserCreateNestedOneWithoutInventoryWithdrawalInputSchema:()=>Gq,UserCreateNestedOneWithoutLeftoverItemInputSchema:()=>Tq,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>qlt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>GF,UserCreateNestedOneWithoutProductionPlanInputSchema:()=>Oq,UserCreateNestedOneWithoutProductionPlanItemInputSchema:()=>Eq,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>fT,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>OT,UserCreateNestedOneWithoutSchedulingConstraintInputSchema:()=>Rlt,UserCreateNestedOneWithoutSessionsInputSchema:()=>flt,UserCreateNestedOneWithoutShiftsInputSchema:()=>X2,UserCreateNestedOneWithoutStockCountInputSchema:()=>CF,UserCreateNestedOneWithoutWasteRecordInputSchema:()=>xq,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>v6,UserCreateOrConnectWithoutChecklistCompleteInputSchema:()=>d6,UserCreateOrConnectWithoutCustomerFeedbackInputSchema:()=>C6,UserCreateOrConnectWithoutInventoryTransactionInputSchema:()=>z3,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>y3,UserCreateOrConnectWithoutInventoryWithdrawalInputSchema:()=>N6,UserCreateOrConnectWithoutLeftoverItemInputSchema:()=>T6,UserCreateOrConnectWithoutOrganizationInputSchema:()=>Lb,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>k3,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>R3,UserCreateOrConnectWithoutProductionPlanInputSchema:()=>k6,UserCreateOrConnectWithoutProductionPlanItemInputSchema:()=>M6,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>a6,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>n6,UserCreateOrConnectWithoutRestaurantInputSchema:()=>Yb,UserCreateOrConnectWithoutSchedulingConstraintInputSchema:()=>O6,UserCreateOrConnectWithoutSessionsInputSchema:()=>Q6,UserCreateOrConnectWithoutShiftsInputSchema:()=>P3,UserCreateOrConnectWithoutStockCountInputSchema:()=>b3,UserCreateOrConnectWithoutWasteRecordInputSchema:()=>W6,UserCreateWithoutAvailabilityInputSchema:()=>Iv,UserCreateWithoutChecklistCompleteInputSchema:()=>xZ,UserCreateWithoutCustomerFeedbackInputSchema:()=>LZ,UserCreateWithoutInventoryTransactionInputSchema:()=>qf,UserCreateWithoutInventoryUpdatesInputSchema:()=>jf,UserCreateWithoutInventoryWithdrawalInputSchema:()=>Wv,UserCreateWithoutLeftoverItemInputSchema:()=>JZ,UserCreateWithoutOrganizationInputSchema:()=>Pc,UserCreateWithoutPasswordResetsInputSchema:()=>gw,UserCreateWithoutPrepItemsInputSchema:()=>hw,UserCreateWithoutProductionPlanInputSchema:()=>rv,UserCreateWithoutProductionPlanItemInputSchema:()=>zv,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>lZ,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>aZ,UserCreateWithoutRestaurantInputSchema:()=>Zc,UserCreateWithoutSchedulingConstraintInputSchema:()=>Cv,UserCreateWithoutSessionsInputSchema:()=>RO,UserCreateWithoutShiftsInputSchema:()=>cw,UserCreateWithoutStockCountInputSchema:()=>Ef,UserCreateWithoutWasteRecordInputSchema:()=>nv,UserDeleteArgsSchema:()=>tkt,UserDeleteManyArgsSchema:()=>akt,UserFindFirstArgsSchema:()=>lgt,UserFindFirstOrThrowArgsSchema:()=>rgt,UserFindManyArgsSchema:()=>tN,UserFindUniqueArgsSchema:()=>ugt,UserFindUniqueOrThrowArgsSchema:()=>ygt,UserGroupByArgsSchema:()=>cgt,UserIncludeSchema:()=>_d,UserListRelationFilterSchema:()=>lM,UserMaxOrderByAggregateInputSchema:()=>Snt,UserMinOrderByAggregateInputSchema:()=>Tnt,UserNullableScalarRelationFilterSchema:()=>SI,UserOrderByRelationAggregateInputSchema:()=>s4,UserOrderByWithAggregationInputSchema:()=>hV,UserOrderByWithRelationInputSchema:()=>Xe,UserRoleSchema:()=>x,UserScalarFieldEnumSchema:()=>Fg,UserScalarRelationFilterSchema:()=>Fe,UserScalarWhereInputSchema:()=>Cl,UserScalarWhereWithAggregatesInputSchema:()=>zA,UserSchema:()=>Kdt,UserSelectSchema:()=>Ed,UserSumOrderByAggregateInputSchema:()=>Pnt,UserUncheckedCreateInputSchema:()=>v1,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>O2,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>tr,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>gv,UserUncheckedCreateWithoutChecklistCompleteInputSchema:()=>jZ,UserUncheckedCreateWithoutCustomerFeedbackInputSchema:()=>VZ,UserUncheckedCreateWithoutInventoryTransactionInputSchema:()=>Ff,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>Mf,UserUncheckedCreateWithoutInventoryWithdrawalInputSchema:()=>Rv,UserUncheckedCreateWithoutLeftoverItemInputSchema:()=>KZ,UserUncheckedCreateWithoutOrganizationInputSchema:()=>Uc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>Cw,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>Iw,UserUncheckedCreateWithoutProductionPlanInputSchema:()=>pv,UserUncheckedCreateWithoutProductionPlanItemInputSchema:()=>mv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>rZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>iZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>vc,UserUncheckedCreateWithoutSchedulingConstraintInputSchema:()=>Av,UserUncheckedCreateWithoutSessionsInputSchema:()=>kO,UserUncheckedCreateWithoutShiftsInputSchema:()=>uw,UserUncheckedCreateWithoutStockCountInputSchema:()=>Lf,UserUncheckedCreateWithoutWasteRecordInputSchema:()=>av,UserUncheckedUpdateInputSchema:()=>f1,UserUncheckedUpdateManyInputSchema:()=>w1,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>xut,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>B2,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>vut,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>B_,UserUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>KD,UserUncheckedUpdateWithoutCustomerFeedbackInputSchema:()=>s_,UserUncheckedUpdateWithoutInventoryTransactionInputSchema:()=>BE,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>ZE,UserUncheckedUpdateWithoutInventoryWithdrawalInputSchema:()=>H_,UserUncheckedUpdateWithoutLeftoverItemInputSchema:()=>I_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>I8,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>sL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>uL,UserUncheckedUpdateWithoutProductionPlanInputSchema:()=>k_,UserUncheckedUpdateWithoutProductionPlanItemInputSchema:()=>O_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>OD,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>ZD,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>W8,UserUncheckedUpdateWithoutSchedulingConstraintInputSchema:()=>F_,UserUncheckedUpdateWithoutSessionsInputSchema:()=>pE,UserUncheckedUpdateWithoutShiftsInputSchema:()=>aL,UserUncheckedUpdateWithoutStockCountInputSchema:()=>_E,UserUncheckedUpdateWithoutWasteRecordInputSchema:()=>P_,UserUpdateArgsSchema:()=>ekt,UserUpdateInputSchema:()=>O1,UserUpdateManyAndReturnArgsSchema:()=>nkt,UserUpdateManyArgsSchema:()=>okt,UserUpdateManyMutationInputSchema:()=>Dj,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>XU,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>yW,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>w2,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>zr,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>Wlt,UserUpdateOneRequiredWithoutChecklistCompleteNestedInputSchema:()=>tq,UserUpdateOneRequiredWithoutInventoryTransactionNestedInputSchema:()=>IF,UserUpdateOneRequiredWithoutInventoryWithdrawalNestedInputSchema:()=>Kq,UserUpdateOneRequiredWithoutLeftoverItemNestedInputSchema:()=>Wq,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>Flt,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>KF,UserUpdateOneRequiredWithoutProductionPlanNestedInputSchema:()=>Bq,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>DT,UserUpdateOneRequiredWithoutSchedulingConstraintNestedInputSchema:()=>klt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>wlt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>o5,UserUpdateOneRequiredWithoutStockCountNestedInputSchema:()=>PF,UserUpdateOneRequiredWithoutWasteRecordNestedInputSchema:()=>Zq,UserUpdateOneWithoutCustomerFeedbackNestedInputSchema:()=>pq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>qS,UserUpdateOneWithoutProductionPlanItemNestedInputSchema:()=>Hq,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>_T,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>Spt,UserUpdateToOneWithWhereWithoutChecklistCompleteInputSchema:()=>wrt,UserUpdateToOneWithWhereWithoutCustomerFeedbackInputSchema:()=>$rt,UserUpdateToOneWithWhereWithoutInventoryTransactionInputSchema:()=>Sct,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>bct,UserUpdateToOneWithWhereWithoutInventoryWithdrawalInputSchema:()=>jpt,UserUpdateToOneWithWhereWithoutLeftoverItemInputSchema:()=>opt,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>$ct,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>Yct,UserUpdateToOneWithWhereWithoutProductionPlanInputSchema:()=>spt,UserUpdateToOneWithWhereWithoutProductionPlanItemInputSchema:()=>Ipt,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>Irt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>brt,UserUpdateToOneWithWhereWithoutSchedulingConstraintInputSchema:()=>Ppt,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>Hpt,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>_ct,UserUpdateToOneWithWhereWithoutStockCountInputSchema:()=>Wct,UserUpdateToOneWithWhereWithoutWasteRecordInputSchema:()=>ppt,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>KU,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>uW,UserUpdateWithoutAvailabilityInputSchema:()=>N_,UserUpdateWithoutChecklistCompleteInputSchema:()=>JD,UserUpdateWithoutCustomerFeedbackInputSchema:()=>y_,UserUpdateWithoutInventoryTransactionInputSchema:()=>NE,UserUpdateWithoutInventoryUpdatesInputSchema:()=>ME,UserUpdateWithoutInventoryWithdrawalInputSchema:()=>V_,UserUpdateWithoutLeftoverItemInputSchema:()=>h_,UserUpdateWithoutOrganizationInputSchema:()=>h8,UserUpdateWithoutPasswordResetsInputSchema:()=>yL,UserUpdateWithoutPrepItemsInputSchema:()=>cL,UserUpdateWithoutProductionPlanInputSchema:()=>R_,UserUpdateWithoutProductionPlanItemInputSchema:()=>v_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>vD,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>MD,UserUpdateWithoutRestaurantInputSchema:()=>U8,UserUpdateWithoutSchedulingConstraintInputSchema:()=>q_,UserUpdateWithoutSessionsInputSchema:()=>rE,UserUpdateWithoutShiftsInputSchema:()=>nL,UserUpdateWithoutStockCountInputSchema:()=>DE,UserUpdateWithoutWasteRecordInputSchema:()=>T_,UserUpsertArgsSchema:()=>JRt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>JU,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>cW,UserUpsertWithoutAvailabilityInputSchema:()=>Apt,UserUpsertWithoutChecklistCompleteInputSchema:()=>frt,UserUpsertWithoutCustomerFeedbackInputSchema:()=>Grt,UserUpsertWithoutInventoryTransactionInputSchema:()=>Act,UserUpsertWithoutInventoryUpdatesInputSchema:()=>mct,UserUpsertWithoutInventoryWithdrawalInputSchema:()=>xpt,UserUpsertWithoutLeftoverItemInputSchema:()=>ept,UserUpsertWithoutPasswordResetsInputSchema:()=>Gct,UserUpsertWithoutPrepItemsInputSchema:()=>Qct,UserUpsertWithoutProductionPlanInputSchema:()=>ypt,UserUpsertWithoutProductionPlanItemInputSchema:()=>hpt,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>hrt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>mrt,UserUpsertWithoutSchedulingConstraintInputSchema:()=>Tpt,UserUpsertWithoutSessionsInputSchema:()=>Vpt,UserUpsertWithoutShiftsInputSchema:()=>Dct,UserUpsertWithoutStockCountInputSchema:()=>Uct,UserUpsertWithoutWasteRecordInputSchema:()=>rpt,UserWhereInputSchema:()=>Z,UserWhereUniqueInputSchema:()=>j,VendorAggregateArgsSchema:()=>qCt,VendorArgsSchema:()=>Zj,VendorAvgOrderByAggregateInputSchema:()=>Xat,VendorCountOrderByAggregateInputSchema:()=>Kat,VendorCountOutputTypeArgsSchema:()=>t0,VendorCountOutputTypeSelectSchema:()=>UX,VendorCreateArgsSchema:()=>zjt,VendorCreateInputSchema:()=>G9,VendorCreateManyAndReturnArgsSchema:()=>hjt,VendorCreateManyArgsSchema:()=>bjt,VendorCreateManyInputSchema:()=>HP,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>RI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>kF,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>T2,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>Qh,VendorCreateOrConnectWithoutOrdersInputSchema:()=>A3,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>b6,VendorCreateWithoutIngredientsInputSchema:()=>jy,VendorCreateWithoutOrdersInputSchema:()=>tw,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>wZ,VendorDeleteArgsSchema:()=>Ijt,VendorDeleteManyArgsSchema:()=>Sjt,VendorFindFirstArgsSchema:()=>NCt,VendorFindFirstOrThrowArgsSchema:()=>BCt,VendorFindManyArgsSchema:()=>NK,VendorFindUniqueArgsSchema:()=>DCt,VendorFindUniqueOrThrowArgsSchema:()=>_Ct,VendorGroupByArgsSchema:()=>FCt,VendorIncludeSchema:()=>bz,VendorListRelationFilterSchema:()=>E4,VendorMaxOrderByAggregateInputSchema:()=>tit,VendorMinOrderByAggregateInputSchema:()=>eit,VendorOrderByRelationAggregateInputSchema:()=>Jnt,VendorOrderByWithAggregationInputSchema:()=>MV,VendorOrderByWithRelationInputSchema:()=>Lp,VendorScalarFieldEnumSchema:()=>tC,VendorScalarRelationFilterSchema:()=>oM,VendorScalarWhereInputSchema:()=>wp,VendorScalarWhereWithAggregatesInputSchema:()=>kA,VendorSchema:()=>szt,VendorSelectSchema:()=>hz,VendorSumOrderByAggregateInputSchema:()=>oit,VendorUncheckedCreateInputSchema:()=>$9,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>fI,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>My,VendorUncheckedCreateWithoutOrdersInputSchema:()=>ew,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>NZ,VendorUncheckedUpdateInputSchema:()=>K9,VendorUncheckedUpdateManyInputSchema:()=>X9,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Zyt,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>$I,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>PJ,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>KE,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>a_,VendorUpdateArgsSchema:()=>gjt,VendorUpdateInputSchema:()=>J9,VendorUpdateManyAndReturnArgsSchema:()=>Ajt,VendorUpdateManyArgsSchema:()=>Cjt,VendorUpdateManyMutationInputSchema:()=>_N,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>px,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>_I,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>ZF,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>U2,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>wct,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>_rt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>rx,VendorUpdateWithoutIngredientsInputSchema:()=>TJ,VendorUpdateWithoutOrdersInputSchema:()=>JE,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>n_,VendorUpsertArgsSchema:()=>mjt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>lx,VendorUpsertWithoutOrdersInputSchema:()=>fct,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>Drt,VendorWhereInputSchema:()=>Me,VendorWhereUniqueInputSchema:()=>Qt,WasteRecordAggregateArgsSchema:()=>kht,WasteRecordArgsSchema:()=>wzt,WasteRecordAvgOrderByAggregateInputSchema:()=>Vet,WasteRecordCountOrderByAggregateInputSchema:()=>Let,WasteRecordCreateArgsSchema:()=>ZUt,WasteRecordCreateInputSchema:()=>sG,WasteRecordCreateManyAndReturnArgsSchema:()=>fUt,WasteRecordCreateManyArgsSchema:()=>OUt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>uf,WasteRecordCreateManyIngredienteInputSchema:()=>tQ,WasteRecordCreateManyInputSchema:()=>IP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>mO,WasteRecordCreateManyRecordedByInputSchema:()=>TH,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>Kv,WasteRecordCreateManyRestaurantInputSchema:()=>sH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>kI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>Ja,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>Yh,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>sh,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>eh,WasteRecordCreateWithoutIngredienteInputSchema:()=>Zy,WasteRecordCreateWithoutRecordedByInputSchema:()=>zu,WasteRecordCreateWithoutRestaurantInputSchema:()=>Hc,WasteRecordDeleteArgsSchema:()=>wUt,WasteRecordDeleteManyArgsSchema:()=>FUt,WasteRecordFindFirstArgsSchema:()=>Wht,WasteRecordFindFirstOrThrowArgsSchema:()=>Rht,WasteRecordFindManyArgsSchema:()=>iT,WasteRecordFindUniqueArgsSchema:()=>jht,WasteRecordFindUniqueOrThrowArgsSchema:()=>Mht,WasteRecordGroupByArgsSchema:()=>xht,WasteRecordIncludeSchema:()=>bd,WasteRecordListRelationFilterSchema:()=>SS,WasteRecordMaxOrderByAggregateInputSchema:()=>Het,WasteRecordMinOrderByAggregateInputSchema:()=>Qet,WasteRecordOrderByRelationAggregateInputSchema:()=>sB,WasteRecordOrderByWithAggregationInputSchema:()=>nV,WasteRecordOrderByWithRelationInputSchema:()=>pb,WasteRecordScalarFieldEnumSchema:()=>Wg,WasteRecordScalarWhereInputSchema:()=>Ba,WasteRecordScalarWhereWithAggregatesInputSchema:()=>tA,WasteRecordSchema:()=>Bdt,WasteRecordSelectSchema:()=>hd,WasteRecordSumOrderByAggregateInputSchema:()=>Yet,WasteRecordUncheckedCreateInputSchema:()=>dG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>wI,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>mi,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>vy,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>mu,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,WasteRecordUncheckedUpdateInputSchema:()=>mG,WasteRecordUncheckedUpdateManyInputSchema:()=>bG,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>vyt,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>JI,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>Jut,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>Xi,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Fut,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>WJ,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>p7,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>F8,WasteRecordUpdateArgsSchema:()=>NUt,WasteRecordUpdateInputSchema:()=>zG,WasteRecordUpdateManyAndReturnArgsSchema:()=>qUt,WasteRecordUpdateManyArgsSchema:()=>BUt,WasteRecordUpdateManyMutationInputSchema:()=>PT,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>yx,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>yR,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>ZW,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>EI,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>fi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>ux,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>uR,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>MW,WasteRecordUpdateWithoutIngredienteInputSchema:()=>UJ,WasteRecordUpdateWithoutRecordedByInputSchema:()=>r7,WasteRecordUpdateWithoutRestaurantInputSchema:()=>q8,WasteRecordUpsertArgsSchema:()=>vUt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>cx,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>cR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>jW,WasteRecordWhereInputSchema:()=>sa,WasteRecordWhereUniqueInputSchema:()=>D});var se;(function(c){c.assertEqual=m=>m;function i(m){}c.assertIs=i;function p(m){throw new Error}c.assertNever=p,c.arrayToEnum=m=>{let h={};for(let P of m)h[P]=P;return h},c.getValidEnumValues=m=>{let h=c.objectKeys(m).filter(R=>typeof m[m[R]]!="number"),P={};for(let R of h)P[R]=m[R];return c.objectValues(P)},c.objectValues=m=>c.objectKeys(m).map(function(h){return m[h]}),c.objectKeys=typeof Object.keys=="function"?m=>Object.keys(m):m=>{let h=[];for(let P in m)Object.prototype.hasOwnProperty.call(m,P)&&h.push(P);return h},c.find=(m,h)=>{for(let P of m)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?m=>Number.isInteger(m):m=>typeof m=="number"&&isFinite(m)&&Math.floor(m)===m;function s(m,h=" | "){return m.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=s,c.jsonStringifyReplacer=(m,h)=>typeof h=="bigint"?h.toString():h;})(se||(se={}));var ML;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(ML||(ML={}));var K=se.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Hm=c=>{switch(typeof c){case "undefined":return K.undefined;case "string":return K.string;case "number":return isNaN(c)?K.nan:K.number;case "boolean":return K.boolean;case "function":return K.function;case "bigint":return K.bigint;case "symbol":return K.symbol;case "object":return Array.isArray(c)?K.array:c===null?K.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?K.promise:typeof Map<"u"&&c instanceof Map?K.map:typeof Set<"u"&&c instanceof Set?K.set:typeof Date<"u"&&c instanceof Date?K.date:K.object;default:return K.unknown}},O=se.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),lst=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),Qr=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=s=>{this.issues=[...this.issues,s];},this.addIssues=(s=[])=>{this.issues=[...this.issues,...s];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(h){return h.message},s={_errors:[]},m=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(m);else if(P.code==="invalid_return_type")m(P.returnTypeError);else if(P.code==="invalid_arguments")m(P.argumentsError);else if(P.path.length===0)s._errors.push(p(P));else {let R=s,$=0;for(;$<P.path.length;){let Q=P.path[$];$===P.path.length-1?(R[Q]=R[Q]||{_errors:[]},R[Q]._errors.push(p(P))):R[Q]=R[Q]||{_errors:[]},R=R[Q],$++;}}};return m(this),s}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,se.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},s=[];for(let m of this.issues)m.path.length>0?(p[m.path[0]]=p[m.path[0]]||[],p[m.path[0]].push(i(m))):s.push(i(m));return {formErrors:s,fieldErrors:p}}get formErrors(){return this.flatten()}};Qr.create=c=>new Qr(c);var zT=(c,i)=>{let p;switch(c.code){case O.invalid_type:c.received===K.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case O.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,se.jsonStringifyReplacer)}`;break;case O.unrecognized_keys:p=`Unrecognized key(s) in object: ${se.joinValues(c.keys,", ")}`;break;case O.invalid_union:p="Invalid input";break;case O.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${se.joinValues(c.options)}`;break;case O.invalid_enum_value:p=`Invalid enum value. Expected ${se.joinValues(c.options)}, received '${c.received}'`;break;case O.invalid_arguments:p="Invalid function arguments";break;case O.invalid_return_type:p="Invalid function return type";break;case O.invalid_date:p="Invalid date";break;case O.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:se.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case O.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case O.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case O.custom:p="Invalid input";break;case O.invalid_intersection_types:p="Intersection results could not be merged";break;case O.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case O.not_finite:p="Number must be finite";break;default:p=i.defaultError,se.assertNever(c);}return {message:p}},QK=zT;function rst(c){QK=c;}function cN(){return QK}var uN=c=>{let{data:i,path:p,errorMaps:s,issueData:m}=c,h=[...p,...m.path||[]],P={...m,path:h};if(m.message!==void 0)return {...m,path:h,message:m.message};let R="",$=s.filter(Q=>!!Q).slice().reverse();for(let Q of $)R=Q(P,{data:i,defaultError:R}).message;return {...m,path:h,message:R}},pst=[];function Y(c,i){let p=cN(),s=uN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===zT?void 0:zT].filter(m=>!!m)});c.common.issues.push(s);}var zl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let s=[];for(let m of p){if(m.status==="aborted")return Rt;m.status==="dirty"&&i.dirty(),s.push(m.value);}return {status:i.value,value:s}}static async mergeObjectAsync(i,p){let s=[];for(let m of p){let h=await m.key,P=await m.value;s.push({key:h,value:P});}return c.mergeObjectSync(i,s)}static mergeObjectSync(i,p){let s={};for(let m of p){let{key:h,value:P}=m;if(h.status==="aborted"||P.status==="aborted")return Rt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||m.alwaysSet)&&(s[h.value]=P.value);}return {status:i.value,value:s}}},Rt=Object.freeze({status:"aborted"}),dT=c=>({status:"dirty",value:c}),Zl=c=>({status:"valid",value:c}),ZL=c=>c.status==="aborted",vL=c=>c.status==="dirty",bC=c=>c.status==="valid",QT=c=>typeof Promise<"u"&&c instanceof Promise;function yN(c,i,p,s){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function YK(c,i,p,s,m){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var nt;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(nt||(nt={}));var VT,HT,up=class{constructor(i,p,s,m){this._cachedPath=[],this.parent=i,this.data=p,this._path=s,this._key=m;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},LK=(c,i)=>{if(bC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new Qr(c.common.issues);return this._error=p,this._error}}};function qt(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:s,description:m}=c;if(i&&(p||s))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:m}:{errorMap:(P,R)=>{var $,Q;let{message:Pt}=c;return P.code==="invalid_enum_value"?{message:Pt??R.defaultError}:typeof R.data>"u"?{message:($=Pt??s)!==null&&$!==void 0?$:R.defaultError}:P.code!=="invalid_type"?{message:R.defaultError}:{message:(Q=Pt??p)!==null&&Q!==void 0?Q:R.defaultError}},description:m}}var Ft=class{get description(){return this._def.description}_getType(i){return Hm(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:Hm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new zl,ctx:{common:i.parent.common,data:i.data,parsedType:Hm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(QT(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let s=this.safeParse(i,p);if(s.success)return s.data;throw s.error}safeParse(i,p){var s;let m={common:{issues:[],async:(s=p?.async)!==null&&s!==void 0?s:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Hm(i)},h=this._parseSync({data:i,path:m.path,parent:m});return LK(m,h)}"~validate"(i){var p,s;let m={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Hm(i)};if(!this["~standard"].async)try{let h=this._parseSync({data:i,path:[],parent:m});return bC(h)?{value:h.value}:{issues:m.common.issues}}catch(h){!((s=(p=h?.message)===null||p===void 0?void 0:p.toLowerCase())===null||s===void 0)&&s.includes("encountered")&&(this["~standard"].async=true),m.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:m}).then(h=>bC(h)?{value:h.value}:{issues:m.common.issues})}async parseAsync(i,p){let s=await this.safeParseAsync(i,p);if(s.success)return s.data;throw s.error}async safeParseAsync(i,p){let s={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Hm(i)},m=this._parse({data:i,path:s.path,parent:s}),h=await(QT(m)?m:Promise.resolve(m));return LK(s,h)}refine(i,p){let s=m=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(m):p;return this._refinement((m,h)=>{let P=i(m),R=()=>h.addIssue({code:O.custom,...s(m)});return typeof Promise<"u"&&P instanceof Promise?P.then($=>$?true:(R(),false)):P?true:(R(),false)})}refinement(i,p){return this._refinement((s,m)=>i(s)?true:(m.addIssue(typeof p=="function"?p(s,m):p),false))}_refinement(i){return new Yr({schema:this,typeName:Wt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return cp.create(this,this._def)}nullable(){return Tm.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Ym.create(this)}promise(){return ng.create(this,this._def)}or(i){return TC.create([this,i],this._def)}and(i){return PC.create(this,i,this._def)}transform(i){return new Yr({...qt(this._def),schema:this,typeName:Wt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new xC({...qt(this._def),innerType:this,defaultValue:p,typeName:Wt.ZodDefault})}brand(){return new YT({typeName:Wt.ZodBranded,type:this,...qt(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new jC({...qt(this._def),innerType:this,catchValue:p,typeName:Wt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return GT.create(this,i)}readonly(){return MC.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},cst=/^c[^\s-]{8,}$/i,ust=/^[0-9a-z]+$/,yst=/^[0-9A-HJKMNP-TV-Z]{26}$/i,sst=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,dst=/^[a-z0-9_-]{21}$/i,zst=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,mst=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,bst=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,hst="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",jL,Ist=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,gst=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,Cst=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,Ast=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,Sst=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Tst=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,GK="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Pst=new RegExp(`^${GK}$`);function $K(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function Ust(c){return new RegExp(`^${$K(c)}$`)}function JK(c){let i=`${GK}T${$K(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Wst(c,i){return !!((i==="v4"||!i)&&Ist.test(c)||(i==="v6"||!i)&&Cst.test(c))}function Rst(c,i){if(!zst.test(c))return  false;try{let[p]=c.split("."),s=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),m=JSON.parse(atob(s));return !(typeof m!="object"||m===null||!m.typ||!m.alg||i&&m.alg!==i)}catch{return  false}}function kst(c,i){return !!((i==="v4"||!i)&&gst.test(c)||(i==="v6"||!i)&&Ast.test(c))}var eg=class c extends Ft{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==K.string){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.string,received:h.parsedType}),Rt}let s=new zl,m;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(m=this._getOrReturnCtx(i,m),Y(m,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),s.dirty());else if(h.kind==="max")i.data.length>h.value&&(m=this._getOrReturnCtx(i,m),Y(m,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),s.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,R=i.data.length<h.value;(P||R)&&(m=this._getOrReturnCtx(i,m),P?Y(m,{code:O.too_big,maximum:h.value,type:"string",inclusive:true,exact:true,message:h.message}):R&&Y(m,{code:O.too_small,minimum:h.value,type:"string",inclusive:true,exact:true,message:h.message}),s.dirty());}else if(h.kind==="email")bst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"email",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="emoji")jL||(jL=new RegExp(hst,"u")),jL.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"emoji",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="uuid")sst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"uuid",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="nanoid")dst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"nanoid",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="cuid")cst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"cuid",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="cuid2")ust.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"cuid2",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="ulid")yst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"ulid",code:O.invalid_string,message:h.message}),s.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{m=this._getOrReturnCtx(i,m),Y(m,{validation:"url",code:O.invalid_string,message:h.message}),s.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"regex",code:O.invalid_string,message:h.message}),s.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),s.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:{startsWith:h.value},message:h.message}),s.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:{endsWith:h.value},message:h.message}),s.dirty()):h.kind==="datetime"?JK(h).test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:"datetime",message:h.message}),s.dirty()):h.kind==="date"?Pst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:"date",message:h.message}),s.dirty()):h.kind==="time"?Ust(h).test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{code:O.invalid_string,validation:"time",message:h.message}),s.dirty()):h.kind==="duration"?mst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"duration",code:O.invalid_string,message:h.message}),s.dirty()):h.kind==="ip"?Wst(i.data,h.version)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"ip",code:O.invalid_string,message:h.message}),s.dirty()):h.kind==="jwt"?Rst(i.data,h.alg)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"jwt",code:O.invalid_string,message:h.message}),s.dirty()):h.kind==="cidr"?kst(i.data,h.version)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"cidr",code:O.invalid_string,message:h.message}),s.dirty()):h.kind==="base64"?Sst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"base64",code:O.invalid_string,message:h.message}),s.dirty()):h.kind==="base64url"?Tst.test(i.data)||(m=this._getOrReturnCtx(i,m),Y(m,{validation:"base64url",code:O.invalid_string,message:h.message}),s.dirty()):se.assertNever(h);return {status:s.value,value:i.data}}_regex(i,p,s){return this.refinement(m=>i.test(m),{validation:p,code:O.invalid_string,...nt.errToObj(s)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...nt.errToObj(i)})}url(i){return this._addCheck({kind:"url",...nt.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...nt.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...nt.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...nt.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...nt.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...nt.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...nt.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...nt.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...nt.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...nt.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...nt.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...nt.errToObj(i)})}datetime(i){var p,s;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(s=i?.local)!==null&&s!==void 0?s:false,...nt.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...nt.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...nt.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...nt.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...nt.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...nt.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...nt.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...nt.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...nt.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...nt.errToObj(p)})}nonempty(i){return this.min(1,nt.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};eg.create=c=>{var i;return new eg({checks:[],typeName:Wt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...qt(c)})};function xst(c,i){let p=(c.toString().split(".")[1]||"").length,s=(i.toString().split(".")[1]||"").length,m=p>s?p:s,h=parseInt(c.toFixed(m).replace(".","")),P=parseInt(i.toFixed(m).replace(".",""));return h%P/Math.pow(10,m)}var hC=class c extends Ft{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==K.number){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.number,received:h.parsedType}),Rt}let s,m=new zl;for(let h of this._def.checks)h.kind==="int"?se.isInteger(i.data)||(s=this._getOrReturnCtx(i,s),Y(s,{code:O.invalid_type,expected:"integer",received:"float",message:h.message}),m.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="multipleOf"?xst(i.data,h.value)!==0&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(s=this._getOrReturnCtx(i,s),Y(s,{code:O.not_finite,message:h.message}),m.dirty()):se.assertNever(h);return {status:m.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,nt.toString(p))}gt(i,p){return this.setLimit("min",i,false,nt.toString(p))}lte(i,p){return this.setLimit("max",i,true,nt.toString(p))}lt(i,p){return this.setLimit("max",i,false,nt.toString(p))}setLimit(i,p,s,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:s,message:nt.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:nt.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:nt.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:nt.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:nt.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:nt.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:nt.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:nt.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:nt.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:nt.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&se.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let s of this._def.checks){if(s.kind==="finite"||s.kind==="int"||s.kind==="multipleOf")return  true;s.kind==="min"?(p===null||s.value>p)&&(p=s.value):s.kind==="max"&&(i===null||s.value<i)&&(i=s.value);}return Number.isFinite(p)&&Number.isFinite(i)}};hC.create=c=>new hC({checks:[],typeName:Wt.ZodNumber,coerce:c?.coerce||false,...qt(c)});var IC=class c extends Ft{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==K.bigint)return this._getInvalidInput(i);let s,m=new zl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(s=this._getOrReturnCtx(i,s),Y(s,{code:O.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):se.assertNever(h);return {status:m.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return Y(p,{code:O.invalid_type,expected:K.bigint,received:p.parsedType}),Rt}gte(i,p){return this.setLimit("min",i,true,nt.toString(p))}gt(i,p){return this.setLimit("min",i,false,nt.toString(p))}lte(i,p){return this.setLimit("max",i,true,nt.toString(p))}lt(i,p){return this.setLimit("max",i,false,nt.toString(p))}setLimit(i,p,s,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:s,message:nt.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:nt.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:nt.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:nt.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:nt.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:nt.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};IC.create=c=>{var i;return new IC({checks:[],typeName:Wt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...qt(c)})};var gC=class extends Ft{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==K.boolean){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.boolean,received:s.parsedType}),Rt}return Zl(i.data)}};gC.create=c=>new gC({typeName:Wt.ZodBoolean,coerce:c?.coerce||false,...qt(c)});var CC=class c extends Ft{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==K.date){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_type,expected:K.date,received:h.parsedType}),Rt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return Y(h,{code:O.invalid_date}),Rt}let s=new zl,m;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(m=this._getOrReturnCtx(i,m),Y(m,{code:O.too_small,message:h.message,inclusive:true,exact:false,minimum:h.value,type:"date"}),s.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(m=this._getOrReturnCtx(i,m),Y(m,{code:O.too_big,message:h.message,inclusive:true,exact:false,maximum:h.value,type:"date"}),s.dirty()):se.assertNever(h);return {status:s.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:nt.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:nt.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};CC.create=c=>new CC({checks:[],coerce:c?.coerce||false,typeName:Wt.ZodDate,...qt(c)});var mT=class extends Ft{_parse(i){if(this._getType(i)!==K.symbol){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.symbol,received:s.parsedType}),Rt}return Zl(i.data)}};mT.create=c=>new mT({typeName:Wt.ZodSymbol,...qt(c)});var AC=class extends Ft{_parse(i){if(this._getType(i)!==K.undefined){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.undefined,received:s.parsedType}),Rt}return Zl(i.data)}};AC.create=c=>new AC({typeName:Wt.ZodUndefined,...qt(c)});var SC=class extends Ft{_parse(i){if(this._getType(i)!==K.null){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.null,received:s.parsedType}),Rt}return Zl(i.data)}};SC.create=c=>new SC({typeName:Wt.ZodNull,...qt(c)});var og=class extends Ft{constructor(){super(...arguments),this._any=true;}_parse(i){return Zl(i.data)}};og.create=c=>new og({typeName:Wt.ZodAny,...qt(c)});var Qm=class extends Ft{constructor(){super(...arguments),this._unknown=true;}_parse(i){return Zl(i.data)}};Qm.create=c=>new Qm({typeName:Wt.ZodUnknown,...qt(c)});var zp=class extends Ft{_parse(i){let p=this._getOrReturnCtx(i);return Y(p,{code:O.invalid_type,expected:K.never,received:p.parsedType}),Rt}};zp.create=c=>new zp({typeName:Wt.ZodNever,...qt(c)});var bT=class extends Ft{_parse(i){if(this._getType(i)!==K.undefined){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.void,received:s.parsedType}),Rt}return Zl(i.data)}};bT.create=c=>new bT({typeName:Wt.ZodVoid,...qt(c)});var Ym=class c extends Ft{_parse(i){let{ctx:p,status:s}=this._processInputParams(i),m=this._def;if(p.parsedType!==K.array)return Y(p,{code:O.invalid_type,expected:K.array,received:p.parsedType}),Rt;if(m.exactLength!==null){let P=p.data.length>m.exactLength.value,R=p.data.length<m.exactLength.value;(P||R)&&(Y(p,{code:P?O.too_big:O.too_small,minimum:R?m.exactLength.value:void 0,maximum:P?m.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:m.exactLength.message}),s.dirty());}if(m.minLength!==null&&p.data.length<m.minLength.value&&(Y(p,{code:O.too_small,minimum:m.minLength.value,type:"array",inclusive:true,exact:false,message:m.minLength.message}),s.dirty()),m.maxLength!==null&&p.data.length>m.maxLength.value&&(Y(p,{code:O.too_big,maximum:m.maxLength.value,type:"array",inclusive:true,exact:false,message:m.maxLength.message}),s.dirty()),p.common.async)return Promise.all([...p.data].map((P,R)=>m.type._parseAsync(new up(p,P,p.path,R)))).then(P=>zl.mergeArray(s,P));let h=[...p.data].map((P,R)=>m.type._parseSync(new up(p,P,p.path,R)));return zl.mergeArray(s,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:nt.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:nt.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:nt.toString(p)}})}nonempty(i){return this.min(1,i)}};Ym.create=(c,i)=>new Ym({type:c,minLength:null,maxLength:null,exactLength:null,typeName:Wt.ZodArray,...qt(i)});function sT(c){if(c instanceof Fr){let i={};for(let p in c.shape){let s=c.shape[p];i[p]=cp.create(sT(s));}return new Fr({...c._def,shape:()=>i})}else return c instanceof Ym?new Ym({...c._def,type:sT(c.element)}):c instanceof cp?cp.create(sT(c.unwrap())):c instanceof Tm?Tm.create(sT(c.unwrap())):c instanceof Sm?Sm.create(c.items.map(i=>sT(i))):c}var Fr=class c extends Ft{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=se.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==K.object){let Q=this._getOrReturnCtx(i);return Y(Q,{code:O.invalid_type,expected:K.object,received:Q.parsedType}),Rt}let{status:s,ctx:m}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),R=[];if(!(this._def.catchall instanceof zp&&this._def.unknownKeys==="strip"))for(let Q in m.data)P.includes(Q)||R.push(Q);let $=[];for(let Q of P){let Pt=h[Q],Ml=m.data[Q];$.push({key:{status:"valid",value:Q},value:Pt._parse(new up(m,Ml,m.path,Q)),alwaysSet:Q in m.data});}if(this._def.catchall instanceof zp){let Q=this._def.unknownKeys;if(Q==="passthrough")for(let Pt of R)$.push({key:{status:"valid",value:Pt},value:{status:"valid",value:m.data[Pt]}});else if(Q==="strict")R.length>0&&(Y(m,{code:O.unrecognized_keys,keys:R}),s.dirty());else if(Q!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let Q=this._def.catchall;for(let Pt of R){let Ml=m.data[Pt];$.push({key:{status:"valid",value:Pt},value:Q._parse(new up(m,Ml,m.path,Pt)),alwaysSet:Pt in m.data});}}return m.common.async?Promise.resolve().then(async()=>{let Q=[];for(let Pt of $){let Ml=await Pt.key,pN=await Pt.value;Q.push({key:Ml,value:pN,alwaysSet:Pt.alwaysSet});}return Q}).then(Q=>zl.mergeObjectSync(s,Q)):zl.mergeObjectSync(s,$)}get shape(){return this._def.shape()}strict(i){return nt.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,s)=>{var m,h,P,R;let $=(P=(h=(m=this._def).errorMap)===null||h===void 0?void 0:h.call(m,p,s).message)!==null&&P!==void 0?P:s.defaultError;return p.code==="unrecognized_keys"?{message:(R=nt.errToObj(i).message)!==null&&R!==void 0?R:$}:{message:$}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:Wt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return se.objectKeys(i).forEach(s=>{i[s]&&this.shape[s]&&(p[s]=this.shape[s]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return se.objectKeys(this.shape).forEach(s=>{i[s]||(p[s]=this.shape[s]);}),new c({...this._def,shape:()=>p})}deepPartial(){return sT(this)}partial(i){let p={};return se.objectKeys(this.shape).forEach(s=>{let m=this.shape[s];i&&!i[s]?p[s]=m:p[s]=m.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return se.objectKeys(this.shape).forEach(s=>{if(i&&!i[s])p[s]=this.shape[s];else {let h=this.shape[s];for(;h instanceof cp;)h=h._def.innerType;p[s]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return KK(se.objectKeys(this.shape))}};Fr.create=(c,i)=>new Fr({shape:()=>c,unknownKeys:"strip",catchall:zp.create(),typeName:Wt.ZodObject,...qt(i)});Fr.strictCreate=(c,i)=>new Fr({shape:()=>c,unknownKeys:"strict",catchall:zp.create(),typeName:Wt.ZodObject,...qt(i)});Fr.lazycreate=(c,i)=>new Fr({shape:c,unknownKeys:"strip",catchall:zp.create(),typeName:Wt.ZodObject,...qt(i)});var TC=class extends Ft{_parse(i){let{ctx:p}=this._processInputParams(i),s=this._def.options;function m(h){for(let R of h)if(R.result.status==="valid")return R.result;for(let R of h)if(R.result.status==="dirty")return p.common.issues.push(...R.ctx.common.issues),R.result;let P=h.map(R=>new Qr(R.ctx.common.issues));return Y(p,{code:O.invalid_union,unionErrors:P}),Rt}if(p.common.async)return Promise.all(s.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(m);{let h,P=[];for(let $ of s){let Q={...p,common:{...p.common,issues:[]},parent:null},Pt=$._parseSync({data:p.data,path:p.path,parent:Q});if(Pt.status==="valid")return Pt;Pt.status==="dirty"&&!h&&(h={result:Pt,ctx:Q}),Q.common.issues.length&&P.push(Q.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let R=P.map($=>new Qr($));return Y(p,{code:O.invalid_union,unionErrors:R}),Rt}}get options(){return this._def.options}};TC.create=(c,i)=>new TC({options:c,typeName:Wt.ZodUnion,...qt(i)});var Vm=c=>c instanceof UC?Vm(c.schema):c instanceof Yr?Vm(c.innerType()):c instanceof WC?[c.value]:c instanceof RC?c.options:c instanceof kC?se.objectValues(c.enum):c instanceof xC?Vm(c._def.innerType):c instanceof AC?[void 0]:c instanceof SC?[null]:c instanceof cp?[void 0,...Vm(c.unwrap())]:c instanceof Tm?[null,...Vm(c.unwrap())]:c instanceof YT||c instanceof MC?Vm(c.unwrap()):c instanceof jC?Vm(c._def.innerType):[],sN=class c extends Ft{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.object)return Y(p,{code:O.invalid_type,expected:K.object,received:p.parsedType}),Rt;let s=this.discriminator,m=p.data[s],h=this.optionsMap.get(m);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):(Y(p,{code:O.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[s]}),Rt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,s){let m=new Map;for(let h of p){let P=Vm(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let R of P){if(m.has(R))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(R)}`);m.set(R,h);}}return new c({typeName:Wt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:m,...qt(s)})}};function OL(c,i){let p=Hm(c),s=Hm(i);if(c===i)return {valid:true,data:c};if(p===K.object&&s===K.object){let m=se.objectKeys(i),h=se.objectKeys(c).filter(R=>m.indexOf(R)!==-1),P={...c,...i};for(let R of h){let $=OL(c[R],i[R]);if(!$.valid)return {valid:false};P[R]=$.data;}return {valid:true,data:P}}else if(p===K.array&&s===K.array){if(c.length!==i.length)return {valid:false};let m=[];for(let h=0;h<c.length;h++){let P=c[h],R=i[h],$=OL(P,R);if(!$.valid)return {valid:false};m.push($.data);}return {valid:true,data:m}}else return p===K.date&&s===K.date&&+c==+i?{valid:true,data:c}:{valid:false}}var PC=class extends Ft{_parse(i){let{status:p,ctx:s}=this._processInputParams(i),m=(h,P)=>{if(ZL(h)||ZL(P))return Rt;let R=OL(h.value,P.value);return R.valid?((vL(h)||vL(P))&&p.dirty(),{status:p.value,value:R.data}):(Y(s,{code:O.invalid_intersection_types}),Rt)};return s.common.async?Promise.all([this._def.left._parseAsync({data:s.data,path:s.path,parent:s}),this._def.right._parseAsync({data:s.data,path:s.path,parent:s})]).then(([h,P])=>m(h,P)):m(this._def.left._parseSync({data:s.data,path:s.path,parent:s}),this._def.right._parseSync({data:s.data,path:s.path,parent:s}))}};PC.create=(c,i,p)=>new PC({left:c,right:i,typeName:Wt.ZodIntersection,...qt(p)});var Sm=class c extends Ft{_parse(i){let{status:p,ctx:s}=this._processInputParams(i);if(s.parsedType!==K.array)return Y(s,{code:O.invalid_type,expected:K.array,received:s.parsedType}),Rt;if(s.data.length<this._def.items.length)return Y(s,{code:O.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),Rt;!this._def.rest&&s.data.length>this._def.items.length&&(Y(s,{code:O.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let h=[...s.data].map((P,R)=>{let $=this._def.items[R]||this._def.rest;return $?$._parse(new up(s,P,s.path,R)):null}).filter(P=>!!P);return s.common.async?Promise.all(h).then(P=>zl.mergeArray(p,P)):zl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};Sm.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Sm({items:c,typeName:Wt.ZodTuple,rest:null,...qt(i)})};var dN=class c extends Ft{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:s}=this._processInputParams(i);if(s.parsedType!==K.object)return Y(s,{code:O.invalid_type,expected:K.object,received:s.parsedType}),Rt;let m=[],h=this._def.keyType,P=this._def.valueType;for(let R in s.data)m.push({key:h._parse(new up(s,R,s.path,R)),value:P._parse(new up(s,s.data[R],s.path,R)),alwaysSet:R in s.data});return s.common.async?zl.mergeObjectAsync(p,m):zl.mergeObjectSync(p,m)}get element(){return this._def.valueType}static create(i,p,s){return p instanceof Ft?new c({keyType:i,valueType:p,typeName:Wt.ZodRecord,...qt(s)}):new c({keyType:eg.create(),valueType:i,typeName:Wt.ZodRecord,...qt(p)})}},hT=class extends Ft{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:s}=this._processInputParams(i);if(s.parsedType!==K.map)return Y(s,{code:O.invalid_type,expected:K.map,received:s.parsedType}),Rt;let m=this._def.keyType,h=this._def.valueType,P=[...s.data.entries()].map(([R,$],Q)=>({key:m._parse(new up(s,R,s.path,[Q,"key"])),value:h._parse(new up(s,$,s.path,[Q,"value"]))}));if(s.common.async){let R=new Map;return Promise.resolve().then(async()=>{for(let $ of P){let Q=await $.key,Pt=await $.value;if(Q.status==="aborted"||Pt.status==="aborted")return Rt;(Q.status==="dirty"||Pt.status==="dirty")&&p.dirty(),R.set(Q.value,Pt.value);}return {status:p.value,value:R}})}else {let R=new Map;for(let $ of P){let Q=$.key,Pt=$.value;if(Q.status==="aborted"||Pt.status==="aborted")return Rt;(Q.status==="dirty"||Pt.status==="dirty")&&p.dirty(),R.set(Q.value,Pt.value);}return {status:p.value,value:R}}}};hT.create=(c,i,p)=>new hT({valueType:i,keyType:c,typeName:Wt.ZodMap,...qt(p)});var IT=class c extends Ft{_parse(i){let{status:p,ctx:s}=this._processInputParams(i);if(s.parsedType!==K.set)return Y(s,{code:O.invalid_type,expected:K.set,received:s.parsedType}),Rt;let m=this._def;m.minSize!==null&&s.data.size<m.minSize.value&&(Y(s,{code:O.too_small,minimum:m.minSize.value,type:"set",inclusive:true,exact:false,message:m.minSize.message}),p.dirty()),m.maxSize!==null&&s.data.size>m.maxSize.value&&(Y(s,{code:O.too_big,maximum:m.maxSize.value,type:"set",inclusive:true,exact:false,message:m.maxSize.message}),p.dirty());let h=this._def.valueType;function P($){let Q=new Set;for(let Pt of $){if(Pt.status==="aborted")return Rt;Pt.status==="dirty"&&p.dirty(),Q.add(Pt.value);}return {status:p.value,value:Q}}let R=[...s.data.values()].map(($,Q)=>h._parse(new up(s,$,s.path,Q)));return s.common.async?Promise.all(R).then($=>P($)):P(R)}min(i,p){return new c({...this._def,minSize:{value:i,message:nt.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:nt.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};IT.create=(c,i)=>new IT({valueType:c,minSize:null,maxSize:null,typeName:Wt.ZodSet,...qt(i)});var zN=class c extends Ft{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.function)return Y(p,{code:O.invalid_type,expected:K.function,received:p.parsedType}),Rt;function s(R,$){return uN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,cN(),zT].filter(Q=>!!Q),issueData:{code:O.invalid_arguments,argumentsError:$}})}function m(R,$){return uN({data:R,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,cN(),zT].filter(Q=>!!Q),issueData:{code:O.invalid_return_type,returnTypeError:$}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof ng){let R=this;return Zl(async function(...$){let Q=new Qr([]),Pt=await R._def.args.parseAsync($,h).catch(xL=>{throw Q.addIssue(s($,xL)),Q}),Ml=await Reflect.apply(P,this,Pt);return await R._def.returns._def.type.parseAsync(Ml,h).catch(xL=>{throw Q.addIssue(m(Ml,xL)),Q})})}else {let R=this;return Zl(function(...$){let Q=R._def.args.safeParse($,h);if(!Q.success)throw new Qr([s($,Q.error)]);let Pt=Reflect.apply(P,this,Q.data),Ml=R._def.returns.safeParse(Pt,h);if(!Ml.success)throw new Qr([m(Pt,Ml.error)]);return Ml.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:Sm.create(i).rest(Qm.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,s){return new c({args:i||Sm.create([]).rest(Qm.create()),returns:p||Qm.create(),typeName:Wt.ZodFunction,...qt(s)})}},UC=class extends Ft{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};UC.create=(c,i)=>new UC({getter:c,typeName:Wt.ZodLazy,...qt(i)});var WC=class extends Ft{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return Y(p,{received:p.data,code:O.invalid_literal,expected:this._def.value}),Rt}return {status:"valid",value:i.data}}get value(){return this._def.value}};WC.create=(c,i)=>new WC({value:c,typeName:Wt.ZodLiteral,...qt(i)});function KK(c,i){return new RC({values:c,typeName:Wt.ZodEnum,...qt(i)})}var RC=class c extends Ft{constructor(){super(...arguments),VT.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),s=this._def.values;return Y(p,{expected:se.joinValues(s),received:p.parsedType,code:O.invalid_type}),Rt}if(yN(this,VT)||YK(this,VT,new Set(this._def.values)),!yN(this,VT).has(i.data)){let p=this._getOrReturnCtx(i),s=this._def.values;return Y(p,{received:p.data,code:O.invalid_enum_value,options:s}),Rt}return Zl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(s=>!i.includes(s)),{...this._def,...p})}};VT=new WeakMap;RC.create=KK;var kC=class extends Ft{constructor(){super(...arguments),HT.set(this,void 0);}_parse(i){let p=se.getValidEnumValues(this._def.values),s=this._getOrReturnCtx(i);if(s.parsedType!==K.string&&s.parsedType!==K.number){let m=se.objectValues(p);return Y(s,{expected:se.joinValues(m),received:s.parsedType,code:O.invalid_type}),Rt}if(yN(this,HT)||YK(this,HT,new Set(se.getValidEnumValues(this._def.values))),!yN(this,HT).has(i.data)){let m=se.objectValues(p);return Y(s,{received:s.data,code:O.invalid_enum_value,options:m}),Rt}return Zl(i.data)}get enum(){return this._def.values}};HT=new WeakMap;kC.create=(c,i)=>new kC({values:c,typeName:Wt.ZodNativeEnum,...qt(i)});var ng=class extends Ft{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==K.promise&&p.common.async===false)return Y(p,{code:O.invalid_type,expected:K.promise,received:p.parsedType}),Rt;let s=p.parsedType===K.promise?p.data:Promise.resolve(p.data);return Zl(s.then(m=>this._def.type.parseAsync(m,{path:p.path,errorMap:p.common.contextualErrorMap})))}};ng.create=(c,i)=>new ng({type:c,typeName:Wt.ZodPromise,...qt(i)});var Yr=class extends Ft{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Wt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:s}=this._processInputParams(i),m=this._def.effect||null,h={addIssue:P=>{Y(s,P),P.fatal?p.abort():p.dirty();},get path(){return s.path}};if(h.addIssue=h.addIssue.bind(h),m.type==="preprocess"){let P=m.transform(s.data,h);if(s.common.async)return Promise.resolve(P).then(async R=>{if(p.value==="aborted")return Rt;let $=await this._def.schema._parseAsync({data:R,path:s.path,parent:s});return $.status==="aborted"?Rt:$.status==="dirty"||p.value==="dirty"?dT($.value):$});{if(p.value==="aborted")return Rt;let R=this._def.schema._parseSync({data:P,path:s.path,parent:s});return R.status==="aborted"?Rt:R.status==="dirty"||p.value==="dirty"?dT(R.value):R}}if(m.type==="refinement"){let P=R=>{let $=m.refinement(R,h);if(s.common.async)return Promise.resolve($);if($ instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return R};if(s.common.async===false){let R=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});return R.status==="aborted"?Rt:(R.status==="dirty"&&p.dirty(),P(R.value),{status:p.value,value:R.value})}else return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then(R=>R.status==="aborted"?Rt:(R.status==="dirty"&&p.dirty(),P(R.value).then(()=>({status:p.value,value:R.value}))))}if(m.type==="transform")if(s.common.async===false){let P=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});if(!bC(P))return P;let R=m.transform(P.value,h);if(R instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:R}}else return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then(P=>bC(P)?Promise.resolve(m.transform(P.value,h)).then(R=>({status:p.value,value:R})):P);se.assertNever(m);}};Yr.create=(c,i,p)=>new Yr({schema:c,typeName:Wt.ZodEffects,effect:i,...qt(p)});Yr.createWithPreprocess=(c,i,p)=>new Yr({schema:i,effect:{type:"preprocess",transform:c},typeName:Wt.ZodEffects,...qt(p)});var cp=class extends Ft{_parse(i){return this._getType(i)===K.undefined?Zl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};cp.create=(c,i)=>new cp({innerType:c,typeName:Wt.ZodOptional,...qt(i)});var Tm=class extends Ft{_parse(i){return this._getType(i)===K.null?Zl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};Tm.create=(c,i)=>new Tm({innerType:c,typeName:Wt.ZodNullable,...qt(i)});var xC=class extends Ft{_parse(i){let{ctx:p}=this._processInputParams(i),s=p.data;return p.parsedType===K.undefined&&(s=this._def.defaultValue()),this._def.innerType._parse({data:s,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};xC.create=(c,i)=>new xC({innerType:c,typeName:Wt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...qt(i)});var jC=class extends Ft{_parse(i){let{ctx:p}=this._processInputParams(i),s={...p,common:{...p.common,issues:[]}},m=this._def.innerType._parse({data:s.data,path:s.path,parent:{...s}});return QT(m)?m.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new Qr(s.common.issues)},input:s.data})})):{status:"valid",value:m.status==="valid"?m.value:this._def.catchValue({get error(){return new Qr(s.common.issues)},input:s.data})}}removeCatch(){return this._def.innerType}};jC.create=(c,i)=>new jC({innerType:c,typeName:Wt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...qt(i)});var gT=class extends Ft{_parse(i){if(this._getType(i)!==K.nan){let s=this._getOrReturnCtx(i);return Y(s,{code:O.invalid_type,expected:K.nan,received:s.parsedType}),Rt}return {status:"valid",value:i.data}}};gT.create=c=>new gT({typeName:Wt.ZodNaN,...qt(c)});var jst=Symbol("zod_brand"),YT=class extends Ft{_parse(i){let{ctx:p}=this._processInputParams(i),s=p.data;return this._def.type._parse({data:s,path:p.path,parent:p})}unwrap(){return this._def.type}},GT=class c extends Ft{_parse(i){let{status:p,ctx:s}=this._processInputParams(i);if(s.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:s.data,path:s.path,parent:s});return h.status==="aborted"?Rt:h.status==="dirty"?(p.dirty(),dT(h.value)):this._def.out._parseAsync({data:h.value,path:s.path,parent:s})})();{let m=this._def.in._parseSync({data:s.data,path:s.path,parent:s});return m.status==="aborted"?Rt:m.status==="dirty"?(p.dirty(),{status:"dirty",value:m.value}):this._def.out._parseSync({data:m.value,path:s.path,parent:s})}}static create(i,p){return new c({in:i,out:p,typeName:Wt.ZodPipeline})}},MC=class extends Ft{_parse(i){let p=this._def.innerType._parse(i),s=m=>(bC(m)&&(m.value=Object.freeze(m.value)),m);return QT(p)?p.then(m=>s(m)):s(p)}unwrap(){return this._def.innerType}};MC.create=(c,i)=>new MC({innerType:c,typeName:Wt.ZodReadonly,...qt(i)});function VK(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function XK(c,i={},p){return c?og.create().superRefine((s,m)=>{var h,P;let R=c(s);if(R instanceof Promise)return R.then($=>{var Q,Pt;if(!$){let Ml=VK(i,s),pN=(Pt=(Q=Ml.fatal)!==null&&Q!==void 0?Q:p)!==null&&Pt!==void 0?Pt:true;m.addIssue({code:"custom",...Ml,fatal:pN});}});if(!R){let $=VK(i,s),Q=(P=(h=$.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:true;m.addIssue({code:"custom",...$,fatal:Q});}}):og.create()}var Mst={object:Fr.lazycreate},Wt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(Wt||(Wt={}));var Zst=(c,i={message:`Input not instance of ${c.name}`})=>XK(p=>p instanceof c,i),tX=eg.create,eX=hC.create,vst=gT.create,Ost=IC.create,oX=gC.create,fst=CC.create,wst=mT.create,Nst=AC.create,Bst=SC.create,qst=og.create,Fst=Qm.create,Dst=zp.create,_st=bT.create,Est=Ym.create,Lst=Fr.create,Vst=Fr.strictCreate,Hst=TC.create,Qst=sN.create,Yst=PC.create,Gst=Sm.create,$st=dN.create,Jst=hT.create,Kst=IT.create,Xst=zN.create,tdt=UC.create,edt=WC.create,odt=RC.create,ndt=kC.create,adt=ng.create,HK=Yr.create,idt=cp.create,ldt=Tm.create,rdt=Yr.createWithPreprocess,pdt=GT.create,cdt=()=>tX().optional(),udt=()=>eX().optional(),ydt=()=>oX().optional(),sdt={string:c=>eg.create({...c,coerce:true}),number:c=>hC.create({...c,coerce:true}),boolean:c=>gC.create({...c,coerce:true}),bigint:c=>IC.create({...c,coerce:true}),date:c=>CC.create({...c,coerce:true})},ddt=Rt,t=Object.freeze({__proto__:null,defaultErrorMap:zT,setErrorMap:rst,getErrorMap:cN,makeIssue:uN,EMPTY_PATH:pst,addIssueToContext:Y,ParseStatus:zl,INVALID:Rt,DIRTY:dT,OK:Zl,isAborted:ZL,isDirty:vL,isValid:bC,isAsync:QT,get util(){return se},get objectUtil(){return ML},ZodParsedType:K,getParsedType:Hm,ZodType:Ft,datetimeRegex:JK,ZodString:eg,ZodNumber:hC,ZodBigInt:IC,ZodBoolean:gC,ZodDate:CC,ZodSymbol:mT,ZodUndefined:AC,ZodNull:SC,ZodAny:og,ZodUnknown:Qm,ZodNever:zp,ZodVoid:bT,ZodArray:Ym,ZodObject:Fr,ZodUnion:TC,ZodDiscriminatedUnion:sN,ZodIntersection:PC,ZodTuple:Sm,ZodRecord:dN,ZodMap:hT,ZodSet:IT,ZodFunction:zN,ZodLazy:UC,ZodLiteral:WC,ZodEnum:RC,ZodNativeEnum:kC,ZodPromise:ng,ZodEffects:Yr,ZodTransformer:Yr,ZodOptional:cp,ZodNullable:Tm,ZodDefault:xC,ZodCatch:jC,ZodNaN:gT,BRAND:jst,ZodBranded:YT,ZodPipeline:GT,ZodReadonly:MC,custom:XK,Schema:Ft,ZodSchema:Ft,late:Mst,get ZodFirstPartyTypeKind(){return Wt},coerce:sdt,any:qst,array:Est,bigint:Ost,boolean:oX,date:fst,discriminatedUnion:Qst,effect:HK,enum:odt,function:Xst,instanceof:Zst,intersection:Yst,lazy:tdt,literal:edt,map:Jst,nan:vst,nativeEnum:ndt,never:Dst,null:Bst,nullable:ldt,number:eX,object:Lst,oboolean:ydt,onumber:udt,optional:idt,ostring:cdt,pipeline:pdt,preprocess:rdt,promise:adt,record:$st,set:Kst,strictObject:Vst,string:tX,symbol:wst,transformer:HK,tuple:Gst,undefined:Nst,union:Hst,unknown:Fst,void:_st,NEVER:ddt,ZodIssueCode:O,quotelessJson:lst,ZodError:Qr});var zdt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),ag=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium"]),ig=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),lg=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),rg=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),pg=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),cg=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),ug=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),yg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),sg=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),dg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),zg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),mg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),bg=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),hg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),Ig=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),gg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),Cg=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),Ag=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Sg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Tg=t.enum(["id","name","description","icon","createdAt","updatedAt"]),Pg=t.enum(["id","name","description","createdAt","updatedAt"]),Ug=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),Wg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),Rg=t.enum(["id","restaurantId","date","createdById","createdAt","updatedAt"]),kg=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),xg=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),jg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),Mg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),Zg=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),vg=t.enum(["id","name","description"]),Og=t.enum(["id","ingredientId","allergenId"]),fg=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),wg=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),Ng=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),Bg=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),qg=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),Fg=t.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),Dg=t.enum(["id","userId","code","token","expiresAt","createdAt"]),_g=t.enum(["id","name","imageUrl","category","restaurantId"]),Eg=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel"]),Lg=t.enum(["id","name","category","price","density","dietaryRestrictionId","calories","protein","carbohydrates","fat","fiber","sugar","sodium","usdaFoodId","nutritionSource","nutritionUpdatedAt"]),Vg=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),Hg=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),Qg=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),Yg=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),Gg=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),$g=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),Jg=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),Kg=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),Xg=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),tC=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),eC=t.enum(["id","userId","startTime","endTime","status"]),oC=t.enum(["id","name","status","createdAt","updatedAt"]),nC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),aC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),iC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),lC=t.enum(["id","menuItemId","recipeId","joinAt"]),rC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),pC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),cC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),uC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),Rj=t.enum(["default","insensitive"]),nX=t.enum(["first","last"]),Et=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),wt=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),le=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),Nt=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),Dt=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),xt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),jt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),mdt=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED"]),re=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),pe=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ce=t.enum(["UNAVAILABLE","PREFERRED"]),ft=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),Mt=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),vt=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),x=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Ot=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Lt=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),X=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),U=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),ue=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),et=t.enum(["MANUAL","USDA","CUSTOM","ESTIMATED"]),bdt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}),hdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Idt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),gdt=t.object({type:ue,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Cdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Adt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Sdt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Tdt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Udt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wdt=t.object({status:wt,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Rdt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),kdt=t.object({type:le,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),xdt=t.object({frequency:Nt,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jdt=t.object({type:Et,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mdt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zdt=t.object({status:Dt,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vdt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Odt=t.object({source:xt,status:jt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ndt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),qdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fdt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ddt=t.object({taskType:re,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_dt=t.object({dayOfWeek:pe,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Edt=t.object({constraintsType:ce,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ldt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Vdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),Hdt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),Qdt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ydt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Gdt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),$dt=t.object({type:ft,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Jdt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),Kdt=t.object({role:x,id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),verified:t.boolean(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Xdt=t.object({id:t.string().uuid(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),tzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),ezt=t.object({skillLevel:U,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),ozt=t.object({nutritionSource:et.nullable(),id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),density:t.number().nullable(),dietaryRestrictionId:t.number().int().nullable(),calories:t.number().nullable(),protein:t.number().nullable(),carbohydrates:t.number().nullable(),fat:t.number().nullable(),fiber:t.number().nullable(),sugar:t.number().nullable(),sodium:t.number().nullable(),usdaFoodId:t.string().nullable(),nutritionUpdatedAt:t.coerce.date().nullable()}),nzt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),azt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),izt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),lzt=t.object({type:Mt,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),rzt=t.object({status:vt,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),pzt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),czt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),uzt=t.object({status:Ot,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),yzt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),szt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),dzt=t.object({status:Lt,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),zzt=t.object({status:X,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),mzt=t.object({status:X,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),bzt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),hzt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Izt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),gzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),Czt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Azt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Szt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ws=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),CQ=t.object({select:t.lazy(()=>Rs).optional(),include:t.lazy(()=>Ws).optional()}).strict(),Rs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ks=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Tzt=t.object({select:t.lazy(()=>xs).optional(),include:t.lazy(()=>ks).optional()}).strict(),xs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),js=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),AQ=t.object({select:t.lazy(()=>Ms).optional(),include:t.lazy(()=>js).optional()}).strict(),Ms=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Zs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Pzt=t.object({select:t.lazy(()=>vs).optional(),include:t.lazy(()=>Zs).optional()}).strict(),vs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Os=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Uzt=t.object({select:t.lazy(()=>fs).optional(),include:t.lazy(()=>Os).optional()}).strict(),fs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),ws=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Wzt=t.object({select:t.lazy(()=>Ns).optional(),include:t.lazy(()=>ws).optional()}).strict(),Ns=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Bs=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Rzt=t.object({select:t.lazy(()=>qs).optional(),include:t.lazy(()=>Bs).optional()}).strict(),qs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Fs=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),kzt=t.object({select:t.lazy(()=>Ds).optional(),include:t.lazy(()=>Fs).optional()}).strict(),Ds=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),_s=t.object({menu:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),SQ=t.object({select:t.lazy(()=>Es).optional(),include:t.lazy(()=>_s).optional()}).strict(),TQ=t.object({select:t.lazy(()=>aX).nullish()}).strict(),aX=t.object({menuItems:t.boolean().optional()}).strict(),Es=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>TQ)]).optional()}).strict(),Ls=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PQ)]).optional()}).strict(),kj=t.object({select:t.lazy(()=>Vs).optional(),include:t.lazy(()=>Ls).optional()}).strict(),PQ=t.object({select:t.lazy(()=>iX).nullish()}).strict(),iX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),Vs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>PQ)]).optional()}).strict(),Hs=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>UQ)]).optional()}).strict(),xj=t.object({select:t.lazy(()=>Qs).optional(),include:t.lazy(()=>Hs).optional()}).strict(),UQ=t.object({select:t.lazy(()=>lX).nullish()}).strict(),lX=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),Qs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>WK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>UQ)]).optional()}).strict(),Ys=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>HQ)]).optional()}).strict(),xzt=t.object({select:t.lazy(()=>Gs).optional(),include:t.lazy(()=>Ys).optional()}).strict(),Gs=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>xj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>HQ)]).optional()}).strict(),$s=t.object({equipment:t.union([t.boolean(),t.lazy(()=>xj)]).optional()}).strict(),jzt=t.object({select:t.lazy(()=>Js).optional(),include:t.lazy(()=>$s).optional()}).strict(),Js=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>xj)]).optional()}).strict(),Ks=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),items:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>WQ)]).optional()}).strict(),jj=t.object({select:t.lazy(()=>Xs).optional(),include:t.lazy(()=>Ks).optional()}).strict(),WQ=t.object({select:t.lazy(()=>rX).nullish()}).strict(),rX=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),Xs=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),items:t.union([t.boolean(),t.lazy(()=>kK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>WQ)]).optional()}).strict(),td=t.object({checklist:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),RQ=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),kQ=t.object({select:t.lazy(()=>pX).nullish()}).strict(),pX=t.object({completions:t.boolean().optional()}).strict(),ed=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>kQ)]).optional()}).strict(),od=t.object({checklist:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),xQ=t.object({select:t.lazy(()=>nd).optional(),include:t.lazy(()=>od).optional()}).strict(),jQ=t.object({select:t.lazy(()=>cX).nullish()}).strict(),cX=t.object({items:t.boolean().optional()}).strict(),nd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>jj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>Gw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>jQ)]).optional()}).strict(),ad=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>xQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),Mzt=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>ad).optional()}).strict(),id=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>xQ)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>RQ)]).optional()}).strict(),ld=t.object({vendor:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional()}).strict(),Zzt=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),rd=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional()}).strict(),pd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),vzt=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),cd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),ud=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),MQ=t.object({select:t.lazy(()=>yd).optional(),include:t.lazy(()=>ud).optional()}).strict(),ZQ=t.object({select:t.lazy(()=>uX).nullish()}).strict(),uX=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),yd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>ZQ)]).optional()}).strict(),sd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),Ozt=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>sd).optional()}).strict(),vQ=t.object({select:t.lazy(()=>yX).nullish()}).strict(),yX=t.object({recipes:t.boolean().optional()}).strict(),dd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>vQ)]).optional()}).strict(),zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),fzt=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),md=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),bd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),wzt=t.object({select:t.lazy(()=>hd).optional(),include:t.lazy(()=>bd).optional()}).strict(),hd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Id=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),OQ=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),fQ=t.object({select:t.lazy(()=>sX).nullish()}).strict(),sX=t.object({items:t.boolean().optional()}).strict(),gd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>fQ)]).optional()}).strict(),Cd=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>OQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Nzt=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),Ad=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>OQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Sd=t.object({shift:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),Bzt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),Pd=t.object({user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),qzt=t.object({select:t.lazy(()=>Ud).optional(),include:t.lazy(()=>Pd).optional()}).strict(),Ud=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Wd=t.object({user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Fzt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Wd).optional()}).strict(),Rd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),kd=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>sS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Dzt=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),xd=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>sS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),jd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),wQ=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),NQ=t.object({select:t.lazy(()=>dX).nullish()}).strict(),dX=t.object({ingredients:t.boolean().optional()}).strict(),Md=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),Zd=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),_zt=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),vd=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),Od=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),Ezt=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),fd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),Fm=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),wd=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),Mj=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),BQ=t.object({select:t.lazy(()=>zX).nullish()}).strict(),zX=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),Nd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),Bd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),II=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),qQ=t.object({select:t.lazy(()=>mX).nullish()}).strict(),mX=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),qd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Fd=t.object({organization:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),eo=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),FQ=t.object({select:t.lazy(()=>bX).nullish()}).strict(),bX=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),equipment:t.boolean().optional(),qualityChecklist:t.boolean().optional(),qustomerFeedback:t.boolean().optional()}).strict(),Dd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),users:t.union([t.boolean(),t.lazy(()=>tN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>UK)]).optional(),qualityChecklist:t.union([t.boolean(),t.lazy(()=>RK)]).optional(),qustomerFeedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),_d=t.object({organization:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),$t=t.object({select:t.lazy(()=>Ed).optional(),include:t.lazy(()=>_d).optional()}).strict(),DQ=t.object({select:t.lazy(()=>hX).nullish()}).strict(),hX=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItem:t.boolean().optional(),wasteRecord:t.boolean().optional(),productionPlan:t.boolean().optional(),productionPlanItem:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraint:t.boolean().optional(),inventoryWithdrawal:t.boolean().optional(),checklistComplete:t.boolean().optional(),customerFeedback:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransaction:t.boolean().optional(),StockCount:t.boolean().optional()}).strict(),Ed=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),passwordHash:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),verified:t.boolean().optional(),role:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>Mj)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),leftoverItem:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),wasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>Kw)]).optional(),productionPlanItem:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>MK)]).optional(),schedulingConstraint:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),inventoryWithdrawal:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>Yw)]).optional(),customerFeedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),InventoryTransaction:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),StockCount:t.union([t.boolean(),t.lazy(()=>nN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),Ld=t.object({user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Lzt=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),Vd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),code:t.boolean().optional(),token:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Hd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),_Q=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),EQ=t.object({select:t.lazy(()=>IX).nullish()}).strict(),IX=t.object({recipes:t.boolean().optional()}).strict(),Qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),Yd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>_Q)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>CQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>AQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>JQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),Jt=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),LQ=t.object({select:t.lazy(()=>gX).nullish()}).strict(),gX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipment:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>_Q)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>oN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>lT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>xK)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>yS)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>AK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>SK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>TK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>CQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>gK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>AQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>CK)]).optional(),RecipeStats:t.union([t.boolean(),t.lazy(()=>JQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),$d=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>MQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Kr=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),VQ=t.object({select:t.lazy(()=>CX).nullish()}).strict(),CX=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecord:t.boolean().optional(),IngredientAllergen:t.boolean().optional(),SupplierPriceHistory:t.boolean().optional()}).strict(),Jd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),density:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),usdaFoodId:t.boolean().optional(),nutritionSource:t.boolean().optional(),nutritionUpdatedAt:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>pT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>cT)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),WasteRecord:t.union([t.boolean(),t.lazy(()=>iT)]).optional(),IngredientAllergen:t.union([t.boolean(),t.lazy(()=>Xw)]).optional(),SupplierPriceHistory:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),DietaryRestriction:t.union([t.boolean(),t.lazy(()=>MQ)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Kd=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>kj)]).optional()}).strict(),Vzt=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),Xd=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>kj)]).optional()}).strict(),tz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),HQ=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),QQ=t.object({select:t.lazy(()=>AX).nullish()}).strict(),AX=t.object({equipment:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>kj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>oT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),oz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),sS=t.object({select:t.lazy(()=>nz).optional(),include:t.lazy(()=>oz).optional()}).strict(),YQ=t.object({select:t.lazy(()=>SX).nullish()}).strict(),SX=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),nz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>uT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>rT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),az=t.object({inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),item:t.union([t.boolean(),t.lazy(()=>sS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Hzt=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>az).optional()}).strict(),iz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),item:t.union([t.boolean(),t.lazy(()=>sS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),lz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),GQ=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),$Q=t.object({select:t.lazy(()=>TX).nullish()}).strict(),TX=t.object({items:t.boolean().optional()}).strict(),rz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>II)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),items:t.union([t.boolean(),t.lazy(()=>aN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),pz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>GQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>sS)]).optional()}).strict(),Qzt=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),cz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>GQ)]).optional(),item:t.union([t.boolean(),t.lazy(()=>sS)]).optional()}).strict(),uz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),JQ=t.object({select:t.lazy(()=>yz).optional(),include:t.lazy(()=>uz).optional()}).strict(),yz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),sz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),KQ=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>sz).optional()}).strict(),XQ=t.object({select:t.lazy(()=>PX).nullish()}).strict(),PX=t.object({items:t.boolean().optional()}).strict(),dz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>Zj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>lN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),zz=t.object({order:t.union([t.boolean(),t.lazy(()=>KQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional()}).strict(),Yzt=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),mz=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>KQ)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>Kr)]).optional()}).strict(),bz=t.object({orders:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),Zj=t.object({select:t.lazy(()=>hz).optional(),include:t.lazy(()=>bz).optional()}).strict(),t0=t.object({select:t.lazy(()=>UX).nullish()}).strict(),UX=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),hz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>iN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>eN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>$w)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>t0)]).optional()}).strict(),Iz=t.object({user:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),e0=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),o0=t.object({select:t.lazy(()=>WX).nullish()}).strict(),WX=t.object({ShiftTask:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>$t)]).optional(),ShiftTask:t.union([t.boolean(),t.lazy(()=>jK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),Cz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),n0=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),a0=t.object({select:t.lazy(()=>RX).nullish()}).strict(),RX=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),Az=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>yT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),Sz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>n0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Gzt=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),Tz=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>n0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Pz=t.object({user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),$zt=t.object({select:t.lazy(()=>Uz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),Uz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>$t)]).optional()}).strict(),Wz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),vj=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Wz).optional()}).strict(),i0=t.object({select:t.lazy(()=>kX).nullish()}).strict(),kX=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),Rz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>eo)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>tg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>PK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),kz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Jzt=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),xz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),jz=t.object({menu:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>SQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),Xr=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),l0=t.object({select:t.lazy(()=>xX).nullish()}).strict(),xX=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),Mz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>vj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>SQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>pp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>Qw)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>aT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>nT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>Jw)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),Zz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),r0=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),vz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>Xr)]).optional()}).strict(),Oz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Kzt=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),wz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),Xzt=t.object({select:t.lazy(()=>Nz).optional(),include:t.lazy(()=>wz).optional()}).strict(),Nz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>Jt)]).optional()}).strict(),we=t.object({AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),servingSize:t.union([t.lazy(()=>W),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>W),t.number()]).optional(),protein:t.union([t.lazy(()=>W),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>W),t.number()]).optional(),fat:t.union([t.lazy(()=>W),t.number()]).optional(),fiber:t.union([t.lazy(()=>W),t.number()]).optional(),sugar:t.union([t.lazy(()=>W),t.number()]).optional(),sodium:t.union([t.lazy(()=>W),t.number()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Pm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),wl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),servingSize:t.union([t.lazy(()=>W),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>W),t.number()]).optional(),protein:t.union([t.lazy(()=>W),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>W),t.number()]).optional(),fat:t.union([t.lazy(()=>W),t.number()]).optional(),fiber:t.union([t.lazy(()=>W),t.number()]).optional(),sugar:t.union([t.lazy(()=>W),t.number()]).optional(),sodium:t.union([t.lazy(()=>W),t.number()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),fL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),_count:t.lazy(()=>jX).optional(),_avg:t.lazy(()=>MX).optional(),_max:t.lazy(()=>ZX).optional(),_min:t.lazy(()=>vX).optional(),_sum:t.lazy(()=>OX).optional()}).strict(),ZC=t.object({AND:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),OR:t.lazy(()=>ZC).array().optional(),NOT:t.union([t.lazy(()=>ZC),t.lazy(()=>ZC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>Tt),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>st),t.string()]).optional(),calories:t.union([t.lazy(()=>Tt),t.number()]).optional(),protein:t.union([t.lazy(()=>Tt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Tt),t.number()]).optional(),fat:t.union([t.lazy(()=>Tt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Tt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Tt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Tt),t.number()]).optional()}).strict(),Xn=t.object({AND:t.union([t.lazy(()=>Xn),t.lazy(()=>Xn).array()]).optional(),OR:t.lazy(()=>Xn).array().optional(),NOT:t.union([t.lazy(()=>Xn),t.lazy(()=>Xn).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Gm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),de=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xn),t.lazy(()=>Xn).array()]).optional(),OR:t.lazy(()=>Xn).array().optional(),NOT:t.union([t.lazy(()=>Xn),t.lazy(()=>Xn).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),wL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fX).optional(),_avg:t.lazy(()=>wX).optional(),_max:t.lazy(()=>NX).optional(),_min:t.lazy(()=>BX).optional(),_sum:t.lazy(()=>qX).optional()}).strict(),vC=t.object({AND:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),OR:t.lazy(()=>vC).array().optional(),NOT:t.union([t.lazy(()=>vC),t.lazy(()=>vC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>st),t.string()]).optional(),threshold:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>st),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),temperature:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>y),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Um=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),Nl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),temperature:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>y),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),NL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>FX).optional(),_avg:t.lazy(()=>DX).optional(),_max:t.lazy(()=>_X).optional(),_min:t.lazy(()=>EX).optional(),_sum:t.lazy(()=>LX).optional()}).strict(),OC=t.object({AND:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),OR:t.lazy(()=>OC).array().optional(),NOT:t.union([t.lazy(()=>OC),t.lazy(()=>OC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>st),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ta=t.object({AND:t.union([t.lazy(()=>ta),t.lazy(()=>ta).array()]).optional(),OR:t.lazy(()=>ta).array().optional(),NOT:t.union([t.lazy(()=>ta),t.lazy(()=>ta).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ue)]).optional(),stepNumber:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),$m=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),ze=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ta),t.lazy(()=>ta).array()]).optional(),OR:t.lazy(()=>ta).array().optional(),NOT:t.union([t.lazy(()=>ta),t.lazy(()=>ta).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ue)]).optional(),stepNumber:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),BL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>VX).optional(),_avg:t.lazy(()=>HX).optional(),_max:t.lazy(()=>QX).optional(),_min:t.lazy(()=>YX).optional(),_sum:t.lazy(()=>GX).optional()}).strict(),fC=t.object({AND:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),OR:t.lazy(()=>fC).array().optional(),NOT:t.union([t.lazy(()=>fC),t.lazy(()=>fC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>st),t.string()]).optional(),type:t.union([t.lazy(()=>$X),t.lazy(()=>ue)]).optional(),stepNumber:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ea=t.object({AND:t.union([t.lazy(()=>ea),t.lazy(()=>ea).array()]).optional(),OR:t.lazy(()=>ea).array().optional(),NOT:t.union([t.lazy(()=>ea),t.lazy(()=>ea).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),minTemp:t.union([t.lazy(()=>W),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>W),t.number()]).optional(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Jm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),me=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ea),t.lazy(()=>ea).array()]).optional(),OR:t.lazy(()=>ea).array().optional(),NOT:t.union([t.lazy(()=>ea),t.lazy(()=>ea).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>W),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>W),t.number()]).optional(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),qL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>JX).optional(),_avg:t.lazy(()=>KX).optional(),_max:t.lazy(()=>XX).optional(),_min:t.lazy(()=>ttt).optional(),_sum:t.lazy(()=>ett).optional()}).strict(),wC=t.object({AND:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),OR:t.lazy(()=>wC).array().optional(),NOT:t.union([t.lazy(()=>wC),t.lazy(()=>wC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>Tt),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>Tt),t.number()]).optional(),isCritical:t.union([t.lazy(()=>fl),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),oa=t.object({AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>W),t.number()]).optional(),actualYield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Km=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>W),t.number()]).optional(),actualYield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),FL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ott).optional(),_avg:t.lazy(()=>ntt).optional(),_max:t.lazy(()=>att).optional(),_min:t.lazy(()=>itt).optional(),_sum:t.lazy(()=>ltt).optional()}).strict(),NC=t.object({AND:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),OR:t.lazy(()=>NC).array().optional(),NOT:t.union([t.lazy(()=>NC),t.lazy(()=>NC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>Tt),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),na=t.object({AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),laborRate:t.union([t.lazy(()=>W),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>W),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Xm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>W),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>W),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),DL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>rtt).optional(),_avg:t.lazy(()=>ptt).optional(),_max:t.lazy(()=>ctt).optional(),_min:t.lazy(()=>utt).optional(),_sum:t.lazy(()=>ytt).optional()}).strict(),BC=t.object({AND:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),OR:t.lazy(()=>BC).array().optional(),NOT:t.union([t.lazy(()=>BC),t.lazy(()=>BC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>Tt),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>Tt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),aa=t.object({AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),total:t.union([t.lazy(()=>W),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional()}).strict(),tb=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),menuItem:t.lazy(()=>Ol).optional()}).strict(),zt=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),total:t.union([t.lazy(()=>W),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional()}).strict()),_L=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>stt).optional(),_avg:t.lazy(()=>dtt).optional(),_max:t.lazy(()=>ztt).optional(),_min:t.lazy(()=>mtt).optional(),_sum:t.lazy(()=>btt).optional()}).strict(),qC=t.object({AND:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),OR:t.lazy(()=>qC).array().optional(),NOT:t.union([t.lazy(()=>qC),t.lazy(()=>qC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Tt),t.number()]).optional(),total:t.union([t.lazy(()=>Tt),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number()]).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Gj),t.lazy(()=>Ze)]).optional(),menuItems:t.lazy(()=>AI).optional()}).strict(),Wm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>Vp).optional(),menuItems:t.lazy(()=>$j).optional()}).strict(),Kt=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>mN)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>mN)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>mN).optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>y),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>Gj),t.lazy(()=>Ze)]).optional(),menuItems:t.lazy(()=>AI).optional()}).strict()),EL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>htt).optional(),_avg:t.lazy(()=>Itt).optional(),_max:t.lazy(()=>gtt).optional(),_min:t.lazy(()=>Ctt).optional(),_sum:t.lazy(()=>Att).optional()}).strict(),FC=t.object({AND:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),OR:t.lazy(()=>FC).array().optional(),NOT:t.union([t.lazy(()=>FC),t.lazy(()=>FC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ne=t.object({AND:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),OR:t.lazy(()=>ne).array().optional(),NOT:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),approvedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>zS).optional(),instructions:t.lazy(()=>Jj).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict(),Fp=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional(),ingredients:t.lazy(()=>$N).optional(),instructions:t.lazy(()=>J$).optional(),createdBy:t.lazy(()=>Xe).optional(),approvedBy:t.lazy(()=>Xe).optional()}).strict(),w=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>bN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>bN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>bN).optional(),AND:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),OR:t.lazy(()=>ne).array().optional(),NOT:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),ingredients:t.lazy(()=>zS).optional(),instructions:t.lazy(()=>Jj).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),approvedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict()),LL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Stt).optional(),_avg:t.lazy(()=>Ttt).optional(),_max:t.lazy(()=>Ptt).optional(),_min:t.lazy(()=>Utt).optional(),_sum:t.lazy(()=>Wtt).optional()}).strict(),DC=t.object({AND:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),OR:t.lazy(()=>DC).array().optional(),NOT:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),xe=t.object({AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>JN),t.lazy(()=>wt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>mS).optional(),maintenanceLogs:t.lazy(()=>K$).optional()}).strict(),Dp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),recipes:t.lazy(()=>KN).optional(),maintenanceLogs:t.lazy(()=>Rtt).optional()}).strict(),Vt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),OR:t.lazy(()=>xe).array().optional(),NOT:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>JN),t.lazy(()=>wt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),recipes:t.lazy(()=>mS).optional(),maintenanceLogs:t.lazy(()=>K$).optional()}).strict()),VL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ktt).optional(),_avg:t.lazy(()=>xtt).optional(),_max:t.lazy(()=>jtt).optional(),_min:t.lazy(()=>Mtt).optional(),_sum:t.lazy(()=>Ztt).optional()}).strict(),_C=t.object({AND:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),OR:t.lazy(()=>_C).array().optional(),NOT:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>vtt),t.lazy(()=>wt)]).optional(),location:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ia=t.object({AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Kj),t.lazy(()=>xe)]).optional(),RecipeInstruction:t.union([t.lazy(()=>X$),t.lazy(()=>fe)]).optional().nullable()}).strict(),eb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>to).optional(),equipment:t.lazy(()=>Dp).optional(),RecipeInstruction:t.lazy(()=>vm).optional()}).strict(),B=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>hN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>hN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>hN).optional(),AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),equipment:t.union([t.lazy(()=>Kj),t.lazy(()=>xe)]).optional(),RecipeInstruction:t.union([t.lazy(()=>X$),t.lazy(()=>fe)]).optional().nullable()}).strict()),HL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Ott).optional(),_avg:t.lazy(()=>ftt).optional(),_max:t.lazy(()=>wtt).optional(),_min:t.lazy(()=>Ntt).optional(),_sum:t.lazy(()=>Btt).optional()}).strict(),EC=t.object({AND:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),OR:t.lazy(()=>EC).array().optional(),NOT:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable()}).strict(),la=t.object({AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>XN),t.lazy(()=>le)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Kj),t.lazy(()=>xe)]).optional()}).strict(),ob=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>Dp).optional()}).strict(),Ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>XN),t.lazy(()=>le)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>Kj),t.lazy(()=>xe)]).optional()}).strict()),QL=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qtt).optional(),_avg:t.lazy(()=>Ftt).optional(),_max:t.lazy(()=>Dtt).optional(),_min:t.lazy(()=>_tt).optional(),_sum:t.lazy(()=>Ett).optional()}).strict(),LC=t.object({AND:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),OR:t.lazy(()=>LC).array().optional(),NOT:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>Ltt),t.lazy(()=>le)]).optional(),description:t.union([t.lazy(()=>st),t.string()]).optional(),cost:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>st),t.string()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),je=t.object({AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>tB),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),items:t.lazy(()=>t4).optional(),completions:t.lazy(()=>Xj).optional()}).strict(),_p=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),items:t.lazy(()=>Vtt).optional(),completions:t.lazy(()=>e4).optional()}).strict(),Ht=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),OR:t.lazy(()=>je).array().optional(),NOT:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>tB),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),items:t.lazy(()=>t4).optional(),completions:t.lazy(()=>Xj).optional()}).strict()),YL=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Htt).optional(),_avg:t.lazy(()=>Qtt).optional(),_max:t.lazy(()=>Ytt).optional(),_min:t.lazy(()=>Gtt).optional(),_sum:t.lazy(()=>$tt).optional()}).strict(),VC=t.object({AND:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),OR:t.lazy(()=>VC).array().optional(),NOT:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Jtt),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ve=t.object({AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>eB),t.lazy(()=>Et)]).optional(),requiredPhotos:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>tM),t.lazy(()=>je)]).optional(),completions:t.lazy(()=>eM).optional()}).strict(),Rm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>_p).optional(),completions:t.lazy(()=>o4).optional()}).strict(),Xt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),OR:t.lazy(()=>Ve).array().optional(),NOT:t.union([t.lazy(()=>Ve),t.lazy(()=>Ve).array()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number().int()]).optional(),type:t.union([t.lazy(()=>eB),t.lazy(()=>Et)]).optional(),requiredPhotos:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>tM),t.lazy(()=>je)]).optional(),completions:t.lazy(()=>eM).optional()}).strict()),GL=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ktt).optional(),_avg:t.lazy(()=>Xtt).optional(),_max:t.lazy(()=>tet).optional(),_min:t.lazy(()=>eet).optional(),_sum:t.lazy(()=>oet).optional()}).strict(),HC=t.object({AND:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),OR:t.lazy(()=>HC).array().optional(),NOT:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>st),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>net),t.lazy(()=>Et)]).optional(),requiredPhotos:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),He=t.object({AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),completedById:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>tM),t.lazy(()=>je)]).optional(),completedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>eM).optional()}).strict(),km=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>_p).optional(),completedBy:t.lazy(()=>Xe).optional(),items:t.lazy(()=>o4).optional()}).strict(),at=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),OR:t.lazy(()=>He).array().optional(),NOT:t.union([t.lazy(()=>He),t.lazy(()=>He).array()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>tM),t.lazy(()=>je)]).optional(),completedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>eM).optional()}).strict()),$L=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>aet).optional(),_avg:t.lazy(()=>iet).optional(),_max:t.lazy(()=>ret).optional(),_min:t.lazy(()=>pet).optional(),_sum:t.lazy(()=>cet).optional()}).strict(),QC=t.object({AND:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),OR:t.lazy(()=>QC).array().optional(),NOT:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ra=t.object({AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>oB),t.lazy(()=>Dt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>dl).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>n4),t.lazy(()=>He)]).optional(),checklistItem:t.union([t.lazy(()=>a4),t.lazy(()=>Ve)]).optional()}).strict(),nb=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>km).optional(),checklistItem:t.lazy(()=>Rm).optional()}).strict(),mt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>oB),t.lazy(()=>Dt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>dl).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>n4),t.lazy(()=>He)]).optional(),checklistItem:t.union([t.lazy(()=>a4),t.lazy(()=>Ve)]).optional()}).strict()),JL=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uet).optional(),_avg:t.lazy(()=>yet).optional(),_max:t.lazy(()=>set).optional(),_min:t.lazy(()=>det).optional(),_sum:t.lazy(()=>zet).optional()}).strict(),YC=t.object({AND:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),OR:t.lazy(()=>YC).array().optional(),NOT:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>met),t.lazy(()=>Dt)]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>dl).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),pa=t.object({AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>oM),t.lazy(()=>Me)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional()}).strict(),ab=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>Lp).optional(),ingredient:t.lazy(()=>vl).optional()}).strict(),bt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>oM),t.lazy(()=>Me)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional()}).strict()),KL=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>bet).optional(),_avg:t.lazy(()=>het).optional(),_max:t.lazy(()=>Iet).optional(),_min:t.lazy(()=>get).optional(),_sum:t.lazy(()=>Cet).optional()}).strict(),GC=t.object({AND:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),OR:t.lazy(()=>GC).array().optional(),NOT:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),startDate:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ca=t.object({AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>nB),t.lazy(()=>xt)]).optional(),tags:t.lazy(()=>dl).optional(),status:t.union([t.lazy(()=>aB),t.lazy(()=>jt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>nM),t.lazy(()=>At)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict(),ib=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),menuItem:t.lazy(()=>Ol).optional(),respondedBy:t.lazy(()=>Xe).optional()}).strict(),q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>nB),t.lazy(()=>xt)]).optional(),tags:t.lazy(()=>dl).optional(),status:t.union([t.lazy(()=>aB),t.lazy(()=>jt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>nM),t.lazy(()=>At)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict()),XL=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Aet).optional(),_avg:t.lazy(()=>Tet).optional(),_max:t.lazy(()=>Pet).optional(),_min:t.lazy(()=>Uet).optional(),_sum:t.lazy(()=>Wet).optional()}).strict(),$C=t.object({AND:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),OR:t.lazy(()=>$C).array().optional(),NOT:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Ret),t.lazy(()=>xt)]).optional(),tags:t.lazy(()=>dl).optional(),status:t.union([t.lazy(()=>ket),t.lazy(()=>jt)]).optional(),responseText:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItems:t.lazy(()=>AI).optional(),recipes:t.lazy(()=>op).optional(),ingredients:t.lazy(()=>aM).optional()}).strict(),xm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>$j).optional(),recipes:t.lazy(()=>bS).optional(),ingredients:t.lazy(()=>i4).optional()}).strict(),it=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItems:t.lazy(()=>AI).optional(),recipes:t.lazy(()=>op).optional(),ingredients:t.lazy(()=>aM).optional()}).strict()),tV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>xet).optional(),_avg:t.lazy(()=>jet).optional(),_max:t.lazy(()=>Met).optional(),_min:t.lazy(()=>Zet).optional(),_sum:t.lazy(()=>vet).optional()}).strict(),JC=t.object({AND:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),OR:t.lazy(()=>JC).array().optional(),NOT:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ua=t.object({AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipes:t.lazy(()=>op).optional()}).strict(),lb=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>bS).optional()}).strict(),ge=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipes:t.lazy(()=>op).optional()}).strict()),eV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Oet).optional(),_avg:t.lazy(()=>fet).optional(),_max:t.lazy(()=>wet).optional(),_min:t.lazy(()=>Net).optional(),_sum:t.lazy(()=>Bet).optional()}).strict(),KC=t.object({AND:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),OR:t.lazy(()=>KC).array().optional(),NOT:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ya=t.object({AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional(),recordedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),rb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),menuItem:t.lazy(()=>Ol).optional(),recordedBy:t.lazy(()=>Xe).optional()}).strict(),F=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional(),recordedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),oV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>qet).optional(),_avg:t.lazy(()=>Fet).optional(),_max:t.lazy(()=>Det).optional(),_min:t.lazy(()=>_et).optional(),_sum:t.lazy(()=>Eet).optional()}).strict(),XC=t.object({AND:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),OR:t.lazy(()=>XC).array().optional(),NOT:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>st),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),sa=t.object({AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),recordedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),pb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),ingrediente:t.lazy(()=>vl).optional(),recordedBy:t.lazy(()=>Xe).optional()}).strict(),D=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),ingrediente:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),recordedBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),nV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Let).optional(),_avg:t.lazy(()=>Vet).optional(),_max:t.lazy(()=>Het).optional(),_min:t.lazy(()=>Qet).optional(),_sum:t.lazy(()=>Yet).optional()}).strict(),tA=t.object({AND:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),OR:t.lazy(()=>tA).array().optional(),NOT:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),reason:t.union([t.lazy(()=>st),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>hS).optional()}).strict(),jm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),createdBy:t.lazy(()=>Xe).optional(),items:t.lazy(()=>iB).optional()}).strict(),lt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>hS).optional()}).strict()),aV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Get).optional(),_avg:t.lazy(()=>$et).optional(),_max:t.lazy(()=>Jet).optional(),_min:t.lazy(()=>Ket).optional(),_sum:t.lazy(()=>Xet).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),da=t.object({AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>l4),t.lazy(()=>Qe)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict(),cb=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>jm).optional(),recipe:t.lazy(()=>to).optional(),assignedTo:t.lazy(()=>Xe).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>l4),t.lazy(()=>Qe)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable()}).strict()),iV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>tot).optional(),_avg:t.lazy(()=>eot).optional(),_max:t.lazy(()=>oot).optional(),_min:t.lazy(()=>not).optional(),_sum:t.lazy(()=>aot).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),za=t.object({AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number()]).optional(),taskType:t.union([t.lazy(()=>lB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>r4),t.lazy(()=>Je)]).optional()}).strict(),ub=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>Nm).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>lB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>r4),t.lazy(()=>Je)]).optional()}).strict()),lV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>iot).optional(),_avg:t.lazy(()=>lot).optional(),_max:t.lazy(()=>rot).optional(),_min:t.lazy(()=>pot).optional(),_sum:t.lazy(()=>cot).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>uot),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ma=t.object({AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>rB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),yb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Xe).optional()}).strict(),Ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>rB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),rV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>yot).optional(),_avg:t.lazy(()=>sot).optional(),_max:t.lazy(()=>dot).optional(),_min:t.lazy(()=>zot).optional(),_sum:t.lazy(()=>mot).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>bot),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ba=t.object({AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>pB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),sb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Xe).optional()}).strict(),Se=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>pB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),pV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>hot).optional(),_avg:t.lazy(()=>Iot).optional(),_max:t.lazy(()=>got).optional(),_min:t.lazy(()=>Cot).optional(),_sum:t.lazy(()=>Aot).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>Sot),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ha=t.object({AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number()]).optional(),dateTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional(),recipe:t.union([t.lazy(()=>p4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),db=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>yp).optional(),recipe:t.lazy(()=>to).optional(),createdBy:t.lazy(()=>Xe).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional(),recipe:t.union([t.lazy(()=>p4),t.lazy(()=>v)]).optional().nullable(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),cV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Tot).optional(),_avg:t.lazy(()=>Pot).optional(),_max:t.lazy(()=>Uot).optional(),_min:t.lazy(()=>Wot).optional(),_sum:t.lazy(()=>Rot).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),recipeId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ro=t.object({AND:t.union([t.lazy(()=>ro),t.lazy(()=>ro).array()]).optional(),OR:t.lazy(()=>ro).array().optional(),NOT:t.union([t.lazy(()=>ro),t.lazy(()=>ro).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>iM).optional()}).strict(),Mm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),ingredients:t.lazy(()=>c4).optional()}).strict(),tp=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ro),t.lazy(()=>ro).array()]).optional(),OR:t.lazy(()=>ro).array().optional(),NOT:t.union([t.lazy(()=>ro),t.lazy(()=>ro).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>iM).optional()}).strict()),uV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>kot).optional(),_avg:t.lazy(()=>xot).optional(),_max:t.lazy(()=>jot).optional(),_min:t.lazy(()=>Mot).optional(),_sum:t.lazy(()=>Zot).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),Ia=t.object({AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),allergen:t.union([t.lazy(()=>u4),t.lazy(()=>ro)]).optional()}).strict(),zb=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>vl).optional(),allergen:t.lazy(()=>Mm).optional()}).strict(),ht=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),allergen:t.union([t.lazy(()=>u4),t.lazy(()=>ro)]).optional()}).strict()),yV=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>vot).optional(),_avg:t.lazy(()=>Oot).optional(),_max:t.lazy(()=>fot).optional(),_min:t.lazy(()=>wot).optional(),_sum:t.lazy(()=>Not).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),ga=t.object({AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional()}).strict(),mb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ol).optional()}).strict(),Te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional()}).strict()),sV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Bot).optional(),_avg:t.lazy(()=>qot).optional(),_max:t.lazy(()=>Fot).optional(),_min:t.lazy(()=>Dot).optional(),_sum:t.lazy(()=>_ot).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>st),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),yl=t.object({AND:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),OR:t.lazy(()=>yl).array().optional(),NOT:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),bb=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dm=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),OR:t.lazy(()=>yl).array().optional(),NOT:t.union([t.lazy(()=>yl),t.lazy(()=>yl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict()),dV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Eot).optional(),_avg:t.lazy(()=>Lot).optional(),_max:t.lazy(()=>Vot).optional(),_min:t.lazy(()=>Hot).optional(),_sum:t.lazy(()=>Qot).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>st),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ke=t.object({AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurants:t.lazy(()=>y4).optional(),users:t.lazy(()=>lM).optional()}).strict(),Ep=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>Yot).optional(),users:t.lazy(()=>s4).optional()}).strict(),jl=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),OR:t.lazy(()=>ke).array().optional(),NOT:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurants:t.lazy(()=>y4).optional(),users:t.lazy(()=>lM).optional()}).strict()),zV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Got).optional(),_avg:t.lazy(()=>$ot).optional(),_max:t.lazy(()=>Jot).optional(),_min:t.lazy(()=>Kot).optional(),_sum:t.lazy(()=>Xot).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Bt=t.object({AND:t.union([t.lazy(()=>Bt),t.lazy(()=>Bt).array()]).optional(),OR:t.lazy(()=>Bt).array().optional(),NOT:t.union([t.lazy(()=>Bt),t.lazy(()=>Bt).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>d4),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),items:t.lazy(()=>gS).optional(),transactions:t.lazy(()=>CS).optional(),stockCounts:t.lazy(()=>rM).optional()}).strict(),Jr=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),items:t.lazy(()=>cB).optional(),transactions:t.lazy(()=>uB).optional(),stockCounts:t.lazy(()=>z4).optional()}).strict(),Yn=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>Bt),t.lazy(()=>Bt).array()]).optional(),OR:t.lazy(()=>Bt).array().optional(),NOT:t.union([t.lazy(()=>Bt),t.lazy(()=>Bt).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>d4),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),items:t.lazy(()=>gS).optional(),transactions:t.lazy(()=>CS).optional(),stockCounts:t.lazy(()=>rM).optional()}).strict()),mV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>tnt).optional(),_avg:t.lazy(()=>ent).optional(),_max:t.lazy(()=>ont).optional(),_min:t.lazy(()=>nnt).optional(),_sum:t.lazy(()=>ant).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>int),t.lazy(()=>ft)]).optional(),isActive:t.union([t.lazy(()=>fl),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),N=t.object({AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>pM),t.lazy(()=>ke)]).optional().nullable(),users:t.lazy(()=>lM).optional(),cookbooks:t.lazy(()=>m4).optional(),inventory:t.union([t.lazy(()=>b4),t.lazy(()=>Bt)]).optional().nullable(),orders:t.lazy(()=>cM).optional(),recipes:t.lazy(()=>op).optional(),menus:t.lazy(()=>h4).optional(),salesTransactions:t.lazy(()=>uM).optional(),leftoverItem:t.lazy(()=>AS).optional(),wasteRecord:t.lazy(()=>SS).optional(),productionPlan:t.lazy(()=>yM).optional(),equipment:t.lazy(()=>I4).optional(),qualityChecklist:t.lazy(()=>g4).optional(),qustomerFeedback:t.lazy(()=>TS).optional()}).strict(),Ma=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organization:t.lazy(()=>Ep).optional(),users:t.lazy(()=>s4).optional(),cookbooks:t.lazy(()=>lnt).optional(),inventory:t.lazy(()=>Jr).optional(),orders:t.lazy(()=>C4).optional(),recipes:t.lazy(()=>bS).optional(),menus:t.lazy(()=>rnt).optional(),salesTransactions:t.lazy(()=>A4).optional(),leftoverItem:t.lazy(()=>yB).optional(),wasteRecord:t.lazy(()=>sB).optional(),productionPlan:t.lazy(()=>S4).optional(),equipment:t.lazy(()=>pnt).optional(),qualityChecklist:t.lazy(()=>cnt).optional(),qustomerFeedback:t.lazy(()=>dB).optional()}).strict(),J=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),OR:t.lazy(()=>N).array().optional(),NOT:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>pM),t.lazy(()=>ke)]).optional().nullable(),users:t.lazy(()=>lM).optional(),cookbooks:t.lazy(()=>m4).optional(),inventory:t.union([t.lazy(()=>b4),t.lazy(()=>Bt)]).optional().nullable(),orders:t.lazy(()=>cM).optional(),recipes:t.lazy(()=>op).optional(),menus:t.lazy(()=>h4).optional(),salesTransactions:t.lazy(()=>uM).optional(),leftoverItem:t.lazy(()=>AS).optional(),wasteRecord:t.lazy(()=>SS).optional(),productionPlan:t.lazy(()=>yM).optional(),equipment:t.lazy(()=>I4).optional(),qualityChecklist:t.lazy(()=>g4).optional(),qustomerFeedback:t.lazy(()=>TS).optional()}).strict()),bV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>unt).optional(),_avg:t.lazy(()=>ynt).optional(),_max:t.lazy(()=>snt).optional(),_min:t.lazy(()=>dnt).optional(),_sum:t.lazy(()=>znt).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>st),t.string()]).optional(),city:t.union([t.lazy(()=>st),t.string()]).optional(),zipCode:t.union([t.lazy(()=>st),t.string()]).optional(),state:t.union([t.lazy(()=>st),t.string()]).optional(),owner:t.union([t.lazy(()=>st),t.string()]).optional(),organizationId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>fl),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable()}).strict(),Z=t.object({AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>_t),t.boolean()]).optional(),role:t.union([t.lazy(()=>zB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>pM),t.lazy(()=>ke)]).optional().nullable(),restaurant:t.union([t.lazy(()=>sM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>T4).optional(),prepItems:t.lazy(()=>PS).optional(),inventoryUpdates:t.lazy(()=>gS).optional(),sessions:t.lazy(()=>P4).optional(),passwordResets:t.lazy(()=>U4).optional(),leftoverItem:t.lazy(()=>AS).optional(),wasteRecord:t.lazy(()=>SS).optional(),productionPlan:t.lazy(()=>yM).optional(),productionPlanItem:t.lazy(()=>hS).optional(),availability:t.lazy(()=>W4).optional(),schedulingConstraint:t.lazy(()=>R4).optional(),inventoryWithdrawal:t.lazy(()=>US).optional(),checklistComplete:t.lazy(()=>Xj).optional(),customerFeedback:t.lazy(()=>TS).optional(),recipeVersionsCreated:t.lazy(()=>qA).optional(),recipeVersionsApproved:t.lazy(()=>qA).optional(),InventoryTransaction:t.lazy(()=>CS).optional(),StockCount:t.lazy(()=>rM).optional()}).strict(),Xe=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Ep).optional(),restaurant:t.lazy(()=>Ma).optional(),shifts:t.lazy(()=>mnt).optional(),prepItems:t.lazy(()=>mB).optional(),inventoryUpdates:t.lazy(()=>cB).optional(),sessions:t.lazy(()=>bnt).optional(),passwordResets:t.lazy(()=>hnt).optional(),leftoverItem:t.lazy(()=>yB).optional(),wasteRecord:t.lazy(()=>sB).optional(),productionPlan:t.lazy(()=>S4).optional(),productionPlanItem:t.lazy(()=>iB).optional(),availability:t.lazy(()=>Int).optional(),schedulingConstraint:t.lazy(()=>gnt).optional(),inventoryWithdrawal:t.lazy(()=>bB).optional(),checklistComplete:t.lazy(()=>e4).optional(),customerFeedback:t.lazy(()=>dB).optional(),recipeVersionsCreated:t.lazy(()=>TN).optional(),recipeVersionsApproved:t.lazy(()=>TN).optional(),InventoryTransaction:t.lazy(()=>uB).optional(),StockCount:t.lazy(()=>z4).optional()}).strict(),j=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),OR:t.lazy(()=>Z).array().optional(),NOT:t.union([t.lazy(()=>Z),t.lazy(()=>Z).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>_t),t.boolean()]).optional(),role:t.union([t.lazy(()=>zB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>pM),t.lazy(()=>ke)]).optional().nullable(),restaurant:t.union([t.lazy(()=>sM),t.lazy(()=>N)]).optional().nullable(),shifts:t.lazy(()=>T4).optional(),prepItems:t.lazy(()=>PS).optional(),inventoryUpdates:t.lazy(()=>gS).optional(),sessions:t.lazy(()=>P4).optional(),passwordResets:t.lazy(()=>U4).optional(),leftoverItem:t.lazy(()=>AS).optional(),wasteRecord:t.lazy(()=>SS).optional(),productionPlan:t.lazy(()=>yM).optional(),productionPlanItem:t.lazy(()=>hS).optional(),availability:t.lazy(()=>W4).optional(),schedulingConstraint:t.lazy(()=>R4).optional(),inventoryWithdrawal:t.lazy(()=>US).optional(),checklistComplete:t.lazy(()=>Xj).optional(),customerFeedback:t.lazy(()=>TS).optional(),recipeVersionsCreated:t.lazy(()=>qA).optional(),recipeVersionsApproved:t.lazy(()=>qA).optional(),InventoryTransaction:t.lazy(()=>CS).optional(),StockCount:t.lazy(()=>rM).optional()}).strict()),hV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cnt).optional(),_avg:t.lazy(()=>Ant).optional(),_max:t.lazy(()=>Snt).optional(),_min:t.lazy(()=>Tnt).optional(),_sum:t.lazy(()=>Pnt).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>st),t.string()]).optional(),sub:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>st),t.string()]).optional(),firstName:t.union([t.lazy(()=>st),t.string()]).optional(),lastName:t.union([t.lazy(()=>st),t.string()]).optional(),profileImage:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>fl),t.boolean()]).optional(),role:t.union([t.lazy(()=>Unt),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ca=t.object({AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),hb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Xe).optional()}).strict(),Pe=t.union([t.object({id:t.string().uuid(),code:t.string(),token:t.string()}),t.object({id:t.string().uuid(),code:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({code:t.string(),token:t.string()}),t.object({code:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),code:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),IV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wnt).optional(),_avg:t.lazy(()=>Rnt).optional(),_max:t.lazy(()=>knt).optional(),_min:t.lazy(()=>xnt).optional(),_sum:t.lazy(()=>jnt).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>st),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),code:t.union([t.lazy(()=>st),t.string()]).optional(),token:t.union([t.lazy(()=>st),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),recipes:t.lazy(()=>op).optional(),restaurant:t.union([t.lazy(()=>sM),t.lazy(()=>N)]).optional().nullable()}).strict(),Zm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipes:t.lazy(()=>bS).optional(),restaurant:t.lazy(()=>Ma).optional()}).strict(),te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>op).optional(),restaurant:t.union([t.lazy(()=>sM),t.lazy(()=>N)]).optional().nullable()}).strict()),gV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Mnt).optional(),_avg:t.lazy(()=>Znt).optional(),_max:t.lazy(()=>vnt).optional(),_min:t.lazy(()=>Ont).optional(),_sum:t.lazy(()=>fnt).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>st),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>dl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number()]).optional(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>_t),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>hB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>k4),t.lazy(()=>Ye)]).optional(),ingredients:t.lazy(()=>zS).optional(),instructions:t.lazy(()=>Jj).optional(),menuItems:t.lazy(()=>AI).optional(),foodCostHistory:t.lazy(()=>x4).optional(),prepHistory:t.lazy(()=>j4).optional(),prepBoards:t.lazy(()=>M4).optional(),prepItems:t.lazy(()=>PS).optional(),menuItemRecipes:t.lazy(()=>dM).optional(),productionPlanItems:t.lazy(()=>hS).optional(),withdrawals:t.lazy(()=>US).optional(),tags:t.lazy(()=>Z4).optional(),versions:t.lazy(()=>qA).optional(),equipment:t.lazy(()=>mS).optional(),dietaryRestrictions:t.lazy(()=>zM).optional(),temperatures:t.lazy(()=>v4).optional(),yields:t.lazy(()=>O4).optional(),laborCosts:t.lazy(()=>f4).optional(),nutritionalInfo:t.union([t.lazy(()=>w4),t.lazy(()=>we)]).optional().nullable(),criticalPoints:t.lazy(()=>N4).optional(),storage:t.union([t.lazy(()=>B4),t.lazy(()=>Ne)]).optional().nullable(),photos:t.lazy(()=>q4).optional(),RecipeStats:t.union([t.lazy(()=>F4),t.lazy(()=>Be)]).optional().nullable()}).strict(),to=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),cookBook:t.lazy(()=>Zm).optional(),ingredients:t.lazy(()=>$N).optional(),instructions:t.lazy(()=>J$).optional(),menuItems:t.lazy(()=>$j).optional(),foodCostHistory:t.lazy(()=>wnt).optional(),prepHistory:t.lazy(()=>Nnt).optional(),prepBoards:t.lazy(()=>Bnt).optional(),prepItems:t.lazy(()=>mB).optional(),menuItemRecipes:t.lazy(()=>D4).optional(),productionPlanItems:t.lazy(()=>iB).optional(),withdrawals:t.lazy(()=>bB).optional(),tags:t.lazy(()=>qnt).optional(),versions:t.lazy(()=>TN).optional(),equipment:t.lazy(()=>KN).optional(),dietaryRestrictions:t.lazy(()=>_4).optional(),temperatures:t.lazy(()=>Fnt).optional(),yields:t.lazy(()=>Dnt).optional(),laborCosts:t.lazy(()=>_nt).optional(),nutritionalInfo:t.lazy(()=>Pm).optional(),criticalPoints:t.lazy(()=>Ent).optional(),storage:t.lazy(()=>Um).optional(),photos:t.lazy(()=>Lnt).optional(),RecipeStats:t.lazy(()=>fm).optional()}).strict(),C=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>dl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>_t),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>hB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),cookBook:t.union([t.lazy(()=>k4),t.lazy(()=>Ye)]).optional(),ingredients:t.lazy(()=>zS).optional(),instructions:t.lazy(()=>Jj).optional(),menuItems:t.lazy(()=>AI).optional(),foodCostHistory:t.lazy(()=>x4).optional(),prepHistory:t.lazy(()=>j4).optional(),prepBoards:t.lazy(()=>M4).optional(),prepItems:t.lazy(()=>PS).optional(),menuItemRecipes:t.lazy(()=>dM).optional(),productionPlanItems:t.lazy(()=>hS).optional(),withdrawals:t.lazy(()=>US).optional(),tags:t.lazy(()=>Z4).optional(),versions:t.lazy(()=>qA).optional(),equipment:t.lazy(()=>mS).optional(),dietaryRestrictions:t.lazy(()=>zM).optional(),temperatures:t.lazy(()=>v4).optional(),yields:t.lazy(()=>O4).optional(),laborCosts:t.lazy(()=>f4).optional(),nutritionalInfo:t.union([t.lazy(()=>w4),t.lazy(()=>we)]).optional().nullable(),criticalPoints:t.lazy(()=>N4).optional(),storage:t.union([t.lazy(()=>B4),t.lazy(()=>Ne)]).optional().nullable(),photos:t.lazy(()=>q4).optional(),RecipeStats:t.union([t.lazy(()=>F4),t.lazy(()=>Be)]).optional().nullable()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),_count:t.lazy(()=>Vnt).optional(),_avg:t.lazy(()=>Hnt).optional(),_max:t.lazy(()=>Qnt).optional(),_min:t.lazy(()=>Ynt).optional(),_sum:t.lazy(()=>Gnt).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),imageUrls:t.lazy(()=>dl).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>fl),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>fl),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>st),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>$nt),t.lazy(()=>U)]).optional()}).strict(),kt=t.object({AND:t.union([t.lazy(()=>kt),t.lazy(()=>kt).array()]).optional(),OR:t.lazy(()=>kt).array().optional(),NOT:t.union([t.lazy(()=>kt),t.lazy(()=>kt).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>IB),t.lazy(()=>et)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>zS).optional(),inventoryItems:t.lazy(()=>gS).optional(),orderItems:t.lazy(()=>mM).optional(),vendors:t.lazy(()=>E4).optional(),WasteRecord:t.lazy(()=>SS).optional(),IngredientAllergen:t.lazy(()=>iM).optional(),SupplierPriceHistory:t.lazy(()=>bM).optional(),DietaryRestriction:t.union([t.lazy(()=>L4),t.lazy(()=>Oe)]).optional().nullable()}).strict(),vl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeIngredients:t.lazy(()=>$N).optional(),inventoryItems:t.lazy(()=>cB).optional(),orderItems:t.lazy(()=>V4).optional(),vendors:t.lazy(()=>Jnt).optional(),WasteRecord:t.lazy(()=>sB).optional(),IngredientAllergen:t.lazy(()=>c4).optional(),SupplierPriceHistory:t.lazy(()=>H4).optional(),DietaryRestriction:t.lazy(()=>xm).optional()}).strict(),G=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>kt),t.lazy(()=>kt).array()]).optional(),OR:t.lazy(()=>kt).array().optional(),NOT:t.union([t.lazy(()=>kt),t.lazy(()=>kt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),calories:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>IB),t.lazy(()=>et)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>zS).optional(),inventoryItems:t.lazy(()=>gS).optional(),orderItems:t.lazy(()=>mM).optional(),vendors:t.lazy(()=>E4).optional(),WasteRecord:t.lazy(()=>SS).optional(),IngredientAllergen:t.lazy(()=>iM).optional(),SupplierPriceHistory:t.lazy(()=>bM).optional(),DietaryRestriction:t.union([t.lazy(()=>L4),t.lazy(()=>Oe)]).optional().nullable()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Knt).optional(),_avg:t.lazy(()=>Xnt).optional(),_max:t.lazy(()=>tat).optional(),_min:t.lazy(()=>eat).optional(),_sum:t.lazy(()=>oat).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),category:t.union([t.lazy(()=>st),t.string()]).optional(),price:t.union([t.lazy(()=>Tt),t.number()]).optional(),density:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nat),t.lazy(()=>et)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable()}).strict(),Aa=t.object({AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>TI).optional(),isOptional:t.union([t.lazy(()=>_t),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),recipeVersion:t.union([t.lazy(()=>hM),t.lazy(()=>ne)]).optional().nullable()}).strict(),Ib=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>to).optional(),ingredient:t.lazy(()=>vl).optional(),recipeVersion:t.lazy(()=>Fp).optional()}).strict(),L=t.union([t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>IN)}),t.object({id:t.number().int()}),t.object({recipeId_ingredientId:t.lazy(()=>IN)})]).and(t.object({id:t.number().int().optional(),recipeId_ingredientId:t.lazy(()=>IN).optional(),AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>TI).optional(),isOptional:t.union([t.lazy(()=>_t),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),recipeVersion:t.union([t.lazy(()=>hM),t.lazy(()=>ne)]).optional().nullable()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>aat).optional(),_avg:t.lazy(()=>iat).optional(),_max:t.lazy(()=>lat).optional(),_min:t.lazy(()=>rat).optional(),_sum:t.lazy(()=>pat).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>TI).optional(),isOptional:t.union([t.lazy(()=>fl),t.boolean()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>hM),t.lazy(()=>ne)]).optional().nullable(),equipment:t.lazy(()=>mS).optional()}).strict(),vm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>to).optional(),RecipeVersion:t.lazy(()=>Fp).optional(),equipment:t.lazy(()=>KN).optional()}).strict(),rt=t.union([t.object({id:t.number().int(),recipeId_stepNumber:t.lazy(()=>gN)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber:t.lazy(()=>gN)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber:t.lazy(()=>gN).optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),RecipeVersion:t.union([t.lazy(()=>hM),t.lazy(()=>ne)]).optional().nullable(),equipment:t.lazy(()=>mS).optional()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>cat).optional(),_avg:t.lazy(()=>uat).optional(),_max:t.lazy(()=>yat).optional(),_min:t.lazy(()=>sat).optional(),_sum:t.lazy(()=>dat).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>st),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>fl),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),ae=t.object({AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>W),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>W),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>W),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>W),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>W),t.number()]).optional(),averageCost:t.union([t.lazy(()=>W),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>CS).optional(),withdrawals:t.lazy(()=>US).optional(),stockCounts:t.lazy(()=>IM).optional()}).strict(),yp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>Jr).optional(),ingredient:t.lazy(()=>vl).optional(),lastUpdatedBy:t.lazy(()=>Xe).optional(),transactions:t.lazy(()=>uB).optional(),withdrawals:t.lazy(()=>bB).optional(),stockCounts:t.lazy(()=>Q4).optional()}).strict(),f=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>CN)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>CN)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>CN).optional(),AND:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),OR:t.lazy(()=>ae).array().optional(),NOT:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>W),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>W),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>W),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>W),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>W),t.number()]).optional(),averageCost:t.union([t.lazy(()=>W),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>SI),t.lazy(()=>Z)]).optional().nullable(),transactions:t.lazy(()=>CS).optional(),withdrawals:t.lazy(()=>US).optional(),stockCounts:t.lazy(()=>IM).optional()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>zat).optional(),_avg:t.lazy(()=>mat).optional(),_max:t.lazy(()=>bat).optional(),_min:t.lazy(()=>hat).optional(),_sum:t.lazy(()=>Iat).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>Tt),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>Tt),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>Tt),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>Tt),t.number()]).optional(),averageCost:t.union([t.lazy(()=>Tt),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable()}).strict(),Sa=t.object({AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>gB),t.lazy(()=>Mt)]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>W),t.number()]).optional(),newQty:t.union([t.lazy(()=>W),t.number()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),item:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),gb=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>Jr).optional(),item:t.lazy(()=>yp).optional(),createdBy:t.lazy(()=>Xe).optional()}).strict(),V=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),type:t.union([t.lazy(()=>gB),t.lazy(()=>Mt)]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>W),t.number()]).optional(),newQty:t.union([t.lazy(()=>W),t.number()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),item:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>gat).optional(),_avg:t.lazy(()=>Cat).optional(),_max:t.lazy(()=>Aat).optional(),_min:t.lazy(()=>Sat).optional(),_sum:t.lazy(()=>Tat).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>Pat),t.lazy(()=>Mt)]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),previousQty:t.union([t.lazy(()=>Tt),t.number()]).optional(),newQty:t.union([t.lazy(()=>Tt),t.number()]).optional(),cost:t.union([t.lazy(()=>Gn),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>CB),t.lazy(()=>vt)]).optional(),startedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>IM).optional()}).strict(),Om=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>Jr).optional(),createdBy:t.lazy(()=>Xe).optional(),items:t.lazy(()=>Q4).optional()}).strict(),pt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>CB),t.lazy(()=>vt)]).optional(),startedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>WS),t.lazy(()=>Bt)]).optional(),createdBy:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),items:t.lazy(()=>IM).optional()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Uat).optional(),_avg:t.lazy(()=>Wat).optional(),_max:t.lazy(()=>Rat).optional(),_min:t.lazy(()=>kat).optional(),_sum:t.lazy(()=>xat).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>jat),t.lazy(()=>vt)]).optional(),startedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),Ta=t.object({AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>W),t.number()]).optional(),actualQty:t.union([t.lazy(()=>W),t.number()]).optional(),difference:t.union([t.lazy(()=>W),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>Y4),t.lazy(()=>Ge)]).optional(),item:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional()}).strict(),Cb=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),stockCount:t.lazy(()=>Om).optional(),item:t.lazy(()=>yp).optional()}).strict(),It=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>AN)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>AN)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>AN).optional(),AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>W),t.number()]).optional(),actualQty:t.union([t.lazy(()=>W),t.number()]).optional(),difference:t.union([t.lazy(()=>W),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>Y4),t.lazy(()=>Ge)]).optional(),item:t.union([t.lazy(()=>IS),t.lazy(()=>ae)]).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Mat).optional(),_avg:t.lazy(()=>Zat).optional(),_max:t.lazy(()=>vat).optional(),_min:t.lazy(()=>Oat).optional(),_sum:t.lazy(()=>fat).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>Tt),t.number()]).optional(),actualQty:t.union([t.lazy(()=>Tt),t.number()]).optional(),difference:t.union([t.lazy(()=>Tt),t.number()]).optional(),notes:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),totalCost:t.union([t.lazy(()=>W),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>W),t.number()]).optional(),averageRating:t.union([t.lazy(()=>W),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>y),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),fm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>to).optional()}).strict(),Bl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),totalCost:t.union([t.lazy(()=>W),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>W),t.number()]).optional(),averageRating:t.union([t.lazy(()=>W),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>y),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>wat).optional(),_avg:t.lazy(()=>Nat).optional(),_max:t.lazy(()=>Bat).optional(),_min:t.lazy(()=>qat).optional(),_sum:t.lazy(()=>Fat).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>Tt),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>Tt),t.number()]).optional(),averageRating:t.union([t.lazy(()=>Tt),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Dr),t.coerce.date()]).optional().nullable()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>AB),t.lazy(()=>Ot)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>oM),t.lazy(()=>Me)]).optional(),items:t.lazy(()=>mM).optional()}).strict(),wm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),vendor:t.lazy(()=>Lp).optional(),items:t.lazy(()=>V4).optional()}).strict(),ct=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>AB),t.lazy(()=>Ot)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),vendor:t.union([t.lazy(()=>oM),t.lazy(()=>Me)]).optional(),items:t.lazy(()=>mM).optional()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dat).optional(),_avg:t.lazy(()=>_at).optional(),_max:t.lazy(()=>Eat).optional(),_min:t.lazy(()=>Lat).optional(),_sum:t.lazy(()=>Vat).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Hat),t.lazy(()=>Ot)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Pa=t.object({AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),orderId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),order:t.union([t.lazy(()=>G4),t.lazy(()=>$e)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional()}).strict(),Ab=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>wm).optional(),ingredient:t.lazy(()=>vl).optional()}).strict(),gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),orderId:t.union([t.lazy(()=>y),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),order:t.union([t.lazy(()=>G4),t.lazy(()=>$e)]).optional(),ingredient:t.union([t.lazy(()=>ep),t.lazy(()=>kt)]).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qat).optional(),_avg:t.lazy(()=>Yat).optional(),_max:t.lazy(()=>Gat).optional(),_min:t.lazy(()=>$at).optional(),_sum:t.lazy(()=>Jat).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Tt),t.number()]).optional(),unit:t.union([t.lazy(()=>st),t.string()]).optional(),price:t.union([t.lazy(()=>Tt),t.number()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),orders:t.lazy(()=>cM).optional(),ingredients:t.lazy(()=>aM).optional(),supplierPriceHistory:t.lazy(()=>bM).optional()}).strict(),Lp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>C4).optional(),ingredients:t.lazy(()=>i4).optional(),supplierPriceHistory:t.lazy(()=>H4).optional()}).strict(),Qt=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),orders:t.lazy(()=>cM).optional(),ingredients:t.lazy(()=>aM).optional(),supplierPriceHistory:t.lazy(()=>bM).optional()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Kat).optional(),_avg:t.lazy(()=>Xat).optional(),_max:t.lazy(()=>tit).optional(),_min:t.lazy(()=>eit).optional(),_sum:t.lazy(()=>oit).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),contact:t.union([t.lazy(()=>st),t.string()]).optional(),email:t.union([t.lazy(()=>st),t.string()]).optional(),phone:t.union([t.lazy(()=>st),t.string()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>SB),t.lazy(()=>Lt)]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>$4).optional()}).strict(),Nm=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>Xe).optional(),ShiftTask:t.lazy(()=>nit).optional()}).strict(),ee=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>SB),t.lazy(()=>Lt)]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional(),ShiftTask:t.lazy(()=>$4).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>ait).optional(),_avg:t.lazy(()=>iit).optional(),_max:t.lazy(()=>lit).optional(),_min:t.lazy(()=>rit).optional(),_sum:t.lazy(()=>pit).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>cit),t.lazy(()=>Lt)]).optional()}).strict(),Ke=t.object({AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipes:t.lazy(()=>op).optional(),prepItems:t.lazy(()=>PS).optional()}).strict(),Bm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>bS).optional(),prepItems:t.lazy(()=>mB).optional()}).strict(),oe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipes:t.lazy(()=>op).optional(),prepItems:t.lazy(()=>PS).optional()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>uit).optional(),_avg:t.lazy(()=>yit).optional(),_max:t.lazy(()=>sit).optional(),_min:t.lazy(()=>dit).optional(),_sum:t.lazy(()=>zit).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),status:t.union([t.lazy(()=>J4),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ua=t.object({AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>K4),t.lazy(()=>Ke)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),Sb=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>Bm).optional(),recipe:t.lazy(()=>to).optional(),assignedTo:t.lazy(()=>Xe).optional()}).strict(),H=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>K4),t.lazy(()=>Ke)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional(),assignedTo:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>mit).optional(),_avg:t.lazy(()=>bit).optional(),_max:t.lazy(()=>hit).optional(),_min:t.lazy(()=>Iit).optional(),_sum:t.lazy(()=>git).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>J4),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Wa=t.object({AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict(),Tb=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>Xe).optional()}).strict(),Ue=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),userId:t.union([t.lazy(()=>y),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>Fe),t.lazy(()=>Z)]).optional()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Cit).optional(),_avg:t.lazy(()=>Ait).optional(),_max:t.lazy(()=>Sit).optional(),_min:t.lazy(()=>Tit).optional(),_sum:t.lazy(()=>Pit).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>st),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>AI).optional(),MenuCategory:t.lazy(()=>X4).optional()}).strict(),Vp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>Ma).optional(),menuItems:t.lazy(()=>$j).optional(),MenuCategory:t.lazy(()=>Uit).optional()}).strict(),Yt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>$n),t.lazy(()=>N)]).optional(),menuItems:t.lazy(()=>AI).optional(),MenuCategory:t.lazy(()=>X4).optional()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Wit).optional(),_avg:t.lazy(()=>Rit).optional(),_max:t.lazy(()=>kit).optional(),_min:t.lazy(()=>xit).optional(),_sum:t.lazy(()=>jit).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),Ra=t.object({AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Pb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ol).optional(),recipe:t.lazy(()=>to).optional()}).strict(),Ct=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>SN)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>SN)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>SN).optional(),AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>CI),t.lazy(()=>At)]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),NV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mit).optional(),_avg:t.lazy(()=>Zit).optional(),_max:t.lazy(()=>vit).optional(),_min:t.lazy(()=>Oit).optional(),_sum:t.lazy(()=>fit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),At=t.object({AND:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),OR:t.lazy(()=>At).array().optional(),NOT:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>W),t.number()]).optional(),foodCost:t.union([t.lazy(()=>W),t.number()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),recipeIds:t.lazy(()=>TI).optional(),recipeServingsAmount:t.lazy(()=>Rb).optional(),recipeServingsCost:t.lazy(()=>Rb).optional(),allergens:t.lazy(()=>dl).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),categoryId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>Gj),t.lazy(()=>Ze)]).optional(),category:t.union([t.lazy(()=>t2),t.lazy(()=>ve)]).optional().nullable(),recipes:t.lazy(()=>op).optional(),menuItemRecipes:t.lazy(()=>dM).optional(),nutritionalInfo:t.union([t.lazy(()=>e2),t.lazy(()=>qe)]).optional().nullable(),recommendations:t.lazy(()=>o2).optional(),salesTransactions:t.lazy(()=>uM).optional(),leftoverItems:t.lazy(()=>AS).optional(),feedback:t.lazy(()=>TS).optional(),dietaryRestrictions:t.lazy(()=>zM).optional()}).strict(),Ol=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),menu:t.lazy(()=>Vp).optional(),category:t.lazy(()=>Wm).optional(),recipes:t.lazy(()=>bS).optional(),menuItemRecipes:t.lazy(()=>D4).optional(),nutritionalInfo:t.lazy(()=>qm).optional(),recommendations:t.lazy(()=>wit).optional(),salesTransactions:t.lazy(()=>A4).optional(),leftoverItems:t.lazy(()=>yB).optional(),feedback:t.lazy(()=>dB).optional(),dietaryRestrictions:t.lazy(()=>_4).optional()}).strict(),k=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),OR:t.lazy(()=>At).array().optional(),NOT:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>W),t.number()]).optional(),foodCost:t.union([t.lazy(()=>W),t.number()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),recipeIds:t.lazy(()=>TI).optional(),recipeServingsAmount:t.lazy(()=>Rb).optional(),recipeServingsCost:t.lazy(()=>Rb).optional(),allergens:t.lazy(()=>dl).optional(),menuId:t.union([t.lazy(()=>y),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>ot),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>Gj),t.lazy(()=>Ze)]).optional(),category:t.union([t.lazy(()=>t2),t.lazy(()=>ve)]).optional().nullable(),recipes:t.lazy(()=>op).optional(),menuItemRecipes:t.lazy(()=>dM).optional(),nutritionalInfo:t.union([t.lazy(()=>e2),t.lazy(()=>qe)]).optional().nullable(),recommendations:t.lazy(()=>o2).optional(),salesTransactions:t.lazy(()=>uM).optional(),leftoverItems:t.lazy(()=>AS).optional(),feedback:t.lazy(()=>TS).optional(),dietaryRestrictions:t.lazy(()=>zM).optional()}).strict()),BV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Nit).optional(),_avg:t.lazy(()=>Bit).optional(),_max:t.lazy(()=>qit).optional(),_min:t.lazy(()=>Fit).optional(),_sum:t.lazy(()=>Dit).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>st),t.string()]).optional(),description:t.union([t.lazy(()=>Ut),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>Tt),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Tt),t.number()]).optional(),isActive:t.union([t.lazy(()=>fl),t.boolean()]).optional(),recipeIds:t.lazy(()=>TI).optional(),recipeServingsAmount:t.lazy(()=>Rb).optional(),recipeServingsCost:t.lazy(()=>Rb).optional(),allergens:t.lazy(()=>dl).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable()}).strict(),qe=t.object({AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>W),t.number()]).optional(),fat:t.union([t.lazy(()=>W),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>W),t.number()]).optional(),transFat:t.union([t.lazy(()=>W),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>W),t.number()]).optional(),sodium:t.union([t.lazy(()=>W),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>W),t.number()]).optional(),fiber:t.union([t.lazy(()=>W),t.number()]).optional(),sugar:t.union([t.lazy(()=>W),t.number()]).optional(),protein:t.union([t.lazy(()=>W),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>nM),t.lazy(()=>At)]).optional().nullable()}).strict(),qm=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Ol).optional()}).strict(),ql=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),calories:t.union([t.lazy(()=>W),t.number()]).optional(),fat:t.union([t.lazy(()=>W),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>W),t.number()]).optional(),transFat:t.union([t.lazy(()=>W),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>W),t.number()]).optional(),sodium:t.union([t.lazy(()=>W),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>W),t.number()]).optional(),fiber:t.union([t.lazy(()=>W),t.number()]).optional(),sugar:t.union([t.lazy(()=>W),t.number()]).optional(),protein:t.union([t.lazy(()=>W),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>nM),t.lazy(()=>At)]).optional().nullable()}).strict()),qV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>_it).optional(),_avg:t.lazy(()=>Eit).optional(),_max:t.lazy(()=>Lit).optional(),_min:t.lazy(()=>Vit).optional(),_sum:t.lazy(()=>Hit).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>ja),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Tt),t.number()]).optional(),fat:t.union([t.lazy(()=>Tt),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>Tt),t.number()]).optional(),transFat:t.union([t.lazy(()=>Tt),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>Tt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Tt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Tt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Tt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Tt),t.number()]).optional(),protein:t.union([t.lazy(()=>Tt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),ka=t.object({AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),cost:t.union([t.lazy(()=>W),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Ub=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),We=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),cost:t.union([t.lazy(()=>W),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),FV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qit).optional(),_avg:t.lazy(()=>Yit).optional(),_max:t.lazy(()=>Git).optional(),_min:t.lazy(()=>$it).optional(),_sum:t.lazy(()=>Jit).optional()}).strict(),NA=t.object({AND:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),OR:t.lazy(()=>NA).array().optional(),NOT:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>Tt),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),xa=t.object({AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict(),Wb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>to).optional()}).strict(),Re=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>y),t.number().int()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ye),t.lazy(()=>v)]).optional()}).strict()),DV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Kit).optional(),_avg:t.lazy(()=>Xit).optional(),_max:t.lazy(()=>tlt).optional(),_min:t.lazy(()=>elt).optional(),_sum:t.lazy(()=>olt).optional()}).strict(),BA=t.object({AND:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),OR:t.lazy(()=>BA).array().optional(),NOT:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>M),t.coerce.date()]).optional()}).strict(),p0=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),recipe:t.lazy(()=>nlt)}).strict(),c0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),u0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),recipe:t.lazy(()=>alt).optional()}).strict(),y0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),$T=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),s0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),d0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),z0=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>ilt)}).strict(),m0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),b0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>llt).optional()}).strict(),h0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g0=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>rlt)}).strict(),C0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),A0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>plt).optional()}).strict(),S0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U0=t.object({url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>clt)}).strict(),W0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R0=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>ult).optional()}).strict(),k0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XT=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UN=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j0=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>ylt)}).strict(),M0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Z0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>slt).optional()}).strict(),v0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f0=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>dlt)}).strict(),w0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),N0=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>zlt).optional()}).strict(),B0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RN=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F0=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>mlt)}).strict(),D0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_0=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>blt).optional()}).strict(),E0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kN=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V0=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>n2),menuItem:t.lazy(()=>a2)}).strict(),H0=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Q0=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>i2).optional(),menuItem:t.lazy(()=>l2).optional()}).strict(),Y0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oj=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$0=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>r2),menuItems:t.lazy(()=>p2).optional()}).strict(),J0=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>c2).optional()}).strict(),K0=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>u2).optional(),menuItems:t.lazy(()=>y2).optional()}).strict(),X0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>s2).optional()}).strict(),aP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eY=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>MT),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional(),createdBy:t.lazy(()=>OT),approvedBy:t.lazy(()=>fT).optional()}).strict(),oY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional()}).strict(),nY=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>BT).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional(),createdBy:t.lazy(()=>DT).optional(),approvedBy:t.lazy(()=>_T).optional()}).strict(),aY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>LT).optional()}).strict(),iP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CT=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lY=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TB),recipes:t.lazy(()=>PB).optional(),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),rY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>WB).optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),pY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kB).optional(),recipes:t.lazy(()=>xB).optional(),maintenanceLogs:t.lazy(()=>jB).optional()}).strict(),cY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>MB).optional(),maintenanceLogs:t.lazy(()=>ZB).optional()}).strict(),lP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yY=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>vB),equipment:t.lazy(()=>OB),RecipeInstruction:t.lazy(()=>fB).optional()}).strict(),sY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),dY=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>wB).optional(),equipment:t.lazy(()=>NB).optional(),RecipeInstruction:t.lazy(()=>BB).optional()}).strict(),zY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),rP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),AT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),mY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),bY=t.object({date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>hlt)}).strict(),hY=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>Ilt).optional()}).strict(),gY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AY=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),items:t.lazy(()=>FB).optional(),completions:t.lazy(()=>DB).optional()}).strict(),SY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>_B).optional(),completions:t.lazy(()=>EB).optional()}).strict(),TY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),items:t.lazy(()=>VB).optional(),completions:t.lazy(()=>HB).optional()}).strict(),PY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QB).optional(),completions:t.lazy(()=>YB).optional()}).strict(),cP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WY=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>d2),completions:t.lazy(()=>z2).optional()}).strict(),RY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>m2).optional()}).strict(),kY=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>b2).optional(),completions:t.lazy(()=>h2).optional()}).strict(),xY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>I2).optional()}).strict(),uP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vN=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MY=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>GB),completedBy:t.lazy(()=>$B),items:t.lazy(()=>JB).optional()}).strict(),ZY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>KB).optional()}).strict(),vY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>XB).optional(),completedBy:t.lazy(()=>tq).optional(),items:t.lazy(()=>eq).optional()}).strict(),OY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oq).optional()}).strict(),yP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wY=t.object({status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>g2),checklistItem:t.lazy(()=>C2)}).strict(),NY=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BY=t.object({status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>A2).optional(),checklistItem:t.lazy(()=>S2).optional()}).strict(),qY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wj=t.object({status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DY=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>T2),ingredient:t.lazy(()=>P2)}).strict(),_Y=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EY=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>U2).optional(),ingredient:t.lazy(()=>W2).optional()}).strict(),LY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Nj=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HY=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nq),menuItem:t.lazy(()=>aq).optional(),respondedBy:t.lazy(()=>iq).optional()}).strict(),QY=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YY=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),menuItem:t.lazy(()=>rq).optional(),respondedBy:t.lazy(()=>pq).optional()}).strict(),GY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ST=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$Y=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JY=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>cq).optional(),recipes:t.lazy(()=>uq).optional(),ingredients:t.lazy(()=>yq).optional()}).strict(),KY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>sq).optional(),recipes:t.lazy(()=>dq).optional(),ingredients:t.lazy(()=>zq).optional()}).strict(),XY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>mq).optional(),recipes:t.lazy(()=>bq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),tG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Iq).optional(),recipes:t.lazy(()=>gq).optional(),ingredients:t.lazy(()=>Cq).optional()}).strict(),mP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bj=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oG=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>glt).optional()}).strict(),nG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Clt).optional()}).strict(),aG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Alt).optional()}).strict(),iG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Slt).optional()}).strict(),bP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ON=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Aq),menuItem:t.lazy(()=>Sq),recordedBy:t.lazy(()=>Tq)}).strict(),pG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Pq).optional(),menuItem:t.lazy(()=>Uq).optional(),recordedBy:t.lazy(()=>Wq).optional()}).strict(),uG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Rq),ingrediente:t.lazy(()=>kq),recordedBy:t.lazy(()=>xq)}).strict(),dG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>jq).optional(),ingrediente:t.lazy(()=>Mq).optional(),recordedBy:t.lazy(()=>Zq).optional()}).strict(),mG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hG=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>vq),createdBy:t.lazy(()=>Oq),items:t.lazy(()=>fq).optional()}).strict(),IG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>wq).optional()}).strict(),gG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Nq).optional(),createdBy:t.lazy(()=>Bq).optional(),items:t.lazy(()=>qq).optional()}).strict(),CG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Fq).optional()}).strict(),gP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qj=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SG=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Dq),recipe:t.lazy(()=>_q),assignedTo:t.lazy(()=>Eq).optional()}).strict(),TG=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PG=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Lq).optional(),recipe:t.lazy(()=>Vq).optional(),assignedTo:t.lazy(()=>Hq).optional()}).strict(),UG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RG=t.object({taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>Tlt)}).strict(),kG=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xG=t.object({taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>Plt).optional()}).strict(),jG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fN=t.object({taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),MG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZG=t.object({dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Ult)}).strict(),vG=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),OG=t.object({dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Wlt).optional()}).strict(),fG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wN=t.object({dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NG=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Rlt)}).strict(),BG=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>klt).optional()}).strict(),FG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TP=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),DG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_G=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Qq),recipe:t.lazy(()=>Yq).optional(),createdBy:t.lazy(()=>Gq)}).strict(),EG=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LG=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>$q).optional(),recipe:t.lazy(()=>Jq).optional(),createdBy:t.lazy(()=>Kq).optional()}).strict(),VG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PP=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WT=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),HG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QG=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>xlt).optional()}).strict(),YG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>jlt).optional()}).strict(),GG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Mlt).optional()}).strict(),$G=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Zlt).optional()}).strict(),UP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),JG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),KG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),XG=t.object({ingredient:t.lazy(()=>R2),allergen:t.lazy(()=>k2)}).strict(),t1=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),e1=t.object({ingredient:t.lazy(()=>x2).optional(),allergen:t.lazy(()=>j2).optional()}).strict(),o1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),WP=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),Fj=t.object({}).strict(),n1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),a1=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>vlt)}).strict(),i1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l1=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Olt).optional()}).strict(),r1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BN=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c1=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u1=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),y1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kP=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),d1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>M2).optional(),users:t.lazy(()=>Z2).optional()}).strict(),b1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>v2).optional(),users:t.lazy(()=>O2).optional()}).strict(),h1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>f2).optional(),users:t.lazy(()=>w2).optional()}).strict(),I1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>N2).optional(),users:t.lazy(()=>B2).optional()}).strict(),xP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),g1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A1=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gM),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),S1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),T1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>WM).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),P1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),jP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),U1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),k1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),x1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),j1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),MP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),qN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),M1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Z1=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),v1=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),O1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),f1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Dj=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N1=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>flt)}).strict(),B1=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),q1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>wlt).optional()}).strict(),F1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vP=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),FN=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>q2).optional(),restaurant:t.lazy(()=>F2).optional()}).strict(),E1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>D2).optional()}).strict(),L1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>_2).optional(),restaurant:t.lazy(()=>E2).optional()}).strict(),V1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>L2).optional()}).strict(),OP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),DN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),H1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Q1=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),Y1=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),G1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),$1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),fP=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional()}).strict(),gI=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),J1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),K1=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),X1=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),t9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),e9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),wP=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),_j=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),o9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),n9=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Xq),ingredient:t.lazy(()=>tF),recipeVersion:t.lazy(()=>eF).optional()}).strict(),a9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),i9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>oF).optional(),ingredient:t.lazy(()=>nF).optional(),recipeVersion:t.lazy(()=>aF).optional()}).strict(),l9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),NP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),RT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),p9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>iF),RecipeVersion:t.lazy(()=>lF).optional(),equipment:t.lazy(()=>rF).optional()}).strict(),c9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),u9=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>cF).optional(),RecipeVersion:t.lazy(()=>uF).optional(),equipment:t.lazy(()=>yF).optional()}).strict(),y9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),BP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),Ej=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),s9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),d9=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),ingredient:t.lazy(()=>xS),lastUpdatedBy:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),z9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),m9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),ingredient:t.lazy(()=>BS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),b9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),qP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),kT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),h9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),I9=t.object({type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>dF),item:t.lazy(()=>zF),createdBy:t.lazy(()=>mF)}).strict(),g9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),C9=t.object({type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>bF).optional(),item:t.lazy(()=>hF).optional(),createdBy:t.lazy(()=>IF).optional()}).strict(),A9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),xT=t.object({type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T9=t.object({status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>gF),createdBy:t.lazy(()=>CF),items:t.lazy(()=>AF).optional()}).strict(),P9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),U9=t.object({status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>TF).optional(),createdBy:t.lazy(()=>PF).optional(),items:t.lazy(()=>UF).optional()}).strict(),W9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),DP=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),Lj=t.object({status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),R9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),k9=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>V2),item:t.lazy(()=>H2)}).strict(),x9=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),j9=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>Q2).optional(),item:t.lazy(()=>Y2).optional()}).strict(),M9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),_P=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),Vj=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Z9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),v9=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>Nlt)}).strict(),O9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),f9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Blt).optional()}).strict(),w9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),EP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),N9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),B9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),q9=t.object({status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RF),vendor:t.lazy(()=>kF),items:t.lazy(()=>xF).optional()}).strict(),F9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>jF).optional()}).strict(),D9=t.object({status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>MF).optional(),vendor:t.lazy(()=>ZF).optional(),items:t.lazy(()=>vF).optional()}).strict(),_9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>OF).optional()}).strict(),LP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Hj=t.object({status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),L9=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>G2),ingredient:t.lazy(()=>$2)}).strict(),V9=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),H9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>J2).optional(),ingredient:t.lazy(()=>K2).optional()}).strict(),Q9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),VP=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Qj=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Y9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),G9=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>fF).optional(),ingredients:t.lazy(()=>wF).optional(),supplierPriceHistory:t.lazy(()=>NF).optional()}).strict(),$9=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>BF).optional(),ingredients:t.lazy(()=>qF).optional(),supplierPriceHistory:t.lazy(()=>FF).optional()}).strict(),J9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>DF).optional(),ingredients:t.lazy(()=>_F).optional(),supplierPriceHistory:t.lazy(()=>EF).optional()}).strict(),K9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>LF).optional(),ingredients:t.lazy(()=>VF).optional(),supplierPriceHistory:t.lazy(()=>HF).optional()}).strict(),HP=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_N=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t$=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt),user:t.lazy(()=>X2),ShiftTask:t.lazy(()=>t5).optional()}).strict(),e$=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt),ShiftTask:t.lazy(()=>e5).optional()}).strict(),o$=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional(),user:t.lazy(()=>o5).optional(),ShiftTask:t.lazy(()=>n5).optional()}).strict(),n$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional(),ShiftTask:t.lazy(()=>a5).optional()}).strict(),QP=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt)}).strict(),EN=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional()}).strict(),a$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional()}).strict(),i$=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>i5).optional(),prepItems:t.lazy(()=>l5).optional()}).strict(),l$=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>r5).optional(),prepItems:t.lazy(()=>p5).optional()}).strict(),r$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>c5).optional(),prepItems:t.lazy(()=>u5).optional()}).strict(),p$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>y5).optional(),prepItems:t.lazy(()=>s5).optional()}).strict(),YP=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),u$=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>QF),recipe:t.lazy(()=>YF),assignedTo:t.lazy(()=>GF)}).strict(),y$=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),s$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),prepBoard:t.lazy(()=>$F).optional(),recipe:t.lazy(()=>JF).optional(),assignedTo:t.lazy(()=>KF).optional()}).strict(),d$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),GP=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),jT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional()}).strict(),z$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),m$=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>qlt)}).strict(),b$=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),h$=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Flt).optional()}).strict(),I$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$P=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VN=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C$=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XF),menuItems:t.lazy(()=>tD).optional(),MenuCategory:t.lazy(()=>eD).optional()}).strict(),A$=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>oD).optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),S$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>aD).optional(),menuItems:t.lazy(()=>iD).optional(),MenuCategory:t.lazy(()=>lD).optional()}).strict(),T$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>rD).optional(),MenuCategory:t.lazy(()=>pD).optional()}).strict(),JP=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U$=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>d5),recipe:t.lazy(()=>z5)}).strict(),W$=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),R$=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>m5).optional(),recipe:t.lazy(()=>b5).optional()}).strict(),k$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Yj=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j$=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),M$=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),Z$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),v$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),XP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),dS=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional()}).strict(),O$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),f$=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Dlt).optional()}).strict(),w$=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),N$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>_lt).optional()}).strict(),B$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tU=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),q$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D$=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Elt)}).strict(),_$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),E$=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Llt).optional()}).strict(),L$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QN=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H$=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Vlt)}).strict(),Q$=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Y$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Hlt).optional()}).strict(),G$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YN=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>dt)]).optional()}).strict(),W=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Gr)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Rj).optional(),not:t.union([t.string(),t.lazy(()=>FA)]).optional()}).strict(),ye=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),jX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),MX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),ZX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),vX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),OX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>h5)]).optional(),_count:t.lazy(()=>dt).optional(),_avg:t.lazy(()=>Gr).optional(),_sum:t.lazy(()=>dt).optional(),_min:t.lazy(()=>dt).optional(),_max:t.lazy(()=>dt).optional()}).strict(),Tt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>I5)]).optional(),_count:t.lazy(()=>dt).optional(),_avg:t.lazy(()=>Gr).optional(),_sum:t.lazy(()=>Gr).optional(),_min:t.lazy(()=>Gr).optional(),_max:t.lazy(()=>Gr).optional()}).strict(),st=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Rj).optional(),not:t.union([t.string(),t.lazy(()=>g5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),tt=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>$r)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Rj).optional(),not:t.union([t.string(),t.lazy(()=>DA)]).optional().nullable()}).strict(),d=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>_A)]).optional()}).strict(),g=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>nX).optional()}).strict(),fX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),NX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),BX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Gn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>C5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_avg:t.lazy(()=>$r).optional(),_sum:t.lazy(()=>$r).optional(),_min:t.lazy(()=>$r).optional(),_max:t.lazy(()=>$r).optional()}).strict(),Ut=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Rj).optional(),not:t.union([t.string(),t.lazy(()=>A5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),M=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>S5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),FX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),DX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),_X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),EX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),LX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),GN=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>EA)]).optional()}).strict(),ot=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>sl)]).optional().nullable()}).strict(),VX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),HX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),QX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),YX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),GX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),$X=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),ja=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>P5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_avg:t.lazy(()=>$r).optional(),_sum:t.lazy(()=>sl).optional(),_min:t.lazy(()=>sl).optional(),_max:t.lazy(()=>sl).optional()}).strict(),_t=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>LA)]).optional()}).strict(),JX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),KX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),XX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),fl=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>U5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ltt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),rtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ptt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),ctt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),utt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ytt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),$n=t.object({is:t.lazy(()=>N).optional(),isNot:t.lazy(()=>N).optional()}).strict(),CI=t.object({is:t.lazy(()=>At).optional(),isNot:t.lazy(()=>At).optional()}).strict(),stt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),ztt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mtt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),btt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Gj=t.object({is:t.lazy(()=>Ze).optional(),isNot:t.lazy(()=>Ze).optional()}).strict(),AI=t.object({every:t.lazy(()=>At).optional(),some:t.lazy(()=>At).optional(),none:t.lazy(()=>At).optional()}).strict(),$j=t.object({_count:t.lazy(()=>e).optional()}).strict(),mN=t.object({menuId:t.number(),name:t.string()}).strict(),htt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Itt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),gtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ctt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Att=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),Gt=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>VA)]).optional().nullable()}).strict(),zS=t.object({every:t.lazy(()=>Aa).optional(),some:t.lazy(()=>Aa).optional(),none:t.lazy(()=>Aa).optional()}).strict(),Jj=t.object({every:t.lazy(()=>fe).optional(),some:t.lazy(()=>fe).optional(),none:t.lazy(()=>fe).optional()}).strict(),Fe=t.object({is:t.lazy(()=>Z).optional(),isNot:t.lazy(()=>Z).optional()}).strict(),SI=t.object({is:t.lazy(()=>Z).optional().nullable(),isNot:t.lazy(()=>Z).optional().nullable()}).strict(),$N=t.object({_count:t.lazy(()=>e).optional()}).strict(),J$=t.object({_count:t.lazy(()=>e).optional()}).strict(),bN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),Stt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Ptt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Utt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Dr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>W5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),JN=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>HA)]).optional()}).strict(),mS=t.object({every:t.lazy(()=>ia).optional(),some:t.lazy(()=>ia).optional(),none:t.lazy(()=>ia).optional()}).strict(),K$=t.object({every:t.lazy(()=>la).optional(),some:t.lazy(()=>la).optional(),none:t.lazy(()=>la).optional()}).strict(),KN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Rtt=t.object({_count:t.lazy(()=>e).optional()}).strict(),ktt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),vtt=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),Kj=t.object({is:t.lazy(()=>xe).optional(),isNot:t.lazy(()=>xe).optional()}).strict(),X$=t.object({is:t.lazy(()=>fe).optional().nullable(),isNot:t.lazy(()=>fe).optional().nullable()}).strict(),hN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),XN=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>QA)]).optional()}).strict(),qtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ftt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Ltt=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),tB=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>YA)]).optional()}).strict(),t4=t.object({every:t.lazy(()=>Ve).optional(),some:t.lazy(()=>Ve).optional(),none:t.lazy(()=>Ve).optional()}).strict(),Xj=t.object({every:t.lazy(()=>He).optional(),some:t.lazy(()=>He).optional(),none:t.lazy(()=>He).optional()}).strict(),Vtt=t.object({_count:t.lazy(()=>e).optional()}).strict(),e4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Htt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$tt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),eB=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>GA)]).optional()}).strict(),tM=t.object({is:t.lazy(()=>je).optional(),isNot:t.lazy(()=>je).optional()}).strict(),eM=t.object({every:t.lazy(()=>ra).optional(),some:t.lazy(()=>ra).optional(),none:t.lazy(()=>ra).optional()}).strict(),o4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ktt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),net=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),aet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),oB=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>$A)]).optional()}).strict(),dl=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),n4=t.object({is:t.lazy(()=>He).optional(),isNot:t.lazy(()=>He).optional()}).strict(),a4=t.object({is:t.lazy(()=>Ve).optional(),isNot:t.lazy(()=>Ve).optional()}).strict(),uet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),set=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),met=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),oM=t.object({is:t.lazy(()=>Me).optional(),isNot:t.lazy(()=>Me).optional()}).strict(),ep=t.object({is:t.lazy(()=>kt).optional(),isNot:t.lazy(()=>kt).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),het=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),nB=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>JA)]).optional()}).strict(),aB=t.object({equals:t.lazy(()=>jt).optional(),in:t.lazy(()=>jt).array().optional(),notIn:t.lazy(()=>jt).array().optional(),not:t.union([t.lazy(()=>jt),t.lazy(()=>KA)]).optional()}).strict(),nM=t.object({is:t.lazy(()=>At).optional().nullable(),isNot:t.lazy(()=>At).optional().nullable()}).strict(),Aet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Ret=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),ket=t.object({equals:t.lazy(()=>jt).optional(),in:t.lazy(()=>jt).array().optional(),notIn:t.lazy(()=>jt).array().optional(),not:t.union([t.lazy(()=>jt),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),op=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),aM=t.object({every:t.lazy(()=>kt).optional(),some:t.lazy(()=>kt).optional(),none:t.lazy(()=>kt).optional()}).strict(),bS=t.object({_count:t.lazy(()=>e).optional()}).strict(),i4=t.object({_count:t.lazy(()=>e).optional()}).strict(),xet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional()}).strict(),Met=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vet=t.object({id:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fet=t.object({id:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Det=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_et=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),hS=t.object({every:t.lazy(()=>da).optional(),some:t.lazy(()=>da).optional(),none:t.lazy(()=>da).optional()}).strict(),iB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Get=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),l4=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),not=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),lB=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>XA)]).optional()}).strict(),r4=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),iot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),uot=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),rB=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>tS)]).optional()}).strict(),yot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),dot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),bot=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),pB=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>eS)]).optional()}).strict(),hot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Sot=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),IS=t.object({is:t.lazy(()=>ae).optional(),isNot:t.lazy(()=>ae).optional()}).strict(),p4=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),Tot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),iM=t.object({every:t.lazy(()=>Ia).optional(),some:t.lazy(()=>Ia).optional(),none:t.lazy(()=>Ia).optional()}).strict(),c4=t.object({_count:t.lazy(()=>e).optional()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional()}).strict(),jot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional()}).strict(),u4=t.object({is:t.lazy(()=>ro).optional(),isNot:t.lazy(()=>ro).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),wot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Not=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional()}).strict(),y4=t.object({every:t.lazy(()=>N).optional(),some:t.lazy(()=>N).optional(),none:t.lazy(()=>N).optional()}).strict(),lM=t.object({every:t.lazy(()=>Z).optional(),some:t.lazy(()=>Z).optional(),none:t.lazy(()=>Z).optional()}).strict(),Yot=t.object({_count:t.lazy(()=>e).optional()}).strict(),s4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xot=t.object({id:t.lazy(()=>e).optional()}).strict(),d4=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>oS)]).optional()}).strict(),gS=t.object({every:t.lazy(()=>ae).optional(),some:t.lazy(()=>ae).optional(),none:t.lazy(()=>ae).optional()}).strict(),CS=t.object({every:t.lazy(()=>Sa).optional(),some:t.lazy(()=>Sa).optional(),none:t.lazy(()=>Sa).optional()}).strict(),rM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),cB=t.object({_count:t.lazy(()=>e).optional()}).strict(),uB=t.object({_count:t.lazy(()=>e).optional()}).strict(),z4=t.object({_count:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),int=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),pM=t.object({is:t.lazy(()=>ke).optional().nullable(),isNot:t.lazy(()=>ke).optional().nullable()}).strict(),m4=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),b4=t.object({is:t.lazy(()=>Bt).optional().nullable(),isNot:t.lazy(()=>Bt).optional().nullable()}).strict(),cM=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),h4=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),uM=t.object({every:t.lazy(()=>aa).optional(),some:t.lazy(()=>aa).optional(),none:t.lazy(()=>aa).optional()}).strict(),AS=t.object({every:t.lazy(()=>ya).optional(),some:t.lazy(()=>ya).optional(),none:t.lazy(()=>ya).optional()}).strict(),SS=t.object({every:t.lazy(()=>sa).optional(),some:t.lazy(()=>sa).optional(),none:t.lazy(()=>sa).optional()}).strict(),yM=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),I4=t.object({every:t.lazy(()=>xe).optional(),some:t.lazy(()=>xe).optional(),none:t.lazy(()=>xe).optional()}).strict(),g4=t.object({every:t.lazy(()=>je).optional(),some:t.lazy(()=>je).optional(),none:t.lazy(()=>je).optional()}).strict(),TS=t.object({every:t.lazy(()=>ca).optional(),some:t.lazy(()=>ca).optional(),none:t.lazy(()=>ca).optional()}).strict(),lnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),C4=t.object({_count:t.lazy(()=>e).optional()}).strict(),rnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),A4=t.object({_count:t.lazy(()=>e).optional()}).strict(),yB=t.object({_count:t.lazy(()=>e).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),S4=t.object({_count:t.lazy(()=>e).optional()}).strict(),pnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),cnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),dB=t.object({_count:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),dnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),zB=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>nS)]).optional()}).strict(),sM=t.object({is:t.lazy(()=>N).optional().nullable(),isNot:t.lazy(()=>N).optional().nullable()}).strict(),T4=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),PS=t.object({every:t.lazy(()=>Ua).optional(),some:t.lazy(()=>Ua).optional(),none:t.lazy(()=>Ua).optional()}).strict(),P4=t.object({every:t.lazy(()=>Ca).optional(),some:t.lazy(()=>Ca).optional(),none:t.lazy(()=>Ca).optional()}).strict(),U4=t.object({every:t.lazy(()=>Wa).optional(),some:t.lazy(()=>Wa).optional(),none:t.lazy(()=>Wa).optional()}).strict(),W4=t.object({every:t.lazy(()=>ma).optional(),some:t.lazy(()=>ma).optional(),none:t.lazy(()=>ma).optional()}).strict(),R4=t.object({every:t.lazy(()=>ba).optional(),some:t.lazy(()=>ba).optional(),none:t.lazy(()=>ba).optional()}).strict(),US=t.object({every:t.lazy(()=>ha).optional(),some:t.lazy(()=>ha).optional(),none:t.lazy(()=>ha).optional()}).strict(),qA=t.object({every:t.lazy(()=>ne).optional(),some:t.lazy(()=>ne).optional(),none:t.lazy(()=>ne).optional()}).strict(),mnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),mB=t.object({_count:t.lazy(()=>e).optional()}).strict(),bnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),hnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Int=t.object({_count:t.lazy(()=>e).optional()}).strict(),gnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),bB=t.object({_count:t.lazy(()=>e).optional()}).strict(),TN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Cnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ant=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Snt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Unt=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({userId:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),xnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),jnt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Znt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),vnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),hB=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>aS)]).optional()}).strict(),k4=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),x4=t.object({every:t.lazy(()=>ka).optional(),some:t.lazy(()=>ka).optional(),none:t.lazy(()=>ka).optional()}).strict(),j4=t.object({every:t.lazy(()=>xa).optional(),some:t.lazy(()=>xa).optional(),none:t.lazy(()=>xa).optional()}).strict(),M4=t.object({every:t.lazy(()=>Ke).optional(),some:t.lazy(()=>Ke).optional(),none:t.lazy(()=>Ke).optional()}).strict(),dM=t.object({every:t.lazy(()=>Ra).optional(),some:t.lazy(()=>Ra).optional(),none:t.lazy(()=>Ra).optional()}).strict(),Z4=t.object({every:t.lazy(()=>ua).optional(),some:t.lazy(()=>ua).optional(),none:t.lazy(()=>ua).optional()}).strict(),zM=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),v4=t.object({every:t.lazy(()=>ea).optional(),some:t.lazy(()=>ea).optional(),none:t.lazy(()=>ea).optional()}).strict(),O4=t.object({every:t.lazy(()=>oa).optional(),some:t.lazy(()=>oa).optional(),none:t.lazy(()=>oa).optional()}).strict(),f4=t.object({every:t.lazy(()=>na).optional(),some:t.lazy(()=>na).optional(),none:t.lazy(()=>na).optional()}).strict(),w4=t.object({is:t.lazy(()=>we).optional().nullable(),isNot:t.lazy(()=>we).optional().nullable()}).strict(),N4=t.object({every:t.lazy(()=>Xn).optional(),some:t.lazy(()=>Xn).optional(),none:t.lazy(()=>Xn).optional()}).strict(),B4=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),q4=t.object({every:t.lazy(()=>ta).optional(),some:t.lazy(()=>ta).optional(),none:t.lazy(()=>ta).optional()}).strict(),F4=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),wnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),D4=t.object({_count:t.lazy(()=>e).optional()}).strict(),qnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),_4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Fnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),_nt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ent=t.object({_count:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Vnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),$nt=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),IB=t.object({equals:t.lazy(()=>et).optional().nullable(),in:t.lazy(()=>et).array().optional().nullable(),notIn:t.lazy(()=>et).array().optional().nullable(),not:t.union([t.lazy(()=>et),t.lazy(()=>iS)]).optional().nullable()}).strict(),mM=t.object({every:t.lazy(()=>Pa).optional(),some:t.lazy(()=>Pa).optional(),none:t.lazy(()=>Pa).optional()}).strict(),E4=t.object({every:t.lazy(()=>Me).optional(),some:t.lazy(()=>Me).optional(),none:t.lazy(()=>Me).optional()}).strict(),bM=t.object({every:t.lazy(()=>pa).optional(),some:t.lazy(()=>pa).optional(),none:t.lazy(()=>pa).optional()}).strict(),L4=t.object({is:t.lazy(()=>Oe).optional().nullable(),isNot:t.lazy(()=>Oe).optional().nullable()}).strict(),V4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),H4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Knt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),tat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),eat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),oat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),nat=t.object({equals:t.lazy(()=>et).optional().nullable(),in:t.lazy(()=>et).array().optional().nullable(),notIn:t.lazy(()=>et).array().optional().nullable(),not:t.union([t.lazy(()=>et),t.lazy(()=>F5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),TI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),hM=t.object({is:t.lazy(()=>ne).optional().nullable(),isNot:t.lazy(()=>ne).optional().nullable()}).strict(),IN=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),aat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),gN=t.object({recipeId:t.number(),stepNumber:t.number()}).strict(),cat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),uat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),yat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),sat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),dat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),WS=t.object({is:t.lazy(()=>Bt).optional(),isNot:t.lazy(()=>Bt).optional()}).strict(),IM=t.object({every:t.lazy(()=>Ta).optional(),some:t.lazy(()=>Ta).optional(),none:t.lazy(()=>Ta).optional()}).strict(),Q4=t.object({_count:t.lazy(()=>e).optional()}).strict(),CN=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),zat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Iat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),gB=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>lS)]).optional()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Pat=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),CB=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>rS)]).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Wat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),jat=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),Y4=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),AN=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Mat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Zat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),vat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Oat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),fat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),wat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Nat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Bat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),qat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),AB=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>pS)]).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vat=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),Hat=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),G4=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional()}).strict(),SB=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>cS)]).optional()}).strict(),$4=t.object({every:t.lazy(()=>za).optional(),some:t.lazy(()=>za).optional(),none:t.lazy(()=>za).optional()}).strict(),nit=t.object({_count:t.lazy(()=>e).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),rit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),cit=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),RS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>uS)]).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional()}).strict(),J4=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>V5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),K4=t.object({is:t.lazy(()=>Ke).optional(),isNot:t.lazy(()=>Ke).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Iit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Pit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),X4=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),Uit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),SN=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Rb=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),t2=t.object({is:t.lazy(()=>ve).optional().nullable(),isNot:t.lazy(()=>ve).optional().nullable()}).strict(),e2=t.object({is:t.lazy(()=>qe).optional().nullable(),isNot:t.lazy(()=>qe).optional().nullable()}).strict(),o2=t.object({every:t.lazy(()=>ga).optional(),some:t.lazy(()=>ga).optional(),none:t.lazy(()=>ga).optional()}).strict(),wit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Fit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$it=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),Kit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),tlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),elt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),olt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),nlt=t.object({create:t.union([t.lazy(()=>vM),t.lazy(()=>OM)]).optional(),connectOrCreate:t.lazy(()=>H5).optional(),connect:t.lazy(()=>C).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),a=t.object({set:t.string().optional()}).strict(),alt=t.object({create:t.union([t.lazy(()=>vM),t.lazy(()=>OM)]).optional(),connectOrCreate:t.lazy(()=>H5).optional(),upsert:t.lazy(()=>Qlt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Ylt),t.lazy(()=>cD),t.lazy(()=>uD)]).optional()}).strict(),n=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),ilt=t.object({create:t.union([t.lazy(()=>fM),t.lazy(()=>wM)]).optional(),connectOrCreate:t.lazy(()=>Q5).optional(),connect:t.lazy(()=>C).optional()}).strict(),u=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),llt=t.object({create:t.union([t.lazy(()=>fM),t.lazy(()=>wM)]).optional(),connectOrCreate:t.lazy(()=>Q5).optional(),upsert:t.lazy(()=>Glt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>$lt),t.lazy(()=>yD),t.lazy(()=>sD)]).optional()}).strict(),rlt=t.object({create:t.union([t.lazy(()=>NM),t.lazy(()=>BM)]).optional(),connectOrCreate:t.lazy(()=>Y5).optional(),connect:t.lazy(()=>C).optional()}).strict(),plt=t.object({create:t.union([t.lazy(()=>NM),t.lazy(()=>BM)]).optional(),connectOrCreate:t.lazy(()=>Y5).optional(),upsert:t.lazy(()=>Jlt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Klt),t.lazy(()=>dD),t.lazy(()=>zD)]).optional()}).strict(),clt=t.object({create:t.union([t.lazy(()=>qM),t.lazy(()=>FM)]).optional(),connectOrCreate:t.lazy(()=>G5).optional(),connect:t.lazy(()=>C).optional()}).strict(),yC=t.object({set:t.lazy(()=>ue).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),ult=t.object({create:t.union([t.lazy(()=>qM),t.lazy(()=>FM)]).optional(),connectOrCreate:t.lazy(()=>G5).optional(),upsert:t.lazy(()=>Xlt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>trt),t.lazy(()=>mD),t.lazy(()=>bD)]).optional()}).strict(),ylt=t.object({create:t.union([t.lazy(()=>DM),t.lazy(()=>_M)]).optional(),connectOrCreate:t.lazy(()=>$5).optional(),connect:t.lazy(()=>C).optional()}).strict(),z=t.object({set:t.boolean().optional()}).strict(),slt=t.object({create:t.union([t.lazy(()=>DM),t.lazy(()=>_M)]).optional(),connectOrCreate:t.lazy(()=>$5).optional(),upsert:t.lazy(()=>ert).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>ort),t.lazy(()=>hD),t.lazy(()=>ID)]).optional()}).strict(),dlt=t.object({create:t.union([t.lazy(()=>EM),t.lazy(()=>LM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),connect:t.lazy(()=>C).optional()}).strict(),zlt=t.object({create:t.union([t.lazy(()=>EM),t.lazy(()=>LM)]).optional(),connectOrCreate:t.lazy(()=>J5).optional(),upsert:t.lazy(()=>nrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>art),t.lazy(()=>gD),t.lazy(()=>CD)]).optional()}).strict(),mlt=t.object({create:t.union([t.lazy(()=>VM),t.lazy(()=>HM)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),connect:t.lazy(()=>C).optional()}).strict(),blt=t.object({create:t.union([t.lazy(()=>VM),t.lazy(()=>HM)]).optional(),connectOrCreate:t.lazy(()=>K5).optional(),upsert:t.lazy(()=>irt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>lrt),t.lazy(()=>AD),t.lazy(()=>SD)]).optional()}).strict(),n2=t.object({create:t.union([t.lazy(()=>QM),t.lazy(()=>YM)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),connect:t.lazy(()=>J).optional()}).strict(),a2=t.object({create:t.union([t.lazy(()=>GM),t.lazy(()=>$M)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),connect:t.lazy(()=>k).optional()}).strict(),i2=t.object({create:t.union([t.lazy(()=>QM),t.lazy(()=>YM)]).optional(),connectOrCreate:t.lazy(()=>X5).optional(),upsert:t.lazy(()=>rrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>prt),t.lazy(()=>TD),t.lazy(()=>PD)]).optional()}).strict(),l2=t.object({create:t.union([t.lazy(()=>GM),t.lazy(()=>$M)]).optional(),connectOrCreate:t.lazy(()=>t6).optional(),upsert:t.lazy(()=>crt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>urt),t.lazy(()=>UD),t.lazy(()=>WD)]).optional()}).strict(),r2=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),p2=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),c2=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),createMany:t.lazy(()=>XM).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),u2=t.object({create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]).optional(),connectOrCreate:t.lazy(()=>e6).optional(),upsert:t.lazy(()=>yrt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>srt),t.lazy(()=>RD),t.lazy(()=>kD)]).optional()}).strict(),y2=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),s2=t.object({create:t.union([t.lazy(()=>Hp),t.lazy(()=>Hp).array(),t.lazy(()=>Qp),t.lazy(()=>Qp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kb),t.lazy(()=>kb).array()]).optional(),upsert:t.union([t.lazy(()=>nU),t.lazy(()=>nU).array()]).optional(),createMany:t.lazy(()=>XM).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>aU),t.lazy(()=>aU).array()]).optional(),updateMany:t.union([t.lazy(()=>iU),t.lazy(()=>iU).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),MT=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),connect:t.lazy(()=>C).optional()}).strict(),ZT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),vT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>nZ).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),OT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),connect:t.lazy(()=>j).optional()}).strict(),fT=t.object({create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),connect:t.lazy(()=>j).optional()}).strict(),wT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),NT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),createMany:t.lazy(()=>nZ).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),BT=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>o6).optional(),upsert:t.lazy(()=>drt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>zrt),t.lazy(()=>xD),t.lazy(()=>jD)]).optional()}).strict(),qT=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),FT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>nZ).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),DT=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]).optional(),connectOrCreate:t.lazy(()=>n6).optional(),upsert:t.lazy(()=>mrt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>brt),t.lazy(()=>MD),t.lazy(()=>ZD)]).optional()}).strict(),_T=t.object({create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),upsert:t.lazy(()=>hrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Irt),t.lazy(()=>vD),t.lazy(()=>OD)]).optional()}).strict(),ET=t.object({create:t.union([t.lazy(()=>Yp),t.lazy(()=>Yp).array(),t.lazy(()=>Gp),t.lazy(()=>Gp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xb),t.lazy(()=>xb).array()]).optional(),upsert:t.union([t.lazy(()=>lU),t.lazy(()=>lU).array()]).optional(),createMany:t.lazy(()=>oZ).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>rU),t.lazy(()=>rU).array()]).optional(),updateMany:t.union([t.lazy(()=>pU),t.lazy(()=>pU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),LT=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jb),t.lazy(()=>jb).array()]).optional(),upsert:t.union([t.lazy(()=>cU),t.lazy(()=>cU).array()]).optional(),createMany:t.lazy(()=>nZ).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>uU),t.lazy(()=>uU).array()]).optional(),updateMany:t.union([t.lazy(()=>yU),t.lazy(()=>yU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),TB=t.object({create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),connect:t.lazy(()=>J).optional()}).strict(),PB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>uZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),UB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>yZ).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),WB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),createMany:t.lazy(()=>uZ).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),RB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),createMany:t.lazy(()=>yZ).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),sp=t.object({set:t.lazy(()=>wt).optional()}).strict(),kB=t.object({create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),upsert:t.lazy(()=>grt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Crt),t.lazy(()=>fD),t.lazy(()=>wD)]).optional()}).strict(),xB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>uZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),jB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>yZ).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),updateMany:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),MB=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mb),t.lazy(()=>Mb).array()]).optional(),upsert:t.union([t.lazy(()=>sU),t.lazy(()=>sU).array()]).optional(),createMany:t.lazy(()=>uZ).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>dU),t.lazy(()=>dU).array()]).optional(),updateMany:t.union([t.lazy(()=>zU),t.lazy(()=>zU).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),ZB=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zb),t.lazy(()=>Zb).array()]).optional(),upsert:t.union([t.lazy(()=>mU),t.lazy(()=>mU).array()]).optional(),createMany:t.lazy(()=>yZ).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>bU),t.lazy(()=>bU).array()]).optional(),updateMany:t.union([t.lazy(()=>hU),t.lazy(()=>hU).array()]).optional(),deleteMany:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional()}).strict(),vB=t.object({create:t.union([t.lazy(()=>sZ),t.lazy(()=>dZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),connect:t.lazy(()=>C).optional()}).strict(),OB=t.object({create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),fB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),connect:t.lazy(()=>rt).optional()}).strict(),wB=t.object({create:t.union([t.lazy(()=>sZ),t.lazy(()=>dZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),upsert:t.lazy(()=>Art).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Srt),t.lazy(()=>ND),t.lazy(()=>BD)]).optional()}).strict(),NB=t.object({create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),upsert:t.lazy(()=>Trt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>Prt),t.lazy(()=>qD),t.lazy(()=>FD)]).optional()}).strict(),BB=t.object({create:t.union([t.lazy(()=>bZ),t.lazy(()=>hZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),upsert:t.lazy(()=>Urt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>fe)]).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>Wrt),t.lazy(()=>DD),t.lazy(()=>_D)]).optional()}).strict(),hlt=t.object({create:t.union([t.lazy(()=>IZ),t.lazy(()=>gZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),connect:t.lazy(()=>Vt).optional()}).strict(),sC=t.object({set:t.lazy(()=>le).optional()}).strict(),Ilt=t.object({create:t.union([t.lazy(()=>IZ),t.lazy(()=>gZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),upsert:t.lazy(()=>Rrt).optional(),connect:t.lazy(()=>Vt).optional(),update:t.union([t.lazy(()=>krt),t.lazy(()=>ED),t.lazy(()=>LD)]).optional()}).strict(),qB=t.object({create:t.union([t.lazy(()=>CZ),t.lazy(()=>AZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),connect:t.lazy(()=>J).optional()}).strict(),FB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>SZ).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),DB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),_B=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),createMany:t.lazy(()=>SZ).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional()}).strict(),EB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),dp=t.object({set:t.lazy(()=>Nt).optional()}).strict(),LB=t.object({create:t.union([t.lazy(()=>CZ),t.lazy(()=>AZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),upsert:t.lazy(()=>xrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>jrt),t.lazy(()=>VD),t.lazy(()=>HD)]).optional()}).strict(),VB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>SZ).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),HB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),QB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vb),t.lazy(()=>vb).array()]).optional(),upsert:t.union([t.lazy(()=>IU),t.lazy(()=>IU).array()]).optional(),createMany:t.lazy(()=>SZ).optional(),set:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),disconnect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),delete:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),connect:t.union([t.lazy(()=>Xt),t.lazy(()=>Xt).array()]).optional(),update:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),updateMany:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional()}).strict(),YB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),createMany:t.lazy(()=>TZ).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),updateMany:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),d2=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>UZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),z2=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),m2=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),_m=t.object({set:t.lazy(()=>Et).optional()}).strict(),b2=t.object({create:t.union([t.lazy(()=>PZ),t.lazy(()=>UZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),upsert:t.lazy(()=>Mrt).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>Zrt),t.lazy(()=>QD),t.lazy(()=>YD)]).optional()}).strict(),h2=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),updateMany:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),I2=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),createMany:t.lazy(()=>WZ).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),updateMany:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),GB=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),connect:t.lazy(()=>Ht).optional()}).strict(),$B=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),connect:t.lazy(()=>j).optional()}).strict(),JB=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>MZ).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),KB=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>MZ).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional()}).strict(),XB=t.object({create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),upsert:t.lazy(()=>vrt).optional(),connect:t.lazy(()=>Ht).optional(),update:t.union([t.lazy(()=>Ort),t.lazy(()=>GD),t.lazy(()=>$D)]).optional()}).strict(),tq=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),upsert:t.lazy(()=>frt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>wrt),t.lazy(()=>JD),t.lazy(()=>KD)]).optional()}).strict(),eq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>MZ).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),oq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),createMany:t.lazy(()=>MZ).optional(),set:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),disconnect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),delete:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),connect:t.union([t.lazy(()=>mt),t.lazy(()=>mt).array()]).optional(),update:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),updateMany:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),deleteMany:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional()}).strict(),Em=t.object({set:t.string().array()}).strict(),g2=t.object({create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),connect:t.lazy(()=>at).optional()}).strict(),C2=t.object({create:t.union([t.lazy(()=>OZ),t.lazy(()=>fZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),connect:t.lazy(()=>Xt).optional()}).strict(),Bz=t.object({set:t.lazy(()=>Dt).optional()}).strict(),qz=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),A2=t.object({create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),upsert:t.lazy(()=>Nrt).optional(),connect:t.lazy(()=>at).optional(),update:t.union([t.lazy(()=>Brt),t.lazy(()=>XD),t.lazy(()=>t_)]).optional()}).strict(),S2=t.object({create:t.union([t.lazy(()=>OZ),t.lazy(()=>fZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),upsert:t.lazy(()=>qrt).optional(),connect:t.lazy(()=>Xt).optional(),update:t.union([t.lazy(()=>Frt),t.lazy(()=>e_),t.lazy(()=>o_)]).optional()}).strict(),T2=t.object({create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),P2=t.object({create:t.union([t.lazy(()=>BZ),t.lazy(()=>qZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),connect:t.lazy(()=>G).optional()}).strict(),U2=t.object({create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),upsert:t.lazy(()=>Drt).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>_rt),t.lazy(()=>n_),t.lazy(()=>a_)]).optional()}).strict(),W2=t.object({create:t.union([t.lazy(()=>BZ),t.lazy(()=>qZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),upsert:t.lazy(()=>Ert).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Lrt),t.lazy(()=>i_),t.lazy(()=>l_)]).optional()}).strict(),np=t.object({set:t.string().array()}).strict(),nq=t.object({create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),connect:t.lazy(()=>J).optional()}).strict(),aq=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),connect:t.lazy(()=>k).optional()}).strict(),iq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),connect:t.lazy(()=>j).optional()}).strict(),_r=t.object({set:t.lazy(()=>xt).optional()}).strict(),Er=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Lr=t.object({set:t.lazy(()=>jt).optional()}).strict(),lq=t.object({create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),upsert:t.lazy(()=>Vrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Hrt),t.lazy(()=>r_),t.lazy(()=>p_)]).optional()}).strict(),rq=t.object({create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),upsert:t.lazy(()=>Qrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>At)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>At)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>Yrt),t.lazy(()=>c_),t.lazy(()=>u_)]).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),upsert:t.lazy(()=>Grt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>$rt),t.lazy(()=>y_),t.lazy(()=>s_)]).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>yc),t.lazy(()=>yc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),updateMany:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),gq=t.object({create:t.union([t.lazy(()=>sc),t.lazy(()=>sc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),updateMany:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),createMany:t.lazy(()=>HZ).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),updateMany:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),glt=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Clt=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Alt=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),Slt=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),updateMany:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),connect:t.lazy(()=>k).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),upsert:t.lazy(()=>Jrt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Krt),t.lazy(()=>d_),t.lazy(()=>z_)]).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),upsert:t.lazy(()=>Xrt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>tpt),t.lazy(()=>m_),t.lazy(()=>b_)]).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),upsert:t.lazy(()=>ept).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>opt),t.lazy(()=>h_),t.lazy(()=>I_)]).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),connect:t.lazy(()=>J).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),connect:t.lazy(()=>G).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),connect:t.lazy(()=>j).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),upsert:t.lazy(()=>npt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>apt),t.lazy(()=>g_),t.lazy(()=>C_)]).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),upsert:t.lazy(()=>ipt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>lpt),t.lazy(()=>A_),t.lazy(()=>S_)]).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),upsert:t.lazy(()=>rpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>ppt),t.lazy(()=>T_),t.lazy(()=>P_)]).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),connect:t.lazy(()=>j).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>cv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>cv).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),upsert:t.lazy(()=>cpt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>upt),t.lazy(()=>U_),t.lazy(()=>W_)]).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),upsert:t.lazy(()=>ypt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>spt),t.lazy(()=>R_),t.lazy(()=>k_)]).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>cv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),createMany:t.lazy(()=>cv).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),updateMany:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),connect:t.lazy(()=>lt).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>dv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),connect:t.lazy(()=>j).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),upsert:t.lazy(()=>dpt).optional(),connect:t.lazy(()=>lt).optional(),update:t.union([t.lazy(()=>zpt),t.lazy(()=>x_),t.lazy(()=>j_)]).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>dv)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),upsert:t.lazy(()=>mpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>bpt),t.lazy(()=>M_),t.lazy(()=>Z_)]).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),upsert:t.lazy(()=>hpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ipt),t.lazy(()=>v_),t.lazy(()=>O_)]).optional()}).strict(),Tlt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),connect:t.lazy(()=>ee).optional()}).strict(),dC=t.object({set:t.lazy(()=>re).optional()}).strict(),Plt=t.object({create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),upsert:t.lazy(()=>gpt).optional(),connect:t.lazy(()=>ee).optional(),update:t.union([t.lazy(()=>Cpt),t.lazy(()=>f_),t.lazy(()=>w_)]).optional()}).strict(),Ult=t.object({create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),connect:t.lazy(()=>j).optional()}).strict(),zC=t.object({set:t.lazy(()=>pe).optional()}).strict(),Wlt=t.object({create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),upsert:t.lazy(()=>Apt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Spt),t.lazy(()=>N_),t.lazy(()=>B_)]).optional()}).strict(),Rlt=t.object({create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),connect:t.lazy(()=>j).optional()}).strict(),mC=t.object({set:t.lazy(()=>ce).optional()}).strict(),klt=t.object({create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),upsert:t.lazy(()=>Tpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Ppt),t.lazy(()=>q_),t.lazy(()=>F_)]).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),connect:t.lazy(()=>f).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),connect:t.lazy(()=>j).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),upsert:t.lazy(()=>Upt).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Wpt),t.lazy(()=>D_),t.lazy(()=>__)]).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),upsert:t.lazy(()=>Rpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>kpt),t.lazy(()=>E_),t.lazy(()=>L_)]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),upsert:t.lazy(()=>xpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>jpt),t.lazy(()=>V_),t.lazy(()=>H_)]).optional()}).strict(),xlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>kv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),jlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>kv).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Mlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>kv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),Zlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),createMany:t.lazy(()=>kv).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),updateMany:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),R2=t.object({create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),connect:t.lazy(()=>G).optional()}).strict(),k2=t.object({create:t.union([t.lazy(()=>Mv),t.lazy(()=>Zv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),connect:t.lazy(()=>tp).optional()}).strict(),x2=t.object({create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),upsert:t.lazy(()=>Mpt).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Zpt),t.lazy(()=>Q_),t.lazy(()=>Y_)]).optional()}).strict(),j2=t.object({create:t.union([t.lazy(()=>Mv),t.lazy(()=>Zv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),upsert:t.lazy(()=>vpt).optional(),connect:t.lazy(()=>tp).optional(),update:t.union([t.lazy(()=>Opt),t.lazy(()=>G_),t.lazy(()=>$_)]).optional()}).strict(),vlt=t.object({create:t.union([t.lazy(()=>vv),t.lazy(()=>Ov)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>k).optional()}).strict(),Olt=t.object({create:t.union([t.lazy(()=>vv),t.lazy(()=>Ov)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>fpt).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>wpt),t.lazy(()=>J_),t.lazy(()=>K_)]).optional()}).strict(),M2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>fv).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),Z2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),v2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),createMany:t.lazy(()=>fv).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),O2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),createMany:t.lazy(()=>wv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),f2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>fv).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),w2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),N2=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),createMany:t.lazy(()=>fv).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),updateMany:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),deleteMany:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional()}).strict(),B2=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),createMany:t.lazy(()=>wv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),updateMany:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),gM=t.object({create:t.union([t.lazy(()=>Nv),t.lazy(()=>Bv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>J).optional()}).strict(),CM=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>qv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),AM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>Fv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),SM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),TM=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),createMany:t.lazy(()=>qv).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),PM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),createMany:t.lazy(()=>Fv).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),UM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),ap=t.object({set:t.lazy(()=>ft).optional()}).strict(),WM=t.object({create:t.union([t.lazy(()=>Nv),t.lazy(()=>Bv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>Npt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Bpt),t.lazy(()=>X_),t.lazy(()=>tE)]).optional()}).strict(),RM=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>qv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),kM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),createMany:t.lazy(()=>Fv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),xM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),jM=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),createMany:t.lazy(()=>qv).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),updateMany:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),MM=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),createMany:t.lazy(()=>Fv).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),updateMany:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),ZM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),createMany:t.lazy(()=>Dv).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),updateMany:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Fl=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>jl).optional()}).strict(),Dl=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),_l=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),El=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>Hv).optional(),connect:t.lazy(()=>Yn).optional()}).strict(),Ll=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),Vl=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Hl=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),Ql=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>tO).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>Hv).optional(),connect:t.lazy(()=>Yn).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>$v).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>tO).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>qpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ke)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ke)]).optional(),connect:t.lazy(()=>jl).optional(),update:t.union([t.lazy(()=>Fpt),t.lazy(()=>eE),t.lazy(()=>oE)]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>Hv).optional(),upsert:t.lazy(()=>E6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Bt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Bt)]).optional(),connect:t.lazy(()=>Yn).optional(),update:t.union([t.lazy(()=>L6),t.lazy(()=>nO),t.lazy(()=>aO)]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),updateMany:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),updateMany:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),createMany:t.lazy(()=>tO).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),disconnect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),delete:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),connect:t.union([t.lazy(()=>j),t.lazy(()=>j).array()]).optional(),update:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),createMany:t.lazy(()=>Vv).optional(),set:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),disconnect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),delete:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),connect:t.union([t.lazy(()=>te),t.lazy(()=>te).array()]).optional(),update:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),updateMany:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]).optional(),connectOrCreate:t.lazy(()=>Hv).optional(),upsert:t.lazy(()=>E6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Bt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Bt)]).optional(),connect:t.lazy(()=>Yn).optional(),update:t.union([t.lazy(()=>L6),t.lazy(()=>nO),t.lazy(()=>aO)]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),createMany:t.lazy(()=>Qv).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),updateMany:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),createMany:t.lazy(()=>Yv).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),updateMany:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),createMany:t.lazy(()=>Gv).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),updateMany:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),createMany:t.lazy(()=>$v).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),updateMany:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),updateMany:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),updateMany:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),createMany:t.lazy(()=>Xv).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),updateMany:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),createMany:t.lazy(()=>tO).optional(),set:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),disconnect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),delete:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),connect:t.union([t.lazy(()=>Vt),t.lazy(()=>Vt).array()]).optional(),update:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),updateMany:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),Br=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),disconnect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),delete:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),connect:t.union([t.lazy(()=>Ht),t.lazy(()=>Ht).array()]).optional(),update:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),updateMany:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),qr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),updateMany:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Ea=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>jl).optional()}).strict(),La=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Va=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),Ha=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Qa=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),Ya=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Ga=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),$a=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Ja=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Ka=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),Xa=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>gO).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>CO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>AO).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>SO).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>TO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>PO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),Zt=t.object({set:t.lazy(()=>x).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>Dpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ke)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ke)]).optional(),connect:t.lazy(()=>jl).optional(),update:t.union([t.lazy(()=>_pt),t.lazy(()=>nE),t.lazy(()=>aE)]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),upsert:t.lazy(()=>Ept).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Lpt),t.lazy(()=>iE),t.lazy(()=>lE)]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),updateMany:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),updateMany:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),updateMany:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),updateMany:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),updateMany:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),updateMany:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>yu),t.lazy(()=>yu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),updateMany:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>su),t.lazy(()=>su).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),updateMany:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),disconnect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),delete:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),connect:t.union([t.lazy(()=>lt),t.lazy(()=>lt).array()]).optional(),update:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),updateMany:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),updateMany:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),updateMany:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),createMany:t.lazy(()=>gO).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),updateMany:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),createMany:t.lazy(()=>CO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),updateMany:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),createMany:t.lazy(()=>AO).optional(),set:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),disconnect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),delete:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),connect:t.union([t.lazy(()=>at),t.lazy(()=>at).array()]).optional(),update:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),updateMany:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),deleteMany:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),createMany:t.lazy(()=>SO).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),updateMany:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),createMany:t.lazy(()=>TO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),updateMany:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),pl=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),createMany:t.lazy(()=>PO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),updateMany:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),cl=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),updateMany:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),ul=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),updateMany:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),flt=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),connect:t.lazy(()=>j).optional()}).strict(),wlt=t.object({create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),upsert:t.lazy(()=>Vpt).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Hpt),t.lazy(()=>rE),t.lazy(()=>pE)]).optional()}).strict(),q2=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),F2=t.object({create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),connect:t.lazy(()=>J).optional()}).strict(),D2=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),_2=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),E2=t.object({create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),upsert:t.lazy(()=>Qpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>N)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>N)]).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Ypt),t.lazy(()=>cE),t.lazy(()=>uE)]).optional()}).strict(),L2=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),updateMany:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),St=t.object({set:t.string().array()}).strict(),po=t.object({create:t.union([t.lazy(()=>ZO),t.lazy(()=>vO)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),connect:t.lazy(()=>J).optional()}).strict(),co=t.object({create:t.union([t.lazy(()=>OO),t.lazy(()=>fO)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),connect:t.lazy(()=>te).optional()}).strict(),uo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>GO).optional(),connect:t.lazy(()=>wl).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>JO).optional(),connect:t.lazy(()=>Nl).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)]).optional(),connectOrCreate:t.lazy(()=>XO).optional(),connect:t.lazy(()=>Bl).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>EO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),createMany:t.lazy(()=>LO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>HO).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>QO).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),createMany:t.lazy(()=>YO).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>GO).optional(),connect:t.lazy(()=>wl).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>$O).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>JO).optional(),connect:t.lazy(()=>Nl).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional()}).strict(),tn=t.object({create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)]).optional(),connectOrCreate:t.lazy(()=>XO).optional(),connect:t.lazy(()=>Bl).optional()}).strict(),ut=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),yt=t.object({set:t.lazy(()=>U).optional()}).strict(),en=t.object({create:t.union([t.lazy(()=>ZO),t.lazy(()=>vO)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),upsert:t.lazy(()=>Gpt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>$pt),t.lazy(()=>yE),t.lazy(()=>sE)]).optional()}).strict(),on=t.object({create:t.union([t.lazy(()=>OO),t.lazy(()=>fO)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),upsert:t.lazy(()=>Jpt).optional(),connect:t.lazy(()=>te).optional(),update:t.union([t.lazy(()=>Kpt),t.lazy(()=>dE),t.lazy(()=>zE)]).optional()}).strict(),nn=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),an=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),ln=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),rn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),pn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),cn=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),un=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),yn=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),updateMany:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),sn=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),dn=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),zn=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),updateMany:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),mn=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),bn=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),hn=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),In=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),gn=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),Cn=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),An=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>GO).optional(),upsert:t.lazy(()=>J6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>K6),t.lazy(()=>tf),t.lazy(()=>ef)]).optional()}).strict(),Sn=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),Tn=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>JO).optional(),upsert:t.lazy(()=>X6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>Nl).optional(),update:t.union([t.lazy(()=>t3),t.lazy(()=>of),t.lazy(()=>nf)]).optional()}).strict(),Pn=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),Un=t.object({create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)]).optional(),connectOrCreate:t.lazy(()=>XO).optional(),upsert:t.lazy(()=>e3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Bl).optional(),update:t.union([t.lazy(()=>o3),t.lazy(()=>af),t.lazy(()=>lf)]).optional()}).strict(),Wn=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),updateMany:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),Rn=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),updateMany:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),deleteMany:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional()}).strict(),kn=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),updateMany:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),xn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),updateMany:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),jn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),updateMany:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),Mn=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),Zn=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),updateMany:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),vn=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),updateMany:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),On=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional()}).strict(),fn=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),createMany:t.lazy(()=>EO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),updateMany:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),wn=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),updateMany:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Nn=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),createMany:t.lazy(()=>LO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),updateMany:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Bn=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>yy),t.lazy(()=>yy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),updateMany:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),qn=t.object({create:t.union([t.lazy(()=>sy),t.lazy(()=>sy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),updateMany:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),createMany:t.lazy(()=>HO).optional(),set:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),disconnect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),delete:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),connect:t.union([t.lazy(()=>me),t.lazy(()=>me).array()]).optional(),update:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),updateMany:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),createMany:t.lazy(()=>QO).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),updateMany:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),createMany:t.lazy(()=>YO).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),updateMany:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]).optional(),connectOrCreate:t.lazy(()=>GO).optional(),upsert:t.lazy(()=>J6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>wl).optional(),update:t.union([t.lazy(()=>K6),t.lazy(()=>tf),t.lazy(()=>ef)]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),createMany:t.lazy(()=>$O).optional(),set:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),disconnect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),delete:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),connect:t.union([t.lazy(()=>de),t.lazy(()=>de).array()]).optional(),update:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]).optional(),connectOrCreate:t.lazy(()=>JO).optional(),upsert:t.lazy(()=>X6).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>Nl).optional(),update:t.union([t.lazy(()=>t3),t.lazy(()=>of),t.lazy(()=>nf)]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),disconnect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),delete:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),connect:t.union([t.lazy(()=>ze),t.lazy(()=>ze).array()]).optional(),update:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),updateMany:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)]).optional(),connectOrCreate:t.lazy(()=>XO).optional(),upsert:t.lazy(()=>e3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>Bl).optional(),update:t.union([t.lazy(()=>o3),t.lazy(()=>af),t.lazy(()=>lf)]).optional()}).strict(),PI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),UI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),WI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),RI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),kI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),xI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),jI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),MI=t.object({create:t.union([t.lazy(()=>df),t.lazy(()=>zf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),connect:t.lazy(()=>it).optional()}).strict(),ZI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),vI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional()}).strict(),OI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),fI=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional()}).strict(),wI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),NI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>yf).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),BI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),Jn=t.object({set:t.lazy(()=>et).optional().nullable()}).strict(),qI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),FI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),DI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),_I=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),updateMany:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>df),t.lazy(()=>zf)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),upsert:t.lazy(()=>Xpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Oe)]).optional(),connect:t.lazy(()=>it).optional(),update:t.union([t.lazy(()=>tct),t.lazy(()=>mE),t.lazy(()=>bE)]).optional()}).strict(),QI=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),updateMany:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),disconnect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),delete:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),connect:t.union([t.lazy(()=>f),t.lazy(()=>f).array()]).optional(),update:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),updateMany:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),deleteMany:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),updateMany:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),set:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),disconnect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),delete:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),connect:t.union([t.lazy(()=>Qt),t.lazy(()=>Qt).array()]).optional(),update:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),updateMany:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>Zy),t.lazy(()=>Zy).array(),t.lazy(()=>vy),t.lazy(()=>vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),KI=t.object({create:t.union([t.lazy(()=>Oy),t.lazy(()=>Oy).array(),t.lazy(()=>fy),t.lazy(()=>fy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),createMany:t.lazy(()=>yf).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),updateMany:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional()}).strict(),XI=t.object({create:t.union([t.lazy(()=>wy),t.lazy(()=>wy).array(),t.lazy(()=>Ny),t.lazy(()=>Ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),updateMany:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),ip=t.object({set:t.number().array()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),connect:t.lazy(()=>C).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),connect:t.lazy(()=>G).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),connect:t.lazy(()=>w).optional()}).strict(),Vr=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),upsert:t.lazy(()=>ect).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>oct),t.lazy(()=>hE),t.lazy(()=>IE)]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),upsert:t.lazy(()=>nct).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>act),t.lazy(()=>gE),t.lazy(()=>CE)]).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),upsert:t.lazy(()=>ict).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ne)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>lct),t.lazy(()=>AE),t.lazy(()=>SE)]).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),connect:t.lazy(()=>C).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>w).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),upsert:t.lazy(()=>rct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>pct),t.lazy(()=>TE),t.lazy(()=>PE)]).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>cct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ne)]).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>uct),t.lazy(()=>UE),t.lazy(()=>WE)]).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>By),t.lazy(()=>By).array(),t.lazy(()=>qy),t.lazy(()=>qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),disconnect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),delete:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),connect:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),update:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),updateMany:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional()}).strict(),kS=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),connect:t.lazy(()=>Yn).optional()}).strict(),xS=t.object({create:t.union([t.lazy(()=>kf),t.lazy(()=>xf)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),connect:t.lazy(()=>G).optional()}).strict(),jS=t.object({create:t.union([t.lazy(()=>jf),t.lazy(()=>Mf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),connect:t.lazy(()=>j).optional()}).strict(),MS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),ZS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),vS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Of).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),OS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),fS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),createMany:t.lazy(()=>vf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),wS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Of).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),NS=t.object({create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]).optional(),connectOrCreate:t.lazy(()=>c3).optional(),upsert:t.lazy(()=>yct).optional(),connect:t.lazy(()=>Yn).optional(),update:t.union([t.lazy(()=>sct),t.lazy(()=>RE),t.lazy(()=>kE)]).optional()}).strict(),BS=t.object({create:t.union([t.lazy(()=>kf),t.lazy(()=>xf)]).optional(),connectOrCreate:t.lazy(()=>u3).optional(),upsert:t.lazy(()=>dct).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>zct),t.lazy(()=>xE),t.lazy(()=>jE)]).optional()}).strict(),qS=t.object({create:t.union([t.lazy(()=>jf),t.lazy(()=>Mf)]).optional(),connectOrCreate:t.lazy(()=>y3).optional(),upsert:t.lazy(()=>mct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Z)]).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>bct),t.lazy(()=>ME),t.lazy(()=>ZE)]).optional()}).strict(),FS=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),DS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),updateMany:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),_S=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>Of).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),ES=t.object({create:t.union([t.lazy(()=>Fy),t.lazy(()=>Fy).array(),t.lazy(()=>Dy),t.lazy(()=>Dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),createMany:t.lazy(()=>Zf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),updateMany:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),LS=t.object({create:t.union([t.lazy(()=>_y),t.lazy(()=>_y).array(),t.lazy(()=>Ey),t.lazy(()=>Ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),createMany:t.lazy(()=>vf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),updateMany:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),VS=t.object({create:t.union([t.lazy(()=>Ly),t.lazy(()=>Ly).array(),t.lazy(()=>Vy),t.lazy(()=>Vy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),createMany:t.lazy(()=>Of).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),updateMany:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),connect:t.lazy(()=>Yn).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),connect:t.lazy(()=>f).optional()}).strict(),mF=t.object({create:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),connect:t.lazy(()=>j).optional()}).strict(),Hr=t.object({set:t.lazy(()=>Mt).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]).optional(),connectOrCreate:t.lazy(()=>s3).optional(),upsert:t.lazy(()=>hct).optional(),connect:t.lazy(()=>Yn).optional(),update:t.union([t.lazy(()=>Ict),t.lazy(()=>vE),t.lazy(()=>OE)]).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]).optional(),connectOrCreate:t.lazy(()=>d3).optional(),upsert:t.lazy(()=>gct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>Cct),t.lazy(()=>fE),t.lazy(()=>wE)]).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)]).optional(),connectOrCreate:t.lazy(()=>z3).optional(),upsert:t.lazy(()=>Act).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Sct),t.lazy(()=>NE),t.lazy(()=>BE)]).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Df),t.lazy(()=>_f)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>Yn).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>j).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),lp=t.object({set:t.lazy(()=>vt).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Df),t.lazy(()=>_f)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>Tct).optional(),connect:t.lazy(()=>Yn).optional(),update:t.union([t.lazy(()=>Pct),t.lazy(()=>qE),t.lazy(()=>FE)]).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>Uct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Wct),t.lazy(()=>DE),t.lazy(()=>_E)]).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Hy),t.lazy(()=>Hy).array(),t.lazy(()=>Qy),t.lazy(()=>Qy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),createMany:t.lazy(()=>Vf).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),updateMany:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),V2=t.object({create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>pt).optional()}).strict(),H2=t.object({create:t.union([t.lazy(()=>Yf),t.lazy(()=>Gf)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>f).optional()}).strict(),Q2=t.object({create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>Rct).optional(),connect:t.lazy(()=>pt).optional(),update:t.union([t.lazy(()=>kct),t.lazy(()=>EE),t.lazy(()=>LE)]).optional()}).strict(),Y2=t.object({create:t.union([t.lazy(()=>Yf),t.lazy(()=>Gf)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>xct).optional(),connect:t.lazy(()=>f).optional(),update:t.union([t.lazy(()=>jct),t.lazy(()=>VE),t.lazy(()=>HE)]).optional()}).strict(),Nlt=t.object({create:t.union([t.lazy(()=>$f),t.lazy(()=>Jf)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Blt=t.object({create:t.union([t.lazy(()=>$f),t.lazy(()=>Jf)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>Mct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Zct),t.lazy(()=>QE),t.lazy(()=>YE)]).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Kf),t.lazy(()=>Xf)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>J).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>Qt).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>ow).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>ow).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),rp=t.object({set:t.lazy(()=>Ot).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>Kf),t.lazy(()=>Xf)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>vct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Oct),t.lazy(()=>GE),t.lazy(()=>$E)]).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>fct).optional(),connect:t.lazy(()=>Qt).optional(),update:t.union([t.lazy(()=>wct),t.lazy(()=>JE),t.lazy(()=>KE)]).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>ow).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>Yy),t.lazy(()=>Yy).array(),t.lazy(()=>Gy),t.lazy(()=>Gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),createMany:t.lazy(()=>ow).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),updateMany:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),G2=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>ct).optional()}).strict(),$2=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>G).optional()}).strict(),J2=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>Nct).optional(),connect:t.lazy(()=>ct).optional(),update:t.union([t.lazy(()=>Bct),t.lazy(()=>XE),t.lazy(()=>tL)]).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>qct).optional(),connect:t.lazy(()=>G).optional(),update:t.union([t.lazy(()=>Fct),t.lazy(()=>eL),t.lazy(()=>oL)]).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>rw).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),createMany:t.lazy(()=>rw).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>pw).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>rw).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>$y),t.lazy(()=>$y).array(),t.lazy(()=>Jy),t.lazy(()=>Jy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),createMany:t.lazy(()=>rw).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),updateMany:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>Ky),t.lazy(()=>Ky).array(),t.lazy(()=>Xy),t.lazy(()=>Xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),set:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),disconnect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),delete:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),connect:t.union([t.lazy(()=>G),t.lazy(()=>G).array()]).optional(),update:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),updateMany:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),createMany:t.lazy(()=>pw).optional(),set:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),disconnect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),delete:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),connect:t.union([t.lazy(()=>bt),t.lazy(()=>bt).array()]).optional(),update:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),updateMany:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>j).optional()}).strict(),t5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>yw).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),e5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>yw).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Lm=t.object({set:t.lazy(()=>Lt).optional()}).strict(),o5=t.object({create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Dct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>_ct),t.lazy(()=>nL),t.lazy(()=>aL)]).optional()}).strict(),n5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>yw).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),a5=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),createMany:t.lazy(()=>yw).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),i5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),l5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>sw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),r5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),p5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>sw).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),Kn=t.object({set:t.lazy(()=>X).optional()}).strict(),c5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),u5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>sw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),y5=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),updateMany:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),s5=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),createMany:t.lazy(()=>sw).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),updateMany:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>oe).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>mw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>C).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>j).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>Ect).optional(),connect:t.lazy(()=>oe).optional(),update:t.union([t.lazy(()=>Lct),t.lazy(()=>iL),t.lazy(()=>lL)]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>mw),t.lazy(()=>bw)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>Vct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Hct),t.lazy(()=>rL),t.lazy(()=>pL)]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>Qct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>Yct),t.lazy(()=>cL),t.lazy(()=>uL)]).optional()}).strict(),qlt=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>j).optional()}).strict(),Flt=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>Gct).optional(),connect:t.lazy(()=>j).optional(),update:t.union([t.lazy(()=>$ct),t.lazy(()=>yL),t.lazy(()=>sL)]).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),connect:t.lazy(()=>J).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),upsert:t.lazy(()=>Jct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Kct),t.lazy(()=>dL),t.lazy(()=>zL)]).optional()}).strict(),iD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),lD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),rD=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),createMany:t.lazy(()=>Tw).optional(),set:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),disconnect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),delete:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),connect:t.union([t.lazy(()=>k),t.lazy(()=>k).array()]).optional(),update:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),updateMany:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),deleteMany:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional()}).strict(),pD=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ys),t.lazy(()=>ys).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),createMany:t.lazy(()=>Pw).optional(),set:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),disconnect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),delete:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),connect:t.union([t.lazy(()=>Kt),t.lazy(()=>Kt).array()]).optional(),update:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),updateMany:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),d5=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>k).optional()}).strict(),z5=t.object({create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>C).optional()}).strict(),m5=t.object({create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>Xct).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>tut),t.lazy(()=>mL),t.lazy(()=>bL)]).optional()}).strict(),b5=t.object({create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>eut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>out),t.lazy(()=>hL),t.lazy(()=>IL)]).optional()}).strict(),no=t.object({set:t.number().array()}).strict(),ao=t.object({set:t.number().array()}).strict(),io=t.object({set:t.number().array()}).strict(),lo=t.object({set:t.string().array()}).strict(),Fz=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),Dz=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>Kt).optional()}).strict(),_z=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Ez=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Lz=t.object({create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)]).optional(),connectOrCreate:t.lazy(()=>Ow).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Vz=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Hz=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ww).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),Qz=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),Yz=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Gz=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),$z=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Jz=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),createMany:t.lazy(()=>vw).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Kz=t.object({create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)]).optional(),connectOrCreate:t.lazy(()=>Ow).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Xz=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>fw).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),tm=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),createMany:t.lazy(()=>ww).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional()}).strict(),em=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),om=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional()}).strict(),De=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),_e=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ee=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Le=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>nut).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>aut),t.lazy(()=>gL),t.lazy(()=>CL)]).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>iut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>ve)]).optional(),connect:t.lazy(()=>Kt).optional(),update:t.union([t.lazy(()=>lut),t.lazy(()=>AL),t.lazy(()=>SL)]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)]).optional(),connectOrCreate:t.lazy(()=>Ow).optional(),upsert:t.lazy(()=>O3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>f3),t.lazy(()=>qw),t.lazy(()=>Fw)]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>ww).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),updateMany:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),updateMany:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>ss),t.lazy(()=>ss).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),updateMany:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),createMany:t.lazy(()=>vw).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)]).optional(),connectOrCreate:t.lazy(()=>Ow).optional(),upsert:t.lazy(()=>O3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>f3),t.lazy(()=>qw),t.lazy(()=>Fw)]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),createMany:t.lazy(()=>fw).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),updateMany:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),createMany:t.lazy(()=>ww).optional(),set:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),disconnect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),delete:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),connect:t.union([t.lazy(()=>zt),t.lazy(()=>zt).array()]).optional(),update:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),updateMany:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),updateMany:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Cm=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),updateMany:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Am=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),set:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),disconnect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),delete:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),connect:t.union([t.lazy(()=>it),t.lazy(()=>it).array()]).optional(),update:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),updateMany:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Dlt=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),connect:t.lazy(()=>k).optional()}).strict(),_lt=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),upsert:t.lazy(()=>rut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>At)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>At)]).optional(),connect:t.lazy(()=>k).optional(),update:t.union([t.lazy(()=>put),t.lazy(()=>TL),t.lazy(()=>PL)]).optional()}).strict(),Elt=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Llt=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),upsert:t.lazy(()=>cut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>uut),t.lazy(()=>UL),t.lazy(()=>WL)]).optional()}).strict(),Vlt=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Hlt=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),upsert:t.lazy(()=>yut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>sut),t.lazy(()=>RL),t.lazy(()=>kL)]).optional()}).strict(),dt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>dt)]).optional()}).strict(),Gr=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Gr)]).optional()}).strict(),FA=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>FA)]).optional()}).strict(),h5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>h5)]).optional(),_count:t.lazy(()=>dt).optional(),_avg:t.lazy(()=>Gr).optional(),_sum:t.lazy(()=>dt).optional(),_min:t.lazy(()=>dt).optional(),_max:t.lazy(()=>dt).optional()}).strict(),I5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>I5)]).optional(),_count:t.lazy(()=>dt).optional(),_avg:t.lazy(()=>Gr).optional(),_sum:t.lazy(()=>Gr).optional(),_min:t.lazy(()=>Gr).optional(),_max:t.lazy(()=>Gr).optional()}).strict(),g5=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>g5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>FA).optional(),_max:t.lazy(()=>FA).optional()}).strict(),$r=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>$r)]).optional().nullable()}).strict(),DA=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>DA)]).optional().nullable()}).strict(),_A=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>_A)]).optional()}).strict(),C5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>C5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_avg:t.lazy(()=>$r).optional(),_sum:t.lazy(()=>$r).optional(),_min:t.lazy(()=>$r).optional(),_max:t.lazy(()=>$r).optional()}).strict(),sl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>sl)]).optional().nullable()}).strict(),A5=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>A5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>DA).optional(),_max:t.lazy(()=>DA).optional()}).strict(),S5=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>S5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>_A).optional(),_max:t.lazy(()=>_A).optional()}).strict(),EA=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>EA)]).optional()}).strict(),T5=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>T5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>EA).optional(),_max:t.lazy(()=>EA).optional()}).strict(),P5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>P5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_avg:t.lazy(()=>$r).optional(),_sum:t.lazy(()=>sl).optional(),_min:t.lazy(()=>sl).optional(),_max:t.lazy(()=>sl).optional()}).strict(),LA=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>LA)]).optional()}).strict(),U5=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>U5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>LA).optional(),_max:t.lazy(()=>LA).optional()}).strict(),VA=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>VA)]).optional().nullable()}).strict(),W5=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>W5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>VA).optional(),_max:t.lazy(()=>VA).optional()}).strict(),HA=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>HA)]).optional()}).strict(),R5=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>HA).optional(),_max:t.lazy(()=>HA).optional()}).strict(),QA=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>QA)]).optional()}).strict(),k5=t.object({equals:t.lazy(()=>le).optional(),in:t.lazy(()=>le).array().optional(),notIn:t.lazy(()=>le).array().optional(),not:t.union([t.lazy(()=>le),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>QA).optional(),_max:t.lazy(()=>QA).optional()}).strict(),YA=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>YA)]).optional()}).strict(),x5=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>YA).optional(),_max:t.lazy(()=>YA).optional()}).strict(),GA=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>GA)]).optional()}).strict(),j5=t.object({equals:t.lazy(()=>Et).optional(),in:t.lazy(()=>Et).array().optional(),notIn:t.lazy(()=>Et).array().optional(),not:t.union([t.lazy(()=>Et),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),$A=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>$A)]).optional()}).strict(),M5=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>M5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),JA=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>JA)]).optional()}).strict(),KA=t.object({equals:t.lazy(()=>jt).optional(),in:t.lazy(()=>jt).array().optional(),notIn:t.lazy(()=>jt).array().optional(),not:t.union([t.lazy(()=>jt),t.lazy(()=>KA)]).optional()}).strict(),Z5=t.object({equals:t.lazy(()=>xt).optional(),in:t.lazy(()=>xt).array().optional(),notIn:t.lazy(()=>xt).array().optional(),not:t.union([t.lazy(()=>xt),t.lazy(()=>Z5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),v5=t.object({equals:t.lazy(()=>jt).optional(),in:t.lazy(()=>jt).array().optional(),notIn:t.lazy(()=>jt).array().optional(),not:t.union([t.lazy(()=>jt),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XA=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>XA)]).optional()}).strict(),O5=t.object({equals:t.lazy(()=>re).optional(),in:t.lazy(()=>re).array().optional(),notIn:t.lazy(()=>re).array().optional(),not:t.union([t.lazy(()=>re),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),tS=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>tS)]).optional()}).strict(),f5=t.object({equals:t.lazy(()=>pe).optional(),in:t.lazy(()=>pe).array().optional(),notIn:t.lazy(()=>pe).array().optional(),not:t.union([t.lazy(()=>pe),t.lazy(()=>f5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),eS=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>eS)]).optional()}).strict(),w5=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>w5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),oS=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>oS)]).optional()}).strict(),N5=t.object({equals:t.lazy(()=>ft).optional(),in:t.lazy(()=>ft).array().optional(),notIn:t.lazy(()=>ft).array().optional(),not:t.union([t.lazy(()=>ft),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),nS=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>nS)]).optional()}).strict(),B5=t.object({equals:t.lazy(()=>x).optional(),in:t.lazy(()=>x).array().optional(),notIn:t.lazy(()=>x).array().optional(),not:t.union([t.lazy(()=>x),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),aS=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>aS)]).optional()}).strict(),q5=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),iS=t.object({equals:t.lazy(()=>et).optional().nullable(),in:t.lazy(()=>et).array().optional().nullable(),notIn:t.lazy(()=>et).array().optional().nullable(),not:t.union([t.lazy(()=>et),t.lazy(()=>iS)]).optional().nullable()}).strict(),F5=t.object({equals:t.lazy(()=>et).optional().nullable(),in:t.lazy(()=>et).array().optional().nullable(),notIn:t.lazy(()=>et).array().optional().nullable(),not:t.union([t.lazy(()=>et),t.lazy(()=>F5)]).optional().nullable(),_count:t.lazy(()=>sl).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),lS=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>lS)]).optional()}).strict(),D5=t.object({equals:t.lazy(()=>Mt).optional(),in:t.lazy(()=>Mt).array().optional(),notIn:t.lazy(()=>Mt).array().optional(),not:t.union([t.lazy(()=>Mt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),rS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>rS)]).optional()}).strict(),_5=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),pS=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>pS)]).optional()}).strict(),E5=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),cS=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>cS)]).optional()}).strict(),L5=t.object({equals:t.lazy(()=>Lt).optional(),in:t.lazy(()=>Lt).array().optional(),notIn:t.lazy(()=>Lt).array().optional(),not:t.union([t.lazy(()=>Lt),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),uS=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>uS)]).optional()}).strict(),V5=t.object({equals:t.lazy(()=>X).optional(),in:t.lazy(()=>X).array().optional(),notIn:t.lazy(()=>X).array().optional(),not:t.union([t.lazy(()=>X),t.lazy(()=>V5)]).optional(),_count:t.lazy(()=>dt).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),vM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),OM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),H5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>vM),t.lazy(()=>OM)])}).strict(),Qlt=t.object({update:t.union([t.lazy(()=>cD),t.lazy(()=>uD)]),create:t.union([t.lazy(()=>vM),t.lazy(()=>OM)]),where:t.lazy(()=>v).optional()}).strict(),Ylt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>cD),t.lazy(()=>uD)])}).strict(),cD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),uD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),fM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),wM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Q5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>fM),t.lazy(()=>wM)])}).strict(),Glt=t.object({update:t.union([t.lazy(()=>yD),t.lazy(()=>sD)]),create:t.union([t.lazy(()=>fM),t.lazy(()=>wM)]),where:t.lazy(()=>v).optional()}).strict(),$lt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>yD),t.lazy(()=>sD)])}).strict(),yD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),sD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),NM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),BM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Y5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>NM),t.lazy(()=>BM)])}).strict(),Jlt=t.object({update:t.union([t.lazy(()=>dD),t.lazy(()=>zD)]),create:t.union([t.lazy(()=>NM),t.lazy(()=>BM)]),where:t.lazy(()=>v).optional()}).strict(),Klt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>dD),t.lazy(()=>zD)])}).strict(),dD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),zD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),qM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),FM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),G5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>qM),t.lazy(()=>FM)])}).strict(),Xlt=t.object({update:t.union([t.lazy(()=>mD),t.lazy(()=>bD)]),create:t.union([t.lazy(()=>qM),t.lazy(()=>FM)]),where:t.lazy(()=>v).optional()}).strict(),trt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>mD),t.lazy(()=>bD)])}).strict(),mD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),bD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),DM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),_M=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),$5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>DM),t.lazy(()=>_M)])}).strict(),ert=t.object({update:t.union([t.lazy(()=>hD),t.lazy(()=>ID)]),create:t.union([t.lazy(()=>DM),t.lazy(()=>_M)]),where:t.lazy(()=>v).optional()}).strict(),ort=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>hD),t.lazy(()=>ID)])}).strict(),hD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),ID=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),EM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),LM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),J5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>EM),t.lazy(()=>LM)])}).strict(),nrt=t.object({update:t.union([t.lazy(()=>gD),t.lazy(()=>CD)]),create:t.union([t.lazy(()=>EM),t.lazy(()=>LM)]),where:t.lazy(()=>v).optional()}).strict(),art=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>gD),t.lazy(()=>CD)])}).strict(),gD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),CD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),VM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),HM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),K5=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>VM),t.lazy(()=>HM)])}).strict(),irt=t.object({update:t.union([t.lazy(()=>AD),t.lazy(()=>SD)]),create:t.union([t.lazy(()=>VM),t.lazy(()=>HM)]),where:t.lazy(()=>v).optional()}).strict(),lrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>AD),t.lazy(()=>SD)])}).strict(),AD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),SD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),QM=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),YM=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),X5=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>QM),t.lazy(()=>YM)])}).strict(),GM=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),$M=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),t6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>GM),t.lazy(()=>$M)])}).strict(),rrt=t.object({update:t.union([t.lazy(()=>TD),t.lazy(()=>PD)]),create:t.union([t.lazy(()=>QM),t.lazy(()=>YM)]),where:t.lazy(()=>N).optional()}).strict(),prt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>TD),t.lazy(()=>PD)])}).strict(),TD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),PD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),crt=t.object({update:t.union([t.lazy(()=>UD),t.lazy(()=>WD)]),create:t.union([t.lazy(()=>GM),t.lazy(()=>$M)]),where:t.lazy(()=>At).optional()}).strict(),urt=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>UD),t.lazy(()=>WD)])}).strict(),UD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),WD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),JM=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XF),menuItems:t.lazy(()=>tD).optional()}).strict(),KM=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>oD).optional()}).strict(),e6=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)])}).strict(),Hp=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),Qp=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),kb=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),XM=t.object({data:t.union([t.lazy(()=>_V),t.lazy(()=>_V).array()]),skipDuplicates:t.boolean().optional()}).strict(),yrt=t.object({update:t.union([t.lazy(()=>RD),t.lazy(()=>kD)]),create:t.union([t.lazy(()=>JM),t.lazy(()=>KM)]),where:t.lazy(()=>Ze).optional()}).strict(),srt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>RD),t.lazy(()=>kD)])}).strict(),RD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>aD).optional(),menuItems:t.lazy(()=>iD).optional()}).strict(),kD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>rD).optional()}).strict(),nU=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>q3),t.lazy(()=>F3)]),create:t.union([t.lazy(()=>Hp),t.lazy(()=>Qp)])}).strict(),aU=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>q3),t.lazy(()=>F3)])}).strict(),iU=t.object({where:t.lazy(()=>oo),data:t.union([t.lazy(()=>dS),t.lazy(()=>dut)])}).strict(),oo=t.object({AND:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional(),OR:t.lazy(()=>oo).array().optional(),NOT:t.union([t.lazy(()=>oo),t.lazy(()=>oo).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>W),t.number()]).optional(),foodCost:t.union([t.lazy(()=>W),t.number()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),recipeIds:t.lazy(()=>TI).optional(),recipeServingsAmount:t.lazy(()=>Rb).optional(),recipeServingsCost:t.lazy(()=>Rb).optional(),allergens:t.lazy(()=>dl).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),categoryId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable()}).strict(),tZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),eZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),o6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)])}).strict(),Yp=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Xq),ingredient:t.lazy(()=>tF)}).strict(),Gp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),xb=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),oZ=t.object({data:t.union([t.lazy(()=>EV),t.lazy(()=>EV).array()]),skipDuplicates:t.boolean().optional()}).strict(),$p=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>iF),equipment:t.lazy(()=>rF).optional()}).strict(),Jp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),jb=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),nZ=t.object({data:t.union([t.lazy(()=>LV),t.lazy(()=>LV).array()]),skipDuplicates:t.boolean().optional()}).strict(),aZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),iZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),n6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)])}).strict(),lZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),rZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),a6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)])}).strict(),drt=t.object({update:t.union([t.lazy(()=>xD),t.lazy(()=>jD)]),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]),where:t.lazy(()=>v).optional()}).strict(),zrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>xD),t.lazy(()=>jD)])}).strict(),xD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),jD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),lU=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>D3),t.lazy(()=>_3)]),create:t.union([t.lazy(()=>Yp),t.lazy(()=>Gp)])}).strict(),rU=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>D3),t.lazy(()=>_3)])}).strict(),pU=t.object({where:t.lazy(()=>Za),data:t.union([t.lazy(()=>RT),t.lazy(()=>zut)])}).strict(),Za=t.object({AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>TI).optional(),isOptional:t.union([t.lazy(()=>_t),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable()}).strict(),cU=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>E3),t.lazy(()=>L3)]),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),uU=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>E3),t.lazy(()=>L3)])}).strict(),yU=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>Ej),t.lazy(()=>mut)])}).strict(),ml=t.object({AND:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),OR:t.lazy(()=>ml).array().optional(),NOT:t.union([t.lazy(()=>ml),t.lazy(()=>ml).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),mrt=t.object({update:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)]),create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]),where:t.lazy(()=>Z).optional()}).strict(),brt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)])}).strict(),MD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),ZD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),hrt=t.object({update:t.union([t.lazy(()=>vD),t.lazy(()=>OD)]),create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]),where:t.lazy(()=>Z).optional()}).strict(),Irt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>vD),t.lazy(()=>OD)])}).strict(),vD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),OD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),pZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),cZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),i6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)])}).strict(),Kp=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>vB),RecipeInstruction:t.lazy(()=>fB).optional()}).strict(),Xp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Mb=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),uZ=t.object({data:t.union([t.lazy(()=>VV),t.lazy(()=>VV).array()]),skipDuplicates:t.boolean().optional()}).strict(),tc=t.object({date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ec=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Zb=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),yZ=t.object({data:t.union([t.lazy(()=>HV),t.lazy(()=>HV).array()]),skipDuplicates:t.boolean().optional()}).strict(),grt=t.object({update:t.union([t.lazy(()=>fD),t.lazy(()=>wD)]),create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]),where:t.lazy(()=>N).optional()}).strict(),Crt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>fD),t.lazy(()=>wD)])}).strict(),fD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),wD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),sU=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>V3),t.lazy(()=>H3)]),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),dU=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>V3),t.lazy(()=>H3)])}).strict(),zU=t.object({where:t.lazy(()=>va),data:t.union([t.lazy(()=>AT),t.lazy(()=>but)])}).strict(),va=t.object({AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable()}).strict(),mU=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>Q3),t.lazy(()=>Y3)]),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),bU=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>Q3),t.lazy(()=>Y3)])}).strict(),hU=t.object({where:t.lazy(()=>mp),data:t.union([t.lazy(()=>MN),t.lazy(()=>hut)])}).strict(),mp=t.object({AND:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),OR:t.lazy(()=>mp).array().optional(),NOT:t.union([t.lazy(()=>mp),t.lazy(()=>mp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>XN),t.lazy(()=>le)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),sZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),dZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),l6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>sZ),t.lazy(()=>dZ)])}).strict(),zZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TB),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),mZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),r6=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)])}).strict(),bZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>iF),RecipeVersion:t.lazy(()=>lF).optional()}).strict(),hZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),p6=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>bZ),t.lazy(()=>hZ)])}).strict(),Art=t.object({update:t.union([t.lazy(()=>ND),t.lazy(()=>BD)]),create:t.union([t.lazy(()=>sZ),t.lazy(()=>dZ)]),where:t.lazy(()=>v).optional()}).strict(),Srt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>ND),t.lazy(()=>BD)])}).strict(),ND=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),BD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Trt=t.object({update:t.union([t.lazy(()=>qD),t.lazy(()=>FD)]),create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]),where:t.lazy(()=>xe).optional()}).strict(),Prt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>qD),t.lazy(()=>FD)])}).strict(),qD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kB).optional(),maintenanceLogs:t.lazy(()=>jB).optional()}).strict(),FD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>ZB).optional()}).strict(),Urt=t.object({update:t.union([t.lazy(()=>DD),t.lazy(()=>_D)]),create:t.union([t.lazy(()=>bZ),t.lazy(()=>hZ)]),where:t.lazy(()=>fe).optional()}).strict(),Wrt=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>DD),t.lazy(()=>_D)])}).strict(),DD=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>cF).optional(),RecipeVersion:t.lazy(()=>uF).optional()}).strict(),_D=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),IZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>TB),recipes:t.lazy(()=>PB).optional()}).strict(),gZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>WB).optional()}).strict(),c6=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>IZ),t.lazy(()=>gZ)])}).strict(),Rrt=t.object({update:t.union([t.lazy(()=>ED),t.lazy(()=>LD)]),create:t.union([t.lazy(()=>IZ),t.lazy(()=>gZ)]),where:t.lazy(()=>xe).optional()}).strict(),krt=t.object({where:t.lazy(()=>xe).optional(),data:t.union([t.lazy(()=>ED),t.lazy(()=>LD)])}).strict(),ED=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>kB).optional(),recipes:t.lazy(()=>xB).optional()}).strict(),LD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>MB).optional()}).strict(),CZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),AZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),u6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>CZ),t.lazy(()=>AZ)])}).strict(),oc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>z2).optional()}).strict(),nc=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>m2).optional()}).strict(),vb=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),SZ=t.object({data:t.union([t.lazy(()=>QV),t.lazy(()=>QV).array()]),skipDuplicates:t.boolean().optional()}).strict(),ac=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>$B),items:t.lazy(()=>JB).optional()}).strict(),ic=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>KB).optional()}).strict(),Ob=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),TZ=t.object({data:t.union([t.lazy(()=>YV),t.lazy(()=>YV).array()]),skipDuplicates:t.boolean().optional()}).strict(),xrt=t.object({update:t.union([t.lazy(()=>VD),t.lazy(()=>HD)]),create:t.union([t.lazy(()=>CZ),t.lazy(()=>AZ)]),where:t.lazy(()=>N).optional()}).strict(),jrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>VD),t.lazy(()=>HD)])}).strict(),VD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),HD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),IU=t.object({where:t.lazy(()=>Xt),update:t.union([t.lazy(()=>G3),t.lazy(()=>$3)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),gU=t.object({where:t.lazy(()=>Xt),data:t.union([t.lazy(()=>G3),t.lazy(()=>$3)])}).strict(),CU=t.object({where:t.lazy(()=>bp),data:t.union([t.lazy(()=>vN),t.lazy(()=>Iut)])}).strict(),bp=t.object({AND:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),OR:t.lazy(()=>bp).array().optional(),NOT:t.union([t.lazy(()=>bp),t.lazy(()=>bp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>eB),t.lazy(()=>Et)]).optional(),requiredPhotos:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),AU=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>J3),t.lazy(()=>K3)]),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),SU=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>J3),t.lazy(()=>K3)])}).strict(),TU=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>fj),t.lazy(()=>gut)])}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistId:t.union([t.lazy(()=>y),t.number()]).optional(),completedById:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),PZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),completions:t.lazy(()=>DB).optional()}).strict(),UZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>EB).optional()}).strict(),y6=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>PZ),t.lazy(()=>UZ)])}).strict(),lc=t.object({status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>g2)}).strict(),rc=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fb=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),WZ=t.object({data:t.union([t.lazy(()=>GV),t.lazy(()=>GV).array()]),skipDuplicates:t.boolean().optional()}).strict(),Mrt=t.object({update:t.union([t.lazy(()=>QD),t.lazy(()=>YD)]),create:t.union([t.lazy(()=>PZ),t.lazy(()=>UZ)]),where:t.lazy(()=>je).optional()}).strict(),Zrt=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>QD),t.lazy(()=>YD)])}).strict(),QD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),completions:t.lazy(()=>HB).optional()}).strict(),YD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>YB).optional()}).strict(),PU=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>X3),t.lazy(()=>t8)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),UU=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>X3),t.lazy(()=>t8)])}).strict(),WU=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>wj),t.lazy(()=>Cut)])}).strict(),hl=t.object({AND:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),OR:t.lazy(()=>hl).array().optional(),NOT:t.union([t.lazy(()=>hl),t.lazy(()=>hl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>y),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>oB),t.lazy(()=>Dt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>dl).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),RZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),items:t.lazy(()=>FB).optional()}).strict(),kZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>_B).optional()}).strict(),s6=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)])}).strict(),xZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),jZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),d6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),pc=t.object({status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>C2)}).strict(),cc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wb=t.object({where:t.lazy(()=>mt),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),MZ=t.object({data:t.union([t.lazy(()=>$V),t.lazy(()=>$V).array()]),skipDuplicates:t.boolean().optional()}).strict(),vrt=t.object({update:t.union([t.lazy(()=>GD),t.lazy(()=>$D)]),create:t.union([t.lazy(()=>RZ),t.lazy(()=>kZ)]),where:t.lazy(()=>je).optional()}).strict(),Ort=t.object({where:t.lazy(()=>je).optional(),data:t.union([t.lazy(()=>GD),t.lazy(()=>$D)])}).strict(),GD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),items:t.lazy(()=>VB).optional()}).strict(),$D=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QB).optional()}).strict(),frt=t.object({update:t.union([t.lazy(()=>JD),t.lazy(()=>KD)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>Z).optional()}).strict(),wrt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>JD),t.lazy(()=>KD)])}).strict(),JD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),KD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),RU=t.object({where:t.lazy(()=>mt),update:t.union([t.lazy(()=>e8),t.lazy(()=>o8)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),kU=t.object({where:t.lazy(()=>mt),data:t.union([t.lazy(()=>e8),t.lazy(()=>o8)])}).strict(),xU=t.object({where:t.lazy(()=>hl),data:t.union([t.lazy(()=>wj),t.lazy(()=>Aut)])}).strict(),ZZ=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>GB),completedBy:t.lazy(()=>$B)}).strict(),vZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),z6=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)])}).strict(),OZ=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>d2)}).strict(),fZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),m6=t.object({where:t.lazy(()=>Xt),create:t.union([t.lazy(()=>OZ),t.lazy(()=>fZ)])}).strict(),Nrt=t.object({update:t.union([t.lazy(()=>XD),t.lazy(()=>t_)]),create:t.union([t.lazy(()=>ZZ),t.lazy(()=>vZ)]),where:t.lazy(()=>He).optional()}).strict(),Brt=t.object({where:t.lazy(()=>He).optional(),data:t.union([t.lazy(()=>XD),t.lazy(()=>t_)])}).strict(),XD=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>XB).optional(),completedBy:t.lazy(()=>tq).optional()}).strict(),t_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qrt=t.object({update:t.union([t.lazy(()=>e_),t.lazy(()=>o_)]),create:t.union([t.lazy(()=>OZ),t.lazy(()=>fZ)]),where:t.lazy(()=>Ve).optional()}).strict(),Frt=t.object({where:t.lazy(()=>Ve).optional(),data:t.union([t.lazy(()=>e_),t.lazy(()=>o_)])}).strict(),e_=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>b2).optional()}).strict(),o_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wZ=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>fF).optional(),ingredients:t.lazy(()=>wF).optional()}).strict(),NZ=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>BF).optional(),ingredients:t.lazy(()=>qF).optional()}).strict(),b6=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)])}).strict(),BZ=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),qZ=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional()}).strict(),h6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>BZ),t.lazy(()=>qZ)])}).strict(),Drt=t.object({update:t.union([t.lazy(()=>n_),t.lazy(()=>a_)]),create:t.union([t.lazy(()=>wZ),t.lazy(()=>NZ)]),where:t.lazy(()=>Me).optional()}).strict(),_rt=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>n_),t.lazy(()=>a_)])}).strict(),n_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>DF).optional(),ingredients:t.lazy(()=>_F).optional()}).strict(),a_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>LF).optional(),ingredients:t.lazy(()=>VF).optional()}).strict(),Ert=t.object({update:t.union([t.lazy(()=>i_),t.lazy(()=>l_)]),create:t.union([t.lazy(()=>BZ),t.lazy(()=>qZ)]),where:t.lazy(()=>kt).optional()}).strict(),Lrt=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>i_),t.lazy(()=>l_)])}).strict(),i_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),l_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional()}).strict(),FZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional()}).strict(),DZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional()}).strict(),I6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)])}).strict(),_Z=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),EZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),g6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)])}).strict(),LZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),C6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),Vrt=t.object({update:t.union([t.lazy(()=>r_),t.lazy(()=>p_)]),create:t.union([t.lazy(()=>FZ),t.lazy(()=>DZ)]),where:t.lazy(()=>N).optional()}).strict(),Hrt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>r_),t.lazy(()=>p_)])}).strict(),r_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional()}).strict(),p_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional()}).strict(),Qrt=t.object({update:t.union([t.lazy(()=>c_),t.lazy(()=>u_)]),create:t.union([t.lazy(()=>_Z),t.lazy(()=>EZ)]),where:t.lazy(()=>At).optional()}).strict(),Yrt=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>c_),t.lazy(()=>u_)])}).strict(),c_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),u_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),Grt=t.object({update:t.union([t.lazy(()=>y_),t.lazy(()=>s_)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>Z).optional()}).strict(),$rt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>y_),t.lazy(()=>s_)])}).strict(),y_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),s_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),uc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional()}).strict(),yc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional()}).strict(),Nb=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),sc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),dc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Bb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),zc=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional()}).strict(),mc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),qb=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),HZ=t.object({data:t.union([t.lazy(()=>JV),t.lazy(()=>JV).array()]),skipDuplicates:t.boolean().optional()}).strict(),jU=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>n8),t.lazy(()=>a8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>yc)])}).strict(),MU=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>n8),t.lazy(()=>a8)])}).strict(),ZU=t.object({where:t.lazy(()=>oo),data:t.union([t.lazy(()=>dS),t.lazy(()=>Sut)])}).strict(),vU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>i8),t.lazy(()=>l8)]),create:t.union([t.lazy(()=>sc),t.lazy(()=>dc)])}).strict(),OU=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>i8),t.lazy(()=>l8)])}).strict(),fU=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>Tut)])}).strict(),ie=t.object({AND:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),OR:t.lazy(()=>ie).array().optional(),NOT:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>dl).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>y),t.number()]).optional(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>_t),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>hB),t.lazy(()=>U)]).optional()}).strict(),wU=t.object({where:t.lazy(()=>G),update:t.union([t.lazy(()=>r8),t.lazy(()=>p8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),NU=t.object({where:t.lazy(()=>G),data:t.union([t.lazy(()=>r8),t.lazy(()=>p8)])}).strict(),BU=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>_j),t.lazy(()=>Put)])}).strict(),Il=t.object({AND:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),OR:t.lazy(()=>Il).array().optional(),NOT:t.union([t.lazy(()=>Il),t.lazy(()=>Il).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),density:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>IB),t.lazy(()=>et)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable()}).strict(),bc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),hc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Fb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),qU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>c8),t.lazy(()=>u8)]),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),FU=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>c8),t.lazy(()=>u8)])}).strict(),DU=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>Uut)])}).strict(),QZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),YZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),A6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)])}).strict(),GZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),$Z=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),S6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)])}).strict(),JZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),KZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),T6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)])}).strict(),Jrt=t.object({update:t.union([t.lazy(()=>d_),t.lazy(()=>z_)]),create:t.union([t.lazy(()=>QZ),t.lazy(()=>YZ)]),where:t.lazy(()=>N).optional()}).strict(),Krt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>d_),t.lazy(()=>z_)])}).strict(),d_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),Xrt=t.object({update:t.union([t.lazy(()=>m_),t.lazy(()=>b_)]),create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]),where:t.lazy(()=>At).optional()}).strict(),tpt=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>m_),t.lazy(()=>b_)])}).strict(),m_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),b_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),ept=t.object({update:t.union([t.lazy(()=>h_),t.lazy(()=>I_)]),create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]),where:t.lazy(()=>Z).optional()}).strict(),opt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>h_),t.lazy(()=>I_)])}).strict(),h_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),I_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),XZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),tv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),P6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)])}).strict(),ev=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),ov=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),U6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)])}).strict(),nv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),av=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),W6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>nv),t.lazy(()=>av)])}).strict(),npt=t.object({update:t.union([t.lazy(()=>g_),t.lazy(()=>C_)]),create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]),where:t.lazy(()=>N).optional()}).strict(),apt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>g_),t.lazy(()=>C_)])}).strict(),g_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),C_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),ipt=t.object({update:t.union([t.lazy(()=>A_),t.lazy(()=>S_)]),create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]),where:t.lazy(()=>kt).optional()}).strict(),lpt=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>A_),t.lazy(()=>S_)])}).strict(),A_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),S_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),rpt=t.object({update:t.union([t.lazy(()=>T_),t.lazy(()=>P_)]),create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]),where:t.lazy(()=>Z).optional()}).strict(),ppt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>T_),t.lazy(()=>P_)])}).strict(),T_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),P_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),iv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),lv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),R6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)])}).strict(),rv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),k6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)])}).strict(),Ic=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>_q),assignedTo:t.lazy(()=>Eq).optional()}).strict(),gc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Db=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),cv=t.object({data:t.union([t.lazy(()=>KV),t.lazy(()=>KV).array()]),skipDuplicates:t.boolean().optional()}).strict(),cpt=t.object({update:t.union([t.lazy(()=>U_),t.lazy(()=>W_)]),create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]),where:t.lazy(()=>N).optional()}).strict(),upt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>U_),t.lazy(()=>W_)])}).strict(),U_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),W_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),ypt=t.object({update:t.union([t.lazy(()=>R_),t.lazy(()=>k_)]),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]),where:t.lazy(()=>Z).optional()}).strict(),spt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>R_),t.lazy(()=>k_)])}).strict(),R_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),k_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),_U=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>y8),t.lazy(()=>s8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),EU=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>y8),t.lazy(()=>s8)])}).strict(),LU=t.object({where:t.lazy(()=>Oa),data:t.union([t.lazy(()=>UT),t.lazy(()=>Wut)])}).strict(),Oa=t.object({AND:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),OR:t.lazy(()=>Oa).array().optional(),NOT:t.union([t.lazy(()=>Oa),t.lazy(()=>Oa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),uv=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>vq),createdBy:t.lazy(()=>Oq)}).strict(),yv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x6=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)])}).strict(),sv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),dv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),j6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>sv),t.lazy(()=>dv)])}).strict(),zv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),mv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),M6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)])}).strict(),dpt=t.object({update:t.union([t.lazy(()=>x_),t.lazy(()=>j_)]),create:t.union([t.lazy(()=>uv),t.lazy(()=>yv)]),where:t.lazy(()=>Qe).optional()}).strict(),zpt=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>x_),t.lazy(()=>j_)])}).strict(),x_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Nq).optional(),createdBy:t.lazy(()=>Bq).optional()}).strict(),j_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mpt=t.object({update:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)]),create:t.union([t.lazy(()=>sv),t.lazy(()=>dv)]),where:t.lazy(()=>v).optional()}).strict(),bpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)])}).strict(),M_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),Z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),hpt=t.object({update:t.union([t.lazy(()=>v_),t.lazy(()=>O_)]),create:t.union([t.lazy(()=>zv),t.lazy(()=>mv)]),where:t.lazy(()=>Z).optional()}).strict(),Ipt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>v_),t.lazy(()=>O_)])}).strict(),v_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),O_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),bv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt),user:t.lazy(()=>X2)}).strict(),hv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt)}).strict(),Z6=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)])}).strict(),gpt=t.object({update:t.union([t.lazy(()=>f_),t.lazy(()=>w_)]),create:t.union([t.lazy(()=>bv),t.lazy(()=>hv)]),where:t.lazy(()=>Je).optional()}).strict(),Cpt=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>f_),t.lazy(()=>w_)])}).strict(),f_=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional(),user:t.lazy(()=>o5).optional()}).strict(),w_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional()}).strict(),Iv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),gv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),v6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)])}).strict(),Apt=t.object({update:t.union([t.lazy(()=>N_),t.lazy(()=>B_)]),create:t.union([t.lazy(()=>Iv),t.lazy(()=>gv)]),where:t.lazy(()=>Z).optional()}).strict(),Spt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>N_),t.lazy(()=>B_)])}).strict(),N_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),B_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Cv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Av=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),O6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)])}).strict(),Tpt=t.object({update:t.union([t.lazy(()=>q_),t.lazy(()=>F_)]),create:t.union([t.lazy(()=>Cv),t.lazy(()=>Av)]),where:t.lazy(()=>Z).optional()}).strict(),Ppt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>q_),t.lazy(()=>F_)])}).strict(),q_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),F_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Sv=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),ingredient:t.lazy(()=>xS),lastUpdatedBy:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Tv=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),f6=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)])}).strict(),Pv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),Uv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),w6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)])}).strict(),Wv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Rv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),N6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)])}).strict(),Upt=t.object({update:t.union([t.lazy(()=>D_),t.lazy(()=>__)]),create:t.union([t.lazy(()=>Sv),t.lazy(()=>Tv)]),where:t.lazy(()=>ae).optional()}).strict(),Wpt=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>D_),t.lazy(()=>__)])}).strict(),D_=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),ingredient:t.lazy(()=>BS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),transactions:t.lazy(()=>FS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),__=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Rpt=t.object({update:t.union([t.lazy(()=>E_),t.lazy(()=>L_)]),create:t.union([t.lazy(()=>Pv),t.lazy(()=>Uv)]),where:t.lazy(()=>v).optional()}).strict(),kpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>E_),t.lazy(()=>L_)])}).strict(),E_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),L_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),xpt=t.object({update:t.union([t.lazy(()=>V_),t.lazy(()=>H_)]),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]),where:t.lazy(()=>Z).optional()}).strict(),jpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>V_),t.lazy(()=>H_)])}).strict(),V_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),H_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Cc=t.object({ingredient:t.lazy(()=>R2)}).strict(),Ac=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),_b=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),kv=t.object({data:t.union([t.lazy(()=>XV),t.lazy(()=>XV).array()]),skipDuplicates:t.boolean().optional()}).strict(),VU=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>d8),t.lazy(()=>z8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),HU=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>d8),t.lazy(()=>z8)])}).strict(),QU=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>Rut)])}).strict(),gl=t.object({AND:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),OR:t.lazy(()=>gl).array().optional(),NOT:t.union([t.lazy(()=>gl),t.lazy(()=>gl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),allergenId:t.union([t.lazy(()=>y),t.number()]).optional()}).strict(),xv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),jv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),B6=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)])}).strict(),Mv=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),Zv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),q6=t.object({where:t.lazy(()=>tp),create:t.union([t.lazy(()=>Mv),t.lazy(()=>Zv)])}).strict(),Mpt=t.object({update:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)]),create:t.union([t.lazy(()=>xv),t.lazy(()=>jv)]),where:t.lazy(()=>kt).optional()}).strict(),Zpt=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)])}).strict(),Q_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),Y_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),vpt=t.object({update:t.union([t.lazy(()=>G_),t.lazy(()=>$_)]),create:t.union([t.lazy(()=>Mv),t.lazy(()=>Zv)]),where:t.lazy(()=>ro).optional()}).strict(),Opt=t.object({where:t.lazy(()=>ro).optional(),data:t.union([t.lazy(()=>G_),t.lazy(()=>$_)])}).strict(),G_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),$_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),vv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),Ov=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),F6=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>vv),t.lazy(()=>Ov)])}).strict(),fpt=t.object({update:t.union([t.lazy(()=>J_),t.lazy(()=>K_)]),create:t.union([t.lazy(()=>vv),t.lazy(()=>Ov)]),where:t.lazy(()=>At).optional()}).strict(),wpt=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>J_),t.lazy(()=>K_)])}).strict(),J_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),K_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),Sc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),Tc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),Eb=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),fv=t.object({data:t.union([t.lazy(()=>tH),t.lazy(()=>tH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Uc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),Lb=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),wv=t.object({data:t.union([t.lazy(()=>eH),t.lazy(()=>eH).array()]),skipDuplicates:t.boolean().optional()}).strict(),YU=t.object({where:t.lazy(()=>J),update:t.union([t.lazy(()=>m8),t.lazy(()=>b8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),GU=t.object({where:t.lazy(()=>J),data:t.union([t.lazy(()=>m8),t.lazy(()=>b8)])}).strict(),$U=t.object({where:t.lazy(()=>hp),data:t.union([t.lazy(()=>qN),t.lazy(()=>kut)])}).strict(),hp=t.object({AND:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),OR:t.lazy(()=>hp).array().optional(),NOT:t.union([t.lazy(()=>hp),t.lazy(()=>hp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>_t),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable()}).strict(),JU=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>h8),t.lazy(()=>I8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),KU=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>h8),t.lazy(()=>I8)])}).strict(),XU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Dj),t.lazy(()=>xut)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>_t),t.boolean()]).optional(),role:t.union([t.lazy(()=>zB),t.lazy(()=>x)]).optional(),organizationId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),Nv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),Bv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),D6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Nv),t.lazy(()=>Bv)])}).strict(),Wc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>xS),lastUpdatedBy:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Rc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),Vb=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),qv=t.object({data:t.union([t.lazy(()=>oH),t.lazy(()=>oH).array()]),skipDuplicates:t.boolean().optional()}).strict(),kc=t.object({type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>zF),createdBy:t.lazy(()=>mF)}).strict(),xc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Hb=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Fv=t.object({data:t.union([t.lazy(()=>nH),t.lazy(()=>nH).array()]),skipDuplicates:t.boolean().optional()}).strict(),jc=t.object({status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>CF),items:t.lazy(()=>AF).optional()}).strict(),Mc=t.object({id:t.number().int().optional(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),Qb=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),Dv=t.object({data:t.union([t.lazy(()=>aH),t.lazy(()=>aH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Npt=t.object({update:t.union([t.lazy(()=>X_),t.lazy(()=>tE)]),create:t.union([t.lazy(()=>Nv),t.lazy(()=>Bv)]),where:t.lazy(()=>N).optional()}).strict(),Bpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>X_),t.lazy(()=>tE)])}).strict(),X_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),tE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),tW=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>g8),t.lazy(()=>C8)]),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),eW=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>g8),t.lazy(()=>C8)])}).strict(),oW=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>kT),t.lazy(()=>jut)])}).strict(),fa=t.object({AND:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),OR:t.lazy(()=>fa).array().optional(),NOT:t.union([t.lazy(()=>fa),t.lazy(()=>fa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>W),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>W),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>W),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>W),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>W),t.number()]).optional(),averageCost:t.union([t.lazy(()=>W),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>tt),t.number()]).optional().nullable()}).strict(),nW=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>A8),t.lazy(()=>S8)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),aW=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>A8),t.lazy(()=>S8)])}).strict(),iW=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>xT),t.lazy(()=>Mut)])}).strict(),wa=t.object({AND:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),OR:t.lazy(()=>wa).array().optional(),NOT:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),type:t.union([t.lazy(()=>gB),t.lazy(()=>Mt)]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>W),t.number()]).optional(),newQty:t.union([t.lazy(()=>W),t.number()]).optional(),cost:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),lW=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>T8),t.lazy(()=>P8)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),rW=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>T8),t.lazy(()=>P8)])}).strict(),pW=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>Lj),t.lazy(()=>Zut)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>CB),t.lazy(()=>vt)]).optional(),startedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),_v=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>Z2).optional()}).strict(),Ev=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>O2).optional()}).strict(),_6=t.object({where:t.lazy(()=>jl),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)])}).strict(),Zc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),vc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),Yb=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>iH),t.lazy(()=>iH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>q2).optional()}).strict(),fc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>D2).optional()}).strict(),Gb=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),Vv=t.object({data:t.union([t.lazy(()=>lH),t.lazy(()=>lH).array()]),skipDuplicates:t.boolean().optional()}).strict(),HS=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),QS=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),Hv=t.object({where:t.lazy(()=>Yn),create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)])}).strict(),wc=t.object({status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>kF),items:t.lazy(()=>xF).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>jF).optional()}).strict(),$b=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),Qv=t.object({data:t.union([t.lazy(()=>rH),t.lazy(()=>rH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),qc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Jb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),Yv=t.object({data:t.union([t.lazy(()=>pH),t.lazy(()=>pH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fc=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>tD).optional(),MenuCategory:t.lazy(()=>eD).optional()}).strict(),Dc=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>oD).optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),Kb=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),Gv=t.object({data:t.union([t.lazy(()=>cH),t.lazy(()=>cH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_c=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>a2)}).strict(),Ec=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xb=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),$v=t.object({data:t.union([t.lazy(()=>uH),t.lazy(()=>uH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Sq),recordedBy:t.lazy(()=>Tq)}).strict(),Vc=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),th=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),Jv=t.object({data:t.union([t.lazy(()=>yH),t.lazy(()=>yH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hc=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>kq),recordedBy:t.lazy(()=>xq)}).strict(),Qc=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>sH),t.lazy(()=>sH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>Oq),items:t.lazy(()=>fq).optional()}).strict(),Gc=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>wq).optional()}).strict(),oh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),Xv=t.object({data:t.union([t.lazy(()=>dH),t.lazy(()=>dH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>PB).optional(),maintenanceLogs:t.lazy(()=>UB).optional()}).strict(),Jc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>WB).optional(),maintenanceLogs:t.lazy(()=>RB).optional()}).strict(),nh=t.object({where:t.lazy(()=>Vt),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),tO=t.object({data:t.union([t.lazy(()=>zH),t.lazy(()=>zH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>FB).optional(),completions:t.lazy(()=>DB).optional()}).strict(),Xc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>_B).optional(),completions:t.lazy(()=>EB).optional()}).strict(),ah=t.object({where:t.lazy(()=>Ht),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),eO=t.object({data:t.union([t.lazy(()=>mH),t.lazy(()=>mH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>aq).optional(),respondedBy:t.lazy(()=>iq).optional()}).strict(),eu=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ih=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),oO=t.object({data:t.union([t.lazy(()=>bH),t.lazy(()=>bH).array()]),skipDuplicates:t.boolean().optional()}).strict(),qpt=t.object({update:t.union([t.lazy(()=>eE),t.lazy(()=>oE)]),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]),where:t.lazy(()=>ke).optional()}).strict(),Fpt=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>eE),t.lazy(()=>oE)])}).strict(),eE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>w2).optional()}).strict(),oE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>B2).optional()}).strict(),cW=t.object({where:t.lazy(()=>j),update:t.union([t.lazy(()=>U8),t.lazy(()=>W8)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),uW=t.object({where:t.lazy(()=>j),data:t.union([t.lazy(()=>U8),t.lazy(()=>W8)])}).strict(),yW=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>Dj),t.lazy(()=>vut)])}).strict(),sW=t.object({where:t.lazy(()=>te),update:t.union([t.lazy(()=>R8),t.lazy(()=>k8)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),dW=t.object({where:t.lazy(()=>te),data:t.union([t.lazy(()=>R8),t.lazy(()=>k8)])}).strict(),zW=t.object({where:t.lazy(()=>Ip),data:t.union([t.lazy(()=>DN),t.lazy(()=>Out)])}).strict(),Ip=t.object({AND:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),OR:t.lazy(()=>Ip).array().optional(),NOT:t.union([t.lazy(()=>Ip),t.lazy(()=>Ip).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable()}).strict(),E6=t.object({update:t.union([t.lazy(()=>nO),t.lazy(()=>aO)]),create:t.union([t.lazy(()=>HS),t.lazy(()=>QS)]),where:t.lazy(()=>Bt).optional()}).strict(),L6=t.object({where:t.lazy(()=>Bt).optional(),data:t.union([t.lazy(()=>nO),t.lazy(()=>aO)])}).strict(),nO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),aO=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),mW=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>x8),t.lazy(()=>j8)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),bW=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>x8),t.lazy(()=>j8)])}).strict(),hW=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Hj),t.lazy(()=>fut)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>AB),t.lazy(()=>Ot)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),IW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>M8),t.lazy(()=>Z8)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),gW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>M8),t.lazy(()=>Z8)])}).strict(),CW=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>wut)])}).strict(),AW=t.object({where:t.lazy(()=>Yt),update:t.union([t.lazy(()=>v8),t.lazy(()=>O8)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),SW=t.object({where:t.lazy(()=>Yt),data:t.union([t.lazy(()=>v8),t.lazy(()=>O8)])}).strict(),TW=t.object({where:t.lazy(()=>gp),data:t.union([t.lazy(()=>HN),t.lazy(()=>Nut)])}).strict(),gp=t.object({AND:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),OR:t.lazy(()=>gp).array().optional(),NOT:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),PW=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>f8),t.lazy(()=>w8)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),UW=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>f8),t.lazy(()=>w8)])}).strict(),WW=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>But)])}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),total:t.union([t.lazy(()=>W),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),RW=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>N8),t.lazy(()=>B8)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),kW=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>N8),t.lazy(()=>B8)])}).strict(),xW=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>TT),t.lazy(()=>qut)])}).strict(),Na=t.object({AND:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),OR:t.lazy(()=>Na).array().optional(),NOT:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),jW=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>q8),t.lazy(()=>F8)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),MW=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>q8),t.lazy(()=>F8)])}).strict(),ZW=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>PT),t.lazy(()=>Fut)])}).strict(),Ba=t.object({AND:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),OR:t.lazy(()=>Ba).array().optional(),NOT:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),vW=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>D8),t.lazy(()=>_8)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),OW=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>D8),t.lazy(()=>_8)])}).strict(),fW=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>qj),t.lazy(()=>Dut)])}).strict(),Pl=t.object({AND:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),OR:t.lazy(()=>Pl).array().optional(),NOT:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),wW=t.object({where:t.lazy(()=>Vt),update:t.union([t.lazy(()=>E8),t.lazy(()=>L8)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),NW=t.object({where:t.lazy(()=>Vt),data:t.union([t.lazy(()=>E8),t.lazy(()=>L8)])}).strict(),BW=t.object({where:t.lazy(()=>Cp),data:t.union([t.lazy(()=>jN),t.lazy(()=>_ut)])}).strict(),Cp=t.object({AND:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),OR:t.lazy(()=>Cp).array().optional(),NOT:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>JN),t.lazy(()=>wt)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),qW=t.object({where:t.lazy(()=>Ht),update:t.union([t.lazy(()=>V8),t.lazy(()=>H8)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),FW=t.object({where:t.lazy(()=>Ht),data:t.union([t.lazy(()=>V8),t.lazy(()=>H8)])}).strict(),DW=t.object({where:t.lazy(()=>Ap),data:t.union([t.lazy(()=>ZN),t.lazy(()=>Eut)])}).strict(),Ap=t.object({AND:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),OR:t.lazy(()=>Ap).array().optional(),NOT:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),frequency:t.union([t.lazy(()=>tB),t.lazy(()=>Nt)]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),_W=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>Q8),t.lazy(()=>Y8)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),EW=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>Q8),t.lazy(()=>Y8)])}).strict(),LW=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ST),t.lazy(()=>Lut)])}).strict(),qa=t.object({AND:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),OR:t.lazy(()=>qa).array().optional(),NOT:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>y),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>nB),t.lazy(()=>xt)]).optional(),tags:t.lazy(()=>dl).optional(),status:t.union([t.lazy(()=>aB),t.lazy(()=>jt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),iO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>M2).optional()}).strict(),lO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>v2).optional()}).strict(),V6=t.object({where:t.lazy(()=>jl),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)])}).strict(),rO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),pO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),H6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)])}).strict(),ou=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt),ShiftTask:t.lazy(()=>t5).optional()}).strict(),nu=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt),ShiftTask:t.lazy(()=>e5).optional()}).strict(),lh=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),cO=t.object({data:t.union([t.lazy(()=>hH),t.lazy(()=>hH).array()]),skipDuplicates:t.boolean().optional()}).strict(),au=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>QF),recipe:t.lazy(()=>YF)}).strict(),iu=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),rh=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),uO=t.object({data:t.union([t.lazy(()=>IH),t.lazy(()=>IH).array()]),skipDuplicates:t.boolean().optional()}).strict(),lu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),ingredient:t.lazy(()=>xS),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),ru=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),ph=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),yO=t.object({data:t.union([t.lazy(()=>gH),t.lazy(()=>gH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),cu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),ch=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),sO=t.object({data:t.union([t.lazy(()=>CH),t.lazy(()=>CH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yu=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uh=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),dO=t.object({data:t.union([t.lazy(()=>AH),t.lazy(()=>AH).array()]),skipDuplicates:t.boolean().optional()}).strict(),su=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Aq),menuItem:t.lazy(()=>Sq)}).strict(),du=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),zO=t.object({data:t.union([t.lazy(()=>SH),t.lazy(()=>SH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Rq),ingrediente:t.lazy(()=>kq)}).strict(),mu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),mO=t.object({data:t.union([t.lazy(()=>TH),t.lazy(()=>TH).array()]),skipDuplicates:t.boolean().optional()}).strict(),bu=t.object({date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>vq),items:t.lazy(()=>fq).optional()}).strict(),hu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>wq).optional()}).strict(),dh=t.object({where:t.lazy(()=>lt),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>PH),t.lazy(()=>PH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Dq),recipe:t.lazy(()=>_q)}).strict(),gu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>UH),t.lazy(()=>UH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Au=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mh=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),IO=t.object({data:t.union([t.lazy(()=>WH),t.lazy(()=>WH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Tu=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bh=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),gO=t.object({data:t.union([t.lazy(()=>RH),t.lazy(()=>RH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Qq),recipe:t.lazy(()=>Yq).optional()}).strict(),Uu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),CO=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wu=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>GB),items:t.lazy(()=>JB).optional()}).strict(),Ru=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>KB).optional()}).strict(),Ih=t.object({where:t.lazy(()=>at),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),AO=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nq),menuItem:t.lazy(()=>aq).optional()}).strict(),xu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),SO=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>MT),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional(),approvedBy:t.lazy(()=>fT).optional()}).strict(),Mu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional()}).strict(),Ch=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),TO=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>MT),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional(),createdBy:t.lazy(()=>OT)}).strict(),vu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional()}).strict(),Ah=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),PO=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>dF),item:t.lazy(()=>zF)}).strict(),fu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),Sh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wu=t.object({status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>gF),items:t.lazy(()=>AF).optional()}).strict(),Nu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>SF).optional()}).strict(),Th=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),WO=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Dpt=t.object({update:t.union([t.lazy(()=>nE),t.lazy(()=>aE)]),create:t.union([t.lazy(()=>iO),t.lazy(()=>lO)]),where:t.lazy(()=>ke).optional()}).strict(),_pt=t.object({where:t.lazy(()=>ke).optional(),data:t.union([t.lazy(()=>nE),t.lazy(()=>aE)])}).strict(),nE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>f2).optional()}).strict(),aE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>N2).optional()}).strict(),Ept=t.object({update:t.union([t.lazy(()=>iE),t.lazy(()=>lE)]),create:t.union([t.lazy(()=>rO),t.lazy(()=>pO)]),where:t.lazy(()=>N).optional()}).strict(),Lpt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>iE),t.lazy(()=>lE)])}).strict(),iE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),lE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),VW=t.object({where:t.lazy(()=>ee),update:t.union([t.lazy(()=>G8),t.lazy(()=>$8)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),HW=t.object({where:t.lazy(()=>ee),data:t.union([t.lazy(()=>G8),t.lazy(()=>$8)])}).strict(),QW=t.object({where:t.lazy(()=>Sp),data:t.union([t.lazy(()=>EN),t.lazy(()=>Vut)])}).strict(),Sp=t.object({AND:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),OR:t.lazy(()=>Sp).array().optional(),NOT:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>SB),t.lazy(()=>Lt)]).optional()}).strict(),YW=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>J8),t.lazy(()=>K8)]),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),GW=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>J8),t.lazy(()=>K8)])}).strict(),$W=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>Hut)])}).strict(),Fa=t.object({AND:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),OR:t.lazy(()=>Fa).array().optional(),NOT:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),assignedToId:t.union([t.lazy(()=>y),t.number()]).optional()}).strict(),JW=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>X8),t.lazy(()=>t7)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),KW=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>X8),t.lazy(()=>t7)])}).strict(),XW=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>kT),t.lazy(()=>Qut)])}).strict(),tR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>e7),t.lazy(()=>o7)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),eR=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>e7),t.lazy(()=>o7)])}).strict(),oR=t.object({where:t.lazy(()=>Tp),data:t.union([t.lazy(()=>FN),t.lazy(()=>Yut)])}).strict(),Tp=t.object({AND:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),OR:t.lazy(()=>Tp).array().optional(),NOT:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),nR=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>n7),t.lazy(()=>a7)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>yu)])}).strict(),aR=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>n7),t.lazy(()=>a7)])}).strict(),iR=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>VN),t.lazy(()=>Gut)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),lR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>i7),t.lazy(()=>l7)]),create:t.union([t.lazy(()=>su),t.lazy(()=>du)])}).strict(),rR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>i7),t.lazy(()=>l7)])}).strict(),pR=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>TT),t.lazy(()=>$ut)])}).strict(),cR=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>r7),t.lazy(()=>p7)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),uR=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>r7),t.lazy(()=>p7)])}).strict(),yR=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>PT),t.lazy(()=>Jut)])}).strict(),sR=t.object({where:t.lazy(()=>lt),update:t.union([t.lazy(()=>c7),t.lazy(()=>u7)]),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),dR=t.object({where:t.lazy(()=>lt),data:t.union([t.lazy(()=>c7),t.lazy(()=>u7)])}).strict(),zR=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>qj),t.lazy(()=>Kut)])}).strict(),mR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>y7),t.lazy(()=>s7)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),bR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>y7),t.lazy(()=>s7)])}).strict(),hR=t.object({where:t.lazy(()=>Oa),data:t.union([t.lazy(()=>UT),t.lazy(()=>Xut)])}).strict(),IR=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>d7),t.lazy(()=>z7)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),gR=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>d7),t.lazy(()=>z7)])}).strict(),CR=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>wN),t.lazy(()=>tyt)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>rB),t.lazy(()=>pe)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),AR=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>m7),t.lazy(()=>b7)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),SR=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>m7),t.lazy(()=>b7)])}).strict(),TR=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>NN),t.lazy(()=>eyt)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),userId:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>pB),t.lazy(()=>ce)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),PR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>h7),t.lazy(()=>I7)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),UR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>h7),t.lazy(()=>I7)])}).strict(),WR=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>WT),t.lazy(()=>oyt)])}).strict(),Da=t.object({AND:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),OR:t.lazy(()=>Da).array().optional(),NOT:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>y),t.number()]).optional(),dateTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),RR=t.object({where:t.lazy(()=>at),update:t.union([t.lazy(()=>g7),t.lazy(()=>C7)]),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),kR=t.object({where:t.lazy(()=>at),data:t.union([t.lazy(()=>g7),t.lazy(()=>C7)])}).strict(),xR=t.object({where:t.lazy(()=>bl),data:t.union([t.lazy(()=>fj),t.lazy(()=>nyt)])}).strict(),jR=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>A7),t.lazy(()=>S7)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),MR=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>A7),t.lazy(()=>S7)])}).strict(),ZR=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ST),t.lazy(()=>ayt)])}).strict(),vR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>T7),t.lazy(()=>P7)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),OR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>T7),t.lazy(()=>P7)])}).strict(),fR=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>CT),t.lazy(()=>iyt)])}).strict(),_a=t.object({AND:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),OR:t.lazy(()=>_a).array().optional(),NOT:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>y),t.number()]).optional(),approvedById:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),wR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>U7),t.lazy(()=>W7)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),NR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>U7),t.lazy(()=>W7)])}).strict(),BR=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>CT),t.lazy(()=>lyt)])}).strict(),qR=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>R7),t.lazy(()=>k7)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),FR=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>R7),t.lazy(()=>k7)])}).strict(),DR=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>xT),t.lazy(()=>ryt)])}).strict(),_R=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>x7),t.lazy(()=>j7)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),ER=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>x7),t.lazy(()=>j7)])}).strict(),LR=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>Lj),t.lazy(()=>pyt)])}).strict(),RO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),kO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),Q6=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)])}).strict(),Vpt=t.object({update:t.union([t.lazy(()=>rE),t.lazy(()=>pE)]),create:t.union([t.lazy(()=>RO),t.lazy(()=>kO)]),where:t.lazy(()=>Z).optional()}).strict(),Hpt=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>rE),t.lazy(()=>pE)])}).strict(),rE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),pE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Bu=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),qu=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),Ph=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),xO=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),jO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),MO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),Y6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)])}).strict(),VR=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),HR=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>M7),t.lazy(()=>Z7)])}).strict(),QR=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>cyt)])}).strict(),Qpt=t.object({update:t.union([t.lazy(()=>cE),t.lazy(()=>uE)]),create:t.union([t.lazy(()=>jO),t.lazy(()=>MO)]),where:t.lazy(()=>N).optional()}).strict(),Ypt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>cE),t.lazy(()=>uE)])}).strict(),cE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),uE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),ZO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),vO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),G6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>ZO),t.lazy(()=>vO)])}).strict(),OO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>F2).optional()}).strict(),fO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),$6=t.object({where:t.lazy(()=>te),create:t.union([t.lazy(()=>OO),t.lazy(()=>fO)])}).strict(),Fu=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>tF),recipeVersion:t.lazy(()=>eF).optional()}).strict(),Du=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Uh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_u=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>lF).optional(),equipment:t.lazy(()=>rF).optional()}).strict(),Eu=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>pF).optional()}).strict(),Wh=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lu=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),Vu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),Rh=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),Hu=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qu=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kh=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),BO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yu=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Gu=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xh=t.object({where:t.lazy(()=>Re),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$u=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>l5).optional()}).strict(),Ju=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>p5).optional()}).strict(),jh=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),Ku=t.object({quantity:t.number().int(),status:t.lazy(()=>X),prepBoard:t.lazy(()=>QF),assignedTo:t.lazy(()=>GF)}).strict(),Xu=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),Mh=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ty=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>d5)}).strict(),ey=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Zh=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),oy=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>Dq),assignedTo:t.lazy(()=>Eq).optional()}).strict(),ny=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),ay=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>Qq),createdBy:t.lazy(()=>Gq)}).strict(),iy=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),EO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ly=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ry=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fh=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),py=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>ZT).optional(),instructions:t.lazy(()=>vT).optional(),createdBy:t.lazy(()=>OT),approvedBy:t.lazy(()=>fT).optional()}).strict(),cy=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wT).optional(),instructions:t.lazy(()=>NT).optional()}).strict(),wh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),LO=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uy=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>OB),RecipeInstruction:t.lazy(()=>fB).optional()}).strict(),yy=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Nh=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),sy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>cq).optional(),ingredients:t.lazy(()=>yq).optional()}).strict(),dy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>sq).optional(),ingredients:t.lazy(()=>zq).optional()}).strict(),Bh=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),zy=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),my=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qh=t.object({where:t.lazy(()=>me),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),HO=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),by=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hy=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fh=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),QO=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iy=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gy=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Dh=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),YO=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),YS=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),GS=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number()}).strict(),GO=t.object({where:t.lazy(()=>wl),create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)])}).strict(),Cy=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ay=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_h=t.object({where:t.lazy(()=>de),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),$O=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$S=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JS=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JO=t.object({where:t.lazy(()=>Nl),create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)])}).strict(),Sy=t.object({url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ty=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Eh=t.object({where:t.lazy(()=>ze),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),KO=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),KS=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),XS=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),XO=t.object({where:t.lazy(()=>Bl),create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)])}).strict(),Gpt=t.object({update:t.union([t.lazy(()=>yE),t.lazy(()=>sE)]),create:t.union([t.lazy(()=>ZO),t.lazy(()=>vO)]),where:t.lazy(()=>N).optional()}).strict(),$pt=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>yE),t.lazy(()=>sE)])}).strict(),yE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),sE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),Jpt=t.object({update:t.union([t.lazy(()=>dE),t.lazy(()=>zE)]),create:t.union([t.lazy(()=>OO),t.lazy(()=>fO)]),where:t.lazy(()=>Ye).optional()}).strict(),Kpt=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>dE),t.lazy(()=>zE)])}).strict(),dE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurant:t.lazy(()=>E2).optional()}).strict(),zE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),YR=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>v7),t.lazy(()=>O7)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),GR=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>v7),t.lazy(()=>O7)])}).strict(),$R=t.object({where:t.lazy(()=>Za),data:t.union([t.lazy(()=>RT),t.lazy(()=>uyt)])}).strict(),JR=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>f7),t.lazy(()=>w7)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),KR=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>f7),t.lazy(()=>w7)])}).strict(),XR=t.object({where:t.lazy(()=>ml),data:t.union([t.lazy(()=>Ej),t.lazy(()=>yyt)])}).strict(),tk=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>N7),t.lazy(()=>B7)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),ek=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>N7),t.lazy(()=>B7)])}).strict(),ok=t.object({where:t.lazy(()=>oo),data:t.union([t.lazy(()=>dS),t.lazy(()=>syt)])}).strict(),nk=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>q7),t.lazy(()=>F7)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),ak=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>q7),t.lazy(()=>F7)])}).strict(),ik=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>QN),t.lazy(()=>dyt)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),cost:t.union([t.lazy(()=>W),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),lk=t.object({where:t.lazy(()=>Re),update:t.union([t.lazy(()=>D7),t.lazy(()=>_7)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),rk=t.object({where:t.lazy(()=>Re),data:t.union([t.lazy(()=>D7),t.lazy(()=>_7)])}).strict(),pk=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>YN),t.lazy(()=>zyt)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>y),t.number()]).optional(),date:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),ck=t.object({where:t.lazy(()=>oe),update:t.union([t.lazy(()=>E7),t.lazy(()=>L7)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),uk=t.object({where:t.lazy(()=>oe),data:t.union([t.lazy(()=>E7),t.lazy(()=>L7)])}).strict(),yk=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>LN),t.lazy(()=>myt)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>RS),t.lazy(()=>X)]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),sk=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>V7),t.lazy(()=>H7)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),dk=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>V7),t.lazy(()=>H7)])}).strict(),zk=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>byt)])}).strict(),mk=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),bk=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>Q7),t.lazy(()=>Y7)])}).strict(),hk=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>Yj),t.lazy(()=>hyt)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),joinAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),Ik=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>G7),t.lazy(()=>$7)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),gk=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>G7),t.lazy(()=>$7)])}).strict(),Ck=t.object({where:t.lazy(()=>Oa),data:t.union([t.lazy(()=>UT),t.lazy(()=>Iyt)])}).strict(),Ak=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>J7),t.lazy(()=>K7)]),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),Sk=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>J7),t.lazy(()=>K7)])}).strict(),Tk=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>WT),t.lazy(()=>gyt)])}).strict(),Pk=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>X7),t.lazy(()=>tJ)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Uk=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>X7),t.lazy(()=>tJ)])}).strict(),Wk=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>ON),t.lazy(()=>Cyt)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),Rk=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),kk=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>eJ),t.lazy(()=>oJ)])}).strict(),xk=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>CT),t.lazy(()=>Ayt)])}).strict(),jk=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>nJ),t.lazy(()=>aJ)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>yy)])}).strict(),Mk=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>nJ),t.lazy(()=>aJ)])}).strict(),Zk=t.object({where:t.lazy(()=>va),data:t.union([t.lazy(()=>AT),t.lazy(()=>Syt)])}).strict(),vk=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)]),create:t.union([t.lazy(()=>sy),t.lazy(()=>dy)])}).strict(),Ok=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>iJ),t.lazy(()=>lJ)])}).strict(),fk=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>Tyt)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),wk=t.object({where:t.lazy(()=>me),update:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Nk=t.object({where:t.lazy(()=>me),data:t.union([t.lazy(()=>rJ),t.lazy(()=>pJ)])}).strict(),Bk=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>WN),t.lazy(()=>Pyt)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),minTemp:t.union([t.lazy(()=>W),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>W),t.number()]).optional(),isCritical:t.union([t.lazy(()=>_t),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),qk=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)]),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),Fk=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>cJ),t.lazy(()=>uJ)])}).strict(),Dk=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>RN),t.lazy(()=>Uyt)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>W),t.number()]).optional(),actualYield:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),_k=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>yJ),t.lazy(()=>sJ)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Ek=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>yJ),t.lazy(()=>sJ)])}).strict(),Lk=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>kN),t.lazy(()=>Wyt)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),prepTime:t.union([t.lazy(()=>y),t.number()]).optional(),cookTime:t.union([t.lazy(()=>y),t.number()]).optional(),laborRate:t.union([t.lazy(()=>W),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>W),t.number()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),J6=t.object({update:t.union([t.lazy(()=>tf),t.lazy(()=>ef)]),create:t.union([t.lazy(()=>YS),t.lazy(()=>GS)]),where:t.lazy(()=>we).optional()}).strict(),K6=t.object({where:t.lazy(()=>we).optional(),data:t.union([t.lazy(()=>tf),t.lazy(()=>ef)])}).strict(),tf=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),ef=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Vk=t.object({where:t.lazy(()=>de),update:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Hk=t.object({where:t.lazy(()=>de),data:t.union([t.lazy(()=>dJ),t.lazy(()=>zJ)])}).strict(),Qk=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>PN),t.lazy(()=>Ryt)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>y),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>tt),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),X6=t.object({update:t.union([t.lazy(()=>of),t.lazy(()=>nf)]),create:t.union([t.lazy(()=>$S),t.lazy(()=>JS)]),where:t.lazy(()=>Ne).optional()}).strict(),t3=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>of),t.lazy(()=>nf)])}).strict(),of=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yk=t.object({where:t.lazy(()=>ze),update:t.union([t.lazy(()=>mJ),t.lazy(()=>bJ)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Gk=t.object({where:t.lazy(()=>ze),data:t.union([t.lazy(()=>mJ),t.lazy(()=>bJ)])}).strict(),$k=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>UN),t.lazy(()=>kyt)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),recipeId:t.union([t.lazy(()=>y),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>GN),t.lazy(()=>ue)]).optional(),stepNumber:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),e3=t.object({update:t.union([t.lazy(()=>af),t.lazy(()=>lf)]),create:t.union([t.lazy(()=>KS),t.lazy(()=>XS)]),where:t.lazy(()=>Be).optional()}).strict(),o3=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>af),t.lazy(()=>lf)])}).strict(),af=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),lf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Py=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>Xq),recipeVersion:t.lazy(()=>eF).optional()}).strict(),Uy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Lh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wy=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),lastUpdatedBy:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Ry=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),Vh=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ky=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>G2)}).strict(),xy=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Hh=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),jy=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>fF).optional(),supplierPriceHistory:t.lazy(()=>NF).optional()}).strict(),My=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>BF).optional(),supplierPriceHistory:t.lazy(()=>FF).optional()}).strict(),Qh=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),Zy=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Rq),recordedBy:t.lazy(()=>xq)}).strict(),vy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Yh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),uf=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oy=t.object({allergen:t.lazy(()=>k2)}).strict(),fy=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),Gh=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),yf=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),wy=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>T2)}).strict(),Ny=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$h=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),sf=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),df=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>cq).optional(),recipes:t.lazy(()=>uq).optional()}).strict(),zf=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>sq).optional(),recipes:t.lazy(()=>dq).optional()}).strict(),n3=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>df),t.lazy(()=>zf)])}).strict(),Jk=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>hJ),t.lazy(()=>IJ)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),Kk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>hJ),t.lazy(()=>IJ)])}).strict(),Xk=t.object({where:t.lazy(()=>Za),data:t.union([t.lazy(()=>RT),t.lazy(()=>xyt)])}).strict(),tx=t.object({where:t.lazy(()=>f),update:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)]),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),ex=t.object({where:t.lazy(()=>f),data:t.union([t.lazy(()=>gJ),t.lazy(()=>CJ)])}).strict(),ox=t.object({where:t.lazy(()=>fa),data:t.union([t.lazy(()=>kT),t.lazy(()=>jyt)])}).strict(),nx=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),ax=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>AJ),t.lazy(()=>SJ)])}).strict(),ix=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>Qj),t.lazy(()=>Myt)])}).strict(),Rl=t.object({AND:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),OR:t.lazy(()=>Rl).array().optional(),NOT:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),orderId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),quantity:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional()}).strict(),lx=t.object({where:t.lazy(()=>Qt),update:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),rx=t.object({where:t.lazy(()=>Qt),data:t.union([t.lazy(()=>TJ),t.lazy(()=>PJ)])}).strict(),px=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>_N),t.lazy(()=>Zyt)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),cx=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>UJ),t.lazy(()=>WJ)]),create:t.union([t.lazy(()=>Zy),t.lazy(()=>vy)])}).strict(),ux=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>UJ),t.lazy(()=>WJ)])}).strict(),yx=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>PT),t.lazy(()=>vyt)])}).strict(),sx=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>RJ),t.lazy(()=>kJ)]),create:t.union([t.lazy(()=>Oy),t.lazy(()=>fy)])}).strict(),dx=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>RJ),t.lazy(()=>kJ)])}).strict(),zx=t.object({where:t.lazy(()=>gl),data:t.union([t.lazy(()=>Fj),t.lazy(()=>Oyt)])}).strict(),mx=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)]),create:t.union([t.lazy(()=>wy),t.lazy(()=>Ny)])}).strict(),bx=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>xJ),t.lazy(()=>jJ)])}).strict(),hx=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>fyt)])}).strict(),kl=t.object({AND:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),OR:t.lazy(()=>kl).array().optional(),NOT:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),vendorId:t.union([t.lazy(()=>y),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>y),t.number()]).optional(),price:t.union([t.lazy(()=>W),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Gt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),Xpt=t.object({update:t.union([t.lazy(()=>mE),t.lazy(()=>bE)]),create:t.union([t.lazy(()=>df),t.lazy(()=>zf)]),where:t.lazy(()=>Oe).optional()}).strict(),tct=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>mE),t.lazy(()=>bE)])}).strict(),mE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>mq).optional(),recipes:t.lazy(()=>bq).optional()}).strict(),bE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Iq).optional(),recipes:t.lazy(()=>gq).optional()}).strict(),mf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),bf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),a3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)])}).strict(),hf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),If=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),i3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>hf),t.lazy(()=>If)])}).strict(),gf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>MT),instructions:t.lazy(()=>vT).optional(),createdBy:t.lazy(()=>OT),approvedBy:t.lazy(()=>fT).optional()}).strict(),Cf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>NT).optional()}).strict(),l3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)])}).strict(),ect=t.object({update:t.union([t.lazy(()=>hE),t.lazy(()=>IE)]),create:t.union([t.lazy(()=>mf),t.lazy(()=>bf)]),where:t.lazy(()=>v).optional()}).strict(),oct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>hE),t.lazy(()=>IE)])}).strict(),hE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),IE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),nct=t.object({update:t.union([t.lazy(()=>gE),t.lazy(()=>CE)]),create:t.union([t.lazy(()=>hf),t.lazy(()=>If)]),where:t.lazy(()=>kt).optional()}).strict(),act=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>gE),t.lazy(()=>CE)])}).strict(),gE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),CE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),ict=t.object({update:t.union([t.lazy(()=>AE),t.lazy(()=>SE)]),create:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]),where:t.lazy(()=>ne).optional()}).strict(),lct=t.object({where:t.lazy(()=>ne).optional(),data:t.union([t.lazy(()=>AE),t.lazy(()=>SE)])}).strict(),AE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>BT).optional(),instructions:t.lazy(()=>FT).optional(),createdBy:t.lazy(()=>DT).optional(),approvedBy:t.lazy(()=>_T).optional()}).strict(),SE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>LT).optional()}).strict(),Af=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),Sf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),r3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)])}).strict(),Tf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>MT),ingredients:t.lazy(()=>ZT).optional(),createdBy:t.lazy(()=>OT),approvedBy:t.lazy(()=>fT).optional()}).strict(),Pf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wT).optional()}).strict(),p3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)])}).strict(),By=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>vB),equipment:t.lazy(()=>OB)}).strict(),qy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),Jh=t.object({where:t.lazy(()=>B),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),Uf=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),rct=t.object({update:t.union([t.lazy(()=>TE),t.lazy(()=>PE)]),create:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)]),where:t.lazy(()=>v).optional()}).strict(),pct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>TE),t.lazy(()=>PE)])}).strict(),TE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),PE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),cct=t.object({update:t.union([t.lazy(()=>UE),t.lazy(()=>WE)]),create:t.union([t.lazy(()=>Tf),t.lazy(()=>Pf)]),where:t.lazy(()=>ne).optional()}).strict(),uct=t.object({where:t.lazy(()=>ne).optional(),data:t.union([t.lazy(()=>UE),t.lazy(()=>WE)])}).strict(),UE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>BT).optional(),ingredients:t.lazy(()=>qT).optional(),createdBy:t.lazy(()=>DT).optional(),approvedBy:t.lazy(()=>_T).optional()}).strict(),WE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional()}).strict(),Ix=t.object({where:t.lazy(()=>B),update:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)]),create:t.union([t.lazy(()=>By),t.lazy(()=>qy)])}).strict(),gx=t.object({where:t.lazy(()=>B),data:t.union([t.lazy(()=>MJ),t.lazy(()=>ZJ)])}).strict(),Cx=t.object({where:t.lazy(()=>va),data:t.union([t.lazy(()=>AT),t.lazy(()=>wyt)])}).strict(),Wf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gM),transactions:t.lazy(()=>AM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),Rf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>PM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),c3=t.object({where:t.lazy(()=>Yn),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)])}).strict(),kf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),orderItems:t.lazy(()=>WI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),xf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>OI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),u3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>kf),t.lazy(()=>xf)])}).strict(),jf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Mf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),y3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>jf),t.lazy(()=>Mf)])}).strict(),Fy=t.object({type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>dF),createdBy:t.lazy(()=>mF)}).strict(),Dy=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Kh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),Zf=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_y=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Yq).optional(),createdBy:t.lazy(()=>Gq)}).strict(),Ey=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),vf=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ly=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>V2)}).strict(),Vy=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),tI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),Of=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),yct=t.object({update:t.union([t.lazy(()=>RE),t.lazy(()=>kE)]),create:t.union([t.lazy(()=>Wf),t.lazy(()=>Rf)]),where:t.lazy(()=>Bt).optional()}).strict(),sct=t.object({where:t.lazy(()=>Bt).optional(),data:t.union([t.lazy(()=>RE),t.lazy(()=>kE)])}).strict(),RE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>WM).optional(),transactions:t.lazy(()=>kM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),kE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>MM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),dct=t.object({update:t.union([t.lazy(()=>xE),t.lazy(()=>jE)]),create:t.union([t.lazy(()=>kf),t.lazy(()=>xf)]),where:t.lazy(()=>kt).optional()}).strict(),zct=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>xE),t.lazy(()=>jE)])}).strict(),xE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),jE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),mct=t.object({update:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)]),create:t.union([t.lazy(()=>jf),t.lazy(()=>Mf)]),where:t.lazy(()=>Z).optional()}).strict(),bct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)])}).strict(),ME=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),ZE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Ax=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)]),create:t.union([t.lazy(()=>Fy),t.lazy(()=>Dy)])}).strict(),Sx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>vJ),t.lazy(()=>OJ)])}).strict(),Tx=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>xT),t.lazy(()=>Nyt)])}).strict(),Px=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)]),create:t.union([t.lazy(()=>_y),t.lazy(()=>Ey)])}).strict(),Ux=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>fJ),t.lazy(()=>wJ)])}).strict(),Wx=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>WT),t.lazy(()=>Byt)])}).strict(),Rx=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)]),create:t.union([t.lazy(()=>Ly),t.lazy(()=>Vy)])}).strict(),kx=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>NJ),t.lazy(()=>BJ)])}).strict(),xx=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>qyt)])}).strict(),xl=t.object({AND:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),OR:t.lazy(()=>xl).array().optional(),NOT:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>y),t.number()]).optional(),itemId:t.union([t.lazy(()=>y),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>W),t.number()]).optional(),actualQty:t.union([t.lazy(()=>W),t.number()]).optional(),difference:t.union([t.lazy(()=>W),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),ff=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gM),items:t.lazy(()=>CM).optional(),stockCounts:t.lazy(()=>SM).optional()}).strict(),wf=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>TM).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),s3=t.object({where:t.lazy(()=>Yn),create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)])}).strict(),Nf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),ingredient:t.lazy(()=>xS),lastUpdatedBy:t.lazy(()=>jS).optional(),withdrawals:t.lazy(()=>ZS).optional(),stockCounts:t.lazy(()=>vS).optional()}).strict(),Bf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>fS).optional(),stockCounts:t.lazy(()=>wS).optional()}).strict(),d3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)])}).strict(),qf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Ff=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),z3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)])}).strict(),hct=t.object({update:t.union([t.lazy(()=>vE),t.lazy(()=>OE)]),create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]),where:t.lazy(()=>Bt).optional()}).strict(),Ict=t.object({where:t.lazy(()=>Bt).optional(),data:t.union([t.lazy(()=>vE),t.lazy(()=>OE)])}).strict(),vE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>WM).optional(),items:t.lazy(()=>RM).optional(),stockCounts:t.lazy(()=>xM).optional()}).strict(),OE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jM).optional(),stockCounts:t.lazy(()=>ZM).optional()}).strict(),gct=t.object({update:t.union([t.lazy(()=>fE),t.lazy(()=>wE)]),create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]),where:t.lazy(()=>ae).optional()}).strict(),Cct=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>fE),t.lazy(()=>wE)])}).strict(),fE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),ingredient:t.lazy(()=>BS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),wE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Act=t.object({update:t.union([t.lazy(()=>NE),t.lazy(()=>BE)]),create:t.union([t.lazy(()=>qf),t.lazy(()=>Ff)]),where:t.lazy(()=>Z).optional()}).strict(),Sct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>NE),t.lazy(()=>BE)])}).strict(),NE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),BE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Df=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gM),items:t.lazy(()=>CM).optional(),transactions:t.lazy(()=>AM).optional()}).strict(),_f=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>ft).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>TM).optional(),transactions:t.lazy(()=>PM).optional()}).strict(),m3=t.object({where:t.lazy(()=>Yn),create:t.union([t.lazy(()=>Df),t.lazy(()=>_f)])}).strict(),Ef=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional()}).strict(),Lf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional()}).strict(),b3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)])}).strict(),Hy=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>H2)}).strict(),Qy=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),eI=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Vf=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Tct=t.object({update:t.union([t.lazy(()=>qE),t.lazy(()=>FE)]),create:t.union([t.lazy(()=>Df),t.lazy(()=>_f)]),where:t.lazy(()=>Bt).optional()}).strict(),Pct=t.object({where:t.lazy(()=>Bt).optional(),data:t.union([t.lazy(()=>qE),t.lazy(()=>FE)])}).strict(),qE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>WM).optional(),items:t.lazy(()=>RM).optional(),transactions:t.lazy(()=>kM).optional()}).strict(),FE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>ft),t.lazy(()=>ap)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>jM).optional(),transactions:t.lazy(()=>MM).optional()}).strict(),Uct=t.object({update:t.union([t.lazy(()=>DE),t.lazy(()=>_E)]),create:t.union([t.lazy(()=>Ef),t.lazy(()=>Lf)]),where:t.lazy(()=>Z).optional()}).strict(),Wct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>DE),t.lazy(()=>_E)])}).strict(),DE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional()}).strict(),_E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional()}).strict(),jx=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)]),create:t.union([t.lazy(()=>Hy),t.lazy(()=>Qy)])}).strict(),Mx=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>qJ),t.lazy(()=>FJ)])}).strict(),Zx=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>Vj),t.lazy(()=>Fyt)])}).strict(),Hf=t.object({status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>gF),createdBy:t.lazy(()=>CF)}).strict(),Qf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),h3=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)])}).strict(),Yf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>kS),ingredient:t.lazy(()=>xS),lastUpdatedBy:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>ZS).optional()}).strict(),Gf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>OS).optional(),withdrawals:t.lazy(()=>fS).optional()}).strict(),I3=t.object({where:t.lazy(()=>f),create:t.union([t.lazy(()=>Yf),t.lazy(()=>Gf)])}).strict(),Rct=t.object({update:t.union([t.lazy(()=>EE),t.lazy(()=>LE)]),create:t.union([t.lazy(()=>Hf),t.lazy(()=>Qf)]),where:t.lazy(()=>Ge).optional()}).strict(),kct=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>EE),t.lazy(()=>LE)])}).strict(),EE=t.object({status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>TF).optional(),createdBy:t.lazy(()=>PF).optional()}).strict(),LE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),xct=t.object({update:t.union([t.lazy(()=>VE),t.lazy(()=>HE)]),create:t.union([t.lazy(()=>Yf),t.lazy(()=>Gf)]),where:t.lazy(()=>ae).optional()}).strict(),jct=t.object({where:t.lazy(()=>ae).optional(),data:t.union([t.lazy(()=>VE),t.lazy(()=>HE)])}).strict(),VE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),ingredient:t.lazy(()=>BS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional()}).strict(),HE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional()}).strict(),$f=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional()}).strict(),Jf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional()}).strict(),g3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>$f),t.lazy(()=>Jf)])}).strict(),Mct=t.object({update:t.union([t.lazy(()=>QE),t.lazy(()=>YE)]),create:t.union([t.lazy(()=>$f),t.lazy(()=>Jf)]),where:t.lazy(()=>v).optional()}).strict(),Zct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>QE),t.lazy(()=>YE)])}).strict(),QE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional()}).strict(),YE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional()}).strict(),Kf=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),recipes:t.lazy(()=>Vl).optional(),menus:t.lazy(()=>Hl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),Xf=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),recipes:t.lazy(()=>ar).optional(),menus:t.lazy(()=>ir).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),C3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Kf),t.lazy(()=>Xf)])}).strict(),tw=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>wF).optional(),supplierPriceHistory:t.lazy(()=>NF).optional()}).strict(),ew=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>qF).optional(),supplierPriceHistory:t.lazy(()=>FF).optional()}).strict(),A3=t.object({where:t.lazy(()=>Qt),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)])}).strict(),Yy=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>$2)}).strict(),Gy=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),oI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),ow=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),vct=t.object({update:t.union([t.lazy(()=>GE),t.lazy(()=>$E)]),create:t.union([t.lazy(()=>Kf),t.lazy(()=>Xf)]),where:t.lazy(()=>N).optional()}).strict(),Oct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>GE),t.lazy(()=>$E)])}).strict(),GE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),$E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),fct=t.object({update:t.union([t.lazy(()=>JE),t.lazy(()=>KE)]),create:t.union([t.lazy(()=>tw),t.lazy(()=>ew)]),where:t.lazy(()=>Me).optional()}).strict(),wct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>JE),t.lazy(()=>KE)])}).strict(),JE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>_F).optional(),supplierPriceHistory:t.lazy(()=>EF).optional()}).strict(),KE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>VF).optional(),supplierPriceHistory:t.lazy(()=>HF).optional()}).strict(),vx=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>DJ),t.lazy(()=>_J)]),create:t.union([t.lazy(()=>Yy),t.lazy(()=>Gy)])}).strict(),Ox=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>DJ),t.lazy(()=>_J)])}).strict(),fx=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>Qj),t.lazy(()=>Dyt)])}).strict(),nw=t.object({status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RF),vendor:t.lazy(()=>kF)}).strict(),aw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),S3=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)])}).strict(),iw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),vendors:t.lazy(()=>RI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),lw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>fI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),T3=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)])}).strict(),Nct=t.object({update:t.union([t.lazy(()=>XE),t.lazy(()=>tL)]),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]),where:t.lazy(()=>$e).optional()}).strict(),Bct=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>XE),t.lazy(()=>tL)])}).strict(),XE=t.object({status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>MF).optional(),vendor:t.lazy(()=>ZF).optional()}).strict(),tL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qct=t.object({update:t.union([t.lazy(()=>eL),t.lazy(()=>oL)]),create:t.union([t.lazy(()=>iw),t.lazy(()=>lw)]),where:t.lazy(()=>kt).optional()}).strict(),Fct=t.object({where:t.lazy(()=>kt).optional(),data:t.union([t.lazy(()=>eL),t.lazy(()=>oL)])}).strict(),eL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),oL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),$y=t.object({status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>RF),items:t.lazy(()=>xF).optional()}).strict(),Jy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>jF).optional()}).strict(),nI=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),rw=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ky=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>PI).optional(),inventoryItems:t.lazy(()=>UI).optional(),orderItems:t.lazy(()=>WI).optional(),WasteRecord:t.lazy(()=>kI).optional(),IngredientAllergen:t.lazy(()=>xI).optional(),SupplierPriceHistory:t.lazy(()=>jI).optional(),DietaryRestriction:t.lazy(()=>MI).optional()}).strict(),Xy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>ZI).optional(),inventoryItems:t.lazy(()=>vI).optional(),orderItems:t.lazy(()=>OI).optional(),WasteRecord:t.lazy(()=>wI).optional(),IngredientAllergen:t.lazy(()=>NI).optional(),SupplierPriceHistory:t.lazy(()=>BI).optional()}).strict(),aI=t.object({where:t.lazy(()=>G),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),ts=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>P2)}).strict(),es=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iI=t.object({where:t.lazy(()=>bt),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),pw=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),wx=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>EJ),t.lazy(()=>LJ)]),create:t.union([t.lazy(()=>$y),t.lazy(()=>Jy)])}).strict(),Nx=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>EJ),t.lazy(()=>LJ)])}).strict(),Bx=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>Hj),t.lazy(()=>_yt)])}).strict(),qx=t.object({where:t.lazy(()=>G),update:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)]),create:t.union([t.lazy(()=>Ky),t.lazy(()=>Xy)])}).strict(),Fx=t.object({where:t.lazy(()=>G),data:t.union([t.lazy(()=>VJ),t.lazy(()=>HJ)])}).strict(),Dx=t.object({where:t.lazy(()=>Il),data:t.union([t.lazy(()=>_j),t.lazy(()=>Eyt)])}).strict(),_x=t.object({where:t.lazy(()=>bt),update:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),Ex=t.object({where:t.lazy(()=>bt),data:t.union([t.lazy(()=>QJ),t.lazy(()=>YJ)])}).strict(),Lx=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Nj),t.lazy(()=>Lyt)])}).strict(),cw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),uw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),P3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)])}).strict(),os=t.object({taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ns=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lI=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),yw=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Dct=t.object({update:t.union([t.lazy(()=>nL),t.lazy(()=>aL)]),create:t.union([t.lazy(()=>cw),t.lazy(()=>uw)]),where:t.lazy(()=>Z).optional()}).strict(),_ct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>nL),t.lazy(()=>aL)])}).strict(),nL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),aL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Vx=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)]),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),Hx=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>GJ),t.lazy(()=>$J)])}).strict(),Qx=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>fN),t.lazy(()=>Vyt)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),shiftId:t.union([t.lazy(()=>y),t.number()]).optional(),taskType:t.union([t.lazy(()=>lB),t.lazy(()=>re)]).optional(),startTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>y),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),as=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),is=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),rI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),ls=t.object({quantity:t.number().int(),status:t.lazy(()=>X),recipe:t.lazy(()=>YF),assignedTo:t.lazy(()=>GF)}).strict(),rs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),pI=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),sw=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yx=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)]),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),Gx=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>JJ),t.lazy(()=>KJ)])}).strict(),$x=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>Hyt)])}).strict(),Jx=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>XJ),t.lazy(()=>tK)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),Kx=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>XJ),t.lazy(()=>tK)])}).strict(),Xx=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>jT),t.lazy(()=>Qyt)])}).strict(),dw=t.object({name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>i5).optional()}).strict(),zw=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>X),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>r5).optional()}).strict(),U3=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)])}).strict(),mw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),bw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),W3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>mw),t.lazy(()=>bw)])}).strict(),hw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),passwordResets:t.lazy(()=>Ga).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Iw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),passwordResets:t.lazy(()=>di).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),R3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)])}).strict(),Ect=t.object({update:t.union([t.lazy(()=>iL),t.lazy(()=>lL)]),create:t.union([t.lazy(()=>dw),t.lazy(()=>zw)]),where:t.lazy(()=>Ke).optional()}).strict(),Lct=t.object({where:t.lazy(()=>Ke).optional(),data:t.union([t.lazy(()=>iL),t.lazy(()=>lL)])}).strict(),iL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>c5).optional()}).strict(),lL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>y5).optional()}).strict(),Vct=t.object({update:t.union([t.lazy(()=>rL),t.lazy(()=>pL)]),create:t.union([t.lazy(()=>mw),t.lazy(()=>bw)]),where:t.lazy(()=>v).optional()}).strict(),Hct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>rL),t.lazy(()=>pL)])}).strict(),rL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),pL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Qct=t.object({update:t.union([t.lazy(()=>cL),t.lazy(()=>uL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]),where:t.lazy(()=>Z).optional()}).strict(),Yct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>cL),t.lazy(()=>uL)])}).strict(),cL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),uL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),gw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ea).optional(),restaurant:t.lazy(()=>La).optional(),shifts:t.lazy(()=>Va).optional(),prepItems:t.lazy(()=>Ha).optional(),inventoryUpdates:t.lazy(()=>Qa).optional(),sessions:t.lazy(()=>Ya).optional(),leftoverItem:t.lazy(()=>$a).optional(),wasteRecord:t.lazy(()=>Ja).optional(),productionPlan:t.lazy(()=>Ka).optional(),productionPlanItem:t.lazy(()=>Xa).optional(),availability:t.lazy(()=>ti).optional(),schedulingConstraint:t.lazy(()=>ei).optional(),inventoryWithdrawal:t.lazy(()=>oi).optional(),checklistComplete:t.lazy(()=>ni).optional(),customerFeedback:t.lazy(()=>ai).optional(),recipeVersionsCreated:t.lazy(()=>ii).optional(),recipeVersionsApproved:t.lazy(()=>li).optional(),InventoryTransaction:t.lazy(()=>ri).optional(),StockCount:t.lazy(()=>pi).optional()}).strict(),Cw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>ci).optional(),prepItems:t.lazy(()=>ui).optional(),inventoryUpdates:t.lazy(()=>yi).optional(),sessions:t.lazy(()=>si).optional(),leftoverItem:t.lazy(()=>zi).optional(),wasteRecord:t.lazy(()=>mi).optional(),productionPlan:t.lazy(()=>bi).optional(),productionPlanItem:t.lazy(()=>hi).optional(),availability:t.lazy(()=>Ii).optional(),schedulingConstraint:t.lazy(()=>gi).optional(),inventoryWithdrawal:t.lazy(()=>Ci).optional(),checklistComplete:t.lazy(()=>Ai).optional(),customerFeedback:t.lazy(()=>Si).optional(),recipeVersionsCreated:t.lazy(()=>Ti).optional(),recipeVersionsApproved:t.lazy(()=>Pi).optional(),InventoryTransaction:t.lazy(()=>Ui).optional(),StockCount:t.lazy(()=>Wi).optional()}).strict(),k3=t.object({where:t.lazy(()=>j),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)])}).strict(),Gct=t.object({update:t.union([t.lazy(()=>yL),t.lazy(()=>sL)]),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]),where:t.lazy(()=>Z).optional()}).strict(),$ct=t.object({where:t.lazy(()=>Z).optional(),data:t.union([t.lazy(()=>yL),t.lazy(()=>sL)])}).strict(),yL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),sL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),Aw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>Fl).optional(),users:t.lazy(()=>Dl).optional(),cookbooks:t.lazy(()=>_l).optional(),inventory:t.lazy(()=>El).optional(),orders:t.lazy(()=>Ll).optional(),recipes:t.lazy(()=>Vl).optional(),salesTransactions:t.lazy(()=>Ql).optional(),leftoverItem:t.lazy(()=>Yl).optional(),wasteRecord:t.lazy(()=>Gl).optional(),productionPlan:t.lazy(()=>$l).optional(),equipment:t.lazy(()=>Jl).optional(),qualityChecklist:t.lazy(()=>Kl).optional(),qustomerFeedback:t.lazy(()=>Xl).optional()}).strict(),Sw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>tr).optional(),cookbooks:t.lazy(()=>er).optional(),inventory:t.lazy(()=>or).optional(),orders:t.lazy(()=>nr).optional(),recipes:t.lazy(()=>ar).optional(),salesTransactions:t.lazy(()=>lr).optional(),leftoverItem:t.lazy(()=>rr).optional(),wasteRecord:t.lazy(()=>pr).optional(),productionPlan:t.lazy(()=>cr).optional(),equipment:t.lazy(()=>ur).optional(),qualityChecklist:t.lazy(()=>yr).optional(),qustomerFeedback:t.lazy(()=>sr).optional()}).strict(),x3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)])}).strict(),ps=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),cs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),cI=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),Tw=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),us=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>p2).optional()}).strict(),ys=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>c2).optional()}).strict(),uI=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),Pw=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Jct=t.object({update:t.union([t.lazy(()=>dL),t.lazy(()=>zL)]),create:t.union([t.lazy(()=>Aw),t.lazy(()=>Sw)]),where:t.lazy(()=>N).optional()}).strict(),Kct=t.object({where:t.lazy(()=>N).optional(),data:t.union([t.lazy(()=>dL),t.lazy(()=>zL)])}).strict(),dL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>dr).optional(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),zL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),tj=t.object({where:t.lazy(()=>k),update:t.union([t.lazy(()=>eK),t.lazy(()=>oK)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),ej=t.object({where:t.lazy(()=>k),data:t.union([t.lazy(()=>eK),t.lazy(()=>oK)])}).strict(),oj=t.object({where:t.lazy(()=>oo),data:t.union([t.lazy(()=>dS),t.lazy(()=>Yyt)])}).strict(),nj=t.object({where:t.lazy(()=>Kt),update:t.union([t.lazy(()=>nK),t.lazy(()=>aK)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ys)])}).strict(),aj=t.object({where:t.lazy(()=>Kt),data:t.union([t.lazy(()=>nK),t.lazy(()=>aK)])}).strict(),ij=t.object({where:t.lazy(()=>Bp),data:t.union([t.lazy(()=>xN),t.lazy(()=>Gyt)])}).strict(),Bp=t.object({AND:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),OR:t.lazy(()=>Bp).array().optional(),NOT:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>y),t.number()]).optional(),menuId:t.union([t.lazy(()=>y),t.number()]).optional(),isActive:t.union([t.lazy(()=>_t),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),Uw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),nutritionalInfo:t.lazy(()=>Lz).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),Ww=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),nutritionalInfo:t.lazy(()=>Kz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),j3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)])}).strict(),Rw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),kw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),M3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)])}).strict(),Xct=t.object({update:t.union([t.lazy(()=>mL),t.lazy(()=>bL)]),create:t.union([t.lazy(()=>Uw),t.lazy(()=>Ww)]),where:t.lazy(()=>At).optional()}).strict(),tut=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>mL),t.lazy(()=>bL)])}).strict(),mL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),bL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),eut=t.object({update:t.union([t.lazy(()=>hL),t.lazy(()=>IL)]),create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]),where:t.lazy(()=>v).optional()}).strict(),out=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>hL),t.lazy(()=>IL)])}).strict(),hL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),IL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),xw=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>XF),MenuCategory:t.lazy(()=>eD).optional()}).strict(),jw=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>nD).optional()}).strict(),Z3=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)])}).strict(),Mw=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>r2)}).strict(),Zw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v3=t.object({where:t.lazy(()=>Kt),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)])}).strict(),ss=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),ds=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),yI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),zs=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>z5)}).strict(),ms=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),sI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),vw=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),tT=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eT=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ow=t.object({where:t.lazy(()=>ql),create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)])}).strict(),bs=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hs=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dI=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),fw=t.object({data:t.union([t.lazy(()=>bQ),t.lazy(()=>bQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Is=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>n2)}).strict(),gs=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zI=t.object({where:t.lazy(()=>zt),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),ww=t.object({data:t.union([t.lazy(()=>hQ),t.lazy(()=>hQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cs=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Aq),recordedBy:t.lazy(()=>Tq)}).strict(),As=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),Nw=t.object({data:t.union([t.lazy(()=>IQ),t.lazy(()=>IQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>nq),respondedBy:t.lazy(()=>iq).optional()}).strict(),Ts=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Bw=t.object({data:t.union([t.lazy(()=>gQ),t.lazy(()=>gQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ps=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>uq).optional(),ingredients:t.lazy(()=>yq).optional()}).strict(),Us=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>dq).optional(),ingredients:t.lazy(()=>zq).optional()}).strict(),hI=t.object({where:t.lazy(()=>it),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),nut=t.object({update:t.union([t.lazy(()=>gL),t.lazy(()=>CL)]),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]),where:t.lazy(()=>Ze).optional()}).strict(),aut=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>gL),t.lazy(()=>CL)])}).strict(),gL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>aD).optional(),MenuCategory:t.lazy(()=>lD).optional()}).strict(),CL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>pD).optional()}).strict(),iut=t.object({update:t.union([t.lazy(()=>AL),t.lazy(()=>SL)]),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]),where:t.lazy(()=>ve).optional()}).strict(),lut=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>AL),t.lazy(()=>SL)])}).strict(),AL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>u2).optional()}).strict(),SL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>iK),t.lazy(()=>lK)]),create:t.union([t.lazy(()=>ss),t.lazy(()=>ds)])}).strict(),rj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>iK),t.lazy(()=>lK)])}).strict(),pj=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>gI),t.lazy(()=>$yt)])}).strict(),cj=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>rK),t.lazy(()=>pK)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),uj=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>rK),t.lazy(()=>pK)])}).strict(),yj=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>Yj),t.lazy(()=>Jyt)])}).strict(),O3=t.object({update:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]),create:t.union([t.lazy(()=>tT),t.lazy(()=>eT)]),where:t.lazy(()=>qe).optional()}).strict(),f3=t.object({where:t.lazy(()=>qe).optional(),data:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)])}).strict(),qw=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fw=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sj=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>cK),t.lazy(()=>uK)]),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),dj=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>cK),t.lazy(()=>uK)])}).strict(),zj=t.object({where:t.lazy(()=>qp),data:t.union([t.lazy(()=>BN),t.lazy(()=>Kyt)])}).strict(),qp=t.object({AND:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),OR:t.lazy(()=>qp).array().optional(),NOT:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),id:t.union([t.lazy(()=>y),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>y),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>d),t.coerce.date()]).optional()}).strict(),mj=t.object({where:t.lazy(()=>zt),update:t.union([t.lazy(()=>yK),t.lazy(()=>sK)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),bj=t.object({where:t.lazy(()=>zt),data:t.union([t.lazy(()=>yK),t.lazy(()=>sK)])}).strict(),hj=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>Oj),t.lazy(()=>Xyt)])}).strict(),Ij=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>dK),t.lazy(()=>zK)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),gj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>dK),t.lazy(()=>zK)])}).strict(),Cj=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>TT),t.lazy(()=>tst)])}).strict(),Aj=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>mK),t.lazy(()=>bK)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),Sj=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>mK),t.lazy(()=>bK)])}).strict(),Tj=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>ST),t.lazy(()=>est)])}).strict(),Pj=t.object({where:t.lazy(()=>it),update:t.union([t.lazy(()=>hK),t.lazy(()=>IK)]),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),Uj=t.object({where:t.lazy(()=>it),data:t.union([t.lazy(()=>hK),t.lazy(()=>IK)])}).strict(),Wj=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>Bj),t.lazy(()=>ost)])}).strict(),Dw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menu:t.lazy(()=>Fz),category:t.lazy(()=>Dz).optional(),recipes:t.lazy(()=>_z).optional(),menuItemRecipes:t.lazy(()=>Ez).optional(),recommendations:t.lazy(()=>Vz).optional(),salesTransactions:t.lazy(()=>Hz).optional(),leftoverItems:t.lazy(()=>Qz).optional(),feedback:t.lazy(()=>Yz).optional(),dietaryRestrictions:t.lazy(()=>Gz).optional()}).strict(),_w=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>$z).optional(),menuItemRecipes:t.lazy(()=>Jz).optional(),recommendations:t.lazy(()=>Xz).optional(),salesTransactions:t.lazy(()=>tm).optional(),leftoverItems:t.lazy(()=>em).optional(),feedback:t.lazy(()=>om).optional(),dietaryRestrictions:t.lazy(()=>nm).optional()}).strict(),w3=t.object({where:t.lazy(()=>k),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)])}).strict(),rut=t.object({update:t.union([t.lazy(()=>TL),t.lazy(()=>PL)]),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]),where:t.lazy(()=>At).optional()}).strict(),put=t.object({where:t.lazy(()=>At).optional(),data:t.union([t.lazy(()=>TL),t.lazy(()=>PL)])}).strict(),TL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),PL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),Ew=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),prepHistory:t.lazy(()=>mo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),Lw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),prepHistory:t.lazy(()=>No).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),N3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)])}).strict(),cut=t.object({update:t.union([t.lazy(()=>UL),t.lazy(()=>WL)]),create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]),where:t.lazy(()=>v).optional()}).strict(),uut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>UL),t.lazy(()=>WL)])}).strict(),UL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),WL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Vw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>po),cookBook:t.lazy(()=>co),ingredients:t.lazy(()=>uo).optional(),instructions:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>so).optional(),foodCostHistory:t.lazy(()=>zo).optional(),prepBoards:t.lazy(()=>bo).optional(),prepItems:t.lazy(()=>ho).optional(),menuItemRecipes:t.lazy(()=>Io).optional(),productionPlanItems:t.lazy(()=>go).optional(),withdrawals:t.lazy(()=>Co).optional(),tags:t.lazy(()=>Ao).optional(),versions:t.lazy(()=>So).optional(),equipment:t.lazy(()=>To).optional(),dietaryRestrictions:t.lazy(()=>Po).optional(),temperatures:t.lazy(()=>Uo).optional(),yields:t.lazy(()=>Wo).optional(),laborCosts:t.lazy(()=>Ro).optional(),nutritionalInfo:t.lazy(()=>ko).optional(),criticalPoints:t.lazy(()=>xo).optional(),storage:t.lazy(()=>jo).optional(),photos:t.lazy(()=>Mo).optional(),RecipeStats:t.lazy(()=>Zo).optional()}).strict(),Hw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>vo).optional(),instructions:t.lazy(()=>Oo).optional(),menuItems:t.lazy(()=>fo).optional(),foodCostHistory:t.lazy(()=>wo).optional(),prepBoards:t.lazy(()=>Bo).optional(),prepItems:t.lazy(()=>qo).optional(),menuItemRecipes:t.lazy(()=>Fo).optional(),productionPlanItems:t.lazy(()=>Do).optional(),withdrawals:t.lazy(()=>_o).optional(),tags:t.lazy(()=>Eo).optional(),versions:t.lazy(()=>Lo).optional(),equipment:t.lazy(()=>Vo).optional(),dietaryRestrictions:t.lazy(()=>Ho).optional(),temperatures:t.lazy(()=>Qo).optional(),yields:t.lazy(()=>Yo).optional(),laborCosts:t.lazy(()=>Go).optional(),nutritionalInfo:t.lazy(()=>$o).optional(),criticalPoints:t.lazy(()=>Jo).optional(),storage:t.lazy(()=>Ko).optional(),photos:t.lazy(()=>Xo).optional(),RecipeStats:t.lazy(()=>tn).optional()}).strict(),B3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)])}).strict(),yut=t.object({update:t.union([t.lazy(()=>RL),t.lazy(()=>kL)]),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]),where:t.lazy(()=>v).optional()}).strict(),sut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>RL),t.lazy(()=>kL)])}).strict(),RL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),kL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),_V=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),menuId:t.number().int()}).strict(),q3=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),F3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),dut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),EV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),LV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),D3=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>oF).optional(),ingredient:t.lazy(()=>nF).optional()}).strict(),_3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E3=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>cF).optional(),equipment:t.lazy(()=>yF).optional()}).strict(),L3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),mut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),VV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),HV=t.object({id:t.number().int().optional(),date:t.coerce.date(),type:t.lazy(()=>le),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),V3=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>wB).optional(),RecipeInstruction:t.lazy(()=>BB).optional()}).strict(),H3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),but=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Q3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>le),t.lazy(()=>sC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QV=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Et),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YV=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G3=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>h2).optional()}).strict(),$3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>I2).optional()}).strict(),Iut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Et),t.lazy(()=>_m)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J3=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>tq).optional(),items:t.lazy(()=>eq).optional()}).strict(),K3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oq).optional()}).strict(),gut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GV=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),X3=t.object({status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>A2).optional()}).strict(),t8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$V=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Dt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Em),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),e8=t.object({status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>S2).optional()}).strict(),o8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Aut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Dt),t.lazy(()=>Bz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>qz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JV=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>et).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),n8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional()}).strict(),a8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional()}).strict(),Sut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),i8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),l8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Tut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),r8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional()}).strict(),p8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),Put=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),c8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),u8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Uut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),KV=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),y8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Vq).optional(),assignedTo:t.lazy(()=>Hq).optional()}).strict(),s8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XV=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),d8=t.object({ingredient:t.lazy(()=>x2).optional()}).strict(),z8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Rut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),tH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),eH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),m8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>zr).optional(),cookbooks:t.lazy(()=>mr).optional(),inventory:t.lazy(()=>br).optional(),orders:t.lazy(()=>hr).optional(),recipes:t.lazy(()=>Ir).optional(),menus:t.lazy(()=>gr).optional(),salesTransactions:t.lazy(()=>Cr).optional(),leftoverItem:t.lazy(()=>Ar).optional(),wasteRecord:t.lazy(()=>Sr).optional(),productionPlan:t.lazy(()=>Tr).optional(),equipment:t.lazy(()=>Pr).optional(),qualityChecklist:t.lazy(()=>Ur).optional(),qustomerFeedback:t.lazy(()=>Wr).optional()}).strict(),b8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>Rr).optional(),cookbooks:t.lazy(()=>kr).optional(),inventory:t.lazy(()=>xr).optional(),orders:t.lazy(()=>jr).optional(),recipes:t.lazy(()=>Mr).optional(),menus:t.lazy(()=>Zr).optional(),salesTransactions:t.lazy(()=>vr).optional(),leftoverItem:t.lazy(()=>Or).optional(),wasteRecord:t.lazy(()=>fr).optional(),productionPlan:t.lazy(()=>wr).optional(),equipment:t.lazy(()=>Nr).optional(),qualityChecklist:t.lazy(()=>Br).optional(),qustomerFeedback:t.lazy(()=>qr).optional()}).strict(),kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),h8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>ki).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),I8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),nH=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),aH=t.object({id:t.number().int().optional(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),g8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),ingredient:t.lazy(()=>BS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),C8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),A8=t.object({type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>hF).optional(),createdBy:t.lazy(()=>IF).optional()}).strict(),S8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Mut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T8=t.object({status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>PF).optional(),items:t.lazy(()=>UF).optional()}).strict(),P8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),Zut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),iH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>x),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),rH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional()}).strict(),cH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yH=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dH=t.object({id:t.number().int().optional(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>wt).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Nt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bH=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),U8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Ri).optional(),shifts:t.lazy(()=>xi).optional(),prepItems:t.lazy(()=>ji).optional(),inventoryUpdates:t.lazy(()=>Mi).optional(),sessions:t.lazy(()=>Zi).optional(),passwordResets:t.lazy(()=>vi).optional(),leftoverItem:t.lazy(()=>Oi).optional(),wasteRecord:t.lazy(()=>fi).optional(),productionPlan:t.lazy(()=>wi).optional(),productionPlanItem:t.lazy(()=>Ni).optional(),availability:t.lazy(()=>Bi).optional(),schedulingConstraint:t.lazy(()=>qi).optional(),inventoryWithdrawal:t.lazy(()=>Fi).optional(),checklistComplete:t.lazy(()=>Di).optional(),customerFeedback:t.lazy(()=>_i).optional(),recipeVersionsCreated:t.lazy(()=>Ei).optional(),recipeVersionsApproved:t.lazy(()=>Li).optional(),InventoryTransaction:t.lazy(()=>Vi).optional(),StockCount:t.lazy(()=>Hi).optional()}).strict(),W8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Qi).optional(),prepItems:t.lazy(()=>Yi).optional(),inventoryUpdates:t.lazy(()=>Gi).optional(),sessions:t.lazy(()=>$i).optional(),passwordResets:t.lazy(()=>Ji).optional(),leftoverItem:t.lazy(()=>Ki).optional(),wasteRecord:t.lazy(()=>Xi).optional(),productionPlan:t.lazy(()=>tl).optional(),productionPlanItem:t.lazy(()=>el).optional(),availability:t.lazy(()=>ol).optional(),schedulingConstraint:t.lazy(()=>nl).optional(),inventoryWithdrawal:t.lazy(()=>al).optional(),checklistComplete:t.lazy(()=>il).optional(),customerFeedback:t.lazy(()=>ll).optional(),recipeVersionsCreated:t.lazy(()=>rl).optional(),recipeVersionsApproved:t.lazy(()=>pl).optional(),InventoryTransaction:t.lazy(()=>cl).optional(),StockCount:t.lazy(()=>ul).optional()}).strict(),vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>z)]).optional(),role:t.union([t.lazy(()=>x),t.lazy(()=>Zt)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>_2).optional()}).strict(),k8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>L2).optional()}).strict(),Out=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),x8=t.object({status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>ZF).optional(),items:t.lazy(()=>vF).optional()}).strict(),j8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>OF).optional()}).strict(),fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),Z8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),v8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>iD).optional(),MenuCategory:t.lazy(()=>lD).optional()}).strict(),O8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>rD).optional(),MenuCategory:t.lazy(()=>pD).optional()}).strict(),Nut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f8=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>l2).optional()}).strict(),w8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),But=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Uq).optional(),recordedBy:t.lazy(()=>Wq).optional()}).strict(),B8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>Mq).optional(),recordedBy:t.lazy(()=>Zq).optional()}).strict(),F8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>Bq).optional(),items:t.lazy(()=>qq).optional()}).strict(),_8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Fq).optional()}).strict(),Dut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>xB).optional(),maintenanceLogs:t.lazy(()=>jB).optional()}).strict(),L8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>MB).optional(),maintenanceLogs:t.lazy(()=>ZB).optional()}).strict(),_ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>wt),t.lazy(()=>sp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>VB).optional(),completions:t.lazy(()=>HB).optional()}).strict(),H8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QB).optional(),completions:t.lazy(()=>YB).optional()}).strict(),Eut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Nt),t.lazy(()=>dp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q8=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>rq).optional(),respondedBy:t.lazy(()=>pq).optional()}).strict(),Y8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hH=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Lt)}).strict(),IH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X)}).strict(),gH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),CH=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),AH=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WH=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>pe),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RH=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ce),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xH=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),vH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),OH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>vt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),G8=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional(),ShiftTask:t.lazy(()=>n5).optional()}).strict(),$8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional(),ShiftTask:t.lazy(()=>a5).optional()}).strict(),Vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Lt),t.lazy(()=>Lm)]).optional()}).strict(),J8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),prepBoard:t.lazy(()=>$F).optional(),recipe:t.lazy(()=>JF).optional()}).strict(),K8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional()}).strict(),Hut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional()}).strict(),X8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),ingredient:t.lazy(()=>BS).optional(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),t7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),e7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yut=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n7=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Gut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Pq).optional(),menuItem:t.lazy(()=>Uq).optional()}).strict(),l7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),r7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>jq).optional(),ingrediente:t.lazy(()=>Mq).optional()}).strict(),p7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),c7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Nq).optional(),items:t.lazy(()=>qq).optional()}).strict(),u7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Fq).optional()}).strict(),Kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Lq).optional(),recipe:t.lazy(()=>Vq).optional()}).strict(),s7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),d7=t.object({dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>pe),t.lazy(()=>zC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ce),t.lazy(()=>mC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),h7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>$q).optional(),recipe:t.lazy(()=>Jq).optional()}).strict(),I7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>XB).optional(),items:t.lazy(()=>eq).optional()}).strict(),C7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oq).optional()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A7=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),menuItem:t.lazy(()=>rq).optional()}).strict(),S7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),T7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>BT).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional(),approvedBy:t.lazy(()=>_T).optional()}).strict(),P7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>LT).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>BT).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional(),createdBy:t.lazy(()=>DT).optional()}).strict(),W7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>LT).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R7=t.object({type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>bF).optional(),item:t.lazy(()=>hF).optional()}).strict(),k7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),x7=t.object({status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>TF).optional(),items:t.lazy(()=>UF).optional()}).strict(),j7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>WF).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>lp)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),fH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>St),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>U).optional()}).strict(),M7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),Z7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),wH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),NH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),BH=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qH=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),DH=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),_H=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LH=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VH=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),HH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QH=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YH=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GH=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$H=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>ue),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>nF).optional(),recipeVersion:t.lazy(()=>aF).optional()}).strict(),O7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),f7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>uF).optional(),equipment:t.lazy(()=>yF).optional()}).strict(),w7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>sF).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),N7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menu:t.lazy(()=>am).optional(),category:t.lazy(()=>im).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),B7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),q7=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),E7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>u5).optional()}).strict(),L7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>s5).optional()}).strict(),myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),V7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),prepBoard:t.lazy(()=>$F).optional(),assignedTo:t.lazy(()=>KF).optional()}).strict(),H7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Q7=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>m5).optional()}).strict(),Y7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>Lq).optional(),assignedTo:t.lazy(()=>Hq).optional()}).strict(),$7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>$q).optional(),createdBy:t.lazy(()=>Kq).optional()}).strict(),K7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),eJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>qT).optional(),instructions:t.lazy(()=>FT).optional(),createdBy:t.lazy(()=>DT).optional(),approvedBy:t.lazy(()=>_T).optional()}).strict(),oJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>ET).optional(),instructions:t.lazy(()=>LT).optional()}).strict(),Ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>NB).optional(),RecipeInstruction:t.lazy(()=>BB).optional()}).strict(),aJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),iJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>mq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),lJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Iq).optional(),ingredients:t.lazy(()=>Cq).optional()}).strict(),Tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>z)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cJ=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yJ=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mJ=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>ue),t.lazy(()=>yC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),JH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>ip),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),KH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),XH=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),tQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eQ=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),oQ=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>oF).optional(),recipeVersion:t.lazy(()=>aF).optional()}).strict(),IJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Vr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>z)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),gJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>NS).optional(),lastUpdatedBy:t.lazy(()=>qS).optional(),transactions:t.lazy(()=>FS).optional(),withdrawals:t.lazy(()=>DS).optional(),stockCounts:t.lazy(()=>_S).optional()}).strict(),CJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),AJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>J2).optional()}).strict(),SJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),TJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>DF).optional(),supplierPriceHistory:t.lazy(()=>EF).optional()}).strict(),PJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>LF).optional(),supplierPriceHistory:t.lazy(()=>HF).optional()}).strict(),Zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>jq).optional(),recordedBy:t.lazy(()=>Zq).optional()}).strict(),WJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RJ=t.object({allergen:t.lazy(()=>j2).optional()}).strict(),kJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),xJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>U2).optional()}).strict(),jJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),MJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>wB).optional(),equipment:t.lazy(()=>NB).optional()}).strict(),ZJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),wyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),aQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Mt),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),iQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),vJ=t.object({type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>bF).optional(),createdBy:t.lazy(()=>IF).optional()}).strict(),OJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Mt),t.lazy(()=>Hr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),fJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Jq).optional(),createdBy:t.lazy(()=>Kq).optional()}).strict(),wJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>Q2).optional()}).strict(),BJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),rQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),qJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>Y2).optional()}).strict(),FJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Fyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),pQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),DJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>K2).optional()}).strict(),_J=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),cQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Ot),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EJ=t.object({status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>MF).optional(),items:t.lazy(()=>vF).optional()}).strict(),LJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>OF).optional()}).strict(),_yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Ot),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),VJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),WasteRecord:t.lazy(()=>EI).optional(),IngredientAllergen:t.lazy(()=>LI).optional(),SupplierPriceHistory:t.lazy(()=>VI).optional(),DietaryRestriction:t.lazy(()=>HI).optional()}).strict(),HJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),WasteRecord:t.lazy(()=>JI).optional(),IngredientAllergen:t.lazy(()=>KI).optional(),SupplierPriceHistory:t.lazy(()=>XI).optional()}).strict(),Eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>et),t.lazy(()=>Jn)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),QJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>W2).optional()}).strict(),YJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>re),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GJ=t.object({taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$J=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Vyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>re),t.lazy(()=>dC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>X),assignedToId:t.number().int()}).strict(),JJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),menuItems:t.lazy(()=>ln).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),KJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),menuItems:t.lazy(()=>kn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),Hyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),XJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),recipe:t.lazy(()=>JF).optional(),assignedTo:t.lazy(()=>KF).optional()}).strict(),tK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Qyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>X),t.lazy(()=>Kn)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),dQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>no),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>ao),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>io),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>lo),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),zQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),category:t.lazy(()=>im).optional(),recipes:t.lazy(()=>lm).optional(),menuItemRecipes:t.lazy(()=>rm).optional(),nutritionalInfo:t.lazy(()=>pm).optional(),recommendations:t.lazy(()=>cm).optional(),salesTransactions:t.lazy(()=>um).optional(),leftoverItems:t.lazy(()=>ym).optional(),feedback:t.lazy(()=>sm).optional(),dietaryRestrictions:t.lazy(()=>dm).optional()}).strict(),oK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>zm).optional(),menuItemRecipes:t.lazy(()=>mm).optional(),nutritionalInfo:t.lazy(()=>bm).optional(),recommendations:t.lazy(()=>hm).optional(),salesTransactions:t.lazy(()=>Im).optional(),leftoverItems:t.lazy(()=>gm).optional(),feedback:t.lazy(()=>Cm).optional(),dietaryRestrictions:t.lazy(()=>Am).optional()}).strict(),Yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),recipeIds:t.union([t.lazy(()=>De),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>_e),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ee),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>Le),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),nK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>y2).optional()}).strict(),aK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>s2).optional()}).strict(),Gyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>z)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),bQ=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>xt),tags:t.union([t.lazy(()=>np),t.string().array()]).optional(),status:t.lazy(()=>jt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),restaurant:t.lazy(()=>en).optional(),cookBook:t.lazy(()=>on).optional(),ingredients:t.lazy(()=>nn).optional(),instructions:t.lazy(()=>an).optional(),foodCostHistory:t.lazy(()=>rn).optional(),prepHistory:t.lazy(()=>pn).optional(),prepBoards:t.lazy(()=>cn).optional(),prepItems:t.lazy(()=>un).optional(),menuItemRecipes:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>sn).optional(),withdrawals:t.lazy(()=>dn).optional(),tags:t.lazy(()=>zn).optional(),versions:t.lazy(()=>mn).optional(),equipment:t.lazy(()=>bn).optional(),dietaryRestrictions:t.lazy(()=>hn).optional(),temperatures:t.lazy(()=>In).optional(),yields:t.lazy(()=>gn).optional(),laborCosts:t.lazy(()=>Cn).optional(),nutritionalInfo:t.lazy(()=>An).optional(),criticalPoints:t.lazy(()=>Sn).optional(),storage:t.lazy(()=>Tn).optional(),photos:t.lazy(()=>Pn).optional(),RecipeStats:t.lazy(()=>Un).optional()}).strict(),lK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional(),ingredients:t.lazy(()=>Wn).optional(),instructions:t.lazy(()=>Rn).optional(),foodCostHistory:t.lazy(()=>xn).optional(),prepHistory:t.lazy(()=>jn).optional(),prepBoards:t.lazy(()=>Mn).optional(),prepItems:t.lazy(()=>Zn).optional(),menuItemRecipes:t.lazy(()=>vn).optional(),productionPlanItems:t.lazy(()=>On).optional(),withdrawals:t.lazy(()=>fn).optional(),tags:t.lazy(()=>wn).optional(),versions:t.lazy(()=>Nn).optional(),equipment:t.lazy(()=>Bn).optional(),dietaryRestrictions:t.lazy(()=>qn).optional(),temperatures:t.lazy(()=>Fn).optional(),yields:t.lazy(()=>Dn).optional(),laborCosts:t.lazy(()=>_n).optional(),nutritionalInfo:t.lazy(()=>En).optional(),criticalPoints:t.lazy(()=>Ln).optional(),storage:t.lazy(()=>Vn).optional(),photos:t.lazy(()=>Hn).optional(),RecipeStats:t.lazy(()=>Qn).optional()}).strict(),$yt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>ut),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>z)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>z)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>U),t.lazy(()=>yt)]).optional()}).strict(),rK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>b5).optional()}).strict(),pK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cK=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yK=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>i2).optional()}).strict(),sK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Xyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Pq).optional(),recordedBy:t.lazy(()=>Wq).optional()}).strict(),zK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mK=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),respondedBy:t.lazy(()=>pq).optional()}).strict(),bK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),est=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>xt),t.lazy(()=>_r)]).optional(),tags:t.union([t.lazy(()=>Er),t.string().array()]).optional(),status:t.union([t.lazy(()=>jt),t.lazy(()=>Lr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>bq).optional(),ingredients:t.lazy(()=>hq).optional()}).strict(),IK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>gq).optional(),ingredients:t.lazy(()=>Cq).optional()}).strict(),ost=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tmt=t.object({select:Rs.optional(),include:Ws.optional(),where:we.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),emt=t.object({select:Rs.optional(),include:Ws.optional(),where:we.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),omt=t.object({select:Rs.optional(),include:Ws.optional(),where:we.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ag,ag.array()]).optional()}).strict(),nmt=t.object({where:we.optional(),orderBy:t.union([Pm.array(),Pm]).optional(),cursor:wl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),amt=t.object({where:we.optional(),orderBy:t.union([fL.array(),fL]).optional(),by:ag.array(),having:ZC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),imt=t.object({select:Rs.optional(),include:Ws.optional(),where:wl}).strict(),lmt=t.object({select:Rs.optional(),include:Ws.optional(),where:wl}).strict(),rmt=t.object({select:xs.optional(),include:ks.optional(),where:Xn.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),pmt=t.object({select:xs.optional(),include:ks.optional(),where:Xn.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),gK=t.object({select:xs.optional(),include:ks.optional(),where:Xn.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ig,ig.array()]).optional()}).strict(),cmt=t.object({where:Xn.optional(),orderBy:t.union([Gm.array(),Gm]).optional(),cursor:de.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),umt=t.object({where:Xn.optional(),orderBy:t.union([wL.array(),wL]).optional(),by:ig.array(),having:vC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ymt=t.object({select:xs.optional(),include:ks.optional(),where:de}).strict(),smt=t.object({select:xs.optional(),include:ks.optional(),where:de}).strict(),dmt=t.object({select:Ms.optional(),include:js.optional(),where:Ne.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),zmt=t.object({select:Ms.optional(),include:js.optional(),where:Ne.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),mmt=t.object({select:Ms.optional(),include:js.optional(),where:Ne.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lg,lg.array()]).optional()}).strict(),bmt=t.object({where:Ne.optional(),orderBy:t.union([Um.array(),Um]).optional(),cursor:Nl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hmt=t.object({where:Ne.optional(),orderBy:t.union([NL.array(),NL]).optional(),by:lg.array(),having:OC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Imt=t.object({select:Ms.optional(),include:js.optional(),where:Nl}).strict(),gmt=t.object({select:Ms.optional(),include:js.optional(),where:Nl}).strict(),Cmt=t.object({select:vs.optional(),include:Zs.optional(),where:ta.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),Amt=t.object({select:vs.optional(),include:Zs.optional(),where:ta.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),CK=t.object({select:vs.optional(),include:Zs.optional(),where:ta.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rg,rg.array()]).optional()}).strict(),Smt=t.object({where:ta.optional(),orderBy:t.union([$m.array(),$m]).optional(),cursor:ze.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tmt=t.object({where:ta.optional(),orderBy:t.union([BL.array(),BL]).optional(),by:rg.array(),having:fC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pmt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),Umt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),Wmt=t.object({select:fs.optional(),include:Os.optional(),where:ea.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),Rmt=t.object({select:fs.optional(),include:Os.optional(),where:ea.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),AK=t.object({select:fs.optional(),include:Os.optional(),where:ea.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pg,pg.array()]).optional()}).strict(),kmt=t.object({where:ea.optional(),orderBy:t.union([Jm.array(),Jm]).optional(),cursor:me.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xmt=t.object({where:ea.optional(),orderBy:t.union([qL.array(),qL]).optional(),by:pg.array(),having:wC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Mmt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),Zmt=t.object({select:Ns.optional(),include:ws.optional(),where:oa.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),vmt=t.object({select:Ns.optional(),include:ws.optional(),where:oa.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),SK=t.object({select:Ns.optional(),include:ws.optional(),where:oa.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cg,cg.array()]).optional()}).strict(),Omt=t.object({where:oa.optional(),orderBy:t.union([Km.array(),Km]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fmt=t.object({where:oa.optional(),orderBy:t.union([FL.array(),FL]).optional(),by:cg.array(),having:NC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wmt=t.object({select:Ns.optional(),include:ws.optional(),where:be}).strict(),Nmt=t.object({select:Ns.optional(),include:ws.optional(),where:be}).strict(),Bmt=t.object({select:qs.optional(),include:Bs.optional(),where:na.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),qmt=t.object({select:qs.optional(),include:Bs.optional(),where:na.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),TK=t.object({select:qs.optional(),include:Bs.optional(),where:na.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([ug,ug.array()]).optional()}).strict(),Fmt=t.object({where:na.optional(),orderBy:t.union([Xm.array(),Xm]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dmt=t.object({where:na.optional(),orderBy:t.union([DL.array(),DL]).optional(),by:ug.array(),having:BC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_mt=t.object({select:qs.optional(),include:Bs.optional(),where:he}).strict(),Emt=t.object({select:qs.optional(),include:Bs.optional(),where:he}).strict(),Lmt=t.object({select:Ds.optional(),include:Fs.optional(),where:aa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Vmt=t.object({select:Ds.optional(),include:Fs.optional(),where:aa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Qw=t.object({select:Ds.optional(),include:Fs.optional(),where:aa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yg,yg.array()]).optional()}).strict(),Hmt=t.object({where:aa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:zt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qmt=t.object({where:aa.optional(),orderBy:t.union([_L.array(),_L]).optional(),by:yg.array(),having:qC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ymt=t.object({select:Ds.optional(),include:Fs.optional(),where:zt}).strict(),Gmt=t.object({select:Ds.optional(),include:Fs.optional(),where:zt}).strict(),$mt=t.object({select:Es.optional(),include:_s.optional(),where:ve.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),Jmt=t.object({select:Es.optional(),include:_s.optional(),where:ve.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),PK=t.object({select:Es.optional(),include:_s.optional(),where:ve.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sg,sg.array()]).optional()}).strict(),Kmt=t.object({where:ve.optional(),orderBy:t.union([Wm.array(),Wm]).optional(),cursor:Kt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xmt=t.object({where:ve.optional(),orderBy:t.union([EL.array(),EL]).optional(),by:sg.array(),having:FC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tbt=t.object({select:Es.optional(),include:_s.optional(),where:Kt}).strict(),ebt=t.object({select:Es.optional(),include:_s.optional(),where:Kt}).strict(),obt=t.object({select:Vs.optional(),include:Ls.optional(),where:ne.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),nbt=t.object({select:Vs.optional(),include:Ls.optional(),where:ne.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),yS=t.object({select:Vs.optional(),include:Ls.optional(),where:ne.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),abt=t.object({where:ne.optional(),orderBy:t.union([Fp.array(),Fp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ibt=t.object({where:ne.optional(),orderBy:t.union([LL.array(),LL]).optional(),by:dg.array(),having:DC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lbt=t.object({select:Vs.optional(),include:Ls.optional(),where:w}).strict(),rbt=t.object({select:Vs.optional(),include:Ls.optional(),where:w}).strict(),pbt=t.object({select:Qs.optional(),include:Hs.optional(),where:xe.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),cbt=t.object({select:Qs.optional(),include:Hs.optional(),where:xe.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),UK=t.object({select:Qs.optional(),include:Hs.optional(),where:xe.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),ubt=t.object({where:xe.optional(),orderBy:t.union([Dp.array(),Dp]).optional(),cursor:Vt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ybt=t.object({where:xe.optional(),orderBy:t.union([VL.array(),VL]).optional(),by:zg.array(),having:_C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sbt=t.object({select:Qs.optional(),include:Hs.optional(),where:Vt}).strict(),dbt=t.object({select:Qs.optional(),include:Hs.optional(),where:Vt}).strict(),zbt=t.object({select:Gs.optional(),include:Ys.optional(),where:ia.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),mbt=t.object({select:Gs.optional(),include:Ys.optional(),where:ia.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),oT=t.object({select:Gs.optional(),include:Ys.optional(),where:ia.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),bbt=t.object({where:ia.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:B.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hbt=t.object({where:ia.optional(),orderBy:t.union([HL.array(),HL]).optional(),by:mg.array(),having:EC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ibt=t.object({select:Gs.optional(),include:Ys.optional(),where:B}).strict(),gbt=t.object({select:Gs.optional(),include:Ys.optional(),where:B}).strict(),Cbt=t.object({select:Js.optional(),include:$s.optional(),where:la.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Abt=t.object({select:Js.optional(),include:$s.optional(),where:la.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),WK=t.object({select:Js.optional(),include:$s.optional(),where:la.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),Sbt=t.object({where:la.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tbt=t.object({where:la.optional(),orderBy:t.union([QL.array(),QL]).optional(),by:bg.array(),having:LC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pbt=t.object({select:Js.optional(),include:$s.optional(),where:Ie}).strict(),Ubt=t.object({select:Js.optional(),include:$s.optional(),where:Ie}).strict(),Wbt=t.object({select:Xs.optional(),include:Ks.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Rbt=t.object({select:Xs.optional(),include:Ks.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),RK=t.object({select:Xs.optional(),include:Ks.optional(),where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),kbt=t.object({where:je.optional(),orderBy:t.union([_p.array(),_p]).optional(),cursor:Ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xbt=t.object({where:je.optional(),orderBy:t.union([YL.array(),YL]).optional(),by:hg.array(),having:VC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jbt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ht}).strict(),Mbt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ht}).strict(),Zbt=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),vbt=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),kK=t.object({select:ed.optional(),include:td.optional(),where:Ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Obt=t.object({where:Ve.optional(),orderBy:t.union([Rm.array(),Rm]).optional(),cursor:Xt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fbt=t.object({where:Ve.optional(),orderBy:t.union([GL.array(),GL]).optional(),by:Ig.array(),having:HC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wbt=t.object({select:ed.optional(),include:td.optional(),where:Xt}).strict(),Nbt=t.object({select:ed.optional(),include:td.optional(),where:Xt}).strict(),Bbt=t.object({select:nd.optional(),include:od.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),qbt=t.object({select:nd.optional(),include:od.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Yw=t.object({select:nd.optional(),include:od.optional(),where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Fbt=t.object({where:He.optional(),orderBy:t.union([km.array(),km]).optional(),cursor:at.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dbt=t.object({where:He.optional(),orderBy:t.union([$L.array(),$L]).optional(),by:gg.array(),having:QC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_bt=t.object({select:nd.optional(),include:od.optional(),where:at}).strict(),Ebt=t.object({select:nd.optional(),include:od.optional(),where:at}).strict(),Lbt=t.object({select:id.optional(),include:ad.optional(),where:ra.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Vbt=t.object({select:id.optional(),include:ad.optional(),where:ra.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Gw=t.object({select:id.optional(),include:ad.optional(),where:ra.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),Hbt=t.object({where:ra.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:mt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qbt=t.object({where:ra.optional(),orderBy:t.union([JL.array(),JL]).optional(),by:Cg.array(),having:YC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ybt=t.object({select:id.optional(),include:ad.optional(),where:mt}).strict(),Gbt=t.object({select:id.optional(),include:ad.optional(),where:mt}).strict(),$bt=t.object({select:rd.optional(),include:ld.optional(),where:pa.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Jbt=t.object({select:rd.optional(),include:ld.optional(),where:pa.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),$w=t.object({select:rd.optional(),include:ld.optional(),where:pa.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),Kbt=t.object({where:pa.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:bt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xbt=t.object({where:pa.optional(),orderBy:t.union([KL.array(),KL]).optional(),by:Ag.array(),having:GC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tht=t.object({select:rd.optional(),include:ld.optional(),where:bt}).strict(),eht=t.object({select:rd.optional(),include:ld.optional(),where:bt}).strict(),oht=t.object({select:cd.optional(),include:pd.optional(),where:ca.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),nht=t.object({select:cd.optional(),include:pd.optional(),where:ca.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),nT=t.object({select:cd.optional(),include:pd.optional(),where:ca.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),aht=t.object({where:ca.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iht=t.object({where:ca.optional(),orderBy:t.union([XL.array(),XL]).optional(),by:Sg.array(),having:$C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lht=t.object({select:cd.optional(),include:pd.optional(),where:q}).strict(),rht=t.object({select:cd.optional(),include:pd.optional(),where:q}).strict(),pht=t.object({select:yd.optional(),include:ud.optional(),where:Oe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),cht=t.object({select:yd.optional(),include:ud.optional(),where:Oe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),Jw=t.object({select:yd.optional(),include:ud.optional(),where:Oe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),uht=t.object({where:Oe.optional(),orderBy:t.union([xm.array(),xm]).optional(),cursor:it.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yht=t.object({where:Oe.optional(),orderBy:t.union([tV.array(),tV]).optional(),by:Tg.array(),having:JC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sht=t.object({select:yd.optional(),include:ud.optional(),where:it}).strict(),dht=t.object({select:yd.optional(),include:ud.optional(),where:it}).strict(),zht=t.object({select:dd.optional(),include:sd.optional(),where:ua.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),mht=t.object({select:dd.optional(),include:sd.optional(),where:ua.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),xK=t.object({select:dd.optional(),include:sd.optional(),where:ua.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),bht=t.object({where:ua.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hht=t.object({where:ua.optional(),orderBy:t.union([eV.array(),eV]).optional(),by:Pg.array(),having:KC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Iht=t.object({select:dd.optional(),include:sd.optional(),where:ge}).strict(),ght=t.object({select:dd.optional(),include:sd.optional(),where:ge}).strict(),Cht=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),Aht=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),aT=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),Sht=t.object({where:ya.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tht=t.object({where:ya.optional(),orderBy:t.union([oV.array(),oV]).optional(),by:Ug.array(),having:XC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pht=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),Uht=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),Wht=t.object({select:hd.optional(),include:bd.optional(),where:sa.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Rht=t.object({select:hd.optional(),include:bd.optional(),where:sa.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),iT=t.object({select:hd.optional(),include:bd.optional(),where:sa.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),kht=t.object({where:sa.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xht=t.object({where:sa.optional(),orderBy:t.union([nV.array(),nV]).optional(),by:Wg.array(),having:tA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),Mht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),Zht=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),vht=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Kw=t.object({select:gd.optional(),include:Id.optional(),where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Oht=t.object({where:Qe.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:lt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fht=t.object({where:Qe.optional(),orderBy:t.union([aV.array(),aV]).optional(),by:Rg.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wht=t.object({select:gd.optional(),include:Id.optional(),where:lt}).strict(),Nht=t.object({select:gd.optional(),include:Id.optional(),where:lt}).strict(),Bht=t.object({select:Ad.optional(),include:Cd.optional(),where:da.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),qht=t.object({select:Ad.optional(),include:Cd.optional(),where:da.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),lT=t.object({select:Ad.optional(),include:Cd.optional(),where:da.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Fht=t.object({where:da.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dht=t.object({where:da.optional(),orderBy:t.union([iV.array(),iV]).optional(),by:kg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_ht=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),Eht=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),Lht=t.object({select:Td.optional(),include:Sd.optional(),where:za.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Vht=t.object({select:Td.optional(),include:Sd.optional(),where:za.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),jK=t.object({select:Td.optional(),include:Sd.optional(),where:za.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),Hht=t.object({where:za.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qht=t.object({where:za.optional(),orderBy:t.union([lV.array(),lV]).optional(),by:xg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Yht=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),Ght=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),$ht=t.object({select:Ud.optional(),include:Pd.optional(),where:ma.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Jht=t.object({select:Ud.optional(),include:Pd.optional(),where:ma.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),MK=t.object({select:Ud.optional(),include:Pd.optional(),where:ma.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),Kht=t.object({where:ma.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xht=t.object({where:ma.optional(),orderBy:t.union([rV.array(),rV]).optional(),by:jg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tIt=t.object({select:Ud.optional(),include:Pd.optional(),where:Ae}).strict(),eIt=t.object({select:Ud.optional(),include:Pd.optional(),where:Ae}).strict(),oIt=t.object({select:Rd.optional(),include:Wd.optional(),where:ba.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),nIt=t.object({select:Rd.optional(),include:Wd.optional(),where:ba.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),ZK=t.object({select:Rd.optional(),include:Wd.optional(),where:ba.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),aIt=t.object({where:ba.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iIt=t.object({where:ba.optional(),orderBy:t.union([pV.array(),pV]).optional(),by:Mg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Se}).strict(),rIt=t.object({select:Rd.optional(),include:Wd.optional(),where:Se}).strict(),pIt=t.object({select:xd.optional(),include:kd.optional(),where:ha.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),cIt=t.object({select:xd.optional(),include:kd.optional(),where:ha.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),rT=t.object({select:xd.optional(),include:kd.optional(),where:ha.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),uIt=t.object({where:ha.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yIt=t.object({where:ha.optional(),orderBy:t.union([cV.array(),cV]).optional(),by:Zg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sIt=t.object({select:xd.optional(),include:kd.optional(),where:E}).strict(),dIt=t.object({select:xd.optional(),include:kd.optional(),where:E}).strict(),zIt=t.object({select:Md.optional(),include:jd.optional(),where:ro.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:tp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),mIt=t.object({select:Md.optional(),include:jd.optional(),where:ro.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:tp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),bIt=t.object({select:Md.optional(),include:jd.optional(),where:ro.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:tp.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),hIt=t.object({where:ro.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:tp.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),IIt=t.object({where:ro.optional(),orderBy:t.union([uV.array(),uV]).optional(),by:vg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gIt=t.object({select:Md.optional(),include:jd.optional(),where:tp}).strict(),CIt=t.object({select:Md.optional(),include:jd.optional(),where:tp}).strict(),AIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ia.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),SIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ia.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),Xw=t.object({select:vd.optional(),include:Zd.optional(),where:Ia.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),TIt=t.object({where:Ia.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PIt=t.object({where:Ia.optional(),orderBy:t.union([yV.array(),yV]).optional(),by:Og.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UIt=t.object({select:vd.optional(),include:Zd.optional(),where:ht}).strict(),WIt=t.object({select:vd.optional(),include:Zd.optional(),where:ht}).strict(),RIt=t.object({select:fd.optional(),include:Od.optional(),where:ga.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),kIt=t.object({select:fd.optional(),include:Od.optional(),where:ga.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),vK=t.object({select:fd.optional(),include:Od.optional(),where:ga.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),xIt=t.object({where:ga.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jIt=t.object({where:ga.optional(),orderBy:t.union([sV.array(),sV]).optional(),by:fg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MIt=t.object({select:fd.optional(),include:Od.optional(),where:Te}).strict(),ZIt=t.object({select:fd.optional(),include:Od.optional(),where:Te}).strict(),vIt=t.object({select:Fm.optional(),where:yl.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Dm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),OIt=t.object({select:Fm.optional(),where:yl.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Dm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),fIt=t.object({select:Fm.optional(),where:yl.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Dm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),wIt=t.object({where:yl.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Dm.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NIt=t.object({where:yl.optional(),orderBy:t.union([dV.array(),dV]).optional(),by:wg.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BIt=t.object({select:Fm.optional(),where:Dm}).strict(),qIt=t.object({select:Fm.optional(),where:Dm}).strict(),FIt=t.object({select:Nd.optional(),include:wd.optional(),where:ke.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:jl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),DIt=t.object({select:Nd.optional(),include:wd.optional(),where:ke.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:jl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),_It=t.object({select:Nd.optional(),include:wd.optional(),where:ke.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:jl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),EIt=t.object({where:ke.optional(),orderBy:t.union([Ep.array(),Ep]).optional(),cursor:jl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LIt=t.object({where:ke.optional(),orderBy:t.union([zV.array(),zV]).optional(),by:Ng.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({select:Nd.optional(),include:wd.optional(),where:jl}).strict(),HIt=t.object({select:Nd.optional(),include:wd.optional(),where:jl}).strict(),QIt=t.object({select:qd.optional(),include:Bd.optional(),where:Bt.optional(),orderBy:t.union([Jr.array(),Jr]).optional(),cursor:Yn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),YIt=t.object({select:qd.optional(),include:Bd.optional(),where:Bt.optional(),orderBy:t.union([Jr.array(),Jr]).optional(),cursor:Yn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),GIt=t.object({select:qd.optional(),include:Bd.optional(),where:Bt.optional(),orderBy:t.union([Jr.array(),Jr]).optional(),cursor:Yn.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),$It=t.object({where:Bt.optional(),orderBy:t.union([Jr.array(),Jr]).optional(),cursor:Yn.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({where:Bt.optional(),orderBy:t.union([mV.array(),mV]).optional(),by:Bg.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KIt=t.object({select:qd.optional(),include:Bd.optional(),where:Yn}).strict(),XIt=t.object({select:qd.optional(),include:Bd.optional(),where:Yn}).strict(),tgt=t.object({select:Dd.optional(),include:Fd.optional(),where:N.optional(),orderBy:t.union([Ma.array(),Ma]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),egt=t.object({select:Dd.optional(),include:Fd.optional(),where:N.optional(),orderBy:t.union([Ma.array(),Ma]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),OK=t.object({select:Dd.optional(),include:Fd.optional(),where:N.optional(),orderBy:t.union([Ma.array(),Ma]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),ogt=t.object({where:N.optional(),orderBy:t.union([Ma.array(),Ma]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ngt=t.object({where:N.optional(),orderBy:t.union([bV.array(),bV]).optional(),by:qg.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({select:Dd.optional(),include:Fd.optional(),where:J}).strict(),igt=t.object({select:Dd.optional(),include:Fd.optional(),where:J}).strict(),lgt=t.object({select:Ed.optional(),include:_d.optional(),where:Z.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),rgt=t.object({select:Ed.optional(),include:_d.optional(),where:Z.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),tN=t.object({select:Ed.optional(),include:_d.optional(),where:Z.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),pgt=t.object({where:Z.optional(),orderBy:t.union([Xe.array(),Xe]).optional(),cursor:j.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cgt=t.object({where:Z.optional(),orderBy:t.union([hV.array(),hV]).optional(),by:Fg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ugt=t.object({select:Ed.optional(),include:_d.optional(),where:j}).strict(),ygt=t.object({select:Ed.optional(),include:_d.optional(),where:j}).strict(),sgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),dgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),fK=t.object({select:Vd.optional(),include:Ld.optional(),where:Ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),zgt=t.object({where:Ca.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mgt=t.object({where:Ca.optional(),orderBy:t.union([IV.array(),IV]).optional(),by:Dg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),hgt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),Igt=t.object({select:Qd.optional(),include:Hd.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),ggt=t.object({select:Qd.optional(),include:Hd.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),wK=t.object({select:Qd.optional(),include:Hd.optional(),where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),Cgt=t.object({where:Ye.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Agt=t.object({where:Ye.optional(),orderBy:t.union([gV.array(),gV]).optional(),by:_g.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Sgt=t.object({select:Qd.optional(),include:Hd.optional(),where:te}).strict(),Tgt=t.object({select:Qd.optional(),include:Hd.optional(),where:te}).strict(),Pgt=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([to.array(),to]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Ugt=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([to.array(),to]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),pp=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([to.array(),to]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),Wgt=t.object({where:v.optional(),orderBy:t.union([to.array(),to]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Rgt=t.object({where:v.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Eg.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kgt=t.object({select:Gd.optional(),include:Yd.optional(),where:C}).strict(),xgt=t.object({select:Gd.optional(),include:Yd.optional(),where:C}).strict(),jgt=t.object({select:Jd.optional(),include:$d.optional(),where:kt.optional(),orderBy:t.union([vl.array(),vl]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Mgt=t.object({select:Jd.optional(),include:$d.optional(),where:kt.optional(),orderBy:t.union([vl.array(),vl]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),eN=t.object({select:Jd.optional(),include:$d.optional(),where:kt.optional(),orderBy:t.union([vl.array(),vl]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),Zgt=t.object({where:kt.optional(),orderBy:t.union([vl.array(),vl]).optional(),cursor:G.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vgt=t.object({where:kt.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:Lg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ogt=t.object({select:Jd.optional(),include:$d.optional(),where:G}).strict(),fgt=t.object({select:Jd.optional(),include:$d.optional(),where:G}).strict(),wgt=t.object({select:Xd.optional(),include:Kd.optional(),where:Aa.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Ngt=t.object({select:Xd.optional(),include:Kd.optional(),where:Aa.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),pT=t.object({select:Xd.optional(),include:Kd.optional(),where:Aa.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),Bgt=t.object({where:Aa.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qgt=t.object({where:Aa.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:Vg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Fgt=t.object({select:Xd.optional(),include:Kd.optional(),where:L}).strict(),Dgt=t.object({select:Xd.optional(),include:Kd.optional(),where:L}).strict(),_gt=t.object({select:ez.optional(),include:tz.optional(),where:fe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Egt=t.object({select:ez.optional(),include:tz.optional(),where:fe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),oN=t.object({select:ez.optional(),include:tz.optional(),where:fe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),Lgt=t.object({where:fe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Vgt=t.object({where:fe.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:Hg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Hgt=t.object({select:ez.optional(),include:tz.optional(),where:rt}).strict(),Qgt=t.object({select:ez.optional(),include:tz.optional(),where:rt}).strict(),Ygt=t.object({select:nz.optional(),include:oz.optional(),where:ae.optional(),orderBy:t.union([yp.array(),yp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),Ggt=t.object({select:nz.optional(),include:oz.optional(),where:ae.optional(),orderBy:t.union([yp.array(),yp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),cT=t.object({select:nz.optional(),include:oz.optional(),where:ae.optional(),orderBy:t.union([yp.array(),yp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),$gt=t.object({where:ae.optional(),orderBy:t.union([yp.array(),yp]).optional(),cursor:f.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Jgt=t.object({where:ae.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:Qg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Kgt=t.object({select:nz.optional(),include:oz.optional(),where:f}).strict(),Xgt=t.object({select:nz.optional(),include:oz.optional(),where:f}).strict(),tCt=t.object({select:iz.optional(),include:az.optional(),where:Sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),eCt=t.object({select:iz.optional(),include:az.optional(),where:Sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),uT=t.object({select:iz.optional(),include:az.optional(),where:Sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),oCt=t.object({where:Sa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),nCt=t.object({where:Sa.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:Yg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aCt=t.object({select:iz.optional(),include:az.optional(),where:V}).strict(),iCt=t.object({select:iz.optional(),include:az.optional(),where:V}).strict(),lCt=t.object({select:rz.optional(),include:lz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),rCt=t.object({select:rz.optional(),include:lz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),nN=t.object({select:rz.optional(),include:lz.optional(),where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),pCt=t.object({where:Ge.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),cCt=t.object({where:Ge.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:Gg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uCt=t.object({select:rz.optional(),include:lz.optional(),where:pt}).strict(),yCt=t.object({select:rz.optional(),include:lz.optional(),where:pt}).strict(),sCt=t.object({select:cz.optional(),include:pz.optional(),where:Ta.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),dCt=t.object({select:cz.optional(),include:pz.optional(),where:Ta.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),aN=t.object({select:cz.optional(),include:pz.optional(),where:Ta.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),zCt=t.object({where:Ta.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),mCt=t.object({where:Ta.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:$g.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bCt=t.object({select:cz.optional(),include:pz.optional(),where:It}).strict(),hCt=t.object({select:cz.optional(),include:pz.optional(),where:It}).strict(),ICt=t.object({select:yz.optional(),include:uz.optional(),where:Be.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),gCt=t.object({select:yz.optional(),include:uz.optional(),where:Be.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),CCt=t.object({select:yz.optional(),include:uz.optional(),where:Be.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),ACt=t.object({where:Be.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:Bl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SCt=t.object({where:Be.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:Jg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TCt=t.object({select:yz.optional(),include:uz.optional(),where:Bl}).strict(),PCt=t.object({select:yz.optional(),include:uz.optional(),where:Bl}).strict(),UCt=t.object({select:dz.optional(),include:sz.optional(),where:$e.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),WCt=t.object({select:dz.optional(),include:sz.optional(),where:$e.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),iN=t.object({select:dz.optional(),include:sz.optional(),where:$e.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),RCt=t.object({where:$e.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kCt=t.object({where:$e.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:Kg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xCt=t.object({select:dz.optional(),include:sz.optional(),where:ct}).strict(),jCt=t.object({select:dz.optional(),include:sz.optional(),where:ct}).strict(),MCt=t.object({select:mz.optional(),include:zz.optional(),where:Pa.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),ZCt=t.object({select:mz.optional(),include:zz.optional(),where:Pa.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),lN=t.object({select:mz.optional(),include:zz.optional(),where:Pa.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),vCt=t.object({where:Pa.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),OCt=t.object({where:Pa.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:Xg.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fCt=t.object({select:mz.optional(),include:zz.optional(),where:gt}).strict(),wCt=t.object({select:mz.optional(),include:zz.optional(),where:gt}).strict(),NCt=t.object({select:hz.optional(),include:bz.optional(),where:Me.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),BCt=t.object({select:hz.optional(),include:bz.optional(),where:Me.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),NK=t.object({select:hz.optional(),include:bz.optional(),where:Me.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),qCt=t.object({where:Me.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:Qt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),FCt=t.object({where:Me.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:tC.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DCt=t.object({select:hz.optional(),include:bz.optional(),where:Qt}).strict(),_Ct=t.object({select:hz.optional(),include:bz.optional(),where:Qt}).strict(),ECt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),LCt=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),BK=t.object({select:gz.optional(),include:Iz.optional(),where:Je.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),VCt=t.object({where:Je.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),HCt=t.object({where:Je.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:eC.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QCt=t.object({select:gz.optional(),include:Iz.optional(),where:ee}).strict(),YCt=t.object({select:gz.optional(),include:Iz.optional(),where:ee}).strict(),GCt=t.object({select:Az.optional(),include:Cz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),$Ct=t.object({select:Az.optional(),include:Cz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),qK=t.object({select:Az.optional(),include:Cz.optional(),where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),JCt=t.object({where:Ke.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KCt=t.object({where:Ke.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:oC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),XCt=t.object({select:Az.optional(),include:Cz.optional(),where:oe}).strict(),tAt=t.object({select:Az.optional(),include:Cz.optional(),where:oe}).strict(),eAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Ua.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),oAt=t.object({select:Tz.optional(),include:Sz.optional(),where:Ua.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),yT=t.object({select:Tz.optional(),include:Sz.optional(),where:Ua.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),nAt=t.object({where:Ua.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),aAt=t.object({where:Ua.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:nC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iAt=t.object({select:Tz.optional(),include:Sz.optional(),where:H}).strict(),lAt=t.object({select:Tz.optional(),include:Sz.optional(),where:H}).strict(),rAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Wa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),pAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Wa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),FK=t.object({select:Uz.optional(),include:Pz.optional(),where:Wa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),cAt=t.object({where:Wa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),uAt=t.object({where:Wa.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:aC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ue}).strict(),sAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ue}).strict(),dAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),zAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),DK=t.object({select:Rz.optional(),include:Wz.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),mAt=t.object({where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),bAt=t.object({where:Ze.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:iC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Yt}).strict(),IAt=t.object({select:Rz.optional(),include:Wz.optional(),where:Yt}).strict(),gAt=t.object({select:xz.optional(),include:kz.optional(),where:Ra.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),CAt=t.object({select:xz.optional(),include:kz.optional(),where:Ra.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),rN=t.object({select:xz.optional(),include:kz.optional(),where:Ra.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),AAt=t.object({where:Ra.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),SAt=t.object({where:Ra.optional(),orderBy:t.union([NV.array(),NV]).optional(),by:lC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TAt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),PAt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),UAt=t.object({select:Mz.optional(),include:jz.optional(),where:At.optional(),orderBy:t.union([Ol.array(),Ol]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),WAt=t.object({select:Mz.optional(),include:jz.optional(),where:At.optional(),orderBy:t.union([Ol.array(),Ol]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),tg=t.object({select:Mz.optional(),include:jz.optional(),where:At.optional(),orderBy:t.union([Ol.array(),Ol]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),RAt=t.object({where:At.optional(),orderBy:t.union([Ol.array(),Ol]).optional(),cursor:k.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),kAt=t.object({where:At.optional(),orderBy:t.union([BV.array(),BV]).optional(),by:rC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xAt=t.object({select:Mz.optional(),include:jz.optional(),where:k}).strict(),jAt=t.object({select:Mz.optional(),include:jz.optional(),where:k}).strict(),MAt=t.object({select:vz.optional(),include:Zz.optional(),where:qe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),ZAt=t.object({select:vz.optional(),include:Zz.optional(),where:qe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),vAt=t.object({select:vz.optional(),include:Zz.optional(),where:qe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),OAt=t.object({where:qe.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fAt=t.object({where:qe.optional(),orderBy:t.union([qV.array(),qV]).optional(),by:pC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wAt=t.object({select:vz.optional(),include:Zz.optional(),where:ql}).strict(),NAt=t.object({select:vz.optional(),include:Zz.optional(),where:ql}).strict(),BAt=t.object({select:fz.optional(),include:Oz.optional(),where:ka.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),qAt=t.object({select:fz.optional(),include:Oz.optional(),where:ka.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),_K=t.object({select:fz.optional(),include:Oz.optional(),where:ka.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),FAt=t.object({where:ka.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),DAt=t.object({where:ka.optional(),orderBy:t.union([FV.array(),FV]).optional(),by:cC.array(),having:NA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_At=t.object({select:fz.optional(),include:Oz.optional(),where:We}).strict(),EAt=t.object({select:fz.optional(),include:Oz.optional(),where:We}).strict(),LAt=t.object({select:Nz.optional(),include:wz.optional(),where:xa.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),VAt=t.object({select:Nz.optional(),include:wz.optional(),where:xa.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),EK=t.object({select:Nz.optional(),include:wz.optional(),where:xa.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),HAt=t.object({where:xa.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),QAt=t.object({where:xa.optional(),orderBy:t.union([DV.array(),DV]).optional(),by:uC.array(),having:BA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),YAt=t.object({select:Nz.optional(),include:wz.optional(),where:Re}).strict(),GAt=t.object({select:Nz.optional(),include:wz.optional(),where:Re}).strict(),$At=t.object({select:Rs.optional(),include:Ws.optional(),data:t.union([p0,c0])}).strict(),JAt=t.object({select:Rs.optional(),include:Ws.optional(),where:wl,create:t.union([p0,c0]),update:t.union([u0,y0])}).strict(),KAt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),XAt=t.object({data:t.union([$T,$T.array()]),skipDuplicates:t.boolean().optional()}).strict(),tSt=t.object({select:Rs.optional(),include:Ws.optional(),where:wl}).strict(),eSt=t.object({select:Rs.optional(),include:Ws.optional(),data:t.union([u0,y0]),where:wl}).strict(),oSt=t.object({data:t.union([s0,d0]),where:we.optional(),limit:t.number().optional()}).strict(),nSt=t.object({data:t.union([s0,d0]),where:we.optional(),limit:t.number().optional()}).strict(),aSt=t.object({where:we.optional(),limit:t.number().optional()}).strict(),iSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([z0,m0])}).strict(),lSt=t.object({select:xs.optional(),include:ks.optional(),where:de,create:t.union([z0,m0]),update:t.union([b0,h0])}).strict(),rSt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),pSt=t.object({data:t.union([JT,JT.array()]),skipDuplicates:t.boolean().optional()}).strict(),cSt=t.object({select:xs.optional(),include:ks.optional(),where:de}).strict(),uSt=t.object({select:xs.optional(),include:ks.optional(),data:t.union([b0,h0]),where:de}).strict(),ySt=t.object({data:t.union([PN,I0]),where:Xn.optional(),limit:t.number().optional()}).strict(),sSt=t.object({data:t.union([PN,I0]),where:Xn.optional(),limit:t.number().optional()}).strict(),dSt=t.object({where:Xn.optional(),limit:t.number().optional()}).strict(),zSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([g0,C0])}).strict(),mSt=t.object({select:Ms.optional(),include:js.optional(),where:Nl,create:t.union([g0,C0]),update:t.union([A0,S0])}).strict(),bSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),hSt=t.object({data:t.union([KT,KT.array()]),skipDuplicates:t.boolean().optional()}).strict(),ISt=t.object({select:Ms.optional(),include:js.optional(),where:Nl}).strict(),gSt=t.object({select:Ms.optional(),include:js.optional(),data:t.union([A0,S0]),where:Nl}).strict(),CSt=t.object({data:t.union([T0,P0]),where:Ne.optional(),limit:t.number().optional()}).strict(),ASt=t.object({data:t.union([T0,P0]),where:Ne.optional(),limit:t.number().optional()}).strict(),SSt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),TSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([U0,W0])}).strict(),PSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze,create:t.union([U0,W0]),update:t.union([R0,k0])}).strict(),USt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),WSt=t.object({data:t.union([XT,XT.array()]),skipDuplicates:t.boolean().optional()}).strict(),RSt=t.object({select:vs.optional(),include:Zs.optional(),where:ze}).strict(),kSt=t.object({select:vs.optional(),include:Zs.optional(),data:t.union([R0,k0]),where:ze}).strict(),xSt=t.object({data:t.union([UN,x0]),where:ta.optional(),limit:t.number().optional()}).strict(),jSt=t.object({data:t.union([UN,x0]),where:ta.optional(),limit:t.number().optional()}).strict(),MSt=t.object({where:ta.optional(),limit:t.number().optional()}).strict(),ZSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([j0,M0])}).strict(),vSt=t.object({select:fs.optional(),include:Os.optional(),where:me,create:t.union([j0,M0]),update:t.union([Z0,v0])}).strict(),OSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fSt=t.object({data:t.union([tP,tP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wSt=t.object({select:fs.optional(),include:Os.optional(),where:me}).strict(),NSt=t.object({select:fs.optional(),include:Os.optional(),data:t.union([Z0,v0]),where:me}).strict(),BSt=t.object({data:t.union([WN,O0]),where:ea.optional(),limit:t.number().optional()}).strict(),qSt=t.object({data:t.union([WN,O0]),where:ea.optional(),limit:t.number().optional()}).strict(),FSt=t.object({where:ea.optional(),limit:t.number().optional()}).strict(),DSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([f0,w0])}).strict(),_St=t.object({select:Ns.optional(),include:ws.optional(),where:be,create:t.union([f0,w0]),update:t.union([N0,B0])}).strict(),ESt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LSt=t.object({data:t.union([eP,eP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VSt=t.object({select:Ns.optional(),include:ws.optional(),where:be}).strict(),HSt=t.object({select:Ns.optional(),include:ws.optional(),data:t.union([N0,B0]),where:be}).strict(),QSt=t.object({data:t.union([RN,q0]),where:oa.optional(),limit:t.number().optional()}).strict(),YSt=t.object({data:t.union([RN,q0]),where:oa.optional(),limit:t.number().optional()}).strict(),GSt=t.object({where:oa.optional(),limit:t.number().optional()}).strict(),$St=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([F0,D0])}).strict(),JSt=t.object({select:qs.optional(),include:Bs.optional(),where:he,create:t.union([F0,D0]),update:t.union([_0,E0])}).strict(),KSt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XSt=t.object({data:t.union([oP,oP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tTt=t.object({select:qs.optional(),include:Bs.optional(),where:he}).strict(),eTt=t.object({select:qs.optional(),include:Bs.optional(),data:t.union([_0,E0]),where:he}).strict(),oTt=t.object({data:t.union([kN,L0]),where:na.optional(),limit:t.number().optional()}).strict(),nTt=t.object({data:t.union([kN,L0]),where:na.optional(),limit:t.number().optional()}).strict(),aTt=t.object({where:na.optional(),limit:t.number().optional()}).strict(),iTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([V0,H0])}).strict(),lTt=t.object({select:Ds.optional(),include:Fs.optional(),where:zt,create:t.union([V0,H0]),update:t.union([Q0,Y0])}).strict(),rTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pTt=t.object({data:t.union([nP,nP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cTt=t.object({select:Ds.optional(),include:Fs.optional(),where:zt}).strict(),uTt=t.object({select:Ds.optional(),include:Fs.optional(),data:t.union([Q0,Y0]),where:zt}).strict(),yTt=t.object({data:t.union([Oj,G0]),where:aa.optional(),limit:t.number().optional()}).strict(),sTt=t.object({data:t.union([Oj,G0]),where:aa.optional(),limit:t.number().optional()}).strict(),dTt=t.object({where:aa.optional(),limit:t.number().optional()}).strict(),zTt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([$0,J0])}).strict(),mTt=t.object({select:Es.optional(),include:_s.optional(),where:Kt,create:t.union([$0,J0]),update:t.union([K0,X0])}).strict(),bTt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hTt=t.object({data:t.union([aP,aP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ITt=t.object({select:Es.optional(),include:_s.optional(),where:Kt}).strict(),gTt=t.object({select:Es.optional(),include:_s.optional(),data:t.union([K0,X0]),where:Kt}).strict(),CTt=t.object({data:t.union([xN,tY]),where:ve.optional(),limit:t.number().optional()}).strict(),ATt=t.object({data:t.union([xN,tY]),where:ve.optional(),limit:t.number().optional()}).strict(),STt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),TTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([eY,oY])}).strict(),PTt=t.object({select:Vs.optional(),include:Ls.optional(),where:w,create:t.union([eY,oY]),update:t.union([nY,aY])}).strict(),UTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WTt=t.object({data:t.union([iP,iP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RTt=t.object({select:Vs.optional(),include:Ls.optional(),where:w}).strict(),kTt=t.object({select:Vs.optional(),include:Ls.optional(),data:t.union([nY,aY]),where:w}).strict(),xTt=t.object({data:t.union([CT,iY]),where:ne.optional(),limit:t.number().optional()}).strict(),jTt=t.object({data:t.union([CT,iY]),where:ne.optional(),limit:t.number().optional()}).strict(),MTt=t.object({where:ne.optional(),limit:t.number().optional()}).strict(),ZTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([lY,rY])}).strict(),vTt=t.object({select:Qs.optional(),include:Hs.optional(),where:Vt,create:t.union([lY,rY]),update:t.union([pY,cY])}).strict(),OTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fTt=t.object({data:t.union([lP,lP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wTt=t.object({select:Qs.optional(),include:Hs.optional(),where:Vt}).strict(),NTt=t.object({select:Qs.optional(),include:Hs.optional(),data:t.union([pY,cY]),where:Vt}).strict(),BTt=t.object({data:t.union([jN,uY]),where:xe.optional(),limit:t.number().optional()}).strict(),qTt=t.object({data:t.union([jN,uY]),where:xe.optional(),limit:t.number().optional()}).strict(),FTt=t.object({where:xe.optional(),limit:t.number().optional()}).strict(),DTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([yY,sY])}).strict(),_Tt=t.object({select:Gs.optional(),include:Ys.optional(),where:B,create:t.union([yY,sY]),update:t.union([dY,zY])}).strict(),ETt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LTt=t.object({data:t.union([rP,rP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VTt=t.object({select:Gs.optional(),include:Ys.optional(),where:B}).strict(),HTt=t.object({select:Gs.optional(),include:Ys.optional(),data:t.union([dY,zY]),where:B}).strict(),QTt=t.object({data:t.union([AT,mY]),where:ia.optional(),limit:t.number().optional()}).strict(),YTt=t.object({data:t.union([AT,mY]),where:ia.optional(),limit:t.number().optional()}).strict(),GTt=t.object({where:ia.optional(),limit:t.number().optional()}).strict(),$Tt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([bY,hY])}).strict(),JTt=t.object({select:Js.optional(),include:$s.optional(),where:Ie,create:t.union([bY,hY]),update:t.union([IY,gY])}).strict(),KTt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XTt=t.object({data:t.union([pP,pP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tPt=t.object({select:Js.optional(),include:$s.optional(),where:Ie}).strict(),ePt=t.object({select:Js.optional(),include:$s.optional(),data:t.union([IY,gY]),where:Ie}).strict(),oPt=t.object({data:t.union([MN,CY]),where:la.optional(),limit:t.number().optional()}).strict(),nPt=t.object({data:t.union([MN,CY]),where:la.optional(),limit:t.number().optional()}).strict(),aPt=t.object({where:la.optional(),limit:t.number().optional()}).strict(),iPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([AY,SY])}).strict(),lPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ht,create:t.union([AY,SY]),update:t.union([TY,PY])}).strict(),rPt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pPt=t.object({data:t.union([cP,cP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cPt=t.object({select:Xs.optional(),include:Ks.optional(),where:Ht}).strict(),uPt=t.object({select:Xs.optional(),include:Ks.optional(),data:t.union([TY,PY]),where:Ht}).strict(),yPt=t.object({data:t.union([ZN,UY]),where:je.optional(),limit:t.number().optional()}).strict(),sPt=t.object({data:t.union([ZN,UY]),where:je.optional(),limit:t.number().optional()}).strict(),dPt=t.object({where:je.optional(),limit:t.number().optional()}).strict(),zPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([WY,RY])}).strict(),mPt=t.object({select:ed.optional(),include:td.optional(),where:Xt,create:t.union([WY,RY]),update:t.union([kY,xY])}).strict(),bPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hPt=t.object({data:t.union([uP,uP.array()]),skipDuplicates:t.boolean().optional()}).strict(),IPt=t.object({select:ed.optional(),include:td.optional(),where:Xt}).strict(),gPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([kY,xY]),where:Xt}).strict(),CPt=t.object({data:t.union([vN,jY]),where:Ve.optional(),limit:t.number().optional()}).strict(),APt=t.object({data:t.union([vN,jY]),where:Ve.optional(),limit:t.number().optional()}).strict(),SPt=t.object({where:Ve.optional(),limit:t.number().optional()}).strict(),TPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([MY,ZY])}).strict(),PPt=t.object({select:nd.optional(),include:od.optional(),where:at,create:t.union([MY,ZY]),update:t.union([vY,OY])}).strict(),UPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WPt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RPt=t.object({select:nd.optional(),include:od.optional(),where:at}).strict(),kPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([vY,OY]),where:at}).strict(),xPt=t.object({data:t.union([fj,fY]),where:He.optional(),limit:t.number().optional()}).strict(),jPt=t.object({data:t.union([fj,fY]),where:He.optional(),limit:t.number().optional()}).strict(),MPt=t.object({where:He.optional(),limit:t.number().optional()}).strict(),ZPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([wY,NY])}).strict(),vPt=t.object({select:id.optional(),include:ad.optional(),where:mt,create:t.union([wY,NY]),update:t.union([BY,qY])}).strict(),OPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fPt=t.object({data:t.union([sP,sP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wPt=t.object({select:id.optional(),include:ad.optional(),where:mt}).strict(),NPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([BY,qY]),where:mt}).strict(),BPt=t.object({data:t.union([wj,FY]),where:ra.optional(),limit:t.number().optional()}).strict(),qPt=t.object({data:t.union([wj,FY]),where:ra.optional(),limit:t.number().optional()}).strict(),FPt=t.object({where:ra.optional(),limit:t.number().optional()}).strict(),DPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([DY,_Y])}).strict(),_Pt=t.object({select:rd.optional(),include:ld.optional(),where:bt,create:t.union([DY,_Y]),update:t.union([EY,LY])}).strict(),EPt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LPt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VPt=t.object({select:rd.optional(),include:ld.optional(),where:bt}).strict(),HPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([EY,LY]),where:bt}).strict(),QPt=t.object({data:t.union([Nj,VY]),where:pa.optional(),limit:t.number().optional()}).strict(),YPt=t.object({data:t.union([Nj,VY]),where:pa.optional(),limit:t.number().optional()}).strict(),GPt=t.object({where:pa.optional(),limit:t.number().optional()}).strict(),$Pt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([HY,QY])}).strict(),JPt=t.object({select:cd.optional(),include:pd.optional(),where:q,create:t.union([HY,QY]),update:t.union([YY,GY])}).strict(),KPt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XPt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tUt=t.object({select:cd.optional(),include:pd.optional(),where:q}).strict(),eUt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([YY,GY]),where:q}).strict(),oUt=t.object({data:t.union([ST,$Y]),where:ca.optional(),limit:t.number().optional()}).strict(),nUt=t.object({data:t.union([ST,$Y]),where:ca.optional(),limit:t.number().optional()}).strict(),aUt=t.object({where:ca.optional(),limit:t.number().optional()}).strict(),iUt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([JY,KY])}).strict(),lUt=t.object({select:yd.optional(),include:ud.optional(),where:it,create:t.union([JY,KY]),update:t.union([XY,tG])}).strict(),rUt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pUt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cUt=t.object({select:yd.optional(),include:ud.optional(),where:it}).strict(),uUt=t.object({select:yd.optional(),include:ud.optional(),data:t.union([XY,tG]),where:it}).strict(),yUt=t.object({data:t.union([Bj,eG]),where:Oe.optional(),limit:t.number().optional()}).strict(),sUt=t.object({data:t.union([Bj,eG]),where:Oe.optional(),limit:t.number().optional()}).strict(),dUt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),zUt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([oG,nG])}).strict(),mUt=t.object({select:dd.optional(),include:sd.optional(),where:ge,create:t.union([oG,nG]),update:t.union([aG,iG])}).strict(),bUt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hUt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),IUt=t.object({select:dd.optional(),include:sd.optional(),where:ge}).strict(),gUt=t.object({select:dd.optional(),include:sd.optional(),data:t.union([aG,iG]),where:ge}).strict(),CUt=t.object({data:t.union([ON,lG]),where:ua.optional(),limit:t.number().optional()}).strict(),AUt=t.object({data:t.union([ON,lG]),where:ua.optional(),limit:t.number().optional()}).strict(),SUt=t.object({where:ua.optional(),limit:t.number().optional()}).strict(),TUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([rG,pG])}).strict(),PUt=t.object({select:md.optional(),include:zd.optional(),where:F,create:t.union([rG,pG]),update:t.union([cG,uG])}).strict(),UUt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WUt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RUt=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),kUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([cG,uG]),where:F}).strict(),xUt=t.object({data:t.union([TT,yG]),where:ya.optional(),limit:t.number().optional()}).strict(),jUt=t.object({data:t.union([TT,yG]),where:ya.optional(),limit:t.number().optional()}).strict(),MUt=t.object({where:ya.optional(),limit:t.number().optional()}).strict(),ZUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([sG,dG])}).strict(),vUt=t.object({select:hd.optional(),include:bd.optional(),where:D,create:t.union([sG,dG]),update:t.union([zG,mG])}).strict(),OUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fUt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wUt=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),NUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([zG,mG]),where:D}).strict(),BUt=t.object({data:t.union([PT,bG]),where:sa.optional(),limit:t.number().optional()}).strict(),qUt=t.object({data:t.union([PT,bG]),where:sa.optional(),limit:t.number().optional()}).strict(),FUt=t.object({where:sa.optional(),limit:t.number().optional()}).strict(),DUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([hG,IG])}).strict(),_Ut=t.object({select:gd.optional(),include:Id.optional(),where:lt,create:t.union([hG,IG]),update:t.union([gG,CG])}).strict(),EUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LUt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VUt=t.object({select:gd.optional(),include:Id.optional(),where:lt}).strict(),HUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([gG,CG]),where:lt}).strict(),QUt=t.object({data:t.union([qj,AG]),where:Qe.optional(),limit:t.number().optional()}).strict(),YUt=t.object({data:t.union([qj,AG]),where:Qe.optional(),limit:t.number().optional()}).strict(),GUt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),$Ut=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([SG,TG])}).strict(),JUt=t.object({select:Ad.optional(),include:Cd.optional(),where:_,create:t.union([SG,TG]),update:t.union([PG,UG])}).strict(),KUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XUt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tWt=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),eWt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([PG,UG]),where:_}).strict(),oWt=t.object({data:t.union([UT,WG]),where:da.optional(),limit:t.number().optional()}).strict(),nWt=t.object({data:t.union([UT,WG]),where:da.optional(),limit:t.number().optional()}).strict(),aWt=t.object({where:da.optional(),limit:t.number().optional()}).strict(),iWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([RG,kG])}).strict(),lWt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce,create:t.union([RG,kG]),update:t.union([xG,jG])}).strict(),rWt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pWt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cWt=t.object({select:Td.optional(),include:Sd.optional(),where:Ce}).strict(),uWt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([xG,jG]),where:Ce}).strict(),yWt=t.object({data:t.union([fN,MG]),where:za.optional(),limit:t.number().optional()}).strict(),sWt=t.object({data:t.union([fN,MG]),where:za.optional(),limit:t.number().optional()}).strict(),dWt=t.object({where:za.optional(),limit:t.number().optional()}).strict(),zWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([ZG,vG])}).strict(),mWt=t.object({select:Ud.optional(),include:Pd.optional(),where:Ae,create:t.union([ZG,vG]),update:t.union([OG,fG])}).strict(),bWt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hWt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),IWt=t.object({select:Ud.optional(),include:Pd.optional(),where:Ae}).strict(),gWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([OG,fG]),where:Ae}).strict(),CWt=t.object({data:t.union([wN,wG]),where:ma.optional(),limit:t.number().optional()}).strict(),AWt=t.object({data:t.union([wN,wG]),where:ma.optional(),limit:t.number().optional()}).strict(),SWt=t.object({where:ma.optional(),limit:t.number().optional()}).strict(),TWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([NG,BG])}).strict(),PWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Se,create:t.union([NG,BG]),update:t.union([qG,FG])}).strict(),UWt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WWt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RWt=t.object({select:Rd.optional(),include:Wd.optional(),where:Se}).strict(),kWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([qG,FG]),where:Se}).strict(),xWt=t.object({data:t.union([NN,DG]),where:ba.optional(),limit:t.number().optional()}).strict(),jWt=t.object({data:t.union([NN,DG]),where:ba.optional(),limit:t.number().optional()}).strict(),MWt=t.object({where:ba.optional(),limit:t.number().optional()}).strict(),ZWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([_G,EG])}).strict(),vWt=t.object({select:xd.optional(),include:kd.optional(),where:E,create:t.union([_G,EG]),update:t.union([LG,VG])}).strict(),OWt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fWt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wWt=t.object({select:xd.optional(),include:kd.optional(),where:E}).strict(),NWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([LG,VG]),where:E}).strict(),BWt=t.object({data:t.union([WT,HG]),where:ha.optional(),limit:t.number().optional()}).strict(),qWt=t.object({data:t.union([WT,HG]),where:ha.optional(),limit:t.number().optional()}).strict(),FWt=t.object({where:ha.optional(),limit:t.number().optional()}).strict(),DWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([QG,YG])}).strict(),_Wt=t.object({select:Md.optional(),include:jd.optional(),where:tp,create:t.union([QG,YG]),update:t.union([GG,$G])}).strict(),EWt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LWt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VWt=t.object({select:Md.optional(),include:jd.optional(),where:tp}).strict(),HWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([GG,$G]),where:tp}).strict(),QWt=t.object({data:t.union([JG,KG]),where:ro.optional(),limit:t.number().optional()}).strict(),YWt=t.object({data:t.union([JG,KG]),where:ro.optional(),limit:t.number().optional()}).strict(),GWt=t.object({where:ro.optional(),limit:t.number().optional()}).strict(),$Wt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([XG,t1])}).strict(),JWt=t.object({select:vd.optional(),include:Zd.optional(),where:ht,create:t.union([XG,t1]),update:t.union([e1,o1])}).strict(),KWt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XWt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tRt=t.object({select:vd.optional(),include:Zd.optional(),where:ht}).strict(),eRt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([e1,o1]),where:ht}).strict(),oRt=t.object({data:t.union([Fj,n1]),where:Ia.optional(),limit:t.number().optional()}).strict(),nRt=t.object({data:t.union([Fj,n1]),where:Ia.optional(),limit:t.number().optional()}).strict(),aRt=t.object({where:Ia.optional(),limit:t.number().optional()}).strict(),iRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([a1,i1])}).strict(),lRt=t.object({select:fd.optional(),include:Od.optional(),where:Te,create:t.union([a1,i1]),update:t.union([l1,r1])}).strict(),rRt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pRt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cRt=t.object({select:fd.optional(),include:Od.optional(),where:Te}).strict(),uRt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([l1,r1]),where:Te}).strict(),yRt=t.object({data:t.union([BN,p1]),where:ga.optional(),limit:t.number().optional()}).strict(),sRt=t.object({data:t.union([BN,p1]),where:ga.optional(),limit:t.number().optional()}).strict(),dRt=t.object({where:ga.optional(),limit:t.number().optional()}).strict(),zRt=t.object({select:Fm.optional(),data:t.union([c1,u1])}).strict(),mRt=t.object({select:Fm.optional(),where:Dm,create:t.union([c1,u1]),update:t.union([y1,s1])}).strict(),bRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hRt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),IRt=t.object({select:Fm.optional(),where:Dm}).strict(),gRt=t.object({select:Fm.optional(),data:t.union([y1,s1]),where:Dm}).strict(),CRt=t.object({data:t.union([d1,z1]),where:yl.optional(),limit:t.number().optional()}).strict(),ARt=t.object({data:t.union([d1,z1]),where:yl.optional(),limit:t.number().optional()}).strict(),SRt=t.object({where:yl.optional(),limit:t.number().optional()}).strict(),TRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([m1,b1])}).strict(),PRt=t.object({select:Nd.optional(),include:wd.optional(),where:jl,create:t.union([m1,b1]),update:t.union([h1,I1])}).strict(),URt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WRt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RRt=t.object({select:Nd.optional(),include:wd.optional(),where:jl}).strict(),kRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([h1,I1]),where:jl}).strict(),xRt=t.object({data:t.union([g1,C1]),where:ke.optional(),limit:t.number().optional()}).strict(),jRt=t.object({data:t.union([g1,C1]),where:ke.optional(),limit:t.number().optional()}).strict(),MRt=t.object({where:ke.optional(),limit:t.number().optional()}).strict(),ZRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([A1,S1])}).strict(),vRt=t.object({select:qd.optional(),include:Bd.optional(),where:Yn,create:t.union([A1,S1]),update:t.union([T1,P1])}).strict(),ORt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fRt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wRt=t.object({select:qd.optional(),include:Bd.optional(),where:Yn}).strict(),NRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([T1,P1]),where:Yn}).strict(),BRt=t.object({data:t.union([U1,W1]),where:Bt.optional(),limit:t.number().optional()}).strict(),qRt=t.object({data:t.union([U1,W1]),where:Bt.optional(),limit:t.number().optional()}).strict(),FRt=t.object({where:Bt.optional(),limit:t.number().optional()}).strict(),DRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([R1,k1])}).strict(),_Rt=t.object({select:Dd.optional(),include:Fd.optional(),where:J,create:t.union([R1,k1]),update:t.union([x1,j1])}).strict(),ERt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),LRt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),VRt=t.object({select:Dd.optional(),include:Fd.optional(),where:J}).strict(),HRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([x1,j1]),where:J}).strict(),QRt=t.object({data:t.union([qN,M1]),where:N.optional(),limit:t.number().optional()}).strict(),YRt=t.object({data:t.union([qN,M1]),where:N.optional(),limit:t.number().optional()}).strict(),GRt=t.object({where:N.optional(),limit:t.number().optional()}).strict(),$Rt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([Z1,v1])}).strict(),JRt=t.object({select:Ed.optional(),include:_d.optional(),where:j,create:t.union([Z1,v1]),update:t.union([O1,f1])}).strict(),KRt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),XRt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tkt=t.object({select:Ed.optional(),include:_d.optional(),where:j}).strict(),ekt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([O1,f1]),where:j}).strict(),okt=t.object({data:t.union([Dj,w1]),where:Z.optional(),limit:t.number().optional()}).strict(),nkt=t.object({data:t.union([Dj,w1]),where:Z.optional(),limit:t.number().optional()}).strict(),akt=t.object({where:Z.optional(),limit:t.number().optional()}).strict(),ikt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([N1,B1])}).strict(),lkt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe,create:t.union([N1,B1]),update:t.union([q1,F1])}).strict(),rkt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pkt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ckt=t.object({select:Vd.optional(),include:Ld.optional(),where:Pe}).strict(),ukt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([q1,F1]),where:Pe}).strict(),ykt=t.object({data:t.union([FN,D1]),where:Ca.optional(),limit:t.number().optional()}).strict(),skt=t.object({data:t.union([FN,D1]),where:Ca.optional(),limit:t.number().optional()}).strict(),dkt=t.object({where:Ca.optional(),limit:t.number().optional()}).strict(),zkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([_1,E1])}).strict(),mkt=t.object({select:Qd.optional(),include:Hd.optional(),where:te,create:t.union([_1,E1]),update:t.union([L1,V1])}).strict(),bkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hkt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ikt=t.object({select:Qd.optional(),include:Hd.optional(),where:te}).strict(),gkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([L1,V1]),where:te}).strict(),Ckt=t.object({data:t.union([DN,H1]),where:Ye.optional(),limit:t.number().optional()}).strict(),Akt=t.object({data:t.union([DN,H1]),where:Ye.optional(),limit:t.number().optional()}).strict(),Skt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),Tkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([Q1,Y1])}).strict(),Pkt=t.object({select:Gd.optional(),include:Yd.optional(),where:C,create:t.union([Q1,Y1]),update:t.union([G1,$1])}).strict(),Ukt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Wkt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Rkt=t.object({select:Gd.optional(),include:Yd.optional(),where:C}).strict(),kkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([G1,$1]),where:C}).strict(),xkt=t.object({data:t.union([gI,J1]),where:v.optional(),limit:t.number().optional()}).strict(),jkt=t.object({data:t.union([gI,J1]),where:v.optional(),limit:t.number().optional()}).strict(),Mkt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),Zkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([K1,X1])}).strict(),vkt=t.object({select:Jd.optional(),include:$d.optional(),where:G,create:t.union([K1,X1]),update:t.union([t9,e9])}).strict(),Okt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fkt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wkt=t.object({select:Jd.optional(),include:$d.optional(),where:G}).strict(),Nkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([t9,e9]),where:G}).strict(),Bkt=t.object({data:t.union([_j,o9]),where:kt.optional(),limit:t.number().optional()}).strict(),qkt=t.object({data:t.union([_j,o9]),where:kt.optional(),limit:t.number().optional()}).strict(),Fkt=t.object({where:kt.optional(),limit:t.number().optional()}).strict(),Dkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([n9,a9])}).strict(),_kt=t.object({select:Xd.optional(),include:Kd.optional(),where:L,create:t.union([n9,a9]),update:t.union([i9,l9])}).strict(),Ekt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Lkt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Vkt=t.object({select:Xd.optional(),include:Kd.optional(),where:L}).strict(),Hkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([i9,l9]),where:L}).strict(),Qkt=t.object({data:t.union([RT,r9]),where:Aa.optional(),limit:t.number().optional()}).strict(),Ykt=t.object({data:t.union([RT,r9]),where:Aa.optional(),limit:t.number().optional()}).strict(),Gkt=t.object({where:Aa.optional(),limit:t.number().optional()}).strict(),$kt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([p9,c9])}).strict(),Jkt=t.object({select:ez.optional(),include:tz.optional(),where:rt,create:t.union([p9,c9]),update:t.union([u9,y9])}).strict(),Kkt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Xkt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),txt=t.object({select:ez.optional(),include:tz.optional(),where:rt}).strict(),ext=t.object({select:ez.optional(),include:tz.optional(),data:t.union([u9,y9]),where:rt}).strict(),oxt=t.object({data:t.union([Ej,s9]),where:fe.optional(),limit:t.number().optional()}).strict(),nxt=t.object({data:t.union([Ej,s9]),where:fe.optional(),limit:t.number().optional()}).strict(),axt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),ixt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([d9,z9])}).strict(),lxt=t.object({select:nz.optional(),include:oz.optional(),where:f,create:t.union([d9,z9]),update:t.union([m9,b9])}).strict(),rxt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pxt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cxt=t.object({select:nz.optional(),include:oz.optional(),where:f}).strict(),uxt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([m9,b9]),where:f}).strict(),yxt=t.object({data:t.union([kT,h9]),where:ae.optional(),limit:t.number().optional()}).strict(),sxt=t.object({data:t.union([kT,h9]),where:ae.optional(),limit:t.number().optional()}).strict(),dxt=t.object({where:ae.optional(),limit:t.number().optional()}).strict(),zxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([I9,g9])}).strict(),mxt=t.object({select:iz.optional(),include:az.optional(),where:V,create:t.union([I9,g9]),update:t.union([C9,A9])}).strict(),bxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hxt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ixt=t.object({select:iz.optional(),include:az.optional(),where:V}).strict(),gxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([C9,A9]),where:V}).strict(),Cxt=t.object({data:t.union([xT,S9]),where:Sa.optional(),limit:t.number().optional()}).strict(),Axt=t.object({data:t.union([xT,S9]),where:Sa.optional(),limit:t.number().optional()}).strict(),Sxt=t.object({where:Sa.optional(),limit:t.number().optional()}).strict(),Txt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([T9,P9])}).strict(),Pxt=t.object({select:rz.optional(),include:lz.optional(),where:pt,create:t.union([T9,P9]),update:t.union([U9,W9])}).strict(),Uxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Wxt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Rxt=t.object({select:rz.optional(),include:lz.optional(),where:pt}).strict(),kxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([U9,W9]),where:pt}).strict(),xxt=t.object({data:t.union([Lj,R9]),where:Ge.optional(),limit:t.number().optional()}).strict(),jxt=t.object({data:t.union([Lj,R9]),where:Ge.optional(),limit:t.number().optional()}).strict(),Mxt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),Zxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([k9,x9])}).strict(),vxt=t.object({select:cz.optional(),include:pz.optional(),where:It,create:t.union([k9,x9]),update:t.union([j9,M9])}).strict(),Oxt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),fxt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),wxt=t.object({select:cz.optional(),include:pz.optional(),where:It}).strict(),Nxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([j9,M9]),where:It}).strict(),Bxt=t.object({data:t.union([Vj,Z9]),where:Ta.optional(),limit:t.number().optional()}).strict(),qxt=t.object({data:t.union([Vj,Z9]),where:Ta.optional(),limit:t.number().optional()}).strict(),Fxt=t.object({where:Ta.optional(),limit:t.number().optional()}).strict(),Dxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([v9,O9])}).strict(),_xt=t.object({select:yz.optional(),include:uz.optional(),where:Bl,create:t.union([v9,O9]),update:t.union([f9,w9])}).strict(),Ext=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Lxt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Vxt=t.object({select:yz.optional(),include:uz.optional(),where:Bl}).strict(),Hxt=t.object({select:yz.optional(),include:uz.optional(),data:t.union([f9,w9]),where:Bl}).strict(),Qxt=t.object({data:t.union([N9,B9]),where:Be.optional(),limit:t.number().optional()}).strict(),Yxt=t.object({data:t.union([N9,B9]),where:Be.optional(),limit:t.number().optional()}).strict(),Gxt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),$xt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([q9,F9])}).strict(),Jxt=t.object({select:dz.optional(),include:sz.optional(),where:ct,create:t.union([q9,F9]),update:t.union([D9,_9])}).strict(),Kxt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Xxt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),tjt=t.object({select:dz.optional(),include:sz.optional(),where:ct}).strict(),ejt=t.object({select:dz.optional(),include:sz.optional(),data:t.union([D9,_9]),where:ct}).strict(),ojt=t.object({data:t.union([Hj,E9]),where:$e.optional(),limit:t.number().optional()}).strict(),njt=t.object({data:t.union([Hj,E9]),where:$e.optional(),limit:t.number().optional()}).strict(),ajt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),ijt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([L9,V9])}).strict(),ljt=t.object({select:mz.optional(),include:zz.optional(),where:gt,create:t.union([L9,V9]),update:t.union([H9,Q9])}).strict(),rjt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pjt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cjt=t.object({select:mz.optional(),include:zz.optional(),where:gt}).strict(),ujt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([H9,Q9]),where:gt}).strict(),yjt=t.object({data:t.union([Qj,Y9]),where:Pa.optional(),limit:t.number().optional()}).strict(),sjt=t.object({data:t.union([Qj,Y9]),where:Pa.optional(),limit:t.number().optional()}).strict(),djt=t.object({where:Pa.optional(),limit:t.number().optional()}).strict(),zjt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([G9,$9])}).strict(),mjt=t.object({select:hz.optional(),include:bz.optional(),where:Qt,create:t.union([G9,$9]),update:t.union([J9,K9])}).strict(),bjt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hjt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ijt=t.object({select:hz.optional(),include:bz.optional(),where:Qt}).strict(),gjt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([J9,K9]),where:Qt}).strict(),Cjt=t.object({data:t.union([_N,X9]),where:Me.optional(),limit:t.number().optional()}).strict(),Ajt=t.object({data:t.union([_N,X9]),where:Me.optional(),limit:t.number().optional()}).strict(),Sjt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),Tjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([t$,e$])}).strict(),Pjt=t.object({select:gz.optional(),include:Iz.optional(),where:ee,create:t.union([t$,e$]),update:t.union([o$,n$])}).strict(),Ujt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Wjt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Rjt=t.object({select:gz.optional(),include:Iz.optional(),where:ee}).strict(),kjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([o$,n$]),where:ee}).strict(),xjt=t.object({data:t.union([EN,a$]),where:Je.optional(),limit:t.number().optional()}).strict(),jjt=t.object({data:t.union([EN,a$]),where:Je.optional(),limit:t.number().optional()}).strict(),Mjt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),Zjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([i$,l$])}).strict(),vjt=t.object({select:Az.optional(),include:Cz.optional(),where:oe,create:t.union([i$,l$]),update:t.union([r$,p$])}).strict(),Ojt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),fjt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),wjt=t.object({select:Az.optional(),include:Cz.optional(),where:oe}).strict(),Njt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([r$,p$]),where:oe}).strict(),Bjt=t.object({data:t.union([LN,c$]),where:Ke.optional(),limit:t.number().optional()}).strict(),qjt=t.object({data:t.union([LN,c$]),where:Ke.optional(),limit:t.number().optional()}).strict(),Fjt=t.object({where:Ke.optional(),limit:t.number().optional()}).strict(),Djt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([u$,y$])}).strict(),_jt=t.object({select:Tz.optional(),include:Sz.optional(),where:H,create:t.union([u$,y$]),update:t.union([s$,d$])}).strict(),Ejt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Ljt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Vjt=t.object({select:Tz.optional(),include:Sz.optional(),where:H}).strict(),Hjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([s$,d$]),where:H}).strict(),Qjt=t.object({data:t.union([jT,z$]),where:Ua.optional(),limit:t.number().optional()}).strict(),Yjt=t.object({data:t.union([jT,z$]),where:Ua.optional(),limit:t.number().optional()}).strict(),Gjt=t.object({where:Ua.optional(),limit:t.number().optional()}).strict(),$jt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([m$,b$])}).strict(),Jjt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ue,create:t.union([m$,b$]),update:t.union([h$,I$])}).strict(),Kjt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Xjt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),tMt=t.object({select:Uz.optional(),include:Pz.optional(),where:Ue}).strict(),eMt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([h$,I$]),where:Ue}).strict(),oMt=t.object({data:t.union([VN,g$]),where:Wa.optional(),limit:t.number().optional()}).strict(),nMt=t.object({data:t.union([VN,g$]),where:Wa.optional(),limit:t.number().optional()}).strict(),aMt=t.object({where:Wa.optional(),limit:t.number().optional()}).strict(),iMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([C$,A$])}).strict(),lMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Yt,create:t.union([C$,A$]),update:t.union([S$,T$])}).strict(),rMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),pMt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),cMt=t.object({select:Rz.optional(),include:Wz.optional(),where:Yt}).strict(),uMt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([S$,T$]),where:Yt}).strict(),yMt=t.object({data:t.union([HN,P$]),where:Ze.optional(),limit:t.number().optional()}).strict(),sMt=t.object({data:t.union([HN,P$]),where:Ze.optional(),limit:t.number().optional()}).strict(),dMt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),zMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([U$,W$])}).strict(),mMt=t.object({select:xz.optional(),include:kz.optional(),where:Ct,create:t.union([U$,W$]),update:t.union([R$,k$])}).strict(),bMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),hMt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),IMt=t.object({select:xz.optional(),include:kz.optional(),where:Ct}).strict(),gMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([R$,k$]),where:Ct}).strict(),CMt=t.object({data:t.union([Yj,x$]),where:Ra.optional(),limit:t.number().optional()}).strict(),AMt=t.object({data:t.union([Yj,x$]),where:Ra.optional(),limit:t.number().optional()}).strict(),SMt=t.object({where:Ra.optional(),limit:t.number().optional()}).strict(),TMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([j$,M$])}).strict(),PMt=t.object({select:Mz.optional(),include:jz.optional(),where:k,create:t.union([j$,M$]),update:t.union([Z$,v$])}).strict(),UMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),WMt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),RMt=t.object({select:Mz.optional(),include:jz.optional(),where:k}).strict(),kMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([Z$,v$]),where:k}).strict(),xMt=t.object({data:t.union([dS,O$]),where:At.optional(),limit:t.number().optional()}).strict(),jMt=t.object({data:t.union([dS,O$]),where:At.optional(),limit:t.number().optional()}).strict(),MMt=t.object({where:At.optional(),limit:t.number().optional()}).strict(),ZMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([f$,w$])}).strict(),vMt=t.object({select:vz.optional(),include:Zz.optional(),where:ql,create:t.union([f$,w$]),update:t.union([N$,B$])}).strict(),OMt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),fMt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),wMt=t.object({select:vz.optional(),include:Zz.optional(),where:ql}).strict(),NMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([N$,B$]),where:ql}).strict(),BMt=t.object({data:t.union([q$,F$]),where:qe.optional(),limit:t.number().optional()}).strict(),qMt=t.object({data:t.union([q$,F$]),where:qe.optional(),limit:t.number().optional()}).strict(),FMt=t.object({where:qe.optional(),limit:t.number().optional()}).strict(),DMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([D$,_$])}).strict(),_Mt=t.object({select:fz.optional(),include:Oz.optional(),where:We,create:t.union([D$,_$]),update:t.union([E$,L$])}).strict(),EMt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),LMt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),VMt=t.object({select:fz.optional(),include:Oz.optional(),where:We}).strict(),HMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([E$,L$]),where:We}).strict(),QMt=t.object({data:t.union([QN,V$]),where:ka.optional(),limit:t.number().optional()}).strict(),YMt=t.object({data:t.union([QN,V$]),where:ka.optional(),limit:t.number().optional()}).strict(),GMt=t.object({where:ka.optional(),limit:t.number().optional()}).strict(),$Mt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([H$,Q$])}).strict(),JMt=t.object({select:Nz.optional(),include:wz.optional(),where:Re,create:t.union([H$,Q$]),update:t.union([Y$,G$])}).strict(),KMt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),XMt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),tZt=t.object({select:Nz.optional(),include:wz.optional(),where:Re}).strict(),eZt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([Y$,G$]),where:Re}).strict(),oZt=t.object({data:t.union([YN,$$]),where:xa.optional(),limit:t.number().optional()}).strict(),nZt=t.object({data:t.union([YN,$$]),where:xa.optional(),limit:t.number().optional()}).strict(),aZt=t.object({where:xa.optional(),limit:t.number().optional()}).strict();export{nst as zodSchemas};