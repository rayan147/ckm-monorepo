export*from'@prisma/client';var Iyt=Object.defineProperty;var gyt=(c,i)=>{for(var p in i)Iyt(c,p,{get:i[p],enumerable:true});};var hyt={};gyt(hyt,{AllergenAggregateArgsSchema:()=>MIt,AllergenArgsSchema:()=>YQ,AllergenAvgOrderByAggregateInputSchema:()=>Eot,AllergenCountOrderByAggregateInputSchema:()=>_ot,AllergenCountOutputTypeArgsSchema:()=>GQ,AllergenCountOutputTypeSelectSchema:()=>WX,AllergenCreateArgsSchema:()=>eRt,AllergenCreateInputSchema:()=>i1,AllergenCreateManyAndReturnArgsSchema:()=>aRt,AllergenCreateManyArgsSchema:()=>nRt,AllergenCreateManyInputSchema:()=>DP,AllergenCreateNestedOneWithoutIngredientsInputSchema:()=>B2,AllergenCreateOrConnectWithoutIngredientsInputSchema:()=>J6,AllergenCreateWithoutIngredientsInputSchema:()=>Qv,AllergenDeleteArgsSchema:()=>iRt,AllergenDeleteManyArgsSchema:()=>cRt,AllergenFindFirstArgsSchema:()=>kIt,AllergenFindFirstOrThrowArgsSchema:()=>xIt,AllergenFindManyArgsSchema:()=>jIt,AllergenFindUniqueArgsSchema:()=>vIt,AllergenFindUniqueOrThrowArgsSchema:()=>OIt,AllergenGroupByArgsSchema:()=>ZIt,AllergenIncludeSchema:()=>wd,AllergenMaxOrderByAggregateInputSchema:()=>Lot,AllergenMinOrderByAggregateInputSchema:()=>Vot,AllergenOrderByWithAggregationInputSchema:()=>PV,AllergenOrderByWithRelationInputSchema:()=>wm,AllergenScalarFieldEnumSchema:()=>_g,AllergenScalarRelationFilterSchema:()=>S4,AllergenScalarWhereWithAggregatesInputSchema:()=>bA,AllergenSchema:()=>azt,AllergenSelectSchema:()=>Nd,AllergenSumOrderByAggregateInputSchema:()=>Hot,AllergenUncheckedCreateInputSchema:()=>l1,AllergenUncheckedCreateWithoutIngredientsInputSchema:()=>Yv,AllergenUncheckedUpdateInputSchema:()=>p1,AllergenUncheckedUpdateManyInputSchema:()=>u1,AllergenUncheckedUpdateWithoutIngredientsInputSchema:()=>yE,AllergenUpdateArgsSchema:()=>lRt,AllergenUpdateInputSchema:()=>r1,AllergenUpdateManyAndReturnArgsSchema:()=>pRt,AllergenUpdateManyArgsSchema:()=>rRt,AllergenUpdateManyMutationInputSchema:()=>c1,AllergenUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>F2,AllergenUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>Gpt,AllergenUpdateWithoutIngredientsInputSchema:()=>sE,AllergenUpsertArgsSchema:()=>oRt,AllergenUpsertWithoutIngredientsInputSchema:()=>Ypt,AllergenWhereInputSchema:()=>co,AllergenWhereUniqueInputSchema:()=>np,AvailabilityAggregateArgsSchema:()=>yIt,AvailabilityArgsSchema:()=>Xzt,AvailabilityAvgOrderByAggregateInputSchema:()=>Wot,AvailabilityCountOrderByAggregateInputSchema:()=>Uot,AvailabilityCreateArgsSchema:()=>kWt,AvailabilityCreateInputSchema:()=>LG,AvailabilityCreateManyAndReturnArgsSchema:()=>MWt,AvailabilityCreateManyArgsSchema:()=>jWt,AvailabilityCreateManyInputSchema:()=>BP,AvailabilityCreateManyUserInputEnvelopeSchema:()=>OO,AvailabilityCreateManyUserInputSchema:()=>qH,AvailabilityCreateNestedManyWithoutUserInputSchema:()=>ii,AvailabilityCreateOrConnectWithoutUserInputSchema:()=>Ah,AvailabilityCreateWithoutUserInputSchema:()=>Pu,AvailabilityDeleteArgsSchema:()=>ZWt,AvailabilityDeleteManyArgsSchema:()=>wWt,AvailabilityFindFirstArgsSchema:()=>uIt,AvailabilityFindFirstOrThrowArgsSchema:()=>sIt,AvailabilityFindManyArgsSchema:()=>LK,AvailabilityFindUniqueArgsSchema:()=>zIt,AvailabilityFindUniqueOrThrowArgsSchema:()=>mIt,AvailabilityGroupByArgsSchema:()=>dIt,AvailabilityIncludeSchema:()=>jd,AvailabilityListRelationFilterSchema:()=>B4,AvailabilityMaxOrderByAggregateInputSchema:()=>Rot,AvailabilityMinOrderByAggregateInputSchema:()=>kot,AvailabilityOrderByRelationAggregateInputSchema:()=>Znt,AvailabilityOrderByWithAggregationInputSchema:()=>AV,AvailabilityOrderByWithRelationInputSchema:()=>hb,AvailabilityScalarFieldEnumSchema:()=>qg,AvailabilityScalarWhereInputSchema:()=>xp,AvailabilityScalarWhereWithAggregatesInputSchema:()=>dA,AvailabilitySchema:()=>ezt,AvailabilitySelectSchema:()=>Md,AvailabilitySumOrderByAggregateInputSchema:()=>xot,AvailabilityUncheckedCreateInputSchema:()=>VG,AvailabilityUncheckedCreateNestedManyWithoutUserInputSchema:()=>Ti,AvailabilityUncheckedCreateWithoutUserInputSchema:()=>Uu,AvailabilityUncheckedUpdateInputSchema:()=>QG,AvailabilityUncheckedUpdateManyInputSchema:()=>YG,AvailabilityUncheckedUpdateManyWithoutUserInputSchema:()=>dst,AvailabilityUncheckedUpdateManyWithoutUserNestedInputSchema:()=>rl,AvailabilityUncheckedUpdateWithoutUserInputSchema:()=>U7,AvailabilityUpdateArgsSchema:()=>vWt,AvailabilityUpdateInputSchema:()=>HG,AvailabilityUpdateManyAndReturnArgsSchema:()=>fWt,AvailabilityUpdateManyArgsSchema:()=>OWt,AvailabilityUpdateManyMutationInputSchema:()=>GN,AvailabilityUpdateManyWithWhereWithoutUserInputSchema:()=>wR,AvailabilityUpdateManyWithoutUserNestedInputSchema:()=>Ei,AvailabilityUpdateWithWhereUniqueWithoutUserInputSchema:()=>fR,AvailabilityUpdateWithoutUserInputSchema:()=>P7,AvailabilityUpsertArgsSchema:()=>xWt,AvailabilityUpsertWithWhereUniqueWithoutUserInputSchema:()=>OR,AvailabilityWhereInputSchema:()=>ga,AvailabilityWhereUniqueInputSchema:()=>Pe,BoolFieldUpdateOperationsInputSchema:()=>y,BoolFilterSchema:()=>mt,BoolWithAggregatesFilterSchema:()=>Jn,CategorySchema:()=>U,ChecklistCompleteAggregateArgsSchema:()=>tht,ChecklistCompleteArgsSchema:()=>_Q,ChecklistCompleteAvgOrderByAggregateInputSchema:()=>get,ChecklistCompleteCountOrderByAggregateInputSchema:()=>Iet,ChecklistCompleteCountOutputTypeArgsSchema:()=>EQ,ChecklistCompleteCountOutputTypeSelectSchema:()=>SX,ChecklistCompleteCreateArgsSchema:()=>NPt,ChecklistCompleteCreateInputSchema:()=>EY,ChecklistCompleteCreateManyAndReturnArgsSchema:()=>FPt,ChecklistCompleteCreateManyArgsSchema:()=>qPt,ChecklistCompleteCreateManyChecklistInputEnvelopeSchema:()=>FZ,ChecklistCompleteCreateManyChecklistInputSchema:()=>pH,ChecklistCompleteCreateManyCompletedByInputEnvelopeSchema:()=>NO,ChecklistCompleteCreateManyCompletedByInputSchema:()=>_H,ChecklistCompleteCreateManyInputSchema:()=>RP,ChecklistCompleteCreateNestedManyWithoutChecklistInputSchema:()=>nq,ChecklistCompleteCreateNestedManyWithoutCompletedByInputSchema:()=>pi,ChecklistCompleteCreateNestedOneWithoutItemsInputSchema:()=>x2,ChecklistCompleteCreateOrConnectWithoutChecklistInputSchema:()=>Fb,ChecklistCompleteCreateOrConnectWithoutCompletedByInputSchema:()=>Ph,ChecklistCompleteCreateOrConnectWithoutItemsInputSchema:()=>W6,ChecklistCompleteCreateWithoutChecklistInputSchema:()=>pc,ChecklistCompleteCreateWithoutCompletedByInputSchema:()=>ju,ChecklistCompleteCreateWithoutItemsInputSchema:()=>GZ,ChecklistCompleteDeleteArgsSchema:()=>DPt,ChecklistCompleteDeleteManyArgsSchema:()=>VPt,ChecklistCompleteFindFirstArgsSchema:()=>Kbt,ChecklistCompleteFindFirstOrThrowArgsSchema:()=>Xbt,ChecklistCompleteFindManyArgsSchema:()=>pN,ChecklistCompleteFindUniqueArgsSchema:()=>oht,ChecklistCompleteFindUniqueOrThrowArgsSchema:()=>nht,ChecklistCompleteGroupByArgsSchema:()=>eht,ChecklistCompleteIncludeSchema:()=>pd,ChecklistCompleteListRelationFilterSchema:()=>hM,ChecklistCompleteMaxOrderByAggregateInputSchema:()=>Cet,ChecklistCompleteMinOrderByAggregateInputSchema:()=>Aet,ChecklistCompleteOrderByRelationAggregateInputSchema:()=>d4,ChecklistCompleteOrderByWithAggregationInputSchema:()=>uV,ChecklistCompleteOrderByWithRelationInputSchema:()=>Om,ChecklistCompleteScalarFieldEnumSchema:()=>kg,ChecklistCompleteScalarRelationFilterSchema:()=>m4,ChecklistCompleteScalarWhereInputSchema:()=>Al,ChecklistCompleteScalarWhereWithAggregatesInputSchema:()=>oA,ChecklistCompleteSchema:()=>Ldt,ChecklistCompleteSelectSchema:()=>cd,ChecklistCompleteSumOrderByAggregateInputSchema:()=>Tet,ChecklistCompleteUncheckedCreateInputSchema:()=>LY,ChecklistCompleteUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>iq,ChecklistCompleteUncheckedCreateNestedManyWithoutCompletedByInputSchema:()=>Wi,ChecklistCompleteUncheckedCreateWithoutChecklistInputSchema:()=>cc,ChecklistCompleteUncheckedCreateWithoutCompletedByInputSchema:()=>Mu,ChecklistCompleteUncheckedCreateWithoutItemsInputSchema:()=>$Z,ChecklistCompleteUncheckedUpdateInputSchema:()=>HY,ChecklistCompleteUncheckedUpdateManyInputSchema:()=>QY,ChecklistCompleteUncheckedUpdateManyWithoutChecklistInputSchema:()=>Zut,ChecklistCompleteUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>uq,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByInputSchema:()=>bst,ChecklistCompleteUncheckedUpdateManyWithoutCompletedByNestedInputSchema:()=>ul,ChecklistCompleteUncheckedUpdateWithoutChecklistInputSchema:()=>c8,ChecklistCompleteUncheckedUpdateWithoutCompletedByInputSchema:()=>M7,ChecklistCompleteUncheckedUpdateWithoutItemsInputSchema:()=>b_,ChecklistCompleteUpdateArgsSchema:()=>_Pt,ChecklistCompleteUpdateInputSchema:()=>VY,ChecklistCompleteUpdateManyAndReturnArgsSchema:()=>LPt,ChecklistCompleteUpdateManyArgsSchema:()=>EPt,ChecklistCompleteUpdateManyMutationInputSchema:()=>tM,ChecklistCompleteUpdateManyWithWhereWithoutChecklistInputSchema:()=>qU,ChecklistCompleteUpdateManyWithWhereWithoutCompletedByInputSchema:()=>VR,ChecklistCompleteUpdateManyWithoutChecklistNestedInputSchema:()=>pq,ChecklistCompleteUpdateManyWithoutCompletedByNestedInputSchema:()=>Hi,ChecklistCompleteUpdateOneRequiredWithoutItemsNestedInputSchema:()=>M2,ChecklistCompleteUpdateToOneWithWhereWithoutItemsInputSchema:()=>Xrt,ChecklistCompleteUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>BU,ChecklistCompleteUpdateWithWhereUniqueWithoutCompletedByInputSchema:()=>LR,ChecklistCompleteUpdateWithoutChecklistInputSchema:()=>p8,ChecklistCompleteUpdateWithoutCompletedByInputSchema:()=>j7,ChecklistCompleteUpdateWithoutItemsInputSchema:()=>m_,ChecklistCompleteUpsertArgsSchema:()=>BPt,ChecklistCompleteUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>NU,ChecklistCompleteUpsertWithWhereUniqueWithoutCompletedByInputSchema:()=>ER,ChecklistCompleteUpsertWithoutItemsInputSchema:()=>Krt,ChecklistCompleteWhereInputSchema:()=>Ye,ChecklistCompleteWhereUniqueInputSchema:()=>rt,ChecklistFrequencySchema:()=>Dt,ChecklistItemAggregateArgsSchema:()=>Ybt,ChecklistItemArgsSchema:()=>FQ,ChecklistItemAvgOrderByAggregateInputSchema:()=>det,ChecklistItemCompleteAggregateArgsSchema:()=>lht,ChecklistItemCompleteArgsSchema:()=>Lzt,ChecklistItemCompleteAvgOrderByAggregateInputSchema:()=>Uet,ChecklistItemCompleteCountOrderByAggregateInputSchema:()=>Pet,ChecklistItemCompleteCreateArgsSchema:()=>HPt,ChecklistItemCompleteCreateInputSchema:()=>YY,ChecklistItemCompleteCreateManyAndReturnArgsSchema:()=>GPt,ChecklistItemCompleteCreateManyArgsSchema:()=>YPt,ChecklistItemCompleteCreateManyChecklistCompleteInputEnvelopeSchema:()=>YZ,ChecklistItemCompleteCreateManyChecklistCompleteInputSchema:()=>uH,ChecklistItemCompleteCreateManyChecklistItemInputEnvelopeSchema:()=>EZ,ChecklistItemCompleteCreateManyChecklistItemInputSchema:()=>cH,ChecklistItemCompleteCreateManyInputSchema:()=>kP,ChecklistItemCompleteCreateNestedManyWithoutChecklistCompleteInputSchema:()=>dq,ChecklistItemCompleteCreateNestedManyWithoutChecklistItemInputSchema:()=>P2,ChecklistItemCompleteCreateOrConnectWithoutChecklistCompleteInputSchema:()=>_b,ChecklistItemCompleteCreateOrConnectWithoutChecklistItemInputSchema:()=>Db,ChecklistItemCompleteCreateWithoutChecklistCompleteInputSchema:()=>yc,ChecklistItemCompleteCreateWithoutChecklistItemInputSchema:()=>uc,ChecklistItemCompleteCreatephotoUrlsInputSchema:()=>Ym,ChecklistItemCompleteDeleteArgsSchema:()=>$Pt,ChecklistItemCompleteDeleteManyArgsSchema:()=>tUt,ChecklistItemCompleteFindFirstArgsSchema:()=>aht,ChecklistItemCompleteFindFirstOrThrowArgsSchema:()=>iht,ChecklistItemCompleteFindManyArgsSchema:()=>cN,ChecklistItemCompleteFindUniqueArgsSchema:()=>pht,ChecklistItemCompleteFindUniqueOrThrowArgsSchema:()=>cht,ChecklistItemCompleteGroupByArgsSchema:()=>rht,ChecklistItemCompleteIncludeSchema:()=>ud,ChecklistItemCompleteListRelationFilterSchema:()=>gM,ChecklistItemCompleteMaxOrderByAggregateInputSchema:()=>Wet,ChecklistItemCompleteMinOrderByAggregateInputSchema:()=>Ret,ChecklistItemCompleteOrderByRelationAggregateInputSchema:()=>z4,ChecklistItemCompleteOrderByWithAggregationInputSchema:()=>sV,ChecklistItemCompleteOrderByWithRelationInputSchema:()=>pb,ChecklistItemCompleteScalarFieldEnumSchema:()=>xg,ChecklistItemCompleteScalarWhereInputSchema:()=>Sl,ChecklistItemCompleteScalarWhereWithAggregatesInputSchema:()=>nA,ChecklistItemCompleteSchema:()=>Vdt,ChecklistItemCompleteSelectSchema:()=>sd,ChecklistItemCompleteSumOrderByAggregateInputSchema:()=>ket,ChecklistItemCompleteUncheckedCreateInputSchema:()=>GY,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistCompleteInputSchema:()=>zq,ChecklistItemCompleteUncheckedCreateNestedManyWithoutChecklistItemInputSchema:()=>U2,ChecklistItemCompleteUncheckedCreateWithoutChecklistCompleteInputSchema:()=>dc,ChecklistItemCompleteUncheckedCreateWithoutChecklistItemInputSchema:()=>sc,ChecklistItemCompleteUncheckedUpdateInputSchema:()=>JY,ChecklistItemCompleteUncheckedUpdateManyInputSchema:()=>KY,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteInputSchema:()=>Out,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>Iq,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemInputSchema:()=>vut,ChecklistItemCompleteUncheckedUpdateManyWithoutChecklistItemNestedInputSchema:()=>k2,ChecklistItemCompleteUncheckedUpdateWithoutChecklistCompleteInputSchema:()=>d8,ChecklistItemCompleteUncheckedUpdateWithoutChecklistItemInputSchema:()=>s8,ChecklistItemCompleteUpdateArgsSchema:()=>JPt,ChecklistItemCompleteUpdateInputSchema:()=>$Y,ChecklistItemCompleteUpdateManyAndReturnArgsSchema:()=>XPt,ChecklistItemCompleteUpdateManyArgsSchema:()=>KPt,ChecklistItemCompleteUpdateManyMutationInputSchema:()=>eM,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistCompleteInputSchema:()=>VU,ChecklistItemCompleteUpdateManyWithWhereWithoutChecklistItemInputSchema:()=>_U,ChecklistItemCompleteUpdateManyWithoutChecklistCompleteNestedInputSchema:()=>hq,ChecklistItemCompleteUpdateManyWithoutChecklistItemNestedInputSchema:()=>R2,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>LU,ChecklistItemCompleteUpdateWithWhereUniqueWithoutChecklistItemInputSchema:()=>DU,ChecklistItemCompleteUpdateWithoutChecklistCompleteInputSchema:()=>y8,ChecklistItemCompleteUpdateWithoutChecklistItemInputSchema:()=>u8,ChecklistItemCompleteUpdatephotoUrlsInputSchema:()=>Vz,ChecklistItemCompleteUpsertArgsSchema:()=>QPt,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistCompleteInputSchema:()=>EU,ChecklistItemCompleteUpsertWithWhereUniqueWithoutChecklistItemInputSchema:()=>FU,ChecklistItemCompleteWhereInputSchema:()=>ua,ChecklistItemCompleteWhereUniqueInputSchema:()=>It,ChecklistItemCountOrderByAggregateInputSchema:()=>yet,ChecklistItemCountOutputTypeArgsSchema:()=>DQ,ChecklistItemCountOutputTypeSelectSchema:()=>AX,ChecklistItemCreateArgsSchema:()=>kPt,ChecklistItemCreateInputSchema:()=>BY,ChecklistItemCreateManyAndReturnArgsSchema:()=>MPt,ChecklistItemCreateManyArgsSchema:()=>jPt,ChecklistItemCreateManyChecklistInputEnvelopeSchema:()=>qZ,ChecklistItemCreateManyChecklistInputSchema:()=>rH,ChecklistItemCreateManyInputSchema:()=>WP,ChecklistItemCreateNestedManyWithoutChecklistInputSchema:()=>oq,ChecklistItemCreateNestedOneWithoutCompletionsInputSchema:()=>j2,ChecklistItemCreateOrConnectWithoutChecklistInputSchema:()=>qb,ChecklistItemCreateOrConnectWithoutCompletionsInputSchema:()=>R6,ChecklistItemCreateWithoutChecklistInputSchema:()=>lc,ChecklistItemCreateWithoutCompletionsInputSchema:()=>JZ,ChecklistItemDeleteArgsSchema:()=>ZPt,ChecklistItemDeleteManyArgsSchema:()=>wPt,ChecklistItemFindFirstArgsSchema:()=>Hbt,ChecklistItemFindFirstOrThrowArgsSchema:()=>Qbt,ChecklistItemFindManyArgsSchema:()=>DK,ChecklistItemFindUniqueArgsSchema:()=>$bt,ChecklistItemFindUniqueOrThrowArgsSchema:()=>Jbt,ChecklistItemGroupByArgsSchema:()=>Gbt,ChecklistItemIncludeSchema:()=>ld,ChecklistItemListRelationFilterSchema:()=>y4,ChecklistItemMaxOrderByAggregateInputSchema:()=>zet,ChecklistItemMinOrderByAggregateInputSchema:()=>met,ChecklistItemOrderByRelationAggregateInputSchema:()=>aet,ChecklistItemOrderByWithAggregationInputSchema:()=>cV,ChecklistItemOrderByWithRelationInputSchema:()=>vm,ChecklistItemScalarFieldEnumSchema:()=>Rg,ChecklistItemScalarRelationFilterSchema:()=>b4,ChecklistItemScalarWhereInputSchema:()=>Cp,ChecklistItemScalarWhereWithAggregatesInputSchema:()=>eA,ChecklistItemSchema:()=>Edt,ChecklistItemSelectSchema:()=>rd,ChecklistItemSumOrderByAggregateInputSchema:()=>bet,ChecklistItemTypeSchema:()=>Ht,ChecklistItemUncheckedCreateInputSchema:()=>qY,ChecklistItemUncheckedCreateNestedManyWithoutChecklistInputSchema:()=>aq,ChecklistItemUncheckedCreateWithoutChecklistInputSchema:()=>rc,ChecklistItemUncheckedCreateWithoutCompletionsInputSchema:()=>KZ,ChecklistItemUncheckedUpdateInputSchema:()=>DY,ChecklistItemUncheckedUpdateManyInputSchema:()=>_Y,ChecklistItemUncheckedUpdateManyWithoutChecklistInputSchema:()=>Mut,ChecklistItemUncheckedUpdateManyWithoutChecklistNestedInputSchema:()=>cq,ChecklistItemUncheckedUpdateWithoutChecklistInputSchema:()=>r8,ChecklistItemUncheckedUpdateWithoutCompletionsInputSchema:()=>I_,ChecklistItemUpdateArgsSchema:()=>vPt,ChecklistItemUpdateInputSchema:()=>FY,ChecklistItemUpdateManyAndReturnArgsSchema:()=>fPt,ChecklistItemUpdateManyArgsSchema:()=>OPt,ChecklistItemUpdateManyMutationInputSchema:()=>HN,ChecklistItemUpdateManyWithWhereWithoutChecklistInputSchema:()=>wU,ChecklistItemUpdateManyWithoutChecklistNestedInputSchema:()=>rq,ChecklistItemUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>Z2,ChecklistItemUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>ept,ChecklistItemUpdateWithWhereUniqueWithoutChecklistInputSchema:()=>fU,ChecklistItemUpdateWithoutChecklistInputSchema:()=>l8,ChecklistItemUpdateWithoutCompletionsInputSchema:()=>h_,ChecklistItemUpsertArgsSchema:()=>xPt,ChecklistItemUpsertWithWhereUniqueWithoutChecklistInputSchema:()=>OU,ChecklistItemUpsertWithoutCompletionsInputSchema:()=>tpt,ChecklistItemWhereInputSchema:()=>Qe,ChecklistItemWhereUniqueInputSchema:()=>oe,ChecklistStatusSchema:()=>Vt,ConstraintTypeSchema:()=>ye,CookBookAggregateArgsSchema:()=>Ogt,CookBookArgsSchema:()=>t0,CookBookAvgOrderByAggregateInputSchema:()=>Hnt,CookBookCountOrderByAggregateInputSchema:()=>Vnt,CookBookCountOutputTypeArgsSchema:()=>e0,CookBookCountOutputTypeSelectSchema:()=>MX,CookBookCreateArgsSchema:()=>kkt,CookBookCreateInputSchema:()=>t9,CookBookCreateManyAndReturnArgsSchema:()=>Mkt,CookBookCreateManyArgsSchema:()=>jkt,CookBookCreateManyInputSchema:()=>$P,CookBookCreateManyRestaurantInputEnvelopeSchema:()=>rO,CookBookCreateManyRestaurantInputSchema:()=>gH,CookBookCreateNestedManyWithoutRestaurantInputSchema:()=>Vl,CookBookCreateNestedOneWithoutRecipesInputSchema:()=>so,CookBookCreateOrConnectWithoutRecipesInputSchema:()=>p3,CookBookCreateOrConnectWithoutRestaurantInputSchema:()=>eh,CookBookCreateWithoutRecipesInputSchema:()=>$O,CookBookCreateWithoutRestaurantInputSchema:()=>Bc,CookBookDeleteArgsSchema:()=>Zkt,CookBookDeleteManyArgsSchema:()=>wkt,CookBookFindFirstArgsSchema:()=>Zgt,CookBookFindFirstOrThrowArgsSchema:()=>vgt,CookBookFindManyArgsSchema:()=>GK,CookBookFindUniqueArgsSchema:()=>wgt,CookBookFindUniqueOrThrowArgsSchema:()=>Ngt,CookBookGroupByArgsSchema:()=>fgt,CookBookIncludeSchema:()=>Kd,CookBookListRelationFilterSchema:()=>R4,CookBookMaxOrderByAggregateInputSchema:()=>Qnt,CookBookMinOrderByAggregateInputSchema:()=>Ynt,CookBookOrderByRelationAggregateInputSchema:()=>Cnt,CookBookOrderByWithAggregationInputSchema:()=>vV,CookBookOrderByWithRelationInputSchema:()=>Nm,CookBookScalarFieldEnumSchema:()=>Jg,CookBookScalarRelationFilterSchema:()=>F4,CookBookScalarWhereInputSchema:()=>Sp,CookBookScalarWhereWithAggregatesInputSchema:()=>UA,CookBookSchema:()=>dzt,CookBookSelectSchema:()=>Xd,CookBookSumOrderByAggregateInputSchema:()=>Gnt,CookBookUncheckedCreateInputSchema:()=>e9,CookBookUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ar,CookBookUncheckedCreateWithoutRecipesInputSchema:()=>JO,CookBookUncheckedCreateWithoutRestaurantInputSchema:()=>qc,CookBookUncheckedUpdateInputSchema:()=>n9,CookBookUncheckedUpdateManyInputSchema:()=>a9,CookBookUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Qut,CookBookUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Mr,CookBookUncheckedUpdateWithoutRecipesInputSchema:()=>jE,CookBookUncheckedUpdateWithoutRestaurantInputSchema:()=>q8,CookBookUpdateArgsSchema:()=>vkt,CookBookUpdateInputSchema:()=>o9,CookBookUpdateManyAndReturnArgsSchema:()=>fkt,CookBookUpdateManyArgsSchema:()=>Okt,CookBookUpdateManyMutationInputSchema:()=>tB,CookBookUpdateManyWithWhereWithoutRestaurantInputSchema:()=>jW,CookBookUpdateManyWithoutRestaurantNestedInputSchema:()=>Ir,CookBookUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>an,CookBookUpdateToOneWithWhereWithoutRecipesInputSchema:()=>dct,CookBookUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>xW,CookBookUpdateWithoutRecipesInputSchema:()=>xE,CookBookUpdateWithoutRestaurantInputSchema:()=>B8,CookBookUpsertArgsSchema:()=>xkt,CookBookUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>kW,CookBookUpsertWithoutRecipesInputSchema:()=>yct,CookBookWhereInputSchema:()=>$e,CookBookWhereUniqueInputSchema:()=>ne,CountStatusSchema:()=>Nt,CustomerFeedbackAggregateArgsSchema:()=>Iht,CustomerFeedbackArgsSchema:()=>Hzt,CustomerFeedbackAvgOrderByAggregateInputSchema:()=>wet,CustomerFeedbackCountOrderByAggregateInputSchema:()=>fet,CustomerFeedbackCreateArgsSchema:()=>uUt,CustomerFeedbackCreateInputSchema:()=>aG,CustomerFeedbackCreateManyAndReturnArgsSchema:()=>dUt,CustomerFeedbackCreateManyArgsSchema:()=>yUt,CustomerFeedbackCreateManyInputSchema:()=>jP,CustomerFeedbackCreateManyMenuItemInputEnvelopeSchema:()=>Kw,CustomerFeedbackCreateManyMenuItemInputSchema:()=>ZQ,CustomerFeedbackCreateManyRespondedByInputEnvelopeSchema:()=>BO,CustomerFeedbackCreateManyRespondedByInputSchema:()=>EH,CustomerFeedbackCreateManyRestaurantInputEnvelopeSchema:()=>IO,CustomerFeedbackCreateManyRestaurantInputSchema:()=>xH,CustomerFeedbackCreateNestedManyWithoutMenuItemInputSchema:()=>tm,CustomerFeedbackCreateNestedManyWithoutRespondedByInputSchema:()=>ci,CustomerFeedbackCreateNestedManyWithoutRestaurantInputSchema:()=>or,CustomerFeedbackCreateOrConnectWithoutMenuItemInputSchema:()=>TI,CustomerFeedbackCreateOrConnectWithoutRespondedByInputSchema:()=>Uh,CustomerFeedbackCreateOrConnectWithoutRestaurantInputSchema:()=>sh,CustomerFeedbackCreateWithoutMenuItemInputSchema:()=>ky,CustomerFeedbackCreateWithoutRespondedByInputSchema:()=>Zu,CustomerFeedbackCreateWithoutRestaurantInputSchema:()=>au,CustomerFeedbackCreatetagsInputSchema:()=>lp,CustomerFeedbackDeleteArgsSchema:()=>zUt,CustomerFeedbackDeleteManyArgsSchema:()=>IUt,CustomerFeedbackFindFirstArgsSchema:()=>bht,CustomerFeedbackFindFirstOrThrowArgsSchema:()=>hht,CustomerFeedbackFindManyArgsSchema:()=>mT,CustomerFeedbackFindUniqueArgsSchema:()=>Cht,CustomerFeedbackFindUniqueOrThrowArgsSchema:()=>Aht,CustomerFeedbackGroupByArgsSchema:()=>ght,CustomerFeedbackIncludeSchema:()=>zd,CustomerFeedbackListRelationFilterSchema:()=>OS,CustomerFeedbackMaxOrderByAggregateInputSchema:()=>Net,CustomerFeedbackMinOrderByAggregateInputSchema:()=>Bet,CustomerFeedbackOrderByRelationAggregateInputSchema:()=>RB,CustomerFeedbackOrderByWithAggregationInputSchema:()=>dV,CustomerFeedbackOrderByWithRelationInputSchema:()=>ub,CustomerFeedbackScalarFieldEnumSchema:()=>Mg,CustomerFeedbackScalarWhereInputSchema:()=>Ea,CustomerFeedbackScalarWhereWithAggregatesInputSchema:()=>iA,CustomerFeedbackSchema:()=>Qdt,CustomerFeedbackSelectSchema:()=>md,CustomerFeedbackSumOrderByAggregateInputSchema:()=>qet,CustomerFeedbackUncheckedCreateInputSchema:()=>iG,CustomerFeedbackUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>pm,CustomerFeedbackUncheckedCreateNestedManyWithoutRespondedByInputSchema:()=>Ri,CustomerFeedbackUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>mr,CustomerFeedbackUncheckedCreateWithoutMenuItemInputSchema:()=>xy,CustomerFeedbackUncheckedCreateWithoutRespondedByInputSchema:()=>vu,CustomerFeedbackUncheckedCreateWithoutRestaurantInputSchema:()=>iu,CustomerFeedbackUncheckedUpdateInputSchema:()=>rG,CustomerFeedbackUncheckedUpdateManyInputSchema:()=>pG,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemInputSchema:()=>myt,CustomerFeedbackUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Wm,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByInputSchema:()=>hst,CustomerFeedbackUncheckedUpdateManyWithoutRespondedByNestedInputSchema:()=>sl,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantInputSchema:()=>nst,CustomerFeedbackUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>_r,CustomerFeedbackUncheckedUpdateWithoutMenuItemInputSchema:()=>xK,CustomerFeedbackUncheckedUpdateWithoutRespondedByInputSchema:()=>v7,CustomerFeedbackUncheckedUpdateWithoutRestaurantInputSchema:()=>i7,CustomerFeedbackUpdateArgsSchema:()=>mUt,CustomerFeedbackUpdateInputSchema:()=>lG,CustomerFeedbackUpdateManyAndReturnArgsSchema:()=>hUt,CustomerFeedbackUpdateManyArgsSchema:()=>bUt,CustomerFeedbackUpdateManyMutationInputSchema:()=>NT,CustomerFeedbackUpdateManyWithWhereWithoutMenuItemInputSchema:()=>_j,CustomerFeedbackUpdateManyWithWhereWithoutRespondedByInputSchema:()=>YR,CustomerFeedbackUpdateManyWithWhereWithoutRestaurantInputSchema:()=>lR,CustomerFeedbackUpdateManyWithoutMenuItemNestedInputSchema:()=>Im,CustomerFeedbackUpdateManyWithoutRespondedByNestedInputSchema:()=>Qi,CustomerFeedbackUpdateManyWithoutRestaurantNestedInputSchema:()=>xr,CustomerFeedbackUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Dj,CustomerFeedbackUpdateWithWhereUniqueWithoutRespondedByInputSchema:()=>QR,CustomerFeedbackUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>iR,CustomerFeedbackUpdateWithoutMenuItemInputSchema:()=>kK,CustomerFeedbackUpdateWithoutRespondedByInputSchema:()=>Z7,CustomerFeedbackUpdateWithoutRestaurantInputSchema:()=>a7,CustomerFeedbackUpdatetagsInputSchema:()=>Hr,CustomerFeedbackUpsertArgsSchema:()=>sUt,CustomerFeedbackUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Fj,CustomerFeedbackUpsertWithWhereUniqueWithoutRespondedByInputSchema:()=>HR,CustomerFeedbackUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>aR,CustomerFeedbackWhereInputSchema:()=>ya,CustomerFeedbackWhereUniqueInputSchema:()=>F,DateTimeFieldUpdateOperationsInputSchema:()=>o,DateTimeFilterSchema:()=>z,DateTimeNullableFilterSchema:()=>Kt,DateTimeNullableWithAggregatesFilterSchema:()=>Lr,DateTimeWithAggregatesFilterSchema:()=>Z,DayOfWeekSchema:()=>se,DietaryRestrictionAggregateArgsSchema:()=>Pht,DietaryRestrictionArgsSchema:()=>Qzt,DietaryRestrictionAvgOrderByAggregateInputSchema:()=>Eet,DietaryRestrictionCountOrderByAggregateInputSchema:()=>_et,DietaryRestrictionCountOutputTypeArgsSchema:()=>LQ,DietaryRestrictionCountOutputTypeSelectSchema:()=>TX,DietaryRestrictionCreateArgsSchema:()=>gUt,DietaryRestrictionCreateInputSchema:()=>cG,DietaryRestrictionCreateManyAndReturnArgsSchema:()=>SUt,DietaryRestrictionCreateManyArgsSchema:()=>AUt,DietaryRestrictionCreateManyInputSchema:()=>MP,DietaryRestrictionCreateNestedManyWithoutIngredientsInputSchema:()=>BI,DietaryRestrictionCreateNestedManyWithoutMenuItemsInputSchema:()=>em,DietaryRestrictionCreateNestedManyWithoutRecipesInputSchema:()=>Wo,DietaryRestrictionCreateOrConnectWithoutIngredientsInputSchema:()=>nI,DietaryRestrictionCreateOrConnectWithoutMenuItemsInputSchema:()=>PI,DietaryRestrictionCreateOrConnectWithoutRecipesInputSchema:()=>Lh,DietaryRestrictionCreateWithoutIngredientsInputSchema:()=>_s,DietaryRestrictionCreateWithoutMenuItemsInputSchema:()=>jy,DietaryRestrictionCreateWithoutRecipesInputSchema:()=>bs,DietaryRestrictionDeleteArgsSchema:()=>TUt,DietaryRestrictionDeleteManyArgsSchema:()=>RUt,DietaryRestrictionFindFirstArgsSchema:()=>Sht,DietaryRestrictionFindFirstOrThrowArgsSchema:()=>Tht,DietaryRestrictionFindManyArgsSchema:()=>bT,DietaryRestrictionFindUniqueArgsSchema:()=>Wht,DietaryRestrictionFindUniqueOrThrowArgsSchema:()=>Rht,DietaryRestrictionGroupByArgsSchema:()=>Uht,DietaryRestrictionIncludeSchema:()=>bd,DietaryRestrictionListRelationFilterSchema:()=>NS,DietaryRestrictionMaxOrderByAggregateInputSchema:()=>Let,DietaryRestrictionMinOrderByAggregateInputSchema:()=>Vet,DietaryRestrictionOrderByRelationAggregateInputSchema:()=>vB,DietaryRestrictionOrderByWithAggregationInputSchema:()=>zV,DietaryRestrictionOrderByWithRelationInputSchema:()=>sb,DietaryRestrictionScalarFieldEnumSchema:()=>Zg,DietaryRestrictionScalarWhereInputSchema:()=>Qa,DietaryRestrictionScalarWhereWithAggregatesInputSchema:()=>lA,DietaryRestrictionSchema:()=>Ydt,DietaryRestrictionSelectSchema:()=>hd,DietaryRestrictionSumOrderByAggregateInputSchema:()=>Het,DietaryRestrictionUncheckedCreateInputSchema:()=>uG,DietaryRestrictionUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>HI,DietaryRestrictionUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>cm,DietaryRestrictionUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Yo,DietaryRestrictionUncheckedCreateWithoutIngredientsInputSchema:()=>Es,DietaryRestrictionUncheckedCreateWithoutMenuItemsInputSchema:()=>My,DietaryRestrictionUncheckedCreateWithoutRecipesInputSchema:()=>hs,DietaryRestrictionUncheckedUpdateInputSchema:()=>yG,DietaryRestrictionUncheckedUpdateManyInputSchema:()=>dG,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Gst,DietaryRestrictionUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>pg,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>byt,DietaryRestrictionUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Rm,DietaryRestrictionUncheckedUpdateManyWithoutRecipesInputSchema:()=>wst,DietaryRestrictionUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Dn,DietaryRestrictionUncheckedUpdateWithoutIngredientsInputSchema:()=>EJ,DietaryRestrictionUncheckedUpdateWithoutMenuItemsInputSchema:()=>MK,DietaryRestrictionUncheckedUpdateWithoutRecipesInputSchema:()=>hJ,DietaryRestrictionUpdateArgsSchema:()=>PUt,DietaryRestrictionUpdateInputSchema:()=>sG,DietaryRestrictionUpdateManyAndReturnArgsSchema:()=>WUt,DietaryRestrictionUpdateManyArgsSchema:()=>UUt,DietaryRestrictionUpdateManyMutationInputSchema:()=>BT,DietaryRestrictionUpdateManyWithWhereWithoutIngredientsInputSchema:()=>wx,DietaryRestrictionUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Vj,DietaryRestrictionUpdateManyWithWhereWithoutRecipesInputSchema:()=>Jk,DietaryRestrictionUpdateManyWithoutIngredientsNestedInputSchema:()=>tg,DietaryRestrictionUpdateManyWithoutMenuItemsNestedInputSchema:()=>gm,DietaryRestrictionUpdateManyWithoutRecipesNestedInputSchema:()=>gn,DietaryRestrictionUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>fx,DietaryRestrictionUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Lj,DietaryRestrictionUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>$k,DietaryRestrictionUpdateWithoutIngredientsInputSchema:()=>_J,DietaryRestrictionUpdateWithoutMenuItemsInputSchema:()=>jK,DietaryRestrictionUpdateWithoutRecipesInputSchema:()=>bJ,DietaryRestrictionUpsertArgsSchema:()=>CUt,DietaryRestrictionUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>Ox,DietaryRestrictionUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Ej,DietaryRestrictionUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Gk,DietaryRestrictionWhereInputSchema:()=>da,DietaryRestrictionWhereUniqueInputSchema:()=>D,EarlyAccessAggregateArgsSchema:()=>$It,EarlyAccessAvgOrderByAggregateInputSchema:()=>ant,EarlyAccessCountOrderByAggregateInputSchema:()=>nnt,EarlyAccessCreateArgsSchema:()=>kRt,EarlyAccessCreateInputSchema:()=>A1,EarlyAccessCreateManyAndReturnArgsSchema:()=>MRt,EarlyAccessCreateManyArgsSchema:()=>jRt,EarlyAccessCreateManyInputSchema:()=>LP,EarlyAccessDeleteArgsSchema:()=>ZRt,EarlyAccessDeleteManyArgsSchema:()=>wRt,EarlyAccessFindFirstArgsSchema:()=>QIt,EarlyAccessFindFirstOrThrowArgsSchema:()=>YIt,EarlyAccessFindManyArgsSchema:()=>GIt,EarlyAccessFindUniqueArgsSchema:()=>KIt,EarlyAccessFindUniqueOrThrowArgsSchema:()=>XIt,EarlyAccessGroupByArgsSchema:()=>JIt,EarlyAccessMaxOrderByAggregateInputSchema:()=>int,EarlyAccessMinOrderByAggregateInputSchema:()=>lnt,EarlyAccessOrderByWithAggregationInputSchema:()=>RV,EarlyAccessOrderByWithRelationInputSchema:()=>Sb,EarlyAccessScalarFieldEnumSchema:()=>Vg,EarlyAccessScalarWhereWithAggregatesInputSchema:()=>gA,EarlyAccessSchema:()=>rzt,EarlyAccessSelectSchema:()=>Vm,EarlyAccessSumOrderByAggregateInputSchema:()=>rnt,EarlyAccessUncheckedCreateInputSchema:()=>S1,EarlyAccessUncheckedUpdateInputSchema:()=>P1,EarlyAccessUncheckedUpdateManyInputSchema:()=>W1,EarlyAccessUpdateArgsSchema:()=>vRt,EarlyAccessUpdateInputSchema:()=>T1,EarlyAccessUpdateManyAndReturnArgsSchema:()=>fRt,EarlyAccessUpdateManyArgsSchema:()=>ORt,EarlyAccessUpdateManyMutationInputSchema:()=>U1,EarlyAccessUpsertArgsSchema:()=>xRt,EarlyAccessWhereInputSchema:()=>bl,EarlyAccessWhereUniqueInputSchema:()=>Hm,EnumCategoryFieldUpdateOperationsInputSchema:()=>zt,EnumCategoryFilterSchema:()=>ZB,EnumCategoryWithAggregatesFilterSchema:()=>sat,EnumChecklistFrequencyFieldUpdateOperationsInputSchema:()=>hp,EnumChecklistFrequencyFilterSchema:()=>dB,EnumChecklistFrequencyWithAggregatesFilterSchema:()=>set,EnumChecklistItemTypeFieldUpdateOperationsInputSchema:()=>Qm,EnumChecklistItemTypeFilterSchema:()=>zB,EnumChecklistItemTypeWithAggregatesFilterSchema:()=>het,EnumChecklistStatusFieldUpdateOperationsInputSchema:()=>Lz,EnumChecklistStatusFilterSchema:()=>mB,EnumChecklistStatusWithAggregatesFilterSchema:()=>xet,EnumConstraintTypeFieldUpdateOperationsInputSchema:()=>PC,EnumConstraintTypeFilterSchema:()=>SB,EnumConstraintTypeWithAggregatesFilterSchema:()=>wot,EnumCountStatusFieldUpdateOperationsInputSchema:()=>up,EnumCountStatusFilterSchema:()=>wB,EnumCountStatusWithAggregatesFilterSchema:()=>Vat,EnumDayOfWeekFieldUpdateOperationsInputSchema:()=>TC,EnumDayOfWeekFilterSchema:()=>AB,EnumDayOfWeekWithAggregatesFilterSchema:()=>jot,EnumEquipmentStatusFieldUpdateOperationsInputSchema:()=>bp,EnumEquipmentStatusFilterSchema:()=>uB,EnumEquipmentStatusWithAggregatesFilterSchema:()=>Htt,EnumFeedbackSourceFieldUpdateOperationsInputSchema:()=>Vr,EnumFeedbackSourceFilterSchema:()=>bB,EnumFeedbackSourceWithAggregatesFilterSchema:()=>Fet,EnumFeedbackStatusFieldUpdateOperationsInputSchema:()=>Qr,EnumFeedbackStatusFilterSchema:()=>hB,EnumFeedbackStatusWithAggregatesFilterSchema:()=>Det,EnumInventoryTypeFieldUpdateOperationsInputSchema:()=>pp,EnumInventoryTypeFilterSchema:()=>U4,EnumInventoryTypeWithAggregatesFilterSchema:()=>gnt,EnumMaintenanceTypeFieldUpdateOperationsInputSchema:()=>AC,EnumMaintenanceTypeFilterSchema:()=>yB,EnumMaintenanceTypeWithAggregatesFilterSchema:()=>net,EnumNutritionSourceNullableFilterSchema:()=>OB,EnumNutritionSourceNullableWithAggregatesFilterSchema:()=>Iat,EnumOrderStatusFieldUpdateOperationsInputSchema:()=>sp,EnumOrderStatusFilterSchema:()=>NB,EnumOrderStatusWithAggregatesFilterSchema:()=>rit,EnumPhotoTypeFieldUpdateOperationsInputSchema:()=>CC,EnumPhotoTypeFilterSchema:()=>pB,EnumPhotoTypeWithAggregatesFilterSchema:()=>ctt,EnumPrepStatusFieldUpdateOperationsInputSchema:()=>ea,EnumPrepStatusFilterSchema:()=>qS,EnumPrepStatusWithAggregatesFilterSchema:()=>r2,EnumProductionStatusFieldUpdateOperationsInputSchema:()=>rp,EnumProductionStatusFilterSchema:()=>IB,EnumProductionStatusWithAggregatesFilterSchema:()=>dot,EnumShiftStatusFieldUpdateOperationsInputSchema:()=>Gm,EnumShiftStatusFilterSchema:()=>BB,EnumShiftStatusWithAggregatesFilterSchema:()=>Pit,EnumSkillLevelFieldUpdateOperationsInputSchema:()=>dt,EnumSkillLevelFilterSchema:()=>MB,EnumSkillLevelWithAggregatesFilterSchema:()=>uat,EnumTaskTypeFieldUpdateOperationsInputSchema:()=>SC,EnumTaskTypeFilterSchema:()=>CB,EnumTaskTypeWithAggregatesFilterSchema:()=>Pot,EnumTransactionTypeFieldUpdateOperationsInputSchema:()=>Gr,EnumTransactionTypeFilterSchema:()=>fB,EnumTransactionTypeWithAggregatesFilterSchema:()=>qat,EnumUserRoleFieldUpdateOperationsInputSchema:()=>ft,EnumUserRoleFilterSchema:()=>kB,EnumUserRoleWithAggregatesFilterSchema:()=>qnt,EquipmentAggregateArgsSchema:()=>Pbt,EquipmentArgsSchema:()=>Yj,EquipmentAvgOrderByAggregateInputSchema:()=>_tt,EquipmentCountOrderByAggregateInputSchema:()=>Dtt,EquipmentCountOutputTypeArgsSchema:()=>BQ,EquipmentCountOutputTypeSelectSchema:()=>gX,EquipmentCreateArgsSchema:()=>HTt,EquipmentCreateInputSchema:()=>IY,EquipmentCreateManyAndReturnArgsSchema:()=>GTt,EquipmentCreateManyArgsSchema:()=>YTt,EquipmentCreateManyInputSchema:()=>SP,EquipmentCreateManyRestaurantInputEnvelopeSchema:()=>bO,EquipmentCreateManyRestaurantInputSchema:()=>RH,EquipmentCreateNestedManyWithoutRestaurantInputSchema:()=>tr,EquipmentCreateNestedOneWithoutMaintenanceLogsInputSchema:()=>Zlt,EquipmentCreateNestedOneWithoutRecipesInputSchema:()=>$B,EquipmentCreateOrConnectWithoutMaintenanceLogsInputSchema:()=>A6,EquipmentCreateOrConnectWithoutRecipesInputSchema:()=>g6,EquipmentCreateOrConnectWithoutRestaurantInputSchema:()=>ch,EquipmentCreateWithoutMaintenanceLogsInputSchema:()=>fZ,EquipmentCreateWithoutRecipesInputSchema:()=>MZ,EquipmentCreateWithoutRestaurantInputSchema:()=>tu,EquipmentDeleteArgsSchema:()=>$Tt,EquipmentDeleteManyArgsSchema:()=>tPt,EquipmentFindFirstArgsSchema:()=>Sbt,EquipmentFindFirstOrThrowArgsSchema:()=>Tbt,EquipmentFindManyArgsSchema:()=>BK,EquipmentFindUniqueArgsSchema:()=>Wbt,EquipmentFindUniqueOrThrowArgsSchema:()=>Rbt,EquipmentGroupByArgsSchema:()=>Ubt,EquipmentIncludeSchema:()=>Ky,EquipmentListRelationFilterSchema:()=>j4,EquipmentMaxOrderByAggregateInputSchema:()=>Ett,EquipmentMinOrderByAggregateInputSchema:()=>Ltt,EquipmentOrderByRelationAggregateInputSchema:()=>Snt,EquipmentOrderByWithAggregationInputSchema:()=>iV,EquipmentOrderByWithRelationInputSchema:()=>Vp,EquipmentScalarFieldEnumSchema:()=>Tg,EquipmentScalarRelationFilterSchema:()=>bM,EquipmentScalarWhereInputSchema:()=>Pp,EquipmentScalarWhereWithAggregatesInputSchema:()=>JC,EquipmentSchema:()=>qdt,EquipmentSelectSchema:()=>Xy,EquipmentStatusSchema:()=>Ft,EquipmentSumOrderByAggregateInputSchema:()=>Vtt,EquipmentUncheckedCreateInputSchema:()=>gY,EquipmentUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>dr,EquipmentUncheckedCreateWithoutMaintenanceLogsInputSchema:()=>wZ,EquipmentUncheckedCreateWithoutRecipesInputSchema:()=>ZZ,EquipmentUncheckedCreateWithoutRestaurantInputSchema:()=>eu,EquipmentUncheckedUpdateInputSchema:()=>AY,EquipmentUncheckedUpdateManyInputSchema:()=>SY,EquipmentUncheckedUpdateManyWithoutRestaurantInputSchema:()=>est,EquipmentUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Fr,EquipmentUncheckedUpdateWithoutMaintenanceLogsInputSchema:()=>l_,EquipmentUncheckedUpdateWithoutRecipesInputSchema:()=>o_,EquipmentUncheckedUpdateWithoutRestaurantInputSchema:()=>e7,EquipmentUpdateArgsSchema:()=>JTt,EquipmentUpdateInputSchema:()=>CY,EquipmentUpdateManyAndReturnArgsSchema:()=>XTt,EquipmentUpdateManyArgsSchema:()=>KTt,EquipmentUpdateManyMutationInputSchema:()=>EN,EquipmentUpdateManyWithWhereWithoutRestaurantInputSchema:()=>tR,EquipmentUpdateManyWithoutRestaurantNestedInputSchema:()=>Rr,EquipmentUpdateOneRequiredWithoutMaintenanceLogsNestedInputSchema:()=>vlt,EquipmentUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>XB,EquipmentUpdateToOneWithWhereWithoutMaintenanceLogsInputSchema:()=>Ert,EquipmentUpdateToOneWithWhereWithoutRecipesInputSchema:()=>qrt,EquipmentUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>XW,EquipmentUpdateWithoutMaintenanceLogsInputSchema:()=>i_,EquipmentUpdateWithoutRecipesInputSchema:()=>e_,EquipmentUpdateWithoutRestaurantInputSchema:()=>t7,EquipmentUpsertArgsSchema:()=>QTt,EquipmentUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>KW,EquipmentUpsertWithoutMaintenanceLogsInputSchema:()=>_rt,EquipmentUpsertWithoutRecipesInputSchema:()=>Brt,EquipmentWhereInputSchema:()=>Ze,EquipmentWhereUniqueInputSchema:()=>Yt,FeedbackSourceSchema:()=>Zt,FeedbackStatusSchema:()=>vt,FloatFieldUpdateOperationsInputSchema:()=>r,FloatFilterSchema:()=>R,FloatNullableFilterSchema:()=>ot,FloatNullableListFilterSchema:()=>vb,FloatNullableWithAggregatesFilterSchema:()=>Kn,FloatWithAggregatesFilterSchema:()=>Wt,FoodCostHistoryAggregateArgsSchema:()=>tSt,FoodCostHistoryArgsSchema:()=>ymt,FoodCostHistoryAvgOrderByAggregateInputSchema:()=>clt,FoodCostHistoryCountOrderByAggregateInputSchema:()=>plt,FoodCostHistoryCreateArgsSchema:()=>eZt,FoodCostHistoryCreateInputSchema:()=>X$,FoodCostHistoryCreateManyAndReturnArgsSchema:()=>aZt,FoodCostHistoryCreateManyArgsSchema:()=>nZt,FoodCostHistoryCreateManyInputSchema:()=>hU,FoodCostHistoryCreateManyRecipeInputEnvelopeSchema:()=>tf,FoodCostHistoryCreateManyRecipeInputSchema:()=>JH,FoodCostHistoryCreateNestedManyWithoutRecipeInputSchema:()=>bo,FoodCostHistoryCreateOrConnectWithoutRecipeInputSchema:()=>Oh,FoodCostHistoryCreateWithoutRecipeInputSchema:()=>$u,FoodCostHistoryDeleteArgsSchema:()=>iZt,FoodCostHistoryDeleteManyArgsSchema:()=>cZt,FoodCostHistoryFindFirstArgsSchema:()=>KAt,FoodCostHistoryFindFirstOrThrowArgsSchema:()=>XAt,FoodCostHistoryFindManyArgsSchema:()=>eX,FoodCostHistoryFindUniqueArgsSchema:()=>oSt,FoodCostHistoryFindUniqueOrThrowArgsSchema:()=>nSt,FoodCostHistoryGroupByArgsSchema:()=>eSt,FoodCostHistoryIncludeSchema:()=>Fz,FoodCostHistoryListRelationFilterSchema:()=>D4,FoodCostHistoryMaxOrderByAggregateInputSchema:()=>ult,FoodCostHistoryMinOrderByAggregateInputSchema:()=>slt,FoodCostHistoryOrderByRelationAggregateInputSchema:()=>$nt,FoodCostHistoryOrderByWithAggregationInputSchema:()=>tH,FoodCostHistoryOrderByWithRelationInputSchema:()=>Mb,FoodCostHistoryScalarFieldEnumSchema:()=>IC,FoodCostHistoryScalarWhereInputSchema:()=>Mp,FoodCostHistoryScalarWhereWithAggregatesInputSchema:()=>HA,FoodCostHistorySchema:()=>Ozt,FoodCostHistorySelectSchema:()=>Dz,FoodCostHistorySumOrderByAggregateInputSchema:()=>ylt,FoodCostHistoryUncheckedCreateInputSchema:()=>t4,FoodCostHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Bo,FoodCostHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Ju,FoodCostHistoryUncheckedUpdateInputSchema:()=>o4,FoodCostHistoryUncheckedUpdateManyInputSchema:()=>n4,FoodCostHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Wst,FoodCostHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Mn,FoodCostHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>J7,FoodCostHistoryUpdateArgsSchema:()=>lZt,FoodCostHistoryUpdateInputSchema:()=>e4,FoodCostHistoryUpdateManyAndReturnArgsSchema:()=>pZt,FoodCostHistoryUpdateManyArgsSchema:()=>rZt,FoodCostHistoryUpdateManyMutationInputSchema:()=>lB,FoodCostHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>Ak,FoodCostHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>cn,FoodCostHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Ck,FoodCostHistoryUpdateWithoutRecipeInputSchema:()=>$7,FoodCostHistoryUpsertArgsSchema:()=>oZt,FoodCostHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>gk,FoodCostHistoryWhereInputSchema:()=>Za,FoodCostHistoryWhereUniqueInputSchema:()=>xe,IngredientAggregateArgsSchema:()=>Hgt,IngredientAllergenAggregateArgsSchema:()=>NIt,IngredientAllergenArgsSchema:()=>omt,IngredientAllergenAvgOrderByAggregateInputSchema:()=>Yot,IngredientAllergenCountOrderByAggregateInputSchema:()=>Qot,IngredientAllergenCreateArgsSchema:()=>uRt,IngredientAllergenCreateInputSchema:()=>s1,IngredientAllergenCreateManyAllergenInputEnvelopeSchema:()=>Lv,IngredientAllergenCreateManyAllergenInputSchema:()=>yH,IngredientAllergenCreateManyAndReturnArgsSchema:()=>dRt,IngredientAllergenCreateManyArgsSchema:()=>yRt,IngredientAllergenCreateManyIngredientInputEnvelopeSchema:()=>Rf,IngredientAllergenCreateManyIngredientInputSchema:()=>zQ,IngredientAllergenCreateManyInputSchema:()=>_P,IngredientAllergenCreateNestedManyWithoutAllergenInputSchema:()=>Llt,IngredientAllergenCreateNestedManyWithoutIngredientInputSchema:()=>wI,IngredientAllergenCreateOrConnectWithoutAllergenInputSchema:()=>Yb,IngredientAllergenCreateOrConnectWithoutIngredientInputSchema:()=>eI,IngredientAllergenCreateWithoutAllergenInputSchema:()=>Pc,IngredientAllergenCreateWithoutIngredientInputSchema:()=>Bs,IngredientAllergenDeleteArgsSchema:()=>zRt,IngredientAllergenDeleteManyArgsSchema:()=>IRt,IngredientAllergenFindFirstArgsSchema:()=>fIt,IngredientAllergenFindFirstOrThrowArgsSchema:()=>wIt,IngredientAllergenFindManyArgsSchema:()=>yN,IngredientAllergenFindUniqueArgsSchema:()=>qIt,IngredientAllergenFindUniqueOrThrowArgsSchema:()=>FIt,IngredientAllergenGroupByArgsSchema:()=>BIt,IngredientAllergenIncludeSchema:()=>Bd,IngredientAllergenIngredientIdAllergenIdCompoundUniqueInputSchema:()=>MN,IngredientAllergenListRelationFilterSchema:()=>TM,IngredientAllergenMaxOrderByAggregateInputSchema:()=>Got,IngredientAllergenMinOrderByAggregateInputSchema:()=>$ot,IngredientAllergenOrderByRelationAggregateInputSchema:()=>A4,IngredientAllergenOrderByWithAggregationInputSchema:()=>UV,IngredientAllergenOrderByWithRelationInputSchema:()=>Cb,IngredientAllergenScalarFieldEnumSchema:()=>Eg,IngredientAllergenScalarWhereInputSchema:()=>Pl,IngredientAllergenScalarWhereWithAggregatesInputSchema:()=>hA,IngredientAllergenSchema:()=>izt,IngredientAllergenSelectSchema:()=>qd,IngredientAllergenSumOrderByAggregateInputSchema:()=>Jot,IngredientAllergenUncheckedCreateInputSchema:()=>y1,IngredientAllergenUncheckedCreateNestedManyWithoutAllergenInputSchema:()=>Vlt,IngredientAllergenUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>LI,IngredientAllergenUncheckedCreateWithoutAllergenInputSchema:()=>Uc,IngredientAllergenUncheckedCreateWithoutIngredientInputSchema:()=>qs,IngredientAllergenUncheckedUpdateInputSchema:()=>z1,IngredientAllergenUncheckedUpdateManyInputSchema:()=>m1,IngredientAllergenUncheckedUpdateManyWithoutAllergenInputSchema:()=>Fut,IngredientAllergenUncheckedUpdateManyWithoutAllergenNestedInputSchema:()=>Qlt,IngredientAllergenUncheckedUpdateManyWithoutIngredientInputSchema:()=>Qst,IngredientAllergenUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>lg,IngredientAllergenUncheckedUpdateWithoutAllergenInputSchema:()=>U8,IngredientAllergenUncheckedUpdateWithoutIngredientInputSchema:()=>qJ,IngredientAllergenUpdateArgsSchema:()=>mRt,IngredientAllergenUpdateInputSchema:()=>d1,IngredientAllergenUpdateManyAndReturnArgsSchema:()=>hRt,IngredientAllergenUpdateManyArgsSchema:()=>bRt,IngredientAllergenUpdateManyMutationInputSchema:()=>aM,IngredientAllergenUpdateManyWithWhereWithoutAllergenInputSchema:()=>cW,IngredientAllergenUpdateManyWithWhereWithoutIngredientInputSchema:()=>jx,IngredientAllergenUpdateManyWithoutAllergenNestedInputSchema:()=>Hlt,IngredientAllergenUpdateManyWithoutIngredientNestedInputSchema:()=>KI,IngredientAllergenUpdateWithWhereUniqueWithoutAllergenInputSchema:()=>pW,IngredientAllergenUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>xx,IngredientAllergenUpdateWithoutAllergenInputSchema:()=>P8,IngredientAllergenUpdateWithoutIngredientInputSchema:()=>BJ,IngredientAllergenUpsertArgsSchema:()=>sRt,IngredientAllergenUpsertWithWhereUniqueWithoutAllergenInputSchema:()=>rW,IngredientAllergenUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>kx,IngredientAllergenWhereInputSchema:()=>Sa,IngredientAllergenWhereUniqueInputSchema:()=>Ct,IngredientArgsSchema:()=>ep,IngredientAvgOrderByAggregateInputSchema:()=>zat,IngredientCountOrderByAggregateInputSchema:()=>dat,IngredientCountOutputTypeArgsSchema:()=>n0,IngredientCountOutputTypeSelectSchema:()=>vX,IngredientCreateArgsSchema:()=>Hkt,IngredientCreateInputSchema:()=>u9,IngredientCreateManyAndReturnArgsSchema:()=>Gkt,IngredientCreateManyArgsSchema:()=>Ykt,IngredientCreateManyInputSchema:()=>KP,IngredientCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Rq,IngredientCreateNestedManyWithoutVendorsInputSchema:()=>KF,IngredientCreateNestedOneWithoutIngredientAllergensInputSchema:()=>N2,IngredientCreateNestedOneWithoutInventoryItemsInputSchema:()=>DS,IngredientCreateNestedOneWithoutOrderItemsInputSchema:()=>l5,IngredientCreateNestedOneWithoutPriceHistoryInputSchema:()=>O2,IngredientCreateNestedOneWithoutRecipeIngredientsInputSchema:()=>bF,IngredientCreateNestedOneWithoutWasteRecordsInputSchema:()=>Lq,IngredientCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Vb,IngredientCreateOrConnectWithoutIngredientAllergensInputSchema:()=>$6,IngredientCreateOrConnectWithoutInventoryItemsInputSchema:()=>A3,IngredientCreateOrConnectWithoutOrderItemsInputSchema:()=>O3,IngredientCreateOrConnectWithoutPriceHistoryInputSchema:()=>x6,IngredientCreateOrConnectWithoutRecipeIngredientsInputSchema:()=>b3,IngredientCreateOrConnectWithoutVendorsInputSchema:()=>sI,IngredientCreateOrConnectWithoutWasteRecordsInputSchema:()=>N6,IngredientCreateWithoutDietaryRestrictionsInputSchema:()=>Ic,IngredientCreateWithoutIngredientAllergensInputSchema:()=>Vv,IngredientCreateWithoutInventoryItemsInputSchema:()=>_f,IngredientCreateWithoutOrderItemsInputSchema:()=>gw,IngredientCreateWithoutPriceHistoryInputSchema:()=>ev,IngredientCreateWithoutRecipeIngredientsInputSchema:()=>Mf,IngredientCreateWithoutVendorsInputSchema:()=>ay,IngredientCreateWithoutWasteRecordsInputSchema:()=>hv,IngredientDeleteArgsSchema:()=>$kt,IngredientDeleteManyArgsSchema:()=>txt,IngredientFindFirstArgsSchema:()=>Lgt,IngredientFindFirstOrThrowArgsSchema:()=>Vgt,IngredientFindManyArgsSchema:()=>zN,IngredientFindUniqueArgsSchema:()=>Ygt,IngredientFindUniqueOrThrowArgsSchema:()=>Ggt,IngredientGroupByArgsSchema:()=>Qgt,IngredientIncludeSchema:()=>oz,IngredientListRelationFilterSchema:()=>SM,IngredientMaxOrderByAggregateInputSchema:()=>mat,IngredientMinOrderByAggregateInputSchema:()=>bat,IngredientOrderByRelationAggregateInputSchema:()=>h4,IngredientOrderByWithAggregationInputSchema:()=>fV,IngredientOrderByWithRelationInputSchema:()=>Nl,IngredientScalarFieldEnumSchema:()=>Xg,IngredientScalarRelationFilterSchema:()=>ap,IngredientScalarWhereInputSchema:()=>Tl,IngredientScalarWhereWithAggregatesInputSchema:()=>RA,IngredientSchema:()=>mzt,IngredientSelectSchema:()=>nz,IngredientSumOrderByAggregateInputSchema:()=>hat,IngredientUncheckedCreateInputSchema:()=>s9,IngredientUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>jq,IngredientUncheckedCreateNestedManyWithoutVendorsInputSchema:()=>eD,IngredientUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>gc,IngredientUncheckedCreateWithoutIngredientAllergensInputSchema:()=>Hv,IngredientUncheckedCreateWithoutInventoryItemsInputSchema:()=>Ef,IngredientUncheckedCreateWithoutOrderItemsInputSchema:()=>Cw,IngredientUncheckedCreateWithoutPriceHistoryInputSchema:()=>ov,IngredientUncheckedCreateWithoutRecipeIngredientsInputSchema:()=>Zf,IngredientUncheckedCreateWithoutVendorsInputSchema:()=>iy,IngredientUncheckedCreateWithoutWasteRecordsInputSchema:()=>Iv,IngredientUncheckedUpdateInputSchema:()=>d9,IngredientUncheckedUpdateManyInputSchema:()=>z9,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>Nut,IngredientUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>wq,IngredientUncheckedUpdateManyWithoutVendorsInputSchema:()=>nyt,IngredientUncheckedUpdateManyWithoutVendorsNestedInputSchema:()=>rD,IngredientUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>g8,IngredientUncheckedUpdateWithoutIngredientAllergensInputSchema:()=>uE,IngredientUncheckedUpdateWithoutInventoryItemsInputSchema:()=>LE,IngredientUncheckedUpdateWithoutOrderItemsInputSchema:()=>bL,IngredientUncheckedUpdateWithoutPriceHistoryInputSchema:()=>S_,IngredientUncheckedUpdateWithoutRecipeIngredientsInputSchema:()=>OE,IngredientUncheckedUpdateWithoutVendorsInputSchema:()=>iK,IngredientUncheckedUpdateWithoutWasteRecordsInputSchema:()=>B_,IngredientUpdateArgsSchema:()=>Jkt,IngredientUpdateInputSchema:()=>y9,IngredientUpdateManyAndReturnArgsSchema:()=>Xkt,IngredientUpdateManyArgsSchema:()=>Kkt,IngredientUpdateManyMutationInputSchema:()=>lM,IngredientUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>tW,IngredientUpdateManyWithWhereWithoutVendorsInputSchema:()=>lj,IngredientUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>vq,IngredientUpdateManyWithoutVendorsNestedInputSchema:()=>aD,IngredientUpdateOneRequiredWithoutIngredientAllergensNestedInputSchema:()=>q2,IngredientUpdateOneRequiredWithoutInventoryItemsNestedInputSchema:()=>$S,IngredientUpdateOneRequiredWithoutOrderItemsNestedInputSchema:()=>p5,IngredientUpdateOneRequiredWithoutPriceHistoryNestedInputSchema:()=>w2,IngredientUpdateOneRequiredWithoutRecipeIngredientsNestedInputSchema:()=>gF,IngredientUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>Qq,IngredientUpdateToOneWithWhereWithoutIngredientAllergensInputSchema:()=>Qpt,IngredientUpdateToOneWithWhereWithoutInventoryItemsInputSchema:()=>Rct,IngredientUpdateToOneWithWhereWithoutOrderItemsInputSchema:()=>Xct,IngredientUpdateToOneWithWhereWithoutPriceHistoryInputSchema:()=>ipt,IngredientUpdateToOneWithWhereWithoutRecipeIngredientsInputSchema:()=>hct,IngredientUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>Apt,IngredientUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>XU,IngredientUpdateWithWhereUniqueWithoutVendorsInputSchema:()=>ij,IngredientUpdateWithoutDietaryRestrictionsInputSchema:()=>I8,IngredientUpdateWithoutIngredientAllergensInputSchema:()=>cE,IngredientUpdateWithoutInventoryItemsInputSchema:()=>EE,IngredientUpdateWithoutOrderItemsInputSchema:()=>mL,IngredientUpdateWithoutPriceHistoryInputSchema:()=>A_,IngredientUpdateWithoutRecipeIngredientsInputSchema:()=>vE,IngredientUpdateWithoutVendorsInputSchema:()=>aK,IngredientUpdateWithoutWasteRecordsInputSchema:()=>N_,IngredientUpsertArgsSchema:()=>Qkt,IngredientUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>KU,IngredientUpsertWithWhereUniqueWithoutVendorsInputSchema:()=>aj,IngredientUpsertWithoutIngredientAllergensInputSchema:()=>Hpt,IngredientUpsertWithoutInventoryItemsInputSchema:()=>Wct,IngredientUpsertWithoutOrderItemsInputSchema:()=>Kct,IngredientUpsertWithoutPriceHistoryInputSchema:()=>apt,IngredientUpsertWithoutRecipeIngredientsInputSchema:()=>bct,IngredientUpsertWithoutWasteRecordsInputSchema:()=>Cpt,IngredientWhereInputSchema:()=>Mt,IngredientWhereUniqueInputSchema:()=>J,IntFieldUpdateOperationsInputSchema:()=>n,IntFilterSchema:()=>s,IntNullableFilterSchema:()=>it,IntNullableListFilterSchema:()=>jI,IntNullableWithAggregatesFilterSchema:()=>Oa,IntWithAggregatesFilterSchema:()=>A,InventoryAggregateArgsSchema:()=>ugt,InventoryArgsSchema:()=>UI,InventoryAvgOrderByAggregateInputSchema:()=>mnt,InventoryCountOrderByAggregateInputSchema:()=>znt,InventoryCountOutputTypeArgsSchema:()=>JQ,InventoryCountOutputTypeSelectSchema:()=>kX,InventoryCreateArgsSchema:()=>HRt,InventoryCreateInputSchema:()=>v1,InventoryCreateManyAndReturnArgsSchema:()=>GRt,InventoryCreateManyArgsSchema:()=>YRt,InventoryCreateManyInputSchema:()=>HP,InventoryCreateNestedOneWithoutItemsInputSchema:()=>FS,InventoryCreateNestedOneWithoutRestaurantInputSchema:()=>Hl,InventoryCreateNestedOneWithoutStockCountsInputSchema:()=>fF,InventoryCreateNestedOneWithoutTransactionsInputSchema:()=>xF,InventoryCreateOrConnectWithoutItemsInputSchema:()=>C3,InventoryCreateOrConnectWithoutRestaurantInputSchema:()=>pO,InventoryCreateOrConnectWithoutStockCountsInputSchema:()=>W3,InventoryCreateOrConnectWithoutTransactionsInputSchema:()=>T3,InventoryCreateWithoutItemsInputSchema:()=>Ff,InventoryCreateWithoutRestaurantInputSchema:()=>aT,InventoryCreateWithoutStockCountsInputSchema:()=>ew,InventoryCreateWithoutTransactionsInputSchema:()=>Gf,InventoryDeleteArgsSchema:()=>$Rt,InventoryDeleteManyArgsSchema:()=>tkt,InventoryFindFirstArgsSchema:()=>rgt,InventoryFindFirstOrThrowArgsSchema:()=>pgt,InventoryFindManyArgsSchema:()=>cgt,InventoryFindUniqueArgsSchema:()=>ygt,InventoryFindUniqueOrThrowArgsSchema:()=>dgt,InventoryGroupByArgsSchema:()=>sgt,InventoryIncludeSchema:()=>Ld,InventoryItemAggregateArgsSchema:()=>uCt,InventoryItemArgsSchema:()=>TS,InventoryItemAvgOrderByAggregateInputSchema:()=>jat,InventoryItemCountOrderByAggregateInputSchema:()=>xat,InventoryItemCountOutputTypeArgsSchema:()=>l0,InventoryItemCountOutputTypeSelectSchema:()=>fX,InventoryItemCreateArgsSchema:()=>gxt,InventoryItemCreateInputSchema:()=>U9,InventoryItemCreateManyAndReturnArgsSchema:()=>Sxt,InventoryItemCreateManyArgsSchema:()=>Axt,InventoryItemCreateManyIngredientInputEnvelopeSchema:()=>Pf,InventoryItemCreateManyIngredientInputSchema:()=>sQ,InventoryItemCreateManyInputSchema:()=>eU,InventoryItemCreateManyInventoryInputEnvelopeSchema:()=>eO,InventoryItemCreateManyInventoryInputSchema:()=>mH,InventoryItemCreateManyLastUpdatedByInputEnvelopeSchema:()=>RO,InventoryItemCreateManyLastUpdatedByInputSchema:()=>ZH,InventoryItemCreateNestedManyWithoutIngredientInputSchema:()=>ZI,InventoryItemCreateNestedManyWithoutInventoryInputSchema:()=>NM,InventoryItemCreateNestedManyWithoutLastUpdatedByInputSchema:()=>Ka,InventoryItemCreateNestedOneWithoutStockCountsInputSchema:()=>o5,InventoryItemCreateNestedOneWithoutTransactionsInputSchema:()=>jF,InventoryItemCreateNestedOneWithoutWithdrawalsInputSchema:()=>cF,InventoryItemCreateOrConnectWithoutIngredientInputSchema:()=>Jh,InventoryItemCreateOrConnectWithoutInventoryInputSchema:()=>Jb,InventoryItemCreateOrConnectWithoutLastUpdatedByInputSchema:()=>zh,InventoryItemCreateOrConnectWithoutStockCountsInputSchema:()=>x3,InventoryItemCreateOrConnectWithoutTransactionsInputSchema:()=>P3,InventoryItemCreateOrConnectWithoutWithdrawalsInputSchema:()=>Q6,InventoryItemCreateWithoutIngredientInputSchema:()=>js,InventoryItemCreateWithoutInventoryInputSchema:()=>jc,InventoryItemCreateWithoutLastUpdatedByInputSchema:()=>uu,InventoryItemCreateWithoutStockCountsInputSchema:()=>pw,InventoryItemCreateWithoutTransactionsInputSchema:()=>Jf,InventoryItemCreateWithoutWithdrawalsInputSchema:()=>Bv,InventoryItemDeleteArgsSchema:()=>Txt,InventoryItemDeleteManyArgsSchema:()=>Rxt,InventoryItemFindFirstArgsSchema:()=>pCt,InventoryItemFindFirstOrThrowArgsSchema:()=>cCt,InventoryItemFindManyArgsSchema:()=>ST,InventoryItemFindUniqueArgsSchema:()=>yCt,InventoryItemFindUniqueOrThrowArgsSchema:()=>dCt,InventoryItemGroupByArgsSchema:()=>sCt,InventoryItemIncludeSchema:()=>pz,InventoryItemInventoryIdIngredientIdCompoundUniqueInputSchema:()=>vN,InventoryItemListRelationFilterSchema:()=>jS,InventoryItemMaxOrderByAggregateInputSchema:()=>Mat,InventoryItemMinOrderByAggregateInputSchema:()=>Zat,InventoryItemOrderByRelationAggregateInputSchema:()=>TB,InventoryItemOrderByWithAggregationInputSchema:()=>BV,InventoryItemOrderByWithRelationInputSchema:()=>mp,InventoryItemScalarFieldEnumSchema:()=>oC,InventoryItemScalarRelationFilterSchema:()=>xS,InventoryItemScalarWhereInputSchema:()=>qa,InventoryItemScalarWhereWithAggregatesInputSchema:()=>jA,InventoryItemSchema:()=>Izt,InventoryItemSelectSchema:()=>cz,InventoryItemSumOrderByAggregateInputSchema:()=>vat,InventoryItemUncheckedCreateInputSchema:()=>W9,InventoryItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>FI,InventoryItemUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>FM,InventoryItemUncheckedCreateNestedManyWithoutLastUpdatedByInputSchema:()=>bi,InventoryItemUncheckedCreateWithoutIngredientInputSchema:()=>Ms,InventoryItemUncheckedCreateWithoutInventoryInputSchema:()=>Mc,InventoryItemUncheckedCreateWithoutLastUpdatedByInputSchema:()=>su,InventoryItemUncheckedCreateWithoutStockCountsInputSchema:()=>cw,InventoryItemUncheckedCreateWithoutTransactionsInputSchema:()=>Kf,InventoryItemUncheckedCreateWithoutWithdrawalsInputSchema:()=>qv,InventoryItemUncheckedUpdateInputSchema:()=>k9,InventoryItemUncheckedUpdateManyInputSchema:()=>x9,InventoryItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Est,InventoryItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>og,InventoryItemUncheckedUpdateManyWithoutInventoryInputSchema:()=>Eut,InventoryItemUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>QM,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByInputSchema:()=>lst,InventoryItemUncheckedUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>tl,InventoryItemUncheckedUpdateWithoutIngredientInputSchema:()=>MJ,InventoryItemUncheckedUpdateWithoutInventoryInputSchema:()=>M8,InventoryItemUncheckedUpdateWithoutLastUpdatedByInputSchema:()=>s7,InventoryItemUncheckedUpdateWithoutStockCountsInputSchema:()=>lL,InventoryItemUncheckedUpdateWithoutTransactionsInputSchema:()=>$E,InventoryItemUncheckedUpdateWithoutWithdrawalsInputSchema:()=>aE,InventoryItemUpdateArgsSchema:()=>Pxt,InventoryItemUpdateInputSchema:()=>R9,InventoryItemUpdateManyAndReturnArgsSchema:()=>Wxt,InventoryItemUpdateManyArgsSchema:()=>Uxt,InventoryItemUpdateManyMutationInputSchema:()=>LT,InventoryItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Ix,InventoryItemUpdateManyWithWhereWithoutInventoryInputSchema:()=>IW,InventoryItemUpdateManyWithWhereWithoutLastUpdatedByInputSchema:()=>mR,InventoryItemUpdateManyWithoutIngredientNestedInputSchema:()=>YI,InventoryItemUpdateManyWithoutInventoryNestedInputSchema:()=>LM,InventoryItemUpdateManyWithoutLastUpdatedByNestedInputSchema:()=>wi,InventoryItemUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>a5,InventoryItemUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>vF,InventoryItemUpdateOneRequiredWithoutWithdrawalsNestedInputSchema:()=>yF,InventoryItemUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Ect,InventoryItemUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>vct,InventoryItemUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Dpt,InventoryItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>hx,InventoryItemUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>hW,InventoryItemUpdateWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>zR,InventoryItemUpdateWithoutIngredientInputSchema:()=>jJ,InventoryItemUpdateWithoutInventoryInputSchema:()=>j8,InventoryItemUpdateWithoutLastUpdatedByInputSchema:()=>u7,InventoryItemUpdateWithoutStockCountsInputSchema:()=>iL,InventoryItemUpdateWithoutTransactionsInputSchema:()=>GE,InventoryItemUpdateWithoutWithdrawalsInputSchema:()=>nE,InventoryItemUpsertArgsSchema:()=>Cxt,InventoryItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>bx,InventoryItemUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>bW,InventoryItemUpsertWithWhereUniqueWithoutLastUpdatedByInputSchema:()=>dR,InventoryItemUpsertWithoutStockCountsInputSchema:()=>_ct,InventoryItemUpsertWithoutTransactionsInputSchema:()=>Zct,InventoryItemUpsertWithoutWithdrawalsInputSchema:()=>Fpt,InventoryItemWhereInputSchema:()=>re,InventoryItemWhereUniqueInputSchema:()=>w,InventoryMaxOrderByAggregateInputSchema:()=>bnt,InventoryMinOrderByAggregateInputSchema:()=>hnt,InventoryNullableScalarRelationFilterSchema:()=>k4,InventoryOrderByWithAggregationInputSchema:()=>xV,InventoryOrderByWithRelationInputSchema:()=>tp,InventoryScalarFieldEnumSchema:()=>Qg,InventoryScalarRelationFilterSchema:()=>BS,InventoryScalarWhereWithAggregatesInputSchema:()=>AA,InventorySchema:()=>czt,InventorySelectSchema:()=>Vd,InventorySumOrderByAggregateInputSchema:()=>Int,InventoryTransactionAggregateArgsSchema:()=>bCt,InventoryTransactionArgsSchema:()=>lmt,InventoryTransactionAvgOrderByAggregateInputSchema:()=>fat,InventoryTransactionCountOrderByAggregateInputSchema:()=>Oat,InventoryTransactionCreateArgsSchema:()=>kxt,InventoryTransactionCreateInputSchema:()=>j9,InventoryTransactionCreateManyAndReturnArgsSchema:()=>Mxt,InventoryTransactionCreateManyArgsSchema:()=>jxt,InventoryTransactionCreateManyCreatedByInputEnvelopeSchema:()=>DO,InventoryTransactionCreateManyCreatedByInputSchema:()=>HH,InventoryTransactionCreateManyInputSchema:()=>oU,InventoryTransactionCreateManyInventoryInputEnvelopeSchema:()=>oO,InventoryTransactionCreateManyInventoryInputSchema:()=>bH,InventoryTransactionCreateManyItemInputEnvelopeSchema:()=>Hf,InventoryTransactionCreateManyItemInputSchema:()=>hQ,InventoryTransactionCreateNestedManyWithoutCreatedByInputSchema:()=>yi,InventoryTransactionCreateNestedManyWithoutInventoryInputSchema:()=>BM,InventoryTransactionCreateNestedManyWithoutItemInputSchema:()=>ES,InventoryTransactionCreateOrConnectWithoutCreatedByInputSchema:()=>kh,InventoryTransactionCreateOrConnectWithoutInventoryInputSchema:()=>Kb,InventoryTransactionCreateOrConnectWithoutItemInputSchema:()=>iI,InventoryTransactionCreateWithoutCreatedByInputSchema:()=>Bu,InventoryTransactionCreateWithoutInventoryInputSchema:()=>Zc,InventoryTransactionCreateWithoutItemInputSchema:()=>Hs,InventoryTransactionDeleteArgsSchema:()=>Zxt,InventoryTransactionDeleteManyArgsSchema:()=>wxt,InventoryTransactionFindFirstArgsSchema:()=>zCt,InventoryTransactionFindFirstOrThrowArgsSchema:()=>mCt,InventoryTransactionFindManyArgsSchema:()=>TT,InventoryTransactionFindUniqueArgsSchema:()=>ICt,InventoryTransactionFindUniqueOrThrowArgsSchema:()=>gCt,InventoryTransactionGroupByArgsSchema:()=>hCt,InventoryTransactionIncludeSchema:()=>uz,InventoryTransactionListRelationFilterSchema:()=>MS,InventoryTransactionMaxOrderByAggregateInputSchema:()=>wat,InventoryTransactionMinOrderByAggregateInputSchema:()=>Nat,InventoryTransactionOrderByRelationAggregateInputSchema:()=>PB,InventoryTransactionOrderByWithAggregationInputSchema:()=>qV,InventoryTransactionOrderByWithRelationInputSchema:()=>Ub,InventoryTransactionScalarFieldEnumSchema:()=>nC,InventoryTransactionScalarWhereInputSchema:()=>Fa,InventoryTransactionScalarWhereWithAggregatesInputSchema:()=>MA,InventoryTransactionSchema:()=>gzt,InventoryTransactionSelectSchema:()=>sz,InventoryTransactionSumOrderByAggregateInputSchema:()=>Bat,InventoryTransactionUncheckedCreateInputSchema:()=>M9,InventoryTransactionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>ji,InventoryTransactionUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>DM,InventoryTransactionUncheckedCreateNestedManyWithoutItemInputSchema:()=>HS,InventoryTransactionUncheckedCreateWithoutCreatedByInputSchema:()=>qu,InventoryTransactionUncheckedCreateWithoutInventoryInputSchema:()=>vc,InventoryTransactionUncheckedCreateWithoutItemInputSchema:()=>Qs,InventoryTransactionUncheckedUpdateInputSchema:()=>v9,InventoryTransactionUncheckedUpdateManyInputSchema:()=>O9,InventoryTransactionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Cst,InventoryTransactionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>zl,InventoryTransactionUncheckedUpdateManyWithoutInventoryInputSchema:()=>Lut,InventoryTransactionUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>YM,InventoryTransactionUncheckedUpdateManyWithoutItemInputSchema:()=>Jst,InventoryTransactionUncheckedUpdateManyWithoutItemNestedInputSchema:()=>eT,InventoryTransactionUncheckedUpdateWithoutCreatedByInputSchema:()=>q7,InventoryTransactionUncheckedUpdateWithoutInventoryInputSchema:()=>v8,InventoryTransactionUncheckedUpdateWithoutItemInputSchema:()=>QJ,InventoryTransactionUpdateArgsSchema:()=>vxt,InventoryTransactionUpdateInputSchema:()=>Z9,InventoryTransactionUpdateManyAndReturnArgsSchema:()=>fxt,InventoryTransactionUpdateManyArgsSchema:()=>Oxt,InventoryTransactionUpdateManyMutationInputSchema:()=>VT,InventoryTransactionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>nk,InventoryTransactionUpdateManyWithWhereWithoutInventoryInputSchema:()=>AW,InventoryTransactionUpdateManyWithWhereWithoutItemInputSchema:()=>_x,InventoryTransactionUpdateManyWithoutCreatedByNestedInputSchema:()=>$i,InventoryTransactionUpdateManyWithoutInventoryNestedInputSchema:()=>VM,InventoryTransactionUpdateManyWithoutItemNestedInputSchema:()=>KS,InventoryTransactionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>ok,InventoryTransactionUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>CW,InventoryTransactionUpdateWithWhereUniqueWithoutItemInputSchema:()=>Dx,InventoryTransactionUpdateWithoutCreatedByInputSchema:()=>B7,InventoryTransactionUpdateWithoutInventoryInputSchema:()=>Z8,InventoryTransactionUpdateWithoutItemInputSchema:()=>HJ,InventoryTransactionUpsertArgsSchema:()=>xxt,InventoryTransactionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>ek,InventoryTransactionUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>gW,InventoryTransactionUpsertWithWhereUniqueWithoutItemInputSchema:()=>Fx,InventoryTransactionWhereInputSchema:()=>Wa,InventoryTransactionWhereUniqueInputSchema:()=>Q,InventoryTypeSchema:()=>qt,InventoryUncheckedCreateInputSchema:()=>O1,InventoryUncheckedCreateNestedOneWithoutRestaurantInputSchema:()=>ir,InventoryUncheckedCreateWithoutItemsInputSchema:()=>Df,InventoryUncheckedCreateWithoutRestaurantInputSchema:()=>iT,InventoryUncheckedCreateWithoutStockCountsInputSchema:()=>ow,InventoryUncheckedCreateWithoutTransactionsInputSchema:()=>$f,InventoryUncheckedUpdateInputSchema:()=>w1,InventoryUncheckedUpdateManyInputSchema:()=>B1,InventoryUncheckedUpdateOneWithoutRestaurantNestedInputSchema:()=>Zr,InventoryUncheckedUpdateWithoutItemsInputSchema:()=>_E,InventoryUncheckedUpdateWithoutRestaurantInputSchema:()=>CO,InventoryUncheckedUpdateWithoutStockCountsInputSchema:()=>tL,InventoryUncheckedUpdateWithoutTransactionsInputSchema:()=>YE,InventoryUpdateArgsSchema:()=>JRt,InventoryUpdateInputSchema:()=>f1,InventoryUpdateManyAndReturnArgsSchema:()=>XRt,InventoryUpdateManyArgsSchema:()=>KRt,InventoryUpdateManyMutationInputSchema:()=>N1,InventoryUpdateOneRequiredWithoutItemsNestedInputSchema:()=>GS,InventoryUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>qF,InventoryUpdateOneRequiredWithoutTransactionsNestedInputSchema:()=>ZF,InventoryUpdateOneWithoutRestaurantNestedInputSchema:()=>gr,InventoryUpdateToOneWithWhereWithoutItemsInputSchema:()=>Uct,InventoryUpdateToOneWithWhereWithoutRestaurantInputSchema:()=>o3,InventoryUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>Nct,InventoryUpdateToOneWithWhereWithoutTransactionsInputSchema:()=>Mct,InventoryUpdateWithoutItemsInputSchema:()=>DE,InventoryUpdateWithoutRestaurantInputSchema:()=>gO,InventoryUpdateWithoutStockCountsInputSchema:()=>XE,InventoryUpdateWithoutTransactionsInputSchema:()=>QE,InventoryUpsertArgsSchema:()=>QRt,InventoryUpsertWithoutItemsInputSchema:()=>Pct,InventoryUpsertWithoutRestaurantInputSchema:()=>e3,InventoryUpsertWithoutStockCountsInputSchema:()=>wct,InventoryUpsertWithoutTransactionsInputSchema:()=>jct,InventoryWhereInputSchema:()=>_t,InventoryWhereUniqueInputSchema:()=>$n,InventoryWithdrawalAggregateArgsSchema:()=>PIt,InventoryWithdrawalArgsSchema:()=>emt,InventoryWithdrawalAvgOrderByAggregateInputSchema:()=>Bot,InventoryWithdrawalCountOrderByAggregateInputSchema:()=>Not,InventoryWithdrawalCreateArgsSchema:()=>HWt,InventoryWithdrawalCreateInputSchema:()=>t1,InventoryWithdrawalCreateManyAndReturnArgsSchema:()=>GWt,InventoryWithdrawalCreateManyArgsSchema:()=>YWt,InventoryWithdrawalCreateManyCreatedByInputEnvelopeSchema:()=>wO,InventoryWithdrawalCreateManyCreatedByInputSchema:()=>DH,InventoryWithdrawalCreateManyInputSchema:()=>FP,InventoryWithdrawalCreateManyInventoryItemInputEnvelopeSchema:()=>Qf,InventoryWithdrawalCreateManyInventoryItemInputSchema:()=>IQ,InventoryWithdrawalCreateManyRecipeInputEnvelopeSchema:()=>lf,InventoryWithdrawalCreateManyRecipeInputSchema:()=>oQ,InventoryWithdrawalCreateNestedManyWithoutCreatedByInputSchema:()=>ri,InventoryWithdrawalCreateNestedManyWithoutInventoryItemInputSchema:()=>LS,InventoryWithdrawalCreateNestedManyWithoutRecipeInputSchema:()=>So,InventoryWithdrawalCreateOrConnectWithoutCreatedByInputSchema:()=>Th,InventoryWithdrawalCreateOrConnectWithoutInventoryItemInputSchema:()=>lI,InventoryWithdrawalCreateOrConnectWithoutRecipeInputSchema:()=>Fh,InventoryWithdrawalCreateWithoutCreatedByInputSchema:()=>ku,InventoryWithdrawalCreateWithoutInventoryItemInputSchema:()=>Ys,InventoryWithdrawalCreateWithoutRecipeInputSchema:()=>ps,InventoryWithdrawalDeleteArgsSchema:()=>$Wt,InventoryWithdrawalDeleteManyArgsSchema:()=>tRt,InventoryWithdrawalFindFirstArgsSchema:()=>SIt,InventoryWithdrawalFindFirstOrThrowArgsSchema:()=>TIt,InventoryWithdrawalFindManyArgsSchema:()=>CT,InventoryWithdrawalFindUniqueArgsSchema:()=>WIt,InventoryWithdrawalFindUniqueOrThrowArgsSchema:()=>RIt,InventoryWithdrawalGroupByArgsSchema:()=>UIt,InventoryWithdrawalIncludeSchema:()=>Od,InventoryWithdrawalListRelationFilterSchema:()=>wS,InventoryWithdrawalMaxOrderByAggregateInputSchema:()=>qot,InventoryWithdrawalMinOrderByAggregateInputSchema:()=>Fot,InventoryWithdrawalOrderByRelationAggregateInputSchema:()=>jB,InventoryWithdrawalOrderByWithAggregationInputSchema:()=>TV,InventoryWithdrawalOrderByWithRelationInputSchema:()=>gb,InventoryWithdrawalScalarFieldEnumSchema:()=>Dg,InventoryWithdrawalScalarWhereInputSchema:()=>Va,InventoryWithdrawalScalarWhereWithAggregatesInputSchema:()=>mA,InventoryWithdrawalSchema:()=>nzt,InventoryWithdrawalSelectSchema:()=>fd,InventoryWithdrawalSumOrderByAggregateInputSchema:()=>Dot,InventoryWithdrawalUncheckedCreateInputSchema:()=>e1,InventoryWithdrawalUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ui,InventoryWithdrawalUncheckedCreateNestedManyWithoutInventoryItemInputSchema:()=>QS,InventoryWithdrawalUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Lo,InventoryWithdrawalUncheckedCreateWithoutCreatedByInputSchema:()=>xu,InventoryWithdrawalUncheckedCreateWithoutInventoryItemInputSchema:()=>Gs,InventoryWithdrawalUncheckedCreateWithoutRecipeInputSchema:()=>cs,InventoryWithdrawalUncheckedUpdateInputSchema:()=>n1,InventoryWithdrawalUncheckedUpdateManyInputSchema:()=>a1,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByInputSchema:()=>mst,InventoryWithdrawalUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>cl,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemInputSchema:()=>Kst,InventoryWithdrawalUncheckedUpdateManyWithoutInventoryItemNestedInputSchema:()=>oT,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeInputSchema:()=>Zst,InventoryWithdrawalUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Nn,InventoryWithdrawalUncheckedUpdateWithoutCreatedByInputSchema:()=>x7,InventoryWithdrawalUncheckedUpdateWithoutInventoryItemInputSchema:()=>GJ,InventoryWithdrawalUncheckedUpdateWithoutRecipeInputSchema:()=>cJ,InventoryWithdrawalUpdateArgsSchema:()=>JWt,InventoryWithdrawalUpdateInputSchema:()=>o1,InventoryWithdrawalUpdateManyAndReturnArgsSchema:()=>XWt,InventoryWithdrawalUpdateManyArgsSchema:()=>KWt,InventoryWithdrawalUpdateManyMutationInputSchema:()=>_T,InventoryWithdrawalUpdateManyWithWhereWithoutCreatedByInputSchema:()=>_R,InventoryWithdrawalUpdateManyWithWhereWithoutInventoryItemInputSchema:()=>Vx,InventoryWithdrawalUpdateManyWithWhereWithoutRecipeInputSchema:()=>qk,InventoryWithdrawalUpdateManyWithoutCreatedByNestedInputSchema:()=>Vi,InventoryWithdrawalUpdateManyWithoutInventoryItemNestedInputSchema:()=>XS,InventoryWithdrawalUpdateManyWithoutRecipeNestedInputSchema:()=>mn,InventoryWithdrawalUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>DR,InventoryWithdrawalUpdateWithWhereUniqueWithoutInventoryItemInputSchema:()=>Lx,InventoryWithdrawalUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Bk,InventoryWithdrawalUpdateWithoutCreatedByInputSchema:()=>k7,InventoryWithdrawalUpdateWithoutInventoryItemInputSchema:()=>YJ,InventoryWithdrawalUpdateWithoutRecipeInputSchema:()=>pJ,InventoryWithdrawalUpsertArgsSchema:()=>QWt,InventoryWithdrawalUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>FR,InventoryWithdrawalUpsertWithWhereUniqueWithoutInventoryItemInputSchema:()=>Ex,InventoryWithdrawalUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Nk,InventoryWithdrawalWhereInputSchema:()=>Aa,InventoryWithdrawalWhereUniqueInputSchema:()=>V,LeftoverItemAggregateArgsSchema:()=>wht,LeftoverItemArgsSchema:()=>Gzt,LeftoverItemAvgOrderByAggregateInputSchema:()=>Xet,LeftoverItemCountOrderByAggregateInputSchema:()=>Ket,LeftoverItemCreateArgsSchema:()=>NUt,LeftoverItemCreateInputSchema:()=>gG,LeftoverItemCreateManyAndReturnArgsSchema:()=>FUt,LeftoverItemCreateManyArgsSchema:()=>qUt,LeftoverItemCreateManyInputSchema:()=>vP,LeftoverItemCreateManyMenuItemInputEnvelopeSchema:()=>Jw,LeftoverItemCreateManyMenuItemInputSchema:()=>MQ,LeftoverItemCreateManyRecordedByInputEnvelopeSchema:()=>jO,LeftoverItemCreateManyRecordedByInputSchema:()=>fH,LeftoverItemCreateManyRestaurantInputEnvelopeSchema:()=>dO,LeftoverItemCreateManyRestaurantInputSchema:()=>PH,LeftoverItemCreateNestedManyWithoutMenuItemInputSchema:()=>Xz,LeftoverItemCreateNestedManyWithoutRecordedByInputSchema:()=>ei,LeftoverItemCreateNestedManyWithoutRestaurantInputSchema:()=>Jl,LeftoverItemCreateOrConnectWithoutMenuItemInputSchema:()=>SI,LeftoverItemCreateOrConnectWithoutRecordedByInputSchema:()=>hh,LeftoverItemCreateOrConnectWithoutRestaurantInputSchema:()=>lh,LeftoverItemCreateWithoutMenuItemInputSchema:()=>Wy,LeftoverItemCreateWithoutRecordedByInputSchema:()=>bu,LeftoverItemCreateWithoutRestaurantInputSchema:()=>Yc,LeftoverItemDeleteArgsSchema:()=>DUt,LeftoverItemDeleteManyArgsSchema:()=>VUt,LeftoverItemFindFirstArgsSchema:()=>Oht,LeftoverItemFindFirstOrThrowArgsSchema:()=>fht,LeftoverItemFindManyArgsSchema:()=>hT,LeftoverItemFindUniqueArgsSchema:()=>Bht,LeftoverItemFindUniqueOrThrowArgsSchema:()=>qht,LeftoverItemGroupByArgsSchema:()=>Nht,LeftoverItemIncludeSchema:()=>Cd,LeftoverItemListRelationFilterSchema:()=>ZS,LeftoverItemMaxOrderByAggregateInputSchema:()=>tot,LeftoverItemMinOrderByAggregateInputSchema:()=>eot,LeftoverItemOrderByRelationAggregateInputSchema:()=>UB,LeftoverItemOrderByWithAggregationInputSchema:()=>bV,LeftoverItemOrderByWithRelationInputSchema:()=>db,LeftoverItemScalarFieldEnumSchema:()=>Og,LeftoverItemScalarWhereInputSchema:()=>Da,LeftoverItemScalarWhereWithAggregatesInputSchema:()=>pA,LeftoverItemSchema:()=>$dt,LeftoverItemSelectSchema:()=>Ad,LeftoverItemSumOrderByAggregateInputSchema:()=>oot,LeftoverItemUncheckedCreateInputSchema:()=>CG,LeftoverItemUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>rm,LeftoverItemUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>gi,LeftoverItemUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>ur,LeftoverItemUncheckedCreateWithoutMenuItemInputSchema:()=>Ry,LeftoverItemUncheckedCreateWithoutRecordedByInputSchema:()=>hu,LeftoverItemUncheckedCreateWithoutRestaurantInputSchema:()=>Gc,LeftoverItemUncheckedUpdateInputSchema:()=>SG,LeftoverItemUncheckedUpdateManyInputSchema:()=>TG,LeftoverItemUncheckedUpdateManyWithoutMenuItemInputSchema:()=>zyt,LeftoverItemUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Um,LeftoverItemUncheckedUpdateManyWithoutRecordedByInputSchema:()=>cst,LeftoverItemUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>nl,LeftoverItemUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Kut,LeftoverItemUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Nr,LeftoverItemUncheckedUpdateWithoutMenuItemInputSchema:()=>RK,LeftoverItemUncheckedUpdateWithoutRecordedByInputSchema:()=>h7,LeftoverItemUncheckedUpdateWithoutRestaurantInputSchema:()=>G8,LeftoverItemUpdateArgsSchema:()=>_Ut,LeftoverItemUpdateInputSchema:()=>AG,LeftoverItemUpdateManyAndReturnArgsSchema:()=>LUt,LeftoverItemUpdateManyArgsSchema:()=>EUt,LeftoverItemUpdateManyMutationInputSchema:()=>qT,LeftoverItemUpdateManyWithWhereWithoutMenuItemInputSchema:()=>qj,LeftoverItemUpdateManyWithWhereWithoutRecordedByInputSchema:()=>PR,LeftoverItemUpdateManyWithWhereWithoutRestaurantInputSchema:()=>VW,LeftoverItemUpdateManyWithoutMenuItemNestedInputSchema:()=>hm,LeftoverItemUpdateManyWithoutRecordedByNestedInputSchema:()=>qi,LeftoverItemUpdateManyWithoutRestaurantNestedInputSchema:()=>Pr,LeftoverItemUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Bj,LeftoverItemUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>TR,LeftoverItemUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>LW,LeftoverItemUpdateWithoutMenuItemInputSchema:()=>WK,LeftoverItemUpdateWithoutRecordedByInputSchema:()=>b7,LeftoverItemUpdateWithoutRestaurantInputSchema:()=>Y8,LeftoverItemUpsertArgsSchema:()=>BUt,LeftoverItemUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Nj,LeftoverItemUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>SR,LeftoverItemUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>EW,LeftoverItemWhereInputSchema:()=>ma,LeftoverItemWhereUniqueInputSchema:()=>_,MaintenanceLogAggregateArgsSchema:()=>wbt,MaintenanceLogArgsSchema:()=>Ezt,MaintenanceLogAvgOrderByAggregateInputSchema:()=>Xtt,MaintenanceLogCountOrderByAggregateInputSchema:()=>Ktt,MaintenanceLogCreateArgsSchema:()=>uPt,MaintenanceLogCreateInputSchema:()=>kY,MaintenanceLogCreateManyAndReturnArgsSchema:()=>dPt,MaintenanceLogCreateManyArgsSchema:()=>yPt,MaintenanceLogCreateManyEquipmentInputEnvelopeSchema:()=>kZ,MaintenanceLogCreateManyEquipmentInputSchema:()=>lH,MaintenanceLogCreateManyInputSchema:()=>PP,MaintenanceLogCreateNestedManyWithoutEquipmentInputSchema:()=>DB,MaintenanceLogCreateOrConnectWithoutEquipmentInputSchema:()=>Bb,MaintenanceLogCreateWithoutEquipmentInputSchema:()=>ac,MaintenanceLogDeleteArgsSchema:()=>zPt,MaintenanceLogDeleteManyArgsSchema:()=>IPt,MaintenanceLogFindFirstArgsSchema:()=>Obt,MaintenanceLogFindFirstOrThrowArgsSchema:()=>fbt,MaintenanceLogFindManyArgsSchema:()=>qK,MaintenanceLogFindUniqueArgsSchema:()=>Bbt,MaintenanceLogFindUniqueOrThrowArgsSchema:()=>qbt,MaintenanceLogGroupByArgsSchema:()=>Nbt,MaintenanceLogIncludeSchema:()=>od,MaintenanceLogListRelationFilterSchema:()=>u4,MaintenanceLogMaxOrderByAggregateInputSchema:()=>tet,MaintenanceLogMinOrderByAggregateInputSchema:()=>eet,MaintenanceLogOrderByRelationAggregateInputSchema:()=>Ftt,MaintenanceLogOrderByWithAggregationInputSchema:()=>rV,MaintenanceLogOrderByWithRelationInputSchema:()=>rb,MaintenanceLogScalarFieldEnumSchema:()=>Ug,MaintenanceLogScalarWhereInputSchema:()=>gp,MaintenanceLogScalarWhereWithAggregatesInputSchema:()=>XC,MaintenanceLogSchema:()=>Ddt,MaintenanceLogSelectSchema:()=>nd,MaintenanceLogSumOrderByAggregateInputSchema:()=>oet,MaintenanceLogUncheckedCreateInputSchema:()=>xY,MaintenanceLogUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>EB,MaintenanceLogUncheckedCreateWithoutEquipmentInputSchema:()=>ic,MaintenanceLogUncheckedUpdateInputSchema:()=>MY,MaintenanceLogUncheckedUpdateManyInputSchema:()=>ZY,MaintenanceLogUncheckedUpdateManyWithoutEquipmentInputSchema:()=>jut,MaintenanceLogUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>YB,MaintenanceLogUncheckedUpdateWithoutEquipmentInputSchema:()=>i8,MaintenanceLogUpdateArgsSchema:()=>mPt,MaintenanceLogUpdateInputSchema:()=>jY,MaintenanceLogUpdateManyAndReturnArgsSchema:()=>hPt,MaintenanceLogUpdateManyArgsSchema:()=>bPt,MaintenanceLogUpdateManyMutationInputSchema:()=>LN,MaintenanceLogUpdateManyWithWhereWithoutEquipmentInputSchema:()=>vU,MaintenanceLogUpdateManyWithoutEquipmentNestedInputSchema:()=>HB,MaintenanceLogUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>ZU,MaintenanceLogUpdateWithoutEquipmentInputSchema:()=>a8,MaintenanceLogUpsertArgsSchema:()=>sPt,MaintenanceLogUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>MU,MaintenanceLogWhereInputSchema:()=>ca,MaintenanceLogWhereUniqueInputSchema:()=>Ae,MaintenanceTypeSchema:()=>ce,MenuAggregateArgsSchema:()=>xAt,MenuArgsSchema:()=>Kj,MenuAvgOrderByAggregateInputSchema:()=>_it,MenuCategoryAggregateArgsSchema:()=>ybt,MenuCategoryArgsSchema:()=>fQ,MenuCategoryAvgOrderByAggregateInputSchema:()=>Mtt,MenuCategoryCountOrderByAggregateInputSchema:()=>jtt,MenuCategoryCountOutputTypeArgsSchema:()=>wQ,MenuCategoryCountOutputTypeSelectSchema:()=>hX,MenuCategoryCreateArgsSchema:()=>kTt,MenuCategoryCreateInputSchema:()=>pY,MenuCategoryCreateManyAndReturnArgsSchema:()=>MTt,MenuCategoryCreateManyArgsSchema:()=>jTt,MenuCategoryCreateManyInputSchema:()=>CP,MenuCategoryCreateManyMenuInputEnvelopeSchema:()=>Bw,MenuCategoryCreateManyMenuInputSchema:()=>RQ,MenuCategoryCreateNestedManyWithoutMenuInputSchema:()=>hD,MenuCategoryCreateNestedOneWithoutMenuItemsInputSchema:()=>Qz,MenuCategoryCreateOrConnectWithoutMenuInputSchema:()=>hI,MenuCategoryCreateOrConnectWithoutMenuItemsInputSchema:()=>L3,MenuCategoryCreateWithoutMenuInputSchema:()=>by,MenuCategoryCreateWithoutMenuItemsInputSchema:()=>Vw,MenuCategoryDeleteArgsSchema:()=>ZTt,MenuCategoryDeleteManyArgsSchema:()=>wTt,MenuCategoryFindFirstArgsSchema:()=>ubt,MenuCategoryFindFirstOrThrowArgsSchema:()=>sbt,MenuCategoryFindManyArgsSchema:()=>NK,MenuCategoryFindUniqueArgsSchema:()=>zbt,MenuCategoryFindUniqueOrThrowArgsSchema:()=>mbt,MenuCategoryGroupByArgsSchema:()=>dbt,MenuCategoryIncludeSchema:()=>Yy,MenuCategoryListRelationFilterSchema:()=>c2,MenuCategoryMaxOrderByAggregateInputSchema:()=>Ztt,MenuCategoryMenuIdNameCompoundUniqueInputSchema:()=>kN,MenuCategoryMinOrderByAggregateInputSchema:()=>vtt,MenuCategoryNullableScalarRelationFilterSchema:()=>u2,MenuCategoryOrderByRelationAggregateInputSchema:()=>Fit,MenuCategoryOrderByWithAggregationInputSchema:()=>nV,MenuCategoryOrderByWithRelationInputSchema:()=>Zm,MenuCategoryScalarFieldEnumSchema:()=>Ag,MenuCategoryScalarWhereInputSchema:()=>_p,MenuCategoryScalarWhereWithAggregatesInputSchema:()=>GC,MenuCategorySchema:()=>Ndt,MenuCategorySelectSchema:()=>Gy,MenuCategorySumOrderByAggregateInputSchema:()=>Ott,MenuCategoryUncheckedCreateInputSchema:()=>cY,MenuCategoryUncheckedCreateNestedManyWithoutMenuInputSchema:()=>gD,MenuCategoryUncheckedCreateWithoutMenuInputSchema:()=>hy,MenuCategoryUncheckedCreateWithoutMenuItemsInputSchema:()=>Hw,MenuCategoryUncheckedUpdateInputSchema:()=>sY,MenuCategoryUncheckedUpdateManyInputSchema:()=>yY,MenuCategoryUncheckedUpdateManyWithoutMenuInputSchema:()=>cyt,MenuCategoryUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>PD,MenuCategoryUncheckedUpdateWithoutMenuInputSchema:()=>hK,MenuCategoryUncheckedUpdateWithoutMenuItemsInputSchema:()=>wL,MenuCategoryUpdateArgsSchema:()=>vTt,MenuCategoryUpdateInputSchema:()=>uY,MenuCategoryUpdateManyAndReturnArgsSchema:()=>fTt,MenuCategoryUpdateManyArgsSchema:()=>OTt,MenuCategoryUpdateManyMutationInputSchema:()=>_N,MenuCategoryUpdateManyWithWhereWithoutMenuInputSchema:()=>Pj,MenuCategoryUpdateManyWithoutMenuNestedInputSchema:()=>SD,MenuCategoryUpdateOneWithoutMenuItemsNestedInputSchema:()=>sm,MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>gut,MenuCategoryUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Tj,MenuCategoryUpdateWithoutMenuInputSchema:()=>bK,MenuCategoryUpdateWithoutMenuItemsInputSchema:()=>fL,MenuCategoryUpsertArgsSchema:()=>xTt,MenuCategoryUpsertWithWhereUniqueWithoutMenuInputSchema:()=>Sj,MenuCategoryUpsertWithoutMenuItemsInputSchema:()=>Iut,MenuCategoryWhereInputSchema:()=>we,MenuCategoryWhereUniqueInputSchema:()=>ee,MenuCountOrderByAggregateInputSchema:()=>Dit,MenuCountOutputTypeArgsSchema:()=>h0,MenuCountOutputTypeSelectSchema:()=>DX,MenuCreateArgsSchema:()=>gMt,MenuCreateInputSchema:()=>Z$,MenuCreateManyAndReturnArgsSchema:()=>SMt,MenuCreateManyArgsSchema:()=>AMt,MenuCreateManyInputSchema:()=>dU,MenuCreateManyRestaurantInputEnvelopeSchema:()=>sO,MenuCreateManyRestaurantInputSchema:()=>SH,MenuCreateNestedManyWithoutRestaurantInputSchema:()=>Gl,MenuCreateNestedOneWithoutMenuCategoryInputSchema:()=>h2,MenuCreateNestedOneWithoutMenuItemsInputSchema:()=>Hz,MenuCreateOrConnectWithoutMenuCategoryInputSchema:()=>d6,MenuCreateOrConnectWithoutMenuItemsInputSchema:()=>E3,MenuCreateOrConnectWithoutRestaurantInputSchema:()=>ah,MenuCreateWithoutMenuCategoryInputSchema:()=>zZ,MenuCreateWithoutMenuItemsInputSchema:()=>Ew,MenuCreateWithoutRestaurantInputSchema:()=>Lc,MenuDeleteArgsSchema:()=>TMt,MenuDeleteManyArgsSchema:()=>RMt,MenuFindFirstArgsSchema:()=>RAt,MenuFindFirstOrThrowArgsSchema:()=>kAt,MenuFindManyArgsSchema:()=>tX,MenuFindUniqueArgsSchema:()=>MAt,MenuFindUniqueOrThrowArgsSchema:()=>ZAt,MenuGroupByArgsSchema:()=>jAt,MenuIncludeSchema:()=>Zz,MenuItemAggregateArgsSchema:()=>DAt,MenuItemArgsSchema:()=>op,MenuItemAvgOrderByAggregateInputSchema:()=>Xit,MenuItemCountOrderByAggregateInputSchema:()=>Kit,MenuItemCountOutputTypeArgsSchema:()=>I0,MenuItemCountOutputTypeSelectSchema:()=>_X,MenuItemCreateArgsSchema:()=>NMt,MenuItemCreateInputSchema:()=>_$,MenuItemCreateManyAndReturnArgsSchema:()=>FMt,MenuItemCreateManyArgsSchema:()=>qMt,MenuItemCreateManyCategoryInputEnvelopeSchema:()=>bZ,MenuItemCreateManyCategoryInputSchema:()=>oH,MenuItemCreateManyInputSchema:()=>mU,MenuItemCreateManyMenuInputEnvelopeSchema:()=>Nw,MenuItemCreateManyMenuInputSchema:()=>WQ,MenuItemCreateNestedManyWithoutCategoryInputSchema:()=>I2,MenuItemCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Uq,MenuItemCreateNestedManyWithoutMenuInputSchema:()=>bD,MenuItemCreateNestedManyWithoutRecipesInputSchema:()=>mo,MenuItemCreateNestedOneWithoutFeedbackInputSchema:()=>Cq,MenuItemCreateNestedOneWithoutLeftoverItemsInputSchema:()=>Bq,MenuItemCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>T5,MenuItemCreateNestedOneWithoutNutritionalInfoInputSchema:()=>ort,MenuItemCreateNestedOneWithoutRecommendationsInputSchema:()=>Ylt,MenuItemCreateNestedOneWithoutSalesTransactionsInputSchema:()=>z2,MenuItemCreateOrConnectWithoutCategoryInputSchema:()=>Ob,MenuItemCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Eb,MenuItemCreateOrConnectWithoutFeedbackInputSchema:()=>M6,MenuItemCreateOrConnectWithoutLeftoverItemsInputSchema:()=>O6,MenuItemCreateOrConnectWithoutMenuInputSchema:()=>bI,MenuItemCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>D3,MenuItemCreateOrConnectWithoutNutritionalInfoInputSchema:()=>Q3,MenuItemCreateOrConnectWithoutRecipesInputSchema:()=>vh,MenuItemCreateOrConnectWithoutRecommendationsInputSchema:()=>K6,MenuItemCreateOrConnectWithoutSalesTransactionsInputSchema:()=>y6,MenuItemCreateWithoutCategoryInputSchema:()=>$p,MenuItemCreateWithoutDietaryRestrictionsInputSchema:()=>zc,MenuItemCreateWithoutFeedbackInputSchema:()=>iv,MenuItemCreateWithoutLeftoverItemsInputSchema:()=>sv,MenuItemCreateWithoutMenuInputSchema:()=>zy,MenuItemCreateWithoutMenuItemRecipesInputSchema:()=>qw,MenuItemCreateWithoutNutritionalInfoInputSchema:()=>eN,MenuItemCreateWithoutRecipesInputSchema:()=>Yu,MenuItemCreateWithoutRecommendationsInputSchema:()=>Gv,MenuItemCreateWithoutSalesTransactionsInputSchema:()=>yZ,MenuItemCreateallergensInputSchema:()=>po,MenuItemCreaterecipeIdsInputSchema:()=>io,MenuItemCreaterecipeServingsAmountInputSchema:()=>lo,MenuItemCreaterecipeServingsCostInputSchema:()=>ro,MenuItemDeleteArgsSchema:()=>DMt,MenuItemDeleteManyArgsSchema:()=>VMt,MenuItemFindFirstArgsSchema:()=>qAt,MenuItemFindFirstOrThrowArgsSchema:()=>FAt,MenuItemFindManyArgsSchema:()=>cg,MenuItemFindUniqueArgsSchema:()=>EAt,MenuItemFindUniqueOrThrowArgsSchema:()=>LAt,MenuItemGroupByArgsSchema:()=>_At,MenuItemIncludeSchema:()=>wz,MenuItemListRelationFilterSchema:()=>kI,MenuItemMaxOrderByAggregateInputSchema:()=>tlt,MenuItemMinOrderByAggregateInputSchema:()=>elt,MenuItemNullableScalarRelationFilterSchema:()=>AM,MenuItemOrderByRelationAggregateInputSchema:()=>zM,MenuItemOrderByWithAggregationInputSchema:()=>KV,MenuItemOrderByWithRelationInputSchema:()=>Bl,MenuItemRecipeAggregateArgsSchema:()=>fAt,MenuItemRecipeArgsSchema:()=>smt,MenuItemRecipeAvgOrderByAggregateInputSchema:()=>Qit,MenuItemRecipeCountOrderByAggregateInputSchema:()=>Hit,MenuItemRecipeCreateArgsSchema:()=>kMt,MenuItemRecipeCreateInputSchema:()=>N$,MenuItemRecipeCreateManyAndReturnArgsSchema:()=>MMt,MenuItemRecipeCreateManyArgsSchema:()=>jMt,MenuItemRecipeCreateManyInputSchema:()=>zU,MenuItemRecipeCreateManyMenuItemInputEnvelopeSchema:()=>Qw,MenuItemRecipeCreateManyMenuItemInputSchema:()=>kQ,MenuItemRecipeCreateManyRecipeInputEnvelopeSchema:()=>nf,MenuItemRecipeCreateManyRecipeInputSchema:()=>tQ,MenuItemRecipeCreateNestedManyWithoutMenuItemInputSchema:()=>Gz,MenuItemRecipeCreateNestedManyWithoutRecipeInputSchema:()=>Co,MenuItemRecipeCreateOrConnectWithoutMenuItemInputSchema:()=>gI,MenuItemRecipeCreateOrConnectWithoutRecipeInputSchema:()=>Bh,MenuItemRecipeCreateWithoutMenuItemInputSchema:()=>Cy,MenuItemRecipeCreateWithoutRecipeInputSchema:()=>as,MenuItemRecipeDeleteArgsSchema:()=>ZMt,MenuItemRecipeDeleteManyArgsSchema:()=>wMt,MenuItemRecipeFindFirstArgsSchema:()=>vAt,MenuItemRecipeFindFirstOrThrowArgsSchema:()=>OAt,MenuItemRecipeFindManyArgsSchema:()=>CN,MenuItemRecipeFindUniqueArgsSchema:()=>NAt,MenuItemRecipeFindUniqueOrThrowArgsSchema:()=>BAt,MenuItemRecipeGroupByArgsSchema:()=>wAt,MenuItemRecipeIncludeSchema:()=>Oz,MenuItemRecipeListRelationFilterSchema:()=>MM,MenuItemRecipeMaxOrderByAggregateInputSchema:()=>Yit,MenuItemRecipeMenuItemIdRecipeIdCompoundUniqueInputSchema:()=>fN,MenuItemRecipeMinOrderByAggregateInputSchema:()=>Git,MenuItemRecipeOrderByRelationAggregateInputSchema:()=>X4,MenuItemRecipeOrderByWithAggregationInputSchema:()=>JV,MenuItemRecipeOrderByWithRelationInputSchema:()=>jb,MenuItemRecipeScalarFieldEnumSchema:()=>mC,MenuItemRecipeScalarWhereInputSchema:()=>jl,MenuItemRecipeScalarWhereWithAggregatesInputSchema:()=>EA,MenuItemRecipeSchema:()=>Mzt,MenuItemRecipeSelectSchema:()=>fz,MenuItemRecipeSumOrderByAggregateInputSchema:()=>$it,MenuItemRecipeUncheckedCreateInputSchema:()=>B$,MenuItemRecipeUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>nm,MenuItemRecipeUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>_o,MenuItemRecipeUncheckedCreateWithoutMenuItemInputSchema:()=>Ay,MenuItemRecipeUncheckedCreateWithoutRecipeInputSchema:()=>is,MenuItemRecipeUncheckedUpdateInputSchema:()=>F$,MenuItemRecipeUncheckedUpdateManyInputSchema:()=>D$,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemInputSchema:()=>syt,MenuItemRecipeUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Am,MenuItemRecipeUncheckedUpdateManyWithoutRecipeInputSchema:()=>jst,MenuItemRecipeUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>fn,MenuItemRecipeUncheckedUpdateWithoutMenuItemInputSchema:()=>AK,MenuItemRecipeUncheckedUpdateWithoutRecipeInputSchema:()=>iJ,MenuItemRecipeUpdateArgsSchema:()=>vMt,MenuItemRecipeUpdateInputSchema:()=>q$,MenuItemRecipeUpdateManyAndReturnArgsSchema:()=>fMt,MenuItemRecipeUpdateManyArgsSchema:()=>OMt,MenuItemRecipeUpdateManyMutationInputSchema:()=>yM,MenuItemRecipeUpdateManyWithWhereWithoutMenuItemInputSchema:()=>jj,MenuItemRecipeUpdateManyWithWhereWithoutRecipeInputSchema:()=>vk,MenuItemRecipeUpdateManyWithoutMenuItemNestedInputSchema:()=>dm,MenuItemRecipeUpdateManyWithoutRecipeNestedInputSchema:()=>dn,MenuItemRecipeUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>xj,MenuItemRecipeUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Zk,MenuItemRecipeUpdateWithoutMenuItemInputSchema:()=>CK,MenuItemRecipeUpdateWithoutRecipeInputSchema:()=>aJ,MenuItemRecipeUpsertArgsSchema:()=>xMt,MenuItemRecipeUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>kj,MenuItemRecipeUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Mk,MenuItemRecipeWhereInputSchema:()=>Ma,MenuItemRecipeWhereUniqueInputSchema:()=>Tt,MenuItemScalarFieldEnumSchema:()=>bC,MenuItemScalarRelationFilterSchema:()=>RI,MenuItemScalarWhereInputSchema:()=>ao,MenuItemScalarWhereWithAggregatesInputSchema:()=>LA,MenuItemSchema:()=>Zzt,MenuItemSelectSchema:()=>Nz,MenuItemSumOrderByAggregateInputSchema:()=>olt,MenuItemUncheckedCreateInputSchema:()=>E$,MenuItemUncheckedCreateNestedManyWithoutCategoryInputSchema:()=>g2,MenuItemUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>kq,MenuItemUncheckedCreateNestedManyWithoutMenuInputSchema:()=>ID,MenuItemUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>No,MenuItemUncheckedCreateWithoutCategoryInputSchema:()=>Jp,MenuItemUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>mc,MenuItemUncheckedCreateWithoutFeedbackInputSchema:()=>lv,MenuItemUncheckedCreateWithoutLeftoverItemsInputSchema:()=>yv,MenuItemUncheckedCreateWithoutMenuInputSchema:()=>my,MenuItemUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>Fw,MenuItemUncheckedCreateWithoutNutritionalInfoInputSchema:()=>oN,MenuItemUncheckedCreateWithoutRecipesInputSchema:()=>Gu,MenuItemUncheckedCreateWithoutRecommendationsInputSchema:()=>$v,MenuItemUncheckedCreateWithoutSalesTransactionsInputSchema:()=>dZ,MenuItemUncheckedUpdateInputSchema:()=>V$,MenuItemUncheckedUpdateManyInputSchema:()=>H$,MenuItemUncheckedUpdateManyWithoutCategoryInputSchema:()=>Wut,MenuItemUncheckedUpdateManyWithoutCategoryNestedInputSchema:()=>S2,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>fut,MenuItemUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Oq,MenuItemUncheckedUpdateManyWithoutMenuInputSchema:()=>pyt,MenuItemUncheckedUpdateManyWithoutMenuNestedInputSchema:()=>TD,MenuItemUncheckedUpdateManyWithoutRecipesInputSchema:()=>Ust,MenuItemUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>jn,MenuItemUncheckedUpdateWithoutCategoryInputSchema:()=>J3,MenuItemUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>m8,MenuItemUncheckedUpdateWithoutFeedbackInputSchema:()=>W_,MenuItemUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>Z_,MenuItemUncheckedUpdateWithoutMenuInputSchema:()=>mK,MenuItemUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>jL,MenuItemUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>BL,MenuItemUncheckedUpdateWithoutRecipesInputSchema:()=>G7,MenuItemUncheckedUpdateWithoutRecommendationsInputSchema:()=>zE,MenuItemUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>_D,MenuItemUpdateArgsSchema:()=>_Mt,MenuItemUpdateInputSchema:()=>L$,MenuItemUpdateManyAndReturnArgsSchema:()=>LMt,MenuItemUpdateManyArgsSchema:()=>EMt,MenuItemUpdateManyMutationInputSchema:()=>PS,MenuItemUpdateManyWithWhereWithoutCategoryInputSchema:()=>AU,MenuItemUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>YU,MenuItemUpdateManyWithWhereWithoutMenuInputSchema:()=>Aj,MenuItemUpdateManyWithWhereWithoutRecipesInputSchema:()=>Ik,MenuItemUpdateManyWithoutCategoryNestedInputSchema:()=>A2,MenuItemUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Mq,MenuItemUpdateManyWithoutMenuNestedInputSchema:()=>AD,MenuItemUpdateManyWithoutRecipesNestedInputSchema:()=>pn,MenuItemUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>Dq,MenuItemUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>U5,MenuItemUpdateOneRequiredWithoutRecommendationsNestedInputSchema:()=>Glt,MenuItemUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>b2,MenuItemUpdateOneWithoutFeedbackNestedInputSchema:()=>Tq,MenuItemUpdateOneWithoutNutritionalInfoNestedInputSchema:()=>nrt,MenuItemUpdateToOneWithWhereWithoutFeedbackInputSchema:()=>cpt,MenuItemUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>mpt,MenuItemUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>dut,MenuItemUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>Aut,MenuItemUpdateToOneWithWhereWithoutRecommendationsInputSchema:()=>Jpt,MenuItemUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>Urt,MenuItemUpdateWithWhereUniqueWithoutCategoryInputSchema:()=>CU,MenuItemUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>QU,MenuItemUpdateWithWhereUniqueWithoutMenuInputSchema:()=>Cj,MenuItemUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>hk,MenuItemUpdateWithoutCategoryInputSchema:()=>$3,MenuItemUpdateWithoutDietaryRestrictionsInputSchema:()=>z8,MenuItemUpdateWithoutFeedbackInputSchema:()=>U_,MenuItemUpdateWithoutLeftoverItemsInputSchema:()=>M_,MenuItemUpdateWithoutMenuInputSchema:()=>zK,MenuItemUpdateWithoutMenuItemRecipesInputSchema:()=>xL,MenuItemUpdateWithoutNutritionalInfoInputSchema:()=>NL,MenuItemUpdateWithoutRecipesInputSchema:()=>Y7,MenuItemUpdateWithoutRecommendationsInputSchema:()=>dE,MenuItemUpdateWithoutSalesTransactionsInputSchema:()=>DD,MenuItemUpdateallergensInputSchema:()=>He,MenuItemUpdaterecipeIdsInputSchema:()=>Ee,MenuItemUpdaterecipeServingsAmountInputSchema:()=>Le,MenuItemUpdaterecipeServingsCostInputSchema:()=>Ve,MenuItemUpsertArgsSchema:()=>BMt,MenuItemUpsertWithWhereUniqueWithoutCategoryInputSchema:()=>gU,MenuItemUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>HU,MenuItemUpsertWithWhereUniqueWithoutMenuInputSchema:()=>gj,MenuItemUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>bk,MenuItemUpsertWithoutFeedbackInputSchema:()=>ppt,MenuItemUpsertWithoutLeftoverItemsInputSchema:()=>zpt,MenuItemUpsertWithoutMenuItemRecipesInputSchema:()=>yut,MenuItemUpsertWithoutNutritionalInfoInputSchema:()=>Cut,MenuItemUpsertWithoutRecommendationsInputSchema:()=>$pt,MenuItemUpsertWithoutSalesTransactionsInputSchema:()=>Prt,MenuItemWhereInputSchema:()=>Pt,MenuItemWhereUniqueInputSchema:()=>x,MenuListRelationFilterSchema:()=>x4,MenuMaxOrderByAggregateInputSchema:()=>Eit,MenuMinOrderByAggregateInputSchema:()=>Lit,MenuOrderByRelationAggregateInputSchema:()=>Ant,MenuOrderByWithAggregationInputSchema:()=>$V,MenuOrderByWithRelationInputSchema:()=>Gp,MenuScalarFieldEnumSchema:()=>zC,MenuScalarRelationFilterSchema:()=>dM,MenuScalarWhereInputSchema:()=>Tp,MenuScalarWhereWithAggregatesInputSchema:()=>_A,MenuSchema:()=>jzt,MenuSelectSchema:()=>vz,MenuSumOrderByAggregateInputSchema:()=>Vit,MenuUncheckedCreateInputSchema:()=>v$,MenuUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>pr,MenuUncheckedCreateWithoutMenuCategoryInputSchema:()=>mZ,MenuUncheckedCreateWithoutMenuItemsInputSchema:()=>Lw,MenuUncheckedCreateWithoutRestaurantInputSchema:()=>Vc,MenuUncheckedUpdateInputSchema:()=>f$,MenuUncheckedUpdateManyInputSchema:()=>w$,MenuUncheckedUpdateManyWithoutRestaurantInputSchema:()=>$ut,MenuUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>fr,MenuUncheckedUpdateWithoutMenuCategoryInputSchema:()=>LD,MenuUncheckedUpdateWithoutMenuItemsInputSchema:()=>OL,MenuUncheckedUpdateWithoutRestaurantInputSchema:()=>V8,MenuUpdateArgsSchema:()=>PMt,MenuUpdateInputSchema:()=>O$,MenuUpdateManyAndReturnArgsSchema:()=>WMt,MenuUpdateManyArgsSchema:()=>UMt,MenuUpdateManyMutationInputSchema:()=>iB,MenuUpdateManyWithWhereWithoutRestaurantInputSchema:()=>qW,MenuUpdateManyWithoutRestaurantNestedInputSchema:()=>Sr,MenuUpdateOneRequiredWithoutMenuCategoryNestedInputSchema:()=>C2,MenuUpdateOneRequiredWithoutMenuItemsNestedInputSchema:()=>um,MenuUpdateToOneWithWhereWithoutMenuCategoryInputSchema:()=>Rrt,MenuUpdateToOneWithWhereWithoutMenuItemsInputSchema:()=>hut,MenuUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>BW,MenuUpdateWithoutMenuCategoryInputSchema:()=>ED,MenuUpdateWithoutMenuItemsInputSchema:()=>vL,MenuUpdateWithoutRestaurantInputSchema:()=>L8,MenuUpsertArgsSchema:()=>CMt,MenuUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>NW,MenuUpsertWithoutMenuCategoryInputSchema:()=>Wrt,MenuUpsertWithoutMenuItemsInputSchema:()=>but,MenuWhereInputSchema:()=>fe,MenuWhereUniqueInputSchema:()=>Jt,NestedBoolFilterSchema:()=>$A,NestedBoolWithAggregatesFilterSchema:()=>j5,NestedDateTimeFilterSchema:()=>KA,NestedDateTimeNullableFilterSchema:()=>tS,NestedDateTimeNullableWithAggregatesFilterSchema:()=>w5,NestedDateTimeWithAggregatesFilterSchema:()=>v5,NestedEnumCategoryFilterSchema:()=>mS,NestedEnumCategoryWithAggregatesFilterSchema:()=>J5,NestedEnumChecklistFrequencyFilterSchema:()=>nS,NestedEnumChecklistFrequencyWithAggregatesFilterSchema:()=>q5,NestedEnumChecklistItemTypeFilterSchema:()=>aS,NestedEnumChecklistItemTypeWithAggregatesFilterSchema:()=>F5,NestedEnumChecklistStatusFilterSchema:()=>iS,NestedEnumChecklistStatusWithAggregatesFilterSchema:()=>D5,NestedEnumConstraintTypeFilterSchema:()=>sS,NestedEnumConstraintTypeWithAggregatesFilterSchema:()=>Q5,NestedEnumCountStatusFilterSchema:()=>IS,NestedEnumCountStatusWithAggregatesFilterSchema:()=>t6,NestedEnumDayOfWeekFilterSchema:()=>uS,NestedEnumDayOfWeekWithAggregatesFilterSchema:()=>H5,NestedEnumEquipmentStatusFilterSchema:()=>eS,NestedEnumEquipmentStatusWithAggregatesFilterSchema:()=>N5,NestedEnumFeedbackSourceFilterSchema:()=>lS,NestedEnumFeedbackSourceWithAggregatesFilterSchema:()=>_5,NestedEnumFeedbackStatusFilterSchema:()=>rS,NestedEnumFeedbackStatusWithAggregatesFilterSchema:()=>E5,NestedEnumInventoryTypeFilterSchema:()=>yS,NestedEnumInventoryTypeWithAggregatesFilterSchema:()=>Y5,NestedEnumMaintenanceTypeFilterSchema:()=>oS,NestedEnumMaintenanceTypeWithAggregatesFilterSchema:()=>B5,NestedEnumNutritionSourceNullableFilterSchema:()=>bS,NestedEnumNutritionSourceNullableWithAggregatesFilterSchema:()=>K5,NestedEnumOrderStatusFilterSchema:()=>gS,NestedEnumOrderStatusWithAggregatesFilterSchema:()=>e6,NestedEnumPhotoTypeFilterSchema:()=>XA,NestedEnumPhotoTypeWithAggregatesFilterSchema:()=>O5,NestedEnumPrepStatusFilterSchema:()=>AS,NestedEnumPrepStatusWithAggregatesFilterSchema:()=>n6,NestedEnumProductionStatusFilterSchema:()=>pS,NestedEnumProductionStatusWithAggregatesFilterSchema:()=>L5,NestedEnumShiftStatusFilterSchema:()=>CS,NestedEnumShiftStatusWithAggregatesFilterSchema:()=>o6,NestedEnumSkillLevelFilterSchema:()=>zS,NestedEnumSkillLevelWithAggregatesFilterSchema:()=>$5,NestedEnumTaskTypeFilterSchema:()=>cS,NestedEnumTaskTypeWithAggregatesFilterSchema:()=>V5,NestedEnumTransactionTypeFilterSchema:()=>hS,NestedEnumTransactionTypeWithAggregatesFilterSchema:()=>X5,NestedEnumUserRoleFilterSchema:()=>dS,NestedEnumUserRoleWithAggregatesFilterSchema:()=>G5,NestedFloatFilterSchema:()=>Kr,NestedFloatNullableFilterSchema:()=>Xr,NestedFloatNullableWithAggregatesFilterSchema:()=>M5,NestedFloatWithAggregatesFilterSchema:()=>k5,NestedIntFilterSchema:()=>at,NestedIntNullableFilterSchema:()=>hl,NestedIntNullableWithAggregatesFilterSchema:()=>f5,NestedIntWithAggregatesFilterSchema:()=>R5,NestedStringFilterSchema:()=>GA,NestedStringNullableFilterSchema:()=>JA,NestedStringNullableWithAggregatesFilterSchema:()=>Z5,NestedStringWithAggregatesFilterSchema:()=>x5,NullableDateTimeFieldUpdateOperationsInputSchema:()=>I,NullableEnumNutritionSourceFieldUpdateOperationsInputSchema:()=>ta,NullableFloatFieldUpdateOperationsInputSchema:()=>u,NullableIntFieldUpdateOperationsInputSchema:()=>b,NullableStringFieldUpdateOperationsInputSchema:()=>l,NullsOrderSchema:()=>bX,NutritionSourceSchema:()=>nt,NutritionalInfoAggregateArgsSchema:()=>YAt,NutritionalInfoArgsSchema:()=>g0,NutritionalInfoAvgOrderByAggregateInputSchema:()=>alt,NutritionalInfoCountOrderByAggregateInputSchema:()=>nlt,NutritionalInfoCreateArgsSchema:()=>HMt,NutritionalInfoCreateInputSchema:()=>Q$,NutritionalInfoCreateManyAndReturnArgsSchema:()=>GMt,NutritionalInfoCreateManyArgsSchema:()=>YMt,NutritionalInfoCreateManyInputSchema:()=>bU,NutritionalInfoCreateNestedOneWithoutMenuItemInputSchema:()=>$z,NutritionalInfoCreateOrConnectWithoutMenuItemInputSchema:()=>Yw,NutritionalInfoCreateWithoutMenuItemInputSchema:()=>yT,NutritionalInfoDeleteArgsSchema:()=>$Mt,NutritionalInfoDeleteManyArgsSchema:()=>tZt,NutritionalInfoFindFirstArgsSchema:()=>VAt,NutritionalInfoFindFirstOrThrowArgsSchema:()=>HAt,NutritionalInfoFindManyArgsSchema:()=>QAt,NutritionalInfoFindUniqueArgsSchema:()=>$At,NutritionalInfoFindUniqueOrThrowArgsSchema:()=>JAt,NutritionalInfoGroupByArgsSchema:()=>GAt,NutritionalInfoIncludeSchema:()=>Bz,NutritionalInfoMaxOrderByAggregateInputSchema:()=>ilt,NutritionalInfoMinOrderByAggregateInputSchema:()=>llt,NutritionalInfoNullableScalarRelationFilterSchema:()=>s2,NutritionalInfoOrderByWithAggregationInputSchema:()=>XV,NutritionalInfoOrderByWithRelationInputSchema:()=>Lm,NutritionalInfoScalarFieldEnumSchema:()=>hC,NutritionalInfoScalarWhereWithAggregatesInputSchema:()=>VA,NutritionalInfoSchema:()=>vzt,NutritionalInfoSelectSchema:()=>qz,NutritionalInfoSumOrderByAggregateInputSchema:()=>rlt,NutritionalInfoUncheckedCreateInputSchema:()=>Y$,NutritionalInfoUncheckedCreateNestedOneWithoutMenuItemInputSchema:()=>am,NutritionalInfoUncheckedCreateWithoutMenuItemInputSchema:()=>dT,NutritionalInfoUncheckedUpdateInputSchema:()=>$$,NutritionalInfoUncheckedUpdateManyInputSchema:()=>K$,NutritionalInfoUncheckedUpdateOneWithoutMenuItemNestedInputSchema:()=>Sm,NutritionalInfoUncheckedUpdateWithoutMenuItemInputSchema:()=>tN,NutritionalInfoUpdateArgsSchema:()=>JMt,NutritionalInfoUpdateInputSchema:()=>G$,NutritionalInfoUpdateManyAndReturnArgsSchema:()=>XMt,NutritionalInfoUpdateManyArgsSchema:()=>KMt,NutritionalInfoUpdateManyMutationInputSchema:()=>J$,NutritionalInfoUpdateOneWithoutMenuItemNestedInputSchema:()=>zm,NutritionalInfoUpdateToOneWithWhereWithoutMenuItemInputSchema:()=>H3,NutritionalInfoUpdateWithoutMenuItemInputSchema:()=>Xw,NutritionalInfoUpsertArgsSchema:()=>QMt,NutritionalInfoUpsertWithoutMenuItemInputSchema:()=>V3,NutritionalInfoWhereInputSchema:()=>De,NutritionalInfoWhereUniqueInputSchema:()=>_l,NutritionalRecommendationAggregateArgsSchema:()=>EIt,NutritionalRecommendationArgsSchema:()=>nmt,NutritionalRecommendationAvgOrderByAggregateInputSchema:()=>Xot,NutritionalRecommendationCountOrderByAggregateInputSchema:()=>Kot,NutritionalRecommendationCreateArgsSchema:()=>gRt,NutritionalRecommendationCreateInputSchema:()=>b1,NutritionalRecommendationCreateManyAndReturnArgsSchema:()=>SRt,NutritionalRecommendationCreateManyArgsSchema:()=>ARt,NutritionalRecommendationCreateManyInputSchema:()=>EP,NutritionalRecommendationCreateManyMenuItemInputEnvelopeSchema:()=>Gw,NutritionalRecommendationCreateManyMenuItemInputSchema:()=>xQ,NutritionalRecommendationCreateNestedManyWithoutMenuItemInputSchema:()=>Jz,NutritionalRecommendationCreateOrConnectWithoutMenuItemInputSchema:()=>CI,NutritionalRecommendationCreateWithoutMenuItemInputSchema:()=>Sy,NutritionalRecommendationDeleteArgsSchema:()=>TRt,NutritionalRecommendationDeleteManyArgsSchema:()=>RRt,NutritionalRecommendationFindFirstArgsSchema:()=>DIt,NutritionalRecommendationFindFirstOrThrowArgsSchema:()=>_It,NutritionalRecommendationFindManyArgsSchema:()=>HK,NutritionalRecommendationFindUniqueArgsSchema:()=>VIt,NutritionalRecommendationFindUniqueOrThrowArgsSchema:()=>HIt,NutritionalRecommendationGroupByArgsSchema:()=>LIt,NutritionalRecommendationIncludeSchema:()=>Fd,NutritionalRecommendationListRelationFilterSchema:()=>y2,NutritionalRecommendationMaxOrderByAggregateInputSchema:()=>tnt,NutritionalRecommendationMinOrderByAggregateInputSchema:()=>ent,NutritionalRecommendationOrderByRelationAggregateInputSchema:()=>Jit,NutritionalRecommendationOrderByWithAggregationInputSchema:()=>WV,NutritionalRecommendationOrderByWithRelationInputSchema:()=>Ab,NutritionalRecommendationScalarFieldEnumSchema:()=>Lg,NutritionalRecommendationScalarWhereInputSchema:()=>Ep,NutritionalRecommendationScalarWhereWithAggregatesInputSchema:()=>IA,NutritionalRecommendationSchema:()=>lzt,NutritionalRecommendationSelectSchema:()=>Dd,NutritionalRecommendationSumOrderByAggregateInputSchema:()=>ont,NutritionalRecommendationUncheckedCreateInputSchema:()=>h1,NutritionalRecommendationUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>im,NutritionalRecommendationUncheckedCreateWithoutMenuItemInputSchema:()=>Ty,NutritionalRecommendationUncheckedUpdateInputSchema:()=>g1,NutritionalRecommendationUncheckedUpdateManyInputSchema:()=>C1,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemInputSchema:()=>yyt,NutritionalRecommendationUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Tm,NutritionalRecommendationUncheckedUpdateWithoutMenuItemInputSchema:()=>TK,NutritionalRecommendationUpdateArgsSchema:()=>PRt,NutritionalRecommendationUpdateInputSchema:()=>I1,NutritionalRecommendationUpdateManyAndReturnArgsSchema:()=>WRt,NutritionalRecommendationUpdateManyArgsSchema:()=>URt,NutritionalRecommendationUpdateManyMutationInputSchema:()=>JN,NutritionalRecommendationUpdateManyWithWhereWithoutMenuItemInputSchema:()=>vj,NutritionalRecommendationUpdateManyWithoutMenuItemNestedInputSchema:()=>mm,NutritionalRecommendationUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>Zj,NutritionalRecommendationUpdateWithoutMenuItemInputSchema:()=>SK,NutritionalRecommendationUpsertArgsSchema:()=>CRt,NutritionalRecommendationUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Mj,NutritionalRecommendationWhereInputSchema:()=>Ta,NutritionalRecommendationWhereUniqueInputSchema:()=>We,OrderAggregateArgsSchema:()=>DCt,OrderArgsSchema:()=>u0,OrderAvgOrderByAggregateInputSchema:()=>nit,OrderCountOrderByAggregateInputSchema:()=>oit,OrderCountOutputTypeArgsSchema:()=>s0,OrderCountOutputTypeSelectSchema:()=>NX,OrderCreateArgsSchema:()=>ujt,OrderCreateInputSchema:()=>J9,OrderCreateManyAndReturnArgsSchema:()=>djt,OrderCreateManyArgsSchema:()=>yjt,OrderCreateManyInputSchema:()=>lU,OrderCreateManyRestaurantInputEnvelopeSchema:()=>cO,OrderCreateManyRestaurantInputSchema:()=>CH,OrderCreateManyVendorInputEnvelopeSchema:()=>Aw,OrderCreateManyVendorInputSchema:()=>SQ,OrderCreateNestedManyWithoutRestaurantInputSchema:()=>Ql,OrderCreateNestedManyWithoutVendorInputSchema:()=>JF,OrderCreateNestedOneWithoutItemsInputSchema:()=>i5,OrderCreateOrConnectWithoutItemsInputSchema:()=>v3,OrderCreateOrConnectWithoutRestaurantInputSchema:()=>oh,OrderCreateOrConnectWithoutVendorInputSchema:()=>uI,OrderCreateWithoutItemsInputSchema:()=>hw,OrderCreateWithoutRestaurantInputSchema:()=>Fc,OrderCreateWithoutVendorInputSchema:()=>oy,OrderDeleteArgsSchema:()=>zjt,OrderDeleteManyArgsSchema:()=>Ijt,OrderFindFirstArgsSchema:()=>qCt,OrderFindFirstOrThrowArgsSchema:()=>FCt,OrderFindManyArgsSchema:()=>IN,OrderFindUniqueArgsSchema:()=>ECt,OrderFindUniqueOrThrowArgsSchema:()=>LCt,OrderGroupByArgsSchema:()=>_Ct,OrderIncludeSchema:()=>Iz,OrderItemAggregateArgsSchema:()=>QCt,OrderItemArgsSchema:()=>pmt,OrderItemAvgOrderByAggregateInputSchema:()=>cit,OrderItemCountOrderByAggregateInputSchema:()=>pit,OrderItemCreateArgsSchema:()=>gjt,OrderItemCreateInputSchema:()=>o$,OrderItemCreateManyAndReturnArgsSchema:()=>Sjt,OrderItemCreateManyArgsSchema:()=>Ajt,OrderItemCreateManyIngredientInputEnvelopeSchema:()=>Uf,OrderItemCreateManyIngredientInputSchema:()=>yQ,OrderItemCreateManyInputSchema:()=>rU,OrderItemCreateManyOrderInputEnvelopeSchema:()=>bw,OrderItemCreateManyOrderInputSchema:()=>AQ,OrderItemCreateNestedManyWithoutIngredientInputSchema:()=>vI,OrderItemCreateNestedManyWithoutOrderInputSchema:()=>VF,OrderItemCreateOrConnectWithoutIngredientInputSchema:()=>Kh,OrderItemCreateOrConnectWithoutOrderInputSchema:()=>cI,OrderItemCreateWithoutIngredientInputSchema:()=>Zs,OrderItemCreateWithoutOrderInputSchema:()=>ty,OrderItemDeleteArgsSchema:()=>Tjt,OrderItemDeleteManyArgsSchema:()=>Rjt,OrderItemFindFirstArgsSchema:()=>VCt,OrderItemFindFirstOrThrowArgsSchema:()=>HCt,OrderItemFindManyArgsSchema:()=>gN,OrderItemFindUniqueArgsSchema:()=>GCt,OrderItemFindUniqueOrThrowArgsSchema:()=>$Ct,OrderItemGroupByArgsSchema:()=>YCt,OrderItemIncludeSchema:()=>Cz,OrderItemListRelationFilterSchema:()=>ZM,OrderItemMaxOrderByAggregateInputSchema:()=>uit,OrderItemMinOrderByAggregateInputSchema:()=>sit,OrderItemOrderByRelationAggregateInputSchema:()=>e2,OrderItemOrderByWithAggregationInputSchema:()=>LV,OrderItemOrderByWithRelationInputSchema:()=>Rb,OrderItemScalarFieldEnumSchema:()=>pC,OrderItemScalarWhereInputSchema:()=>Ml,OrderItemScalarWhereWithAggregatesInputSchema:()=>wA,OrderItemSchema:()=>Pzt,OrderItemSelectSchema:()=>Az,OrderItemSumOrderByAggregateInputSchema:()=>yit,OrderItemUncheckedCreateInputSchema:()=>n$,OrderItemUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>DI,OrderItemUncheckedCreateNestedManyWithoutOrderInputSchema:()=>HF,OrderItemUncheckedCreateWithoutIngredientInputSchema:()=>vs,OrderItemUncheckedCreateWithoutOrderInputSchema:()=>ey,OrderItemUncheckedUpdateInputSchema:()=>i$,OrderItemUncheckedUpdateManyInputSchema:()=>l$,OrderItemUncheckedUpdateManyWithoutIngredientInputSchema:()=>Lst,OrderItemUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>ng,OrderItemUncheckedUpdateManyWithoutOrderInputSchema:()=>eyt,OrderItemUncheckedUpdateManyWithoutOrderNestedInputSchema:()=>$F,OrderItemUncheckedUpdateWithoutIngredientInputSchema:()=>vJ,OrderItemUncheckedUpdateWithoutOrderInputSchema:()=>eK,OrderItemUpdateArgsSchema:()=>Pjt,OrderItemUpdateInputSchema:()=>a$,OrderItemUpdateManyAndReturnArgsSchema:()=>Wjt,OrderItemUpdateManyArgsSchema:()=>Ujt,OrderItemUpdateManyMutationInputSchema:()=>sM,OrderItemUpdateManyWithWhereWithoutIngredientInputSchema:()=>Ax,OrderItemUpdateManyWithWhereWithoutOrderInputSchema:()=>tj,OrderItemUpdateManyWithoutIngredientNestedInputSchema:()=>GI,OrderItemUpdateManyWithoutOrderNestedInputSchema:()=>GF,OrderItemUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Cx,OrderItemUpdateWithWhereUniqueWithoutOrderInputSchema:()=>Xx,OrderItemUpdateWithoutIngredientInputSchema:()=>ZJ,OrderItemUpdateWithoutOrderInputSchema:()=>tK,OrderItemUpsertArgsSchema:()=>Cjt,OrderItemUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>gx,OrderItemUpsertWithWhereUniqueWithoutOrderInputSchema:()=>Kx,OrderItemWhereInputSchema:()=>ka,OrderItemWhereUniqueInputSchema:()=>St,OrderListRelationFilterSchema:()=>RM,OrderMaxOrderByAggregateInputSchema:()=>ait,OrderMinOrderByAggregateInputSchema:()=>iit,OrderOrderByRelationAggregateInputSchema:()=>Z4,OrderOrderByWithAggregationInputSchema:()=>EV,OrderOrderByWithRelationInputSchema:()=>Dm,OrderScalarFieldEnumSchema:()=>rC,OrderScalarRelationFilterSchema:()=>i2,OrderScalarWhereInputSchema:()=>Rl,OrderScalarWhereWithAggregatesInputSchema:()=>fA,OrderSchema:()=>Tzt,OrderSelectSchema:()=>gz,OrderStatusSchema:()=>Bt,OrderSumOrderByAggregateInputSchema:()=>lit,OrderUncheckedCreateInputSchema:()=>K9,OrderUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>lr,OrderUncheckedCreateNestedManyWithoutVendorInputSchema:()=>tD,OrderUncheckedCreateWithoutItemsInputSchema:()=>Iw,OrderUncheckedCreateWithoutRestaurantInputSchema:()=>Dc,OrderUncheckedCreateWithoutVendorInputSchema:()=>ny,OrderUncheckedUpdateInputSchema:()=>t$,OrderUncheckedUpdateManyInputSchema:()=>e$,OrderUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Yut,OrderUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>vr,OrderUncheckedUpdateManyWithoutVendorInputSchema:()=>oyt,OrderUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>lD,OrderUncheckedUpdateWithoutItemsInputSchema:()=>zL,OrderUncheckedUpdateWithoutRestaurantInputSchema:()=>D8,OrderUncheckedUpdateWithoutVendorInputSchema:()=>nK,OrderUpdateArgsSchema:()=>mjt,OrderUpdateInputSchema:()=>X9,OrderUpdateManyAndReturnArgsSchema:()=>hjt,OrderUpdateManyArgsSchema:()=>bjt,OrderUpdateManyMutationInputSchema:()=>uM,OrderUpdateManyWithWhereWithoutRestaurantInputSchema:()=>vW,OrderUpdateManyWithWhereWithoutVendorInputSchema:()=>nj,OrderUpdateManyWithoutRestaurantNestedInputSchema:()=>Cr,OrderUpdateManyWithoutVendorNestedInputSchema:()=>nD,OrderUpdateOneRequiredWithoutItemsNestedInputSchema:()=>r5,OrderUpdateToOneWithWhereWithoutItemsInputSchema:()=>Jct,OrderUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>ZW,OrderUpdateWithWhereUniqueWithoutVendorInputSchema:()=>oj,OrderUpdateWithoutItemsInputSchema:()=>dL,OrderUpdateWithoutRestaurantInputSchema:()=>F8,OrderUpdateWithoutVendorInputSchema:()=>oK,OrderUpsertArgsSchema:()=>sjt,OrderUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>MW,OrderUpsertWithWhereUniqueWithoutVendorInputSchema:()=>ej,OrderUpsertWithoutItemsInputSchema:()=>$ct,OrderWhereInputSchema:()=>Ke,OrderWhereUniqueInputSchema:()=>st,OrganizationAggregateArgsSchema:()=>ngt,OrganizationArgsSchema:()=>$j,OrganizationAvgOrderByAggregateInputSchema:()=>unt,OrganizationCountOrderByAggregateInputSchema:()=>cnt,OrganizationCountOutputTypeArgsSchema:()=>$Q,OrganizationCountOutputTypeSelectSchema:()=>RX,OrganizationCreateArgsSchema:()=>NRt,OrganizationCreateInputSchema:()=>R1,OrganizationCreateManyAndReturnArgsSchema:()=>FRt,OrganizationCreateManyArgsSchema:()=>qRt,OrganizationCreateManyInputSchema:()=>VP,OrganizationCreateNestedOneWithoutRestaurantsInputSchema:()=>El,OrganizationCreateNestedOneWithoutUsersInputSchema:()=>Ya,OrganizationCreateOrConnectWithoutRestaurantsInputSchema:()=>t3,OrganizationCreateOrConnectWithoutUsersInputSchema:()=>n3,OrganizationCreateWithoutRestaurantsInputSchema:()=>aO,OrganizationCreateWithoutUsersInputSchema:()=>AO,OrganizationDeleteArgsSchema:()=>DRt,OrganizationDeleteManyArgsSchema:()=>VRt,OrganizationFindFirstArgsSchema:()=>tgt,OrganizationFindFirstOrThrowArgsSchema:()=>egt,OrganizationFindManyArgsSchema:()=>ogt,OrganizationFindUniqueArgsSchema:()=>igt,OrganizationFindUniqueOrThrowArgsSchema:()=>lgt,OrganizationGroupByArgsSchema:()=>agt,OrganizationIncludeSchema:()=>_d,OrganizationMaxOrderByAggregateInputSchema:()=>snt,OrganizationMinOrderByAggregateInputSchema:()=>ynt,OrganizationNullableScalarRelationFilterSchema:()=>WM,OrganizationOrderByWithAggregationInputSchema:()=>kV,OrganizationOrderByWithRelationInputSchema:()=>Qp,OrganizationScalarFieldEnumSchema:()=>Hg,OrganizationScalarWhereWithAggregatesInputSchema:()=>CA,OrganizationSchema:()=>pzt,OrganizationSelectSchema:()=>Ed,OrganizationSumOrderByAggregateInputSchema:()=>dnt,OrganizationUncheckedCreateInputSchema:()=>k1,OrganizationUncheckedCreateWithoutRestaurantsInputSchema:()=>iO,OrganizationUncheckedCreateWithoutUsersInputSchema:()=>SO,OrganizationUncheckedUpdateInputSchema:()=>j1,OrganizationUncheckedUpdateManyInputSchema:()=>Z1,OrganizationUncheckedUpdateWithoutRestaurantsInputSchema:()=>IE,OrganizationUncheckedUpdateWithoutUsersInputSchema:()=>CE,OrganizationUpdateArgsSchema:()=>_Rt,OrganizationUpdateInputSchema:()=>x1,OrganizationUpdateManyAndReturnArgsSchema:()=>LRt,OrganizationUpdateManyArgsSchema:()=>ERt,OrganizationUpdateManyMutationInputSchema:()=>M1,OrganizationUpdateOneWithoutRestaurantsNestedInputSchema:()=>br,OrganizationUpdateOneWithoutUsersNestedInputSchema:()=>Zi,OrganizationUpdateToOneWithWhereWithoutRestaurantsInputSchema:()=>ect,OrganizationUpdateToOneWithWhereWithoutUsersInputSchema:()=>nct,OrganizationUpdateWithoutRestaurantsInputSchema:()=>hE,OrganizationUpdateWithoutUsersInputSchema:()=>gE,OrganizationUpsertArgsSchema:()=>BRt,OrganizationUpsertWithoutRestaurantsInputSchema:()=>tct,OrganizationUpsertWithoutUsersInputSchema:()=>oct,OrganizationWhereInputSchema:()=>Me,OrganizationWhereUniqueInputSchema:()=>Ol,PasswordResetAggregateArgsSchema:()=>TAt,PasswordResetArgsSchema:()=>umt,PasswordResetAvgOrderByAggregateInputSchema:()=>wit,PasswordResetCountOrderByAggregateInputSchema:()=>fit,PasswordResetCreateArgsSchema:()=>uMt,PasswordResetCreateInputSchema:()=>R$,PasswordResetCreateManyAndReturnArgsSchema:()=>dMt,PasswordResetCreateManyArgsSchema:()=>yMt,PasswordResetCreateManyInputSchema:()=>yU,PasswordResetCreateManyUserInputEnvelopeSchema:()=>xO,PasswordResetCreateManyUserInputSchema:()=>OH,PasswordResetCreateNestedManyWithoutUserInputSchema:()=>ti,PasswordResetCreateOrConnectWithoutUserInputSchema:()=>bh,PasswordResetCreateWithoutUserInputSchema:()=>zu,PasswordResetDeleteArgsSchema:()=>zMt,PasswordResetDeleteManyArgsSchema:()=>IMt,PasswordResetFindFirstArgsSchema:()=>AAt,PasswordResetFindFirstOrThrowArgsSchema:()=>SAt,PasswordResetFindManyArgsSchema:()=>XK,PasswordResetFindUniqueArgsSchema:()=>UAt,PasswordResetFindUniqueOrThrowArgsSchema:()=>WAt,PasswordResetGroupByArgsSchema:()=>PAt,PasswordResetIncludeSchema:()=>jz,PasswordResetListRelationFilterSchema:()=>N4,PasswordResetMaxOrderByAggregateInputSchema:()=>Nit,PasswordResetMinOrderByAggregateInputSchema:()=>Bit,PasswordResetOrderByRelationAggregateInputSchema:()=>Mnt,PasswordResetOrderByWithAggregationInputSchema:()=>GV,PasswordResetOrderByWithRelationInputSchema:()=>xb,PasswordResetScalarFieldEnumSchema:()=>dC,PasswordResetScalarWhereInputSchema:()=>kp,PasswordResetScalarWhereWithAggregatesInputSchema:()=>DA,PasswordResetSchema:()=>xzt,PasswordResetSelectSchema:()=>Mz,PasswordResetSumOrderByAggregateInputSchema:()=>qit,PasswordResetUncheckedCreateInputSchema:()=>k$,PasswordResetUncheckedCreateNestedManyWithoutUserInputSchema:()=>Ii,PasswordResetUncheckedCreateWithoutUserInputSchema:()=>mu,PasswordResetUncheckedUpdateInputSchema:()=>j$,PasswordResetUncheckedUpdateManyInputSchema:()=>M$,PasswordResetUncheckedUpdateManyWithoutUserInputSchema:()=>pst,PasswordResetUncheckedUpdateManyWithoutUserNestedInputSchema:()=>ol,PasswordResetUncheckedUpdateWithoutUserInputSchema:()=>m7,PasswordResetUpdateArgsSchema:()=>mMt,PasswordResetUpdateInputSchema:()=>x$,PasswordResetUpdateManyAndReturnArgsSchema:()=>hMt,PasswordResetUpdateManyArgsSchema:()=>bMt,PasswordResetUpdateManyMutationInputSchema:()=>aB,PasswordResetUpdateManyWithWhereWithoutUserInputSchema:()=>AR,PasswordResetUpdateManyWithoutUserNestedInputSchema:()=>Bi,PasswordResetUpdateWithWhereUniqueWithoutUserInputSchema:()=>CR,PasswordResetUpdateWithoutUserInputSchema:()=>z7,PasswordResetUpsertArgsSchema:()=>sMt,PasswordResetUpsertWithWhereUniqueWithoutUserInputSchema:()=>gR,PasswordResetWhereInputSchema:()=>ja,PasswordResetWhereUniqueInputSchema:()=>ke,PhotoTypeSchema:()=>de,PrepBoardAggregateArgsSchema:()=>sAt,PrepBoardArgsSchema:()=>m0,PrepBoardAvgOrderByAggregateInputSchema:()=>Wit,PrepBoardCountOrderByAggregateInputSchema:()=>Uit,PrepBoardCountOutputTypeArgsSchema:()=>b0,PrepBoardCountOutputTypeSelectSchema:()=>FX,PrepBoardCreateArgsSchema:()=>Hjt,PrepBoardCreateInputSchema:()=>h$,PrepBoardCreateManyAndReturnArgsSchema:()=>Gjt,PrepBoardCreateManyArgsSchema:()=>Yjt,PrepBoardCreateManyInputSchema:()=>uU,PrepBoardCreateNestedManyWithoutRecipesInputSchema:()=>Io,PrepBoardCreateNestedOneWithoutPrepItemsInputSchema:()=>cD,PrepBoardCreateOrConnectWithoutPrepItemsInputSchema:()=>w3,PrepBoardCreateOrConnectWithoutRecipesInputSchema:()=>wh,PrepBoardCreateWithoutPrepItemsInputSchema:()=>Rw,PrepBoardCreateWithoutRecipesInputSchema:()=>ts,PrepBoardDeleteArgsSchema:()=>$jt,PrepBoardDeleteManyArgsSchema:()=>tMt,PrepBoardFindFirstArgsSchema:()=>cAt,PrepBoardFindFirstOrThrowArgsSchema:()=>uAt,PrepBoardFindManyArgsSchema:()=>KK,PrepBoardFindUniqueArgsSchema:()=>dAt,PrepBoardFindUniqueOrThrowArgsSchema:()=>zAt,PrepBoardGroupByArgsSchema:()=>yAt,PrepBoardIncludeSchema:()=>Wz,PrepBoardListRelationFilterSchema:()=>E4,PrepBoardMaxOrderByAggregateInputSchema:()=>Rit,PrepBoardMinOrderByAggregateInputSchema:()=>kit,PrepBoardOrderByRelationAggregateInputSchema:()=>Knt,PrepBoardOrderByWithAggregationInputSchema:()=>QV,PrepBoardOrderByWithRelationInputSchema:()=>Em,PrepBoardScalarFieldEnumSchema:()=>sC,PrepBoardScalarRelationFilterSchema:()=>p2,PrepBoardScalarWhereInputSchema:()=>vp,PrepBoardScalarWhereWithAggregatesInputSchema:()=>qA,PrepBoardSchema:()=>Rzt,PrepBoardSelectSchema:()=>Rz,PrepBoardSumOrderByAggregateInputSchema:()=>xit,PrepBoardUncheckedCreateInputSchema:()=>I$,PrepBoardUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Fo,PrepBoardUncheckedCreateWithoutPrepItemsInputSchema:()=>kw,PrepBoardUncheckedCreateWithoutRecipesInputSchema:()=>es,PrepBoardUncheckedUpdateInputSchema:()=>C$,PrepBoardUncheckedUpdateManyInputSchema:()=>A$,PrepBoardUncheckedUpdateManyWithoutRecipesInputSchema:()=>kst,PrepBoardUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>vn,PrepBoardUncheckedUpdateWithoutPrepItemsInputSchema:()=>CL,PrepBoardUncheckedUpdateWithoutRecipesInputSchema:()=>eJ,PrepBoardUpdateArgsSchema:()=>Jjt,PrepBoardUpdateInputSchema:()=>g$,PrepBoardUpdateManyAndReturnArgsSchema:()=>Xjt,PrepBoardUpdateManyArgsSchema:()=>Kjt,PrepBoardUpdateManyMutationInputSchema:()=>nB,PrepBoardUpdateManyWithWhereWithoutRecipesInputSchema:()=>Rk,PrepBoardUpdateManyWithoutRecipesNestedInputSchema:()=>sn,PrepBoardUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>yD,PrepBoardUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>nut,PrepBoardUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Wk,PrepBoardUpdateWithoutPrepItemsInputSchema:()=>gL,PrepBoardUpdateWithoutRecipesInputSchema:()=>tJ,PrepBoardUpsertArgsSchema:()=>Qjt,PrepBoardUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Uk,PrepBoardUpsertWithoutPrepItemsInputSchema:()=>out,PrepBoardWhereInputSchema:()=>to,PrepBoardWhereUniqueInputSchema:()=>ie,PrepHistoryAggregateArgsSchema:()=>lSt,PrepHistoryArgsSchema:()=>dmt,PrepHistoryAvgOrderByAggregateInputSchema:()=>zlt,PrepHistoryCountOrderByAggregateInputSchema:()=>dlt,PrepHistoryCreateArgsSchema:()=>uZt,PrepHistoryCreateInputSchema:()=>a4,PrepHistoryCreateManyAndReturnArgsSchema:()=>dZt,PrepHistoryCreateManyArgsSchema:()=>yZt,PrepHistoryCreateManyInputSchema:()=>IU,PrepHistoryCreateManyRecipeInputEnvelopeSchema:()=>ef,PrepHistoryCreateManyRecipeInputSchema:()=>KH,PrepHistoryCreateNestedManyWithoutRecipeInputSchema:()=>ho,PrepHistoryCreateOrConnectWithoutRecipeInputSchema:()=>fh,PrepHistoryCreateWithoutRecipeInputSchema:()=>Ku,PrepHistoryDeleteArgsSchema:()=>zZt,PrepHistoryDeleteManyArgsSchema:()=>IZt,PrepHistoryFindFirstArgsSchema:()=>aSt,PrepHistoryFindFirstOrThrowArgsSchema:()=>iSt,PrepHistoryFindManyArgsSchema:()=>oX,PrepHistoryFindUniqueArgsSchema:()=>pSt,PrepHistoryFindUniqueOrThrowArgsSchema:()=>cSt,PrepHistoryGroupByArgsSchema:()=>rSt,PrepHistoryIncludeSchema:()=>_z,PrepHistoryListRelationFilterSchema:()=>_4,PrepHistoryMaxOrderByAggregateInputSchema:()=>mlt,PrepHistoryMinOrderByAggregateInputSchema:()=>blt,PrepHistoryOrderByRelationAggregateInputSchema:()=>Jnt,PrepHistoryOrderByWithAggregationInputSchema:()=>eH,PrepHistoryOrderByWithRelationInputSchema:()=>Zb,PrepHistoryScalarFieldEnumSchema:()=>gC,PrepHistoryScalarWhereInputSchema:()=>Zp,PrepHistoryScalarWhereWithAggregatesInputSchema:()=>QA,PrepHistorySchema:()=>fzt,PrepHistorySelectSchema:()=>Ez,PrepHistorySumOrderByAggregateInputSchema:()=>hlt,PrepHistoryUncheckedCreateInputSchema:()=>i4,PrepHistoryUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>qo,PrepHistoryUncheckedCreateWithoutRecipeInputSchema:()=>Xu,PrepHistoryUncheckedUpdateInputSchema:()=>r4,PrepHistoryUncheckedUpdateManyInputSchema:()=>p4,PrepHistoryUncheckedUpdateManyWithoutRecipeInputSchema:()=>Rst,PrepHistoryUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Zn,PrepHistoryUncheckedUpdateWithoutRecipeInputSchema:()=>X7,PrepHistoryUpdateArgsSchema:()=>mZt,PrepHistoryUpdateInputSchema:()=>l4,PrepHistoryUpdateManyAndReturnArgsSchema:()=>hZt,PrepHistoryUpdateManyArgsSchema:()=>bZt,PrepHistoryUpdateManyMutationInputSchema:()=>rB,PrepHistoryUpdateManyWithWhereWithoutRecipeInputSchema:()=>Pk,PrepHistoryUpdateManyWithoutRecipeNestedInputSchema:()=>un,PrepHistoryUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Tk,PrepHistoryUpdateWithoutRecipeInputSchema:()=>K7,PrepHistoryUpsertArgsSchema:()=>sZt,PrepHistoryUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Sk,PrepHistoryWhereInputSchema:()=>va,PrepHistoryWhereUniqueInputSchema:()=>je,PrepItemAggregateArgsSchema:()=>hAt,PrepItemArgsSchema:()=>cmt,PrepItemAvgOrderByAggregateInputSchema:()=>Mit,PrepItemCountOrderByAggregateInputSchema:()=>jit,PrepItemCreateArgsSchema:()=>eMt,PrepItemCreateInputSchema:()=>S$,PrepItemCreateManyAndReturnArgsSchema:()=>aMt,PrepItemCreateManyArgsSchema:()=>nMt,PrepItemCreateManyAssignedToInputEnvelopeSchema:()=>WO,PrepItemCreateManyAssignedToInputSchema:()=>MH,PrepItemCreateManyInputSchema:()=>sU,PrepItemCreateManyPrepBoardInputEnvelopeSchema:()=>Ww,PrepItemCreateManyPrepBoardInputSchema:()=>UQ,PrepItemCreateManyRecipeInputEnvelopeSchema:()=>of,PrepItemCreateManyRecipeInputSchema:()=>XH,PrepItemCreateNestedManyWithoutAssignedToInputSchema:()=>Ja,PrepItemCreateNestedManyWithoutPrepBoardInputSchema:()=>b5,PrepItemCreateNestedManyWithoutRecipeInputSchema:()=>go,PrepItemCreateOrConnectWithoutAssignedToInputSchema:()=>dh,PrepItemCreateOrConnectWithoutPrepBoardInputSchema:()=>mI,PrepItemCreateOrConnectWithoutRecipeInputSchema:()=>Nh,PrepItemCreateWithoutAssignedToInputSchema:()=>pu,PrepItemCreateWithoutPrepBoardInputSchema:()=>yy,PrepItemCreateWithoutRecipeInputSchema:()=>os,PrepItemDeleteArgsSchema:()=>iMt,PrepItemDeleteManyArgsSchema:()=>cMt,PrepItemFindFirstArgsSchema:()=>mAt,PrepItemFindFirstOrThrowArgsSchema:()=>bAt,PrepItemFindManyArgsSchema:()=>PT,PrepItemFindUniqueArgsSchema:()=>gAt,PrepItemFindUniqueOrThrowArgsSchema:()=>CAt,PrepItemGroupByArgsSchema:()=>IAt,PrepItemIncludeSchema:()=>kz,PrepItemListRelationFilterSchema:()=>fS,PrepItemMaxOrderByAggregateInputSchema:()=>Zit,PrepItemMinOrderByAggregateInputSchema:()=>vit,PrepItemOrderByRelationAggregateInputSchema:()=>xB,PrepItemOrderByWithAggregationInputSchema:()=>YV,PrepItemOrderByWithRelationInputSchema:()=>kb,PrepItemScalarFieldEnumSchema:()=>yC,PrepItemScalarWhereInputSchema:()=>La,PrepItemScalarWhereWithAggregatesInputSchema:()=>FA,PrepItemSchema:()=>kzt,PrepItemSelectSchema:()=>xz,PrepItemSumOrderByAggregateInputSchema:()=>Oit,PrepItemUncheckedCreateInputSchema:()=>T$,PrepItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>mi,PrepItemUncheckedCreateNestedManyWithoutPrepBoardInputSchema:()=>I5,PrepItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Do,PrepItemUncheckedCreateWithoutAssignedToInputSchema:()=>cu,PrepItemUncheckedCreateWithoutPrepBoardInputSchema:()=>dy,PrepItemUncheckedCreateWithoutRecipeInputSchema:()=>ns,PrepItemUncheckedUpdateInputSchema:()=>U$,PrepItemUncheckedUpdateManyInputSchema:()=>W$,PrepItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>ist,PrepItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>Xi,PrepItemUncheckedUpdateManyWithoutPrepBoardInputSchema:()=>ryt,PrepItemUncheckedUpdateManyWithoutPrepBoardNestedInputSchema:()=>S5,PrepItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>xst,PrepItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>On,PrepItemUncheckedUpdateWithoutAssignedToInputSchema:()=>c7,PrepItemUncheckedUpdateWithoutPrepBoardInputSchema:()=>dK,PrepItemUncheckedUpdateWithoutRecipeInputSchema:()=>nJ,PrepItemUpdateArgsSchema:()=>lMt,PrepItemUpdateInputSchema:()=>P$,PrepItemUpdateManyAndReturnArgsSchema:()=>pMt,PrepItemUpdateManyArgsSchema:()=>rMt,PrepItemUpdateManyMutationInputSchema:()=>HT,PrepItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>yR,PrepItemUpdateManyWithWhereWithoutPrepBoardInputSchema:()=>Ij,PrepItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>jk,PrepItemUpdateManyWithoutAssignedToNestedInputSchema:()=>fi,PrepItemUpdateManyWithoutPrepBoardNestedInputSchema:()=>C5,PrepItemUpdateManyWithoutRecipeNestedInputSchema:()=>yn,PrepItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>sR,PrepItemUpdateWithWhereUniqueWithoutPrepBoardInputSchema:()=>hj,PrepItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>xk,PrepItemUpdateWithoutAssignedToInputSchema:()=>p7,PrepItemUpdateWithoutPrepBoardInputSchema:()=>yK,PrepItemUpdateWithoutRecipeInputSchema:()=>oJ,PrepItemUpsertArgsSchema:()=>oMt,PrepItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>uR,PrepItemUpsertWithWhereUniqueWithoutPrepBoardInputSchema:()=>bj,PrepItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>kk,PrepItemWhereInputSchema:()=>xa,PrepItemWhereUniqueInputSchema:()=>Y,PrepStatusSchema:()=>et,ProductionPlanAggregateArgsSchema:()=>Yht,ProductionPlanArgsSchema:()=>HQ,ProductionPlanAvgOrderByAggregateInputSchema:()=>cot,ProductionPlanCountOrderByAggregateInputSchema:()=>pot,ProductionPlanCountOutputTypeArgsSchema:()=>QQ,ProductionPlanCountOutputTypeSelectSchema:()=>UX,ProductionPlanCreateArgsSchema:()=>eWt,ProductionPlanCreateInputSchema:()=>xG,ProductionPlanCreateManyAndReturnArgsSchema:()=>aWt,ProductionPlanCreateManyArgsSchema:()=>nWt,ProductionPlanCreateManyCreatedByInputEnvelopeSchema:()=>ZO,ProductionPlanCreateManyCreatedByInputSchema:()=>NH,ProductionPlanCreateManyInputSchema:()=>fP,ProductionPlanCreateManyRestaurantInputEnvelopeSchema:()=>mO,ProductionPlanCreateManyRestaurantInputSchema:()=>WH,ProductionPlanCreateNestedManyWithoutCreatedByInputSchema:()=>ni,ProductionPlanCreateNestedManyWithoutRestaurantInputSchema:()=>Xl,ProductionPlanCreateNestedOneWithoutItemsInputSchema:()=>nF,ProductionPlanCreateOrConnectWithoutCreatedByInputSchema:()=>gh,ProductionPlanCreateOrConnectWithoutItemsInputSchema:()=>D6,ProductionPlanCreateOrConnectWithoutRestaurantInputSchema:()=>ph,ProductionPlanCreateWithoutCreatedByInputSchema:()=>Cu,ProductionPlanCreateWithoutItemsInputSchema:()=>Wv,ProductionPlanCreateWithoutRestaurantInputSchema:()=>Kc,ProductionPlanDeleteArgsSchema:()=>iWt,ProductionPlanDeleteManyArgsSchema:()=>cWt,ProductionPlanFindFirstArgsSchema:()=>Hht,ProductionPlanFindFirstOrThrowArgsSchema:()=>Qht,ProductionPlanFindManyArgsSchema:()=>sN,ProductionPlanFindUniqueArgsSchema:()=>$ht,ProductionPlanFindUniqueOrThrowArgsSchema:()=>Jht,ProductionPlanGroupByArgsSchema:()=>Ght,ProductionPlanIncludeSchema:()=>Pd,ProductionPlanItemAggregateArgsSchema:()=>tIt,ProductionPlanItemArgsSchema:()=>Jzt,ProductionPlanItemAvgOrderByAggregateInputSchema:()=>mot,ProductionPlanItemCountOrderByAggregateInputSchema:()=>zot,ProductionPlanItemCreateArgsSchema:()=>uWt,ProductionPlanItemCreateInputSchema:()=>OG,ProductionPlanItemCreateManyAndReturnArgsSchema:()=>dWt,ProductionPlanItemCreateManyArgsSchema:()=>yWt,ProductionPlanItemCreateManyAssignedToInputEnvelopeSchema:()=>vO,ProductionPlanItemCreateManyAssignedToInputSchema:()=>BH,ProductionPlanItemCreateManyInputSchema:()=>wP,ProductionPlanItemCreateManyProductionPlanInputEnvelopeSchema:()=>Uv,ProductionPlanItemCreateManyProductionPlanInputSchema:()=>sH,ProductionPlanItemCreateManyRecipeInputEnvelopeSchema:()=>af,ProductionPlanItemCreateManyRecipeInputSchema:()=>eQ,ProductionPlanItemCreateNestedManyWithoutAssignedToInputSchema:()=>ai,ProductionPlanItemCreateNestedManyWithoutProductionPlanInputSchema:()=>Jq,ProductionPlanItemCreateNestedManyWithoutRecipeInputSchema:()=>Ao,ProductionPlanItemCreateOrConnectWithoutAssignedToInputSchema:()=>Ch,ProductionPlanItemCreateOrConnectWithoutProductionPlanInputSchema:()=>Qb,ProductionPlanItemCreateOrConnectWithoutRecipeInputSchema:()=>qh,ProductionPlanItemCreateWithoutAssignedToInputSchema:()=>Su,ProductionPlanItemCreateWithoutProductionPlanInputSchema:()=>Sc,ProductionPlanItemCreateWithoutRecipeInputSchema:()=>ls,ProductionPlanItemDeleteArgsSchema:()=>zWt,ProductionPlanItemDeleteManyArgsSchema:()=>IWt,ProductionPlanItemFindFirstArgsSchema:()=>Kht,ProductionPlanItemFindFirstOrThrowArgsSchema:()=>Xht,ProductionPlanItemFindManyArgsSchema:()=>gT,ProductionPlanItemFindUniqueArgsSchema:()=>oIt,ProductionPlanItemFindUniqueOrThrowArgsSchema:()=>nIt,ProductionPlanItemGroupByArgsSchema:()=>eIt,ProductionPlanItemIncludeSchema:()=>Wd,ProductionPlanItemListRelationFilterSchema:()=>kS,ProductionPlanItemMaxOrderByAggregateInputSchema:()=>bot,ProductionPlanItemMinOrderByAggregateInputSchema:()=>hot,ProductionPlanItemOrderByRelationAggregateInputSchema:()=>gB,ProductionPlanItemOrderByWithAggregationInputSchema:()=>gV,ProductionPlanItemOrderByWithRelationInputSchema:()=>mb,ProductionPlanItemScalarFieldEnumSchema:()=>Ng,ProductionPlanItemScalarWhereInputSchema:()=>Ba,ProductionPlanItemScalarWhereWithAggregatesInputSchema:()=>sA,ProductionPlanItemSchema:()=>Xdt,ProductionPlanItemSelectSchema:()=>Rd,ProductionPlanItemSumOrderByAggregateInputSchema:()=>Iot,ProductionPlanItemUncheckedCreateInputSchema:()=>fG,ProductionPlanItemUncheckedCreateNestedManyWithoutAssignedToInputSchema:()=>Si,ProductionPlanItemUncheckedCreateNestedManyWithoutProductionPlanInputSchema:()=>Kq,ProductionPlanItemUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Eo,ProductionPlanItemUncheckedCreateWithoutAssignedToInputSchema:()=>Tu,ProductionPlanItemUncheckedCreateWithoutProductionPlanInputSchema:()=>Tc,ProductionPlanItemUncheckedCreateWithoutRecipeInputSchema:()=>rs,ProductionPlanItemUncheckedUpdateInputSchema:()=>NG,ProductionPlanItemUncheckedUpdateManyInputSchema:()=>BG,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToInputSchema:()=>yst,ProductionPlanItemUncheckedUpdateManyWithoutAssignedToNestedInputSchema:()=>ll,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanInputSchema:()=>qut,ProductionPlanItemUncheckedUpdateManyWithoutProductionPlanNestedInputSchema:()=>oF,ProductionPlanItemUncheckedUpdateManyWithoutRecipeInputSchema:()=>Mst,ProductionPlanItemUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>wn,ProductionPlanItemUncheckedUpdateWithoutAssignedToInputSchema:()=>T7,ProductionPlanItemUncheckedUpdateWithoutProductionPlanInputSchema:()=>T8,ProductionPlanItemUncheckedUpdateWithoutRecipeInputSchema:()=>rJ,ProductionPlanItemUpdateArgsSchema:()=>mWt,ProductionPlanItemUpdateInputSchema:()=>wG,ProductionPlanItemUpdateManyAndReturnArgsSchema:()=>hWt,ProductionPlanItemUpdateManyArgsSchema:()=>bWt,ProductionPlanItemUpdateManyMutationInputSchema:()=>DT,ProductionPlanItemUpdateManyWithWhereWithoutAssignedToInputSchema:()=>vR,ProductionPlanItemUpdateManyWithWhereWithoutProductionPlanInputSchema:()=>lW,ProductionPlanItemUpdateManyWithWhereWithoutRecipeInputSchema:()=>wk,ProductionPlanItemUpdateManyWithoutAssignedToNestedInputSchema:()=>_i,ProductionPlanItemUpdateManyWithoutProductionPlanNestedInputSchema:()=>eF,ProductionPlanItemUpdateManyWithoutRecipeNestedInputSchema:()=>zn,ProductionPlanItemUpdateWithWhereUniqueWithoutAssignedToInputSchema:()=>ZR,ProductionPlanItemUpdateWithWhereUniqueWithoutProductionPlanInputSchema:()=>iW,ProductionPlanItemUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>fk,ProductionPlanItemUpdateWithoutAssignedToInputSchema:()=>S7,ProductionPlanItemUpdateWithoutProductionPlanInputSchema:()=>S8,ProductionPlanItemUpdateWithoutRecipeInputSchema:()=>lJ,ProductionPlanItemUpsertArgsSchema:()=>sWt,ProductionPlanItemUpsertWithWhereUniqueWithoutAssignedToInputSchema:()=>MR,ProductionPlanItemUpsertWithWhereUniqueWithoutProductionPlanInputSchema:()=>aW,ProductionPlanItemUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ok,ProductionPlanItemWhereInputSchema:()=>ha,ProductionPlanItemWhereUniqueInputSchema:()=>L,ProductionPlanListRelationFilterSchema:()=>xM,ProductionPlanMaxOrderByAggregateInputSchema:()=>uot,ProductionPlanMinOrderByAggregateInputSchema:()=>sot,ProductionPlanOrderByRelationAggregateInputSchema:()=>O4,ProductionPlanOrderByWithAggregationInputSchema:()=>IV,ProductionPlanOrderByWithRelationInputSchema:()=>fm,ProductionPlanScalarFieldEnumSchema:()=>wg,ProductionPlanScalarRelationFilterSchema:()=>I4,ProductionPlanScalarWhereInputSchema:()=>xl,ProductionPlanScalarWhereWithAggregatesInputSchema:()=>uA,ProductionPlanSchema:()=>Kdt,ProductionPlanSelectSchema:()=>Ud,ProductionPlanSumOrderByAggregateInputSchema:()=>yot,ProductionPlanUncheckedCreateInputSchema:()=>jG,ProductionPlanUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Ai,ProductionPlanUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>yr,ProductionPlanUncheckedCreateWithoutCreatedByInputSchema:()=>Au,ProductionPlanUncheckedCreateWithoutItemsInputSchema:()=>Rv,ProductionPlanUncheckedCreateWithoutRestaurantInputSchema:()=>Xc,ProductionPlanUncheckedUpdateInputSchema:()=>ZG,ProductionPlanUncheckedUpdateManyInputSchema:()=>vG,ProductionPlanUncheckedUpdateManyWithoutCreatedByInputSchema:()=>sst,ProductionPlanUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>il,ProductionPlanUncheckedUpdateManyWithoutRestaurantInputSchema:()=>tst,ProductionPlanUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>qr,ProductionPlanUncheckedUpdateWithoutCreatedByInputSchema:()=>A7,ProductionPlanUncheckedUpdateWithoutItemsInputSchema:()=>H_,ProductionPlanUncheckedUpdateWithoutRestaurantInputSchema:()=>X8,ProductionPlanUpdateArgsSchema:()=>lWt,ProductionPlanUpdateInputSchema:()=>MG,ProductionPlanUpdateManyAndReturnArgsSchema:()=>pWt,ProductionPlanUpdateManyArgsSchema:()=>rWt,ProductionPlanUpdateManyMutationInputSchema:()=>nM,ProductionPlanUpdateManyWithWhereWithoutCreatedByInputSchema:()=>jR,ProductionPlanUpdateManyWithWhereWithoutRestaurantInputSchema:()=>JW,ProductionPlanUpdateManyWithoutCreatedByNestedInputSchema:()=>Di,ProductionPlanUpdateManyWithoutRestaurantNestedInputSchema:()=>Wr,ProductionPlanUpdateOneRequiredWithoutItemsNestedInputSchema:()=>lF,ProductionPlanUpdateToOneWithWhereWithoutItemsInputSchema:()=>xpt,ProductionPlanUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>xR,ProductionPlanUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>$W,ProductionPlanUpdateWithoutCreatedByInputSchema:()=>C7,ProductionPlanUpdateWithoutItemsInputSchema:()=>V_,ProductionPlanUpdateWithoutRestaurantInputSchema:()=>K8,ProductionPlanUpsertArgsSchema:()=>oWt,ProductionPlanUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>kR,ProductionPlanUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>GW,ProductionPlanUpsertWithoutItemsInputSchema:()=>kpt,ProductionPlanWhereInputSchema:()=>Ge,ProductionPlanWhereUniqueInputSchema:()=>pt,ProductionStatusSchema:()=>wt,QualityChecklistAggregateArgsSchema:()=>_bt,QualityChecklistArgsSchema:()=>Gj,QualityChecklistAvgOrderByAggregateInputSchema:()=>ret,QualityChecklistCountOrderByAggregateInputSchema:()=>iet,QualityChecklistCountOutputTypeArgsSchema:()=>qQ,QualityChecklistCountOutputTypeSelectSchema:()=>CX,QualityChecklistCreateArgsSchema:()=>gPt,QualityChecklistCreateInputSchema:()=>vY,QualityChecklistCreateManyAndReturnArgsSchema:()=>SPt,QualityChecklistCreateManyArgsSchema:()=>APt,QualityChecklistCreateManyInputSchema:()=>UP,QualityChecklistCreateManyRestaurantInputEnvelopeSchema:()=>hO,QualityChecklistCreateManyRestaurantInputSchema:()=>kH,QualityChecklistCreateNestedManyWithoutRestaurantInputSchema:()=>er,QualityChecklistCreateNestedOneWithoutCompletionsInputSchema:()=>sq,QualityChecklistCreateNestedOneWithoutItemsInputSchema:()=>T2,QualityChecklistCreateOrConnectWithoutCompletionsInputSchema:()=>P6,QualityChecklistCreateOrConnectWithoutItemsInputSchema:()=>T6,QualityChecklistCreateOrConnectWithoutRestaurantInputSchema:()=>uh,QualityChecklistCreateWithoutCompletionsInputSchema:()=>LZ,QualityChecklistCreateWithoutItemsInputSchema:()=>DZ,QualityChecklistCreateWithoutRestaurantInputSchema:()=>ou,QualityChecklistDeleteArgsSchema:()=>TPt,QualityChecklistDeleteManyArgsSchema:()=>RPt,QualityChecklistFindFirstArgsSchema:()=>Fbt,QualityChecklistFindFirstOrThrowArgsSchema:()=>Dbt,QualityChecklistFindManyArgsSchema:()=>FK,QualityChecklistFindUniqueArgsSchema:()=>Lbt,QualityChecklistFindUniqueOrThrowArgsSchema:()=>Vbt,QualityChecklistGroupByArgsSchema:()=>Ebt,QualityChecklistIncludeSchema:()=>ad,QualityChecklistListRelationFilterSchema:()=>M4,QualityChecklistMaxOrderByAggregateInputSchema:()=>pet,QualityChecklistMinOrderByAggregateInputSchema:()=>cet,QualityChecklistOrderByRelationAggregateInputSchema:()=>Tnt,QualityChecklistOrderByWithAggregationInputSchema:()=>pV,QualityChecklistOrderByWithRelationInputSchema:()=>Hp,QualityChecklistScalarFieldEnumSchema:()=>Wg,QualityChecklistScalarRelationFilterSchema:()=>IM,QualityChecklistScalarWhereInputSchema:()=>Up,QualityChecklistScalarWhereWithAggregatesInputSchema:()=>tA,QualityChecklistSchema:()=>_dt,QualityChecklistSelectSchema:()=>id,QualityChecklistSumOrderByAggregateInputSchema:()=>uet,QualityChecklistUncheckedCreateInputSchema:()=>OY,QualityChecklistUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>zr,QualityChecklistUncheckedCreateWithoutCompletionsInputSchema:()=>VZ,QualityChecklistUncheckedCreateWithoutItemsInputSchema:()=>_Z,QualityChecklistUncheckedCreateWithoutRestaurantInputSchema:()=>nu,QualityChecklistUncheckedUpdateInputSchema:()=>wY,QualityChecklistUncheckedUpdateManyInputSchema:()=>NY,QualityChecklistUncheckedUpdateManyWithoutRestaurantInputSchema:()=>ost,QualityChecklistUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Dr,QualityChecklistUncheckedUpdateWithoutCompletionsInputSchema:()=>y_,QualityChecklistUncheckedUpdateWithoutItemsInputSchema:()=>u_,QualityChecklistUncheckedUpdateWithoutRestaurantInputSchema:()=>n7,QualityChecklistUpdateArgsSchema:()=>PPt,QualityChecklistUpdateInputSchema:()=>fY,QualityChecklistUpdateManyAndReturnArgsSchema:()=>WPt,QualityChecklistUpdateManyArgsSchema:()=>UPt,QualityChecklistUpdateManyMutationInputSchema:()=>VN,QualityChecklistUpdateManyWithWhereWithoutRestaurantInputSchema:()=>nR,QualityChecklistUpdateManyWithoutRestaurantNestedInputSchema:()=>kr,QualityChecklistUpdateOneRequiredWithoutCompletionsNestedInputSchema:()=>mq,QualityChecklistUpdateOneRequiredWithoutItemsNestedInputSchema:()=>W2,QualityChecklistUpdateToOneWithWhereWithoutCompletionsInputSchema:()=>Grt,QualityChecklistUpdateToOneWithWhereWithoutItemsInputSchema:()=>Qrt,QualityChecklistUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>oR,QualityChecklistUpdateWithoutCompletionsInputSchema:()=>s_,QualityChecklistUpdateWithoutItemsInputSchema:()=>c_,QualityChecklistUpdateWithoutRestaurantInputSchema:()=>o7,QualityChecklistUpsertArgsSchema:()=>CPt,QualityChecklistUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>eR,QualityChecklistUpsertWithoutCompletionsInputSchema:()=>Yrt,QualityChecklistUpsertWithoutItemsInputSchema:()=>Hrt,QualityChecklistWhereInputSchema:()=>ve,QualityChecklistWhereUniqueInputSchema:()=>Gt,QueryModeSchema:()=>Hj,RecipeAggregateArgsSchema:()=>Fgt,RecipeArgsSchema:()=>te,RecipeAvgOrderByAggregateInputSchema:()=>lat,RecipeCountOrderByAggregateInputSchema:()=>iat,RecipeCountOutputTypeArgsSchema:()=>o0,RecipeCountOutputTypeSelectSchema:()=>ZX,RecipeCreateArgsSchema:()=>Nkt,RecipeCreateInputSchema:()=>i9,RecipeCreateManyAndReturnArgsSchema:()=>Fkt,RecipeCreateManyArgsSchema:()=>qkt,RecipeCreateManyCookBookInputEnvelopeSchema:()=>VO,RecipeCreateManyCookBookInputSchema:()=>YH,RecipeCreateManyInputSchema:()=>JP,RecipeCreateManyRestaurantInputEnvelopeSchema:()=>uO,RecipeCreateManyRestaurantInputSchema:()=>AH,RecipeCreateNestedManyWithoutCookBookInputSchema:()=>G2,RecipeCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>Wq,RecipeCreateNestedManyWithoutMenuItemsInputSchema:()=>Yz,RecipeCreateNestedManyWithoutPrepBoardsInputSchema:()=>m5,RecipeCreateNestedManyWithoutRestaurantInputSchema:()=>Yl,RecipeCreateNestedManyWithoutTagsInputSchema:()=>Olt,RecipeCreateNestedOneWithoutCriticalPointsInputSchema:()=>Clt,RecipeCreateNestedOneWithoutEquipmentsInputSchema:()=>GB,RecipeCreateNestedOneWithoutFoodCostHistoryInputSchema:()=>art,RecipeCreateNestedOneWithoutIngredientsInputSchema:()=>mF,RecipeCreateNestedOneWithoutInstructionsInputSchema:()=>AF,RecipeCreateNestedOneWithoutLaborCostsInputSchema:()=>jlt,RecipeCreateNestedOneWithoutMenuItemRecipesInputSchema:()=>P5,RecipeCreateNestedOneWithoutNutritionalInfoInputSchema:()=>Ilt,RecipeCreateNestedOneWithoutPhotosInputSchema:()=>Plt,RecipeCreateNestedOneWithoutPrepHistoryInputSchema:()=>lrt,RecipeCreateNestedOneWithoutPrepItemsInputSchema:()=>uD,RecipeCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>aF,RecipeCreateNestedOneWithoutRecipeStatsInputSchema:()=>Klt,RecipeCreateNestedOneWithoutStorageInputSchema:()=>Slt,RecipeCreateNestedOneWithoutTemperaturesInputSchema:()=>Wlt,RecipeCreateNestedOneWithoutVersionsInputSchema:()=>QT,RecipeCreateNestedOneWithoutWithdrawalsInputSchema:()=>uF,RecipeCreateNestedOneWithoutYieldsInputSchema:()=>klt,RecipeCreateOrConnectWithoutCookBookInputSchema:()=>jh,RecipeCreateOrConnectWithoutCriticalPointsInputSchema:()=>i6,RecipeCreateOrConnectWithoutDietaryRestrictionsInputSchema:()=>Lb,RecipeCreateOrConnectWithoutEquipmentsInputSchema:()=>I6,RecipeCreateOrConnectWithoutFoodCostHistoryInputSchema:()=>Y3,RecipeCreateOrConnectWithoutIngredientsInputSchema:()=>m3,RecipeCreateOrConnectWithoutInstructionsInputSchema:()=>I3,RecipeCreateOrConnectWithoutLaborCostsInputSchema:()=>u6,RecipeCreateOrConnectWithoutMenuItemRecipesInputSchema:()=>_3,RecipeCreateOrConnectWithoutMenuItemsInputSchema:()=>II,RecipeCreateOrConnectWithoutNutritionalInfoInputSchema:()=>a6,RecipeCreateOrConnectWithoutPhotosInputSchema:()=>r6,RecipeCreateOrConnectWithoutPrepBoardsInputSchema:()=>zI,RecipeCreateOrConnectWithoutPrepHistoryInputSchema:()=>G3,RecipeCreateOrConnectWithoutPrepItemsInputSchema:()=>N3,RecipeCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>_6,RecipeCreateOrConnectWithoutRecipeStatsInputSchema:()=>j3,RecipeCreateOrConnectWithoutRestaurantInputSchema:()=>nh,RecipeCreateOrConnectWithoutStorageInputSchema:()=>l6,RecipeCreateOrConnectWithoutTagsInputSchema:()=>Hb,RecipeCreateOrConnectWithoutTemperaturesInputSchema:()=>p6,RecipeCreateOrConnectWithoutVersionsInputSchema:()=>z6,RecipeCreateOrConnectWithoutWithdrawalsInputSchema:()=>Y6,RecipeCreateOrConnectWithoutYieldsInputSchema:()=>c6,RecipeCreateWithoutCookBookInputSchema:()=>_u,RecipeCreateWithoutCriticalPointsInputSchema:()=>KM,RecipeCreateWithoutDietaryRestrictionsInputSchema:()=>bc,RecipeCreateWithoutEquipmentsInputSchema:()=>xZ,RecipeCreateWithoutFoodCostHistoryInputSchema:()=>nN,RecipeCreateWithoutIngredientsInputSchema:()=>xf,RecipeCreateWithoutInstructionsInputSchema:()=>ff,RecipeCreateWithoutLaborCostsInputSchema:()=>pZ,RecipeCreateWithoutMenuItemRecipesInputSchema:()=>Dw,RecipeCreateWithoutMenuItemsInputSchema:()=>Iy,RecipeCreateWithoutNutritionalInfoInputSchema:()=>$M,RecipeCreateWithoutPhotosInputSchema:()=>oZ,RecipeCreateWithoutPrepBoardsInputSchema:()=>uy,RecipeCreateWithoutPrepHistoryInputSchema:()=>iN,RecipeCreateWithoutPrepItemsInputSchema:()=>xw,RecipeCreateWithoutProductionPlanItemsInputSchema:()=>kv,RecipeCreateWithoutRecipeStatsInputSchema:()=>uw,RecipeCreateWithoutRestaurantInputSchema:()=>_c,RecipeCreateWithoutStorageInputSchema:()=>tZ,RecipeCreateWithoutTagsInputSchema:()=>Cc,RecipeCreateWithoutTemperaturesInputSchema:()=>aZ,RecipeCreateWithoutVersionsInputSchema:()=>hZ,RecipeCreateWithoutWithdrawalsInputSchema:()=>Fv,RecipeCreateWithoutYieldsInputSchema:()=>lZ,RecipeCreateimageUrlsInputSchema:()=>Ut,RecipeCriticalPointAggregateArgsSchema:()=>Tmt,RecipeCriticalPointArgsSchema:()=>wzt,RecipeCriticalPointAvgOrderByAggregateInputSchema:()=>GX,RecipeCriticalPointCountOrderByAggregateInputSchema:()=>YX,RecipeCriticalPointCreateArgsSchema:()=>gSt,RecipeCriticalPointCreateInputSchema:()=>W0,RecipeCriticalPointCreateManyAndReturnArgsSchema:()=>SSt,RecipeCriticalPointCreateManyArgsSchema:()=>ASt,RecipeCriticalPointCreateManyInputSchema:()=>dP,RecipeCriticalPointCreateManyRecipeInputEnvelopeSchema:()=>df,RecipeCriticalPointCreateManyRecipeInputSchema:()=>pQ,RecipeCriticalPointCreateNestedManyWithoutRecipeInputSchema:()=>Mo,RecipeCriticalPointCreateOrConnectWithoutRecipeInputSchema:()=>Yh,RecipeCriticalPointCreateWithoutRecipeInputSchema:()=>Ps,RecipeCriticalPointDeleteArgsSchema:()=>TSt,RecipeCriticalPointDeleteManyArgsSchema:()=>RSt,RecipeCriticalPointFindFirstArgsSchema:()=>Amt,RecipeCriticalPointFindFirstOrThrowArgsSchema:()=>Smt,RecipeCriticalPointFindManyArgsSchema:()=>ZK,RecipeCriticalPointFindUniqueArgsSchema:()=>Umt,RecipeCriticalPointFindUniqueOrThrowArgsSchema:()=>Wmt,RecipeCriticalPointGroupByArgsSchema:()=>Pmt,RecipeCriticalPointIncludeSchema:()=>Oy,RecipeCriticalPointListRelationFilterSchema:()=>G4,RecipeCriticalPointMaxOrderByAggregateInputSchema:()=>$X,RecipeCriticalPointMinOrderByAggregateInputSchema:()=>JX,RecipeCriticalPointOrderByRelationAggregateInputSchema:()=>nat,RecipeCriticalPointOrderByWithAggregationInputSchema:()=>$L,RecipeCriticalPointOrderByWithRelationInputSchema:()=>tb,RecipeCriticalPointScalarFieldEnumSchema:()=>zg,RecipeCriticalPointScalarWhereInputSchema:()=>Bp,RecipeCriticalPointScalarWhereWithAggregatesInputSchema:()=>_C,RecipeCriticalPointSchema:()=>jdt,RecipeCriticalPointSelectSchema:()=>fy,RecipeCriticalPointSumOrderByAggregateInputSchema:()=>KX,RecipeCriticalPointUncheckedCreateInputSchema:()=>R0,RecipeCriticalPointUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Xo,RecipeCriticalPointUncheckedCreateWithoutRecipeInputSchema:()=>Us,RecipeCriticalPointUncheckedUpdateInputSchema:()=>x0,RecipeCriticalPointUncheckedUpdateManyInputSchema:()=>j0,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeInputSchema:()=>Fst,RecipeCriticalPointUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Hn,RecipeCriticalPointUncheckedUpdateWithoutRecipeInputSchema:()=>UJ,RecipeCriticalPointUpdateArgsSchema:()=>PSt,RecipeCriticalPointUpdateInputSchema:()=>k0,RecipeCriticalPointUpdateManyAndReturnArgsSchema:()=>WSt,RecipeCriticalPointUpdateManyArgsSchema:()=>USt,RecipeCriticalPointUpdateManyMutationInputSchema:()=>NN,RecipeCriticalPointUpdateManyWithWhereWithoutRecipeInputSchema:()=>cx,RecipeCriticalPointUpdateManyWithoutRecipeNestedInputSchema:()=>Pn,RecipeCriticalPointUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>px,RecipeCriticalPointUpdateWithoutRecipeInputSchema:()=>PJ,RecipeCriticalPointUpsertArgsSchema:()=>CSt,RecipeCriticalPointUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>rx,RecipeCriticalPointWhereInputSchema:()=>oa,RecipeCriticalPointWhereUniqueInputSchema:()=>be,RecipeDeleteArgsSchema:()=>Dkt,RecipeDeleteManyArgsSchema:()=>Vkt,RecipeEquipmentAggregateArgsSchema:()=>jbt,RecipeEquipmentArgsSchema:()=>_zt,RecipeEquipmentAvgOrderByAggregateInputSchema:()=>Ytt,RecipeEquipmentCountOrderByAggregateInputSchema:()=>Qtt,RecipeEquipmentCreateArgsSchema:()=>ePt,RecipeEquipmentCreateInputSchema:()=>TY,RecipeEquipmentCreateManyAndReturnArgsSchema:()=>aPt,RecipeEquipmentCreateManyArgsSchema:()=>nPt,RecipeEquipmentCreateManyEquipmentInputEnvelopeSchema:()=>RZ,RecipeEquipmentCreateManyEquipmentInputSchema:()=>iH,RecipeEquipmentCreateManyInputSchema:()=>TP,RecipeEquipmentCreateManyRecipeInputEnvelopeSchema:()=>pf,RecipeEquipmentCreateManyRecipeInputSchema:()=>aQ,RecipeEquipmentCreateManyRecipeInstructionInputEnvelopeSchema:()=>qf,RecipeEquipmentCreateManyRecipeInstructionInputSchema:()=>bQ,RecipeEquipmentCreateNestedManyWithoutEquipmentInputSchema:()=>FB,RecipeEquipmentCreateNestedManyWithoutRecipeInputSchema:()=>Uo,RecipeEquipmentCreateNestedManyWithoutRecipeInstructionInputSchema:()=>TF,RecipeEquipmentCreateOrConnectWithoutEquipmentInputSchema:()=>Nb,RecipeEquipmentCreateOrConnectWithoutRecipeInputSchema:()=>Eh,RecipeEquipmentCreateOrConnectWithoutRecipeInstructionInputSchema:()=>aI,RecipeEquipmentCreateWithoutEquipmentInputSchema:()=>oc,RecipeEquipmentCreateWithoutRecipeInputSchema:()=>zs,RecipeEquipmentCreateWithoutRecipeInstructionInputSchema:()=>Ls,RecipeEquipmentDeleteArgsSchema:()=>iPt,RecipeEquipmentDeleteManyArgsSchema:()=>cPt,RecipeEquipmentFindFirstArgsSchema:()=>kbt,RecipeEquipmentFindFirstOrThrowArgsSchema:()=>xbt,RecipeEquipmentFindManyArgsSchema:()=>zT,RecipeEquipmentFindUniqueArgsSchema:()=>Zbt,RecipeEquipmentFindUniqueOrThrowArgsSchema:()=>vbt,RecipeEquipmentGroupByArgsSchema:()=>Mbt,RecipeEquipmentIncludeSchema:()=>td,RecipeEquipmentListRelationFilterSchema:()=>WS,RecipeEquipmentMaxOrderByAggregateInputSchema:()=>Gtt,RecipeEquipmentMinOrderByAggregateInputSchema:()=>$tt,RecipeEquipmentOrderByRelationAggregateInputSchema:()=>sB,RecipeEquipmentOrderByWithAggregationInputSchema:()=>lV,RecipeEquipmentOrderByWithRelationInputSchema:()=>lb,RecipeEquipmentRecipeIdEquipmentIdCompoundUniqueInputSchema:()=>jN,RecipeEquipmentScalarFieldEnumSchema:()=>Pg,RecipeEquipmentScalarWhereInputSchema:()=>Na,RecipeEquipmentScalarWhereWithAggregatesInputSchema:()=>KC,RecipeEquipmentSchema:()=>Fdt,RecipeEquipmentSelectSchema:()=>ed,RecipeEquipmentSumOrderByAggregateInputSchema:()=>Jtt,RecipeEquipmentUncheckedCreateInputSchema:()=>PY,RecipeEquipmentUncheckedCreateNestedManyWithoutEquipmentInputSchema:()=>_B,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Qo,RecipeEquipmentUncheckedCreateNestedManyWithoutRecipeInstructionInputSchema:()=>PF,RecipeEquipmentUncheckedCreateWithoutEquipmentInputSchema:()=>nc,RecipeEquipmentUncheckedCreateWithoutRecipeInputSchema:()=>ms,RecipeEquipmentUncheckedCreateWithoutRecipeInstructionInputSchema:()=>Vs,RecipeEquipmentUncheckedUpdateInputSchema:()=>WY,RecipeEquipmentUncheckedUpdateManyInputSchema:()=>RY,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentInputSchema:()=>xut,RecipeEquipmentUncheckedUpdateManyWithoutEquipmentNestedInputSchema:()=>QB,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInputSchema:()=>fst,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionInputSchema:()=>$st,RecipeEquipmentUncheckedUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>kF,RecipeEquipmentUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Fn,RecipeEquipmentUncheckedUpdateWithoutEquipmentInputSchema:()=>n8,RecipeEquipmentUncheckedUpdateWithoutRecipeInputSchema:()=>mJ,RecipeEquipmentUncheckedUpdateWithoutRecipeInstructionInputSchema:()=>VJ,RecipeEquipmentUpdateArgsSchema:()=>lPt,RecipeEquipmentUpdateInputSchema:()=>UY,RecipeEquipmentUpdateManyAndReturnArgsSchema:()=>pPt,RecipeEquipmentUpdateManyArgsSchema:()=>rPt,RecipeEquipmentUpdateManyMutationInputSchema:()=>wT,RecipeEquipmentUpdateManyWithWhereWithoutEquipmentInputSchema:()=>jU,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInputSchema:()=>Yk,RecipeEquipmentUpdateManyWithWhereWithoutRecipeInstructionInputSchema:()=>qx,RecipeEquipmentUpdateManyWithoutEquipmentNestedInputSchema:()=>VB,RecipeEquipmentUpdateManyWithoutRecipeInstructionNestedInputSchema:()=>RF,RecipeEquipmentUpdateManyWithoutRecipeNestedInputSchema:()=>In,RecipeEquipmentUpdateWithWhereUniqueWithoutEquipmentInputSchema:()=>xU,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Qk,RecipeEquipmentUpdateWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>Bx,RecipeEquipmentUpdateWithoutEquipmentInputSchema:()=>o8,RecipeEquipmentUpdateWithoutRecipeInputSchema:()=>zJ,RecipeEquipmentUpdateWithoutRecipeInstructionInputSchema:()=>LJ,RecipeEquipmentUpsertArgsSchema:()=>oPt,RecipeEquipmentUpsertWithWhereUniqueWithoutEquipmentInputSchema:()=>kU,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Hk,RecipeEquipmentUpsertWithWhereUniqueWithoutRecipeInstructionInputSchema:()=>Nx,RecipeEquipmentWhereInputSchema:()=>pa,RecipeEquipmentWhereUniqueInputSchema:()=>q,RecipeFindFirstArgsSchema:()=>Bgt,RecipeFindFirstOrThrowArgsSchema:()=>qgt,RecipeFindManyArgsSchema:()=>yp,RecipeFindUniqueArgsSchema:()=>_gt,RecipeFindUniqueOrThrowArgsSchema:()=>Egt,RecipeGroupByArgsSchema:()=>Dgt,RecipeIncludeSchema:()=>tz,RecipeIngredientAggregateArgsSchema:()=>Kgt,RecipeIngredientArgsSchema:()=>imt,RecipeIngredientAvgOrderByAggregateInputSchema:()=>Cat,RecipeIngredientCountOrderByAggregateInputSchema:()=>gat,RecipeIngredientCreateArgsSchema:()=>ext,RecipeIngredientCreateInputSchema:()=>m9,RecipeIngredientCreateManyAndReturnArgsSchema:()=>axt,RecipeIngredientCreateManyArgsSchema:()=>nxt,RecipeIngredientCreateManyIngredientInputEnvelopeSchema:()=>Tf,RecipeIngredientCreateManyIngredientInputSchema:()=>uQ,RecipeIngredientCreateManyInputSchema:()=>XP,RecipeIngredientCreateManyRecipeInputEnvelopeSchema:()=>KO,RecipeIngredientCreateManyRecipeInputSchema:()=>GH,RecipeIngredientCreateManyRecipeVersionInputEnvelopeSchema:()=>gZ,RecipeIngredientCreateManyRecipeVersionInputSchema:()=>nH,RecipeIngredientCreateNestedManyWithoutIngredientInputSchema:()=>MI,RecipeIngredientCreateNestedManyWithoutRecipeInputSchema:()=>yo,RecipeIngredientCreateNestedManyWithoutRecipeVersionInputSchema:()=>YT,RecipeIngredientCreateOrConnectWithoutIngredientInputSchema:()=>$h,RecipeIngredientCreateOrConnectWithoutRecipeInputSchema:()=>Mh,RecipeIngredientCreateOrConnectWithoutRecipeVersionInputSchema:()=>fb,RecipeIngredientCreateWithoutIngredientInputSchema:()=>ks,RecipeIngredientCreateWithoutRecipeInputSchema:()=>Lu,RecipeIngredientCreateWithoutRecipeVersionInputSchema:()=>Kp,RecipeIngredientCreatesubstituteIngredientsInputSchema:()=>cp,RecipeIngredientDeleteArgsSchema:()=>ixt,RecipeIngredientDeleteManyArgsSchema:()=>cxt,RecipeIngredientFindFirstArgsSchema:()=>$gt,RecipeIngredientFindFirstOrThrowArgsSchema:()=>Jgt,RecipeIngredientFindManyArgsSchema:()=>AT,RecipeIngredientFindUniqueArgsSchema:()=>tCt,RecipeIngredientFindUniqueOrThrowArgsSchema:()=>eCt,RecipeIngredientGroupByArgsSchema:()=>Xgt,RecipeIngredientIncludeSchema:()=>az,RecipeIngredientListRelationFilterSchema:()=>US,RecipeIngredientMaxOrderByAggregateInputSchema:()=>Aat,RecipeIngredientMinOrderByAggregateInputSchema:()=>Sat,RecipeIngredientOrderByRelationAggregateInputSchema:()=>cB,RecipeIngredientOrderByWithAggregationInputSchema:()=>wV,RecipeIngredientOrderByWithRelationInputSchema:()=>Pb,RecipeIngredientRecipeIdIngredientIdCompoundUniqueInputSchema:()=>OT,RecipeIngredientScalarFieldEnumSchema:()=>tC,RecipeIngredientScalarWhereInputSchema:()=>wa,RecipeIngredientScalarWhereWithAggregatesInputSchema:()=>kA,RecipeIngredientSchema:()=>bzt,RecipeIngredientSelectSchema:()=>iz,RecipeIngredientSumOrderByAggregateInputSchema:()=>Tat,RecipeIngredientUncheckedCreateInputSchema:()=>b9,RecipeIngredientUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>qI,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>fo,RecipeIngredientUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>KT,RecipeIngredientUncheckedCreateWithoutIngredientInputSchema:()=>xs,RecipeIngredientUncheckedCreateWithoutRecipeInputSchema:()=>Vu,RecipeIngredientUncheckedCreateWithoutRecipeVersionInputSchema:()=>Xp,RecipeIngredientUncheckedUpdateInputSchema:()=>I9,RecipeIngredientUncheckedUpdateManyInputSchema:()=>g9,RecipeIngredientUncheckedUpdateManyWithoutIngredientInputSchema:()=>_st,RecipeIngredientUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>eg,RecipeIngredientUncheckedUpdateManyWithoutRecipeInputSchema:()=>Tst,RecipeIngredientUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>kn,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>Rut,RecipeIngredientUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>iP,RecipeIngredientUncheckedUpdateWithoutIngredientInputSchema:()=>xJ,RecipeIngredientUncheckedUpdateWithoutRecipeInputSchema:()=>V7,RecipeIngredientUncheckedUpdateWithoutRecipeVersionInputSchema:()=>X3,RecipeIngredientUnique_ingredient_per_versionCompoundUniqueInputSchema:()=>vT,RecipeIngredientUpdateArgsSchema:()=>lxt,RecipeIngredientUpdateInputSchema:()=>h9,RecipeIngredientUpdateManyAndReturnArgsSchema:()=>pxt,RecipeIngredientUpdateManyArgsSchema:()=>rxt,RecipeIngredientUpdateManyMutationInputSchema:()=>ET,RecipeIngredientUpdateManyWithWhereWithoutIngredientInputSchema:()=>mx,RecipeIngredientUpdateManyWithWhereWithoutRecipeInputSchema:()=>yk,RecipeIngredientUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>PU,RecipeIngredientUpdateManyWithoutIngredientNestedInputSchema:()=>QI,RecipeIngredientUpdateManyWithoutRecipeNestedInputSchema:()=>ln,RecipeIngredientUpdateManyWithoutRecipeVersionNestedInputSchema:()=>eP,RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>zx,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>sk,RecipeIngredientUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>TU,RecipeIngredientUpdateWithoutIngredientInputSchema:()=>kJ,RecipeIngredientUpdateWithoutRecipeInputSchema:()=>L7,RecipeIngredientUpdateWithoutRecipeVersionInputSchema:()=>K3,RecipeIngredientUpdatesubstituteIngredientsInputSchema:()=>Yr,RecipeIngredientUpsertArgsSchema:()=>oxt,RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>dx,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>uk,RecipeIngredientUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>SU,RecipeIngredientWhereInputSchema:()=>Ua,RecipeIngredientWhereUniqueInputSchema:()=>H,RecipeInstructionAggregateArgsSchema:()=>aCt,RecipeInstructionArgsSchema:()=>a0,RecipeInstructionAvgOrderByAggregateInputSchema:()=>Uat,RecipeInstructionCountOrderByAggregateInputSchema:()=>Pat,RecipeInstructionCountOutputTypeArgsSchema:()=>i0,RecipeInstructionCountOutputTypeSelectSchema:()=>OX,RecipeInstructionCreateArgsSchema:()=>uxt,RecipeInstructionCreateInputSchema:()=>C9,RecipeInstructionCreateManyAndReturnArgsSchema:()=>dxt,RecipeInstructionCreateManyArgsSchema:()=>yxt,RecipeInstructionCreateManyInputSchema:()=>tU,RecipeInstructionCreateManyRecipeInputEnvelopeSchema:()=>XO,RecipeInstructionCreateManyRecipeInputSchema:()=>$H,RecipeInstructionCreateManyRecipeVersionInputEnvelopeSchema:()=>CZ,RecipeInstructionCreateManyRecipeVersionInputSchema:()=>aH,RecipeInstructionCreateNestedManyWithoutRecipeInputSchema:()=>zo,RecipeInstructionCreateNestedManyWithoutRecipeVersionInputSchema:()=>GT,RecipeInstructionCreateNestedOneWithoutEquipmentInputSchema:()=>JB,RecipeInstructionCreateOrConnectWithoutEquipmentInputSchema:()=>C6,RecipeInstructionCreateOrConnectWithoutRecipeInputSchema:()=>Zh,RecipeInstructionCreateOrConnectWithoutRecipeVersionInputSchema:()=>wb,RecipeInstructionCreateWithoutEquipmentInputSchema:()=>vZ,RecipeInstructionCreateWithoutRecipeInputSchema:()=>Hu,RecipeInstructionCreateWithoutRecipeVersionInputSchema:()=>tc,RecipeInstructionDeleteArgsSchema:()=>zxt,RecipeInstructionDeleteManyArgsSchema:()=>Ixt,RecipeInstructionFindFirstArgsSchema:()=>oCt,RecipeInstructionFindFirstOrThrowArgsSchema:()=>nCt,RecipeInstructionFindManyArgsSchema:()=>mN,RecipeInstructionFindUniqueArgsSchema:()=>lCt,RecipeInstructionFindUniqueOrThrowArgsSchema:()=>rCt,RecipeInstructionGroupByArgsSchema:()=>iCt,RecipeInstructionIncludeSchema:()=>lz,RecipeInstructionListRelationFilterSchema:()=>mM,RecipeInstructionMaxOrderByAggregateInputSchema:()=>Wat,RecipeInstructionMinOrderByAggregateInputSchema:()=>Rat,RecipeInstructionNullableScalarRelationFilterSchema:()=>s4,RecipeInstructionOrderByRelationAggregateInputSchema:()=>c4,RecipeInstructionOrderByWithAggregationInputSchema:()=>NV,RecipeInstructionOrderByWithRelationInputSchema:()=>Bm,RecipeInstructionRecipeIdStepNumberRecipeVersionIdCompoundUniqueInputSchema:()=>ZN,RecipeInstructionScalarFieldEnumSchema:()=>eC,RecipeInstructionScalarWhereInputSchema:()=>Cl,RecipeInstructionScalarWhereWithAggregatesInputSchema:()=>xA,RecipeInstructionSchema:()=>hzt,RecipeInstructionSelectSchema:()=>rz,RecipeInstructionSumOrderByAggregateInputSchema:()=>kat,RecipeInstructionUncheckedCreateInputSchema:()=>A9,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>wo,RecipeInstructionUncheckedCreateNestedManyWithoutRecipeVersionInputSchema:()=>XT,RecipeInstructionUncheckedCreateWithoutEquipmentInputSchema:()=>OZ,RecipeInstructionUncheckedCreateWithoutRecipeInputSchema:()=>Qu,RecipeInstructionUncheckedCreateWithoutRecipeVersionInputSchema:()=>ec,RecipeInstructionUncheckedUpdateInputSchema:()=>T9,RecipeInstructionUncheckedUpdateManyInputSchema:()=>P9,RecipeInstructionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Pst,RecipeInstructionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>xn,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionInputSchema:()=>kut,RecipeInstructionUncheckedUpdateManyWithoutRecipeVersionNestedInputSchema:()=>lP,RecipeInstructionUncheckedUpdateWithoutEquipmentInputSchema:()=>a_,RecipeInstructionUncheckedUpdateWithoutRecipeInputSchema:()=>Q7,RecipeInstructionUncheckedUpdateWithoutRecipeVersionInputSchema:()=>e8,RecipeInstructionUpdateArgsSchema:()=>mxt,RecipeInstructionUpdateInputSchema:()=>S9,RecipeInstructionUpdateManyAndReturnArgsSchema:()=>hxt,RecipeInstructionUpdateManyArgsSchema:()=>bxt,RecipeInstructionUpdateManyMutationInputSchema:()=>rM,RecipeInstructionUpdateManyWithWhereWithoutRecipeInputSchema:()=>mk,RecipeInstructionUpdateManyWithWhereWithoutRecipeVersionInputSchema:()=>RU,RecipeInstructionUpdateManyWithoutRecipeNestedInputSchema:()=>rn,RecipeInstructionUpdateManyWithoutRecipeVersionNestedInputSchema:()=>oP,RecipeInstructionUpdateOneWithoutEquipmentNestedInputSchema:()=>tq,RecipeInstructionUpdateToOneWithWhereWithoutEquipmentInputSchema:()=>Drt,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>zk,RecipeInstructionUpdateWithWhereUniqueWithoutRecipeVersionInputSchema:()=>WU,RecipeInstructionUpdateWithoutEquipmentInputSchema:()=>n_,RecipeInstructionUpdateWithoutRecipeInputSchema:()=>H7,RecipeInstructionUpdateWithoutRecipeVersionInputSchema:()=>t8,RecipeInstructionUpsertArgsSchema:()=>sxt,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>dk,RecipeInstructionUpsertWithWhereUniqueWithoutRecipeVersionInputSchema:()=>UU,RecipeInstructionUpsertWithoutEquipmentInputSchema:()=>Frt,RecipeInstructionWhereInputSchema:()=>Ne,RecipeInstructionWhereUniqueInputSchema:()=>ct,RecipeLaborCostAggregateArgsSchema:()=>tbt,RecipeLaborCostArgsSchema:()=>Fzt,RecipeLaborCostAvgOrderByAggregateInputSchema:()=>Att,RecipeLaborCostCountOrderByAggregateInputSchema:()=>Ctt,RecipeLaborCostCreateArgsSchema:()=>uTt,RecipeLaborCostCreateInputSchema:()=>K0,RecipeLaborCostCreateManyAndReturnArgsSchema:()=>dTt,RecipeLaborCostCreateManyArgsSchema:()=>yTt,RecipeLaborCostCreateManyInputSchema:()=>IP,RecipeLaborCostCreateManyRecipeInputEnvelopeSchema:()=>sf,RecipeLaborCostCreateManyRecipeInputSchema:()=>rQ,RecipeLaborCostCreateNestedManyWithoutRecipeInputSchema:()=>xo,RecipeLaborCostCreateOrConnectWithoutRecipeInputSchema:()=>Qh,RecipeLaborCostCreateWithoutRecipeInputSchema:()=>Ss,RecipeLaborCostDeleteArgsSchema:()=>zTt,RecipeLaborCostDeleteManyArgsSchema:()=>ITt,RecipeLaborCostFindFirstArgsSchema:()=>Kmt,RecipeLaborCostFindFirstOrThrowArgsSchema:()=>Xmt,RecipeLaborCostFindManyArgsSchema:()=>wK,RecipeLaborCostFindUniqueArgsSchema:()=>obt,RecipeLaborCostFindUniqueOrThrowArgsSchema:()=>nbt,RecipeLaborCostGroupByArgsSchema:()=>ebt,RecipeLaborCostIncludeSchema:()=>Ly,RecipeLaborCostListRelationFilterSchema:()=>Q4,RecipeLaborCostMaxOrderByAggregateInputSchema:()=>Stt,RecipeLaborCostMinOrderByAggregateInputSchema:()=>Ttt,RecipeLaborCostOrderByRelationAggregateInputSchema:()=>oat,RecipeLaborCostOrderByWithAggregationInputSchema:()=>eV,RecipeLaborCostOrderByWithRelationInputSchema:()=>ab,RecipeLaborCostScalarFieldEnumSchema:()=>gg,RecipeLaborCostScalarWhereInputSchema:()=>Np,RecipeLaborCostScalarWhereWithAggregatesInputSchema:()=>QC,RecipeLaborCostSchema:()=>fdt,RecipeLaborCostSelectSchema:()=>Vy,RecipeLaborCostSumOrderByAggregateInputSchema:()=>Ptt,RecipeLaborCostUncheckedCreateInputSchema:()=>X0,RecipeLaborCostUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Jo,RecipeLaborCostUncheckedCreateWithoutRecipeInputSchema:()=>Ts,RecipeLaborCostUncheckedUpdateInputSchema:()=>eY,RecipeLaborCostUncheckedUpdateManyInputSchema:()=>oY,RecipeLaborCostUncheckedUpdateManyWithoutRecipeInputSchema:()=>qst,RecipeLaborCostUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Ln,RecipeLaborCostUncheckedUpdateWithoutRecipeInputSchema:()=>TJ,RecipeLaborCostUpdateArgsSchema:()=>mTt,RecipeLaborCostUpdateInputSchema:()=>tY,RecipeLaborCostUpdateManyAndReturnArgsSchema:()=>hTt,RecipeLaborCostUpdateManyArgsSchema:()=>bTt,RecipeLaborCostUpdateManyMutationInputSchema:()=>DN,RecipeLaborCostUpdateManyWithWhereWithoutRecipeInputSchema:()=>lx,RecipeLaborCostUpdateManyWithoutRecipeNestedInputSchema:()=>Sn,RecipeLaborCostUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ix,RecipeLaborCostUpdateWithoutRecipeInputSchema:()=>SJ,RecipeLaborCostUpsertArgsSchema:()=>sTt,RecipeLaborCostUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ax,RecipeLaborCostWhereInputSchema:()=>la,RecipeLaborCostWhereUniqueInputSchema:()=>Ce,RecipeListRelationFilterSchema:()=>ip,RecipeMaxOrderByAggregateInputSchema:()=>rat,RecipeMinOrderByAggregateInputSchema:()=>pat,RecipeNullableScalarRelationFilterSchema:()=>C4,RecipeNutritionAggregateArgsSchema:()=>hmt,RecipeNutritionArgsSchema:()=>vQ,RecipeNutritionAvgOrderByAggregateInputSchema:()=>LX,RecipeNutritionCountOrderByAggregateInputSchema:()=>EX,RecipeNutritionCreateArgsSchema:()=>uSt,RecipeNutritionCreateInputSchema:()=>C0,RecipeNutritionCreateManyAndReturnArgsSchema:()=>dSt,RecipeNutritionCreateManyArgsSchema:()=>ySt,RecipeNutritionCreateManyInputSchema:()=>yP,RecipeNutritionCreateNestedOneWithoutRecipeInputSchema:()=>jo,RecipeNutritionCreateOrConnectWithoutRecipeInputSchema:()=>yf,RecipeNutritionCreateWithoutRecipeInputSchema:()=>lT,RecipeNutritionDeleteArgsSchema:()=>zSt,RecipeNutritionDeleteManyArgsSchema:()=>ISt,RecipeNutritionFindFirstArgsSchema:()=>zmt,RecipeNutritionFindFirstOrThrowArgsSchema:()=>mmt,RecipeNutritionFindManyArgsSchema:()=>bmt,RecipeNutritionFindUniqueArgsSchema:()=>gmt,RecipeNutritionFindUniqueOrThrowArgsSchema:()=>Cmt,RecipeNutritionGroupByArgsSchema:()=>Imt,RecipeNutritionIncludeSchema:()=>Zy,RecipeNutritionMaxOrderByAggregateInputSchema:()=>VX,RecipeNutritionMinOrderByAggregateInputSchema:()=>HX,RecipeNutritionNullableScalarRelationFilterSchema:()=>Y4,RecipeNutritionOrderByWithAggregationInputSchema:()=>GL,RecipeNutritionOrderByWithRelationInputSchema:()=>jm,RecipeNutritionScalarFieldEnumSchema:()=>dg,RecipeNutritionScalarWhereWithAggregatesInputSchema:()=>DC,RecipeNutritionSchema:()=>xdt,RecipeNutritionSelectSchema:()=>vy,RecipeNutritionSumOrderByAggregateInputSchema:()=>QX,RecipeNutritionUncheckedCreateInputSchema:()=>A0,RecipeNutritionUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>Ko,RecipeNutritionUncheckedCreateWithoutRecipeInputSchema:()=>rT,RecipeNutritionUncheckedUpdateInputSchema:()=>T0,RecipeNutritionUncheckedUpdateManyInputSchema:()=>U0,RecipeNutritionUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Vn,RecipeNutritionUncheckedUpdateWithoutRecipeInputSchema:()=>If,RecipeNutritionUpdateArgsSchema:()=>mSt,RecipeNutritionUpdateInputSchema:()=>S0,RecipeNutritionUpdateManyAndReturnArgsSchema:()=>hSt,RecipeNutritionUpdateManyArgsSchema:()=>bSt,RecipeNutritionUpdateManyMutationInputSchema:()=>P0,RecipeNutritionUpdateOneWithoutRecipeNestedInputSchema:()=>Tn,RecipeNutritionUpdateToOneWithWhereWithoutRecipeInputSchema:()=>u3,RecipeNutritionUpdateWithoutRecipeInputSchema:()=>hf,RecipeNutritionUpsertArgsSchema:()=>sSt,RecipeNutritionUpsertWithoutRecipeInputSchema:()=>c3,RecipeNutritionWhereInputSchema:()=>Be,RecipeNutritionWhereUniqueInputSchema:()=>ql,RecipeOrderByRelationAggregateInputSchema:()=>RS,RecipeOrderByWithAggregationInputSchema:()=>OV,RecipeOrderByWithRelationInputSchema:()=>oo,RecipePhotoAggregateArgsSchema:()=>wmt,RecipePhotoArgsSchema:()=>Nzt,RecipePhotoAvgOrderByAggregateInputSchema:()=>itt,RecipePhotoCountOrderByAggregateInputSchema:()=>att,RecipePhotoCreateArgsSchema:()=>NSt,RecipePhotoCreateInputSchema:()=>N0,RecipePhotoCreateManyAndReturnArgsSchema:()=>FSt,RecipePhotoCreateManyArgsSchema:()=>qSt,RecipePhotoCreateManyInputSchema:()=>mP,RecipePhotoCreateManyRecipeInputEnvelopeSchema:()=>mf,RecipePhotoCreateManyRecipeInputSchema:()=>cQ,RecipePhotoCreateNestedManyWithoutRecipeInputSchema:()=>vo,RecipePhotoCreateOrConnectWithoutRecipeInputSchema:()=>Gh,RecipePhotoCreateWithoutRecipeInputSchema:()=>Ws,RecipePhotoDeleteArgsSchema:()=>DSt,RecipePhotoDeleteManyArgsSchema:()=>VSt,RecipePhotoFindFirstArgsSchema:()=>Omt,RecipePhotoFindFirstOrThrowArgsSchema:()=>fmt,RecipePhotoFindManyArgsSchema:()=>vK,RecipePhotoFindUniqueArgsSchema:()=>Bmt,RecipePhotoFindUniqueOrThrowArgsSchema:()=>qmt,RecipePhotoGroupByArgsSchema:()=>Nmt,RecipePhotoIncludeSchema:()=>By,RecipePhotoListRelationFilterSchema:()=>J4,RecipePhotoMaxOrderByAggregateInputSchema:()=>ltt,RecipePhotoMinOrderByAggregateInputSchema:()=>rtt,RecipePhotoOrderByRelationAggregateInputSchema:()=>aat,RecipePhotoOrderByWithAggregationInputSchema:()=>KL,RecipePhotoOrderByWithRelationInputSchema:()=>eb,RecipePhotoScalarFieldEnumSchema:()=>bg,RecipePhotoScalarWhereInputSchema:()=>qp,RecipePhotoScalarWhereWithAggregatesInputSchema:()=>LC,RecipePhotoSchema:()=>Zdt,RecipePhotoSelectSchema:()=>qy,RecipePhotoSumOrderByAggregateInputSchema:()=>ptt,RecipePhotoUncheckedCreateInputSchema:()=>B0,RecipePhotoUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>en,RecipePhotoUncheckedCreateWithoutRecipeInputSchema:()=>Rs,RecipePhotoUncheckedUpdateInputSchema:()=>F0,RecipePhotoUncheckedUpdateManyInputSchema:()=>D0,RecipePhotoUncheckedUpdateManyWithoutRecipeInputSchema:()=>Dst,RecipePhotoUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>Yn,RecipePhotoUncheckedUpdateWithoutRecipeInputSchema:()=>RJ,RecipePhotoUpdateArgsSchema:()=>_St,RecipePhotoUpdateInputSchema:()=>q0,RecipePhotoUpdateManyAndReturnArgsSchema:()=>LSt,RecipePhotoUpdateManyArgsSchema:()=>ESt,RecipePhotoUpdateManyMutationInputSchema:()=>BN,RecipePhotoUpdateManyWithWhereWithoutRecipeInputSchema:()=>yx,RecipePhotoUpdateManyWithoutRecipeNestedInputSchema:()=>Wn,RecipePhotoUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>sx,RecipePhotoUpdateWithoutRecipeInputSchema:()=>WJ,RecipePhotoUpsertArgsSchema:()=>BSt,RecipePhotoUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ux,RecipePhotoWhereInputSchema:()=>na,RecipePhotoWhereUniqueInputSchema:()=>he,RecipeScalarFieldEnumSchema:()=>Kg,RecipeScalarRelationFilterSchema:()=>ze,RecipeScalarWhereInputSchema:()=>pe,RecipeScalarWhereWithAggregatesInputSchema:()=>WA,RecipeSchema:()=>zzt,RecipeSelectSchema:()=>ez,RecipeStatsAggregateArgsSchema:()=>fCt,RecipeStatsArgsSchema:()=>c0,RecipeStatsAvgOrderByAggregateInputSchema:()=>Kat,RecipeStatsCountOrderByAggregateInputSchema:()=>Jat,RecipeStatsCreateArgsSchema:()=>ejt,RecipeStatsCreateInputSchema:()=>V9,RecipeStatsCreateManyAndReturnArgsSchema:()=>ajt,RecipeStatsCreateManyArgsSchema:()=>njt,RecipeStatsCreateManyInputSchema:()=>iU,RecipeStatsCreateNestedOneWithoutRecipeInputSchema:()=>Oo,RecipeStatsCreateOrConnectWithoutRecipeInputSchema:()=>bf,RecipeStatsCreateWithoutRecipeInputSchema:()=>uT,RecipeStatsDeleteArgsSchema:()=>ijt,RecipeStatsDeleteManyArgsSchema:()=>cjt,RecipeStatsFindFirstArgsSchema:()=>ZCt,RecipeStatsFindFirstOrThrowArgsSchema:()=>vCt,RecipeStatsFindManyArgsSchema:()=>OCt,RecipeStatsFindUniqueArgsSchema:()=>NCt,RecipeStatsFindUniqueOrThrowArgsSchema:()=>BCt,RecipeStatsGroupByArgsSchema:()=>wCt,RecipeStatsIncludeSchema:()=>bz,RecipeStatsMaxOrderByAggregateInputSchema:()=>Xat,RecipeStatsMinOrderByAggregateInputSchema:()=>tit,RecipeStatsNullableScalarRelationFilterSchema:()=>K4,RecipeStatsOrderByWithAggregationInputSchema:()=>_V,RecipeStatsOrderByWithRelationInputSchema:()=>Fm,RecipeStatsScalarFieldEnumSchema:()=>lC,RecipeStatsScalarWhereWithAggregatesInputSchema:()=>OA,RecipeStatsSchema:()=>Szt,RecipeStatsSelectSchema:()=>hz,RecipeStatsSumOrderByAggregateInputSchema:()=>eit,RecipeStatsUncheckedCreateInputSchema:()=>H9,RecipeStatsUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>on,RecipeStatsUncheckedCreateWithoutRecipeInputSchema:()=>sT,RecipeStatsUncheckedUpdateInputSchema:()=>Y9,RecipeStatsUncheckedUpdateManyInputSchema:()=>$9,RecipeStatsUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Gn,RecipeStatsUncheckedUpdateWithoutRecipeInputSchema:()=>Sf,RecipeStatsUpdateArgsSchema:()=>ljt,RecipeStatsUpdateInputSchema:()=>Q9,RecipeStatsUpdateManyAndReturnArgsSchema:()=>pjt,RecipeStatsUpdateManyArgsSchema:()=>rjt,RecipeStatsUpdateManyMutationInputSchema:()=>G9,RecipeStatsUpdateOneWithoutRecipeNestedInputSchema:()=>Rn,RecipeStatsUpdateToOneWithWhereWithoutRecipeInputSchema:()=>z3,RecipeStatsUpdateWithoutRecipeInputSchema:()=>Af,RecipeStatsUpsertArgsSchema:()=>ojt,RecipeStatsUpsertWithoutRecipeInputSchema:()=>d3,RecipeStatsWhereInputSchema:()=>Fe,RecipeStatsWhereUniqueInputSchema:()=>Dl,RecipeStorageAggregateArgsSchema:()=>jmt,RecipeStorageArgsSchema:()=>OQ,RecipeStorageAvgOrderByAggregateInputSchema:()=>ttt,RecipeStorageCountOrderByAggregateInputSchema:()=>XX,RecipeStorageCreateArgsSchema:()=>kSt,RecipeStorageCreateInputSchema:()=>M0,RecipeStorageCreateManyAndReturnArgsSchema:()=>MSt,RecipeStorageCreateManyArgsSchema:()=>jSt,RecipeStorageCreateManyInputSchema:()=>zP,RecipeStorageCreateNestedOneWithoutRecipeInputSchema:()=>Zo,RecipeStorageCreateOrConnectWithoutRecipeInputSchema:()=>zf,RecipeStorageCreateWithoutRecipeInputSchema:()=>pT,RecipeStorageDeleteArgsSchema:()=>ZSt,RecipeStorageDeleteManyArgsSchema:()=>wSt,RecipeStorageFindFirstArgsSchema:()=>Rmt,RecipeStorageFindFirstOrThrowArgsSchema:()=>kmt,RecipeStorageFindManyArgsSchema:()=>xmt,RecipeStorageFindUniqueArgsSchema:()=>Zmt,RecipeStorageFindUniqueOrThrowArgsSchema:()=>vmt,RecipeStorageGroupByArgsSchema:()=>Mmt,RecipeStorageIncludeSchema:()=>wy,RecipeStorageMaxOrderByAggregateInputSchema:()=>ett,RecipeStorageMinOrderByAggregateInputSchema:()=>ott,RecipeStorageNullableScalarRelationFilterSchema:()=>$4,RecipeStorageOrderByWithAggregationInputSchema:()=>JL,RecipeStorageOrderByWithRelationInputSchema:()=>Mm,RecipeStorageScalarFieldEnumSchema:()=>mg,RecipeStorageScalarWhereWithAggregatesInputSchema:()=>EC,RecipeStorageSchema:()=>Mdt,RecipeStorageSelectSchema:()=>Ny,RecipeStorageSumOrderByAggregateInputSchema:()=>ntt,RecipeStorageUncheckedCreateInputSchema:()=>Z0,RecipeStorageUncheckedCreateNestedOneWithoutRecipeInputSchema:()=>tn,RecipeStorageUncheckedCreateWithoutRecipeInputSchema:()=>cT,RecipeStorageUncheckedUpdateInputSchema:()=>O0,RecipeStorageUncheckedUpdateManyInputSchema:()=>w0,RecipeStorageUncheckedUpdateOneWithoutRecipeNestedInputSchema:()=>Qn,RecipeStorageUncheckedUpdateWithoutRecipeInputSchema:()=>Cf,RecipeStorageUpdateArgsSchema:()=>vSt,RecipeStorageUpdateInputSchema:()=>v0,RecipeStorageUpdateManyAndReturnArgsSchema:()=>fSt,RecipeStorageUpdateManyArgsSchema:()=>OSt,RecipeStorageUpdateManyMutationInputSchema:()=>f0,RecipeStorageUpdateOneWithoutRecipeNestedInputSchema:()=>Un,RecipeStorageUpdateToOneWithWhereWithoutRecipeInputSchema:()=>y3,RecipeStorageUpdateWithoutRecipeInputSchema:()=>gf,RecipeStorageUpsertArgsSchema:()=>xSt,RecipeStorageUpsertWithoutRecipeInputSchema:()=>s3,RecipeStorageWhereInputSchema:()=>qe,RecipeStorageWhereUniqueInputSchema:()=>Fl,RecipeSumOrderByAggregateInputSchema:()=>cat,RecipeTagAggregateArgsSchema:()=>jht,RecipeTagArgsSchema:()=>Yzt,RecipeTagAvgOrderByAggregateInputSchema:()=>Yet,RecipeTagCountOrderByAggregateInputSchema:()=>Qet,RecipeTagCountOutputTypeArgsSchema:()=>VQ,RecipeTagCountOutputTypeSelectSchema:()=>PX,RecipeTagCreateArgsSchema:()=>kUt,RecipeTagCreateInputSchema:()=>zG,RecipeTagCreateManyAndReturnArgsSchema:()=>MUt,RecipeTagCreateManyArgsSchema:()=>jUt,RecipeTagCreateManyInputSchema:()=>ZP,RecipeTagCreateNestedManyWithoutRecipesInputSchema:()=>To,RecipeTagCreateOrConnectWithoutRecipesInputSchema:()=>Dh,RecipeTagCreateWithoutRecipesInputSchema:()=>us,RecipeTagDeleteArgsSchema:()=>ZUt,RecipeTagDeleteManyArgsSchema:()=>wUt,RecipeTagFindFirstArgsSchema:()=>kht,RecipeTagFindFirstOrThrowArgsSchema:()=>xht,RecipeTagFindManyArgsSchema:()=>_K,RecipeTagFindUniqueArgsSchema:()=>Zht,RecipeTagFindUniqueOrThrowArgsSchema:()=>vht,RecipeTagGroupByArgsSchema:()=>Mht,RecipeTagIncludeSchema:()=>Id,RecipeTagListRelationFilterSchema:()=>L4,RecipeTagMaxOrderByAggregateInputSchema:()=>Get,RecipeTagMinOrderByAggregateInputSchema:()=>$et,RecipeTagOrderByRelationAggregateInputSchema:()=>Xnt,RecipeTagOrderByWithAggregationInputSchema:()=>mV,RecipeTagOrderByWithRelationInputSchema:()=>yb,RecipeTagScalarFieldEnumSchema:()=>vg,RecipeTagScalarWhereInputSchema:()=>Op,RecipeTagScalarWhereWithAggregatesInputSchema:()=>rA,RecipeTagSchema:()=>Gdt,RecipeTagSelectSchema:()=>gd,RecipeTagSumOrderByAggregateInputSchema:()=>Jet,RecipeTagUncheckedCreateInputSchema:()=>mG,RecipeTagUncheckedCreateNestedManyWithoutRecipesInputSchema:()=>Vo,RecipeTagUncheckedCreateWithoutRecipesInputSchema:()=>ss,RecipeTagUncheckedUpdateInputSchema:()=>hG,RecipeTagUncheckedUpdateManyInputSchema:()=>IG,RecipeTagUncheckedUpdateManyWithoutRecipesInputSchema:()=>vst,RecipeTagUncheckedUpdateManyWithoutRecipesNestedInputSchema:()=>Bn,RecipeTagUncheckedUpdateWithoutRecipesInputSchema:()=>sJ,RecipeTagUpdateArgsSchema:()=>vUt,RecipeTagUpdateInputSchema:()=>bG,RecipeTagUpdateManyAndReturnArgsSchema:()=>fUt,RecipeTagUpdateManyArgsSchema:()=>OUt,RecipeTagUpdateManyMutationInputSchema:()=>QN,RecipeTagUpdateManyWithWhereWithoutRecipesInputSchema:()=>_k,RecipeTagUpdateManyWithoutRecipesNestedInputSchema:()=>bn,RecipeTagUpdateWithWhereUniqueWithoutRecipesInputSchema:()=>Dk,RecipeTagUpdateWithoutRecipesInputSchema:()=>uJ,RecipeTagUpsertArgsSchema:()=>xUt,RecipeTagUpsertWithWhereUniqueWithoutRecipesInputSchema:()=>Fk,RecipeTagWhereInputSchema:()=>za,RecipeTagWhereUniqueInputSchema:()=>Se,RecipeTemperatureAggregateArgsSchema:()=>_mt,RecipeTemperatureArgsSchema:()=>Bzt,RecipeTemperatureAvgOrderByAggregateInputSchema:()=>stt,RecipeTemperatureCountOrderByAggregateInputSchema:()=>utt,RecipeTemperatureCreateArgsSchema:()=>HSt,RecipeTemperatureCreateInputSchema:()=>_0,RecipeTemperatureCreateManyAndReturnArgsSchema:()=>GSt,RecipeTemperatureCreateManyArgsSchema:()=>YSt,RecipeTemperatureCreateManyInputSchema:()=>bP,RecipeTemperatureCreateManyRecipeInputEnvelopeSchema:()=>cf,RecipeTemperatureCreateManyRecipeInputSchema:()=>iQ,RecipeTemperatureCreateNestedManyWithoutRecipeInputSchema:()=>Ro,RecipeTemperatureCreateOrConnectWithoutRecipeInputSchema:()=>Vh,RecipeTemperatureCreateWithoutRecipeInputSchema:()=>Is,RecipeTemperatureDeleteArgsSchema:()=>$St,RecipeTemperatureDeleteManyArgsSchema:()=>tTt,RecipeTemperatureFindFirstArgsSchema:()=>Fmt,RecipeTemperatureFindFirstOrThrowArgsSchema:()=>Dmt,RecipeTemperatureFindManyArgsSchema:()=>OK,RecipeTemperatureFindUniqueArgsSchema:()=>Lmt,RecipeTemperatureFindUniqueOrThrowArgsSchema:()=>Vmt,RecipeTemperatureGroupByArgsSchema:()=>Emt,RecipeTemperatureIncludeSchema:()=>Fy,RecipeTemperatureListRelationFilterSchema:()=>V4,RecipeTemperatureMaxOrderByAggregateInputSchema:()=>ytt,RecipeTemperatureMinOrderByAggregateInputSchema:()=>dtt,RecipeTemperatureOrderByRelationAggregateInputSchema:()=>tat,RecipeTemperatureOrderByWithAggregationInputSchema:()=>XL,RecipeTemperatureOrderByWithRelationInputSchema:()=>ob,RecipeTemperatureScalarFieldEnumSchema:()=>hg,RecipeTemperatureScalarWhereInputSchema:()=>fp,RecipeTemperatureScalarWhereWithAggregatesInputSchema:()=>VC,RecipeTemperatureSchema:()=>vdt,RecipeTemperatureSelectSchema:()=>Dy,RecipeTemperatureSumOrderByAggregateInputSchema:()=>ztt,RecipeTemperatureUncheckedCreateInputSchema:()=>E0,RecipeTemperatureUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Go,RecipeTemperatureUncheckedCreateWithoutRecipeInputSchema:()=>gs,RecipeTemperatureUncheckedUpdateInputSchema:()=>V0,RecipeTemperatureUncheckedUpdateManyInputSchema:()=>H0,RecipeTemperatureUncheckedUpdateManyWithoutRecipeInputSchema:()=>Nst,RecipeTemperatureUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>_n,RecipeTemperatureUncheckedUpdateWithoutRecipeInputSchema:()=>gJ,RecipeTemperatureUpdateArgsSchema:()=>JSt,RecipeTemperatureUpdateInputSchema:()=>L0,RecipeTemperatureUpdateManyAndReturnArgsSchema:()=>XSt,RecipeTemperatureUpdateManyArgsSchema:()=>KSt,RecipeTemperatureUpdateManyMutationInputSchema:()=>qN,RecipeTemperatureUpdateManyWithWhereWithoutRecipeInputSchema:()=>tx,RecipeTemperatureUpdateManyWithoutRecipeNestedInputSchema:()=>Cn,RecipeTemperatureUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Xk,RecipeTemperatureUpdateWithoutRecipeInputSchema:()=>IJ,RecipeTemperatureUpsertArgsSchema:()=>QSt,RecipeTemperatureUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Kk,RecipeTemperatureWhereInputSchema:()=>aa,RecipeTemperatureWhereUniqueInputSchema:()=>Ie,RecipeUncheckedCreateInputSchema:()=>l9,RecipeUncheckedCreateNestedManyWithoutCookBookInputSchema:()=>J2,RecipeUncheckedCreateNestedManyWithoutDietaryRestrictionsInputSchema:()=>xq,RecipeUncheckedCreateNestedManyWithoutMenuItemsInputSchema:()=>om,RecipeUncheckedCreateNestedManyWithoutPrepBoardsInputSchema:()=>h5,RecipeUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>rr,RecipeUncheckedCreateNestedManyWithoutTagsInputSchema:()=>flt,RecipeUncheckedCreateWithoutCookBookInputSchema:()=>Eu,RecipeUncheckedCreateWithoutCriticalPointsInputSchema:()=>XM,RecipeUncheckedCreateWithoutDietaryRestrictionsInputSchema:()=>hc,RecipeUncheckedCreateWithoutEquipmentsInputSchema:()=>jZ,RecipeUncheckedCreateWithoutFoodCostHistoryInputSchema:()=>aN,RecipeUncheckedCreateWithoutIngredientsInputSchema:()=>jf,RecipeUncheckedCreateWithoutInstructionsInputSchema:()=>wf,RecipeUncheckedCreateWithoutLaborCostsInputSchema:()=>cZ,RecipeUncheckedCreateWithoutMenuItemRecipesInputSchema:()=>_w,RecipeUncheckedCreateWithoutMenuItemsInputSchema:()=>gy,RecipeUncheckedCreateWithoutNutritionalInfoInputSchema:()=>JM,RecipeUncheckedCreateWithoutPhotosInputSchema:()=>nZ,RecipeUncheckedCreateWithoutPrepBoardsInputSchema:()=>sy,RecipeUncheckedCreateWithoutPrepHistoryInputSchema:()=>lN,RecipeUncheckedCreateWithoutPrepItemsInputSchema:()=>jw,RecipeUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>xv,RecipeUncheckedCreateWithoutRecipeStatsInputSchema:()=>sw,RecipeUncheckedCreateWithoutRestaurantInputSchema:()=>Ec,RecipeUncheckedCreateWithoutStorageInputSchema:()=>eZ,RecipeUncheckedCreateWithoutTagsInputSchema:()=>Ac,RecipeUncheckedCreateWithoutTemperaturesInputSchema:()=>iZ,RecipeUncheckedCreateWithoutVersionsInputSchema:()=>IZ,RecipeUncheckedCreateWithoutWithdrawalsInputSchema:()=>Dv,RecipeUncheckedCreateWithoutYieldsInputSchema:()=>rZ,RecipeUncheckedUpdateInputSchema:()=>p9,RecipeUncheckedUpdateManyInputSchema:()=>c9,RecipeUncheckedUpdateManyWithoutCookBookInputSchema:()=>Sst,RecipeUncheckedUpdateManyWithoutCookBookNestedInputSchema:()=>t5,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsInputSchema:()=>wut,RecipeUncheckedUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>fq,RecipeUncheckedUpdateManyWithoutMenuItemsInputSchema:()=>uyt,RecipeUncheckedUpdateManyWithoutMenuItemsNestedInputSchema:()=>Cm,RecipeUncheckedUpdateManyWithoutPrepBoardsInputSchema:()=>lyt,RecipeUncheckedUpdateManyWithoutPrepBoardsNestedInputSchema:()=>A5,RecipeUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Gut,RecipeUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Or,RecipeUncheckedUpdateManyWithoutTagsInputSchema:()=>But,RecipeUncheckedUpdateManyWithoutTagsNestedInputSchema:()=>Nlt,RecipeUncheckedUpdateWithoutCookBookInputSchema:()=>E7,RecipeUncheckedUpdateWithoutCriticalPointsInputSchema:()=>kD,RecipeUncheckedUpdateWithoutDietaryRestrictionsInputSchema:()=>h8,RecipeUncheckedUpdateWithoutEquipmentsInputSchema:()=>t_,RecipeUncheckedUpdateWithoutFoodCostHistoryInputSchema:()=>FL,RecipeUncheckedUpdateWithoutIngredientsInputSchema:()=>ZE,RecipeUncheckedUpdateWithoutInstructionsInputSchema:()=>BE,RecipeUncheckedUpdateWithoutLaborCostsInputSchema:()=>BD,RecipeUncheckedUpdateWithoutMenuItemRecipesInputSchema:()=>ZL,RecipeUncheckedUpdateWithoutMenuItemsInputSchema:()=>gK,RecipeUncheckedUpdateWithoutNutritionalInfoInputSchema:()=>WD,RecipeUncheckedUpdateWithoutPhotosInputSchema:()=>ZD,RecipeUncheckedUpdateWithoutPrepBoardsInputSchema:()=>sK,RecipeUncheckedUpdateWithoutPrepHistoryInputSchema:()=>_L,RecipeUncheckedUpdateWithoutPrepItemsInputSchema:()=>SL,RecipeUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>Y_,RecipeUncheckedUpdateWithoutRecipeStatsInputSchema:()=>pL,RecipeUncheckedUpdateWithoutRestaurantInputSchema:()=>E8,RecipeUncheckedUpdateWithoutStorageInputSchema:()=>jD,RecipeUncheckedUpdateWithoutTagsInputSchema:()=>A8,RecipeUncheckedUpdateWithoutTemperaturesInputSchema:()=>OD,RecipeUncheckedUpdateWithoutVersionsInputSchema:()=>HD,RecipeUncheckedUpdateWithoutWithdrawalsInputSchema:()=>lE,RecipeUncheckedUpdateWithoutYieldsInputSchema:()=>wD,RecipeUpdateArgsSchema:()=>_kt,RecipeUpdateInputSchema:()=>r9,RecipeUpdateManyAndReturnArgsSchema:()=>Lkt,RecipeUpdateManyArgsSchema:()=>Ekt,RecipeUpdateManyMutationInputSchema:()=>WI,RecipeUpdateManyWithWhereWithoutCookBookInputSchema:()=>ck,RecipeUpdateManyWithWhereWithoutDietaryRestrictionsInputSchema:()=>JU,RecipeUpdateManyWithWhereWithoutMenuItemsInputSchema:()=>Rj,RecipeUpdateManyWithWhereWithoutPrepBoardsInputSchema:()=>mj,RecipeUpdateManyWithWhereWithoutRestaurantInputSchema:()=>wW,RecipeUpdateManyWithWhereWithoutTagsInputSchema:()=>nW,RecipeUpdateManyWithoutCookBookNestedInputSchema:()=>K2,RecipeUpdateManyWithoutDietaryRestrictionsNestedInputSchema:()=>Zq,RecipeUpdateManyWithoutMenuItemsNestedInputSchema:()=>ym,RecipeUpdateManyWithoutPrepBoardsNestedInputSchema:()=>g5,RecipeUpdateManyWithoutRestaurantNestedInputSchema:()=>Ar,RecipeUpdateManyWithoutTagsNestedInputSchema:()=>wlt,RecipeUpdateOneRequiredWithoutCriticalPointsNestedInputSchema:()=>Alt,RecipeUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>KB,RecipeUpdateOneRequiredWithoutFoodCostHistoryNestedInputSchema:()=>irt,RecipeUpdateOneRequiredWithoutIngredientsNestedInputSchema:()=>IF,RecipeUpdateOneRequiredWithoutInstructionsNestedInputSchema:()=>UF,RecipeUpdateOneRequiredWithoutLaborCostsNestedInputSchema:()=>Mlt,RecipeUpdateOneRequiredWithoutMenuItemRecipesNestedInputSchema:()=>W5,RecipeUpdateOneRequiredWithoutNutritionalInfoNestedInputSchema:()=>glt,RecipeUpdateOneRequiredWithoutPhotosNestedInputSchema:()=>Ult,RecipeUpdateOneRequiredWithoutPrepHistoryNestedInputSchema:()=>rrt,RecipeUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>dD,RecipeUpdateOneRequiredWithoutProductionPlanItemsNestedInputSchema:()=>rF,RecipeUpdateOneRequiredWithoutRecipeStatsNestedInputSchema:()=>Xlt,RecipeUpdateOneRequiredWithoutStorageNestedInputSchema:()=>Tlt,RecipeUpdateOneRequiredWithoutTemperaturesNestedInputSchema:()=>Rlt,RecipeUpdateOneRequiredWithoutVersionsNestedInputSchema:()=>tP,RecipeUpdateOneRequiredWithoutYieldsNestedInputSchema:()=>xlt,RecipeUpdateOneWithoutWithdrawalsNestedInputSchema:()=>dF,RecipeUpdateToOneWithWhereWithoutCriticalPointsInputSchema:()=>srt,RecipeUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>Nrt,RecipeUpdateToOneWithWhereWithoutFoodCostHistoryInputSchema:()=>Tut,RecipeUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>mct,RecipeUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>Act,RecipeUpdateToOneWithWhereWithoutLaborCostsInputSchema:()=>Art,RecipeUpdateToOneWithWhereWithoutMenuItemRecipesInputSchema:()=>mut,RecipeUpdateToOneWithWhereWithoutNutritionalInfoInputSchema:()=>crt,RecipeUpdateToOneWithWhereWithoutPhotosInputSchema:()=>mrt,RecipeUpdateToOneWithWhereWithoutPrepHistoryInputSchema:()=>Uut,RecipeUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>iut,RecipeUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>Mpt,RecipeUpdateToOneWithWhereWithoutRecipeStatsInputSchema:()=>Vct,RecipeUpdateToOneWithWhereWithoutStorageInputSchema:()=>drt,RecipeUpdateToOneWithWhereWithoutTemperaturesInputSchema:()=>hrt,RecipeUpdateToOneWithWhereWithoutVersionsInputSchema:()=>xrt,RecipeUpdateToOneWithWhereWithoutWithdrawalsInputSchema:()=>Ept,RecipeUpdateToOneWithWhereWithoutYieldsInputSchema:()=>grt,RecipeUpdateWithWhereUniqueWithoutCookBookInputSchema:()=>pk,RecipeUpdateWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>$U,RecipeUpdateWithWhereUniqueWithoutMenuItemsInputSchema:()=>Wj,RecipeUpdateWithWhereUniqueWithoutPrepBoardsInputSchema:()=>zj,RecipeUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>fW,RecipeUpdateWithWhereUniqueWithoutTagsInputSchema:()=>oW,RecipeUpdateWithoutCookBookInputSchema:()=>_7,RecipeUpdateWithoutCriticalPointsInputSchema:()=>RD,RecipeUpdateWithoutDietaryRestrictionsInputSchema:()=>b8,RecipeUpdateWithoutEquipmentsInputSchema:()=>XD,RecipeUpdateWithoutFoodCostHistoryInputSchema:()=>qL,RecipeUpdateWithoutIngredientsInputSchema:()=>ME,RecipeUpdateWithoutInstructionsInputSchema:()=>NE,RecipeUpdateWithoutLaborCostsInputSchema:()=>ND,RecipeUpdateWithoutMenuItemRecipesInputSchema:()=>ML,RecipeUpdateWithoutMenuItemsInputSchema:()=>IK,RecipeUpdateWithoutNutritionalInfoInputSchema:()=>UD,RecipeUpdateWithoutPhotosInputSchema:()=>MD,RecipeUpdateWithoutPrepBoardsInputSchema:()=>uK,RecipeUpdateWithoutPrepHistoryInputSchema:()=>DL,RecipeUpdateWithoutPrepItemsInputSchema:()=>AL,RecipeUpdateWithoutProductionPlanItemsInputSchema:()=>Q_,RecipeUpdateWithoutRecipeStatsInputSchema:()=>rL,RecipeUpdateWithoutRestaurantInputSchema:()=>_8,RecipeUpdateWithoutStorageInputSchema:()=>xD,RecipeUpdateWithoutTagsInputSchema:()=>C8,RecipeUpdateWithoutTemperaturesInputSchema:()=>vD,RecipeUpdateWithoutVersionsInputSchema:()=>VD,RecipeUpdateWithoutWithdrawalsInputSchema:()=>iE,RecipeUpdateWithoutYieldsInputSchema:()=>fD,RecipeUpdateimageUrlsInputSchema:()=>yt,RecipeUpsertArgsSchema:()=>Bkt,RecipeUpsertWithWhereUniqueWithoutCookBookInputSchema:()=>rk,RecipeUpsertWithWhereUniqueWithoutDietaryRestrictionsInputSchema:()=>GU,RecipeUpsertWithWhereUniqueWithoutMenuItemsInputSchema:()=>Uj,RecipeUpsertWithWhereUniqueWithoutPrepBoardsInputSchema:()=>dj,RecipeUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>OW,RecipeUpsertWithWhereUniqueWithoutTagsInputSchema:()=>eW,RecipeUpsertWithoutCriticalPointsInputSchema:()=>urt,RecipeUpsertWithoutEquipmentsInputSchema:()=>wrt,RecipeUpsertWithoutFoodCostHistoryInputSchema:()=>Sut,RecipeUpsertWithoutIngredientsInputSchema:()=>zct,RecipeUpsertWithoutInstructionsInputSchema:()=>Cct,RecipeUpsertWithoutLaborCostsInputSchema:()=>Crt,RecipeUpsertWithoutMenuItemRecipesInputSchema:()=>zut,RecipeUpsertWithoutNutritionalInfoInputSchema:()=>prt,RecipeUpsertWithoutPhotosInputSchema:()=>zrt,RecipeUpsertWithoutPrepHistoryInputSchema:()=>Put,RecipeUpsertWithoutPrepItemsInputSchema:()=>aut,RecipeUpsertWithoutProductionPlanItemsInputSchema:()=>jpt,RecipeUpsertWithoutRecipeStatsInputSchema:()=>Lct,RecipeUpsertWithoutStorageInputSchema:()=>yrt,RecipeUpsertWithoutTemperaturesInputSchema:()=>brt,RecipeUpsertWithoutVersionsInputSchema:()=>krt,RecipeUpsertWithoutWithdrawalsInputSchema:()=>_pt,RecipeUpsertWithoutYieldsInputSchema:()=>Irt,RecipeVersionAggregateArgsSchema:()=>Ibt,RecipeVersionArgsSchema:()=>Qj,RecipeVersionAvgOrderByAggregateInputSchema:()=>wtt,RecipeVersionCountOrderByAggregateInputSchema:()=>ftt,RecipeVersionCountOutputTypeArgsSchema:()=>NQ,RecipeVersionCountOutputTypeSelectSchema:()=>IX,RecipeVersionCreateArgsSchema:()=>NTt,RecipeVersionCreateInputSchema:()=>dY,RecipeVersionCreateManyAndReturnArgsSchema:()=>FTt,RecipeVersionCreateManyApprovedByInputEnvelopeSchema:()=>FO,RecipeVersionCreateManyApprovedByInputSchema:()=>VH,RecipeVersionCreateManyArgsSchema:()=>qTt,RecipeVersionCreateManyCreatedByInputEnvelopeSchema:()=>qO,RecipeVersionCreateManyCreatedByInputSchema:()=>LH,RecipeVersionCreateManyInputSchema:()=>AP,RecipeVersionCreateManyRecipeInputEnvelopeSchema:()=>rf,RecipeVersionCreateManyRecipeInputSchema:()=>nQ,RecipeVersionCreateNestedManyWithoutApprovedByInputSchema:()=>si,RecipeVersionCreateNestedManyWithoutCreatedByInputSchema:()=>ui,RecipeVersionCreateNestedManyWithoutRecipeInputSchema:()=>Po,RecipeVersionCreateNestedOneWithoutIngredientsInputSchema:()=>hF,RecipeVersionCreateNestedOneWithoutInstructionsInputSchema:()=>SF,RecipeVersionCreateOrConnectWithoutApprovedByInputSchema:()=>Rh,RecipeVersionCreateOrConnectWithoutCreatedByInputSchema:()=>Wh,RecipeVersionCreateOrConnectWithoutIngredientsInputSchema:()=>h3,RecipeVersionCreateOrConnectWithoutInstructionsInputSchema:()=>g3,RecipeVersionCreateOrConnectWithoutRecipeInputSchema:()=>_h,RecipeVersionCreateWithoutApprovedByInputSchema:()=>wu,RecipeVersionCreateWithoutCreatedByInputSchema:()=>Ou,RecipeVersionCreateWithoutIngredientsInputSchema:()=>vf,RecipeVersionCreateWithoutInstructionsInputSchema:()=>Nf,RecipeVersionCreateWithoutRecipeInputSchema:()=>ys,RecipeVersionDeleteArgsSchema:()=>DTt,RecipeVersionDeleteManyArgsSchema:()=>VTt,RecipeVersionFindFirstArgsSchema:()=>bbt,RecipeVersionFindFirstOrThrowArgsSchema:()=>hbt,RecipeVersionFindManyArgsSchema:()=>SS,RecipeVersionFindUniqueArgsSchema:()=>Cbt,RecipeVersionFindUniqueOrThrowArgsSchema:()=>Abt,RecipeVersionGroupByArgsSchema:()=>gbt,RecipeVersionIncludeSchema:()=>$y,RecipeVersionListRelationFilterSchema:()=>YA,RecipeVersionMaxOrderByAggregateInputSchema:()=>Ntt,RecipeVersionMinOrderByAggregateInputSchema:()=>Btt,RecipeVersionNullableScalarRelationFilterSchema:()=>OM,RecipeVersionOrderByRelationAggregateInputSchema:()=>wN,RecipeVersionOrderByWithAggregationInputSchema:()=>aV,RecipeVersionOrderByWithRelationInputSchema:()=>Lp,RecipeVersionRecipeIdVersionNumberCompoundUniqueInputSchema:()=>xN,RecipeVersionScalarFieldEnumSchema:()=>Sg,RecipeVersionScalarWhereInputSchema:()=>Ha,RecipeVersionScalarWhereWithAggregatesInputSchema:()=>$C,RecipeVersionSchema:()=>Bdt,RecipeVersionSelectSchema:()=>Jy,RecipeVersionSumOrderByAggregateInputSchema:()=>qtt,RecipeVersionUncheckedCreateInputSchema:()=>zY,RecipeVersionUncheckedCreateNestedManyWithoutApprovedByInputSchema:()=>xi,RecipeVersionUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>ki,RecipeVersionUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>Ho,RecipeVersionUncheckedCreateWithoutApprovedByInputSchema:()=>Nu,RecipeVersionUncheckedCreateWithoutCreatedByInputSchema:()=>fu,RecipeVersionUncheckedCreateWithoutIngredientsInputSchema:()=>Of,RecipeVersionUncheckedCreateWithoutInstructionsInputSchema:()=>Bf,RecipeVersionUncheckedCreateWithoutRecipeInputSchema:()=>ds,RecipeVersionUncheckedUpdateInputSchema:()=>bY,RecipeVersionUncheckedUpdateManyInputSchema:()=>hY,RecipeVersionUncheckedUpdateManyWithoutApprovedByInputSchema:()=>gst,RecipeVersionUncheckedUpdateManyWithoutApprovedByNestedInputSchema:()=>dl,RecipeVersionUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Ist,RecipeVersionUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>yl,RecipeVersionUncheckedUpdateManyWithoutRecipeInputSchema:()=>Ost,RecipeVersionUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>qn,RecipeVersionUncheckedUpdateWithoutApprovedByInputSchema:()=>N7,RecipeVersionUncheckedUpdateWithoutCreatedByInputSchema:()=>f7,RecipeVersionUncheckedUpdateWithoutIngredientsInputSchema:()=>wE,RecipeVersionUncheckedUpdateWithoutInstructionsInputSchema:()=>FE,RecipeVersionUncheckedUpdateWithoutRecipeInputSchema:()=>dJ,RecipeVersionUpdateArgsSchema:()=>_Tt,RecipeVersionUpdateInputSchema:()=>mY,RecipeVersionUpdateManyAndReturnArgsSchema:()=>LTt,RecipeVersionUpdateManyArgsSchema:()=>ETt,RecipeVersionUpdateManyMutationInputSchema:()=>fT,RecipeVersionUpdateManyWithWhereWithoutApprovedByInputSchema:()=>tk,RecipeVersionUpdateManyWithWhereWithoutCreatedByInputSchema:()=>JR,RecipeVersionUpdateManyWithWhereWithoutRecipeInputSchema:()=>Vk,RecipeVersionUpdateManyWithoutApprovedByNestedInputSchema:()=>Gi,RecipeVersionUpdateManyWithoutCreatedByNestedInputSchema:()=>Yi,RecipeVersionUpdateManyWithoutRecipeNestedInputSchema:()=>hn,RecipeVersionUpdateOneWithoutIngredientsNestedInputSchema:()=>CF,RecipeVersionUpdateOneWithoutInstructionsNestedInputSchema:()=>WF,RecipeVersionUpdateToOneWithWhereWithoutIngredientsInputSchema:()=>gct,RecipeVersionUpdateToOneWithWhereWithoutInstructionsInputSchema:()=>Tct,RecipeVersionUpdateWithWhereUniqueWithoutApprovedByInputSchema:()=>XR,RecipeVersionUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>$R,RecipeVersionUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>Lk,RecipeVersionUpdateWithoutApprovedByInputSchema:()=>w7,RecipeVersionUpdateWithoutCreatedByInputSchema:()=>O7,RecipeVersionUpdateWithoutIngredientsInputSchema:()=>fE,RecipeVersionUpdateWithoutInstructionsInputSchema:()=>qE,RecipeVersionUpdateWithoutRecipeInputSchema:()=>yJ,RecipeVersionUpsertArgsSchema:()=>BTt,RecipeVersionUpsertWithWhereUniqueWithoutApprovedByInputSchema:()=>KR,RecipeVersionUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>GR,RecipeVersionUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>Ek,RecipeVersionUpsertWithoutIngredientsInputSchema:()=>Ict,RecipeVersionUpsertWithoutInstructionsInputSchema:()=>Sct,RecipeVersionWhereInputSchema:()=>le,RecipeVersionWhereUniqueInputSchema:()=>N,RecipeWhereInputSchema:()=>O,RecipeWhereUniqueInputSchema:()=>C,RecipeYieldAggregateArgsSchema:()=>Ymt,RecipeYieldArgsSchema:()=>qzt,RecipeYieldAvgOrderByAggregateInputSchema:()=>btt,RecipeYieldCountOrderByAggregateInputSchema:()=>mtt,RecipeYieldCreateArgsSchema:()=>eTt,RecipeYieldCreateInputSchema:()=>Q0,RecipeYieldCreateManyAndReturnArgsSchema:()=>aTt,RecipeYieldCreateManyArgsSchema:()=>nTt,RecipeYieldCreateManyInputSchema:()=>hP,RecipeYieldCreateManyRecipeInputEnvelopeSchema:()=>uf,RecipeYieldCreateManyRecipeInputSchema:()=>lQ,RecipeYieldCreateNestedManyWithoutRecipeInputSchema:()=>ko,RecipeYieldCreateOrConnectWithoutRecipeInputSchema:()=>Hh,RecipeYieldCreateWithoutRecipeInputSchema:()=>Cs,RecipeYieldDeleteArgsSchema:()=>iTt,RecipeYieldDeleteManyArgsSchema:()=>cTt,RecipeYieldFindFirstArgsSchema:()=>Hmt,RecipeYieldFindFirstOrThrowArgsSchema:()=>Qmt,RecipeYieldFindManyArgsSchema:()=>fK,RecipeYieldFindUniqueArgsSchema:()=>$mt,RecipeYieldFindUniqueOrThrowArgsSchema:()=>Jmt,RecipeYieldGroupByArgsSchema:()=>Gmt,RecipeYieldIncludeSchema:()=>_y,RecipeYieldListRelationFilterSchema:()=>H4,RecipeYieldMaxOrderByAggregateInputSchema:()=>htt,RecipeYieldMinOrderByAggregateInputSchema:()=>Itt,RecipeYieldOrderByRelationAggregateInputSchema:()=>eat,RecipeYieldOrderByWithAggregationInputSchema:()=>tV,RecipeYieldOrderByWithRelationInputSchema:()=>nb,RecipeYieldScalarFieldEnumSchema:()=>Ig,RecipeYieldScalarWhereInputSchema:()=>wp,RecipeYieldScalarWhereWithAggregatesInputSchema:()=>HC,RecipeYieldSchema:()=>Odt,RecipeYieldSelectSchema:()=>Ey,RecipeYieldSumOrderByAggregateInputSchema:()=>gtt,RecipeYieldUncheckedCreateInputSchema:()=>Y0,RecipeYieldUncheckedCreateNestedManyWithoutRecipeInputSchema:()=>$o,RecipeYieldUncheckedCreateWithoutRecipeInputSchema:()=>As,RecipeYieldUncheckedUpdateInputSchema:()=>$0,RecipeYieldUncheckedUpdateManyInputSchema:()=>J0,RecipeYieldUncheckedUpdateManyWithoutRecipeInputSchema:()=>Bst,RecipeYieldUncheckedUpdateManyWithoutRecipeNestedInputSchema:()=>En,RecipeYieldUncheckedUpdateWithoutRecipeInputSchema:()=>AJ,RecipeYieldUpdateArgsSchema:()=>lTt,RecipeYieldUpdateInputSchema:()=>G0,RecipeYieldUpdateManyAndReturnArgsSchema:()=>pTt,RecipeYieldUpdateManyArgsSchema:()=>rTt,RecipeYieldUpdateManyMutationInputSchema:()=>FN,RecipeYieldUpdateManyWithWhereWithoutRecipeInputSchema:()=>nx,RecipeYieldUpdateManyWithoutRecipeNestedInputSchema:()=>An,RecipeYieldUpdateWithWhereUniqueWithoutRecipeInputSchema:()=>ox,RecipeYieldUpdateWithoutRecipeInputSchema:()=>CJ,RecipeYieldUpsertArgsSchema:()=>oTt,RecipeYieldUpsertWithWhereUniqueWithoutRecipeInputSchema:()=>ex,RecipeYieldWhereInputSchema:()=>ia,RecipeYieldWhereUniqueInputSchema:()=>ge,RestaurantAggregateArgsSchema:()=>bgt,RestaurantArgsSchema:()=>no,RestaurantAvgOrderByAggregateInputSchema:()=>Unt,RestaurantCountOrderByAggregateInputSchema:()=>Pnt,RestaurantCountOutputTypeArgsSchema:()=>KQ,RestaurantCountOutputTypeSelectSchema:()=>xX,RestaurantCreateArgsSchema:()=>ekt,RestaurantCreateInputSchema:()=>q1,RestaurantCreateManyAndReturnArgsSchema:()=>akt,RestaurantCreateManyArgsSchema:()=>nkt,RestaurantCreateManyInputSchema:()=>QP,RestaurantCreateManyOrganizationInputEnvelopeSchema:()=>Jv,RestaurantCreateManyOrganizationInputSchema:()=>dH,RestaurantCreateNestedManyWithoutOrganizationInputSchema:()=>D2,RestaurantCreateNestedOneWithoutCookbooksInputSchema:()=>$2,RestaurantCreateNestedOneWithoutCustomerFeedbacksInputSchema:()=>gq,RestaurantCreateNestedOneWithoutEquipmentsInputSchema:()=>qB,RestaurantCreateNestedOneWithoutInventoryInputSchema:()=>wM,RestaurantCreateNestedOneWithoutLeftoverItemsInputSchema:()=>Nq,RestaurantCreateNestedOneWithoutMenusInputSchema:()=>mD,RestaurantCreateNestedOneWithoutOrdersInputSchema:()=>EF,RestaurantCreateNestedOneWithoutProductionPlansInputSchema:()=>Gq,RestaurantCreateNestedOneWithoutQualityChecklistsInputSchema:()=>eq,RestaurantCreateNestedOneWithoutRecipesInputSchema:()=>uo,RestaurantCreateNestedOneWithoutSalesTransactionsInputSchema:()=>d2,RestaurantCreateNestedOneWithoutUsersInputSchema:()=>Ga,RestaurantCreateNestedOneWithoutWasteRecordsInputSchema:()=>Eq,RestaurantCreateOrConnectWithoutCookbooksInputSchema:()=>l3,RestaurantCreateOrConnectWithoutCustomerFeedbacksInputSchema:()=>j6,RestaurantCreateOrConnectWithoutEquipmentsInputSchema:()=>h6,RestaurantCreateOrConnectWithoutInventoryInputSchema:()=>X6,RestaurantCreateOrConnectWithoutLeftoverItemsInputSchema:()=>v6,RestaurantCreateOrConnectWithoutMenusInputSchema:()=>F3,RestaurantCreateOrConnectWithoutOrdersInputSchema:()=>M3,RestaurantCreateOrConnectWithoutOrganizationInputSchema:()=>Gb,RestaurantCreateOrConnectWithoutProductionPlansInputSchema:()=>q6,RestaurantCreateOrConnectWithoutQualityChecklistsInputSchema:()=>S6,RestaurantCreateOrConnectWithoutRecipesInputSchema:()=>r3,RestaurantCreateOrConnectWithoutSalesTransactionsInputSchema:()=>s6,RestaurantCreateOrConnectWithoutUsersInputSchema:()=>a3,RestaurantCreateOrConnectWithoutWasteRecordsInputSchema:()=>w6,RestaurantCreateWithoutCookbooksInputSchema:()=>HO,RestaurantCreateWithoutCustomerFeedbacksInputSchema:()=>nv,RestaurantCreateWithoutEquipmentsInputSchema:()=>UZ,RestaurantCreateWithoutInventoryInputSchema:()=>Xv,RestaurantCreateWithoutLeftoverItemsInputSchema:()=>cv,RestaurantCreateWithoutMenusInputSchema:()=>fw,RestaurantCreateWithoutOrdersInputSchema:()=>yw,RestaurantCreateWithoutOrganizationInputSchema:()=>Wc,RestaurantCreateWithoutProductionPlansInputSchema:()=>Av,RestaurantCreateWithoutQualityChecklistsInputSchema:()=>NZ,RestaurantCreateWithoutRecipesInputSchema:()=>YO,RestaurantCreateWithoutSalesTransactionsInputSchema:()=>uZ,RestaurantCreateWithoutUsersInputSchema:()=>TO,RestaurantCreateWithoutWasteRecordsInputSchema:()=>mv,RestaurantDeleteArgsSchema:()=>ikt,RestaurantDeleteManyArgsSchema:()=>ckt,RestaurantFindFirstArgsSchema:()=>zgt,RestaurantFindFirstOrThrowArgsSchema:()=>mgt,RestaurantFindManyArgsSchema:()=>QK,RestaurantFindUniqueArgsSchema:()=>Igt,RestaurantFindUniqueOrThrowArgsSchema:()=>ggt,RestaurantGroupByArgsSchema:()=>hgt,RestaurantIncludeSchema:()=>Hd,RestaurantListRelationFilterSchema:()=>T4,RestaurantMaxOrderByAggregateInputSchema:()=>Wnt,RestaurantMinOrderByAggregateInputSchema:()=>Rnt,RestaurantNullableScalarRelationFilterSchema:()=>jM,RestaurantOrderByRelationAggregateInputSchema:()=>pnt,RestaurantOrderByWithAggregationInputSchema:()=>jV,RestaurantOrderByWithRelationInputSchema:()=>fa,RestaurantScalarFieldEnumSchema:()=>Yg,RestaurantScalarRelationFilterSchema:()=>Xn,RestaurantScalarWhereInputSchema:()=>Ap,RestaurantScalarWhereWithAggregatesInputSchema:()=>SA,RestaurantSchema:()=>uzt,RestaurantSelectSchema:()=>Qd,RestaurantSumOrderByAggregateInputSchema:()=>knt,RestaurantUncheckedCreateInputSchema:()=>F1,RestaurantUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>E2,RestaurantUncheckedCreateWithoutCookbooksInputSchema:()=>QO,RestaurantUncheckedCreateWithoutCustomerFeedbacksInputSchema:()=>av,RestaurantUncheckedCreateWithoutEquipmentsInputSchema:()=>WZ,RestaurantUncheckedCreateWithoutInventoryInputSchema:()=>tO,RestaurantUncheckedCreateWithoutLeftoverItemsInputSchema:()=>uv,RestaurantUncheckedCreateWithoutMenusInputSchema:()=>ww,RestaurantUncheckedCreateWithoutOrdersInputSchema:()=>dw,RestaurantUncheckedCreateWithoutOrganizationInputSchema:()=>Rc,RestaurantUncheckedCreateWithoutProductionPlansInputSchema:()=>Sv,RestaurantUncheckedCreateWithoutQualityChecklistsInputSchema:()=>BZ,RestaurantUncheckedCreateWithoutRecipesInputSchema:()=>GO,RestaurantUncheckedCreateWithoutSalesTransactionsInputSchema:()=>sZ,RestaurantUncheckedCreateWithoutUsersInputSchema:()=>PO,RestaurantUncheckedCreateWithoutWasteRecordsInputSchema:()=>bv,RestaurantUncheckedUpdateInputSchema:()=>_1,RestaurantUncheckedUpdateManyInputSchema:()=>E1,RestaurantUncheckedUpdateManyWithoutOrganizationInputSchema:()=>Dut,RestaurantUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>Q2,RestaurantUncheckedUpdateWithoutCookbooksInputSchema:()=>WE,RestaurantUncheckedUpdateWithoutCustomerFeedbacksInputSchema:()=>P_,RestaurantUncheckedUpdateWithoutEquipmentsInputSchema:()=>KD,RestaurantUncheckedUpdateWithoutInventoryInputSchema:()=>bE,RestaurantUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>j_,RestaurantUncheckedUpdateWithoutMenusInputSchema:()=>kL,RestaurantUncheckedUpdateWithoutOrdersInputSchema:()=>uL,RestaurantUncheckedUpdateWithoutOrganizationInputSchema:()=>R8,RestaurantUncheckedUpdateWithoutProductionPlansInputSchema:()=>__,RestaurantUncheckedUpdateWithoutQualityChecklistsInputSchema:()=>p_,RestaurantUncheckedUpdateWithoutRecipesInputSchema:()=>kE,RestaurantUncheckedUpdateWithoutSalesTransactionsInputSchema:()=>FD,RestaurantUncheckedUpdateWithoutUsersInputSchema:()=>SE,RestaurantUncheckedUpdateWithoutWasteRecordsInputSchema:()=>w_,RestaurantUpdateArgsSchema:()=>lkt,RestaurantUpdateInputSchema:()=>D1,RestaurantUpdateManyAndReturnArgsSchema:()=>pkt,RestaurantUpdateManyArgsSchema:()=>rkt,RestaurantUpdateManyMutationInputSchema:()=>KN,RestaurantUpdateManyWithWhereWithoutOrganizationInputSchema:()=>yW,RestaurantUpdateManyWithoutOrganizationNestedInputSchema:()=>V2,RestaurantUpdateOneRequiredWithoutCustomerFeedbacksNestedInputSchema:()=>Sq,RestaurantUpdateOneRequiredWithoutEquipmentsNestedInputSchema:()=>LB,RestaurantUpdateOneRequiredWithoutInventoryNestedInputSchema:()=>EM,RestaurantUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>Fq,RestaurantUpdateOneRequiredWithoutMenusNestedInputSchema:()=>CD,RestaurantUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>QF,RestaurantUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>Xq,RestaurantUpdateOneRequiredWithoutQualityChecklistsNestedInputSchema:()=>lq,RestaurantUpdateOneRequiredWithoutRecipesNestedInputSchema:()=>nn,RestaurantUpdateOneRequiredWithoutSalesTransactionsNestedInputSchema:()=>m2,RestaurantUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>Hq,RestaurantUpdateOneWithoutCookbooksNestedInputSchema:()=>X2,RestaurantUpdateOneWithoutUsersNestedInputSchema:()=>vi,RestaurantUpdateToOneWithWhereWithoutCookbooksInputSchema:()=>cct,RestaurantUpdateToOneWithWhereWithoutCustomerFeedbacksInputSchema:()=>rpt,RestaurantUpdateToOneWithWhereWithoutEquipmentsInputSchema:()=>frt,RestaurantUpdateToOneWithWhereWithoutInventoryInputSchema:()=>Xpt,RestaurantUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>dpt,RestaurantUpdateToOneWithWhereWithoutMenusInputSchema:()=>sut,RestaurantUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Qct,RestaurantUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>Upt,RestaurantUpdateToOneWithWhereWithoutQualityChecklistsInputSchema:()=>Vrt,RestaurantUpdateToOneWithWhereWithoutRecipesInputSchema:()=>sct,RestaurantUpdateToOneWithWhereWithoutSalesTransactionsInputSchema:()=>Trt,RestaurantUpdateToOneWithWhereWithoutUsersInputSchema:()=>ict,RestaurantUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>gpt,RestaurantUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>sW,RestaurantUpdateWithoutCookbooksInputSchema:()=>UE,RestaurantUpdateWithoutCustomerFeedbacksInputSchema:()=>T_,RestaurantUpdateWithoutEquipmentsInputSchema:()=>JD,RestaurantUpdateWithoutInventoryInputSchema:()=>mE,RestaurantUpdateWithoutLeftoverItemsInputSchema:()=>x_,RestaurantUpdateWithoutMenusInputSchema:()=>RL,RestaurantUpdateWithoutOrdersInputSchema:()=>cL,RestaurantUpdateWithoutOrganizationInputSchema:()=>W8,RestaurantUpdateWithoutProductionPlansInputSchema:()=>D_,RestaurantUpdateWithoutQualityChecklistsInputSchema:()=>r_,RestaurantUpdateWithoutRecipesInputSchema:()=>RE,RestaurantUpdateWithoutSalesTransactionsInputSchema:()=>qD,RestaurantUpdateWithoutUsersInputSchema:()=>AE,RestaurantUpdateWithoutWasteRecordsInputSchema:()=>f_,RestaurantUpsertArgsSchema:()=>okt,RestaurantUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>uW,RestaurantUpsertWithoutCookbooksInputSchema:()=>pct,RestaurantUpsertWithoutCustomerFeedbacksInputSchema:()=>lpt,RestaurantUpsertWithoutEquipmentsInputSchema:()=>Ort,RestaurantUpsertWithoutInventoryInputSchema:()=>Kpt,RestaurantUpsertWithoutLeftoverItemsInputSchema:()=>ypt,RestaurantUpsertWithoutMenusInputSchema:()=>uut,RestaurantUpsertWithoutOrdersInputSchema:()=>Hct,RestaurantUpsertWithoutProductionPlansInputSchema:()=>Ppt,RestaurantUpsertWithoutQualityChecklistsInputSchema:()=>Lrt,RestaurantUpsertWithoutRecipesInputSchema:()=>uct,RestaurantUpsertWithoutSalesTransactionsInputSchema:()=>Srt,RestaurantUpsertWithoutUsersInputSchema:()=>act,RestaurantUpsertWithoutWasteRecordsInputSchema:()=>Ipt,RestaurantWhereInputSchema:()=>B,RestaurantWhereUniqueInputSchema:()=>X,SalesTransactionsAggregateArgsSchema:()=>lbt,SalesTransactionsArgsSchema:()=>Dzt,SalesTransactionsAvgOrderByAggregateInputSchema:()=>Wtt,SalesTransactionsCountOrderByAggregateInputSchema:()=>Utt,SalesTransactionsCreateArgsSchema:()=>gTt,SalesTransactionsCreateInputSchema:()=>nY,SalesTransactionsCreateManyAndReturnArgsSchema:()=>STt,SalesTransactionsCreateManyArgsSchema:()=>ATt,SalesTransactionsCreateManyInputSchema:()=>gP,SalesTransactionsCreateManyMenuItemInputEnvelopeSchema:()=>$w,SalesTransactionsCreateManyMenuItemInputSchema:()=>jQ,SalesTransactionsCreateManyRestaurantInputEnvelopeSchema:()=>yO,SalesTransactionsCreateManyRestaurantInputSchema:()=>TH,SalesTransactionsCreateNestedManyWithoutMenuItemInputSchema:()=>Kz,SalesTransactionsCreateNestedManyWithoutRestaurantInputSchema:()=>$l,SalesTransactionsCreateOrConnectWithoutMenuItemInputSchema:()=>AI,SalesTransactionsCreateOrConnectWithoutRestaurantInputSchema:()=>ih,SalesTransactionsCreateWithoutMenuItemInputSchema:()=>Py,SalesTransactionsCreateWithoutRestaurantInputSchema:()=>Hc,SalesTransactionsDeleteArgsSchema:()=>TTt,SalesTransactionsDeleteManyArgsSchema:()=>RTt,SalesTransactionsFindFirstArgsSchema:()=>abt,SalesTransactionsFindFirstOrThrowArgsSchema:()=>ibt,SalesTransactionsFindManyArgsSchema:()=>rN,SalesTransactionsFindUniqueArgsSchema:()=>pbt,SalesTransactionsFindUniqueOrThrowArgsSchema:()=>cbt,SalesTransactionsGroupByArgsSchema:()=>rbt,SalesTransactionsIncludeSchema:()=>Hy,SalesTransactionsListRelationFilterSchema:()=>kM,SalesTransactionsMaxOrderByAggregateInputSchema:()=>Rtt,SalesTransactionsMinOrderByAggregateInputSchema:()=>ktt,SalesTransactionsOrderByRelationAggregateInputSchema:()=>v4,SalesTransactionsOrderByWithAggregationInputSchema:()=>oV,SalesTransactionsOrderByWithRelationInputSchema:()=>ib,SalesTransactionsScalarFieldEnumSchema:()=>Cg,SalesTransactionsScalarWhereInputSchema:()=>kl,SalesTransactionsScalarWhereWithAggregatesInputSchema:()=>YC,SalesTransactionsSchema:()=>wdt,SalesTransactionsSelectSchema:()=>Qy,SalesTransactionsSumOrderByAggregateInputSchema:()=>xtt,SalesTransactionsUncheckedCreateInputSchema:()=>aY,SalesTransactionsUncheckedCreateNestedManyWithoutMenuItemInputSchema:()=>lm,SalesTransactionsUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>cr,SalesTransactionsUncheckedCreateWithoutMenuItemInputSchema:()=>Uy,SalesTransactionsUncheckedCreateWithoutRestaurantInputSchema:()=>Qc,SalesTransactionsUncheckedUpdateInputSchema:()=>lY,SalesTransactionsUncheckedUpdateManyInputSchema:()=>rY,SalesTransactionsUncheckedUpdateManyWithoutMenuItemInputSchema:()=>dyt,SalesTransactionsUncheckedUpdateManyWithoutMenuItemNestedInputSchema:()=>Pm,SalesTransactionsUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Jut,SalesTransactionsUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>wr,SalesTransactionsUncheckedUpdateWithoutMenuItemInputSchema:()=>UK,SalesTransactionsUncheckedUpdateWithoutRestaurantInputSchema:()=>Q8,SalesTransactionsUpdateArgsSchema:()=>PTt,SalesTransactionsUpdateInputSchema:()=>iY,SalesTransactionsUpdateManyAndReturnArgsSchema:()=>WTt,SalesTransactionsUpdateManyArgsSchema:()=>UTt,SalesTransactionsUpdateManyMutationInputSchema:()=>Xj,SalesTransactionsUpdateManyWithWhereWithoutMenuItemInputSchema:()=>wj,SalesTransactionsUpdateManyWithWhereWithoutRestaurantInputSchema:()=>_W,SalesTransactionsUpdateManyWithoutMenuItemNestedInputSchema:()=>bm,SalesTransactionsUpdateManyWithoutRestaurantNestedInputSchema:()=>Tr,SalesTransactionsUpdateWithWhereUniqueWithoutMenuItemInputSchema:()=>fj,SalesTransactionsUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>DW,SalesTransactionsUpdateWithoutMenuItemInputSchema:()=>PK,SalesTransactionsUpdateWithoutRestaurantInputSchema:()=>H8,SalesTransactionsUpsertArgsSchema:()=>CTt,SalesTransactionsUpsertWithWhereUniqueWithoutMenuItemInputSchema:()=>Oj,SalesTransactionsUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>FW,SalesTransactionsWhereInputSchema:()=>ra,SalesTransactionsWhereUniqueInputSchema:()=>ht,SchedulingConstraintAggregateArgsSchema:()=>IIt,SchedulingConstraintArgsSchema:()=>tmt,SchedulingConstraintAvgOrderByAggregateInputSchema:()=>Zot,SchedulingConstraintCountOrderByAggregateInputSchema:()=>Mot,SchedulingConstraintCreateArgsSchema:()=>NWt,SchedulingConstraintCreateInputSchema:()=>GG,SchedulingConstraintCreateManyAndReturnArgsSchema:()=>FWt,SchedulingConstraintCreateManyArgsSchema:()=>qWt,SchedulingConstraintCreateManyInputSchema:()=>qP,SchedulingConstraintCreateManyUserInputEnvelopeSchema:()=>fO,SchedulingConstraintCreateManyUserInputSchema:()=>FH,SchedulingConstraintCreateNestedManyWithoutUserInputSchema:()=>li,SchedulingConstraintCreateOrConnectWithoutUserInputSchema:()=>Sh,SchedulingConstraintCreateWithoutUserInputSchema:()=>Wu,SchedulingConstraintDeleteArgsSchema:()=>DWt,SchedulingConstraintDeleteManyArgsSchema:()=>VWt,SchedulingConstraintFindFirstArgsSchema:()=>bIt,SchedulingConstraintFindFirstOrThrowArgsSchema:()=>hIt,SchedulingConstraintFindManyArgsSchema:()=>VK,SchedulingConstraintFindUniqueArgsSchema:()=>CIt,SchedulingConstraintFindUniqueOrThrowArgsSchema:()=>AIt,SchedulingConstraintGroupByArgsSchema:()=>gIt,SchedulingConstraintIncludeSchema:()=>Zd,SchedulingConstraintListRelationFilterSchema:()=>q4,SchedulingConstraintMaxOrderByAggregateInputSchema:()=>vot,SchedulingConstraintMinOrderByAggregateInputSchema:()=>Oot,SchedulingConstraintOrderByRelationAggregateInputSchema:()=>vnt,SchedulingConstraintOrderByWithAggregationInputSchema:()=>SV,SchedulingConstraintOrderByWithRelationInputSchema:()=>Ib,SchedulingConstraintScalarFieldEnumSchema:()=>Fg,SchedulingConstraintScalarWhereInputSchema:()=>jp,SchedulingConstraintScalarWhereWithAggregatesInputSchema:()=>zA,SchedulingConstraintSchema:()=>ozt,SchedulingConstraintSelectSchema:()=>vd,SchedulingConstraintSumOrderByAggregateInputSchema:()=>fot,SchedulingConstraintUncheckedCreateInputSchema:()=>$G,SchedulingConstraintUncheckedCreateNestedManyWithoutUserInputSchema:()=>Pi,SchedulingConstraintUncheckedCreateWithoutUserInputSchema:()=>Ru,SchedulingConstraintUncheckedUpdateInputSchema:()=>KG,SchedulingConstraintUncheckedUpdateManyInputSchema:()=>XG,SchedulingConstraintUncheckedUpdateManyWithoutUserInputSchema:()=>zst,SchedulingConstraintUncheckedUpdateManyWithoutUserNestedInputSchema:()=>pl,SchedulingConstraintUncheckedUpdateWithoutUserInputSchema:()=>R7,SchedulingConstraintUpdateArgsSchema:()=>_Wt,SchedulingConstraintUpdateInputSchema:()=>JG,SchedulingConstraintUpdateManyAndReturnArgsSchema:()=>LWt,SchedulingConstraintUpdateManyArgsSchema:()=>EWt,SchedulingConstraintUpdateManyMutationInputSchema:()=>$N,SchedulingConstraintUpdateManyWithWhereWithoutUserInputSchema:()=>qR,SchedulingConstraintUpdateManyWithoutUserNestedInputSchema:()=>Li,SchedulingConstraintUpdateWithWhereUniqueWithoutUserInputSchema:()=>BR,SchedulingConstraintUpdateWithoutUserInputSchema:()=>W7,SchedulingConstraintUpsertArgsSchema:()=>BWt,SchedulingConstraintUpsertWithWhereUniqueWithoutUserInputSchema:()=>NR,SchedulingConstraintWhereInputSchema:()=>Ca,SchedulingConstraintWhereUniqueInputSchema:()=>Ue,SessionAggregateArgsSchema:()=>kgt,SessionArgsSchema:()=>amt,SessionAvgOrderByAggregateInputSchema:()=>Dnt,SessionCountOrderByAggregateInputSchema:()=>Fnt,SessionCreateArgsSchema:()=>gkt,SessionCreateInputSchema:()=>G1,SessionCreateManyAndReturnArgsSchema:()=>Skt,SessionCreateManyArgsSchema:()=>Akt,SessionCreateManyInputSchema:()=>GP,SessionCreateManyUserInputEnvelopeSchema:()=>kO,SessionCreateManyUserInputSchema:()=>vH,SessionCreateNestedManyWithoutUserInputSchema:()=>Xa,SessionCreateOrConnectWithoutUserInputSchema:()=>mh,SessionCreateWithoutUserInputSchema:()=>yu,SessionDeleteArgsSchema:()=>Tkt,SessionDeleteManyArgsSchema:()=>Rkt,SessionFindFirstArgsSchema:()=>Wgt,SessionFindFirstOrThrowArgsSchema:()=>Rgt,SessionFindManyArgsSchema:()=>YK,SessionFindUniqueArgsSchema:()=>jgt,SessionFindUniqueOrThrowArgsSchema:()=>Mgt,SessionGroupByArgsSchema:()=>xgt,SessionIncludeSchema:()=>$d,SessionListRelationFilterSchema:()=>w4,SessionMaxOrderByAggregateInputSchema:()=>_nt,SessionMinOrderByAggregateInputSchema:()=>Ent,SessionOrderByRelationAggregateInputSchema:()=>jnt,SessionOrderByWithAggregationInputSchema:()=>ZV,SessionOrderByWithRelationInputSchema:()=>Tb,SessionScalarFieldEnumSchema:()=>$g,SessionScalarWhereInputSchema:()=>Rp,SessionScalarWhereWithAggregatesInputSchema:()=>PA,SessionSchema:()=>yzt,SessionSelectSchema:()=>Jd,SessionSumOrderByAggregateInputSchema:()=>Lnt,SessionUncheckedCreateInputSchema:()=>$1,SessionUncheckedCreateNestedManyWithoutUserInputSchema:()=>hi,SessionUncheckedCreateWithoutUserInputSchema:()=>du,SessionUncheckedUpdateInputSchema:()=>K1,SessionUncheckedUpdateManyInputSchema:()=>X1,SessionUncheckedUpdateManyWithoutUserInputSchema:()=>rst,SessionUncheckedUpdateManyWithoutUserNestedInputSchema:()=>el,SessionUncheckedUpdateWithoutUserInputSchema:()=>d7,SessionUpdateArgsSchema:()=>Pkt,SessionUpdateInputSchema:()=>J1,SessionUpdateManyAndReturnArgsSchema:()=>Wkt,SessionUpdateManyArgsSchema:()=>Ukt,SessionUpdateManyMutationInputSchema:()=>XN,SessionUpdateManyWithWhereWithoutUserInputSchema:()=>IR,SessionUpdateManyWithoutUserNestedInputSchema:()=>Ni,SessionUpdateWithWhereUniqueWithoutUserInputSchema:()=>hR,SessionUpdateWithoutUserInputSchema:()=>y7,SessionUpsertArgsSchema:()=>Ckt,SessionUpsertWithWhereUniqueWithoutUserInputSchema:()=>bR,SessionWhereInputSchema:()=>Pa,SessionWhereUniqueInputSchema:()=>Re,ShiftAggregateArgsSchema:()=>iAt,ShiftArgsSchema:()=>d0,ShiftAvgOrderByAggregateInputSchema:()=>Cit,ShiftCountOrderByAggregateInputSchema:()=>git,ShiftCountOutputTypeArgsSchema:()=>z0,ShiftCountOutputTypeSelectSchema:()=>qX,ShiftCreateArgsSchema:()=>Njt,ShiftCreateInputSchema:()=>y$,ShiftCreateManyAndReturnArgsSchema:()=>Fjt,ShiftCreateManyArgsSchema:()=>qjt,ShiftCreateManyInputSchema:()=>cU,ShiftCreateManyUserInputEnvelopeSchema:()=>UO,ShiftCreateManyUserInputSchema:()=>jH,ShiftCreateNestedManyWithoutUserInputSchema:()=>$a,ShiftCreateNestedOneWithoutTasksInputSchema:()=>Blt,ShiftCreateOrConnectWithoutTasksInputSchema:()=>L6,ShiftCreateOrConnectWithoutUserInputSchema:()=>yh,ShiftCreateWithoutTasksInputSchema:()=>Zv,ShiftCreateWithoutUserInputSchema:()=>lu,ShiftDeleteArgsSchema:()=>Djt,ShiftDeleteManyArgsSchema:()=>Vjt,ShiftFindFirstArgsSchema:()=>nAt,ShiftFindFirstOrThrowArgsSchema:()=>aAt,ShiftFindManyArgsSchema:()=>JK,ShiftFindUniqueArgsSchema:()=>rAt,ShiftFindUniqueOrThrowArgsSchema:()=>pAt,ShiftGroupByArgsSchema:()=>lAt,ShiftIncludeSchema:()=>Pz,ShiftListRelationFilterSchema:()=>f4,ShiftMaxOrderByAggregateInputSchema:()=>Ait,ShiftMinOrderByAggregateInputSchema:()=>Sit,ShiftOrderByRelationAggregateInputSchema:()=>xnt,ShiftOrderByWithAggregationInputSchema:()=>HV,ShiftOrderByWithRelationInputSchema:()=>_m,ShiftScalarFieldEnumSchema:()=>uC,ShiftScalarRelationFilterSchema:()=>g4,ShiftScalarWhereInputSchema:()=>Wp,ShiftScalarWhereWithAggregatesInputSchema:()=>BA,ShiftSchema:()=>Wzt,ShiftSelectSchema:()=>Uz,ShiftStatusSchema:()=>Qt,ShiftSumOrderByAggregateInputSchema:()=>Tit,ShiftTaskAggregateArgsSchema:()=>lIt,ShiftTaskArgsSchema:()=>Kzt,ShiftTaskAvgOrderByAggregateInputSchema:()=>Cot,ShiftTaskCountOrderByAggregateInputSchema:()=>got,ShiftTaskCreateArgsSchema:()=>gWt,ShiftTaskCreateInputSchema:()=>qG,ShiftTaskCreateManyAndReturnArgsSchema:()=>SWt,ShiftTaskCreateManyArgsSchema:()=>AWt,ShiftTaskCreateManyInputSchema:()=>NP,ShiftTaskCreateManyShiftInputEnvelopeSchema:()=>Uw,ShiftTaskCreateManyShiftInputSchema:()=>PQ,ShiftTaskCreateNestedManyWithoutShiftInputSchema:()=>u5,ShiftTaskCreateOrConnectWithoutShiftInputSchema:()=>dI,ShiftTaskCreateWithoutShiftInputSchema:()=>py,ShiftTaskDeleteArgsSchema:()=>TWt,ShiftTaskDeleteManyArgsSchema:()=>RWt,ShiftTaskFindFirstArgsSchema:()=>aIt,ShiftTaskFindFirstOrThrowArgsSchema:()=>iIt,ShiftTaskFindManyArgsSchema:()=>EK,ShiftTaskFindUniqueArgsSchema:()=>pIt,ShiftTaskFindUniqueOrThrowArgsSchema:()=>cIt,ShiftTaskGroupByArgsSchema:()=>rIt,ShiftTaskIncludeSchema:()=>kd,ShiftTaskListRelationFilterSchema:()=>l2,ShiftTaskMaxOrderByAggregateInputSchema:()=>Aot,ShiftTaskMinOrderByAggregateInputSchema:()=>Sot,ShiftTaskOrderByRelationAggregateInputSchema:()=>Iit,ShiftTaskOrderByWithAggregationInputSchema:()=>CV,ShiftTaskOrderByWithRelationInputSchema:()=>bb,ShiftTaskScalarFieldEnumSchema:()=>Bg,ShiftTaskScalarWhereInputSchema:()=>Dp,ShiftTaskScalarWhereWithAggregatesInputSchema:()=>yA,ShiftTaskSchema:()=>tzt,ShiftTaskSelectSchema:()=>xd,ShiftTaskSumOrderByAggregateInputSchema:()=>Tot,ShiftTaskUncheckedCreateInputSchema:()=>FG,ShiftTaskUncheckedCreateNestedManyWithoutShiftInputSchema:()=>s5,ShiftTaskUncheckedCreateWithoutShiftInputSchema:()=>cy,ShiftTaskUncheckedUpdateInputSchema:()=>_G,ShiftTaskUncheckedUpdateManyInputSchema:()=>EG,ShiftTaskUncheckedUpdateManyWithoutShiftInputSchema:()=>iyt,ShiftTaskUncheckedUpdateManyWithoutShiftNestedInputSchema:()=>z5,ShiftTaskUncheckedUpdateWithoutShiftInputSchema:()=>cK,ShiftTaskUpdateArgsSchema:()=>PWt,ShiftTaskUpdateInputSchema:()=>DG,ShiftTaskUpdateManyAndReturnArgsSchema:()=>WWt,ShiftTaskUpdateManyArgsSchema:()=>UWt,ShiftTaskUpdateManyMutationInputSchema:()=>YN,ShiftTaskUpdateManyWithWhereWithoutShiftInputSchema:()=>yj,ShiftTaskUpdateManyWithoutShiftNestedInputSchema:()=>d5,ShiftTaskUpdateWithWhereUniqueWithoutShiftInputSchema:()=>sj,ShiftTaskUpdateWithoutShiftInputSchema:()=>pK,ShiftTaskUpsertArgsSchema:()=>CWt,ShiftTaskUpsertWithWhereUniqueWithoutShiftInputSchema:()=>uj,ShiftTaskWhereInputSchema:()=>Ia,ShiftTaskWhereUniqueInputSchema:()=>Te,ShiftUncheckedCreateInputSchema:()=>d$,ShiftUncheckedCreateNestedManyWithoutUserInputSchema:()=>zi,ShiftUncheckedCreateWithoutTasksInputSchema:()=>vv,ShiftUncheckedCreateWithoutUserInputSchema:()=>ru,ShiftUncheckedUpdateInputSchema:()=>m$,ShiftUncheckedUpdateManyInputSchema:()=>b$,ShiftUncheckedUpdateManyWithoutUserInputSchema:()=>ast,ShiftUncheckedUpdateManyWithoutUserNestedInputSchema:()=>Ki,ShiftUncheckedUpdateWithoutTasksInputSchema:()=>K_,ShiftUncheckedUpdateWithoutUserInputSchema:()=>r7,ShiftUpdateArgsSchema:()=>_jt,ShiftUpdateInputSchema:()=>z$,ShiftUpdateManyAndReturnArgsSchema:()=>Ljt,ShiftUpdateManyArgsSchema:()=>Ejt,ShiftUpdateManyMutationInputSchema:()=>oB,ShiftUpdateManyWithWhereWithoutUserInputSchema:()=>cR,ShiftUpdateManyWithoutUserNestedInputSchema:()=>Oi,ShiftUpdateOneRequiredWithoutTasksNestedInputSchema:()=>qlt,ShiftUpdateToOneWithWhereWithoutTasksInputSchema:()=>fpt,ShiftUpdateWithWhereUniqueWithoutUserInputSchema:()=>pR,ShiftUpdateWithoutTasksInputSchema:()=>J_,ShiftUpdateWithoutUserInputSchema:()=>l7,ShiftUpsertArgsSchema:()=>Bjt,ShiftUpsertWithWhereUniqueWithoutUserInputSchema:()=>rR,ShiftUpsertWithoutTasksInputSchema:()=>Opt,ShiftWhereInputSchema:()=>Xe,ShiftWhereUniqueInputSchema:()=>ae,SkillLevelSchema:()=>W,SortOrderInputSchema:()=>g,SortOrderSchema:()=>e,StockCountAggregateArgsSchema:()=>SCt,StockCountArgsSchema:()=>r0,StockCountAvgOrderByAggregateInputSchema:()=>Dat,StockCountCountOrderByAggregateInputSchema:()=>Fat,StockCountCountOutputTypeArgsSchema:()=>p0,StockCountCountOutputTypeSelectSchema:()=>wX,StockCountCreateArgsSchema:()=>Nxt,StockCountCreateInputSchema:()=>f9,StockCountCreateManyAndReturnArgsSchema:()=>Fxt,StockCountCreateManyArgsSchema:()=>qxt,StockCountCreateManyCreatedByInputEnvelopeSchema:()=>_O,StockCountCreateManyCreatedByInputSchema:()=>QH,StockCountCreateManyInputSchema:()=>nU,StockCountCreateManyInventoryInputEnvelopeSchema:()=>nO,StockCountCreateManyInventoryInputSchema:()=>hH,StockCountCreateNestedManyWithoutCreatedByInputSchema:()=>di,StockCountCreateNestedManyWithoutInventoryInputSchema:()=>qM,StockCountCreateNestedOneWithoutItemsInputSchema:()=>e5,StockCountCreateOrConnectWithoutCreatedByInputSchema:()=>xh,StockCountCreateOrConnectWithoutInventoryInputSchema:()=>Xb,StockCountCreateOrConnectWithoutItemsInputSchema:()=>k3,StockCountCreateWithoutCreatedByInputSchema:()=>Fu,StockCountCreateWithoutInventoryInputSchema:()=>Oc,StockCountCreateWithoutItemsInputSchema:()=>lw,StockCountDeleteArgsSchema:()=>Dxt,StockCountDeleteManyArgsSchema:()=>Vxt,StockCountFindFirstArgsSchema:()=>CCt,StockCountFindFirstOrThrowArgsSchema:()=>ACt,StockCountFindManyArgsSchema:()=>bN,StockCountFindUniqueArgsSchema:()=>PCt,StockCountFindUniqueOrThrowArgsSchema:()=>UCt,StockCountGroupByArgsSchema:()=>TCt,StockCountIncludeSchema:()=>yz,StockCountItemAggregateArgsSchema:()=>kCt,StockCountItemArgsSchema:()=>rmt,StockCountItemAvgOrderByAggregateInputSchema:()=>Qat,StockCountItemCountOrderByAggregateInputSchema:()=>Hat,StockCountItemCreateArgsSchema:()=>Hxt,StockCountItemCreateInputSchema:()=>F9,StockCountItemCreateManyAndReturnArgsSchema:()=>Gxt,StockCountItemCreateManyArgsSchema:()=>Yxt,StockCountItemCreateManyInputSchema:()=>aU,StockCountItemCreateManyItemInputEnvelopeSchema:()=>Yf,StockCountItemCreateManyItemInputSchema:()=>gQ,StockCountItemCreateManyStockCountInputEnvelopeSchema:()=>iw,StockCountItemCreateManyStockCountInputSchema:()=>CQ,StockCountItemCreateNestedManyWithoutItemInputSchema:()=>VS,StockCountItemCreateNestedManyWithoutStockCountInputSchema:()=>NF,StockCountItemCreateOrConnectWithoutItemInputSchema:()=>rI,StockCountItemCreateOrConnectWithoutStockCountInputSchema:()=>pI,StockCountItemCreateWithoutItemInputSchema:()=>$s,StockCountItemCreateWithoutStockCountInputSchema:()=>Ks,StockCountItemDeleteArgsSchema:()=>$xt,StockCountItemDeleteManyArgsSchema:()=>tjt,StockCountItemFindFirstArgsSchema:()=>WCt,StockCountItemFindFirstOrThrowArgsSchema:()=>RCt,StockCountItemFindManyArgsSchema:()=>hN,StockCountItemFindUniqueArgsSchema:()=>jCt,StockCountItemFindUniqueOrThrowArgsSchema:()=>MCt,StockCountItemGroupByArgsSchema:()=>xCt,StockCountItemIncludeSchema:()=>zz,StockCountItemListRelationFilterSchema:()=>fM,StockCountItemMaxOrderByAggregateInputSchema:()=>Yat,StockCountItemMinOrderByAggregateInputSchema:()=>Gat,StockCountItemOrderByRelationAggregateInputSchema:()=>n2,StockCountItemOrderByWithAggregationInputSchema:()=>DV,StockCountItemOrderByWithRelationInputSchema:()=>Wb,StockCountItemScalarFieldEnumSchema:()=>iC,StockCountItemScalarWhereInputSchema:()=>vl,StockCountItemScalarWhereWithAggregatesInputSchema:()=>vA,StockCountItemSchema:()=>Azt,StockCountItemSelectSchema:()=>mz,StockCountItemStockCountIdItemIdCompoundUniqueInputSchema:()=>ON,StockCountItemSumOrderByAggregateInputSchema:()=>$at,StockCountItemUncheckedCreateInputSchema:()=>D9,StockCountItemUncheckedCreateNestedManyWithoutItemInputSchema:()=>YS,StockCountItemUncheckedCreateNestedManyWithoutStockCountInputSchema:()=>BF,StockCountItemUncheckedCreateWithoutItemInputSchema:()=>Js,StockCountItemUncheckedCreateWithoutStockCountInputSchema:()=>Xs,StockCountItemUncheckedUpdateInputSchema:()=>E9,StockCountItemUncheckedUpdateManyInputSchema:()=>L9,StockCountItemUncheckedUpdateManyWithoutItemInputSchema:()=>Xst,StockCountItemUncheckedUpdateManyWithoutItemNestedInputSchema:()=>nT,StockCountItemUncheckedUpdateManyWithoutStockCountInputSchema:()=>tyt,StockCountItemUncheckedUpdateManyWithoutStockCountNestedInputSchema:()=>_F,StockCountItemUncheckedUpdateWithoutItemInputSchema:()=>JJ,StockCountItemUncheckedUpdateWithoutStockCountInputSchema:()=>XJ,StockCountItemUpdateArgsSchema:()=>Jxt,StockCountItemUpdateInputSchema:()=>_9,StockCountItemUpdateManyAndReturnArgsSchema:()=>Xxt,StockCountItemUpdateManyArgsSchema:()=>Kxt,StockCountItemUpdateManyMutationInputSchema:()=>cM,StockCountItemUpdateManyWithWhereWithoutItemInputSchema:()=>Yx,StockCountItemUpdateManyWithWhereWithoutStockCountInputSchema:()=>Jx,StockCountItemUpdateManyWithoutItemNestedInputSchema:()=>tT,StockCountItemUpdateManyWithoutStockCountNestedInputSchema:()=>DF,StockCountItemUpdateWithWhereUniqueWithoutItemInputSchema:()=>Qx,StockCountItemUpdateWithWhereUniqueWithoutStockCountInputSchema:()=>$x,StockCountItemUpdateWithoutItemInputSchema:()=>$J,StockCountItemUpdateWithoutStockCountInputSchema:()=>KJ,StockCountItemUpsertArgsSchema:()=>Qxt,StockCountItemUpsertWithWhereUniqueWithoutItemInputSchema:()=>Hx,StockCountItemUpsertWithWhereUniqueWithoutStockCountInputSchema:()=>Gx,StockCountItemWhereInputSchema:()=>Ra,StockCountItemWhereUniqueInputSchema:()=>At,StockCountListRelationFilterSchema:()=>UM,StockCountMaxOrderByAggregateInputSchema:()=>_at,StockCountMinOrderByAggregateInputSchema:()=>Eat,StockCountOrderByRelationAggregateInputSchema:()=>W4,StockCountOrderByWithAggregationInputSchema:()=>FV,StockCountOrderByWithRelationInputSchema:()=>qm,StockCountScalarFieldEnumSchema:()=>aC,StockCountScalarRelationFilterSchema:()=>a2,StockCountScalarWhereInputSchema:()=>Wl,StockCountScalarWhereWithAggregatesInputSchema:()=>ZA,StockCountSchema:()=>Czt,StockCountSelectSchema:()=>dz,StockCountSumOrderByAggregateInputSchema:()=>Lat,StockCountUncheckedCreateInputSchema:()=>w9,StockCountUncheckedCreateNestedManyWithoutCreatedByInputSchema:()=>Mi,StockCountUncheckedCreateNestedManyWithoutInventoryInputSchema:()=>_M,StockCountUncheckedCreateWithoutCreatedByInputSchema:()=>Du,StockCountUncheckedCreateWithoutInventoryInputSchema:()=>fc,StockCountUncheckedCreateWithoutItemsInputSchema:()=>rw,StockCountUncheckedUpdateInputSchema:()=>B9,StockCountUncheckedUpdateManyInputSchema:()=>q9,StockCountUncheckedUpdateManyWithoutCreatedByInputSchema:()=>Ast,StockCountUncheckedUpdateManyWithoutCreatedByNestedInputSchema:()=>ml,StockCountUncheckedUpdateManyWithoutInventoryInputSchema:()=>Vut,StockCountUncheckedUpdateManyWithoutInventoryNestedInputSchema:()=>GM,StockCountUncheckedUpdateWithoutCreatedByInputSchema:()=>D7,StockCountUncheckedUpdateWithoutInventoryInputSchema:()=>f8,StockCountUncheckedUpdateWithoutItemsInputSchema:()=>aL,StockCountUpdateArgsSchema:()=>_xt,StockCountUpdateInputSchema:()=>N9,StockCountUpdateManyAndReturnArgsSchema:()=>Lxt,StockCountUpdateManyArgsSchema:()=>Ext,StockCountUpdateManyMutationInputSchema:()=>pM,StockCountUpdateManyWithWhereWithoutCreatedByInputSchema:()=>lk,StockCountUpdateManyWithWhereWithoutInventoryInputSchema:()=>PW,StockCountUpdateManyWithoutCreatedByNestedInputSchema:()=>Ji,StockCountUpdateManyWithoutInventoryNestedInputSchema:()=>HM,StockCountUpdateOneRequiredWithoutItemsNestedInputSchema:()=>n5,StockCountUpdateToOneWithWhereWithoutItemsInputSchema:()=>Dct,StockCountUpdateWithWhereUniqueWithoutCreatedByInputSchema:()=>ik,StockCountUpdateWithWhereUniqueWithoutInventoryInputSchema:()=>TW,StockCountUpdateWithoutCreatedByInputSchema:()=>F7,StockCountUpdateWithoutInventoryInputSchema:()=>O8,StockCountUpdateWithoutItemsInputSchema:()=>nL,StockCountUpsertArgsSchema:()=>Bxt,StockCountUpsertWithWhereUniqueWithoutCreatedByInputSchema:()=>ak,StockCountUpsertWithWhereUniqueWithoutInventoryInputSchema:()=>SW,StockCountUpsertWithoutItemsInputSchema:()=>Fct,StockCountWhereInputSchema:()=>Je,StockCountWhereUniqueInputSchema:()=>ut,StringFieldUpdateOperationsInputSchema:()=>a,StringFilterSchema:()=>S,StringNullableFilterSchema:()=>T,StringNullableListFilterSchema:()=>Il,StringNullableWithAggregatesFilterSchema:()=>kt,StringWithAggregatesFilterSchema:()=>bt,SupplierPriceHistoryAggregateArgsSchema:()=>yht,SupplierPriceHistoryArgsSchema:()=>Vzt,SupplierPriceHistoryAvgOrderByAggregateInputSchema:()=>Met,SupplierPriceHistoryCountOrderByAggregateInputSchema:()=>jet,SupplierPriceHistoryCreateArgsSchema:()=>eUt,SupplierPriceHistoryCreateInputSchema:()=>XY,SupplierPriceHistoryCreateManyAndReturnArgsSchema:()=>aUt,SupplierPriceHistoryCreateManyArgsSchema:()=>nUt,SupplierPriceHistoryCreateManyIngredientInputEnvelopeSchema:()=>kf,SupplierPriceHistoryCreateManyIngredientInputSchema:()=>mQ,SupplierPriceHistoryCreateManyInputSchema:()=>xP,SupplierPriceHistoryCreateManyVendorInputEnvelopeSchema:()=>Sw,SupplierPriceHistoryCreateManyVendorInputSchema:()=>TQ,SupplierPriceHistoryCreateNestedManyWithoutIngredientInputSchema:()=>NI,SupplierPriceHistoryCreateNestedManyWithoutVendorInputSchema:()=>XF,SupplierPriceHistoryCreateOrConnectWithoutIngredientInputSchema:()=>oI,SupplierPriceHistoryCreateOrConnectWithoutVendorInputSchema:()=>yI,SupplierPriceHistoryCreateWithoutIngredientInputSchema:()=>Fs,SupplierPriceHistoryCreateWithoutVendorInputSchema:()=>ly,SupplierPriceHistoryDeleteArgsSchema:()=>iUt,SupplierPriceHistoryDeleteManyArgsSchema:()=>cUt,SupplierPriceHistoryFindFirstArgsSchema:()=>uht,SupplierPriceHistoryFindFirstOrThrowArgsSchema:()=>sht,SupplierPriceHistoryFindManyArgsSchema:()=>uN,SupplierPriceHistoryFindUniqueArgsSchema:()=>zht,SupplierPriceHistoryFindUniqueOrThrowArgsSchema:()=>mht,SupplierPriceHistoryGroupByArgsSchema:()=>dht,SupplierPriceHistoryIncludeSchema:()=>yd,SupplierPriceHistoryListRelationFilterSchema:()=>vM,SupplierPriceHistoryMaxOrderByAggregateInputSchema:()=>Zet,SupplierPriceHistoryMinOrderByAggregateInputSchema:()=>vet,SupplierPriceHistoryOrderByRelationAggregateInputSchema:()=>o2,SupplierPriceHistoryOrderByWithAggregationInputSchema:()=>yV,SupplierPriceHistoryOrderByWithRelationInputSchema:()=>cb,SupplierPriceHistoryScalarFieldEnumSchema:()=>jg,SupplierPriceHistoryScalarWhereInputSchema:()=>Zl,SupplierPriceHistoryScalarWhereWithAggregatesInputSchema:()=>aA,SupplierPriceHistorySchema:()=>Hdt,SupplierPriceHistorySelectSchema:()=>dd,SupplierPriceHistorySumOrderByAggregateInputSchema:()=>Oet,SupplierPriceHistoryUncheckedCreateInputSchema:()=>tG,SupplierPriceHistoryUncheckedCreateNestedManyWithoutIngredientInputSchema:()=>VI,SupplierPriceHistoryUncheckedCreateNestedManyWithoutVendorInputSchema:()=>oD,SupplierPriceHistoryUncheckedCreateWithoutIngredientInputSchema:()=>Ds,SupplierPriceHistoryUncheckedCreateWithoutVendorInputSchema:()=>ry,SupplierPriceHistoryUncheckedUpdateInputSchema:()=>oG,SupplierPriceHistoryUncheckedUpdateManyInputSchema:()=>nG,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientInputSchema:()=>Yst,SupplierPriceHistoryUncheckedUpdateManyWithoutIngredientNestedInputSchema:()=>rg,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorInputSchema:()=>ayt,SupplierPriceHistoryUncheckedUpdateManyWithoutVendorNestedInputSchema:()=>pD,SupplierPriceHistoryUncheckedUpdateWithoutIngredientInputSchema:()=>DJ,SupplierPriceHistoryUncheckedUpdateWithoutVendorInputSchema:()=>rK,SupplierPriceHistoryUpdateArgsSchema:()=>lUt,SupplierPriceHistoryUpdateInputSchema:()=>eG,SupplierPriceHistoryUpdateManyAndReturnArgsSchema:()=>pUt,SupplierPriceHistoryUpdateManyArgsSchema:()=>rUt,SupplierPriceHistoryUpdateManyMutationInputSchema:()=>oM,SupplierPriceHistoryUpdateManyWithWhereWithoutIngredientInputSchema:()=>vx,SupplierPriceHistoryUpdateManyWithWhereWithoutVendorInputSchema:()=>cj,SupplierPriceHistoryUpdateManyWithoutIngredientNestedInputSchema:()=>XI,SupplierPriceHistoryUpdateManyWithoutVendorNestedInputSchema:()=>iD,SupplierPriceHistoryUpdateWithWhereUniqueWithoutIngredientInputSchema:()=>Zx,SupplierPriceHistoryUpdateWithWhereUniqueWithoutVendorInputSchema:()=>pj,SupplierPriceHistoryUpdateWithoutIngredientInputSchema:()=>FJ,SupplierPriceHistoryUpdateWithoutVendorInputSchema:()=>lK,SupplierPriceHistoryUpsertArgsSchema:()=>oUt,SupplierPriceHistoryUpsertWithWhereUniqueWithoutIngredientInputSchema:()=>Mx,SupplierPriceHistoryUpsertWithWhereUniqueWithoutVendorInputSchema:()=>rj,SupplierPriceHistoryWhereInputSchema:()=>sa,SupplierPriceHistoryWhereUniqueInputSchema:()=>gt,TaskTypeSchema:()=>ue,TransactionIsolationLevelSchema:()=>kdt,TransactionTypeSchema:()=>Ot,UserAggregateArgsSchema:()=>Sgt,UserArgsSchema:()=>Xt,UserAvgOrderByAggregateInputSchema:()=>fnt,UserCountOrderByAggregateInputSchema:()=>Ont,UserCountOutputTypeArgsSchema:()=>XQ,UserCountOutputTypeSelectSchema:()=>jX,UserCreateArgsSchema:()=>ukt,UserCreateInputSchema:()=>L1,UserCreateManyAndReturnArgsSchema:()=>dkt,UserCreateManyArgsSchema:()=>ykt,UserCreateManyInputSchema:()=>YP,UserCreateManyOrganizationInputEnvelopeSchema:()=>Kv,UserCreateManyOrganizationInputSchema:()=>zH,UserCreateManyRestaurantInputEnvelopeSchema:()=>lO,UserCreateManyRestaurantInputSchema:()=>IH,UserCreateNestedManyWithoutOrganizationInputSchema:()=>_2,UserCreateNestedManyWithoutRestaurantInputSchema:()=>Ll,UserCreateNestedOneWithoutAvailabilityInputSchema:()=>Flt,UserCreateNestedOneWithoutChecklistCompletesInputSchema:()=>yq,UserCreateNestedOneWithoutCustomerFeedbackResponsesInputSchema:()=>Aq,UserCreateNestedOneWithoutInventoryTransactionsInputSchema:()=>MF,UserCreateNestedOneWithoutInventoryUpdatesInputSchema:()=>_S,UserCreateNestedOneWithoutInventoryWithdrawalsInputSchema:()=>sF,UserCreateNestedOneWithoutLeftoverItemsInputSchema:()=>qq,UserCreateNestedOneWithoutPasswordResetsInputSchema:()=>trt,UserCreateNestedOneWithoutPrepItemsInputSchema:()=>sD,UserCreateNestedOneWithoutProductionPlanItemsInputSchema:()=>iF,UserCreateNestedOneWithoutProductionPlansInputSchema:()=>$q,UserCreateNestedOneWithoutRecipeVersionsApprovedInputSchema:()=>JT,UserCreateNestedOneWithoutRecipeVersionsCreatedInputSchema:()=>$T,UserCreateNestedOneWithoutSchedulingConstraintsInputSchema:()=>_lt,UserCreateNestedOneWithoutSessionsInputSchema:()=>$lt,UserCreateNestedOneWithoutShiftsInputSchema:()=>c5,UserCreateNestedOneWithoutStockCountsInputSchema:()=>wF,UserCreateNestedOneWithoutWasteRecordsInputSchema:()=>Vq,UserCreateOrConnectWithoutAvailabilityInputSchema:()=>V6,UserCreateOrConnectWithoutChecklistCompletesInputSchema:()=>U6,UserCreateOrConnectWithoutCustomerFeedbackResponsesInputSchema:()=>Z6,UserCreateOrConnectWithoutInventoryTransactionsInputSchema:()=>U3,UserCreateOrConnectWithoutInventoryUpdatesInputSchema:()=>S3,UserCreateOrConnectWithoutInventoryWithdrawalsInputSchema:()=>G6,UserCreateOrConnectWithoutLeftoverItemsInputSchema:()=>f6,UserCreateOrConnectWithoutOrganizationInputSchema:()=>$b,UserCreateOrConnectWithoutPasswordResetsInputSchema:()=>q3,UserCreateOrConnectWithoutPrepItemsInputSchema:()=>B3,UserCreateOrConnectWithoutProductionPlanItemsInputSchema:()=>E6,UserCreateOrConnectWithoutProductionPlansInputSchema:()=>F6,UserCreateOrConnectWithoutRecipeVersionsApprovedInputSchema:()=>b6,UserCreateOrConnectWithoutRecipeVersionsCreatedInputSchema:()=>m6,UserCreateOrConnectWithoutRestaurantInputSchema:()=>th,UserCreateOrConnectWithoutSchedulingConstraintsInputSchema:()=>H6,UserCreateOrConnectWithoutSessionsInputSchema:()=>i3,UserCreateOrConnectWithoutShiftsInputSchema:()=>f3,UserCreateOrConnectWithoutStockCountsInputSchema:()=>R3,UserCreateOrConnectWithoutWasteRecordsInputSchema:()=>B6,UserCreateWithoutAvailabilityInputSchema:()=>Ov,UserCreateWithoutChecklistCompletesInputSchema:()=>HZ,UserCreateWithoutCustomerFeedbackResponsesInputSchema:()=>rv,UserCreateWithoutInventoryTransactionsInputSchema:()=>Xf,UserCreateWithoutInventoryUpdatesInputSchema:()=>Lf,UserCreateWithoutInventoryWithdrawalsInputSchema:()=>_v,UserCreateWithoutLeftoverItemsInputSchema:()=>dv,UserCreateWithoutOrganizationInputSchema:()=>kc,UserCreateWithoutPasswordResetsInputSchema:()=>vw,UserCreateWithoutPrepItemsInputSchema:()=>Mw,UserCreateWithoutProductionPlanItemsInputSchema:()=>jv,UserCreateWithoutProductionPlansInputSchema:()=>Tv,UserCreateWithoutRecipeVersionsApprovedInputSchema:()=>TZ,UserCreateWithoutRecipeVersionsCreatedInputSchema:()=>AZ,UserCreateWithoutRestaurantInputSchema:()=>wc,UserCreateWithoutSchedulingConstraintsInputSchema:()=>wv,UserCreateWithoutSessionsInputSchema:()=>EO,UserCreateWithoutShiftsInputSchema:()=>Tw,UserCreateWithoutStockCountsInputSchema:()=>nw,UserCreateWithoutWasteRecordsInputSchema:()=>gv,UserDeleteArgsSchema:()=>zkt,UserDeleteManyArgsSchema:()=>Ikt,UserFindFirstArgsSchema:()=>Cgt,UserFindFirstOrThrowArgsSchema:()=>Agt,UserFindManyArgsSchema:()=>dN,UserFindUniqueArgsSchema:()=>Pgt,UserFindUniqueOrThrowArgsSchema:()=>Ugt,UserGroupByArgsSchema:()=>Tgt,UserIncludeSchema:()=>Yd,UserListRelationFilterSchema:()=>PM,UserMaxOrderByAggregateInputSchema:()=>wnt,UserMinOrderByAggregateInputSchema:()=>Nnt,UserNullableScalarRelationFilterSchema:()=>xI,UserOrderByRelationAggregateInputSchema:()=>P4,UserOrderByWithAggregationInputSchema:()=>MV,UserOrderByWithRelationInputSchema:()=>eo,UserRoleSchema:()=>j,UserScalarFieldEnumSchema:()=>Gg,UserScalarRelationFilterSchema:()=>_e,UserScalarWhereInputSchema:()=>Ul,UserScalarWhereWithAggregatesInputSchema:()=>TA,UserSchema:()=>szt,UserSelectSchema:()=>Gd,UserSumOrderByAggregateInputSchema:()=>Bnt,UserUncheckedCreateInputSchema:()=>V1,UserUncheckedCreateNestedManyWithoutOrganizationInputSchema:()=>L2,UserUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>nr,UserUncheckedCreateWithoutAvailabilityInputSchema:()=>fv,UserUncheckedCreateWithoutChecklistCompletesInputSchema:()=>QZ,UserUncheckedCreateWithoutCustomerFeedbackResponsesInputSchema:()=>pv,UserUncheckedCreateWithoutInventoryTransactionsInputSchema:()=>tw,UserUncheckedCreateWithoutInventoryUpdatesInputSchema:()=>Vf,UserUncheckedCreateWithoutInventoryWithdrawalsInputSchema:()=>Ev,UserUncheckedCreateWithoutLeftoverItemsInputSchema:()=>zv,UserUncheckedCreateWithoutOrganizationInputSchema:()=>xc,UserUncheckedCreateWithoutPasswordResetsInputSchema:()=>Ow,UserUncheckedCreateWithoutPrepItemsInputSchema:()=>Zw,UserUncheckedCreateWithoutProductionPlanItemsInputSchema:()=>Mv,UserUncheckedCreateWithoutProductionPlansInputSchema:()=>Pv,UserUncheckedCreateWithoutRecipeVersionsApprovedInputSchema:()=>PZ,UserUncheckedCreateWithoutRecipeVersionsCreatedInputSchema:()=>SZ,UserUncheckedCreateWithoutRestaurantInputSchema:()=>Nc,UserUncheckedCreateWithoutSchedulingConstraintsInputSchema:()=>Nv,UserUncheckedCreateWithoutSessionsInputSchema:()=>LO,UserUncheckedCreateWithoutShiftsInputSchema:()=>Pw,UserUncheckedCreateWithoutStockCountsInputSchema:()=>aw,UserUncheckedCreateWithoutWasteRecordsInputSchema:()=>Cv,UserUncheckedUpdateInputSchema:()=>Q1,UserUncheckedUpdateManyInputSchema:()=>Y1,UserUncheckedUpdateManyWithoutOrganizationInputSchema:()=>_ut,UserUncheckedUpdateManyWithoutOrganizationNestedInputSchema:()=>Y2,UserUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Hut,UserUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>jr,UserUncheckedUpdateWithoutAvailabilityInputSchema:()=>tE,UserUncheckedUpdateWithoutChecklistCompletesInputSchema:()=>z_,UserUncheckedUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>k_,UserUncheckedUpdateWithoutInventoryTransactionsInputSchema:()=>KE,UserUncheckedUpdateWithoutInventoryUpdatesInputSchema:()=>HE,UserUncheckedUpdateWithoutInventoryWithdrawalsInputSchema:()=>pE,UserUncheckedUpdateWithoutLeftoverItemsInputSchema:()=>O_,UserUncheckedUpdateWithoutOrganizationInputSchema:()=>x8,UserUncheckedUpdateWithoutPasswordResetsInputSchema:()=>WL,UserUncheckedUpdateWithoutPrepItemsInputSchema:()=>PL,UserUncheckedUpdateWithoutProductionPlanItemsInputSchema:()=>$_,UserUncheckedUpdateWithoutProductionPlansInputSchema:()=>L_,UserUncheckedUpdateWithoutRecipeVersionsApprovedInputSchema:()=>$D,UserUncheckedUpdateWithoutRecipeVersionsCreatedInputSchema:()=>YD,UserUncheckedUpdateWithoutRestaurantInputSchema:()=>N8,UserUncheckedUpdateWithoutSchedulingConstraintsInputSchema:()=>oE,UserUncheckedUpdateWithoutSessionsInputSchema:()=>PE,UserUncheckedUpdateWithoutShiftsInputSchema:()=>IL,UserUncheckedUpdateWithoutStockCountsInputSchema:()=>oL,UserUncheckedUpdateWithoutWasteRecordsInputSchema:()=>F_,UserUpdateArgsSchema:()=>mkt,UserUpdateInputSchema:()=>H1,UserUpdateManyAndReturnArgsSchema:()=>hkt,UserUpdateManyArgsSchema:()=>bkt,UserUpdateManyMutationInputSchema:()=>iM,UserUpdateManyWithWhereWithoutOrganizationInputSchema:()=>mW,UserUpdateManyWithWhereWithoutRestaurantInputSchema:()=>RW,UserUpdateManyWithoutOrganizationNestedInputSchema:()=>H2,UserUpdateManyWithoutRestaurantNestedInputSchema:()=>hr,UserUpdateOneRequiredWithoutAvailabilityNestedInputSchema:()=>Dlt,UserUpdateOneRequiredWithoutChecklistCompletesNestedInputSchema:()=>bq,UserUpdateOneRequiredWithoutInventoryTransactionsNestedInputSchema:()=>OF,UserUpdateOneRequiredWithoutInventoryWithdrawalsNestedInputSchema:()=>zF,UserUpdateOneRequiredWithoutLeftoverItemsNestedInputSchema:()=>_q,UserUpdateOneRequiredWithoutPasswordResetsNestedInputSchema:()=>ert,UserUpdateOneRequiredWithoutPrepItemsNestedInputSchema:()=>zD,UserUpdateOneRequiredWithoutProductionPlansNestedInputSchema:()=>tF,UserUpdateOneRequiredWithoutRecipeVersionsCreatedNestedInputSchema:()=>nP,UserUpdateOneRequiredWithoutSchedulingConstraintsNestedInputSchema:()=>Elt,UserUpdateOneRequiredWithoutSessionsNestedInputSchema:()=>Jlt,UserUpdateOneRequiredWithoutShiftsNestedInputSchema:()=>y5,UserUpdateOneRequiredWithoutStockCountsNestedInputSchema:()=>FF,UserUpdateOneRequiredWithoutWasteRecordsNestedInputSchema:()=>Yq,UserUpdateOneWithoutCustomerFeedbackResponsesNestedInputSchema:()=>Pq,UserUpdateOneWithoutInventoryUpdatesNestedInputSchema:()=>JS,UserUpdateOneWithoutProductionPlanItemsNestedInputSchema:()=>pF,UserUpdateOneWithoutRecipeVersionsApprovedNestedInputSchema:()=>aP,UserUpdateToOneWithWhereWithoutAvailabilityInputSchema:()=>Npt,UserUpdateToOneWithWhereWithoutChecklistCompletesInputSchema:()=>Jrt,UserUpdateToOneWithWhereWithoutCustomerFeedbackResponsesInputSchema:()=>spt,UserUpdateToOneWithWhereWithoutInventoryTransactionsInputSchema:()=>fct,UserUpdateToOneWithWhereWithoutInventoryUpdatesInputSchema:()=>xct,UserUpdateToOneWithWhereWithoutInventoryWithdrawalsInputSchema:()=>Vpt,UserUpdateToOneWithWhereWithoutLeftoverItemsInputSchema:()=>hpt,UserUpdateToOneWithWhereWithoutPasswordResetsInputSchema:()=>cut,UserUpdateToOneWithWhereWithoutPrepItemsInputSchema:()=>rut,UserUpdateToOneWithWhereWithoutProductionPlanItemsInputSchema:()=>vpt,UserUpdateToOneWithWhereWithoutProductionPlansInputSchema:()=>Rpt,UserUpdateToOneWithWhereWithoutRecipeVersionsApprovedInputSchema:()=>vrt,UserUpdateToOneWithWhereWithoutRecipeVersionsCreatedInputSchema:()=>Mrt,UserUpdateToOneWithWhereWithoutSchedulingConstraintsInputSchema:()=>qpt,UserUpdateToOneWithWhereWithoutSessionsInputSchema:()=>rct,UserUpdateToOneWithWhereWithoutShiftsInputSchema:()=>eut,UserUpdateToOneWithWhereWithoutStockCountsInputSchema:()=>qct,UserUpdateToOneWithWhereWithoutWasteRecordsInputSchema:()=>Tpt,UserUpdateWithWhereUniqueWithoutOrganizationInputSchema:()=>zW,UserUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>WW,UserUpdateWithoutAvailabilityInputSchema:()=>X_,UserUpdateWithoutChecklistCompletesInputSchema:()=>d_,UserUpdateWithoutCustomerFeedbackResponsesInputSchema:()=>R_,UserUpdateWithoutInventoryTransactionsInputSchema:()=>JE,UserUpdateWithoutInventoryUpdatesInputSchema:()=>VE,UserUpdateWithoutInventoryWithdrawalsInputSchema:()=>rE,UserUpdateWithoutLeftoverItemsInputSchema:()=>v_,UserUpdateWithoutOrganizationInputSchema:()=>k8,UserUpdateWithoutPasswordResetsInputSchema:()=>UL,UserUpdateWithoutPrepItemsInputSchema:()=>TL,UserUpdateWithoutProductionPlanItemsInputSchema:()=>G_,UserUpdateWithoutProductionPlansInputSchema:()=>E_,UserUpdateWithoutRecipeVersionsApprovedInputSchema:()=>GD,UserUpdateWithoutRecipeVersionsCreatedInputSchema:()=>QD,UserUpdateWithoutRestaurantInputSchema:()=>w8,UserUpdateWithoutSchedulingConstraintsInputSchema:()=>eE,UserUpdateWithoutSessionsInputSchema:()=>TE,UserUpdateWithoutShiftsInputSchema:()=>hL,UserUpdateWithoutStockCountsInputSchema:()=>eL,UserUpdateWithoutWasteRecordsInputSchema:()=>q_,UserUpsertArgsSchema:()=>skt,UserUpsertWithWhereUniqueWithoutOrganizationInputSchema:()=>dW,UserUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>UW,UserUpsertWithoutAvailabilityInputSchema:()=>wpt,UserUpsertWithoutChecklistCompletesInputSchema:()=>$rt,UserUpsertWithoutCustomerFeedbackResponsesInputSchema:()=>upt,UserUpsertWithoutInventoryTransactionsInputSchema:()=>Oct,UserUpsertWithoutInventoryUpdatesInputSchema:()=>kct,UserUpsertWithoutInventoryWithdrawalsInputSchema:()=>Lpt,UserUpsertWithoutLeftoverItemsInputSchema:()=>bpt,UserUpsertWithoutPasswordResetsInputSchema:()=>put,UserUpsertWithoutPrepItemsInputSchema:()=>lut,UserUpsertWithoutProductionPlanItemsInputSchema:()=>Zpt,UserUpsertWithoutProductionPlansInputSchema:()=>Wpt,UserUpsertWithoutRecipeVersionsApprovedInputSchema:()=>Zrt,UserUpsertWithoutRecipeVersionsCreatedInputSchema:()=>jrt,UserUpsertWithoutSchedulingConstraintsInputSchema:()=>Bpt,UserUpsertWithoutSessionsInputSchema:()=>lct,UserUpsertWithoutShiftsInputSchema:()=>tut,UserUpsertWithoutStockCountsInputSchema:()=>Bct,UserUpsertWithoutWasteRecordsInputSchema:()=>Spt,UserWhereInputSchema:()=>v,UserWhereUniqueInputSchema:()=>M,VendorAggregateArgsSchema:()=>XCt,VendorArgsSchema:()=>Jj,VendorAvgOrderByAggregateInputSchema:()=>zit,VendorCountOrderByAggregateInputSchema:()=>dit,VendorCountOutputTypeArgsSchema:()=>y0,VendorCountOutputTypeSelectSchema:()=>BX,VendorCreateArgsSchema:()=>kjt,VendorCreateInputSchema:()=>r$,VendorCreateManyAndReturnArgsSchema:()=>Mjt,VendorCreateManyArgsSchema:()=>jjt,VendorCreateManyInputSchema:()=>pU,VendorCreateNestedManyWithoutIngredientsInputSchema:()=>OI,VendorCreateNestedOneWithoutOrdersInputSchema:()=>LF,VendorCreateNestedOneWithoutSupplierPriceHistoryInputSchema:()=>v2,VendorCreateOrConnectWithoutIngredientsInputSchema:()=>Xh,VendorCreateOrConnectWithoutOrdersInputSchema:()=>Z3,VendorCreateOrConnectWithoutSupplierPriceHistoryInputSchema:()=>k6,VendorCreateWithoutIngredientsInputSchema:()=>Os,VendorCreateWithoutOrdersInputSchema:()=>zw,VendorCreateWithoutSupplierPriceHistoryInputSchema:()=>XZ,VendorDeleteArgsSchema:()=>Zjt,VendorDeleteManyArgsSchema:()=>wjt,VendorFindFirstArgsSchema:()=>JCt,VendorFindFirstOrThrowArgsSchema:()=>KCt,VendorFindManyArgsSchema:()=>$K,VendorFindUniqueArgsSchema:()=>eAt,VendorFindUniqueOrThrowArgsSchema:()=>oAt,VendorGroupByArgsSchema:()=>tAt,VendorIncludeSchema:()=>Sz,VendorListRelationFilterSchema:()=>t2,VendorMaxOrderByAggregateInputSchema:()=>mit,VendorMinOrderByAggregateInputSchema:()=>bit,VendorOrderByRelationAggregateInputSchema:()=>yat,VendorOrderByWithAggregationInputSchema:()=>VV,VendorOrderByWithRelationInputSchema:()=>Yp,VendorScalarFieldEnumSchema:()=>cC,VendorScalarRelationFilterSchema:()=>CM,VendorScalarWhereInputSchema:()=>Fp,VendorScalarWhereWithAggregatesInputSchema:()=>NA,VendorSchema:()=>Uzt,VendorSelectSchema:()=>Tz,VendorSumOrderByAggregateInputSchema:()=>hit,VendorUncheckedCreateInputSchema:()=>p$,VendorUncheckedCreateNestedManyWithoutIngredientsInputSchema:()=>_I,VendorUncheckedCreateWithoutIngredientsInputSchema:()=>fs,VendorUncheckedCreateWithoutOrdersInputSchema:()=>mw,VendorUncheckedCreateWithoutSupplierPriceHistoryInputSchema:()=>tv,VendorUncheckedUpdateInputSchema:()=>u$,VendorUncheckedUpdateManyInputSchema:()=>s$,VendorUncheckedUpdateManyWithoutIngredientsInputSchema:()=>Vst,VendorUncheckedUpdateManyWithoutIngredientsNestedInputSchema:()=>ag,VendorUncheckedUpdateWithoutIngredientsInputSchema:()=>fJ,VendorUncheckedUpdateWithoutOrdersInputSchema:()=>yL,VendorUncheckedUpdateWithoutSupplierPriceHistoryInputSchema:()=>C_,VendorUpdateArgsSchema:()=>vjt,VendorUpdateInputSchema:()=>c$,VendorUpdateManyAndReturnArgsSchema:()=>fjt,VendorUpdateManyArgsSchema:()=>Ojt,VendorUpdateManyMutationInputSchema:()=>eB,VendorUpdateManyWithWhereWithoutIngredientsInputSchema:()=>Px,VendorUpdateManyWithoutIngredientsNestedInputSchema:()=>$I,VendorUpdateOneRequiredWithoutOrdersNestedInputSchema:()=>YF,VendorUpdateOneRequiredWithoutSupplierPriceHistoryNestedInputSchema:()=>f2,VendorUpdateToOneWithWhereWithoutOrdersInputSchema:()=>Gct,VendorUpdateToOneWithWhereWithoutSupplierPriceHistoryInputSchema:()=>npt,VendorUpdateWithWhereUniqueWithoutIngredientsInputSchema:()=>Tx,VendorUpdateWithoutIngredientsInputSchema:()=>OJ,VendorUpdateWithoutOrdersInputSchema:()=>sL,VendorUpdateWithoutSupplierPriceHistoryInputSchema:()=>g_,VendorUpsertArgsSchema:()=>xjt,VendorUpsertWithWhereUniqueWithoutIngredientsInputSchema:()=>Sx,VendorUpsertWithoutOrdersInputSchema:()=>Yct,VendorUpsertWithoutSupplierPriceHistoryInputSchema:()=>opt,VendorWhereInputSchema:()=>Oe,VendorWhereUniqueInputSchema:()=>$t,WasteRecordAggregateArgsSchema:()=>_ht,WasteRecordArgsSchema:()=>$zt,WasteRecordAvgOrderByAggregateInputSchema:()=>aot,WasteRecordCountOrderByAggregateInputSchema:()=>not,WasteRecordCreateArgsSchema:()=>HUt,WasteRecordCreateInputSchema:()=>PG,WasteRecordCreateManyAndReturnArgsSchema:()=>GUt,WasteRecordCreateManyArgsSchema:()=>YUt,WasteRecordCreateManyIngredienteInputEnvelopeSchema:()=>Wf,WasteRecordCreateManyIngredienteInputSchema:()=>dQ,WasteRecordCreateManyInputSchema:()=>OP,WasteRecordCreateManyRecordedByInputEnvelopeSchema:()=>MO,WasteRecordCreateManyRecordedByInputSchema:()=>wH,WasteRecordCreateManyRestaurantInputEnvelopeSchema:()=>zO,WasteRecordCreateManyRestaurantInputSchema:()=>UH,WasteRecordCreateNestedManyWithoutIngredienteInputSchema:()=>fI,WasteRecordCreateNestedManyWithoutRecordedByInputSchema:()=>oi,WasteRecordCreateNestedManyWithoutRestaurantInputSchema:()=>Kl,WasteRecordCreateOrConnectWithoutIngredienteInputSchema:()=>tI,WasteRecordCreateOrConnectWithoutRecordedByInputSchema:()=>Ih,WasteRecordCreateOrConnectWithoutRestaurantInputSchema:()=>rh,WasteRecordCreateWithoutIngredienteInputSchema:()=>ws,WasteRecordCreateWithoutRecordedByInputSchema:()=>Iu,WasteRecordCreateWithoutRestaurantInputSchema:()=>$c,WasteRecordDeleteArgsSchema:()=>$Ut,WasteRecordDeleteManyArgsSchema:()=>tWt,WasteRecordFindFirstArgsSchema:()=>Fht,WasteRecordFindFirstOrThrowArgsSchema:()=>Dht,WasteRecordFindManyArgsSchema:()=>IT,WasteRecordFindUniqueArgsSchema:()=>Lht,WasteRecordFindUniqueOrThrowArgsSchema:()=>Vht,WasteRecordGroupByArgsSchema:()=>Eht,WasteRecordIncludeSchema:()=>Sd,WasteRecordListRelationFilterSchema:()=>vS,WasteRecordMaxOrderByAggregateInputSchema:()=>iot,WasteRecordMinOrderByAggregateInputSchema:()=>lot,WasteRecordOrderByRelationAggregateInputSchema:()=>WB,WasteRecordOrderByWithAggregationInputSchema:()=>hV,WasteRecordOrderByWithRelationInputSchema:()=>zb,WasteRecordScalarFieldEnumSchema:()=>fg,WasteRecordScalarWhereInputSchema:()=>_a,WasteRecordScalarWhereWithAggregatesInputSchema:()=>cA,WasteRecordSchema:()=>Jdt,WasteRecordSelectSchema:()=>Td,WasteRecordSumOrderByAggregateInputSchema:()=>rot,WasteRecordUncheckedCreateInputSchema:()=>UG,WasteRecordUncheckedCreateNestedManyWithoutIngredienteInputSchema:()=>EI,WasteRecordUncheckedCreateNestedManyWithoutRecordedByInputSchema:()=>Ci,WasteRecordUncheckedCreateNestedManyWithoutRestaurantInputSchema:()=>sr,WasteRecordUncheckedCreateWithoutIngredienteInputSchema:()=>Ns,WasteRecordUncheckedCreateWithoutRecordedByInputSchema:()=>gu,WasteRecordUncheckedCreateWithoutRestaurantInputSchema:()=>Jc,WasteRecordUncheckedUpdateInputSchema:()=>RG,WasteRecordUncheckedUpdateManyInputSchema:()=>kG,WasteRecordUncheckedUpdateManyWithoutIngredienteInputSchema:()=>Hst,WasteRecordUncheckedUpdateManyWithoutIngredienteNestedInputSchema:()=>ig,WasteRecordUncheckedUpdateManyWithoutRecordedByInputSchema:()=>ust,WasteRecordUncheckedUpdateManyWithoutRecordedByNestedInputSchema:()=>al,WasteRecordUncheckedUpdateManyWithoutRestaurantInputSchema:()=>Xut,WasteRecordUncheckedUpdateManyWithoutRestaurantNestedInputSchema:()=>Br,WasteRecordUncheckedUpdateWithoutIngredienteInputSchema:()=>NJ,WasteRecordUncheckedUpdateWithoutRecordedByInputSchema:()=>g7,WasteRecordUncheckedUpdateWithoutRestaurantInputSchema:()=>J8,WasteRecordUpdateArgsSchema:()=>JUt,WasteRecordUpdateInputSchema:()=>WG,WasteRecordUpdateManyAndReturnArgsSchema:()=>XUt,WasteRecordUpdateManyArgsSchema:()=>KUt,WasteRecordUpdateManyMutationInputSchema:()=>FT,WasteRecordUpdateManyWithWhereWithoutIngredienteInputSchema:()=>Rx,WasteRecordUpdateManyWithWhereWithoutRecordedByInputSchema:()=>RR,WasteRecordUpdateManyWithWhereWithoutRestaurantInputSchema:()=>YW,WasteRecordUpdateManyWithoutIngredienteNestedInputSchema:()=>JI,WasteRecordUpdateManyWithoutRecordedByNestedInputSchema:()=>Fi,WasteRecordUpdateManyWithoutRestaurantNestedInputSchema:()=>Ur,WasteRecordUpdateWithWhereUniqueWithoutIngredienteInputSchema:()=>Wx,WasteRecordUpdateWithWhereUniqueWithoutRecordedByInputSchema:()=>WR,WasteRecordUpdateWithWhereUniqueWithoutRestaurantInputSchema:()=>QW,WasteRecordUpdateWithoutIngredienteInputSchema:()=>wJ,WasteRecordUpdateWithoutRecordedByInputSchema:()=>I7,WasteRecordUpdateWithoutRestaurantInputSchema:()=>$8,WasteRecordUpsertArgsSchema:()=>QUt,WasteRecordUpsertWithWhereUniqueWithoutIngredienteInputSchema:()=>Ux,WasteRecordUpsertWithWhereUniqueWithoutRecordedByInputSchema:()=>UR,WasteRecordUpsertWithWhereUniqueWithoutRestaurantInputSchema:()=>HW,WasteRecordWhereInputSchema:()=>ba,WasteRecordWhereUniqueInputSchema:()=>E});var me;(function(c){c.assertEqual=m=>m;function i(m){}c.assertIs=i;function p(m){throw new Error}c.assertNever=p,c.arrayToEnum=m=>{let h={};for(let P of m)h[P]=P;return h},c.getValidEnumValues=m=>{let h=c.objectKeys(m).filter(k=>typeof m[m[k]]!="number"),P={};for(let k of h)P[k]=m[k];return c.objectValues(P)},c.objectValues=m=>c.objectKeys(m).map(function(h){return m[h]}),c.objectKeys=typeof Object.keys=="function"?m=>Object.keys(m):m=>{let h=[];for(let P in m)Object.prototype.hasOwnProperty.call(m,P)&&h.push(P);return h},c.find=(m,h)=>{for(let P of m)if(h(P))return P},c.isInteger=typeof Number.isInteger=="function"?m=>Number.isInteger(m):m=>typeof m=="number"&&isFinite(m)&&Math.floor(m)===m;function d(m,h=" | "){return m.map(P=>typeof P=="string"?`'${P}'`:P).join(h)}c.joinValues=d,c.jsonStringifyReplacer=(m,h)=>typeof h=="bigint"?h.toString():h;})(me||(me={}));var VL;(function(c){c.mergeShapes=(i,p)=>({...i,...p});})(VL||(VL={}));var tt=me.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Jm=c=>{switch(typeof c){case "undefined":return tt.undefined;case "string":return tt.string;case "number":return isNaN(c)?tt.nan:tt.number;case "boolean":return tt.boolean;case "function":return tt.function;case "bigint":return tt.bigint;case "symbol":return tt.symbol;case "object":return Array.isArray(c)?tt.array:c===null?tt.null:c.then&&typeof c.then=="function"&&c.catch&&typeof c.catch=="function"?tt.promise:typeof Map<"u"&&c instanceof Map?tt.map:typeof Set<"u"&&c instanceof Set?tt.set:typeof Date<"u"&&c instanceof Date?tt.date:tt.object;default:return tt.unknown}},f=me.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Cyt=c=>JSON.stringify(c,null,2).replace(/"([^"]+)":/g,"$1:"),$r=class c extends Error{get errors(){return this.issues}constructor(i){super(),this.issues=[],this.addIssue=d=>{this.issues=[...this.issues,d];},this.addIssues=(d=[])=>{this.issues=[...this.issues,...d];};let p=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,p):this.__proto__=p,this.name="ZodError",this.issues=i;}format(i){let p=i||function(h){return h.message},d={_errors:[]},m=h=>{for(let P of h.issues)if(P.code==="invalid_union")P.unionErrors.map(m);else if(P.code==="invalid_return_type")m(P.returnTypeError);else if(P.code==="invalid_arguments")m(P.argumentsError);else if(P.path.length===0)d._errors.push(p(P));else {let k=d,K=0;for(;K<P.path.length;){let G=P.path[K];K===P.path.length-1?(k[G]=k[G]||{_errors:[]},k[G]._errors.push(p(P))):k[G]=k[G]||{_errors:[]},k=k[G],K++;}}};return m(this),d}static assert(i){if(!(i instanceof c))throw new Error(`Not a ZodError: ${i}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,me.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(i=p=>p.message){let p={},d=[];for(let m of this.issues)m.path.length>0?(p[m.path[0]]=p[m.path[0]]||[],p[m.path[0]].push(i(m))):d.push(i(m));return {formErrors:d,fieldErrors:p}}get formErrors(){return this.flatten()}};$r.create=c=>new $r(c);var RT=(c,i)=>{let p;switch(c.code){case f.invalid_type:c.received===tt.undefined?p="Required":p=`Expected ${c.expected}, received ${c.received}`;break;case f.invalid_literal:p=`Invalid literal value, expected ${JSON.stringify(c.expected,me.jsonStringifyReplacer)}`;break;case f.unrecognized_keys:p=`Unrecognized key(s) in object: ${me.joinValues(c.keys,", ")}`;break;case f.invalid_union:p="Invalid input";break;case f.invalid_union_discriminator:p=`Invalid discriminator value. Expected ${me.joinValues(c.options)}`;break;case f.invalid_enum_value:p=`Invalid enum value. Expected ${me.joinValues(c.options)}, received '${c.received}'`;break;case f.invalid_arguments:p="Invalid function arguments";break;case f.invalid_return_type:p="Invalid function return type";break;case f.invalid_date:p="Invalid date";break;case f.invalid_string:typeof c.validation=="object"?"includes"in c.validation?(p=`Invalid input: must include "${c.validation.includes}"`,typeof c.validation.position=="number"&&(p=`${p} at one or more positions greater than or equal to ${c.validation.position}`)):"startsWith"in c.validation?p=`Invalid input: must start with "${c.validation.startsWith}"`:"endsWith"in c.validation?p=`Invalid input: must end with "${c.validation.endsWith}"`:me.assertNever(c.validation):c.validation!=="regex"?p=`Invalid ${c.validation}`:p="Invalid";break;case f.too_small:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at least":"more than"} ${c.minimum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at least":"over"} ${c.minimum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${c.minimum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly equal to ":c.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(c.minimum))}`:p="Invalid input";break;case f.too_big:c.type==="array"?p=`Array must contain ${c.exact?"exactly":c.inclusive?"at most":"less than"} ${c.maximum} element(s)`:c.type==="string"?p=`String must contain ${c.exact?"exactly":c.inclusive?"at most":"under"} ${c.maximum} character(s)`:c.type==="number"?p=`Number must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="bigint"?p=`BigInt must be ${c.exact?"exactly":c.inclusive?"less than or equal to":"less than"} ${c.maximum}`:c.type==="date"?p=`Date must be ${c.exact?"exactly":c.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(c.maximum))}`:p="Invalid input";break;case f.custom:p="Invalid input";break;case f.invalid_intersection_types:p="Intersection results could not be merged";break;case f.not_multiple_of:p=`Number must be a multiple of ${c.multipleOf}`;break;case f.not_finite:p="Number must be finite";break;default:p=i.defaultError,me.assertNever(c);}return {message:p}},lX=RT;function Ayt(c){lX=c;}function SN(){return lX}var TN=c=>{let{data:i,path:p,errorMaps:d,issueData:m}=c,h=[...p,...m.path||[]],P={...m,path:h};if(m.message!==void 0)return {...m,path:h,message:m.message};let k="",K=d.filter(G=>!!G).slice().reverse();for(let G of K)k=G(P,{data:i,defaultError:k}).message;return {...m,path:h,message:k}},Syt=[];function $(c,i){let p=SN(),d=TN({issueData:i,data:c.data,path:c.path,errorMaps:[c.common.contextualErrorMap,c.schemaErrorMap,p,p===RT?void 0:RT].filter(m=>!!m)});c.common.issues.push(d);}var gl=class c{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(i,p){let d=[];for(let m of p){if(m.status==="aborted")return jt;m.status==="dirty"&&i.dirty(),d.push(m.value);}return {status:i.value,value:d}}static async mergeObjectAsync(i,p){let d=[];for(let m of p){let h=await m.key,P=await m.value;d.push({key:h,value:P});}return c.mergeObjectSync(i,d)}static mergeObjectSync(i,p){let d={};for(let m of p){let{key:h,value:P}=m;if(h.status==="aborted"||P.status==="aborted")return jt;h.status==="dirty"&&i.dirty(),P.status==="dirty"&&i.dirty(),h.value!=="__proto__"&&(typeof P.value<"u"||m.alwaysSet)&&(d[h.value]=P.value);}return {status:i.value,value:d}}},jt=Object.freeze({status:"aborted"}),WT=c=>({status:"dirty",value:c}),wl=c=>({status:"valid",value:c}),HL=c=>c.status==="aborted",QL=c=>c.status==="dirty",UC=c=>c.status==="valid",cP=c=>typeof Promise<"u"&&c instanceof Promise;function PN(c,i,p,d){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i.get(c)}function rX(c,i,p,d,m){if(typeof i=="function"?c!==i||true:!i.has(c))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i.set(c,p),p}var lt;(function(c){c.errToObj=i=>typeof i=="string"?{message:i}:i||{},c.toString=i=>typeof i=="string"?i:i?.message;})(lt||(lt={}));var rP,pP,zp=class{constructor(i,p,d,m){this._cachedPath=[],this.parent=i,this.data=p,this._path=d,this._key=m;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},nX=(c,i)=>{if(UC(i))return {success:true,data:i.value};if(!c.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let p=new $r(c.common.issues);return this._error=p,this._error}}};function Et(c){if(!c)return {};let{errorMap:i,invalid_type_error:p,required_error:d,description:m}=c;if(i&&(p||d))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:m}:{errorMap:(P,k)=>{var K,G;let{message:Rt}=c;return P.code==="invalid_enum_value"?{message:Rt??k.defaultError}:typeof k.data>"u"?{message:(K=Rt??d)!==null&&K!==void 0?K:k.defaultError}:P.code!=="invalid_type"?{message:k.defaultError}:{message:(G=Rt??p)!==null&&G!==void 0?G:k.defaultError}},description:m}}var Lt=class{get description(){return this._def.description}_getType(i){return Jm(i.data)}_getOrReturnCtx(i,p){return p||{common:i.parent.common,data:i.data,parsedType:Jm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}_processInputParams(i){return {status:new gl,ctx:{common:i.parent.common,data:i.data,parsedType:Jm(i.data),schemaErrorMap:this._def.errorMap,path:i.path,parent:i.parent}}}_parseSync(i){let p=this._parse(i);if(cP(p))throw new Error("Synchronous parse encountered promise.");return p}_parseAsync(i){let p=this._parse(i);return Promise.resolve(p)}parse(i,p){let d=this.safeParse(i,p);if(d.success)return d.data;throw d.error}safeParse(i,p){var d;let m={common:{issues:[],async:(d=p?.async)!==null&&d!==void 0?d:false,contextualErrorMap:p?.errorMap},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Jm(i)},h=this._parseSync({data:i,path:m.path,parent:m});return nX(m,h)}"~validate"(i){var p,d;let m={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Jm(i)};if(!this["~standard"].async)try{let h=this._parseSync({data:i,path:[],parent:m});return UC(h)?{value:h.value}:{issues:m.common.issues}}catch(h){!((d=(p=h?.message)===null||p===void 0?void 0:p.toLowerCase())===null||d===void 0)&&d.includes("encountered")&&(this["~standard"].async=true),m.common={issues:[],async:true};}return this._parseAsync({data:i,path:[],parent:m}).then(h=>UC(h)?{value:h.value}:{issues:m.common.issues})}async parseAsync(i,p){let d=await this.safeParseAsync(i,p);if(d.success)return d.data;throw d.error}async safeParseAsync(i,p){let d={common:{issues:[],contextualErrorMap:p?.errorMap,async:true},path:p?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:i,parsedType:Jm(i)},m=this._parse({data:i,path:d.path,parent:d}),h=await(cP(m)?m:Promise.resolve(m));return nX(d,h)}refine(i,p){let d=m=>typeof p=="string"||typeof p>"u"?{message:p}:typeof p=="function"?p(m):p;return this._refinement((m,h)=>{let P=i(m),k=()=>h.addIssue({code:f.custom,...d(m)});return typeof Promise<"u"&&P instanceof Promise?P.then(K=>K?true:(k(),false)):P?true:(k(),false)})}refinement(i,p){return this._refinement((d,m)=>i(d)?true:(m.addIssue(typeof p=="function"?p(d,m):p),false))}_refinement(i){return new Jr({schema:this,typeName:xt.ZodEffects,effect:{type:"refinement",refinement:i}})}superRefine(i){return this._refinement(i)}constructor(i){this.spa=this.safeParseAsync,this._def=i,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:p=>this["~validate"](p)};}optional(){return dp.create(this,this._def)}nullable(){return xm.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Xm.create(this)}promise(){return yg.create(this,this._def)}or(i){return ZC.create([this,i],this._def)}and(i){return vC.create(this,i,this._def)}transform(i){return new Jr({...Et(this._def),schema:this,typeName:xt.ZodEffects,effect:{type:"transform",transform:i}})}default(i){let p=typeof i=="function"?i:()=>i;return new BC({...Et(this._def),innerType:this,defaultValue:p,typeName:xt.ZodDefault})}brand(){return new uP({typeName:xt.ZodBranded,type:this,...Et(this._def)})}catch(i){let p=typeof i=="function"?i:()=>i;return new qC({...Et(this._def),innerType:this,catchValue:p,typeName:xt.ZodCatch})}describe(i){let p=this.constructor;return new p({...this._def,description:i})}pipe(i){return sP.create(this,i)}readonly(){return FC.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},Tyt=/^c[^\s-]{8,}$/i,Pyt=/^[0-9a-z]+$/,Uyt=/^[0-9A-HJKMNP-TV-Z]{26}$/i,Wyt=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Ryt=/^[a-z0-9_-]{21}$/i,kyt=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,xyt=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,jyt=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Myt="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",LL,Zyt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,vyt=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,Oyt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,fyt=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,wyt=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Nyt=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,pX="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",Byt=new RegExp(`^${pX}$`);function cX(c){let i="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return c.precision?i=`${i}\\.\\d{${c.precision}}`:c.precision==null&&(i=`${i}(\\.\\d+)?`),i}function qyt(c){return new RegExp(`^${cX(c)}$`)}function uX(c){let i=`${pX}T${cX(c)}`,p=[];return p.push(c.local?"Z?":"Z"),c.offset&&p.push("([+-]\\d{2}:?\\d{2})"),i=`${i}(${p.join("|")})`,new RegExp(`^${i}$`)}function Fyt(c,i){return !!((i==="v4"||!i)&&Zyt.test(c)||(i==="v6"||!i)&&Oyt.test(c))}function Dyt(c,i){if(!kyt.test(c))return  false;try{let[p]=c.split("."),d=p.replace(/-/g,"+").replace(/_/g,"/").padEnd(p.length+(4-p.length%4)%4,"="),m=JSON.parse(atob(d));return !(typeof m!="object"||m===null||!m.typ||!m.alg||i&&m.alg!==i)}catch{return  false}}function _yt(c,i){return !!((i==="v4"||!i)&&vyt.test(c)||(i==="v6"||!i)&&fyt.test(c))}var ug=class c extends Lt{_parse(i){if(this._def.coerce&&(i.data=String(i.data)),this._getType(i)!==tt.string){let h=this._getOrReturnCtx(i);return $(h,{code:f.invalid_type,expected:tt.string,received:h.parsedType}),jt}let d=new gl,m;for(let h of this._def.checks)if(h.kind==="min")i.data.length<h.value&&(m=this._getOrReturnCtx(i,m),$(m,{code:f.too_small,minimum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),d.dirty());else if(h.kind==="max")i.data.length>h.value&&(m=this._getOrReturnCtx(i,m),$(m,{code:f.too_big,maximum:h.value,type:"string",inclusive:true,exact:false,message:h.message}),d.dirty());else if(h.kind==="length"){let P=i.data.length>h.value,k=i.data.length<h.value;(P||k)&&(m=this._getOrReturnCtx(i,m),P?$(m,{code:f.too_big,maximum:h.value,type:"string",inclusive:true,exact:true,message:h.message}):k&&$(m,{code:f.too_small,minimum:h.value,type:"string",inclusive:true,exact:true,message:h.message}),d.dirty());}else if(h.kind==="email")jyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"email",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="emoji")LL||(LL=new RegExp(Myt,"u")),LL.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"emoji",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="uuid")Wyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"uuid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="nanoid")Ryt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"nanoid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="cuid")Tyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"cuid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="cuid2")Pyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"cuid2",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="ulid")Uyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"ulid",code:f.invalid_string,message:h.message}),d.dirty());else if(h.kind==="url")try{new URL(i.data);}catch{m=this._getOrReturnCtx(i,m),$(m,{validation:"url",code:f.invalid_string,message:h.message}),d.dirty();}else h.kind==="regex"?(h.regex.lastIndex=0,h.regex.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"regex",code:f.invalid_string,message:h.message}),d.dirty())):h.kind==="trim"?i.data=i.data.trim():h.kind==="includes"?i.data.includes(h.value,h.position)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:{includes:h.value,position:h.position},message:h.message}),d.dirty()):h.kind==="toLowerCase"?i.data=i.data.toLowerCase():h.kind==="toUpperCase"?i.data=i.data.toUpperCase():h.kind==="startsWith"?i.data.startsWith(h.value)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:{startsWith:h.value},message:h.message}),d.dirty()):h.kind==="endsWith"?i.data.endsWith(h.value)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:{endsWith:h.value},message:h.message}),d.dirty()):h.kind==="datetime"?uX(h).test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:"datetime",message:h.message}),d.dirty()):h.kind==="date"?Byt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:"date",message:h.message}),d.dirty()):h.kind==="time"?qyt(h).test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{code:f.invalid_string,validation:"time",message:h.message}),d.dirty()):h.kind==="duration"?xyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"duration",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="ip"?Fyt(i.data,h.version)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"ip",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="jwt"?Dyt(i.data,h.alg)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"jwt",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="cidr"?_yt(i.data,h.version)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"cidr",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="base64"?wyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"base64",code:f.invalid_string,message:h.message}),d.dirty()):h.kind==="base64url"?Nyt.test(i.data)||(m=this._getOrReturnCtx(i,m),$(m,{validation:"base64url",code:f.invalid_string,message:h.message}),d.dirty()):me.assertNever(h);return {status:d.value,value:i.data}}_regex(i,p,d){return this.refinement(m=>i.test(m),{validation:p,code:f.invalid_string,...lt.errToObj(d)})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}email(i){return this._addCheck({kind:"email",...lt.errToObj(i)})}url(i){return this._addCheck({kind:"url",...lt.errToObj(i)})}emoji(i){return this._addCheck({kind:"emoji",...lt.errToObj(i)})}uuid(i){return this._addCheck({kind:"uuid",...lt.errToObj(i)})}nanoid(i){return this._addCheck({kind:"nanoid",...lt.errToObj(i)})}cuid(i){return this._addCheck({kind:"cuid",...lt.errToObj(i)})}cuid2(i){return this._addCheck({kind:"cuid2",...lt.errToObj(i)})}ulid(i){return this._addCheck({kind:"ulid",...lt.errToObj(i)})}base64(i){return this._addCheck({kind:"base64",...lt.errToObj(i)})}base64url(i){return this._addCheck({kind:"base64url",...lt.errToObj(i)})}jwt(i){return this._addCheck({kind:"jwt",...lt.errToObj(i)})}ip(i){return this._addCheck({kind:"ip",...lt.errToObj(i)})}cidr(i){return this._addCheck({kind:"cidr",...lt.errToObj(i)})}datetime(i){var p,d;return typeof i=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:i}):this._addCheck({kind:"datetime",precision:typeof i?.precision>"u"?null:i?.precision,offset:(p=i?.offset)!==null&&p!==void 0?p:false,local:(d=i?.local)!==null&&d!==void 0?d:false,...lt.errToObj(i?.message)})}date(i){return this._addCheck({kind:"date",message:i})}time(i){return typeof i=="string"?this._addCheck({kind:"time",precision:null,message:i}):this._addCheck({kind:"time",precision:typeof i?.precision>"u"?null:i?.precision,...lt.errToObj(i?.message)})}duration(i){return this._addCheck({kind:"duration",...lt.errToObj(i)})}regex(i,p){return this._addCheck({kind:"regex",regex:i,...lt.errToObj(p)})}includes(i,p){return this._addCheck({kind:"includes",value:i,position:p?.position,...lt.errToObj(p?.message)})}startsWith(i,p){return this._addCheck({kind:"startsWith",value:i,...lt.errToObj(p)})}endsWith(i,p){return this._addCheck({kind:"endsWith",value:i,...lt.errToObj(p)})}min(i,p){return this._addCheck({kind:"min",value:i,...lt.errToObj(p)})}max(i,p){return this._addCheck({kind:"max",value:i,...lt.errToObj(p)})}length(i,p){return this._addCheck({kind:"length",value:i,...lt.errToObj(p)})}nonempty(i){return this.min(1,lt.errToObj(i))}trim(){return new c({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new c({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(i=>i.kind==="datetime")}get isDate(){return !!this._def.checks.find(i=>i.kind==="date")}get isTime(){return !!this._def.checks.find(i=>i.kind==="time")}get isDuration(){return !!this._def.checks.find(i=>i.kind==="duration")}get isEmail(){return !!this._def.checks.find(i=>i.kind==="email")}get isURL(){return !!this._def.checks.find(i=>i.kind==="url")}get isEmoji(){return !!this._def.checks.find(i=>i.kind==="emoji")}get isUUID(){return !!this._def.checks.find(i=>i.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(i=>i.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(i=>i.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(i=>i.kind==="cuid2")}get isULID(){return !!this._def.checks.find(i=>i.kind==="ulid")}get isIP(){return !!this._def.checks.find(i=>i.kind==="ip")}get isCIDR(){return !!this._def.checks.find(i=>i.kind==="cidr")}get isBase64(){return !!this._def.checks.find(i=>i.kind==="base64")}get isBase64url(){return !!this._def.checks.find(i=>i.kind==="base64url")}get minLength(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxLength(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};ug.create=c=>{var i;return new ug({checks:[],typeName:xt.ZodString,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Et(c)})};function Eyt(c,i){let p=(c.toString().split(".")[1]||"").length,d=(i.toString().split(".")[1]||"").length,m=p>d?p:d,h=parseInt(c.toFixed(m).replace(".","")),P=parseInt(i.toFixed(m).replace(".",""));return h%P/Math.pow(10,m)}var WC=class c extends Lt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(i){if(this._def.coerce&&(i.data=Number(i.data)),this._getType(i)!==tt.number){let h=this._getOrReturnCtx(i);return $(h,{code:f.invalid_type,expected:tt.number,received:h.parsedType}),jt}let d,m=new gl;for(let h of this._def.checks)h.kind==="int"?me.isInteger(i.data)||(d=this._getOrReturnCtx(i,d),$(d,{code:f.invalid_type,expected:"integer",received:"float",message:h.message}),m.dirty()):h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.too_small,minimum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.too_big,maximum:h.value,type:"number",inclusive:h.inclusive,exact:false,message:h.message}),m.dirty()):h.kind==="multipleOf"?Eyt(i.data,h.value)!==0&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):h.kind==="finite"?Number.isFinite(i.data)||(d=this._getOrReturnCtx(i,d),$(d,{code:f.not_finite,message:h.message}),m.dirty()):me.assertNever(h);return {status:m.value,value:i.data}}gte(i,p){return this.setLimit("min",i,true,lt.toString(p))}gt(i,p){return this.setLimit("min",i,false,lt.toString(p))}lte(i,p){return this.setLimit("max",i,true,lt.toString(p))}lt(i,p){return this.setLimit("max",i,false,lt.toString(p))}setLimit(i,p,d,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:d,message:lt.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}int(i){return this._addCheck({kind:"int",message:lt.toString(i)})}positive(i){return this._addCheck({kind:"min",value:0,inclusive:false,message:lt.toString(i)})}negative(i){return this._addCheck({kind:"max",value:0,inclusive:false,message:lt.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:0,inclusive:true,message:lt.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:0,inclusive:true,message:lt.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:lt.toString(p)})}finite(i){return this._addCheck({kind:"finite",message:lt.toString(i)})}safe(i){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:lt.toString(i)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:lt.toString(i)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}get isInt(){return !!this._def.checks.find(i=>i.kind==="int"||i.kind==="multipleOf"&&me.isInteger(i.value))}get isFinite(){let i=null,p=null;for(let d of this._def.checks){if(d.kind==="finite"||d.kind==="int"||d.kind==="multipleOf")return  true;d.kind==="min"?(p===null||d.value>p)&&(p=d.value):d.kind==="max"&&(i===null||d.value<i)&&(i=d.value);}return Number.isFinite(p)&&Number.isFinite(i)}};WC.create=c=>new WC({checks:[],typeName:xt.ZodNumber,coerce:c?.coerce||false,...Et(c)});var RC=class c extends Lt{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(i){if(this._def.coerce)try{i.data=BigInt(i.data);}catch{return this._getInvalidInput(i)}if(this._getType(i)!==tt.bigint)return this._getInvalidInput(i);let d,m=new gl;for(let h of this._def.checks)h.kind==="min"?(h.inclusive?i.data<h.value:i.data<=h.value)&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.too_small,type:"bigint",minimum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="max"?(h.inclusive?i.data>h.value:i.data>=h.value)&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.too_big,type:"bigint",maximum:h.value,inclusive:h.inclusive,message:h.message}),m.dirty()):h.kind==="multipleOf"?i.data%h.value!==BigInt(0)&&(d=this._getOrReturnCtx(i,d),$(d,{code:f.not_multiple_of,multipleOf:h.value,message:h.message}),m.dirty()):me.assertNever(h);return {status:m.value,value:i.data}}_getInvalidInput(i){let p=this._getOrReturnCtx(i);return $(p,{code:f.invalid_type,expected:tt.bigint,received:p.parsedType}),jt}gte(i,p){return this.setLimit("min",i,true,lt.toString(p))}gt(i,p){return this.setLimit("min",i,false,lt.toString(p))}lte(i,p){return this.setLimit("max",i,true,lt.toString(p))}lt(i,p){return this.setLimit("max",i,false,lt.toString(p))}setLimit(i,p,d,m){return new c({...this._def,checks:[...this._def.checks,{kind:i,value:p,inclusive:d,message:lt.toString(m)}]})}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}positive(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:lt.toString(i)})}negative(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:lt.toString(i)})}nonpositive(i){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:lt.toString(i)})}nonnegative(i){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:lt.toString(i)})}multipleOf(i,p){return this._addCheck({kind:"multipleOf",value:i,message:lt.toString(p)})}get minValue(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i}get maxValue(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i}};RC.create=c=>{var i;return new RC({checks:[],typeName:xt.ZodBigInt,coerce:(i=c?.coerce)!==null&&i!==void 0?i:false,...Et(c)})};var kC=class extends Lt{_parse(i){if(this._def.coerce&&(i.data=!!i.data),this._getType(i)!==tt.boolean){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.boolean,received:d.parsedType}),jt}return wl(i.data)}};kC.create=c=>new kC({typeName:xt.ZodBoolean,coerce:c?.coerce||false,...Et(c)});var xC=class c extends Lt{_parse(i){if(this._def.coerce&&(i.data=new Date(i.data)),this._getType(i)!==tt.date){let h=this._getOrReturnCtx(i);return $(h,{code:f.invalid_type,expected:tt.date,received:h.parsedType}),jt}if(isNaN(i.data.getTime())){let h=this._getOrReturnCtx(i);return $(h,{code:f.invalid_date}),jt}let d=new gl,m;for(let h of this._def.checks)h.kind==="min"?i.data.getTime()<h.value&&(m=this._getOrReturnCtx(i,m),$(m,{code:f.too_small,message:h.message,inclusive:true,exact:false,minimum:h.value,type:"date"}),d.dirty()):h.kind==="max"?i.data.getTime()>h.value&&(m=this._getOrReturnCtx(i,m),$(m,{code:f.too_big,message:h.message,inclusive:true,exact:false,maximum:h.value,type:"date"}),d.dirty()):me.assertNever(h);return {status:d.value,value:new Date(i.data.getTime())}}_addCheck(i){return new c({...this._def,checks:[...this._def.checks,i]})}min(i,p){return this._addCheck({kind:"min",value:i.getTime(),message:lt.toString(p)})}max(i,p){return this._addCheck({kind:"max",value:i.getTime(),message:lt.toString(p)})}get minDate(){let i=null;for(let p of this._def.checks)p.kind==="min"&&(i===null||p.value>i)&&(i=p.value);return i!=null?new Date(i):null}get maxDate(){let i=null;for(let p of this._def.checks)p.kind==="max"&&(i===null||p.value<i)&&(i=p.value);return i!=null?new Date(i):null}};xC.create=c=>new xC({checks:[],coerce:c?.coerce||false,typeName:xt.ZodDate,...Et(c)});var kT=class extends Lt{_parse(i){if(this._getType(i)!==tt.symbol){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.symbol,received:d.parsedType}),jt}return wl(i.data)}};kT.create=c=>new kT({typeName:xt.ZodSymbol,...Et(c)});var jC=class extends Lt{_parse(i){if(this._getType(i)!==tt.undefined){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.undefined,received:d.parsedType}),jt}return wl(i.data)}};jC.create=c=>new jC({typeName:xt.ZodUndefined,...Et(c)});var MC=class extends Lt{_parse(i){if(this._getType(i)!==tt.null){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.null,received:d.parsedType}),jt}return wl(i.data)}};MC.create=c=>new MC({typeName:xt.ZodNull,...Et(c)});var sg=class extends Lt{constructor(){super(...arguments),this._any=true;}_parse(i){return wl(i.data)}};sg.create=c=>new sg({typeName:xt.ZodAny,...Et(c)});var Km=class extends Lt{constructor(){super(...arguments),this._unknown=true;}_parse(i){return wl(i.data)}};Km.create=c=>new Km({typeName:xt.ZodUnknown,...Et(c)});var Ip=class extends Lt{_parse(i){let p=this._getOrReturnCtx(i);return $(p,{code:f.invalid_type,expected:tt.never,received:p.parsedType}),jt}};Ip.create=c=>new Ip({typeName:xt.ZodNever,...Et(c)});var xT=class extends Lt{_parse(i){if(this._getType(i)!==tt.undefined){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.void,received:d.parsedType}),jt}return wl(i.data)}};xT.create=c=>new xT({typeName:xt.ZodVoid,...Et(c)});var Xm=class c extends Lt{_parse(i){let{ctx:p,status:d}=this._processInputParams(i),m=this._def;if(p.parsedType!==tt.array)return $(p,{code:f.invalid_type,expected:tt.array,received:p.parsedType}),jt;if(m.exactLength!==null){let P=p.data.length>m.exactLength.value,k=p.data.length<m.exactLength.value;(P||k)&&($(p,{code:P?f.too_big:f.too_small,minimum:k?m.exactLength.value:void 0,maximum:P?m.exactLength.value:void 0,type:"array",inclusive:true,exact:true,message:m.exactLength.message}),d.dirty());}if(m.minLength!==null&&p.data.length<m.minLength.value&&($(p,{code:f.too_small,minimum:m.minLength.value,type:"array",inclusive:true,exact:false,message:m.minLength.message}),d.dirty()),m.maxLength!==null&&p.data.length>m.maxLength.value&&($(p,{code:f.too_big,maximum:m.maxLength.value,type:"array",inclusive:true,exact:false,message:m.maxLength.message}),d.dirty()),p.common.async)return Promise.all([...p.data].map((P,k)=>m.type._parseAsync(new zp(p,P,p.path,k)))).then(P=>gl.mergeArray(d,P));let h=[...p.data].map((P,k)=>m.type._parseSync(new zp(p,P,p.path,k)));return gl.mergeArray(d,h)}get element(){return this._def.type}min(i,p){return new c({...this._def,minLength:{value:i,message:lt.toString(p)}})}max(i,p){return new c({...this._def,maxLength:{value:i,message:lt.toString(p)}})}length(i,p){return new c({...this._def,exactLength:{value:i,message:lt.toString(p)}})}nonempty(i){return this.min(1,i)}};Xm.create=(c,i)=>new Xm({type:c,minLength:null,maxLength:null,exactLength:null,typeName:xt.ZodArray,...Et(i)});function UT(c){if(c instanceof Er){let i={};for(let p in c.shape){let d=c.shape[p];i[p]=dp.create(UT(d));}return new Er({...c._def,shape:()=>i})}else return c instanceof Xm?new Xm({...c._def,type:UT(c.element)}):c instanceof dp?dp.create(UT(c.unwrap())):c instanceof xm?xm.create(UT(c.unwrap())):c instanceof km?km.create(c.items.map(i=>UT(i))):c}var Er=class c extends Lt{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let i=this._def.shape(),p=me.objectKeys(i);return this._cached={shape:i,keys:p}}_parse(i){if(this._getType(i)!==tt.object){let G=this._getOrReturnCtx(i);return $(G,{code:f.invalid_type,expected:tt.object,received:G.parsedType}),jt}let{status:d,ctx:m}=this._processInputParams(i),{shape:h,keys:P}=this._getCached(),k=[];if(!(this._def.catchall instanceof Ip&&this._def.unknownKeys==="strip"))for(let G in m.data)P.includes(G)||k.push(G);let K=[];for(let G of P){let Rt=h[G],fl=m.data[G];K.push({key:{status:"valid",value:G},value:Rt._parse(new zp(m,fl,m.path,G)),alwaysSet:G in m.data});}if(this._def.catchall instanceof Ip){let G=this._def.unknownKeys;if(G==="passthrough")for(let Rt of k)K.push({key:{status:"valid",value:Rt},value:{status:"valid",value:m.data[Rt]}});else if(G==="strict")k.length>0&&($(m,{code:f.unrecognized_keys,keys:k}),d.dirty());else if(G!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let G=this._def.catchall;for(let Rt of k){let fl=m.data[Rt];K.push({key:{status:"valid",value:Rt},value:G._parse(new zp(m,fl,m.path,Rt)),alwaysSet:Rt in m.data});}}return m.common.async?Promise.resolve().then(async()=>{let G=[];for(let Rt of K){let fl=await Rt.key,AN=await Rt.value;G.push({key:fl,value:AN,alwaysSet:Rt.alwaysSet});}return G}).then(G=>gl.mergeObjectSync(d,G)):gl.mergeObjectSync(d,K)}get shape(){return this._def.shape()}strict(i){return lt.errToObj,new c({...this._def,unknownKeys:"strict",...i!==void 0?{errorMap:(p,d)=>{var m,h,P,k;let K=(P=(h=(m=this._def).errorMap)===null||h===void 0?void 0:h.call(m,p,d).message)!==null&&P!==void 0?P:d.defaultError;return p.code==="unrecognized_keys"?{message:(k=lt.errToObj(i).message)!==null&&k!==void 0?k:K}:{message:K}}}:{}})}strip(){return new c({...this._def,unknownKeys:"strip"})}passthrough(){return new c({...this._def,unknownKeys:"passthrough"})}extend(i){return new c({...this._def,shape:()=>({...this._def.shape(),...i})})}merge(i){return new c({unknownKeys:i._def.unknownKeys,catchall:i._def.catchall,shape:()=>({...this._def.shape(),...i._def.shape()}),typeName:xt.ZodObject})}setKey(i,p){return this.augment({[i]:p})}catchall(i){return new c({...this._def,catchall:i})}pick(i){let p={};return me.objectKeys(i).forEach(d=>{i[d]&&this.shape[d]&&(p[d]=this.shape[d]);}),new c({...this._def,shape:()=>p})}omit(i){let p={};return me.objectKeys(this.shape).forEach(d=>{i[d]||(p[d]=this.shape[d]);}),new c({...this._def,shape:()=>p})}deepPartial(){return UT(this)}partial(i){let p={};return me.objectKeys(this.shape).forEach(d=>{let m=this.shape[d];i&&!i[d]?p[d]=m:p[d]=m.optional();}),new c({...this._def,shape:()=>p})}required(i){let p={};return me.objectKeys(this.shape).forEach(d=>{if(i&&!i[d])p[d]=this.shape[d];else {let h=this.shape[d];for(;h instanceof dp;)h=h._def.innerType;p[d]=h;}}),new c({...this._def,shape:()=>p})}keyof(){return sX(me.objectKeys(this.shape))}};Er.create=(c,i)=>new Er({shape:()=>c,unknownKeys:"strip",catchall:Ip.create(),typeName:xt.ZodObject,...Et(i)});Er.strictCreate=(c,i)=>new Er({shape:()=>c,unknownKeys:"strict",catchall:Ip.create(),typeName:xt.ZodObject,...Et(i)});Er.lazycreate=(c,i)=>new Er({shape:c,unknownKeys:"strip",catchall:Ip.create(),typeName:xt.ZodObject,...Et(i)});var ZC=class extends Lt{_parse(i){let{ctx:p}=this._processInputParams(i),d=this._def.options;function m(h){for(let k of h)if(k.result.status==="valid")return k.result;for(let k of h)if(k.result.status==="dirty")return p.common.issues.push(...k.ctx.common.issues),k.result;let P=h.map(k=>new $r(k.ctx.common.issues));return $(p,{code:f.invalid_union,unionErrors:P}),jt}if(p.common.async)return Promise.all(d.map(async h=>{let P={...p,common:{...p.common,issues:[]},parent:null};return {result:await h._parseAsync({data:p.data,path:p.path,parent:P}),ctx:P}})).then(m);{let h,P=[];for(let K of d){let G={...p,common:{...p.common,issues:[]},parent:null},Rt=K._parseSync({data:p.data,path:p.path,parent:G});if(Rt.status==="valid")return Rt;Rt.status==="dirty"&&!h&&(h={result:Rt,ctx:G}),G.common.issues.length&&P.push(G.common.issues);}if(h)return p.common.issues.push(...h.ctx.common.issues),h.result;let k=P.map(K=>new $r(K));return $(p,{code:f.invalid_union,unionErrors:k}),jt}}get options(){return this._def.options}};ZC.create=(c,i)=>new ZC({options:c,typeName:xt.ZodUnion,...Et(i)});var $m=c=>c instanceof OC?$m(c.schema):c instanceof Jr?$m(c.innerType()):c instanceof fC?[c.value]:c instanceof wC?c.options:c instanceof NC?me.objectValues(c.enum):c instanceof BC?$m(c._def.innerType):c instanceof jC?[void 0]:c instanceof MC?[null]:c instanceof dp?[void 0,...$m(c.unwrap())]:c instanceof xm?[null,...$m(c.unwrap())]:c instanceof uP||c instanceof FC?$m(c.unwrap()):c instanceof qC?$m(c._def.innerType):[],UN=class c extends Lt{_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==tt.object)return $(p,{code:f.invalid_type,expected:tt.object,received:p.parsedType}),jt;let d=this.discriminator,m=p.data[d],h=this.optionsMap.get(m);return h?p.common.async?h._parseAsync({data:p.data,path:p.path,parent:p}):h._parseSync({data:p.data,path:p.path,parent:p}):($(p,{code:f.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[d]}),jt)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(i,p,d){let m=new Map;for(let h of p){let P=$m(h.shape[i]);if(!P.length)throw new Error(`A discriminator value for key \`${i}\` could not be extracted from all schema options`);for(let k of P){if(m.has(k))throw new Error(`Discriminator property ${String(i)} has duplicate value ${String(k)}`);m.set(k,h);}}return new c({typeName:xt.ZodDiscriminatedUnion,discriminator:i,options:p,optionsMap:m,...Et(d)})}};function YL(c,i){let p=Jm(c),d=Jm(i);if(c===i)return {valid:true,data:c};if(p===tt.object&&d===tt.object){let m=me.objectKeys(i),h=me.objectKeys(c).filter(k=>m.indexOf(k)!==-1),P={...c,...i};for(let k of h){let K=YL(c[k],i[k]);if(!K.valid)return {valid:false};P[k]=K.data;}return {valid:true,data:P}}else if(p===tt.array&&d===tt.array){if(c.length!==i.length)return {valid:false};let m=[];for(let h=0;h<c.length;h++){let P=c[h],k=i[h],K=YL(P,k);if(!K.valid)return {valid:false};m.push(K.data);}return {valid:true,data:m}}else return p===tt.date&&d===tt.date&&+c==+i?{valid:true,data:c}:{valid:false}}var vC=class extends Lt{_parse(i){let{status:p,ctx:d}=this._processInputParams(i),m=(h,P)=>{if(HL(h)||HL(P))return jt;let k=YL(h.value,P.value);return k.valid?((QL(h)||QL(P))&&p.dirty(),{status:p.value,value:k.data}):($(d,{code:f.invalid_intersection_types}),jt)};return d.common.async?Promise.all([this._def.left._parseAsync({data:d.data,path:d.path,parent:d}),this._def.right._parseAsync({data:d.data,path:d.path,parent:d})]).then(([h,P])=>m(h,P)):m(this._def.left._parseSync({data:d.data,path:d.path,parent:d}),this._def.right._parseSync({data:d.data,path:d.path,parent:d}))}};vC.create=(c,i,p)=>new vC({left:c,right:i,typeName:xt.ZodIntersection,...Et(p)});var km=class c extends Lt{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==tt.array)return $(d,{code:f.invalid_type,expected:tt.array,received:d.parsedType}),jt;if(d.data.length<this._def.items.length)return $(d,{code:f.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),jt;!this._def.rest&&d.data.length>this._def.items.length&&($(d,{code:f.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),p.dirty());let h=[...d.data].map((P,k)=>{let K=this._def.items[k]||this._def.rest;return K?K._parse(new zp(d,P,d.path,k)):null}).filter(P=>!!P);return d.common.async?Promise.all(h).then(P=>gl.mergeArray(p,P)):gl.mergeArray(p,h)}get items(){return this._def.items}rest(i){return new c({...this._def,rest:i})}};km.create=(c,i)=>{if(!Array.isArray(c))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new km({items:c,typeName:xt.ZodTuple,rest:null,...Et(i)})};var WN=class c extends Lt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==tt.object)return $(d,{code:f.invalid_type,expected:tt.object,received:d.parsedType}),jt;let m=[],h=this._def.keyType,P=this._def.valueType;for(let k in d.data)m.push({key:h._parse(new zp(d,k,d.path,k)),value:P._parse(new zp(d,d.data[k],d.path,k)),alwaysSet:k in d.data});return d.common.async?gl.mergeObjectAsync(p,m):gl.mergeObjectSync(p,m)}get element(){return this._def.valueType}static create(i,p,d){return p instanceof Lt?new c({keyType:i,valueType:p,typeName:xt.ZodRecord,...Et(d)}):new c({keyType:ug.create(),valueType:i,typeName:xt.ZodRecord,...Et(p)})}},jT=class extends Lt{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==tt.map)return $(d,{code:f.invalid_type,expected:tt.map,received:d.parsedType}),jt;let m=this._def.keyType,h=this._def.valueType,P=[...d.data.entries()].map(([k,K],G)=>({key:m._parse(new zp(d,k,d.path,[G,"key"])),value:h._parse(new zp(d,K,d.path,[G,"value"]))}));if(d.common.async){let k=new Map;return Promise.resolve().then(async()=>{for(let K of P){let G=await K.key,Rt=await K.value;if(G.status==="aborted"||Rt.status==="aborted")return jt;(G.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(G.value,Rt.value);}return {status:p.value,value:k}})}else {let k=new Map;for(let K of P){let G=K.key,Rt=K.value;if(G.status==="aborted"||Rt.status==="aborted")return jt;(G.status==="dirty"||Rt.status==="dirty")&&p.dirty(),k.set(G.value,Rt.value);}return {status:p.value,value:k}}}};jT.create=(c,i,p)=>new jT({valueType:i,keyType:c,typeName:xt.ZodMap,...Et(p)});var MT=class c extends Lt{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.parsedType!==tt.set)return $(d,{code:f.invalid_type,expected:tt.set,received:d.parsedType}),jt;let m=this._def;m.minSize!==null&&d.data.size<m.minSize.value&&($(d,{code:f.too_small,minimum:m.minSize.value,type:"set",inclusive:true,exact:false,message:m.minSize.message}),p.dirty()),m.maxSize!==null&&d.data.size>m.maxSize.value&&($(d,{code:f.too_big,maximum:m.maxSize.value,type:"set",inclusive:true,exact:false,message:m.maxSize.message}),p.dirty());let h=this._def.valueType;function P(K){let G=new Set;for(let Rt of K){if(Rt.status==="aborted")return jt;Rt.status==="dirty"&&p.dirty(),G.add(Rt.value);}return {status:p.value,value:G}}let k=[...d.data.values()].map((K,G)=>h._parse(new zp(d,K,d.path,G)));return d.common.async?Promise.all(k).then(K=>P(K)):P(k)}min(i,p){return new c({...this._def,minSize:{value:i,message:lt.toString(p)}})}max(i,p){return new c({...this._def,maxSize:{value:i,message:lt.toString(p)}})}size(i,p){return this.min(i,p).max(i,p)}nonempty(i){return this.min(1,i)}};MT.create=(c,i)=>new MT({valueType:c,minSize:null,maxSize:null,typeName:xt.ZodSet,...Et(i)});var RN=class c extends Lt{constructor(){super(...arguments),this.validate=this.implement;}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==tt.function)return $(p,{code:f.invalid_type,expected:tt.function,received:p.parsedType}),jt;function d(k,K){return TN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,SN(),RT].filter(G=>!!G),issueData:{code:f.invalid_arguments,argumentsError:K}})}function m(k,K){return TN({data:k,path:p.path,errorMaps:[p.common.contextualErrorMap,p.schemaErrorMap,SN(),RT].filter(G=>!!G),issueData:{code:f.invalid_return_type,returnTypeError:K}})}let h={errorMap:p.common.contextualErrorMap},P=p.data;if(this._def.returns instanceof yg){let k=this;return wl(async function(...K){let G=new $r([]),Rt=await k._def.args.parseAsync(K,h).catch(EL=>{throw G.addIssue(d(K,EL)),G}),fl=await Reflect.apply(P,this,Rt);return await k._def.returns._def.type.parseAsync(fl,h).catch(EL=>{throw G.addIssue(m(fl,EL)),G})})}else {let k=this;return wl(function(...K){let G=k._def.args.safeParse(K,h);if(!G.success)throw new $r([d(K,G.error)]);let Rt=Reflect.apply(P,this,G.data),fl=k._def.returns.safeParse(Rt,h);if(!fl.success)throw new $r([m(Rt,fl.error)]);return fl.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...i){return new c({...this._def,args:km.create(i).rest(Km.create())})}returns(i){return new c({...this._def,returns:i})}implement(i){return this.parse(i)}strictImplement(i){return this.parse(i)}static create(i,p,d){return new c({args:i||km.create([]).rest(Km.create()),returns:p||Km.create(),typeName:xt.ZodFunction,...Et(d)})}},OC=class extends Lt{get schema(){return this._def.getter()}_parse(i){let{ctx:p}=this._processInputParams(i);return this._def.getter()._parse({data:p.data,path:p.path,parent:p})}};OC.create=(c,i)=>new OC({getter:c,typeName:xt.ZodLazy,...Et(i)});var fC=class extends Lt{_parse(i){if(i.data!==this._def.value){let p=this._getOrReturnCtx(i);return $(p,{received:p.data,code:f.invalid_literal,expected:this._def.value}),jt}return {status:"valid",value:i.data}}get value(){return this._def.value}};fC.create=(c,i)=>new fC({value:c,typeName:xt.ZodLiteral,...Et(i)});function sX(c,i){return new wC({values:c,typeName:xt.ZodEnum,...Et(i)})}var wC=class c extends Lt{constructor(){super(...arguments),rP.set(this,void 0);}_parse(i){if(typeof i.data!="string"){let p=this._getOrReturnCtx(i),d=this._def.values;return $(p,{expected:me.joinValues(d),received:p.parsedType,code:f.invalid_type}),jt}if(PN(this,rP)||rX(this,rP,new Set(this._def.values)),!PN(this,rP).has(i.data)){let p=this._getOrReturnCtx(i),d=this._def.values;return $(p,{received:p.data,code:f.invalid_enum_value,options:d}),jt}return wl(i.data)}get options(){return this._def.values}get enum(){let i={};for(let p of this._def.values)i[p]=p;return i}get Values(){let i={};for(let p of this._def.values)i[p]=p;return i}get Enum(){let i={};for(let p of this._def.values)i[p]=p;return i}extract(i,p=this._def){return c.create(i,{...this._def,...p})}exclude(i,p=this._def){return c.create(this.options.filter(d=>!i.includes(d)),{...this._def,...p})}};rP=new WeakMap;wC.create=sX;var NC=class extends Lt{constructor(){super(...arguments),pP.set(this,void 0);}_parse(i){let p=me.getValidEnumValues(this._def.values),d=this._getOrReturnCtx(i);if(d.parsedType!==tt.string&&d.parsedType!==tt.number){let m=me.objectValues(p);return $(d,{expected:me.joinValues(m),received:d.parsedType,code:f.invalid_type}),jt}if(PN(this,pP)||rX(this,pP,new Set(me.getValidEnumValues(this._def.values))),!PN(this,pP).has(i.data)){let m=me.objectValues(p);return $(d,{received:d.data,code:f.invalid_enum_value,options:m}),jt}return wl(i.data)}get enum(){return this._def.values}};pP=new WeakMap;NC.create=(c,i)=>new NC({values:c,typeName:xt.ZodNativeEnum,...Et(i)});var yg=class extends Lt{unwrap(){return this._def.type}_parse(i){let{ctx:p}=this._processInputParams(i);if(p.parsedType!==tt.promise&&p.common.async===false)return $(p,{code:f.invalid_type,expected:tt.promise,received:p.parsedType}),jt;let d=p.parsedType===tt.promise?p.data:Promise.resolve(p.data);return wl(d.then(m=>this._def.type.parseAsync(m,{path:p.path,errorMap:p.common.contextualErrorMap})))}};yg.create=(c,i)=>new yg({type:c,typeName:xt.ZodPromise,...Et(i)});var Jr=class extends Lt{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===xt.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(i){let{status:p,ctx:d}=this._processInputParams(i),m=this._def.effect||null,h={addIssue:P=>{$(d,P),P.fatal?p.abort():p.dirty();},get path(){return d.path}};if(h.addIssue=h.addIssue.bind(h),m.type==="preprocess"){let P=m.transform(d.data,h);if(d.common.async)return Promise.resolve(P).then(async k=>{if(p.value==="aborted")return jt;let K=await this._def.schema._parseAsync({data:k,path:d.path,parent:d});return K.status==="aborted"?jt:K.status==="dirty"||p.value==="dirty"?WT(K.value):K});{if(p.value==="aborted")return jt;let k=this._def.schema._parseSync({data:P,path:d.path,parent:d});return k.status==="aborted"?jt:k.status==="dirty"||p.value==="dirty"?WT(k.value):k}}if(m.type==="refinement"){let P=k=>{let K=m.refinement(k,h);if(d.common.async)return Promise.resolve(K);if(K instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return k};if(d.common.async===false){let k=this._def.schema._parseSync({data:d.data,path:d.path,parent:d});return k.status==="aborted"?jt:(k.status==="dirty"&&p.dirty(),P(k.value),{status:p.value,value:k.value})}else return this._def.schema._parseAsync({data:d.data,path:d.path,parent:d}).then(k=>k.status==="aborted"?jt:(k.status==="dirty"&&p.dirty(),P(k.value).then(()=>({status:p.value,value:k.value}))))}if(m.type==="transform")if(d.common.async===false){let P=this._def.schema._parseSync({data:d.data,path:d.path,parent:d});if(!UC(P))return P;let k=m.transform(P.value,h);if(k instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:p.value,value:k}}else return this._def.schema._parseAsync({data:d.data,path:d.path,parent:d}).then(P=>UC(P)?Promise.resolve(m.transform(P.value,h)).then(k=>({status:p.value,value:k})):P);me.assertNever(m);}};Jr.create=(c,i,p)=>new Jr({schema:c,typeName:xt.ZodEffects,effect:i,...Et(p)});Jr.createWithPreprocess=(c,i,p)=>new Jr({schema:i,effect:{type:"preprocess",transform:c},typeName:xt.ZodEffects,...Et(p)});var dp=class extends Lt{_parse(i){return this._getType(i)===tt.undefined?wl(void 0):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};dp.create=(c,i)=>new dp({innerType:c,typeName:xt.ZodOptional,...Et(i)});var xm=class extends Lt{_parse(i){return this._getType(i)===tt.null?wl(null):this._def.innerType._parse(i)}unwrap(){return this._def.innerType}};xm.create=(c,i)=>new xm({innerType:c,typeName:xt.ZodNullable,...Et(i)});var BC=class extends Lt{_parse(i){let{ctx:p}=this._processInputParams(i),d=p.data;return p.parsedType===tt.undefined&&(d=this._def.defaultValue()),this._def.innerType._parse({data:d,path:p.path,parent:p})}removeDefault(){return this._def.innerType}};BC.create=(c,i)=>new BC({innerType:c,typeName:xt.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...Et(i)});var qC=class extends Lt{_parse(i){let{ctx:p}=this._processInputParams(i),d={...p,common:{...p.common,issues:[]}},m=this._def.innerType._parse({data:d.data,path:d.path,parent:{...d}});return cP(m)?m.then(h=>({status:"valid",value:h.status==="valid"?h.value:this._def.catchValue({get error(){return new $r(d.common.issues)},input:d.data})})):{status:"valid",value:m.status==="valid"?m.value:this._def.catchValue({get error(){return new $r(d.common.issues)},input:d.data})}}removeCatch(){return this._def.innerType}};qC.create=(c,i)=>new qC({innerType:c,typeName:xt.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...Et(i)});var ZT=class extends Lt{_parse(i){if(this._getType(i)!==tt.nan){let d=this._getOrReturnCtx(i);return $(d,{code:f.invalid_type,expected:tt.nan,received:d.parsedType}),jt}return {status:"valid",value:i.data}}};ZT.create=c=>new ZT({typeName:xt.ZodNaN,...Et(c)});var Lyt=Symbol("zod_brand"),uP=class extends Lt{_parse(i){let{ctx:p}=this._processInputParams(i),d=p.data;return this._def.type._parse({data:d,path:p.path,parent:p})}unwrap(){return this._def.type}},sP=class c extends Lt{_parse(i){let{status:p,ctx:d}=this._processInputParams(i);if(d.common.async)return (async()=>{let h=await this._def.in._parseAsync({data:d.data,path:d.path,parent:d});return h.status==="aborted"?jt:h.status==="dirty"?(p.dirty(),WT(h.value)):this._def.out._parseAsync({data:h.value,path:d.path,parent:d})})();{let m=this._def.in._parseSync({data:d.data,path:d.path,parent:d});return m.status==="aborted"?jt:m.status==="dirty"?(p.dirty(),{status:"dirty",value:m.value}):this._def.out._parseSync({data:m.value,path:d.path,parent:d})}}static create(i,p){return new c({in:i,out:p,typeName:xt.ZodPipeline})}},FC=class extends Lt{_parse(i){let p=this._def.innerType._parse(i),d=m=>(UC(m)&&(m.value=Object.freeze(m.value)),m);return cP(p)?p.then(m=>d(m)):d(p)}unwrap(){return this._def.innerType}};FC.create=(c,i)=>new FC({innerType:c,typeName:xt.ZodReadonly,...Et(i)});function aX(c,i){let p=typeof c=="function"?c(i):typeof c=="string"?{message:c}:c;return typeof p=="string"?{message:p}:p}function yX(c,i={},p){return c?sg.create().superRefine((d,m)=>{var h,P;let k=c(d);if(k instanceof Promise)return k.then(K=>{var G,Rt;if(!K){let fl=aX(i,d),AN=(Rt=(G=fl.fatal)!==null&&G!==void 0?G:p)!==null&&Rt!==void 0?Rt:true;m.addIssue({code:"custom",...fl,fatal:AN});}});if(!k){let K=aX(i,d),G=(P=(h=K.fatal)!==null&&h!==void 0?h:p)!==null&&P!==void 0?P:true;m.addIssue({code:"custom",...K,fatal:G});}}):sg.create()}var Vyt={object:Er.lazycreate},xt;(function(c){c.ZodString="ZodString",c.ZodNumber="ZodNumber",c.ZodNaN="ZodNaN",c.ZodBigInt="ZodBigInt",c.ZodBoolean="ZodBoolean",c.ZodDate="ZodDate",c.ZodSymbol="ZodSymbol",c.ZodUndefined="ZodUndefined",c.ZodNull="ZodNull",c.ZodAny="ZodAny",c.ZodUnknown="ZodUnknown",c.ZodNever="ZodNever",c.ZodVoid="ZodVoid",c.ZodArray="ZodArray",c.ZodObject="ZodObject",c.ZodUnion="ZodUnion",c.ZodDiscriminatedUnion="ZodDiscriminatedUnion",c.ZodIntersection="ZodIntersection",c.ZodTuple="ZodTuple",c.ZodRecord="ZodRecord",c.ZodMap="ZodMap",c.ZodSet="ZodSet",c.ZodFunction="ZodFunction",c.ZodLazy="ZodLazy",c.ZodLiteral="ZodLiteral",c.ZodEnum="ZodEnum",c.ZodEffects="ZodEffects",c.ZodNativeEnum="ZodNativeEnum",c.ZodOptional="ZodOptional",c.ZodNullable="ZodNullable",c.ZodDefault="ZodDefault",c.ZodCatch="ZodCatch",c.ZodPromise="ZodPromise",c.ZodBranded="ZodBranded",c.ZodPipeline="ZodPipeline",c.ZodReadonly="ZodReadonly";})(xt||(xt={}));var Hyt=(c,i={message:`Input not instance of ${c.name}`})=>yX(p=>p instanceof c,i),dX=ug.create,zX=WC.create,Qyt=ZT.create,Yyt=RC.create,mX=kC.create,Gyt=xC.create,$yt=kT.create,Jyt=jC.create,Kyt=MC.create,Xyt=sg.create,tdt=Km.create,edt=Ip.create,odt=xT.create,ndt=Xm.create,adt=Er.create,idt=Er.strictCreate,ldt=ZC.create,rdt=UN.create,pdt=vC.create,cdt=km.create,udt=WN.create,sdt=jT.create,ydt=MT.create,ddt=RN.create,zdt=OC.create,mdt=fC.create,bdt=wC.create,hdt=NC.create,Idt=yg.create,iX=Jr.create,gdt=dp.create,Cdt=xm.create,Adt=Jr.createWithPreprocess,Sdt=sP.create,Tdt=()=>dX().optional(),Pdt=()=>zX().optional(),Udt=()=>mX().optional(),Wdt={string:c=>ug.create({...c,coerce:true}),number:c=>WC.create({...c,coerce:true}),boolean:c=>kC.create({...c,coerce:true}),bigint:c=>RC.create({...c,coerce:true}),date:c=>xC.create({...c,coerce:true})},Rdt=jt,t=Object.freeze({__proto__:null,defaultErrorMap:RT,setErrorMap:Ayt,getErrorMap:SN,makeIssue:TN,EMPTY_PATH:Syt,addIssueToContext:$,ParseStatus:gl,INVALID:jt,DIRTY:WT,OK:wl,isAborted:HL,isDirty:QL,isValid:UC,isAsync:cP,get util(){return me},get objectUtil(){return VL},ZodParsedType:tt,getParsedType:Jm,ZodType:Lt,datetimeRegex:uX,ZodString:ug,ZodNumber:WC,ZodBigInt:RC,ZodBoolean:kC,ZodDate:xC,ZodSymbol:kT,ZodUndefined:jC,ZodNull:MC,ZodAny:sg,ZodUnknown:Km,ZodNever:Ip,ZodVoid:xT,ZodArray:Xm,ZodObject:Er,ZodUnion:ZC,ZodDiscriminatedUnion:UN,ZodIntersection:vC,ZodTuple:km,ZodRecord:WN,ZodMap:jT,ZodSet:MT,ZodFunction:RN,ZodLazy:OC,ZodLiteral:fC,ZodEnum:wC,ZodNativeEnum:NC,ZodPromise:yg,ZodEffects:Jr,ZodTransformer:Jr,ZodOptional:dp,ZodNullable:xm,ZodDefault:BC,ZodCatch:qC,ZodNaN:ZT,BRAND:Lyt,ZodBranded:uP,ZodPipeline:sP,ZodReadonly:FC,custom:yX,Schema:Lt,ZodSchema:Lt,late:Vyt,get ZodFirstPartyTypeKind(){return xt},coerce:Wdt,any:Xyt,array:ndt,bigint:Yyt,boolean:mX,date:Gyt,discriminatedUnion:rdt,effect:iX,enum:bdt,function:ddt,instanceof:Hyt,intersection:pdt,lazy:zdt,literal:mdt,map:sdt,nan:Qyt,nativeEnum:hdt,never:edt,null:Kyt,nullable:Cdt,number:zX,object:adt,oboolean:Udt,onumber:Pdt,optional:gdt,ostring:Tdt,pipeline:Sdt,preprocess:Adt,promise:Idt,record:udt,set:ydt,strictObject:idt,string:dX,symbol:$yt,transformer:iX,tuple:cdt,undefined:Jyt,union:ldt,unknown:tdt,void:odt,NEVER:Rdt,ZodIssueCode:f,quotelessJson:Cyt,ZodError:$r});var kdt=t.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]),dg=t.enum(["id","recipeId","servingSize","servingUnit","calories","protein","carbohydrates","fat","fiber","sugar","sodium","containsGluten","containsDairy","containsNuts","containsEggs","containsSoy","containsFish","containsShellfish","containsSesame"]),zg=t.enum(["id","recipeId","stepNumber","description","threshold","unit","action","createdAt","updatedAt"]),mg=t.enum(["id","recipeId","temperature","method","shelfLife","containerType","specialNotes","createdAt","updatedAt"]),bg=t.enum(["id","recipeId","url","type","stepNumber","description","createdAt","updatedAt"]),hg=t.enum(["id","recipeId","stepNumber","minTemp","maxTemp","isCritical","holdTime","description","createdAt","updatedAt"]),Ig=t.enum(["id","recipeId","expectedYield","actualYield","unit","wastagePercent","notes","createdAt","updatedAt"]),gg=t.enum(["id","recipeId","prepTime","cookTime","laborRate","totalLaborCost","createdAt","updatedAt"]),Cg=t.enum(["id","posTransactionID","restaurantId","menuItemId","price","total","transactionDate","createdAt","updatedAt"]),Ag=t.enum(["id","name","description","displayOrder","menuId","isActive","createdAt","updatedAt"]),Sg=t.enum(["id","recipeId","versionNumber","description","changes","isActive","createdById","approvedById","approvedAt","createdAt","updatedAt"]),Tg=t.enum(["id","name","description","model","serialNumber","purchaseDate","lastMaintenance","nextMaintenance","status","location","restaurantId","createdAt","updatedAt"]),Pg=t.enum(["id","recipeId","equipmentId","notes","recipeInstructionId"]),Ug=t.enum(["id","equipmentId","date","type","description","cost","performedBy","notes","createdAt","updatedAt"]),Wg=t.enum(["id","name","description","restaurantId","frequency","isActive","createdAt","updatedAt"]),Rg=t.enum(["id","checklistId","description","order","type","requiredPhotos","createdAt","updatedAt"]),kg=t.enum(["id","checklistId","completedById","date","notes","createdAt","updatedAt"]),xg=t.enum(["id","checklistCompleteId","checklistItemId","status","notes","photoUrls","createdAt","updatedAt"]),jg=t.enum(["id","vendorId","ingredientId","price","unit","startDate","endDate","notes","createdAt","updatedAt"]),Mg=t.enum(["id","restaurantId","menuItemId","rating","comment","source","tags","status","responseText","respondedAt","respondedById","createdAt","updatedAt"]),Zg=t.enum(["id","name","description","icon","createdAt","updatedAt"]),vg=t.enum(["id","name","description","createdAt","updatedAt"]),Og=t.enum(["id","restaurantId","date","menuItemId","quantity","reason","recordedById","createdAt","updatedAt"]),fg=t.enum(["id","restaurantId","date","ingredientId","quantity","unit","reason","recordedById","createdAt","updatedAt"]),wg=t.enum(["id","restaurantId","date","status","createdById","createdAt","updatedAt"]),Ng=t.enum(["id","productionPlanId","recipeId","quantity","unit","assignedToId","createdAt","updatedAt"]),Bg=t.enum(["id","shiftId","taskType","startTime","endTime","duration","notes","createdAt","updatedAt"]),qg=t.enum(["id","userId","dayOfWeek","startTime","endTime","createdAt","updatedAt"]),Fg=t.enum(["id","userId","date","constraintsType","startTime","endTime","notes","createdAt","updatedAt"]),Dg=t.enum(["id","inventoryItemId","dateTime","quantity","unit","recipeId","createdById","createdAt","updatedAt"]),_g=t.enum(["id","name","description"]),Eg=t.enum(["id","ingredientId","allergenId"]),Lg=t.enum(["id","menuItemId","recommendation","createdAt","updatedAt"]),Vg=t.enum(["id","email","isEmailSent","createdAt","updatedAt"]),Hg=t.enum(["id","name","imageUrl","createdAt","updatedAt"]),Qg=t.enum(["id","restaurantId","name","type","isActive","createdAt","updatedAt"]),Yg=t.enum(["id","name","imageUrl","address","city","zipCode","state","owner","organizationId","foodCost","createdAt","updatedAt","isDeleted","deleted"]),Gg=t.enum(["id","email","sub","passwordHash","firstName","lastName","profileImage","verified","role","organizationId","restaurantId","createdAt","updatedAt"]),$g=t.enum(["id","userId","code","token","expiresAt","createdAt"]),Jg=t.enum(["id","name","imageUrl","category","restaurantId"]),Kg=t.enum(["id","name","imageUrls","description","servings","cookTime","prepTime","frequency","restaurantId","cookBookId","foodCost","isDeleted","isPublished","publishedAt","language","skillLevel","category"]),Xg=t.enum(["id","name","category","price","density","dietaryRestrictionId","calories","protein","carbohydrates","fat","fiber","sugar","sodium","usdaFoodId","nutritionSource","nutritionUpdatedAt"]),tC=t.enum(["id","recipeId","ingredientId","quantity","unit","processingInstructions","substituteIngredients","isOptional","notes","cost","density","yield","joinAt","recipeVersionId"]),eC=t.enum(["id","recipeId","stepNumber","instruction","imageUrl","recipeVersionId","timeInMinutes","temperature","temperatureUnit","isCritical","techniqueTips","warningNotes"]),oC=t.enum(["id","inventoryId","ingredientId","quantity","unit","minQuantity","restockThreshold","lastCountDate","lastOrderDate","lastUpdatedById","lastUpdated","par","reorderPoint","maxQuantity","location","barcode","notes","currentPrice","averageCost","lastPurchasePrice"]),nC=t.enum(["id","inventoryId","itemId","type","quantity","unit","previousQty","newQty","cost","reference","notes","createdById","createdAt"]),aC=t.enum(["id","inventoryId","status","startedAt","completedAt","createdById","notes"]),iC=t.enum(["id","stockCountId","itemId","expectedQty","actualQty","difference","notes"]),lC=t.enum(["id","recipeId","totalCost","profitMargin","averageRating","preparationCount","lastPrepared"]),rC=t.enum(["id","restaurantId","vendorId","status","createdAt","updatedAt"]),pC=t.enum(["id","orderId","ingredientId","quantity","unit","price"]),cC=t.enum(["id","name","contact","email","phone","createdAt","updatedAt"]),uC=t.enum(["id","userId","startTime","endTime","status"]),sC=t.enum(["id","name","status","createdAt","updatedAt"]),yC=t.enum(["id","prepBoardId","recipeId","quantity","status","assignedToId"]),dC=t.enum(["id","token","userId","expiresAt","createdAt","updatedAt"]),zC=t.enum(["id","name","restaurantId","createdAt","updatedAt"]),mC=t.enum(["id","menuItemId","recipeId","joinAt"]),bC=t.enum(["id","name","description","price","foodCost","isActive","recipeIds","recipeServingsAmount","recipeServingsCost","allergens","menuId","categoryId"]),hC=t.enum(["id","menuItemId","calories","fat","saturatedFat","transFat","cholesterol","sodium","carbohydrates","fiber","sugar","protein","createdAt","updatedAt"]),IC=t.enum(["id","recipeId","cost","date","createdAt","updatedAt"]),gC=t.enum(["id","recipeId","quantity","date","createdAt","updatedAt"]),e=t.enum(["asc","desc"]),Hj=t.enum(["default","insensitive"]),bX=t.enum(["first","last"]),Ht=t.enum(["BOOLEAN","NUMERIC","TEXT","TEMPERATURE","PHOTO"]),Ft=t.enum(["ACTIVE","MAINTENANCE","REPAIR","RETIRED"]),ce=t.enum(["ROUTINE","REPAIR","INSPECTION","CLEANING","CALIBRATION"]),Dt=t.enum(["DAILY","WEEKLY","MONTHLY","QUARTERLY","CUSTOM"]),Vt=t.enum(["COMPLETED","FAILED","SKIPPED","NEEDS_ATTENTION"]),Zt=t.enum(["IN_PERSON","ONLINE","MOBILE_APP","THIRD_PARTY"]),vt=t.enum(["NEW","IN_PROGRESS","RESPONDED","CLOSED","FLAGGED"]),wt=t.enum(["PLANNED","IN_PROGRESS","COMPLETED","CANCELLED","HAS_NOT_START"]),ue=t.enum(["PREP","COOKING","CLEANING","INVENTORY","OTHER"]),se=t.enum(["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"]),ye=t.enum(["UNAVAILABLE","PREFERRED"]),U=t.enum(["APPETIZER","SOUP","SALAD","MAIN_COURSE","SIDE_DISH","DESSERT","BEVERAGE","BREAKFAST","BRUNCH","LUNCH","DINNER","SNACK","BAKED_GOOD","SAUCE","CONDIMENT","SPECIAL"]),qt=t.enum(["MAIN","BAR","PREP","STORAGE","WALK_IN","FREEZER"]),Ot=t.enum(["PURCHASE","WITHDRAWAL","ADJUSTMENT","WASTE","TRANSFER_IN","TRANSFER_OUT","COUNT_ADJUSTMENT","PRODUCTION","RETURN"]),Nt=t.enum(["PENDING","IN_PROGRESS","COMPLETED","CANCELLED"]),j=t.enum(["ADMIN","MANAGER","CHEF","STAFF","VENDOR"]),Bt=t.enum(["PENDING","APPROVED","ORDERED","RECEIVED","CANCELLED"]),Qt=t.enum(["SCHEDULED","COMPLETED","CANCELLED"]),et=t.enum(["COMPLETED","CANCELLED","MISSING_ITEM","PENDING","ON_PROGRESS","POSTPONE"]),W=t.enum(["BEGINNER","INTERMEDIATE","ADVANCED","EXPERT"]),de=t.enum(["MAIN","STEP","PLATING","TECHNIQUE","EQUIPMENT_SETUP"]),nt=t.enum(["MANUAL","USDA","CUSTOM","ESTIMATED"]),xdt=t.object({id:t.number().int(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean(),containsDairy:t.boolean(),containsNuts:t.boolean(),containsEggs:t.boolean(),containsSoy:t.boolean(),containsFish:t.boolean(),containsShellfish:t.boolean(),containsSesame:t.boolean()}),jdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().nullable(),unit:t.string().nullable(),action:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mdt=t.object({id:t.number().int(),recipeId:t.number().int(),temperature:t.number().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().nullable(),specialNotes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zdt=t.object({type:de,id:t.number().int(),recipeId:t.number().int(),url:t.string(),stepNumber:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),vdt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean(),holdTime:t.number().int().nullable(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Odt=t.object({id:t.number().int(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().nullable(),unit:t.string(),wastagePercent:t.number().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fdt=t.object({id:t.number().int(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),wdt=t.object({id:t.number().int(),posTransactionID:t.string().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ndt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Bdt=t.object({id:t.number().int(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().nullable(),changes:t.string().nullable(),isActive:t.boolean(),createdById:t.number().int(),approvedById:t.number().int().nullable(),approvedAt:t.coerce.date().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),qdt=t.object({status:Ft,id:t.number().int(),name:t.string(),description:t.string().nullable(),model:t.string().nullable(),serialNumber:t.string().nullable(),purchaseDate:t.coerce.date().nullable(),lastMaintenance:t.coerce.date().nullable(),nextMaintenance:t.coerce.date().nullable(),location:t.string().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Fdt=t.object({id:t.number().int(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().nullable(),recipeInstructionId:t.number().int().nullable()}),Ddt=t.object({type:ce,id:t.number().int(),equipmentId:t.number().int(),date:t.coerce.date(),description:t.string(),cost:t.number().nullable(),performedBy:t.string(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),_dt=t.object({frequency:Dt,id:t.number().int(),name:t.string(),description:t.string().nullable(),restaurantId:t.number().int(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Edt=t.object({type:Ht,id:t.number().int(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),requiredPhotos:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ldt=t.object({id:t.number().int(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Vdt=t.object({status:Vt,id:t.number().int(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),notes:t.string().nullable(),photoUrls:t.string().array(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Hdt=t.object({id:t.number().int(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().nullable(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Qdt=t.object({source:Zt,status:vt,id:t.number().int(),restaurantId:t.number().int(),menuItemId:t.number().int().nullable(),rating:t.number().int(),comment:t.string().nullable(),tags:t.string().array(),responseText:t.string().nullable(),respondedAt:t.coerce.date().nullable(),respondedById:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ydt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),icon:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Gdt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),$dt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Jdt=t.object({id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Kdt=t.object({status:wt,id:t.number().int(),restaurantId:t.number().int(),date:t.coerce.date(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Xdt=t.object({id:t.number().int(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),tzt=t.object({taskType:ue,id:t.number().int(),shiftId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ezt=t.object({dayOfWeek:se,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),ozt=t.object({constraintsType:ye,id:t.number().int(),userId:t.number().int(),date:t.coerce.date(),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),nzt=t.object({id:t.number().int(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().nullable(),createdById:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),azt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable()}),izt=t.object({id:t.number().int(),ingredientId:t.number().int(),allergenId:t.number().int()}),lzt=t.object({id:t.number().int(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),rzt=t.object({id:t.number().int(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),pzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),czt=t.object({type:qt,id:t.number().int(),restaurantId:t.number().int(),name:t.string().nullable(),isActive:t.boolean(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),uzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().nullable(),foodCost:t.number().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date(),isDeleted:t.boolean(),deleted:t.coerce.date().nullable()}),szt=t.object({role:j,id:t.number().int(),email:t.string(),sub:t.number().int().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().nullable(),verified:t.boolean(),organizationId:t.number().int().nullable(),restaurantId:t.number().int().nullable(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),yzt=t.object({id:t.string().uuid(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date()}),dzt=t.object({id:t.number().int(),name:t.string(),imageUrl:t.string().nullable(),category:t.string(),restaurantId:t.number().int().nullable()}),zzt=t.object({skillLevel:W,category:U,id:t.number().int(),name:t.string(),imageUrls:t.string().array(),description:t.string().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().nullable(),isDeleted:t.boolean(),isPublished:t.boolean(),publishedAt:t.coerce.date().nullable(),language:t.string()}),mzt=t.object({nutritionSource:nt.nullable(),id:t.number().int(),name:t.string(),category:t.string(),price:t.number(),density:t.number().nullable(),dietaryRestrictionId:t.number().int().nullable(),calories:t.number().nullable(),protein:t.number().nullable(),carbohydrates:t.number().nullable(),fat:t.number().nullable(),fiber:t.number().nullable(),sugar:t.number().nullable(),sodium:t.number().nullable(),usdaFoodId:t.string().nullable(),nutritionUpdatedAt:t.coerce.date().nullable()}),bzt=t.object({id:t.number().int(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().nullable(),substituteIngredients:t.number().int().array(),isOptional:t.boolean(),notes:t.string().nullable(),cost:t.number().nullable(),density:t.number().nullable(),yield:t.number().nullable(),joinAt:t.coerce.date(),recipeVersionId:t.number().int().nullable()}),hzt=t.object({id:t.number().int(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().nullable(),recipeVersionId:t.number().int().nullable(),timeInMinutes:t.number().int().nullable(),temperature:t.number().nullable(),temperatureUnit:t.string().nullable(),isCritical:t.boolean(),techniqueTips:t.string().nullable(),warningNotes:t.string().nullable()}),Izt=t.object({id:t.number().int(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().nullable(),lastOrderDate:t.coerce.date().nullable(),lastUpdatedById:t.number().int().nullable(),lastUpdated:t.coerce.date(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().nullable(),location:t.string().nullable(),barcode:t.string().nullable(),notes:t.string().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().nullable()}),gzt=t.object({type:Ot,id:t.number().int(),inventoryId:t.number().int(),itemId:t.number().int(),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().nullable(),reference:t.string().nullable(),notes:t.string().nullable(),createdById:t.number().int(),createdAt:t.coerce.date()}),Czt=t.object({status:Nt,id:t.number().int(),inventoryId:t.number().int(),startedAt:t.coerce.date(),completedAt:t.coerce.date().nullable(),createdById:t.number().int(),notes:t.string().nullable()}),Azt=t.object({id:t.number().int(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().nullable()}),Szt=t.object({id:t.number().int(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().nullable()}),Tzt=t.object({status:Bt,id:t.number().int(),restaurantId:t.number().int(),vendorId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Pzt=t.object({id:t.number().int(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}),Uzt=t.object({id:t.number().int(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Wzt=t.object({status:Qt,id:t.number().int(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date()}),Rzt=t.object({status:et,id:t.number().int(),name:t.string(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),kzt=t.object({status:et,id:t.number().int(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),assignedToId:t.number().int()}),xzt=t.object({id:t.number().int(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),jzt=t.object({id:t.number().int(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Mzt=t.object({id:t.number().int(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date()}),Zzt=t.object({id:t.number().int(),name:t.string(),description:t.string().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean(),recipeIds:t.number().int().array(),recipeServingsAmount:t.number().array(),recipeServingsCost:t.number().array(),allergens:t.string().array(),menuId:t.number().int(),categoryId:t.number().int().nullable()}),vzt=t.object({id:t.number().int(),menuItemId:t.number().int().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Ozt=t.object({id:t.number().int(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),fzt=t.object({id:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date(),updatedAt:t.coerce.date()}),Zy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),vQ=t.object({select:t.lazy(()=>vy).optional(),include:t.lazy(()=>Zy).optional()}).strict(),vy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),servingSize:t.boolean().optional(),servingUnit:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Oy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),wzt=t.object({select:t.lazy(()=>fy).optional(),include:t.lazy(()=>Oy).optional()}).strict(),fy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),threshold:t.boolean().optional(),unit:t.boolean().optional(),action:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),wy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),OQ=t.object({select:t.lazy(()=>Ny).optional(),include:t.lazy(()=>wy).optional()}).strict(),Ny=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),temperature:t.boolean().optional(),method:t.boolean().optional(),shelfLife:t.boolean().optional(),containerType:t.boolean().optional(),specialNotes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),By=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Nzt=t.object({select:t.lazy(()=>qy).optional(),include:t.lazy(()=>By).optional()}).strict(),qy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),url:t.boolean().optional(),type:t.boolean().optional(),stepNumber:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Fy=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Bzt=t.object({select:t.lazy(()=>Dy).optional(),include:t.lazy(()=>Fy).optional()}).strict(),Dy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),minTemp:t.boolean().optional(),maxTemp:t.boolean().optional(),isCritical:t.boolean().optional(),holdTime:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),_y=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),qzt=t.object({select:t.lazy(()=>Ey).optional(),include:t.lazy(()=>_y).optional()}).strict(),Ey=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),expectedYield:t.boolean().optional(),actualYield:t.boolean().optional(),unit:t.boolean().optional(),wastagePercent:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Ly=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Fzt=t.object({select:t.lazy(()=>Vy).optional(),include:t.lazy(()=>Ly).optional()}).strict(),Vy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),prepTime:t.boolean().optional(),cookTime:t.boolean().optional(),laborRate:t.boolean().optional(),totalLaborCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Hy=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),Dzt=t.object({select:t.lazy(()=>Qy).optional(),include:t.lazy(()=>Hy).optional()}).strict(),Qy=t.object({id:t.boolean().optional(),posTransactionID:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),price:t.boolean().optional(),total:t.boolean().optional(),transactionDate:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),Yy=t.object({menu:t.union([t.boolean(),t.lazy(()=>Kj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),fQ=t.object({select:t.lazy(()=>Gy).optional(),include:t.lazy(()=>Yy).optional()}).strict(),wQ=t.object({select:t.lazy(()=>hX).nullish()}).strict(),hX=t.object({menuItems:t.boolean().optional()}).strict(),Gy=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),displayOrder:t.boolean().optional(),menuId:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>Kj)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>wQ)]).optional()}).strict(),$y=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>mN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),Qj=t.object({select:t.lazy(()=>Jy).optional(),include:t.lazy(()=>$y).optional()}).strict(),NQ=t.object({select:t.lazy(()=>IX).nullish()}).strict(),IX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional()}).strict(),Jy=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),versionNumber:t.boolean().optional(),description:t.boolean().optional(),changes:t.boolean().optional(),isActive:t.boolean().optional(),createdById:t.boolean().optional(),approvedById:t.boolean().optional(),approvedAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>mN)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),approvedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>NQ)]).optional()}).strict(),Ky=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),Yj=t.object({select:t.lazy(()=>Xy).optional(),include:t.lazy(()=>Ky).optional()}).strict(),BQ=t.object({select:t.lazy(()=>gX).nullish()}).strict(),gX=t.object({recipes:t.boolean().optional(),maintenanceLogs:t.boolean().optional()}).strict(),Xy=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),model:t.boolean().optional(),serialNumber:t.boolean().optional(),purchaseDate:t.boolean().optional(),lastMaintenance:t.boolean().optional(),nextMaintenance:t.boolean().optional(),status:t.boolean().optional(),location:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),maintenanceLogs:t.union([t.boolean(),t.lazy(()=>qK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>BQ)]).optional()}).strict(),td=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Yj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),_zt=t.object({select:t.lazy(()=>ed).optional(),include:t.lazy(()=>td).optional()}).strict(),ed=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),equipmentId:t.boolean().optional(),notes:t.boolean().optional(),recipeInstructionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>Yj)]).optional(),RecipeInstruction:t.union([t.boolean(),t.lazy(()=>a0)]).optional()}).strict(),od=t.object({equipment:t.union([t.boolean(),t.lazy(()=>Yj)]).optional()}).strict(),Ezt=t.object({select:t.lazy(()=>nd).optional(),include:t.lazy(()=>od).optional()}).strict(),nd=t.object({id:t.boolean().optional(),equipmentId:t.boolean().optional(),date:t.boolean().optional(),type:t.boolean().optional(),description:t.boolean().optional(),cost:t.boolean().optional(),performedBy:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),equipment:t.union([t.boolean(),t.lazy(()=>Yj)]).optional()}).strict(),ad=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),Gj=t.object({select:t.lazy(()=>id).optional(),include:t.lazy(()=>ad).optional()}).strict(),qQ=t.object({select:t.lazy(()=>CX).nullish()}).strict(),CX=t.object({items:t.boolean().optional(),completions:t.boolean().optional()}).strict(),id=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),restaurantId:t.boolean().optional(),frequency:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>DK)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>qQ)]).optional()}).strict(),ld=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Gj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),FQ=t.object({select:t.lazy(()=>rd).optional(),include:t.lazy(()=>ld).optional()}).strict(),DQ=t.object({select:t.lazy(()=>AX).nullish()}).strict(),AX=t.object({completions:t.boolean().optional()}).strict(),rd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),description:t.boolean().optional(),order:t.boolean().optional(),type:t.boolean().optional(),requiredPhotos:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Gj)]).optional(),completions:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>DQ)]).optional()}).strict(),pd=t.object({checklist:t.union([t.boolean(),t.lazy(()=>Gj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),_Q=t.object({select:t.lazy(()=>cd).optional(),include:t.lazy(()=>pd).optional()}).strict(),EQ=t.object({select:t.lazy(()=>SX).nullish()}).strict(),SX=t.object({items:t.boolean().optional()}).strict(),cd=t.object({id:t.boolean().optional(),checklistId:t.boolean().optional(),completedById:t.boolean().optional(),date:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklist:t.union([t.boolean(),t.lazy(()=>Gj)]).optional(),completedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>cN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>EQ)]).optional()}).strict(),ud=t.object({checklistComplete:t.union([t.boolean(),t.lazy(()=>_Q)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),Lzt=t.object({select:t.lazy(()=>sd).optional(),include:t.lazy(()=>ud).optional()}).strict(),sd=t.object({id:t.boolean().optional(),checklistCompleteId:t.boolean().optional(),checklistItemId:t.boolean().optional(),status:t.boolean().optional(),notes:t.boolean().optional(),photoUrls:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),checklistComplete:t.union([t.boolean(),t.lazy(()=>_Q)]).optional(),checklistItem:t.union([t.boolean(),t.lazy(()=>FQ)]).optional()}).strict(),yd=t.object({vendor:t.union([t.boolean(),t.lazy(()=>Jj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Vzt=t.object({select:t.lazy(()=>dd).optional(),include:t.lazy(()=>yd).optional()}).strict(),dd=t.object({id:t.boolean().optional(),vendorId:t.boolean().optional(),ingredientId:t.boolean().optional(),price:t.boolean().optional(),unit:t.boolean().optional(),startDate:t.boolean().optional(),endDate:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),vendor:t.union([t.boolean(),t.lazy(()=>Jj)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),zd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Hzt=t.object({select:t.lazy(()=>md).optional(),include:t.lazy(()=>zd).optional()}).strict(),md=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),menuItemId:t.boolean().optional(),rating:t.boolean().optional(),comment:t.boolean().optional(),source:t.boolean().optional(),tags:t.boolean().optional(),status:t.boolean().optional(),responseText:t.boolean().optional(),respondedAt:t.boolean().optional(),respondedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),respondedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),bd=t.object({menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>zN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),Qzt=t.object({select:t.lazy(()=>hd).optional(),include:t.lazy(()=>bd).optional()}).strict(),LQ=t.object({select:t.lazy(()=>TX).nullish()}).strict(),TX=t.object({menuItems:t.boolean().optional(),recipes:t.boolean().optional(),ingredients:t.boolean().optional()}).strict(),hd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),icon:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>zN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>LQ)]).optional()}).strict(),Id=t.object({recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Yzt=t.object({select:t.lazy(()=>gd).optional(),include:t.lazy(()=>Id).optional()}).strict(),VQ=t.object({select:t.lazy(()=>PX).nullish()}).strict(),PX=t.object({recipes:t.boolean().optional()}).strict(),gd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>VQ)]).optional()}).strict(),Cd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Gzt=t.object({select:t.lazy(()=>Ad).optional(),include:t.lazy(()=>Cd).optional()}).strict(),Ad=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),menuItemId:t.boolean().optional(),quantity:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Sd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),$zt=t.object({select:t.lazy(()=>Td).optional(),include:t.lazy(()=>Sd).optional()}).strict(),Td=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),reason:t.boolean().optional(),recordedById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),ingrediente:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recordedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Pd=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),HQ=t.object({select:t.lazy(()=>Ud).optional(),include:t.lazy(()=>Pd).optional()}).strict(),QQ=t.object({select:t.lazy(()=>UX).nullish()}).strict(),UX=t.object({items:t.boolean().optional()}).strict(),Ud=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),date:t.boolean().optional(),status:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>QQ)]).optional()}).strict(),Wd=t.object({productionPlan:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Jzt=t.object({select:t.lazy(()=>Rd).optional(),include:t.lazy(()=>Wd).optional()}).strict(),Rd=t.object({id:t.boolean().optional(),productionPlanId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),assignedToId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),productionPlan:t.union([t.boolean(),t.lazy(()=>HQ)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),kd=t.object({shift:t.union([t.boolean(),t.lazy(()=>d0)]).optional()}).strict(),Kzt=t.object({select:t.lazy(()=>xd).optional(),include:t.lazy(()=>kd).optional()}).strict(),xd=t.object({id:t.boolean().optional(),shiftId:t.boolean().optional(),taskType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),duration:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),shift:t.union([t.boolean(),t.lazy(()=>d0)]).optional()}).strict(),jd=t.object({user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Xzt=t.object({select:t.lazy(()=>Md).optional(),include:t.lazy(()=>jd).optional()}).strict(),Md=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),dayOfWeek:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Zd=t.object({user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),tmt=t.object({select:t.lazy(()=>vd).optional(),include:t.lazy(()=>Zd).optional()}).strict(),vd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),date:t.boolean().optional(),constraintsType:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),notes:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Od=t.object({inventoryItem:t.union([t.boolean(),t.lazy(()=>TS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),emt=t.object({select:t.lazy(()=>fd).optional(),include:t.lazy(()=>Od).optional()}).strict(),fd=t.object({id:t.boolean().optional(),inventoryItemId:t.boolean().optional(),dateTime:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),recipeId:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),inventoryItem:t.union([t.boolean(),t.lazy(()=>TS)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),wd=t.object({ingredients:t.union([t.boolean(),t.lazy(()=>yN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),YQ=t.object({select:t.lazy(()=>Nd).optional(),include:t.lazy(()=>wd).optional()}).strict(),GQ=t.object({select:t.lazy(()=>WX).nullish()}).strict(),WX=t.object({ingredients:t.boolean().optional()}).strict(),Nd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),ingredients:t.union([t.boolean(),t.lazy(()=>yN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>GQ)]).optional()}).strict(),Bd=t.object({ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),omt=t.object({select:t.lazy(()=>qd).optional(),include:t.lazy(()=>Bd).optional()}).strict(),qd=t.object({id:t.boolean().optional(),ingredientId:t.boolean().optional(),allergenId:t.boolean().optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),allergen:t.union([t.boolean(),t.lazy(()=>YQ)]).optional()}).strict(),Fd=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),nmt=t.object({select:t.lazy(()=>Dd).optional(),include:t.lazy(()=>Fd).optional()}).strict(),Dd=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recommendation:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),Vm=t.object({id:t.boolean().optional(),email:t.boolean().optional(),isEmailSent:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional()}).strict(),_d=t.object({restaurants:t.union([t.boolean(),t.lazy(()=>QK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>dN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),$j=t.object({select:t.lazy(()=>Ed).optional(),include:t.lazy(()=>_d).optional()}).strict(),$Q=t.object({select:t.lazy(()=>RX).nullish()}).strict(),RX=t.object({restaurants:t.boolean().optional(),users:t.boolean().optional()}).strict(),Ed=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurants:t.union([t.boolean(),t.lazy(()=>QK)]).optional(),users:t.union([t.boolean(),t.lazy(()=>dN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>$Q)]).optional()}).strict(),Ld=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>bN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),UI=t.object({select:t.lazy(()=>Vd).optional(),include:t.lazy(()=>Ld).optional()}).strict(),JQ=t.object({select:t.lazy(()=>kX).nullish()}).strict(),kX=t.object({items:t.boolean().optional(),transactions:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),Vd=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),name:t.boolean().optional(),type:t.boolean().optional(),isActive:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),items:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>bN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>JQ)]).optional()}).strict(),Hd=t.object({organization:t.union([t.boolean(),t.lazy(()=>$j)]).optional(),users:t.union([t.boolean(),t.lazy(()=>dN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>GK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>IN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>tX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>sN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),no=t.object({select:t.lazy(()=>Qd).optional(),include:t.lazy(()=>Hd).optional()}).strict(),KQ=t.object({select:t.lazy(()=>xX).nullish()}).strict(),xX=t.object({users:t.boolean().optional(),cookbooks:t.boolean().optional(),orders:t.boolean().optional(),recipes:t.boolean().optional(),menus:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),equipments:t.boolean().optional(),qualityChecklists:t.boolean().optional(),customerFeedbacks:t.boolean().optional()}).strict(),Qd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),address:t.boolean().optional(),city:t.boolean().optional(),zipCode:t.boolean().optional(),state:t.boolean().optional(),owner:t.boolean().optional(),organizationId:t.boolean().optional(),foodCost:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),isDeleted:t.boolean().optional(),deleted:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>$j)]).optional(),users:t.union([t.boolean(),t.lazy(()=>dN)]).optional(),cookbooks:t.union([t.boolean(),t.lazy(()=>GK)]).optional(),inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),orders:t.union([t.boolean(),t.lazy(()=>IN)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),menus:t.union([t.boolean(),t.lazy(()=>tX)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>sN)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>BK)]).optional(),qualityChecklists:t.union([t.boolean(),t.lazy(()=>FK)]).optional(),customerFeedbacks:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>KQ)]).optional()}).strict(),Yd=t.object({organization:t.union([t.boolean(),t.lazy(()=>$j)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>JK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>YK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>XK)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>sN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>LK)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>VK)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>bN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),Xt=t.object({select:t.lazy(()=>Gd).optional(),include:t.lazy(()=>Yd).optional()}).strict(),XQ=t.object({select:t.lazy(()=>jX).nullish()}).strict(),jX=t.object({shifts:t.boolean().optional(),prepItems:t.boolean().optional(),inventoryUpdates:t.boolean().optional(),sessions:t.boolean().optional(),passwordResets:t.boolean().optional(),leftoverItems:t.boolean().optional(),wasteRecords:t.boolean().optional(),productionPlans:t.boolean().optional(),productionPlanItems:t.boolean().optional(),availability:t.boolean().optional(),schedulingConstraints:t.boolean().optional(),inventoryWithdrawals:t.boolean().optional(),checklistCompletes:t.boolean().optional(),customerFeedbackResponses:t.boolean().optional(),recipeVersionsCreated:t.boolean().optional(),recipeVersionsApproved:t.boolean().optional(),InventoryTransactions:t.boolean().optional(),StockCounts:t.boolean().optional()}).strict(),Gd=t.object({id:t.boolean().optional(),email:t.boolean().optional(),sub:t.boolean().optional(),passwordHash:t.boolean().optional(),firstName:t.boolean().optional(),lastName:t.boolean().optional(),profileImage:t.boolean().optional(),verified:t.boolean().optional(),role:t.boolean().optional(),organizationId:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),organization:t.union([t.boolean(),t.lazy(()=>$j)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),shifts:t.union([t.boolean(),t.lazy(()=>JK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),inventoryUpdates:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),sessions:t.union([t.boolean(),t.lazy(()=>YK)]).optional(),passwordResets:t.union([t.boolean(),t.lazy(()=>XK)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),wasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),productionPlans:t.union([t.boolean(),t.lazy(()=>sN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),availability:t.union([t.boolean(),t.lazy(()=>LK)]).optional(),schedulingConstraints:t.union([t.boolean(),t.lazy(()=>VK)]).optional(),inventoryWithdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),checklistCompletes:t.union([t.boolean(),t.lazy(()=>pN)]).optional(),customerFeedbackResponses:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),recipeVersionsCreated:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),recipeVersionsApproved:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),InventoryTransactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),StockCounts:t.union([t.boolean(),t.lazy(()=>bN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>XQ)]).optional()}).strict(),$d=t.object({user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),amt=t.object({select:t.lazy(()=>Jd).optional(),include:t.lazy(()=>$d).optional()}).strict(),Jd=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),code:t.boolean().optional(),token:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Kd=t.object({recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),t0=t.object({select:t.lazy(()=>Xd).optional(),include:t.lazy(()=>Kd).optional()}).strict(),e0=t.object({select:t.lazy(()=>MX).nullish()}).strict(),MX=t.object({recipes:t.boolean().optional()}).strict(),Xd=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrl:t.boolean().optional(),category:t.boolean().optional(),restaurantId:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>e0)]).optional()}).strict(),tz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>t0)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>mN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>eX)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>oX)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>KK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>CN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>vQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>OQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>c0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),te=t.object({select:t.lazy(()=>ez).optional(),include:t.lazy(()=>tz).optional()}).strict(),o0=t.object({select:t.lazy(()=>ZX).nullish()}).strict(),ZX=t.object({ingredients:t.boolean().optional(),instructions:t.boolean().optional(),menuItems:t.boolean().optional(),foodCostHistory:t.boolean().optional(),prepHistory:t.boolean().optional(),prepBoards:t.boolean().optional(),prepItems:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),productionPlanItems:t.boolean().optional(),withdrawals:t.boolean().optional(),tags:t.boolean().optional(),versions:t.boolean().optional(),equipments:t.boolean().optional(),dietaryRestrictions:t.boolean().optional(),temperatures:t.boolean().optional(),yields:t.boolean().optional(),laborCosts:t.boolean().optional(),criticalPoints:t.boolean().optional(),photos:t.boolean().optional()}).strict(),ez=t.object({id:t.boolean().optional(),name:t.boolean().optional(),imageUrls:t.boolean().optional(),description:t.boolean().optional(),servings:t.boolean().optional(),cookTime:t.boolean().optional(),prepTime:t.boolean().optional(),frequency:t.boolean().optional(),restaurantId:t.boolean().optional(),cookBookId:t.boolean().optional(),foodCost:t.boolean().optional(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.boolean().optional(),language:t.boolean().optional(),skillLevel:t.boolean().optional(),category:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),cookBook:t.union([t.boolean(),t.lazy(()=>t0)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),instructions:t.union([t.boolean(),t.lazy(()=>mN)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),foodCostHistory:t.union([t.boolean(),t.lazy(()=>eX)]).optional(),prepHistory:t.union([t.boolean(),t.lazy(()=>oX)]).optional(),prepBoards:t.union([t.boolean(),t.lazy(()=>KK)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>CN)]).optional(),productionPlanItems:t.union([t.boolean(),t.lazy(()=>gT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),tags:t.union([t.boolean(),t.lazy(()=>_K)]).optional(),versions:t.union([t.boolean(),t.lazy(()=>SS)]).optional(),equipments:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),temperatures:t.union([t.boolean(),t.lazy(()=>OK)]).optional(),yields:t.union([t.boolean(),t.lazy(()=>fK)]).optional(),laborCosts:t.union([t.boolean(),t.lazy(()=>wK)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>vQ)]).optional(),criticalPoints:t.union([t.boolean(),t.lazy(()=>ZK)]).optional(),storage:t.union([t.boolean(),t.lazy(()=>OQ)]).optional(),photos:t.union([t.boolean(),t.lazy(()=>vK)]).optional(),recipeStats:t.union([t.boolean(),t.lazy(()=>c0)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>o0)]).optional()}).strict(),oz=t.object({recipeIngredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>gN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>$K)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>yN)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>n0)]).optional()}).strict(),ep=t.object({select:t.lazy(()=>nz).optional(),include:t.lazy(()=>oz).optional()}).strict(),n0=t.object({select:t.lazy(()=>vX).nullish()}).strict(),vX=t.object({recipeIngredients:t.boolean().optional(),inventoryItems:t.boolean().optional(),orderItems:t.boolean().optional(),vendors:t.boolean().optional(),WasteRecords:t.boolean().optional(),IngredientAllergens:t.boolean().optional(),priceHistory:t.boolean().optional(),DietaryRestrictions:t.boolean().optional()}).strict(),nz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),category:t.boolean().optional(),price:t.boolean().optional(),density:t.boolean().optional(),dietaryRestrictionId:t.boolean().optional(),calories:t.boolean().optional(),protein:t.boolean().optional(),carbohydrates:t.boolean().optional(),fat:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),sodium:t.boolean().optional(),usdaFoodId:t.boolean().optional(),nutritionSource:t.boolean().optional(),nutritionUpdatedAt:t.boolean().optional(),recipeIngredients:t.union([t.boolean(),t.lazy(()=>AT)]).optional(),inventoryItems:t.union([t.boolean(),t.lazy(()=>ST)]).optional(),orderItems:t.union([t.boolean(),t.lazy(()=>gN)]).optional(),vendors:t.union([t.boolean(),t.lazy(()=>$K)]).optional(),WasteRecords:t.union([t.boolean(),t.lazy(()=>IT)]).optional(),IngredientAllergens:t.union([t.boolean(),t.lazy(()=>yN)]).optional(),priceHistory:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),DietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>n0)]).optional()}).strict(),az=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Qj)]).optional()}).strict(),imt=t.object({select:t.lazy(()=>iz).optional(),include:t.lazy(()=>az).optional()}).strict(),iz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),processingInstructions:t.boolean().optional(),substituteIngredients:t.boolean().optional(),isOptional:t.boolean().optional(),notes:t.boolean().optional(),cost:t.boolean().optional(),density:t.boolean().optional(),yield:t.boolean().optional(),joinAt:t.boolean().optional(),recipeVersionId:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),recipeVersion:t.union([t.boolean(),t.lazy(()=>Qj)]).optional()}).strict(),lz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Qj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),a0=t.object({select:t.lazy(()=>rz).optional(),include:t.lazy(()=>lz).optional()}).strict(),i0=t.object({select:t.lazy(()=>OX).nullish()}).strict(),OX=t.object({equipment:t.boolean().optional()}).strict(),rz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),stepNumber:t.boolean().optional(),instruction:t.boolean().optional(),imageUrl:t.boolean().optional(),recipeVersionId:t.boolean().optional(),timeInMinutes:t.boolean().optional(),temperature:t.boolean().optional(),temperatureUnit:t.boolean().optional(),isCritical:t.boolean().optional(),techniqueTips:t.boolean().optional(),warningNotes:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),RecipeVersion:t.union([t.boolean(),t.lazy(()=>Qj)]).optional(),equipment:t.union([t.boolean(),t.lazy(()=>zT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>i0)]).optional()}).strict(),pz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>hN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),TS=t.object({select:t.lazy(()=>cz).optional(),include:t.lazy(()=>pz).optional()}).strict(),l0=t.object({select:t.lazy(()=>fX).nullish()}).strict(),fX=t.object({transactions:t.boolean().optional(),withdrawals:t.boolean().optional(),stockCounts:t.boolean().optional()}).strict(),cz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),minQuantity:t.boolean().optional(),restockThreshold:t.boolean().optional(),lastCountDate:t.boolean().optional(),lastOrderDate:t.boolean().optional(),lastUpdatedById:t.boolean().optional(),lastUpdated:t.boolean().optional(),par:t.boolean().optional(),reorderPoint:t.boolean().optional(),maxQuantity:t.boolean().optional(),location:t.boolean().optional(),barcode:t.boolean().optional(),notes:t.boolean().optional(),currentPrice:t.boolean().optional(),averageCost:t.boolean().optional(),lastPurchasePrice:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional(),lastUpdatedBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),transactions:t.union([t.boolean(),t.lazy(()=>TT)]).optional(),withdrawals:t.union([t.boolean(),t.lazy(()=>CT)]).optional(),stockCounts:t.union([t.boolean(),t.lazy(()=>hN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>l0)]).optional()}).strict(),uz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>TS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),lmt=t.object({select:t.lazy(()=>sz).optional(),include:t.lazy(()=>uz).optional()}).strict(),sz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),itemId:t.boolean().optional(),type:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),previousQty:t.boolean().optional(),newQty:t.boolean().optional(),cost:t.boolean().optional(),reference:t.boolean().optional(),notes:t.boolean().optional(),createdById:t.boolean().optional(),createdAt:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),item:t.union([t.boolean(),t.lazy(()=>TS)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),yz=t.object({inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>hN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>p0)]).optional()}).strict(),r0=t.object({select:t.lazy(()=>dz).optional(),include:t.lazy(()=>yz).optional()}).strict(),p0=t.object({select:t.lazy(()=>wX).nullish()}).strict(),wX=t.object({items:t.boolean().optional()}).strict(),dz=t.object({id:t.boolean().optional(),inventoryId:t.boolean().optional(),status:t.boolean().optional(),startedAt:t.boolean().optional(),completedAt:t.boolean().optional(),createdById:t.boolean().optional(),notes:t.boolean().optional(),inventory:t.union([t.boolean(),t.lazy(()=>UI)]).optional(),createdBy:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),items:t.union([t.boolean(),t.lazy(()=>hN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>p0)]).optional()}).strict(),zz=t.object({stockCount:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),item:t.union([t.boolean(),t.lazy(()=>TS)]).optional()}).strict(),rmt=t.object({select:t.lazy(()=>mz).optional(),include:t.lazy(()=>zz).optional()}).strict(),mz=t.object({id:t.boolean().optional(),stockCountId:t.boolean().optional(),itemId:t.boolean().optional(),expectedQty:t.boolean().optional(),actualQty:t.boolean().optional(),difference:t.boolean().optional(),notes:t.boolean().optional(),stockCount:t.union([t.boolean(),t.lazy(()=>r0)]).optional(),item:t.union([t.boolean(),t.lazy(()=>TS)]).optional()}).strict(),bz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),c0=t.object({select:t.lazy(()=>hz).optional(),include:t.lazy(()=>bz).optional()}).strict(),hz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),totalCost:t.boolean().optional(),profitMargin:t.boolean().optional(),averageRating:t.boolean().optional(),preparationCount:t.boolean().optional(),lastPrepared:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Iz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>Jj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>gN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>s0)]).optional()}).strict(),u0=t.object({select:t.lazy(()=>gz).optional(),include:t.lazy(()=>Iz).optional()}).strict(),s0=t.object({select:t.lazy(()=>NX).nullish()}).strict(),NX=t.object({items:t.boolean().optional()}).strict(),gz=t.object({id:t.boolean().optional(),restaurantId:t.boolean().optional(),vendorId:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),vendor:t.union([t.boolean(),t.lazy(()=>Jj)]).optional(),items:t.union([t.boolean(),t.lazy(()=>gN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>s0)]).optional()}).strict(),Cz=t.object({order:t.union([t.boolean(),t.lazy(()=>u0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),pmt=t.object({select:t.lazy(()=>Az).optional(),include:t.lazy(()=>Cz).optional()}).strict(),Az=t.object({id:t.boolean().optional(),orderId:t.boolean().optional(),ingredientId:t.boolean().optional(),quantity:t.boolean().optional(),unit:t.boolean().optional(),price:t.boolean().optional(),order:t.union([t.boolean(),t.lazy(()=>u0)]).optional(),ingredient:t.union([t.boolean(),t.lazy(()=>ep)]).optional()}).strict(),Sz=t.object({orders:t.union([t.boolean(),t.lazy(()=>IN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>zN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>y0)]).optional()}).strict(),Jj=t.object({select:t.lazy(()=>Tz).optional(),include:t.lazy(()=>Sz).optional()}).strict(),y0=t.object({select:t.lazy(()=>BX).nullish()}).strict(),BX=t.object({orders:t.boolean().optional(),ingredients:t.boolean().optional(),supplierPriceHistory:t.boolean().optional()}).strict(),Tz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),contact:t.boolean().optional(),email:t.boolean().optional(),phone:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),orders:t.union([t.boolean(),t.lazy(()=>IN)]).optional(),ingredients:t.union([t.boolean(),t.lazy(()=>zN)]).optional(),supplierPriceHistory:t.union([t.boolean(),t.lazy(()=>uN)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>y0)]).optional()}).strict(),Pz=t.object({user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>z0)]).optional()}).strict(),d0=t.object({select:t.lazy(()=>Uz).optional(),include:t.lazy(()=>Pz).optional()}).strict(),z0=t.object({select:t.lazy(()=>qX).nullish()}).strict(),qX=t.object({tasks:t.boolean().optional()}).strict(),Uz=t.object({id:t.boolean().optional(),userId:t.boolean().optional(),startTime:t.boolean().optional(),endTime:t.boolean().optional(),status:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional(),tasks:t.union([t.boolean(),t.lazy(()=>EK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>z0)]).optional()}).strict(),Wz=t.object({recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>b0)]).optional()}).strict(),m0=t.object({select:t.lazy(()=>Rz).optional(),include:t.lazy(()=>Wz).optional()}).strict(),b0=t.object({select:t.lazy(()=>FX).nullish()}).strict(),FX=t.object({recipes:t.boolean().optional(),prepItems:t.boolean().optional()}).strict(),Rz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),status:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),prepItems:t.union([t.boolean(),t.lazy(()=>PT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>b0)]).optional()}).strict(),kz=t.object({prepBoard:t.union([t.boolean(),t.lazy(()=>m0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),cmt=t.object({select:t.lazy(()=>xz).optional(),include:t.lazy(()=>kz).optional()}).strict(),xz=t.object({id:t.boolean().optional(),prepBoardId:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),status:t.boolean().optional(),assignedToId:t.boolean().optional(),prepBoard:t.union([t.boolean(),t.lazy(()=>m0)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional(),assignedTo:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),jz=t.object({user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),umt=t.object({select:t.lazy(()=>Mz).optional(),include:t.lazy(()=>jz).optional()}).strict(),Mz=t.object({id:t.boolean().optional(),token:t.boolean().optional(),userId:t.boolean().optional(),expiresAt:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),user:t.union([t.boolean(),t.lazy(()=>Xt)]).optional()}).strict(),Zz=t.object({restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>h0)]).optional()}).strict(),Kj=t.object({select:t.lazy(()=>vz).optional(),include:t.lazy(()=>Zz).optional()}).strict(),h0=t.object({select:t.lazy(()=>DX).nullish()}).strict(),DX=t.object({menuItems:t.boolean().optional(),MenuCategory:t.boolean().optional()}).strict(),vz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),restaurantId:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),restaurant:t.union([t.boolean(),t.lazy(()=>no)]).optional(),menuItems:t.union([t.boolean(),t.lazy(()=>cg)]).optional(),MenuCategory:t.union([t.boolean(),t.lazy(()=>NK)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>h0)]).optional()}).strict(),Oz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),smt=t.object({select:t.lazy(()=>fz).optional(),include:t.lazy(()=>Oz).optional()}).strict(),fz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),recipeId:t.boolean().optional(),joinAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),wz=t.object({menu:t.union([t.boolean(),t.lazy(()=>Kj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>fQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>CN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>g0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>HK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>I0)]).optional()}).strict(),op=t.object({select:t.lazy(()=>Nz).optional(),include:t.lazy(()=>wz).optional()}).strict(),I0=t.object({select:t.lazy(()=>_X).nullish()}).strict(),_X=t.object({recipes:t.boolean().optional(),menuItemRecipes:t.boolean().optional(),recommendations:t.boolean().optional(),salesTransactions:t.boolean().optional(),leftoverItems:t.boolean().optional(),feedback:t.boolean().optional(),dietaryRestrictions:t.boolean().optional()}).strict(),Nz=t.object({id:t.boolean().optional(),name:t.boolean().optional(),description:t.boolean().optional(),price:t.boolean().optional(),foodCost:t.boolean().optional(),isActive:t.boolean().optional(),recipeIds:t.boolean().optional(),recipeServingsAmount:t.boolean().optional(),recipeServingsCost:t.boolean().optional(),allergens:t.boolean().optional(),menuId:t.boolean().optional(),categoryId:t.boolean().optional(),menu:t.union([t.boolean(),t.lazy(()=>Kj)]).optional(),category:t.union([t.boolean(),t.lazy(()=>fQ)]).optional(),recipes:t.union([t.boolean(),t.lazy(()=>yp)]).optional(),menuItemRecipes:t.union([t.boolean(),t.lazy(()=>CN)]).optional(),nutritionalInfo:t.union([t.boolean(),t.lazy(()=>g0)]).optional(),recommendations:t.union([t.boolean(),t.lazy(()=>HK)]).optional(),salesTransactions:t.union([t.boolean(),t.lazy(()=>rN)]).optional(),leftoverItems:t.union([t.boolean(),t.lazy(()=>hT)]).optional(),feedback:t.union([t.boolean(),t.lazy(()=>mT)]).optional(),dietaryRestrictions:t.union([t.boolean(),t.lazy(()=>bT)]).optional(),_count:t.union([t.boolean(),t.lazy(()=>I0)]).optional()}).strict(),Bz=t.object({menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),g0=t.object({select:t.lazy(()=>qz).optional(),include:t.lazy(()=>Bz).optional()}).strict(),qz=t.object({id:t.boolean().optional(),menuItemId:t.boolean().optional(),calories:t.boolean().optional(),fat:t.boolean().optional(),saturatedFat:t.boolean().optional(),transFat:t.boolean().optional(),cholesterol:t.boolean().optional(),sodium:t.boolean().optional(),carbohydrates:t.boolean().optional(),fiber:t.boolean().optional(),sugar:t.boolean().optional(),protein:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),menuItem:t.union([t.boolean(),t.lazy(()=>op)]).optional()}).strict(),Fz=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),ymt=t.object({select:t.lazy(()=>Dz).optional(),include:t.lazy(()=>Fz).optional()}).strict(),Dz=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),cost:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),_z=t.object({recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),dmt=t.object({select:t.lazy(()=>Ez).optional(),include:t.lazy(()=>_z).optional()}).strict(),Ez=t.object({id:t.boolean().optional(),recipeId:t.boolean().optional(),quantity:t.boolean().optional(),date:t.boolean().optional(),createdAt:t.boolean().optional(),updatedAt:t.boolean().optional(),recipe:t.union([t.boolean(),t.lazy(()=>te)]).optional()}).strict(),Be=t.object({AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),jm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ql=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),OR:t.lazy(()=>Be).array().optional(),NOT:t.union([t.lazy(()=>Be),t.lazy(()=>Be).array()]).optional(),servingSize:t.union([t.lazy(()=>R),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>S),t.string()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>mt),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),GL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional(),_count:t.lazy(()=>EX).optional(),_avg:t.lazy(()=>LX).optional(),_max:t.lazy(()=>VX).optional(),_min:t.lazy(()=>HX).optional(),_sum:t.lazy(()=>QX).optional()}).strict(),DC=t.object({AND:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),OR:t.lazy(()=>DC).array().optional(),NOT:t.union([t.lazy(()=>DC),t.lazy(()=>DC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),servingSize:t.union([t.lazy(()=>Wt),t.number()]).optional(),servingUnit:t.union([t.lazy(()=>bt),t.string()]).optional(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),containsGluten:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsDairy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsNuts:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsEggs:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSoy:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsFish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsShellfish:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),containsSesame:t.union([t.lazy(()=>Jn),t.boolean()]).optional()}).strict(),oa=t.object({AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),tb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),be=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),OR:t.lazy(()=>oa).array().optional(),NOT:t.union([t.lazy(()=>oa),t.lazy(()=>oa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),$L=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>YX).optional(),_avg:t.lazy(()=>GX).optional(),_max:t.lazy(()=>$X).optional(),_min:t.lazy(()=>JX).optional(),_sum:t.lazy(()=>KX).optional()}).strict(),_C=t.object({AND:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),OR:t.lazy(()=>_C).array().optional(),NOT:t.union([t.lazy(()=>_C),t.lazy(()=>_C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),threshold:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),qe=t.object({AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),temperature:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),Mm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Fl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),OR:t.lazy(()=>qe).array().optional(),NOT:t.union([t.lazy(()=>qe),t.lazy(()=>qe).array()]).optional(),temperature:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>S),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>s),t.number().int()]).optional(),containerType:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),JL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),specialNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>XX).optional(),_avg:t.lazy(()=>ttt).optional(),_max:t.lazy(()=>ett).optional(),_min:t.lazy(()=>ott).optional(),_sum:t.lazy(()=>ntt).optional()}).strict(),EC=t.object({AND:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),OR:t.lazy(()=>EC).array().optional(),NOT:t.union([t.lazy(()=>EC),t.lazy(()=>EC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),method:t.union([t.lazy(()=>bt),t.string()]).optional(),shelfLife:t.union([t.lazy(()=>A),t.number()]).optional(),containerType:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),specialNotes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),na=t.object({AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>pB),t.lazy(()=>de)]).optional(),stepNumber:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),eb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),he=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),OR:t.lazy(()=>na).array().optional(),NOT:t.union([t.lazy(()=>na),t.lazy(()=>na).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>pB),t.lazy(()=>de)]).optional(),stepNumber:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),KL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>att).optional(),_avg:t.lazy(()=>itt).optional(),_max:t.lazy(()=>ltt).optional(),_min:t.lazy(()=>rtt).optional(),_sum:t.lazy(()=>ptt).optional()}).strict(),LC=t.object({AND:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),OR:t.lazy(()=>LC).array().optional(),NOT:t.union([t.lazy(()=>LC),t.lazy(()=>LC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),url:t.union([t.lazy(()=>bt),t.string()]).optional(),type:t.union([t.lazy(()=>ctt),t.lazy(()=>de)]).optional(),stepNumber:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),aa=t.object({AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),ob=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),OR:t.lazy(()=>aa).array().optional(),NOT:t.union([t.lazy(()=>aa),t.lazy(()=>aa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),XL=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>utt).optional(),_avg:t.lazy(()=>stt).optional(),_max:t.lazy(()=>ytt).optional(),_min:t.lazy(()=>dtt).optional(),_sum:t.lazy(()=>ztt).optional()}).strict(),VC=t.object({AND:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),OR:t.lazy(()=>VC).array().optional(),NOT:t.union([t.lazy(()=>VC),t.lazy(()=>VC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),minTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>Wt),t.number()]).optional(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ia=t.object({AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),nb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),ge=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),OR:t.lazy(()=>ia).array().optional(),NOT:t.union([t.lazy(()=>ia),t.lazy(()=>ia).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),tV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>mtt).optional(),_avg:t.lazy(()=>btt).optional(),_max:t.lazy(()=>htt).optional(),_min:t.lazy(()=>Itt).optional(),_sum:t.lazy(()=>gtt).optional()}).strict(),HC=t.object({AND:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),OR:t.lazy(()=>HC).array().optional(),NOT:t.union([t.lazy(()=>HC),t.lazy(()=>HC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualYield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),la=t.object({AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),ab=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Ce=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),OR:t.lazy(()=>la).array().optional(),NOT:t.union([t.lazy(()=>la),t.lazy(()=>la).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),eV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ctt).optional(),_avg:t.lazy(()=>Att).optional(),_max:t.lazy(()=>Stt).optional(),_min:t.lazy(()=>Ttt).optional(),_sum:t.lazy(()=>Ptt).optional()}).strict(),QC=t.object({AND:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),OR:t.lazy(()=>QC).array().optional(),NOT:t.union([t.lazy(()=>QC),t.lazy(()=>QC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),laborRate:t.union([t.lazy(()=>Wt),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ra=t.object({AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional()}).strict(),ib=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),menuItem:t.lazy(()=>Bl).optional()}).strict(),ht=t.union([t.object({id:t.number().int(),posTransactionID:t.string()}),t.object({id:t.number().int()}),t.object({posTransactionID:t.string()})]).and(t.object({id:t.number().int().optional(),posTransactionID:t.string().optional(),AND:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),OR:t.lazy(()=>ra).array().optional(),NOT:t.union([t.lazy(()=>ra),t.lazy(()=>ra).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional()}).strict()),oV=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Utt).optional(),_avg:t.lazy(()=>Wtt).optional(),_max:t.lazy(()=>Rtt).optional(),_min:t.lazy(()=>ktt).optional(),_sum:t.lazy(()=>xtt).optional()}).strict(),YC=t.object({AND:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),OR:t.lazy(()=>YC).array().optional(),NOT:t.union([t.lazy(()=>YC),t.lazy(()=>YC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),total:t.union([t.lazy(()=>Wt),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),we=t.object({AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>dM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>kI).optional()}).strict(),Zm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menu:t.lazy(()=>Gp).optional(),menuItems:t.lazy(()=>zM).optional()}).strict(),ee=t.union([t.object({id:t.number().int(),menuId_name:t.lazy(()=>kN)}),t.object({id:t.number().int()}),t.object({menuId_name:t.lazy(()=>kN)})]).and(t.object({id:t.number().int().optional(),menuId_name:t.lazy(()=>kN).optional(),AND:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),OR:t.lazy(()=>we).array().optional(),NOT:t.union([t.lazy(()=>we),t.lazy(()=>we).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menu:t.union([t.lazy(()=>dM),t.lazy(()=>fe)]).optional(),menuItems:t.lazy(()=>kI).optional()}).strict()),nV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>jtt).optional(),_avg:t.lazy(()=>Mtt).optional(),_max:t.lazy(()=>Ztt).optional(),_min:t.lazy(()=>vtt).optional(),_sum:t.lazy(()=>Ott).optional()}).strict(),GC=t.object({AND:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),OR:t.lazy(()=>GC).array().optional(),NOT:t.union([t.lazy(()=>GC),t.lazy(()=>GC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>A),t.number()]).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),le=t.object({AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),ingredients:t.lazy(()=>US).optional(),instructions:t.lazy(()=>mM).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),approvedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict(),Lp=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional(),ingredients:t.lazy(()=>cB).optional(),instructions:t.lazy(()=>c4).optional(),createdBy:t.lazy(()=>eo).optional(),approvedBy:t.lazy(()=>eo).optional()}).strict(),N=t.union([t.object({id:t.number().int(),recipeId_versionNumber:t.lazy(()=>xN)}),t.object({id:t.number().int()}),t.object({recipeId_versionNumber:t.lazy(()=>xN)})]).and(t.object({id:t.number().int().optional(),recipeId_versionNumber:t.lazy(()=>xN).optional(),AND:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),OR:t.lazy(()=>le).array().optional(),NOT:t.union([t.lazy(()=>le),t.lazy(()=>le).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),approvedById:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),ingredients:t.lazy(()=>US).optional(),instructions:t.lazy(()=>mM).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),approvedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict()),aV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),changes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),approvedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>ftt).optional(),_avg:t.lazy(()=>wtt).optional(),_max:t.lazy(()=>Ntt).optional(),_min:t.lazy(()=>Btt).optional(),_sum:t.lazy(()=>qtt).optional()}).strict(),$C=t.object({AND:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),OR:t.lazy(()=>$C).array().optional(),NOT:t.union([t.lazy(()=>$C),t.lazy(()=>$C).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),approvedById:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ze=t.object({AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>uB),t.lazy(()=>Ft)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),recipes:t.lazy(()=>WS).optional(),maintenanceLogs:t.lazy(()=>u4).optional()}).strict(),Vp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),recipes:t.lazy(()=>sB).optional(),maintenanceLogs:t.lazy(()=>Ftt).optional()}).strict(),Yt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),OR:t.lazy(()=>Ze).array().optional(),NOT:t.union([t.lazy(()=>Ze),t.lazy(()=>Ze).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>uB),t.lazy(()=>Ft)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),recipes:t.lazy(()=>WS).optional(),maintenanceLogs:t.lazy(()=>u4).optional()}).strict()),iV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),model:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),serialNumber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),purchaseDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nextMaintenance:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),status:t.lazy(()=>e).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dtt).optional(),_avg:t.lazy(()=>_tt).optional(),_max:t.lazy(()=>Ett).optional(),_min:t.lazy(()=>Ltt).optional(),_sum:t.lazy(()=>Vtt).optional()}).strict(),JC=t.object({AND:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),OR:t.lazy(()=>JC).array().optional(),NOT:t.union([t.lazy(()=>JC),t.lazy(()=>JC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>Htt),t.lazy(()=>Ft)]).optional(),location:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),pa=t.object({AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),equipment:t.union([t.lazy(()=>bM),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>s4),t.lazy(()=>Ne)]).optional().nullable()}).strict(),lb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),equipment:t.lazy(()=>Vp).optional(),RecipeInstruction:t.lazy(()=>Bm).optional()}).strict(),q=t.union([t.object({id:t.number().int(),recipeId_equipmentId:t.lazy(()=>jN)}),t.object({id:t.number().int()}),t.object({recipeId_equipmentId:t.lazy(()=>jN)})]).and(t.object({id:t.number().int().optional(),recipeId_equipmentId:t.lazy(()=>jN).optional(),AND:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),OR:t.lazy(()=>pa).array().optional(),NOT:t.union([t.lazy(()=>pa),t.lazy(()=>pa).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),equipment:t.union([t.lazy(()=>bM),t.lazy(()=>Ze)]).optional(),RecipeInstruction:t.union([t.lazy(()=>s4),t.lazy(()=>Ne)]).optional().nullable()}).strict()),lV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeInstructionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Qtt).optional(),_avg:t.lazy(()=>Ytt).optional(),_max:t.lazy(()=>Gtt).optional(),_min:t.lazy(()=>$tt).optional(),_sum:t.lazy(()=>Jtt).optional()}).strict(),KC=t.object({AND:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),OR:t.lazy(()=>KC).array().optional(),NOT:t.union([t.lazy(()=>KC),t.lazy(()=>KC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable()}).strict(),ca=t.object({AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>yB),t.lazy(()=>ce)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>bM),t.lazy(()=>Ze)]).optional()}).strict(),rb=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),equipment:t.lazy(()=>Vp).optional()}).strict(),Ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),OR:t.lazy(()=>ca).array().optional(),NOT:t.union([t.lazy(()=>ca),t.lazy(()=>ca).array()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>yB),t.lazy(()=>ce)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),equipment:t.union([t.lazy(()=>bM),t.lazy(()=>Ze)]).optional()}).strict()),rV=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ktt).optional(),_avg:t.lazy(()=>Xtt).optional(),_max:t.lazy(()=>tet).optional(),_min:t.lazy(()=>eet).optional(),_sum:t.lazy(()=>oet).optional()}).strict(),XC=t.object({AND:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),OR:t.lazy(()=>XC).array().optional(),NOT:t.union([t.lazy(()=>XC),t.lazy(()=>XC).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>net),t.lazy(()=>ce)]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>bt),t.string()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ve=t.object({AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>dB),t.lazy(()=>Dt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>y4).optional(),completions:t.lazy(()=>hM).optional()}).strict(),Hp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),items:t.lazy(()=>aet).optional(),completions:t.lazy(()=>d4).optional()}).strict(),Gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),OR:t.lazy(()=>ve).array().optional(),NOT:t.union([t.lazy(()=>ve),t.lazy(()=>ve).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>dB),t.lazy(()=>Dt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>y4).optional(),completions:t.lazy(()=>hM).optional()}).strict()),pV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>iet).optional(),_avg:t.lazy(()=>ret).optional(),_max:t.lazy(()=>pet).optional(),_min:t.lazy(()=>cet).optional(),_sum:t.lazy(()=>uet).optional()}).strict(),tA=t.object({AND:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),OR:t.lazy(()=>tA).array().optional(),NOT:t.union([t.lazy(()=>tA),t.lazy(()=>tA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>set),t.lazy(()=>Dt)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Qe=t.object({AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>Ht)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>IM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>gM).optional()}).strict(),vm=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Hp).optional(),completions:t.lazy(()=>z4).optional()}).strict(),oe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),OR:t.lazy(()=>Qe).array().optional(),NOT:t.union([t.lazy(()=>Qe),t.lazy(()=>Qe).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>Ht)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>IM),t.lazy(()=>ve)]).optional(),completions:t.lazy(()=>gM).optional()}).strict()),cV=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>yet).optional(),_avg:t.lazy(()=>det).optional(),_max:t.lazy(()=>zet).optional(),_min:t.lazy(()=>met).optional(),_sum:t.lazy(()=>bet).optional()}).strict(),eA=t.object({AND:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),OR:t.lazy(()=>eA).array().optional(),NOT:t.union([t.lazy(()=>eA),t.lazy(()=>eA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),description:t.union([t.lazy(()=>bt),t.string()]).optional(),order:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>het),t.lazy(()=>Ht)]).optional(),requiredPhotos:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ye=t.object({AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>IM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>gM).optional()}).strict(),Om=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklist:t.lazy(()=>Hp).optional(),completedBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>z4).optional()}).strict(),rt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),OR:t.lazy(()=>Ye).array().optional(),NOT:t.union([t.lazy(()=>Ye),t.lazy(()=>Ye).array()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number().int()]).optional(),completedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklist:t.union([t.lazy(()=>IM),t.lazy(()=>ve)]).optional(),completedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>gM).optional()}).strict()),uV=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Iet).optional(),_avg:t.lazy(()=>get).optional(),_max:t.lazy(()=>Cet).optional(),_min:t.lazy(()=>Aet).optional(),_sum:t.lazy(()=>Tet).optional()}).strict(),oA=t.object({AND:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),OR:t.lazy(()=>oA).array().optional(),NOT:t.union([t.lazy(()=>oA),t.lazy(()=>oA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistId:t.union([t.lazy(()=>A),t.number()]).optional(),completedById:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ua=t.object({AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Vt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Il).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>m4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>b4),t.lazy(()=>Qe)]).optional()}).strict(),pb=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),checklistComplete:t.lazy(()=>Om).optional(),checklistItem:t.lazy(()=>vm).optional()}).strict(),It=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),OR:t.lazy(()=>ua).array().optional(),NOT:t.union([t.lazy(()=>ua),t.lazy(()=>ua).array()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number().int()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Vt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Il).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),checklistComplete:t.union([t.lazy(()=>m4),t.lazy(()=>Ye)]).optional(),checklistItem:t.union([t.lazy(()=>b4),t.lazy(()=>Qe)]).optional()}).strict()),sV=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Pet).optional(),_avg:t.lazy(()=>Uet).optional(),_max:t.lazy(()=>Wet).optional(),_min:t.lazy(()=>Ret).optional(),_sum:t.lazy(()=>ket).optional()}).strict(),nA=t.object({AND:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),OR:t.lazy(()=>nA).array().optional(),NOT:t.union([t.lazy(()=>nA),t.lazy(()=>nA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>A),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>xet),t.lazy(()=>Vt)]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Il).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),sa=t.object({AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>CM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional()}).strict(),cb=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),vendor:t.lazy(()=>Yp).optional(),ingredient:t.lazy(()=>Nl).optional()}).strict(),gt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),OR:t.lazy(()=>sa).array().optional(),NOT:t.union([t.lazy(()=>sa),t.lazy(()=>sa).array()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),vendor:t.union([t.lazy(()=>CM),t.lazy(()=>Oe)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional()}).strict()),yV=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>jet).optional(),_avg:t.lazy(()=>Met).optional(),_max:t.lazy(()=>Zet).optional(),_min:t.lazy(()=>vet).optional(),_sum:t.lazy(()=>Oet).optional()}).strict(),aA=t.object({AND:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),OR:t.lazy(()=>aA).array().optional(),NOT:t.union([t.lazy(()=>aA),t.lazy(()=>aA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),startDate:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ya=t.object({AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>Il).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>AM),t.lazy(()=>Pt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict(),ub=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),menuItem:t.lazy(()=>Bl).optional(),respondedBy:t.lazy(()=>eo).optional()}).strict(),F=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),OR:t.lazy(()=>ya).array().optional(),NOT:t.union([t.lazy(()=>ya),t.lazy(()=>ya).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),menuItemId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number().int()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>Il).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>AM),t.lazy(()=>Pt)]).optional().nullable(),respondedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict()),dV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),rating:t.lazy(()=>e).optional(),comment:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),respondedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fet).optional(),_avg:t.lazy(()=>wet).optional(),_max:t.lazy(()=>Net).optional(),_min:t.lazy(()=>Bet).optional(),_sum:t.lazy(()=>qet).optional()}).strict(),iA=t.object({AND:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),OR:t.lazy(()=>iA).array().optional(),NOT:t.union([t.lazy(()=>iA),t.lazy(()=>iA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>A),t.number()]).optional(),comment:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>Fet),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>Il).optional(),status:t.union([t.lazy(()=>Det),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),da=t.object({AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>kI).optional(),recipes:t.lazy(()=>ip).optional(),ingredients:t.lazy(()=>SM).optional()}).strict(),sb=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItems:t.lazy(()=>zM).optional(),recipes:t.lazy(()=>RS).optional(),ingredients:t.lazy(()=>h4).optional()}).strict(),D=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),OR:t.lazy(()=>da).array().optional(),NOT:t.union([t.lazy(()=>da),t.lazy(()=>da).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItems:t.lazy(()=>kI).optional(),recipes:t.lazy(()=>ip).optional(),ingredients:t.lazy(()=>SM).optional()}).strict()),zV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),icon:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>_et).optional(),_avg:t.lazy(()=>Eet).optional(),_max:t.lazy(()=>Let).optional(),_min:t.lazy(()=>Vet).optional(),_sum:t.lazy(()=>Het).optional()}).strict(),lA=t.object({AND:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),OR:t.lazy(()=>lA).array().optional(),NOT:t.union([t.lazy(()=>lA),t.lazy(()=>lA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),za=t.object({AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ip).optional()}).strict(),yb=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>RS).optional()}).strict(),Se=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),OR:t.lazy(()=>za).array().optional(),NOT:t.union([t.lazy(()=>za),t.lazy(()=>za).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ip).optional()}).strict()),mV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qet).optional(),_avg:t.lazy(()=>Yet).optional(),_max:t.lazy(()=>Get).optional(),_min:t.lazy(()=>$et).optional(),_sum:t.lazy(()=>Jet).optional()}).strict(),rA=t.object({AND:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),OR:t.lazy(()=>rA).array().optional(),NOT:t.union([t.lazy(()=>rA),t.lazy(()=>rA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ma=t.object({AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional(),recordedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),db=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),menuItem:t.lazy(()=>Bl).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),_=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),OR:t.lazy(()=>ma).array().optional(),NOT:t.union([t.lazy(()=>ma),t.lazy(()=>ma).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional(),recordedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),bV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ket).optional(),_avg:t.lazy(()=>Xet).optional(),_max:t.lazy(()=>tot).optional(),_min:t.lazy(()=>eot).optional(),_sum:t.lazy(()=>oot).optional()}).strict(),pA=t.object({AND:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),OR:t.lazy(()=>pA).array().optional(),NOT:t.union([t.lazy(()=>pA),t.lazy(()=>pA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),reason:t.union([t.lazy(()=>bt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ba=t.object({AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),ingrediente:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),recordedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),zb=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),ingrediente:t.lazy(()=>Nl).optional(),recordedBy:t.lazy(()=>eo).optional()}).strict(),E=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),OR:t.lazy(()=>ba).array().optional(),NOT:t.union([t.lazy(()=>ba),t.lazy(()=>ba).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),ingrediente:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),recordedBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),hV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>not).optional(),_avg:t.lazy(()=>aot).optional(),_max:t.lazy(()=>iot).optional(),_min:t.lazy(()=>lot).optional(),_sum:t.lazy(()=>rot).optional()}).strict(),cA=t.object({AND:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),OR:t.lazy(()=>cA).array().optional(),NOT:t.union([t.lazy(()=>cA),t.lazy(()=>cA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),reason:t.union([t.lazy(()=>bt),t.string()]).optional(),recordedById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ge=t.object({AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>wt)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>kS).optional()}).strict(),fm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>gB).optional()}).strict(),pt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),OR:t.lazy(()=>Ge).array().optional(),NOT:t.union([t.lazy(()=>Ge),t.lazy(()=>Ge).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>wt)]).optional(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>kS).optional()}).strict()),IV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>pot).optional(),_avg:t.lazy(()=>cot).optional(),_max:t.lazy(()=>uot).optional(),_min:t.lazy(()=>sot).optional(),_sum:t.lazy(()=>yot).optional()}).strict(),uA=t.object({AND:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),OR:t.lazy(()=>uA).array().optional(),NOT:t.union([t.lazy(()=>uA),t.lazy(()=>uA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>dot),t.lazy(()=>wt)]).optional(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ha=t.object({AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>I4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict(),mb=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),productionPlan:t.lazy(()=>fm).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),L=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),OR:t.lazy(()=>ha).array().optional(),NOT:t.union([t.lazy(()=>ha),t.lazy(()=>ha).array()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),productionPlan:t.union([t.lazy(()=>I4),t.lazy(()=>Ge)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable()}).strict()),gV=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>zot).optional(),_avg:t.lazy(()=>mot).optional(),_max:t.lazy(()=>bot).optional(),_min:t.lazy(()=>hot).optional(),_sum:t.lazy(()=>Iot).optional()}).strict(),sA=t.object({AND:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),OR:t.lazy(()=>sA).array().optional(),NOT:t.union([t.lazy(()=>sA),t.lazy(()=>sA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ia=t.object({AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>CB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>g4),t.lazy(()=>Xe)]).optional()}).strict(),bb=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),shift:t.lazy(()=>_m).optional()}).strict(),Te=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),OR:t.lazy(()=>Ia).array().optional(),NOT:t.union([t.lazy(()=>Ia),t.lazy(()=>Ia).array()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number().int()]).optional(),taskType:t.union([t.lazy(()=>CB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),shift:t.union([t.lazy(()=>g4),t.lazy(()=>Xe)]).optional()}).strict()),CV=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>got).optional(),_avg:t.lazy(()=>Cot).optional(),_max:t.lazy(()=>Aot).optional(),_min:t.lazy(()=>Sot).optional(),_sum:t.lazy(()=>Tot).optional()}).strict(),yA=t.object({AND:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),OR:t.lazy(()=>yA).array().optional(),NOT:t.union([t.lazy(()=>yA),t.lazy(()=>yA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),shiftId:t.union([t.lazy(()=>A),t.number()]).optional(),taskType:t.union([t.lazy(()=>Pot),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ga=t.object({AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>AB),t.lazy(()=>se)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),hb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Pe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),OR:t.lazy(()=>ga).array().optional(),NOT:t.union([t.lazy(()=>ga),t.lazy(()=>ga).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dayOfWeek:t.union([t.lazy(()=>AB),t.lazy(()=>se)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),AV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Uot).optional(),_avg:t.lazy(()=>Wot).optional(),_max:t.lazy(()=>Rot).optional(),_min:t.lazy(()=>kot).optional(),_sum:t.lazy(()=>xot).optional()}).strict(),dA=t.object({AND:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),OR:t.lazy(()=>dA).array().optional(),NOT:t.union([t.lazy(()=>dA),t.lazy(()=>dA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>jot),t.lazy(()=>se)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ca=t.object({AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>SB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),Ib=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Ue=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),OR:t.lazy(()=>Ca).array().optional(),NOT:t.union([t.lazy(()=>Ca),t.lazy(()=>Ca).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>SB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),SV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Mot).optional(),_avg:t.lazy(()=>Zot).optional(),_max:t.lazy(()=>vot).optional(),_min:t.lazy(()=>Oot).optional(),_sum:t.lazy(()=>fot).optional()}).strict(),zA=t.object({AND:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),OR:t.lazy(()=>zA).array().optional(),NOT:t.union([t.lazy(()=>zA),t.lazy(()=>zA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>wot),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Aa=t.object({AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional(),recipe:t.union([t.lazy(()=>C4),t.lazy(()=>O)]).optional().nullable(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),gb=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),inventoryItem:t.lazy(()=>mp).optional(),recipe:t.lazy(()=>oo).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),V=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),OR:t.lazy(()=>Aa).array().optional(),NOT:t.union([t.lazy(()=>Aa),t.lazy(()=>Aa).array()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventoryItem:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional(),recipe:t.union([t.lazy(()=>C4),t.lazy(()=>O)]).optional().nullable(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),TV=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Not).optional(),_avg:t.lazy(()=>Bot).optional(),_max:t.lazy(()=>qot).optional(),_min:t.lazy(()=>Fot).optional(),_sum:t.lazy(()=>Dot).optional()}).strict(),mA=t.object({AND:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),OR:t.lazy(()=>mA).array().optional(),NOT:t.union([t.lazy(()=>mA),t.lazy(()=>mA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>A),t.number()]).optional(),dateTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),recipeId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),co=t.object({AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>TM).optional()}).strict(),wm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),ingredients:t.lazy(()=>A4).optional()}).strict(),np=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),OR:t.lazy(()=>co).array().optional(),NOT:t.union([t.lazy(()=>co),t.lazy(()=>co).array()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),ingredients:t.lazy(()=>TM).optional()}).strict()),PV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>_ot).optional(),_avg:t.lazy(()=>Eot).optional(),_max:t.lazy(()=>Lot).optional(),_min:t.lazy(()=>Vot).optional(),_sum:t.lazy(()=>Hot).optional()}).strict(),bA=t.object({AND:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),OR:t.lazy(()=>bA).array().optional(),NOT:t.union([t.lazy(()=>bA),t.lazy(()=>bA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Sa=t.object({AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),allergen:t.union([t.lazy(()=>S4),t.lazy(()=>co)]).optional()}).strict(),Cb=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),ingredient:t.lazy(()=>Nl).optional(),allergen:t.lazy(()=>wm).optional()}).strict(),Ct=t.union([t.object({id:t.number().int(),ingredientId_allergenId:t.lazy(()=>MN)}),t.object({id:t.number().int()}),t.object({ingredientId_allergenId:t.lazy(()=>MN)})]).and(t.object({id:t.number().int().optional(),ingredientId_allergenId:t.lazy(()=>MN).optional(),AND:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),OR:t.lazy(()=>Sa).array().optional(),NOT:t.union([t.lazy(()=>Sa),t.lazy(()=>Sa).array()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),allergen:t.union([t.lazy(()=>S4),t.lazy(()=>co)]).optional()}).strict()),UV=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional(),_count:t.lazy(()=>Qot).optional(),_avg:t.lazy(()=>Yot).optional(),_max:t.lazy(()=>Got).optional(),_min:t.lazy(()=>$ot).optional(),_sum:t.lazy(()=>Jot).optional()}).strict(),hA=t.object({AND:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),OR:t.lazy(()=>hA).array().optional(),NOT:t.union([t.lazy(()=>hA),t.lazy(()=>hA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),allergenId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),Ta=t.object({AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional()}).strict(),Ab=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Bl).optional()}).strict(),We=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),OR:t.lazy(()=>Ta).array().optional(),NOT:t.union([t.lazy(()=>Ta),t.lazy(()=>Ta).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional()}).strict()),WV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Kot).optional(),_avg:t.lazy(()=>Xot).optional(),_max:t.lazy(()=>tnt).optional(),_min:t.lazy(()=>ent).optional(),_sum:t.lazy(()=>ont).optional()}).strict(),IA=t.object({AND:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),OR:t.lazy(()=>IA).array().optional(),NOT:t.union([t.lazy(()=>IA),t.lazy(()=>IA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recommendation:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),bl=t.object({AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Sb=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Hm=t.union([t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),OR:t.lazy(()=>bl).array().optional(),NOT:t.union([t.lazy(()=>bl),t.lazy(()=>bl).array()]).optional(),isEmailSent:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict()),RV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>nnt).optional(),_avg:t.lazy(()=>ant).optional(),_max:t.lazy(()=>int).optional(),_min:t.lazy(()=>lnt).optional(),_sum:t.lazy(()=>rnt).optional()}).strict(),gA=t.object({AND:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),OR:t.lazy(()=>gA).array().optional(),NOT:t.union([t.lazy(()=>gA),t.lazy(()=>gA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),isEmailSent:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Me=t.object({AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>T4).optional(),users:t.lazy(()=>PM).optional()}).strict(),Qp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurants:t.lazy(()=>pnt).optional(),users:t.lazy(()=>P4).optional()}).strict(),Ol=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),OR:t.lazy(()=>Me).array().optional(),NOT:t.union([t.lazy(()=>Me),t.lazy(()=>Me).array()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurants:t.lazy(()=>T4).optional(),users:t.lazy(()=>PM).optional()}).strict()),kV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>cnt).optional(),_avg:t.lazy(()=>unt).optional(),_max:t.lazy(()=>snt).optional(),_min:t.lazy(()=>ynt).optional(),_sum:t.lazy(()=>dnt).optional()}).strict(),CA=t.object({AND:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),OR:t.lazy(()=>CA).array().optional(),NOT:t.union([t.lazy(()=>CA),t.lazy(()=>CA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),_t=t.object({AND:t.union([t.lazy(()=>_t),t.lazy(()=>_t).array()]).optional(),OR:t.lazy(()=>_t).array().optional(),NOT:t.union([t.lazy(()=>_t),t.lazy(()=>_t).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>U4),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict(),tp=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),items:t.lazy(()=>TB).optional(),transactions:t.lazy(()=>PB).optional(),stockCounts:t.lazy(()=>W4).optional()}).strict(),$n=t.union([t.object({id:t.number().int(),restaurantId:t.number().int()}),t.object({id:t.number().int()}),t.object({restaurantId:t.number().int()})]).and(t.object({id:t.number().int().optional(),restaurantId:t.number().int().optional(),AND:t.union([t.lazy(()=>_t),t.lazy(()=>_t).array()]).optional(),OR:t.lazy(()=>_t).array().optional(),NOT:t.union([t.lazy(()=>_t),t.lazy(()=>_t).array()]).optional(),name:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>U4),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),items:t.lazy(()=>jS).optional(),transactions:t.lazy(()=>MS).optional(),stockCounts:t.lazy(()=>UM).optional()}).strict()),xV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>znt).optional(),_avg:t.lazy(()=>mnt).optional(),_max:t.lazy(()=>bnt).optional(),_min:t.lazy(()=>hnt).optional(),_sum:t.lazy(()=>Int).optional()}).strict(),AA=t.object({AND:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),OR:t.lazy(()=>AA).array().optional(),NOT:t.union([t.lazy(()=>AA),t.lazy(()=>AA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),type:t.union([t.lazy(()=>gnt),t.lazy(()=>qt)]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),B=t.object({AND:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),OR:t.lazy(()=>B).array().optional(),NOT:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>WM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>PM).optional(),cookbooks:t.lazy(()=>R4).optional(),inventory:t.union([t.lazy(()=>k4),t.lazy(()=>_t)]).optional().nullable(),orders:t.lazy(()=>RM).optional(),recipes:t.lazy(()=>ip).optional(),menus:t.lazy(()=>x4).optional(),salesTransactions:t.lazy(()=>kM).optional(),leftoverItems:t.lazy(()=>ZS).optional(),wasteRecords:t.lazy(()=>vS).optional(),productionPlans:t.lazy(()=>xM).optional(),equipments:t.lazy(()=>j4).optional(),qualityChecklists:t.lazy(()=>M4).optional(),customerFeedbacks:t.lazy(()=>OS).optional()}).strict(),fa=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),organization:t.lazy(()=>Qp).optional(),users:t.lazy(()=>P4).optional(),cookbooks:t.lazy(()=>Cnt).optional(),inventory:t.lazy(()=>tp).optional(),orders:t.lazy(()=>Z4).optional(),recipes:t.lazy(()=>RS).optional(),menus:t.lazy(()=>Ant).optional(),salesTransactions:t.lazy(()=>v4).optional(),leftoverItems:t.lazy(()=>UB).optional(),wasteRecords:t.lazy(()=>WB).optional(),productionPlans:t.lazy(()=>O4).optional(),equipments:t.lazy(()=>Snt).optional(),qualityChecklists:t.lazy(()=>Tnt).optional(),customerFeedbacks:t.lazy(()=>RB).optional()}).strict(),X=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),OR:t.lazy(()=>B).array().optional(),NOT:t.union([t.lazy(()=>B),t.lazy(()=>B).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),organization:t.union([t.lazy(()=>WM),t.lazy(()=>Me)]).optional().nullable(),users:t.lazy(()=>PM).optional(),cookbooks:t.lazy(()=>R4).optional(),inventory:t.union([t.lazy(()=>k4),t.lazy(()=>_t)]).optional().nullable(),orders:t.lazy(()=>RM).optional(),recipes:t.lazy(()=>ip).optional(),menus:t.lazy(()=>x4).optional(),salesTransactions:t.lazy(()=>kM).optional(),leftoverItems:t.lazy(()=>ZS).optional(),wasteRecords:t.lazy(()=>vS).optional(),productionPlans:t.lazy(()=>xM).optional(),equipments:t.lazy(()=>j4).optional(),qualityChecklists:t.lazy(()=>M4).optional(),customerFeedbacks:t.lazy(()=>OS).optional()}).strict()),jV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Pnt).optional(),_avg:t.lazy(()=>Unt).optional(),_max:t.lazy(()=>Wnt).optional(),_min:t.lazy(()=>Rnt).optional(),_sum:t.lazy(()=>knt).optional()}).strict(),SA=t.object({AND:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),OR:t.lazy(()=>SA).array().optional(),NOT:t.union([t.lazy(()=>SA),t.lazy(()=>SA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>bt),t.string()]).optional(),city:t.union([t.lazy(()=>bt),t.string()]).optional(),zipCode:t.union([t.lazy(()=>bt),t.string()]).optional(),state:t.union([t.lazy(()=>bt),t.string()]).optional(),owner:t.union([t.lazy(()=>bt),t.string()]).optional(),organizationId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable()}).strict(),v=t.object({AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>kB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>WM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>jM),t.lazy(()=>B)]).optional().nullable(),shifts:t.lazy(()=>f4).optional(),prepItems:t.lazy(()=>fS).optional(),inventoryUpdates:t.lazy(()=>jS).optional(),sessions:t.lazy(()=>w4).optional(),passwordResets:t.lazy(()=>N4).optional(),leftoverItems:t.lazy(()=>ZS).optional(),wasteRecords:t.lazy(()=>vS).optional(),productionPlans:t.lazy(()=>xM).optional(),productionPlanItems:t.lazy(()=>kS).optional(),availability:t.lazy(()=>B4).optional(),schedulingConstraints:t.lazy(()=>q4).optional(),inventoryWithdrawals:t.lazy(()=>wS).optional(),checklistCompletes:t.lazy(()=>hM).optional(),customerFeedbackResponses:t.lazy(()=>OS).optional(),recipeVersionsCreated:t.lazy(()=>YA).optional(),recipeVersionsApproved:t.lazy(()=>YA).optional(),InventoryTransactions:t.lazy(()=>MS).optional(),StockCounts:t.lazy(()=>UM).optional()}).strict(),eo=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),organization:t.lazy(()=>Qp).optional(),restaurant:t.lazy(()=>fa).optional(),shifts:t.lazy(()=>xnt).optional(),prepItems:t.lazy(()=>xB).optional(),inventoryUpdates:t.lazy(()=>TB).optional(),sessions:t.lazy(()=>jnt).optional(),passwordResets:t.lazy(()=>Mnt).optional(),leftoverItems:t.lazy(()=>UB).optional(),wasteRecords:t.lazy(()=>WB).optional(),productionPlans:t.lazy(()=>O4).optional(),productionPlanItems:t.lazy(()=>gB).optional(),availability:t.lazy(()=>Znt).optional(),schedulingConstraints:t.lazy(()=>vnt).optional(),inventoryWithdrawals:t.lazy(()=>jB).optional(),checklistCompletes:t.lazy(()=>d4).optional(),customerFeedbackResponses:t.lazy(()=>RB).optional(),recipeVersionsCreated:t.lazy(()=>wN).optional(),recipeVersionsApproved:t.lazy(()=>wN).optional(),InventoryTransactions:t.lazy(()=>PB).optional(),StockCounts:t.lazy(()=>W4).optional()}).strict(),M=t.union([t.object({id:t.number().int(),email:t.string(),sub:t.number().int()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int(),sub:t.number().int()}),t.object({id:t.number().int()}),t.object({email:t.string(),sub:t.number().int()}),t.object({email:t.string()}),t.object({sub:t.number().int()})]).and(t.object({id:t.number().int().optional(),email:t.string().optional(),sub:t.number().int().optional(),AND:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),OR:t.lazy(()=>v).array().optional(),NOT:t.union([t.lazy(()=>v),t.lazy(()=>v).array()]).optional(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>kB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),organization:t.union([t.lazy(()=>WM),t.lazy(()=>Me)]).optional().nullable(),restaurant:t.union([t.lazy(()=>jM),t.lazy(()=>B)]).optional().nullable(),shifts:t.lazy(()=>f4).optional(),prepItems:t.lazy(()=>fS).optional(),inventoryUpdates:t.lazy(()=>jS).optional(),sessions:t.lazy(()=>w4).optional(),passwordResets:t.lazy(()=>N4).optional(),leftoverItems:t.lazy(()=>ZS).optional(),wasteRecords:t.lazy(()=>vS).optional(),productionPlans:t.lazy(()=>xM).optional(),productionPlanItems:t.lazy(()=>kS).optional(),availability:t.lazy(()=>B4).optional(),schedulingConstraints:t.lazy(()=>q4).optional(),inventoryWithdrawals:t.lazy(()=>wS).optional(),checklistCompletes:t.lazy(()=>hM).optional(),customerFeedbackResponses:t.lazy(()=>OS).optional(),recipeVersionsCreated:t.lazy(()=>YA).optional(),recipeVersionsApproved:t.lazy(()=>YA).optional(),InventoryTransactions:t.lazy(()=>MS).optional(),StockCounts:t.lazy(()=>UM).optional()}).strict()),MV=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Ont).optional(),_avg:t.lazy(()=>fnt).optional(),_max:t.lazy(()=>wnt).optional(),_min:t.lazy(()=>Nnt).optional(),_sum:t.lazy(()=>Bnt).optional()}).strict(),TA=t.object({AND:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),OR:t.lazy(()=>TA).array().optional(),NOT:t.union([t.lazy(()=>TA),t.lazy(()=>TA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),sub:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>bt),t.string()]).optional(),firstName:t.union([t.lazy(()=>bt),t.string()]).optional(),lastName:t.union([t.lazy(()=>bt),t.string()]).optional(),profileImage:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),role:t.union([t.lazy(()=>qnt),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Pa=t.object({AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),Tb=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),Re=t.union([t.object({id:t.string().uuid(),code:t.string(),token:t.string()}),t.object({id:t.string().uuid(),code:t.string()}),t.object({id:t.string().uuid(),token:t.string()}),t.object({id:t.string().uuid()}),t.object({code:t.string(),token:t.string()}),t.object({code:t.string()}),t.object({token:t.string()})]).and(t.object({id:t.string().uuid().optional(),code:t.string().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),OR:t.lazy(()=>Pa).array().optional(),NOT:t.union([t.lazy(()=>Pa),t.lazy(()=>Pa).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),ZV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Fnt).optional(),_avg:t.lazy(()=>Dnt).optional(),_max:t.lazy(()=>_nt).optional(),_min:t.lazy(()=>Ent).optional(),_sum:t.lazy(()=>Lnt).optional()}).strict(),PA=t.object({AND:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),OR:t.lazy(()=>PA).array().optional(),NOT:t.union([t.lazy(()=>PA),t.lazy(()=>PA).array()]).optional(),id:t.union([t.lazy(()=>bt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),code:t.union([t.lazy(()=>bt),t.string()]).optional(),token:t.union([t.lazy(()=>bt),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),$e=t.object({AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),recipes:t.lazy(()=>ip).optional(),restaurant:t.union([t.lazy(()=>jM),t.lazy(()=>B)]).optional().nullable()}).strict(),Nm=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipes:t.lazy(()=>RS).optional(),restaurant:t.lazy(()=>fa).optional()}).strict(),ne=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),OR:t.lazy(()=>$e).array().optional(),NOT:t.union([t.lazy(()=>$e),t.lazy(()=>$e).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),recipes:t.lazy(()=>ip).optional(),restaurant:t.union([t.lazy(()=>jM),t.lazy(()=>B)]).optional().nullable()}).strict()),vV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Vnt).optional(),_avg:t.lazy(()=>Hnt).optional(),_max:t.lazy(()=>Qnt).optional(),_min:t.lazy(()=>Ynt).optional(),_sum:t.lazy(()=>Gnt).optional()}).strict(),UA=t.object({AND:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),OR:t.lazy(()=>UA).array().optional(),NOT:t.union([t.lazy(()=>UA),t.lazy(()=>UA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>bt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable()}).strict(),O=t.object({AND:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),OR:t.lazy(()=>O).array().optional(),NOT:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Il).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>MB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>ZB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),cookBook:t.union([t.lazy(()=>F4),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>US).optional(),instructions:t.lazy(()=>mM).optional(),menuItems:t.lazy(()=>kI).optional(),foodCostHistory:t.lazy(()=>D4).optional(),prepHistory:t.lazy(()=>_4).optional(),prepBoards:t.lazy(()=>E4).optional(),prepItems:t.lazy(()=>fS).optional(),menuItemRecipes:t.lazy(()=>MM).optional(),productionPlanItems:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>wS).optional(),tags:t.lazy(()=>L4).optional(),versions:t.lazy(()=>YA).optional(),equipments:t.lazy(()=>WS).optional(),dietaryRestrictions:t.lazy(()=>NS).optional(),temperatures:t.lazy(()=>V4).optional(),yields:t.lazy(()=>H4).optional(),laborCosts:t.lazy(()=>Q4).optional(),nutritionalInfo:t.union([t.lazy(()=>Y4),t.lazy(()=>Be)]).optional().nullable(),criticalPoints:t.lazy(()=>G4).optional(),storage:t.union([t.lazy(()=>$4),t.lazy(()=>qe)]).optional().nullable(),photos:t.lazy(()=>J4).optional(),recipeStats:t.union([t.lazy(()=>K4),t.lazy(()=>Fe)]).optional().nullable()}).strict(),oo=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),cookBook:t.lazy(()=>Nm).optional(),ingredients:t.lazy(()=>cB).optional(),instructions:t.lazy(()=>c4).optional(),menuItems:t.lazy(()=>zM).optional(),foodCostHistory:t.lazy(()=>$nt).optional(),prepHistory:t.lazy(()=>Jnt).optional(),prepBoards:t.lazy(()=>Knt).optional(),prepItems:t.lazy(()=>xB).optional(),menuItemRecipes:t.lazy(()=>X4).optional(),productionPlanItems:t.lazy(()=>gB).optional(),withdrawals:t.lazy(()=>jB).optional(),tags:t.lazy(()=>Xnt).optional(),versions:t.lazy(()=>wN).optional(),equipments:t.lazy(()=>sB).optional(),dietaryRestrictions:t.lazy(()=>vB).optional(),temperatures:t.lazy(()=>tat).optional(),yields:t.lazy(()=>eat).optional(),laborCosts:t.lazy(()=>oat).optional(),nutritionalInfo:t.lazy(()=>jm).optional(),criticalPoints:t.lazy(()=>nat).optional(),storage:t.lazy(()=>Mm).optional(),photos:t.lazy(()=>aat).optional(),recipeStats:t.lazy(()=>Fm).optional()}).strict(),C=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),OR:t.lazy(()=>O).array().optional(),NOT:t.union([t.lazy(()=>O),t.lazy(()=>O).array()]).optional(),imageUrls:t.lazy(()=>Il).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number().int()]).optional(),frequency:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number().int()]).optional(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>MB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>ZB),t.lazy(()=>U)]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),cookBook:t.union([t.lazy(()=>F4),t.lazy(()=>$e)]).optional(),ingredients:t.lazy(()=>US).optional(),instructions:t.lazy(()=>mM).optional(),menuItems:t.lazy(()=>kI).optional(),foodCostHistory:t.lazy(()=>D4).optional(),prepHistory:t.lazy(()=>_4).optional(),prepBoards:t.lazy(()=>E4).optional(),prepItems:t.lazy(()=>fS).optional(),menuItemRecipes:t.lazy(()=>MM).optional(),productionPlanItems:t.lazy(()=>kS).optional(),withdrawals:t.lazy(()=>wS).optional(),tags:t.lazy(()=>L4).optional(),versions:t.lazy(()=>YA).optional(),equipments:t.lazy(()=>WS).optional(),dietaryRestrictions:t.lazy(()=>NS).optional(),temperatures:t.lazy(()=>V4).optional(),yields:t.lazy(()=>H4).optional(),laborCosts:t.lazy(()=>Q4).optional(),nutritionalInfo:t.union([t.lazy(()=>Y4),t.lazy(()=>Be)]).optional().nullable(),criticalPoints:t.lazy(()=>G4).optional(),storage:t.union([t.lazy(()=>$4),t.lazy(()=>qe)]).optional().nullable(),photos:t.lazy(()=>J4).optional(),recipeStats:t.union([t.lazy(()=>K4),t.lazy(()=>Fe)]).optional().nullable()}).strict()),OV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),_count:t.lazy(()=>iat).optional(),_avg:t.lazy(()=>lat).optional(),_max:t.lazy(()=>rat).optional(),_min:t.lazy(()=>pat).optional(),_sum:t.lazy(()=>cat).optional()}).strict(),WA=t.object({AND:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),OR:t.lazy(()=>WA).array().optional(),NOT:t.union([t.lazy(()=>WA),t.lazy(()=>WA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrls:t.lazy(()=>Il).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>A),t.number()]).optional(),cookTime:t.union([t.lazy(()=>A),t.number()]).optional(),prepTime:t.union([t.lazy(()=>A),t.number()]).optional(),frequency:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>A),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>bt),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>uat),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>sat),t.lazy(()=>U)]).optional()}).strict(),Mt=t.object({AND:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),OR:t.lazy(()=>Mt).array().optional(),NOT:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>OB),t.lazy(()=>nt)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>US).optional(),inventoryItems:t.lazy(()=>jS).optional(),orderItems:t.lazy(()=>ZM).optional(),vendors:t.lazy(()=>t2).optional(),WasteRecords:t.lazy(()=>vS).optional(),IngredientAllergens:t.lazy(()=>TM).optional(),priceHistory:t.lazy(()=>vM).optional(),DietaryRestrictions:t.lazy(()=>NS).optional()}).strict(),Nl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeIngredients:t.lazy(()=>cB).optional(),inventoryItems:t.lazy(()=>TB).optional(),orderItems:t.lazy(()=>e2).optional(),vendors:t.lazy(()=>yat).optional(),WasteRecords:t.lazy(()=>WB).optional(),IngredientAllergens:t.lazy(()=>A4).optional(),priceHistory:t.lazy(()=>o2).optional(),DietaryRestrictions:t.lazy(()=>vB).optional()}).strict(),J=t.union([t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),AND:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),OR:t.lazy(()=>Mt).array().optional(),NOT:t.union([t.lazy(()=>Mt),t.lazy(()=>Mt).array()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),calories:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>OB),t.lazy(()=>nt)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),recipeIngredients:t.lazy(()=>US).optional(),inventoryItems:t.lazy(()=>jS).optional(),orderItems:t.lazy(()=>ZM).optional(),vendors:t.lazy(()=>t2).optional(),WasteRecords:t.lazy(()=>vS).optional(),IngredientAllergens:t.lazy(()=>TM).optional(),priceHistory:t.lazy(()=>vM).optional(),DietaryRestrictions:t.lazy(()=>NS).optional()}).strict()),fV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),dietaryRestrictionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),protein:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),carbohydrates:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fat:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),fiber:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sugar:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),sodium:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),usdaFoodId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionSource:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),nutritionUpdatedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>dat).optional(),_avg:t.lazy(()=>zat).optional(),_max:t.lazy(()=>mat).optional(),_min:t.lazy(()=>bat).optional(),_sum:t.lazy(()=>hat).optional()}).strict(),RA=t.object({AND:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),OR:t.lazy(()=>RA).array().optional(),NOT:t.union([t.lazy(()=>RA),t.lazy(()=>RA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),category:t.union([t.lazy(()=>bt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>Iat),t.lazy(()=>nt)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable()}).strict(),Ua=t.object({AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>jI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),recipeVersion:t.union([t.lazy(()=>OM),t.lazy(()=>le)]).optional().nullable()}).strict(),Pb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),ingredient:t.lazy(()=>Nl).optional(),recipeVersion:t.lazy(()=>Lp).optional()}).strict(),H=t.union([t.object({id:t.number().int(),unique_ingredient_per_version:t.lazy(()=>vT),recipeId_ingredientId:t.lazy(()=>OT)}),t.object({id:t.number().int(),unique_ingredient_per_version:t.lazy(()=>vT)}),t.object({id:t.number().int(),recipeId_ingredientId:t.lazy(()=>OT)}),t.object({id:t.number().int()}),t.object({unique_ingredient_per_version:t.lazy(()=>vT),recipeId_ingredientId:t.lazy(()=>OT)}),t.object({unique_ingredient_per_version:t.lazy(()=>vT)}),t.object({recipeId_ingredientId:t.lazy(()=>OT)})]).and(t.object({id:t.number().int().optional(),unique_ingredient_per_version:t.lazy(()=>vT).optional(),recipeId_ingredientId:t.lazy(()=>OT).optional(),AND:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),OR:t.lazy(()=>Ua).array().optional(),NOT:t.union([t.lazy(()=>Ua),t.lazy(()=>Ua).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>jI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),recipeVersion:t.union([t.lazy(()=>OM),t.lazy(()=>le)]).optional().nullable()}).strict()),wV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),density:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),yield:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>gat).optional(),_avg:t.lazy(()=>Cat).optional(),_max:t.lazy(()=>Aat).optional(),_min:t.lazy(()=>Sat).optional(),_sum:t.lazy(()=>Tat).optional()}).strict(),kA=t.object({AND:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),OR:t.lazy(()=>kA).array().optional(),NOT:t.union([t.lazy(()=>kA),t.lazy(()=>kA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>jI).optional(),isOptional:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable()}).strict(),Ne=t.object({AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),RecipeVersion:t.union([t.lazy(()=>OM),t.lazy(()=>le)]).optional().nullable(),equipment:t.lazy(()=>WS).optional()}).strict(),Bm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional(),RecipeVersion:t.lazy(()=>Lp).optional(),equipment:t.lazy(()=>sB).optional()}).strict(),ct=t.union([t.object({id:t.number().int(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>ZN)}),t.object({id:t.number().int()}),t.object({recipeId_stepNumber_recipeVersionId:t.lazy(()=>ZN)})]).and(t.object({id:t.number().int().optional(),recipeId_stepNumber_recipeVersionId:t.lazy(()=>ZN).optional(),AND:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),OR:t.lazy(()=>Ne).array().optional(),NOT:t.union([t.lazy(()=>Ne),t.lazy(()=>Ne).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number().int()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),temperature:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),RecipeVersion:t.union([t.lazy(()=>OM),t.lazy(()=>le)]).optional().nullable(),equipment:t.lazy(()=>WS).optional()}).strict()),NV=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipeVersionId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),timeInMinutes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperature:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),temperatureUnit:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),warningNotes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Pat).optional(),_avg:t.lazy(()=>Uat).optional(),_max:t.lazy(()=>Wat).optional(),_min:t.lazy(()=>Rat).optional(),_sum:t.lazy(()=>kat).optional()}).strict(),xA=t.object({AND:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),OR:t.lazy(()=>xA).array().optional(),NOT:t.union([t.lazy(()=>xA),t.lazy(()=>xA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>A),t.number()]).optional(),instruction:t.union([t.lazy(()=>bt),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),re=t.object({AND:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),OR:t.lazy(()=>re).array().optional(),NOT:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>wS).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict(),mp=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>tp).optional(),ingredient:t.lazy(()=>Nl).optional(),lastUpdatedBy:t.lazy(()=>eo).optional(),transactions:t.lazy(()=>PB).optional(),withdrawals:t.lazy(()=>jB).optional(),stockCounts:t.lazy(()=>n2).optional()}).strict(),w=t.union([t.object({id:t.number().int(),inventoryId_ingredientId:t.lazy(()=>vN)}),t.object({id:t.number().int()}),t.object({inventoryId_ingredientId:t.lazy(()=>vN)})]).and(t.object({id:t.number().int().optional(),inventoryId_ingredientId:t.lazy(()=>vN).optional(),AND:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),OR:t.lazy(()=>re).array().optional(),NOT:t.union([t.lazy(()=>re),t.lazy(()=>re).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional(),lastUpdatedBy:t.union([t.lazy(()=>xI),t.lazy(()=>v)]).optional().nullable(),transactions:t.lazy(()=>MS).optional(),withdrawals:t.lazy(()=>wS).optional(),stockCounts:t.lazy(()=>fM).optional()}).strict()),BV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastOrderDate:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdatedById:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),location:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),barcode:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>xat).optional(),_avg:t.lazy(()=>jat).optional(),_max:t.lazy(()=>Mat).optional(),_min:t.lazy(()=>Zat).optional(),_sum:t.lazy(()=>vat).optional()}).strict(),jA=t.object({AND:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),OR:t.lazy(()=>jA).array().optional(),NOT:t.union([t.lazy(()=>jA),t.lazy(()=>jA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>Wt),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>Wt),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable()}).strict(),Wa=t.object({AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),item:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),Ub=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),inventory:t.lazy(()=>tp).optional(),item:t.lazy(()=>mp).optional(),createdBy:t.lazy(()=>eo).optional()}).strict(),Q=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),OR:t.lazy(()=>Wa).array().optional(),NOT:t.union([t.lazy(()=>Wa),t.lazy(()=>Wa).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),item:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),qV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),reference:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Oat).optional(),_avg:t.lazy(()=>fat).optional(),_max:t.lazy(()=>wat).optional(),_min:t.lazy(()=>Nat).optional(),_sum:t.lazy(()=>Bat).optional()}).strict(),MA=t.object({AND:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),OR:t.lazy(()=>MA).array().optional(),NOT:t.union([t.lazy(()=>MA),t.lazy(()=>MA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),type:t.union([t.lazy(()=>qat),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),previousQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),newQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),cost:t.union([t.lazy(()=>Kn),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Je=t.object({AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>wB),t.lazy(()=>Nt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>fM).optional()}).strict(),qm=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),inventory:t.lazy(()=>tp).optional(),createdBy:t.lazy(()=>eo).optional(),items:t.lazy(()=>n2).optional()}).strict(),ut=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),OR:t.lazy(()=>Je).array().optional(),NOT:t.union([t.lazy(()=>Je),t.lazy(()=>Je).array()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>wB),t.lazy(()=>Nt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number().int()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),inventory:t.union([t.lazy(()=>BS),t.lazy(()=>_t)]).optional(),createdBy:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),items:t.lazy(()=>fM).optional()}).strict()),FV=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),createdById:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Fat).optional(),_avg:t.lazy(()=>Dat).optional(),_max:t.lazy(()=>_at).optional(),_min:t.lazy(()=>Eat).optional(),_sum:t.lazy(()=>Lat).optional()}).strict(),ZA=t.object({AND:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),OR:t.lazy(()=>ZA).array().optional(),NOT:t.union([t.lazy(()=>ZA),t.lazy(()=>ZA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>Vat),t.lazy(()=>Nt)]).optional(),startedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>A),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Ra=t.object({AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>a2),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional()}).strict(),Wb=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),stockCount:t.lazy(()=>qm).optional(),item:t.lazy(()=>mp).optional()}).strict(),At=t.union([t.object({id:t.number().int(),stockCountId_itemId:t.lazy(()=>ON)}),t.object({id:t.number().int()}),t.object({stockCountId_itemId:t.lazy(()=>ON)})]).and(t.object({id:t.number().int().optional(),stockCountId_itemId:t.lazy(()=>ON).optional(),AND:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),OR:t.lazy(()=>Ra).array().optional(),NOT:t.union([t.lazy(()=>Ra),t.lazy(()=>Ra).array()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number().int()]).optional(),itemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),stockCount:t.union([t.lazy(()=>a2),t.lazy(()=>Je)]).optional(),item:t.union([t.lazy(()=>xS),t.lazy(()=>re)]).optional()}).strict()),DV=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Hat).optional(),_avg:t.lazy(()=>Qat).optional(),_max:t.lazy(()=>Yat).optional(),_min:t.lazy(()=>Gat).optional(),_sum:t.lazy(()=>$at).optional()}).strict(),vA=t.object({AND:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),OR:t.lazy(()=>vA).array().optional(),NOT:t.union([t.lazy(()=>vA),t.lazy(()=>vA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>A),t.number()]).optional(),itemId:t.union([t.lazy(()=>A),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),actualQty:t.union([t.lazy(()=>Wt),t.number()]).optional(),difference:t.union([t.lazy(()=>Wt),t.number()]).optional(),notes:t.union([t.lazy(()=>kt),t.string()]).optional().nullable()}).strict(),Fe=t.object({AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),Fm=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Dl=t.union([t.object({id:t.number().int(),recipeId:t.number().int()}),t.object({id:t.number().int()}),t.object({recipeId:t.number().int()})]).and(t.object({id:t.number().int().optional(),recipeId:t.number().int().optional(),AND:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),OR:t.lazy(()=>Fe).array().optional(),NOT:t.union([t.lazy(()=>Fe),t.lazy(()=>Fe).array()]).optional(),totalCost:t.union([t.lazy(()=>R),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>R),t.number()]).optional(),averageRating:t.union([t.lazy(()=>R),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>s),t.number().int()]).optional(),lastPrepared:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),_V=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Jat).optional(),_avg:t.lazy(()=>Kat).optional(),_max:t.lazy(()=>Xat).optional(),_min:t.lazy(()=>tit).optional(),_sum:t.lazy(()=>eit).optional()}).strict(),OA=t.object({AND:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),OR:t.lazy(()=>OA).array().optional(),NOT:t.union([t.lazy(()=>OA),t.lazy(()=>OA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),totalCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),profitMargin:t.union([t.lazy(()=>Wt),t.number()]).optional(),averageRating:t.union([t.lazy(()=>Wt),t.number()]).optional(),preparationCount:t.union([t.lazy(()=>A),t.number()]).optional(),lastPrepared:t.union([t.lazy(()=>Lr),t.coerce.date()]).optional().nullable()}).strict(),Ke=t.object({AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>NB),t.lazy(()=>Bt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),vendor:t.union([t.lazy(()=>CM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>ZM).optional()}).strict(),Dm=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),vendor:t.lazy(()=>Yp).optional(),items:t.lazy(()=>e2).optional()}).strict(),st=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),OR:t.lazy(()=>Ke).array().optional(),NOT:t.union([t.lazy(()=>Ke),t.lazy(()=>Ke).array()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>NB),t.lazy(()=>Bt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),vendor:t.union([t.lazy(()=>CM),t.lazy(()=>Oe)]).optional(),items:t.lazy(()=>ZM).optional()}).strict()),EV=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>oit).optional(),_avg:t.lazy(()=>nit).optional(),_max:t.lazy(()=>ait).optional(),_min:t.lazy(()=>iit).optional(),_sum:t.lazy(()=>lit).optional()}).strict(),fA=t.object({AND:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),OR:t.lazy(()=>fA).array().optional(),NOT:t.union([t.lazy(()=>fA),t.lazy(()=>fA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),vendorId:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>rit),t.lazy(()=>Bt)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),ka=t.object({AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>i2),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional()}).strict(),Rb=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),order:t.lazy(()=>Dm).optional(),ingredient:t.lazy(()=>Nl).optional()}).strict(),St=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),OR:t.lazy(()=>ka).array().optional(),NOT:t.union([t.lazy(()=>ka),t.lazy(()=>ka).array()]).optional(),orderId:t.union([t.lazy(()=>s),t.number().int()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),order:t.union([t.lazy(()=>i2),t.lazy(()=>Ke)]).optional(),ingredient:t.union([t.lazy(()=>ap),t.lazy(()=>Mt)]).optional()}).strict()),LV=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),_count:t.lazy(()=>pit).optional(),_avg:t.lazy(()=>cit).optional(),_max:t.lazy(()=>uit).optional(),_min:t.lazy(()=>sit).optional(),_sum:t.lazy(()=>yit).optional()}).strict(),wA=t.object({AND:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),OR:t.lazy(()=>wA).array().optional(),NOT:t.union([t.lazy(()=>wA),t.lazy(()=>wA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),orderId:t.union([t.lazy(()=>A),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>Wt),t.number()]).optional(),unit:t.union([t.lazy(()=>bt),t.string()]).optional(),price:t.union([t.lazy(()=>Wt),t.number()]).optional()}).strict(),Oe=t.object({AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>RM).optional(),ingredients:t.lazy(()=>SM).optional(),supplierPriceHistory:t.lazy(()=>vM).optional()}).strict(),Yp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),orders:t.lazy(()=>Z4).optional(),ingredients:t.lazy(()=>h4).optional(),supplierPriceHistory:t.lazy(()=>o2).optional()}).strict(),$t=t.union([t.object({id:t.number().int(),name:t.string(),email:t.string()}),t.object({id:t.number().int(),name:t.string()}),t.object({id:t.number().int(),email:t.string()}),t.object({id:t.number().int()}),t.object({name:t.string(),email:t.string()}),t.object({name:t.string()}),t.object({email:t.string()})]).and(t.object({id:t.number().int().optional(),name:t.string().optional(),email:t.string().optional(),AND:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),OR:t.lazy(()=>Oe).array().optional(),NOT:t.union([t.lazy(()=>Oe),t.lazy(()=>Oe).array()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),orders:t.lazy(()=>RM).optional(),ingredients:t.lazy(()=>SM).optional(),supplierPriceHistory:t.lazy(()=>vM).optional()}).strict()),VV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dit).optional(),_avg:t.lazy(()=>zit).optional(),_max:t.lazy(()=>mit).optional(),_min:t.lazy(()=>bit).optional(),_sum:t.lazy(()=>hit).optional()}).strict(),NA=t.object({AND:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),OR:t.lazy(()=>NA).array().optional(),NOT:t.union([t.lazy(()=>NA),t.lazy(()=>NA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),contact:t.union([t.lazy(()=>bt),t.string()]).optional(),email:t.union([t.lazy(()=>bt),t.string()]).optional(),phone:t.union([t.lazy(()=>bt),t.string()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Xe=t.object({AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Qt)]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),tasks:t.lazy(()=>l2).optional()}).strict(),_m=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional(),tasks:t.lazy(()=>Iit).optional()}).strict(),ae=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),OR:t.lazy(()=>Xe).array().optional(),NOT:t.union([t.lazy(()=>Xe),t.lazy(()=>Xe).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Qt)]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional(),tasks:t.lazy(()=>l2).optional()}).strict()),HV=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),_count:t.lazy(()=>git).optional(),_avg:t.lazy(()=>Cit).optional(),_max:t.lazy(()=>Ait).optional(),_min:t.lazy(()=>Sit).optional(),_sum:t.lazy(()=>Tit).optional()}).strict(),BA=t.object({AND:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),OR:t.lazy(()=>BA).array().optional(),NOT:t.union([t.lazy(()=>BA),t.lazy(()=>BA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),startTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>Pit),t.lazy(()=>Qt)]).optional()}).strict(),to=t.object({AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ip).optional(),prepItems:t.lazy(()=>fS).optional()}).strict(),Em=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipes:t.lazy(()=>RS).optional(),prepItems:t.lazy(()=>xB).optional()}).strict(),ie=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),OR:t.lazy(()=>to).array().optional(),NOT:t.union([t.lazy(()=>to),t.lazy(()=>to).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipes:t.lazy(()=>ip).optional(),prepItems:t.lazy(()=>fS).optional()}).strict()),QV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Uit).optional(),_avg:t.lazy(()=>Wit).optional(),_max:t.lazy(()=>Rit).optional(),_min:t.lazy(()=>kit).optional(),_sum:t.lazy(()=>xit).optional()}).strict(),qA=t.object({AND:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),OR:t.lazy(()=>qA).array().optional(),NOT:t.union([t.lazy(()=>qA),t.lazy(()=>qA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),status:t.union([t.lazy(()=>r2),t.lazy(()=>et)]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),xa=t.object({AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoard:t.union([t.lazy(()=>p2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),kb=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),prepBoard:t.lazy(()=>Em).optional(),recipe:t.lazy(()=>oo).optional(),assignedTo:t.lazy(()=>eo).optional()}).strict(),Y=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),OR:t.lazy(()=>xa).array().optional(),NOT:t.union([t.lazy(()=>xa),t.lazy(()=>xa).array()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number().int()]).optional(),prepBoard:t.union([t.lazy(()=>p2),t.lazy(()=>to)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional(),assignedTo:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),YV=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),_count:t.lazy(()=>jit).optional(),_avg:t.lazy(()=>Mit).optional(),_max:t.lazy(()=>Zit).optional(),_min:t.lazy(()=>vit).optional(),_sum:t.lazy(()=>Oit).optional()}).strict(),FA=t.object({AND:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),OR:t.lazy(()=>FA).array().optional(),NOT:t.union([t.lazy(()=>FA),t.lazy(()=>FA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),status:t.union([t.lazy(()=>r2),t.lazy(()=>et)]).optional(),assignedToId:t.union([t.lazy(()=>A),t.number()]).optional()}).strict(),ja=t.object({AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict(),xb=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),user:t.lazy(()=>eo).optional()}).strict(),ke=t.union([t.object({id:t.number().int(),token:t.string()}),t.object({id:t.number().int()}),t.object({token:t.string()})]).and(t.object({id:t.number().int().optional(),token:t.string().optional(),AND:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),OR:t.lazy(()=>ja).array().optional(),NOT:t.union([t.lazy(()=>ja),t.lazy(()=>ja).array()]).optional(),userId:t.union([t.lazy(()=>s),t.number().int()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),user:t.union([t.lazy(()=>_e),t.lazy(()=>v)]).optional()}).strict()),GV=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>fit).optional(),_avg:t.lazy(()=>wit).optional(),_max:t.lazy(()=>Nit).optional(),_min:t.lazy(()=>Bit).optional(),_sum:t.lazy(()=>qit).optional()}).strict(),DA=t.object({AND:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),OR:t.lazy(()=>DA).array().optional(),NOT:t.union([t.lazy(()=>DA),t.lazy(()=>DA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),token:t.union([t.lazy(()=>bt),t.string()]).optional(),userId:t.union([t.lazy(()=>A),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),fe=t.object({AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItems:t.lazy(()=>kI).optional(),MenuCategory:t.lazy(()=>c2).optional()}).strict(),Gp=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),restaurant:t.lazy(()=>fa).optional(),menuItems:t.lazy(()=>zM).optional(),MenuCategory:t.lazy(()=>Fit).optional()}).strict(),Jt=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),OR:t.lazy(()=>fe).array().optional(),NOT:t.union([t.lazy(()=>fe),t.lazy(()=>fe).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number().int()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),restaurant:t.union([t.lazy(()=>Xn),t.lazy(()=>B)]).optional(),menuItems:t.lazy(()=>kI).optional(),MenuCategory:t.lazy(()=>c2).optional()}).strict()),$V=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Dit).optional(),_avg:t.lazy(()=>_it).optional(),_max:t.lazy(()=>Eit).optional(),_min:t.lazy(()=>Lit).optional(),_sum:t.lazy(()=>Vit).optional()}).strict(),_A=t.object({AND:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),OR:t.lazy(()=>_A).array().optional(),NOT:t.union([t.lazy(()=>_A),t.lazy(()=>_A).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>A),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Ma=t.object({AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),jb=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Bl).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),Tt=t.union([t.object({id:t.number().int(),menuItemId_recipeId:t.lazy(()=>fN)}),t.object({id:t.number().int()}),t.object({menuItemId_recipeId:t.lazy(()=>fN)})]).and(t.object({id:t.number().int().optional(),menuItemId_recipeId:t.lazy(()=>fN).optional(),AND:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),OR:t.lazy(()=>Ma).array().optional(),NOT:t.union([t.lazy(()=>Ma),t.lazy(()=>Ma).array()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number().int()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>RI),t.lazy(()=>Pt)]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),JV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>Hit).optional(),_avg:t.lazy(()=>Qit).optional(),_max:t.lazy(()=>Yit).optional(),_min:t.lazy(()=>Git).optional(),_sum:t.lazy(()=>$it).optional()}).strict(),EA=t.object({AND:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),OR:t.lazy(()=>EA).array().optional(),NOT:t.union([t.lazy(()=>EA),t.lazy(()=>EA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),joinAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Pt=t.object({AND:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),OR:t.lazy(()=>Pt).array().optional(),NOT:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>jI).optional(),recipeServingsAmount:t.lazy(()=>vb).optional(),recipeServingsCost:t.lazy(()=>vb).optional(),allergens:t.lazy(()=>Il).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),menu:t.union([t.lazy(()=>dM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>u2),t.lazy(()=>we)]).optional().nullable(),recipes:t.lazy(()=>ip).optional(),menuItemRecipes:t.lazy(()=>MM).optional(),nutritionalInfo:t.union([t.lazy(()=>s2),t.lazy(()=>De)]).optional().nullable(),recommendations:t.lazy(()=>y2).optional(),salesTransactions:t.lazy(()=>kM).optional(),leftoverItems:t.lazy(()=>ZS).optional(),feedback:t.lazy(()=>OS).optional(),dietaryRestrictions:t.lazy(()=>NS).optional()}).strict(),Bl=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),menu:t.lazy(()=>Gp).optional(),category:t.lazy(()=>Zm).optional(),recipes:t.lazy(()=>RS).optional(),menuItemRecipes:t.lazy(()=>X4).optional(),nutritionalInfo:t.lazy(()=>Lm).optional(),recommendations:t.lazy(()=>Jit).optional(),salesTransactions:t.lazy(()=>v4).optional(),leftoverItems:t.lazy(()=>UB).optional(),feedback:t.lazy(()=>RB).optional(),dietaryRestrictions:t.lazy(()=>vB).optional()}).strict(),x=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),OR:t.lazy(()=>Pt).array().optional(),NOT:t.union([t.lazy(()=>Pt),t.lazy(()=>Pt).array()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>jI).optional(),recipeServingsAmount:t.lazy(()=>vb).optional(),recipeServingsCost:t.lazy(()=>vb).optional(),allergens:t.lazy(()=>Il).optional(),menuId:t.union([t.lazy(()=>s),t.number().int()]).optional(),categoryId:t.union([t.lazy(()=>it),t.number().int()]).optional().nullable(),menu:t.union([t.lazy(()=>dM),t.lazy(()=>fe)]).optional(),category:t.union([t.lazy(()=>u2),t.lazy(()=>we)]).optional().nullable(),recipes:t.lazy(()=>ip).optional(),menuItemRecipes:t.lazy(()=>MM).optional(),nutritionalInfo:t.union([t.lazy(()=>s2),t.lazy(()=>De)]).optional().nullable(),recommendations:t.lazy(()=>y2).optional(),salesTransactions:t.lazy(()=>kM).optional(),leftoverItems:t.lazy(()=>ZS).optional(),feedback:t.lazy(()=>OS).optional(),dietaryRestrictions:t.lazy(()=>NS).optional()}).strict()),KV=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),_count:t.lazy(()=>Kit).optional(),_avg:t.lazy(()=>Xit).optional(),_max:t.lazy(()=>tlt).optional(),_min:t.lazy(()=>elt).optional(),_sum:t.lazy(()=>olt).optional()}).strict(),LA=t.object({AND:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),OR:t.lazy(()=>LA).array().optional(),NOT:t.union([t.lazy(()=>LA),t.lazy(()=>LA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),name:t.union([t.lazy(()=>bt),t.string()]).optional(),description:t.union([t.lazy(()=>kt),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>Wt),t.number()]).optional(),foodCost:t.union([t.lazy(()=>Wt),t.number()]).optional(),isActive:t.union([t.lazy(()=>Jn),t.boolean()]).optional(),recipeIds:t.lazy(()=>jI).optional(),recipeServingsAmount:t.lazy(()=>vb).optional(),recipeServingsCost:t.lazy(()=>vb).optional(),allergens:t.lazy(()=>Il).optional(),menuId:t.union([t.lazy(()=>A),t.number()]).optional(),categoryId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable()}).strict(),De=t.object({AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>AM),t.lazy(()=>Pt)]).optional().nullable()}).strict(),Lm=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),menuItem:t.lazy(()=>Bl).optional()}).strict(),_l=t.union([t.object({id:t.number().int(),menuItemId:t.number().int()}),t.object({id:t.number().int()}),t.object({menuItemId:t.number().int()})]).and(t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional(),AND:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),OR:t.lazy(()=>De).array().optional(),NOT:t.union([t.lazy(()=>De),t.lazy(()=>De).array()]).optional(),calories:t.union([t.lazy(()=>R),t.number()]).optional(),fat:t.union([t.lazy(()=>R),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>R),t.number()]).optional(),transFat:t.union([t.lazy(()=>R),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>R),t.number()]).optional(),sodium:t.union([t.lazy(()=>R),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>R),t.number()]).optional(),fiber:t.union([t.lazy(()=>R),t.number()]).optional(),sugar:t.union([t.lazy(()=>R),t.number()]).optional(),protein:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItem:t.union([t.lazy(()=>AM),t.lazy(()=>Pt)]).optional().nullable()}).strict()),XV=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.union([t.lazy(()=>e),t.lazy(()=>g)]).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>nlt).optional(),_avg:t.lazy(()=>alt).optional(),_max:t.lazy(()=>ilt).optional(),_min:t.lazy(()=>llt).optional(),_sum:t.lazy(()=>rlt).optional()}).strict(),VA=t.object({AND:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),OR:t.lazy(()=>VA).array().optional(),NOT:t.union([t.lazy(()=>VA),t.lazy(()=>VA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>Oa),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>Wt),t.number()]).optional(),fat:t.union([t.lazy(()=>Wt),t.number()]).optional(),saturatedFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),transFat:t.union([t.lazy(()=>Wt),t.number()]).optional(),cholesterol:t.union([t.lazy(()=>Wt),t.number()]).optional(),sodium:t.union([t.lazy(()=>Wt),t.number()]).optional(),carbohydrates:t.union([t.lazy(()=>Wt),t.number()]).optional(),fiber:t.union([t.lazy(()=>Wt),t.number()]).optional(),sugar:t.union([t.lazy(()=>Wt),t.number()]).optional(),protein:t.union([t.lazy(()=>Wt),t.number()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),Za=t.object({AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),Mb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),xe=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),OR:t.lazy(()=>Za).array().optional(),NOT:t.union([t.lazy(()=>Za),t.lazy(()=>Za).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),tH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>plt).optional(),_avg:t.lazy(()=>clt).optional(),_max:t.lazy(()=>ult).optional(),_min:t.lazy(()=>slt).optional(),_sum:t.lazy(()=>ylt).optional()}).strict(),HA=t.object({AND:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),OR:t.lazy(()=>HA).array().optional(),NOT:t.union([t.lazy(()=>HA),t.lazy(()=>HA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),cost:t.union([t.lazy(()=>Wt),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),va=t.object({AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict(),Zb=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),recipe:t.lazy(()=>oo).optional()}).strict(),je=t.object({id:t.number().int()}).and(t.object({id:t.number().int().optional(),AND:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),OR:t.lazy(()=>va).array().optional(),NOT:t.union([t.lazy(()=>va),t.lazy(()=>va).array()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number().int()]).optional(),quantity:t.union([t.lazy(()=>s),t.number().int()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipe:t.union([t.lazy(()=>ze),t.lazy(()=>O)]).optional()}).strict()),eH=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),_count:t.lazy(()=>dlt).optional(),_avg:t.lazy(()=>zlt).optional(),_max:t.lazy(()=>mlt).optional(),_min:t.lazy(()=>blt).optional(),_sum:t.lazy(()=>hlt).optional()}).strict(),QA=t.object({AND:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),OR:t.lazy(()=>QA).array().optional(),NOT:t.union([t.lazy(()=>QA),t.lazy(()=>QA).array()]).optional(),id:t.union([t.lazy(()=>A),t.number()]).optional(),recipeId:t.union([t.lazy(()=>A),t.number()]).optional(),quantity:t.union([t.lazy(()=>A),t.number()]).optional(),date:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>Z),t.coerce.date()]).optional()}).strict(),C0=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional(),recipe:t.lazy(()=>Ilt)}).strict(),A0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),S0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipe:t.lazy(()=>glt).optional()}).strict(),T0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional()}).strict(),yP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),P0=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional()}).strict(),U0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional()}).strict(),W0=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Clt)}).strict(),R0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),k0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Alt).optional()}).strict(),x0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M0=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Slt)}).strict(),Z0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Tlt).optional()}).strict(),O0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),f0=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N0=t.object({url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Plt)}).strict(),B0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),q0=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Ult).optional()}).strict(),F0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BN=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_0=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>Wlt)}).strict(),E0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L0=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Rlt).optional()}).strict(),V0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qN=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Q0=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>klt)}).strict(),Y0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G0=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>xlt).optional()}).strict(),$0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FN=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J0=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K0=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>jlt)}).strict(),X0=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tY=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>Mlt).optional()}).strict(),eY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DN=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nY=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>d2),menuItem:t.lazy(()=>z2)}).strict(),aY=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iY=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>m2).optional(),menuItem:t.lazy(()=>b2).optional()}).strict(),lY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gP=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xj=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pY=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>h2),menuItems:t.lazy(()=>I2).optional()}).strict(),cY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>g2).optional()}).strict(),uY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>C2).optional(),menuItems:t.lazy(()=>A2).optional()}).strict(),sY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>S2).optional()}).strict(),CP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_N=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dY=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>QT),ingredients:t.lazy(()=>YT).optional(),instructions:t.lazy(()=>GT).optional(),createdBy:t.lazy(()=>$T),approvedBy:t.lazy(()=>JT).optional()}).strict(),zY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KT).optional(),instructions:t.lazy(()=>XT).optional()}).strict(),mY=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tP).optional(),ingredients:t.lazy(()=>eP).optional(),instructions:t.lazy(()=>oP).optional(),createdBy:t.lazy(()=>nP).optional(),approvedBy:t.lazy(()=>aP).optional()}).strict(),bY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>iP).optional(),instructions:t.lazy(()=>lP).optional()}).strict(),AP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fT=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IY=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),recipes:t.lazy(()=>FB).optional(),maintenanceLogs:t.lazy(()=>DB).optional()}).strict(),gY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>_B).optional(),maintenanceLogs:t.lazy(()=>EB).optional()}).strict(),CY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),recipes:t.lazy(()=>VB).optional(),maintenanceLogs:t.lazy(()=>HB).optional()}).strict(),AY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>QB).optional(),maintenanceLogs:t.lazy(()=>YB).optional()}).strict(),SP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TY=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>GB),equipment:t.lazy(()=>$B),RecipeInstruction:t.lazy(()=>JB).optional()}).strict(),PY=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),UY=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>KB).optional(),equipment:t.lazy(()=>XB).optional(),RecipeInstruction:t.lazy(()=>tq).optional()}).strict(),WY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),TP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),wT=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),RY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),kY=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),equipment:t.lazy(()=>Zlt)}).strict(),xY=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),equipment:t.lazy(()=>vlt).optional()}).strict(),MY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PP=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LN=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ZY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vY=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eq),items:t.lazy(()=>oq).optional(),completions:t.lazy(()=>nq).optional()}).strict(),OY=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>aq).optional(),completions:t.lazy(()=>iq).optional()}).strict(),fY=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),items:t.lazy(()=>rq).optional(),completions:t.lazy(()=>pq).optional()}).strict(),wY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>cq).optional(),completions:t.lazy(()=>uq).optional()}).strict(),UP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BY=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>T2),completions:t.lazy(()=>P2).optional()}).strict(),qY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>U2).optional()}).strict(),FY=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>W2).optional(),completions:t.lazy(()=>R2).optional()}).strict(),DY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>k2).optional()}).strict(),WP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HN=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_Y=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EY=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>sq),completedBy:t.lazy(()=>yq),items:t.lazy(()=>dq).optional()}).strict(),LY=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>zq).optional()}).strict(),VY=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>mq).optional(),completedBy:t.lazy(()=>bq).optional(),items:t.lazy(()=>hq).optional()}).strict(),HY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Iq).optional()}).strict(),RP=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),QY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YY=t.object({status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>x2),checklistItem:t.lazy(()=>j2)}).strict(),GY=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$Y=t.object({status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>M2).optional(),checklistItem:t.lazy(()=>Z2).optional()}).strict(),JY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kP=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),checklistItemId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eM=t.object({status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),KY=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XY=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>v2),ingredient:t.lazy(()=>O2)}).strict(),tG=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eG=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>f2).optional(),ingredient:t.lazy(()=>w2).optional()}).strict(),oG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xP=t.object({id:t.number().int().optional(),vendorId:t.number().int(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oM=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aG=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gq),menuItem:t.lazy(()=>Cq).optional(),respondedBy:t.lazy(()=>Aq).optional()}).strict(),iG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lG=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Sq).optional(),menuItem:t.lazy(()=>Tq).optional(),respondedBy:t.lazy(()=>Pq).optional()}).strict(),rG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NT=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cG=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Uq).optional(),recipes:t.lazy(()=>Wq).optional(),ingredients:t.lazy(()=>Rq).optional()}).strict(),uG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>kq).optional(),recipes:t.lazy(()=>xq).optional(),ingredients:t.lazy(()=>jq).optional()}).strict(),sG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Mq).optional(),recipes:t.lazy(()=>Zq).optional(),ingredients:t.lazy(()=>vq).optional()}).strict(),yG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Oq).optional(),recipes:t.lazy(()=>fq).optional(),ingredients:t.lazy(()=>wq).optional()}).strict(),MP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BT=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zG=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Olt).optional()}).strict(),mG=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>flt).optional()}).strict(),bG=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>wlt).optional()}).strict(),hG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Nlt).optional()}).strict(),ZP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),QN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gG=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),menuItem:t.lazy(()=>Bq),recordedBy:t.lazy(()=>qq)}).strict(),CG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Fq).optional(),menuItem:t.lazy(()=>Dq).optional(),recordedBy:t.lazy(()=>_q).optional()}).strict(),SG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PG=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Eq),ingrediente:t.lazy(()=>Lq),recordedBy:t.lazy(()=>Vq)}).strict(),UG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Hq).optional(),ingrediente:t.lazy(()=>Qq).optional(),recordedBy:t.lazy(()=>Yq).optional()}).strict(),RG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FT=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),xG=t.object({date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Gq),createdBy:t.lazy(()=>$q),items:t.lazy(()=>Jq).optional()}).strict(),jG=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Kq).optional()}).strict(),MG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Xq).optional(),createdBy:t.lazy(()=>tF).optional(),items:t.lazy(()=>eF).optional()}).strict(),ZG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oF).optional()}).strict(),fP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nM=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),OG=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>nF),recipe:t.lazy(()=>aF),assignedTo:t.lazy(()=>iF).optional()}).strict(),fG=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wG=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>lF).optional(),recipe:t.lazy(()=>rF).optional(),assignedTo:t.lazy(()=>pF).optional()}).strict(),NG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wP=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qG=t.object({taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shift:t.lazy(()=>Blt)}).strict(),FG=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DG=t.object({taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shift:t.lazy(()=>qlt).optional()}).strict(),_G=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),NP=t.object({id:t.number().int().optional(),shiftId:t.number().int(),taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),YN=t.object({taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),shiftId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LG=t.object({dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>Flt)}).strict(),VG=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HG=t.object({dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Dlt).optional()}).strict(),QG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BP=t.object({id:t.number().int().optional(),userId:t.number().int(),dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),GN=t.object({dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GG=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>_lt)}).strict(),$G=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JG=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Elt).optional()}).strict(),KG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qP=t.object({id:t.number().int().optional(),userId:t.number().int(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),$N=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XG=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t1=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>cF),recipe:t.lazy(()=>uF).optional(),createdBy:t.lazy(()=>sF)}).strict(),e1=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),o1=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>yF).optional(),recipe:t.lazy(()=>dF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),n1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),FP=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_T=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i1=t.object({name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Llt).optional()}).strict(),l1=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),ingredients:t.lazy(()=>Vlt).optional()}).strict(),r1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Hlt).optional()}).strict(),p1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),ingredients:t.lazy(()=>Qlt).optional()}).strict(),DP=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),c1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),u1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),s1=t.object({ingredient:t.lazy(()=>N2),allergen:t.lazy(()=>B2)}).strict(),y1=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),d1=t.object({ingredient:t.lazy(()=>q2).optional(),allergen:t.lazy(()=>F2).optional()}).strict(),z1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),_P=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),allergenId:t.number().int()}).strict(),aM=t.object({}).strict(),m1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),b1=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Ylt)}).strict(),h1=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),I1=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Glt).optional()}).strict(),g1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),EP=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),JN=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A1=t.object({email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),S1=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),T1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),LP=t.object({id:t.number().int().optional(),email:t.string(),isEmailSent:t.boolean(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),U1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),isEmailSent:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>D2).optional(),users:t.lazy(()=>_2).optional()}).strict(),k1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>E2).optional(),users:t.lazy(()=>L2).optional()}).strict(),x1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>V2).optional(),users:t.lazy(()=>H2).optional()}).strict(),j1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>Q2).optional(),users:t.lazy(()=>Y2).optional()}).strict(),VP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),M1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),v1=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>wM),items:t.lazy(()=>NM).optional(),transactions:t.lazy(()=>BM).optional(),stockCounts:t.lazy(()=>qM).optional()}).strict(),O1=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>FM).optional(),transactions:t.lazy(()=>DM).optional(),stockCounts:t.lazy(()=>_M).optional()}).strict(),f1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>EM).optional(),items:t.lazy(()=>LM).optional(),transactions:t.lazy(()=>VM).optional(),stockCounts:t.lazy(()=>HM).optional()}).strict(),w1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QM).optional(),transactions:t.lazy(()=>YM).optional(),stockCounts:t.lazy(()=>GM).optional()}).strict(),HP=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),N1=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),q1=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),F1=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),D1=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),_1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),QP=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),KN=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),E1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),L1=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),V1=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),H1=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),Q1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),YP=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iM=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y1=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),G1=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),user:t.lazy(()=>$lt)}).strict(),$1=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),J1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>Jlt).optional()}).strict(),K1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),GP=t.object({id:t.string().uuid().optional(),userId:t.number().int(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),XN=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X1=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t9=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>G2).optional(),restaurant:t.lazy(()=>$2).optional()}).strict(),e9=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable(),recipes:t.lazy(()=>J2).optional()}).strict(),o9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>K2).optional(),restaurant:t.lazy(()=>X2).optional()}).strict(),n9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>t5).optional()}).strict(),$P=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),tB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),a9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),i9=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),l9=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),r9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),p9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),JP=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),WI=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),c9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),u9=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),s9=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),y9=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),d9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),KP=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable()}).strict(),lM=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),z9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),m9=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>mF),ingredient:t.lazy(()=>bF),recipeVersion:t.lazy(()=>hF).optional()}).strict(),b9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),h9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>IF).optional(),ingredient:t.lazy(()=>gF).optional(),recipeVersion:t.lazy(()=>CF).optional()}).strict(),I9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),XP=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),ET=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),g9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),C9=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>AF),RecipeVersion:t.lazy(()=>SF).optional(),equipment:t.lazy(()=>TF).optional()}).strict(),A9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>PF).optional()}).strict(),S9=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>UF).optional(),RecipeVersion:t.lazy(()=>WF).optional(),equipment:t.lazy(()=>RF).optional()}).strict(),T9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>kF).optional()}).strict(),tU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),rM=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),P9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),U9=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),ingredient:t.lazy(()=>DS),lastUpdatedBy:t.lazy(()=>_S).optional(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),W9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),R9=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),ingredient:t.lazy(()=>$S).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>XS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),k9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),withdrawals:t.lazy(()=>oT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),eU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),LT=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),x9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),j9=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>xF),item:t.lazy(()=>jF),createdBy:t.lazy(()=>MF)}).strict(),M9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Z9=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>ZF).optional(),item:t.lazy(()=>vF).optional(),createdBy:t.lazy(()=>OF).optional()}).strict(),v9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),VT=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),f9=t.object({status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>fF),createdBy:t.lazy(()=>wF),items:t.lazy(()=>NF).optional()}).strict(),w9=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>BF).optional()}).strict(),N9=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>qF).optional(),createdBy:t.lazy(()=>FF).optional(),items:t.lazy(()=>DF).optional()}).strict(),B9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>_F).optional()}).strict(),nU=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),pM=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),q9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),F9=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>e5),item:t.lazy(()=>o5)}).strict(),D9=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),_9=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>n5).optional(),item:t.lazy(()=>a5).optional()}).strict(),E9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),aU=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),cM=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),L9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),V9=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable(),recipe:t.lazy(()=>Klt)}).strict(),H9=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),Q9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipe:t.lazy(()=>Xlt).optional()}).strict(),Y9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),iU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),G9=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),$9=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),J9=t.object({status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>EF),vendor:t.lazy(()=>LF),items:t.lazy(()=>VF).optional()}).strict(),K9=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HF).optional()}).strict(),X9=t.object({status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>QF).optional(),vendor:t.lazy(()=>YF).optional(),items:t.lazy(()=>GF).optional()}).strict(),t$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>$F).optional()}).strict(),lU=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),uM=t.object({status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),e$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o$=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>i5),ingredient:t.lazy(()=>l5)}).strict(),n$=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),a$=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>r5).optional(),ingredient:t.lazy(()=>p5).optional()}).strict(),i$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),rU=t.object({id:t.number().int().optional(),orderId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),sM=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),l$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),r$=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>JF).optional(),ingredients:t.lazy(()=>KF).optional(),supplierPriceHistory:t.lazy(()=>XF).optional()}).strict(),p$=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>tD).optional(),ingredients:t.lazy(()=>eD).optional(),supplierPriceHistory:t.lazy(()=>oD).optional()}).strict(),c$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>nD).optional(),ingredients:t.lazy(()=>aD).optional(),supplierPriceHistory:t.lazy(()=>iD).optional()}).strict(),u$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>lD).optional(),ingredients:t.lazy(()=>rD).optional(),supplierPriceHistory:t.lazy(()=>pD).optional()}).strict(),pU=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),eB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),y$=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt),user:t.lazy(()=>c5),tasks:t.lazy(()=>u5).optional()}).strict(),d$=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt),tasks:t.lazy(()=>s5).optional()}).strict(),z$=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional(),user:t.lazy(()=>y5).optional(),tasks:t.lazy(()=>d5).optional()}).strict(),m$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional(),tasks:t.lazy(()=>z5).optional()}).strict(),cU=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt)}).strict(),oB=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional()}).strict(),b$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional()}).strict(),h$=t.object({name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>m5).optional(),prepItems:t.lazy(()=>b5).optional()}).strict(),I$=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>h5).optional(),prepItems:t.lazy(()=>I5).optional()}).strict(),g$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>g5).optional(),prepItems:t.lazy(()=>C5).optional()}).strict(),C$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>A5).optional(),prepItems:t.lazy(()=>S5).optional()}).strict(),uU=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),A$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S$=t.object({quantity:t.number().int(),status:t.lazy(()=>et),prepBoard:t.lazy(()=>cD),recipe:t.lazy(()=>uD),assignedTo:t.lazy(()=>sD)}).strict(),T$=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),P$=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>yD).optional(),recipe:t.lazy(()=>dD).optional(),assignedTo:t.lazy(()=>zD).optional()}).strict(),U$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),sU=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),HT=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional()}).strict(),W$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),R$=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),user:t.lazy(()=>trt)}).strict(),k$=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),x$=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),user:t.lazy(()=>ert).optional()}).strict(),j$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yU=t.object({id:t.number().int().optional(),token:t.string(),userId:t.number().int(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aB=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),M$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z$=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>mD),menuItems:t.lazy(()=>bD).optional(),MenuCategory:t.lazy(()=>hD).optional()}).strict(),v$=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>ID).optional(),MenuCategory:t.lazy(()=>gD).optional()}).strict(),O$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>CD).optional(),menuItems:t.lazy(()=>AD).optional(),MenuCategory:t.lazy(()=>SD).optional()}).strict(),f$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>TD).optional(),MenuCategory:t.lazy(()=>PD).optional()}).strict(),dU=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),iB=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),N$=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>T5),recipe:t.lazy(()=>P5)}).strict(),B$=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),q$=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>U5).optional(),recipe:t.lazy(()=>W5).optional()}).strict(),F$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zU=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),yM=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),D$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_$=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),E$=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),L$=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),V$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),mU=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable()}).strict(),PS=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional()}).strict(),H$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Q$=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>ort).optional()}).strict(),Y$=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),G$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>nrt).optional()}).strict(),$$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bU=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),J$=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K$=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X$=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>art)}).strict(),t4=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),e4=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>irt).optional()}).strict(),o4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lB=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),n4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a4=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>lrt)}).strict(),i4=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l4=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>rrt).optional()}).strict(),r4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IU=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rB=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p4=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),s=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>at)]).optional()}).strict(),R=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Kr)]).optional()}).strict(),S=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Hj).optional(),not:t.union([t.string(),t.lazy(()=>GA)]).optional()}).strict(),mt=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>$A)]).optional()}).strict(),ze=t.object({is:t.lazy(()=>O).optional(),isNot:t.lazy(()=>O).optional()}).strict(),EX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),LX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),VX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),HX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),servingUnit:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),containsGluten:t.lazy(()=>e).optional(),containsDairy:t.lazy(()=>e).optional(),containsNuts:t.lazy(()=>e).optional(),containsEggs:t.lazy(()=>e).optional(),containsSoy:t.lazy(()=>e).optional(),containsFish:t.lazy(()=>e).optional(),containsShellfish:t.lazy(()=>e).optional(),containsSesame:t.lazy(()=>e).optional()}).strict(),QX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),servingSize:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),A=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>at).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>at).optional(),_min:t.lazy(()=>at).optional(),_max:t.lazy(()=>at).optional()}).strict(),Wt=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>at).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>Kr).optional(),_min:t.lazy(()=>Kr).optional(),_max:t.lazy(()=>Kr).optional()}).strict(),bt=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Hj).optional(),not:t.union([t.string(),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),Jn=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),ot=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Xr)]).optional().nullable()}).strict(),T=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Hj).optional(),not:t.union([t.string(),t.lazy(()=>JA)]).optional().nullable()}).strict(),z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>KA)]).optional()}).strict(),g=t.object({sort:t.lazy(()=>e),nulls:t.lazy(()=>bX).optional()}).strict(),YX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),GX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),$X=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),JX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),action:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),KX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),threshold:t.lazy(()=>e).optional()}).strict(),Kn=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>M5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_avg:t.lazy(()=>Xr).optional(),_sum:t.lazy(()=>Xr).optional(),_min:t.lazy(()=>Xr).optional(),_max:t.lazy(()=>Xr).optional()}).strict(),kt=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),mode:t.lazy(()=>Hj).optional(),not:t.union([t.string(),t.lazy(()=>Z5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),Z=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XX=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),ett=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ott=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),method:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional(),containerType:t.lazy(()=>e).optional(),specialNotes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),shelfLife:t.lazy(()=>e).optional()}).strict(),pB=t.object({equals:t.lazy(()=>de).optional(),in:t.lazy(()=>de).array().optional(),notIn:t.lazy(()=>de).array().optional(),not:t.union([t.lazy(()=>de),t.lazy(()=>XA)]).optional()}).strict(),it=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>hl)]).optional().nullable()}).strict(),att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),ltt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),url:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ptt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional()}).strict(),ctt=t.object({equals:t.lazy(()=>de).optional(),in:t.lazy(()=>de).array().optional(),notIn:t.lazy(()=>de).array().optional(),not:t.union([t.lazy(()=>de),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),Oa=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>f5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_avg:t.lazy(()=>Xr).optional(),_sum:t.lazy(()=>hl).optional(),_min:t.lazy(()=>hl).optional(),_max:t.lazy(()=>hl).optional()}).strict(),utt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),stt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),ytt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ztt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),minTemp:t.lazy(()=>e).optional(),maxTemp:t.lazy(()=>e).optional(),holdTime:t.lazy(()=>e).optional()}).strict(),mtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),htt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Itt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),gtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),expectedYield:t.lazy(()=>e).optional(),actualYield:t.lazy(()=>e).optional(),wastagePercent:t.lazy(()=>e).optional()}).strict(),Ctt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Att=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Stt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ttt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ptt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),laborRate:t.lazy(()=>e).optional(),totalLaborCost:t.lazy(()=>e).optional()}).strict(),Xn=t.object({is:t.lazy(()=>B).optional(),isNot:t.lazy(()=>B).optional()}).strict(),RI=t.object({is:t.lazy(()=>Pt).optional(),isNot:t.lazy(()=>Pt).optional()}).strict(),Utt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),Rtt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ktt=t.object({id:t.lazy(()=>e).optional(),posTransactionID:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional(),transactionDate:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),total:t.lazy(()=>e).optional()}).strict(),dM=t.object({is:t.lazy(()=>fe).optional(),isNot:t.lazy(()=>fe).optional()}).strict(),kI=t.object({every:t.lazy(()=>Pt).optional(),some:t.lazy(()=>Pt).optional(),none:t.lazy(()=>Pt).optional()}).strict(),zM=t.object({_count:t.lazy(()=>e).optional()}).strict(),kN=t.object({menuId:t.number(),name:t.string()}).strict(),jtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Mtt=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),Ztt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ott=t.object({id:t.lazy(()=>e).optional(),displayOrder:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional()}).strict(),Kt=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>tS)]).optional().nullable()}).strict(),US=t.object({every:t.lazy(()=>Ua).optional(),some:t.lazy(()=>Ua).optional(),none:t.lazy(()=>Ua).optional()}).strict(),mM=t.object({every:t.lazy(()=>Ne).optional(),some:t.lazy(()=>Ne).optional(),none:t.lazy(()=>Ne).optional()}).strict(),_e=t.object({is:t.lazy(()=>v).optional(),isNot:t.lazy(()=>v).optional()}).strict(),xI=t.object({is:t.lazy(()=>v).optional().nullable(),isNot:t.lazy(()=>v).optional().nullable()}).strict(),cB=t.object({_count:t.lazy(()=>e).optional()}).strict(),c4=t.object({_count:t.lazy(()=>e).optional()}).strict(),xN=t.object({recipeId:t.number(),versionNumber:t.number()}).strict(),ftt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Ntt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Btt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),changes:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional(),approvedAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),versionNumber:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),approvedById:t.lazy(()=>e).optional()}).strict(),Lr=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>w5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),uB=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>eS)]).optional()}).strict(),WS=t.object({every:t.lazy(()=>pa).optional(),some:t.lazy(()=>pa).optional(),none:t.lazy(()=>pa).optional()}).strict(),u4=t.object({every:t.lazy(()=>ca).optional(),some:t.lazy(()=>ca).optional(),none:t.lazy(()=>ca).optional()}).strict(),sB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ftt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dtt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_tt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ett=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ltt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),model:t.lazy(()=>e).optional(),serialNumber:t.lazy(()=>e).optional(),purchaseDate:t.lazy(()=>e).optional(),lastMaintenance:t.lazy(()=>e).optional(),nextMaintenance:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vtt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Htt=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),bM=t.object({is:t.lazy(()=>Ze).optional(),isNot:t.lazy(()=>Ze).optional()}).strict(),s4=t.object({is:t.lazy(()=>Ne).optional().nullable(),isNot:t.lazy(()=>Ne).optional().nullable()}).strict(),jN=t.object({recipeId:t.number(),equipmentId:t.number()}).strict(),Qtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Ytt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Gtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),$tt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),Jtt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),recipeInstructionId:t.lazy(()=>e).optional()}).strict(),yB=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>oS)]).optional()}).strict(),Ktt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xtt=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),tet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),performedBy:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oet=t.object({id:t.lazy(()=>e).optional(),equipmentId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),net=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),dB=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>nS)]).optional()}).strict(),y4=t.object({every:t.lazy(()=>Qe).optional(),some:t.lazy(()=>Qe).optional(),none:t.lazy(()=>Qe).optional()}).strict(),hM=t.object({every:t.lazy(()=>Ye).optional(),some:t.lazy(()=>Ye).optional(),none:t.lazy(()=>Ye).optional()}).strict(),aet=t.object({_count:t.lazy(()=>e).optional()}).strict(),d4=t.object({_count:t.lazy(()=>e).optional()}).strict(),iet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ret=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),pet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),uet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),set=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),zB=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>aS)]).optional()}).strict(),IM=t.object({is:t.lazy(()=>ve).optional(),isNot:t.lazy(()=>ve).optional()}).strict(),gM=t.object({every:t.lazy(()=>ua).optional(),some:t.lazy(()=>ua).optional(),none:t.lazy(()=>ua).optional()}).strict(),z4=t.object({_count:t.lazy(()=>e).optional()}).strict(),yet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),det=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),zet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),met=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),requiredPhotos:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),order:t.lazy(()=>e).optional()}).strict(),het=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),Iet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),get=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),Cet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Aet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tet=t.object({id:t.lazy(()=>e).optional(),checklistId:t.lazy(()=>e).optional(),completedById:t.lazy(()=>e).optional()}).strict(),mB=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>iS)]).optional()}).strict(),Il=t.object({equals:t.string().array().optional().nullable(),has:t.string().optional().nullable(),hasEvery:t.string().array().optional(),hasSome:t.string().array().optional(),isEmpty:t.boolean().optional()}).strict(),m4=t.object({is:t.lazy(()=>Ye).optional(),isNot:t.lazy(()=>Ye).optional()}).strict(),b4=t.object({is:t.lazy(()=>Qe).optional(),isNot:t.lazy(()=>Qe).optional()}).strict(),Pet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),photoUrls:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Uet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),Wet=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Ret=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ket=t.object({id:t.lazy(()=>e).optional(),checklistCompleteId:t.lazy(()=>e).optional(),checklistItemId:t.lazy(()=>e).optional()}).strict(),xet=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),CM=t.object({is:t.lazy(()=>Oe).optional(),isNot:t.lazy(()=>Oe).optional()}).strict(),ap=t.object({is:t.lazy(()=>Mt).optional(),isNot:t.lazy(()=>Mt).optional()}).strict(),jet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Met=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),Zet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),vet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),startDate:t.lazy(()=>e).optional(),endDate:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oet=t.object({id:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),bB=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>lS)]).optional()}).strict(),hB=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>rS)]).optional()}).strict(),AM=t.object({is:t.lazy(()=>Pt).optional().nullable(),isNot:t.lazy(()=>Pt).optional().nullable()}).strict(),fet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),tags:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Net=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),comment:t.lazy(()=>e).optional(),source:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),responseText:t.lazy(()=>e).optional(),respondedAt:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),rating:t.lazy(()=>e).optional(),respondedById:t.lazy(()=>e).optional()}).strict(),Fet=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),Det=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),ip=t.object({every:t.lazy(()=>O).optional(),some:t.lazy(()=>O).optional(),none:t.lazy(()=>O).optional()}).strict(),SM=t.object({every:t.lazy(()=>Mt).optional(),some:t.lazy(()=>Mt).optional(),none:t.lazy(()=>Mt).optional()}).strict(),RS=t.object({_count:t.lazy(()=>e).optional()}).strict(),h4=t.object({_count:t.lazy(()=>e).optional()}).strict(),_et=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Eet=t.object({id:t.lazy(()=>e).optional()}).strict(),Let=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),icon:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Het=t.object({id:t.lazy(()=>e).optional()}).strict(),Qet=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Yet=t.object({id:t.lazy(()=>e).optional()}).strict(),Get=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),$et=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Jet=t.object({id:t.lazy(()=>e).optional()}).strict(),Ket=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xet=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),tot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),eot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),oot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),not=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),aot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),iot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),reason:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recordedById:t.lazy(()=>e).optional()}).strict(),IB=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>pS)]).optional()}).strict(),kS=t.object({every:t.lazy(()=>ha).optional(),some:t.lazy(()=>ha).optional(),none:t.lazy(()=>ha).optional()}).strict(),gB=t.object({_count:t.lazy(()=>e).optional()}).strict(),pot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),cot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),uot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),sot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),yot=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),dot=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),I4=t.object({is:t.lazy(()=>Ge).optional(),isNot:t.lazy(()=>Ge).optional()}).strict(),zot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),bot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Iot=t.object({id:t.lazy(()=>e).optional(),productionPlanId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),CB=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>cS)]).optional()}).strict(),g4=t.object({is:t.lazy(()=>Xe).optional(),isNot:t.lazy(()=>Xe).optional()}).strict(),got=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Cot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),Aot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Sot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),taskType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Tot=t.object({id:t.lazy(()=>e).optional(),shiftId:t.lazy(()=>e).optional(),duration:t.lazy(()=>e).optional()}).strict(),Pot=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>V5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),AB=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>uS)]).optional()}).strict(),Uot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Rot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),kot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),dayOfWeek:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),jot=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>H5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),SB=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>sS)]).optional()}).strict(),Mot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Zot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),vot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Oot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),constraintsType:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fot=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),wot=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>Q5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),xS=t.object({is:t.lazy(()=>re).optional(),isNot:t.lazy(()=>re).optional()}).strict(),C4=t.object({is:t.lazy(()=>O).optional().nullable(),isNot:t.lazy(()=>O).optional().nullable()}).strict(),Not=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),qot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Fot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),dateTime:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Dot=t.object({id:t.lazy(()=>e).optional(),inventoryItemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),TM=t.object({every:t.lazy(()=>Sa).optional(),some:t.lazy(()=>Sa).optional(),none:t.lazy(()=>Sa).optional()}).strict(),A4=t.object({_count:t.lazy(()=>e).optional()}).strict(),_ot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Eot=t.object({id:t.lazy(()=>e).optional()}).strict(),Lot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Vot=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional()}).strict(),Hot=t.object({id:t.lazy(()=>e).optional()}).strict(),S4=t.object({is:t.lazy(()=>co).optional(),isNot:t.lazy(()=>co).optional()}).strict(),MN=t.object({ingredientId:t.number(),allergenId:t.number()}).strict(),Qot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Yot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Got=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),$ot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Jot=t.object({id:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),allergenId:t.lazy(()=>e).optional()}).strict(),Kot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Xot=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),tnt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ent=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recommendation:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ont=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional()}).strict(),nnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ant=t.object({id:t.lazy(()=>e).optional()}).strict(),int=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),isEmailSent:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rnt=t.object({id:t.lazy(()=>e).optional()}).strict(),T4=t.object({every:t.lazy(()=>B).optional(),some:t.lazy(()=>B).optional(),none:t.lazy(()=>B).optional()}).strict(),PM=t.object({every:t.lazy(()=>v).optional(),some:t.lazy(()=>v).optional(),none:t.lazy(()=>v).optional()}).strict(),pnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),P4=t.object({_count:t.lazy(()=>e).optional()}).strict(),cnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),unt=t.object({id:t.lazy(()=>e).optional()}).strict(),snt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),dnt=t.object({id:t.lazy(()=>e).optional()}).strict(),U4=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>yS)]).optional()}).strict(),jS=t.object({every:t.lazy(()=>re).optional(),some:t.lazy(()=>re).optional(),none:t.lazy(()=>re).optional()}).strict(),MS=t.object({every:t.lazy(()=>Wa).optional(),some:t.lazy(()=>Wa).optional(),none:t.lazy(()=>Wa).optional()}).strict(),UM=t.object({every:t.lazy(()=>Je).optional(),some:t.lazy(()=>Je).optional(),none:t.lazy(()=>Je).optional()}).strict(),TB=t.object({_count:t.lazy(()=>e).optional()}).strict(),PB=t.object({_count:t.lazy(()=>e).optional()}).strict(),W4=t.object({_count:t.lazy(()=>e).optional()}).strict(),znt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),mnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),bnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Int=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),gnt=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>Y5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),WM=t.object({is:t.lazy(()=>Me).optional().nullable(),isNot:t.lazy(()=>Me).optional().nullable()}).strict(),R4=t.object({every:t.lazy(()=>$e).optional(),some:t.lazy(()=>$e).optional(),none:t.lazy(()=>$e).optional()}).strict(),k4=t.object({is:t.lazy(()=>_t).optional().nullable(),isNot:t.lazy(()=>_t).optional().nullable()}).strict(),RM=t.object({every:t.lazy(()=>Ke).optional(),some:t.lazy(()=>Ke).optional(),none:t.lazy(()=>Ke).optional()}).strict(),x4=t.object({every:t.lazy(()=>fe).optional(),some:t.lazy(()=>fe).optional(),none:t.lazy(()=>fe).optional()}).strict(),kM=t.object({every:t.lazy(()=>ra).optional(),some:t.lazy(()=>ra).optional(),none:t.lazy(()=>ra).optional()}).strict(),ZS=t.object({every:t.lazy(()=>ma).optional(),some:t.lazy(()=>ma).optional(),none:t.lazy(()=>ma).optional()}).strict(),vS=t.object({every:t.lazy(()=>ba).optional(),some:t.lazy(()=>ba).optional(),none:t.lazy(()=>ba).optional()}).strict(),xM=t.object({every:t.lazy(()=>Ge).optional(),some:t.lazy(()=>Ge).optional(),none:t.lazy(()=>Ge).optional()}).strict(),j4=t.object({every:t.lazy(()=>Ze).optional(),some:t.lazy(()=>Ze).optional(),none:t.lazy(()=>Ze).optional()}).strict(),M4=t.object({every:t.lazy(()=>ve).optional(),some:t.lazy(()=>ve).optional(),none:t.lazy(()=>ve).optional()}).strict(),OS=t.object({every:t.lazy(()=>ya).optional(),some:t.lazy(()=>ya).optional(),none:t.lazy(()=>ya).optional()}).strict(),Cnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Z4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ant=t.object({_count:t.lazy(()=>e).optional()}).strict(),v4=t.object({_count:t.lazy(()=>e).optional()}).strict(),UB=t.object({_count:t.lazy(()=>e).optional()}).strict(),WB=t.object({_count:t.lazy(()=>e).optional()}).strict(),O4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Snt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Tnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),RB=t.object({_count:t.lazy(()=>e).optional()}).strict(),Pnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Unt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),Wnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),Rnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),address:t.lazy(()=>e).optional(),city:t.lazy(()=>e).optional(),zipCode:t.lazy(()=>e).optional(),state:t.lazy(()=>e).optional(),owner:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),deleted:t.lazy(()=>e).optional()}).strict(),knt=t.object({id:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),kB=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>dS)]).optional()}).strict(),jM=t.object({is:t.lazy(()=>B).optional().nullable(),isNot:t.lazy(()=>B).optional().nullable()}).strict(),f4=t.object({every:t.lazy(()=>Xe).optional(),some:t.lazy(()=>Xe).optional(),none:t.lazy(()=>Xe).optional()}).strict(),fS=t.object({every:t.lazy(()=>xa).optional(),some:t.lazy(()=>xa).optional(),none:t.lazy(()=>xa).optional()}).strict(),w4=t.object({every:t.lazy(()=>Pa).optional(),some:t.lazy(()=>Pa).optional(),none:t.lazy(()=>Pa).optional()}).strict(),N4=t.object({every:t.lazy(()=>ja).optional(),some:t.lazy(()=>ja).optional(),none:t.lazy(()=>ja).optional()}).strict(),B4=t.object({every:t.lazy(()=>ga).optional(),some:t.lazy(()=>ga).optional(),none:t.lazy(()=>ga).optional()}).strict(),q4=t.object({every:t.lazy(()=>Ca).optional(),some:t.lazy(()=>Ca).optional(),none:t.lazy(()=>Ca).optional()}).strict(),wS=t.object({every:t.lazy(()=>Aa).optional(),some:t.lazy(()=>Aa).optional(),none:t.lazy(()=>Aa).optional()}).strict(),YA=t.object({every:t.lazy(()=>le).optional(),some:t.lazy(()=>le).optional(),none:t.lazy(()=>le).optional()}).strict(),xnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),xB=t.object({_count:t.lazy(()=>e).optional()}).strict(),jnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Mnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Znt=t.object({_count:t.lazy(()=>e).optional()}).strict(),vnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),jB=t.object({_count:t.lazy(()=>e).optional()}).strict(),wN=t.object({_count:t.lazy(()=>e).optional()}).strict(),Ont=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),fnt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),wnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Nnt=t.object({id:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),passwordHash:t.lazy(()=>e).optional(),firstName:t.lazy(()=>e).optional(),lastName:t.lazy(()=>e).optional(),profileImage:t.lazy(()=>e).optional(),verified:t.lazy(()=>e).optional(),role:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bnt=t.object({id:t.lazy(()=>e).optional(),sub:t.lazy(()=>e).optional(),organizationId:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),qnt=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>G5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),Fnt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Dnt=t.object({userId:t.lazy(()=>e).optional()}).strict(),_nt=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Ent=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),code:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Lnt=t.object({userId:t.lazy(()=>e).optional()}).strict(),Vnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Hnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Qnt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Ynt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Gnt=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),MB=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>zS)]).optional()}).strict(),ZB=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>mS)]).optional()}).strict(),F4=t.object({is:t.lazy(()=>$e).optional(),isNot:t.lazy(()=>$e).optional()}).strict(),D4=t.object({every:t.lazy(()=>Za).optional(),some:t.lazy(()=>Za).optional(),none:t.lazy(()=>Za).optional()}).strict(),_4=t.object({every:t.lazy(()=>va).optional(),some:t.lazy(()=>va).optional(),none:t.lazy(()=>va).optional()}).strict(),E4=t.object({every:t.lazy(()=>to).optional(),some:t.lazy(()=>to).optional(),none:t.lazy(()=>to).optional()}).strict(),MM=t.object({every:t.lazy(()=>Ma).optional(),some:t.lazy(()=>Ma).optional(),none:t.lazy(()=>Ma).optional()}).strict(),L4=t.object({every:t.lazy(()=>za).optional(),some:t.lazy(()=>za).optional(),none:t.lazy(()=>za).optional()}).strict(),NS=t.object({every:t.lazy(()=>da).optional(),some:t.lazy(()=>da).optional(),none:t.lazy(()=>da).optional()}).strict(),V4=t.object({every:t.lazy(()=>aa).optional(),some:t.lazy(()=>aa).optional(),none:t.lazy(()=>aa).optional()}).strict(),H4=t.object({every:t.lazy(()=>ia).optional(),some:t.lazy(()=>ia).optional(),none:t.lazy(()=>ia).optional()}).strict(),Q4=t.object({every:t.lazy(()=>la).optional(),some:t.lazy(()=>la).optional(),none:t.lazy(()=>la).optional()}).strict(),Y4=t.object({is:t.lazy(()=>Be).optional().nullable(),isNot:t.lazy(()=>Be).optional().nullable()}).strict(),G4=t.object({every:t.lazy(()=>oa).optional(),some:t.lazy(()=>oa).optional(),none:t.lazy(()=>oa).optional()}).strict(),$4=t.object({is:t.lazy(()=>qe).optional().nullable(),isNot:t.lazy(()=>qe).optional().nullable()}).strict(),J4=t.object({every:t.lazy(()=>na).optional(),some:t.lazy(()=>na).optional(),none:t.lazy(()=>na).optional()}).strict(),K4=t.object({is:t.lazy(()=>Fe).optional().nullable(),isNot:t.lazy(()=>Fe).optional().nullable()}).strict(),$nt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Jnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),Knt=t.object({_count:t.lazy(()=>e).optional()}).strict(),X4=t.object({_count:t.lazy(()=>e).optional()}).strict(),Xnt=t.object({_count:t.lazy(()=>e).optional()}).strict(),vB=t.object({_count:t.lazy(()=>e).optional()}).strict(),tat=t.object({_count:t.lazy(()=>e).optional()}).strict(),eat=t.object({_count:t.lazy(()=>e).optional()}).strict(),oat=t.object({_count:t.lazy(()=>e).optional()}).strict(),nat=t.object({_count:t.lazy(()=>e).optional()}).strict(),aat=t.object({_count:t.lazy(()=>e).optional()}).strict(),iat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),imageUrls:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),lat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),rat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),pat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isDeleted:t.lazy(()=>e).optional(),isPublished:t.lazy(()=>e).optional(),publishedAt:t.lazy(()=>e).optional(),language:t.lazy(()=>e).optional(),skillLevel:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional()}).strict(),cat=t.object({id:t.lazy(()=>e).optional(),servings:t.lazy(()=>e).optional(),cookTime:t.lazy(()=>e).optional(),prepTime:t.lazy(()=>e).optional(),frequency:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),cookBookId:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional()}).strict(),uat=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>$5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>zS).optional(),_max:t.lazy(()=>zS).optional()}).strict(),sat=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>J5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),OB=t.object({equals:t.lazy(()=>nt).optional().nullable(),in:t.lazy(()=>nt).array().optional().nullable(),notIn:t.lazy(()=>nt).array().optional().nullable(),not:t.union([t.lazy(()=>nt),t.lazy(()=>bS)]).optional().nullable()}).strict(),ZM=t.object({every:t.lazy(()=>ka).optional(),some:t.lazy(()=>ka).optional(),none:t.lazy(()=>ka).optional()}).strict(),t2=t.object({every:t.lazy(()=>Oe).optional(),some:t.lazy(()=>Oe).optional(),none:t.lazy(()=>Oe).optional()}).strict(),vM=t.object({every:t.lazy(()=>sa).optional(),some:t.lazy(()=>sa).optional(),none:t.lazy(()=>sa).optional()}).strict(),e2=t.object({_count:t.lazy(()=>e).optional()}).strict(),yat=t.object({_count:t.lazy(()=>e).optional()}).strict(),o2=t.object({_count:t.lazy(()=>e).optional()}).strict(),dat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),zat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),mat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),bat=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),category:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),usdaFoodId:t.lazy(()=>e).optional(),nutritionSource:t.lazy(()=>e).optional(),nutritionUpdatedAt:t.lazy(()=>e).optional()}).strict(),hat=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),dietaryRestrictionId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional()}).strict(),Iat=t.object({equals:t.lazy(()=>nt).optional().nullable(),in:t.lazy(()=>nt).array().optional().nullable(),notIn:t.lazy(()=>nt).array().optional().nullable(),not:t.union([t.lazy(()=>nt),t.lazy(()=>K5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),jI=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),OM=t.object({is:t.lazy(()=>le).optional().nullable(),isNot:t.lazy(()=>le).optional().nullable()}).strict(),vT=t.object({recipeId:t.number(),ingredientId:t.number(),recipeVersionId:t.number()}).strict(),OT=t.object({recipeId:t.number(),ingredientId:t.number()}).strict(),gat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Cat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Aat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Sat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),processingInstructions:t.lazy(()=>e).optional(),isOptional:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),Tat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),substituteIngredients:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),density:t.lazy(()=>e).optional(),yield:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional()}).strict(),ZN=t.object({recipeId:t.number(),stepNumber:t.number(),recipeVersionId:t.number()}).strict(),Pat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),Uat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),Wat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),Rat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),instruction:t.lazy(()=>e).optional(),imageUrl:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional(),temperatureUnit:t.lazy(()=>e).optional(),isCritical:t.lazy(()=>e).optional(),techniqueTips:t.lazy(()=>e).optional(),warningNotes:t.lazy(()=>e).optional()}).strict(),kat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),stepNumber:t.lazy(()=>e).optional(),recipeVersionId:t.lazy(()=>e).optional(),timeInMinutes:t.lazy(()=>e).optional(),temperature:t.lazy(()=>e).optional()}).strict(),BS=t.object({is:t.lazy(()=>_t).optional(),isNot:t.lazy(()=>_t).optional()}).strict(),fM=t.object({every:t.lazy(()=>Ra).optional(),some:t.lazy(()=>Ra).optional(),none:t.lazy(()=>Ra).optional()}).strict(),n2=t.object({_count:t.lazy(()=>e).optional()}).strict(),vN=t.object({inventoryId:t.number(),ingredientId:t.number()}).strict(),xat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),jat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Mat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),Zat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastCountDate:t.lazy(()=>e).optional(),lastOrderDate:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),lastUpdated:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),location:t.lazy(()=>e).optional(),barcode:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),vat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),minQuantity:t.lazy(()=>e).optional(),restockThreshold:t.lazy(()=>e).optional(),lastUpdatedById:t.lazy(()=>e).optional(),par:t.lazy(()=>e).optional(),reorderPoint:t.lazy(()=>e).optional(),maxQuantity:t.lazy(()=>e).optional(),currentPrice:t.lazy(()=>e).optional(),averageCost:t.lazy(()=>e).optional(),lastPurchasePrice:t.lazy(()=>e).optional()}).strict(),fB=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>hS)]).optional()}).strict(),Oat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),fat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),wat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Nat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),type:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),reference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional()}).strict(),Bat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),previousQty:t.lazy(()=>e).optional(),newQty:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),qat=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>X5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),wB=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>IS)]).optional()}).strict(),Fat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Dat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),_at=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Eat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),startedAt:t.lazy(()=>e).optional(),completedAt:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Lat=t.object({id:t.lazy(()=>e).optional(),inventoryId:t.lazy(()=>e).optional(),createdById:t.lazy(()=>e).optional()}).strict(),Vat=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>t6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),a2=t.object({is:t.lazy(()=>Je).optional(),isNot:t.lazy(()=>Je).optional()}).strict(),ON=t.object({stockCountId:t.number(),itemId:t.number()}).strict(),Hat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Qat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Yat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),Gat=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional(),notes:t.lazy(()=>e).optional()}).strict(),$at=t.object({id:t.lazy(()=>e).optional(),stockCountId:t.lazy(()=>e).optional(),itemId:t.lazy(()=>e).optional(),expectedQty:t.lazy(()=>e).optional(),actualQty:t.lazy(()=>e).optional(),difference:t.lazy(()=>e).optional()}).strict(),Jat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),Kat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),Xat=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),tit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional(),lastPrepared:t.lazy(()=>e).optional()}).strict(),eit=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),totalCost:t.lazy(()=>e).optional(),profitMargin:t.lazy(()=>e).optional(),averageRating:t.lazy(()=>e).optional(),preparationCount:t.lazy(()=>e).optional()}).strict(),NB=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>gS)]).optional()}).strict(),oit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),nit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),ait=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),iit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),lit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),vendorId:t.lazy(()=>e).optional()}).strict(),rit=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>e6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),i2=t.object({is:t.lazy(()=>Ke).optional(),isNot:t.lazy(()=>Ke).optional()}).strict(),pit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),cit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),uit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),sit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),unit:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),yit=t.object({id:t.lazy(()=>e).optional(),orderId:t.lazy(()=>e).optional(),ingredientId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional()}).strict(),dit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zit=t.object({id:t.lazy(()=>e).optional()}).strict(),mit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),bit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),contact:t.lazy(()=>e).optional(),email:t.lazy(()=>e).optional(),phone:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hit=t.object({id:t.lazy(()=>e).optional()}).strict(),BB=t.object({equals:t.lazy(()=>Qt).optional(),in:t.lazy(()=>Qt).array().optional(),notIn:t.lazy(()=>Qt).array().optional(),not:t.union([t.lazy(()=>Qt),t.lazy(()=>CS)]).optional()}).strict(),l2=t.object({every:t.lazy(()=>Ia).optional(),some:t.lazy(()=>Ia).optional(),none:t.lazy(()=>Ia).optional()}).strict(),Iit=t.object({_count:t.lazy(()=>e).optional()}).strict(),git=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Cit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Ait=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Sit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),startTime:t.lazy(()=>e).optional(),endTime:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional()}).strict(),Tit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Pit=t.object({equals:t.lazy(()=>Qt).optional(),in:t.lazy(()=>Qt).array().optional(),notIn:t.lazy(()=>Qt).array().optional(),not:t.union([t.lazy(()=>Qt),t.lazy(()=>o6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),qS=t.object({equals:t.lazy(()=>et).optional(),in:t.lazy(()=>et).array().optional(),notIn:t.lazy(()=>et).array().optional(),not:t.union([t.lazy(()=>et),t.lazy(()=>AS)]).optional()}).strict(),Uit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Wit=t.object({id:t.lazy(()=>e).optional()}).strict(),Rit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),kit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),xit=t.object({id:t.lazy(()=>e).optional()}).strict(),r2=t.object({equals:t.lazy(()=>et).optional(),in:t.lazy(()=>et).array().optional(),notIn:t.lazy(()=>et).array().optional(),not:t.union([t.lazy(()=>et),t.lazy(()=>n6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),p2=t.object({is:t.lazy(()=>to).optional(),isNot:t.lazy(()=>to).optional()}).strict(),jit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Mit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Zit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),vit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),status:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),Oit=t.object({id:t.lazy(()=>e).optional(),prepBoardId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),assignedToId:t.lazy(()=>e).optional()}).strict(),fit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),wit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),Nit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Bit=t.object({id:t.lazy(()=>e).optional(),token:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional(),expiresAt:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),qit=t.object({id:t.lazy(()=>e).optional(),userId:t.lazy(()=>e).optional()}).strict(),c2=t.object({every:t.lazy(()=>we).optional(),some:t.lazy(()=>we).optional(),none:t.lazy(()=>we).optional()}).strict(),Fit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Dit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),_it=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),Eit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Lit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),Vit=t.object({id:t.lazy(()=>e).optional(),restaurantId:t.lazy(()=>e).optional()}).strict(),fN=t.object({menuItemId:t.number(),recipeId:t.number()}).strict(),Hit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Qit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),Yit=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),Git=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),joinAt:t.lazy(()=>e).optional()}).strict(),$it=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional()}).strict(),vb=t.object({equals:t.number().array().optional().nullable(),has:t.number().optional().nullable(),hasEvery:t.number().array().optional(),hasSome:t.number().array().optional(),isEmpty:t.boolean().optional()}).strict(),u2=t.object({is:t.lazy(()=>we).optional().nullable(),isNot:t.lazy(()=>we).optional().nullable()}).strict(),s2=t.object({is:t.lazy(()=>De).optional().nullable(),isNot:t.lazy(()=>De).optional().nullable()}).strict(),y2=t.object({every:t.lazy(()=>Ta).optional(),some:t.lazy(()=>Ta).optional(),none:t.lazy(()=>Ta).optional()}).strict(),Jit=t.object({_count:t.lazy(()=>e).optional()}).strict(),Kit=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),allergens:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),Xit=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),tlt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),elt=t.object({id:t.lazy(()=>e).optional(),name:t.lazy(()=>e).optional(),description:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),isActive:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),olt=t.object({id:t.lazy(()=>e).optional(),price:t.lazy(()=>e).optional(),foodCost:t.lazy(()=>e).optional(),recipeIds:t.lazy(()=>e).optional(),recipeServingsAmount:t.lazy(()=>e).optional(),recipeServingsCost:t.lazy(()=>e).optional(),menuId:t.lazy(()=>e).optional(),categoryId:t.lazy(()=>e).optional()}).strict(),nlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),alt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),ilt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),llt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),rlt=t.object({id:t.lazy(()=>e).optional(),menuItemId:t.lazy(()=>e).optional(),calories:t.lazy(()=>e).optional(),fat:t.lazy(()=>e).optional(),saturatedFat:t.lazy(()=>e).optional(),transFat:t.lazy(()=>e).optional(),cholesterol:t.lazy(()=>e).optional(),sodium:t.lazy(()=>e).optional(),carbohydrates:t.lazy(()=>e).optional(),fiber:t.lazy(()=>e).optional(),sugar:t.lazy(()=>e).optional(),protein:t.lazy(()=>e).optional()}).strict(),plt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),clt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),ult=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),slt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),ylt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),cost:t.lazy(()=>e).optional()}).strict(),dlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),zlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),mlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),blt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional(),date:t.lazy(()=>e).optional(),createdAt:t.lazy(()=>e).optional(),updatedAt:t.lazy(()=>e).optional()}).strict(),hlt=t.object({id:t.lazy(()=>e).optional(),recipeId:t.lazy(()=>e).optional(),quantity:t.lazy(()=>e).optional()}).strict(),Ilt=t.object({create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),connect:t.lazy(()=>C).optional()}).strict(),r=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),a=t.object({set:t.string().optional()}).strict(),y=t.object({set:t.boolean().optional()}).strict(),glt=t.object({create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]).optional(),connectOrCreate:t.lazy(()=>a6).optional(),upsert:t.lazy(()=>prt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>crt),t.lazy(()=>UD),t.lazy(()=>WD)]).optional()}).strict(),n=t.object({set:t.number().optional(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Clt=t.object({create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),connect:t.lazy(()=>C).optional()}).strict(),u=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),l=t.object({set:t.string().optional().nullable()}).strict(),o=t.object({set:t.coerce.date().optional()}).strict(),Alt=t.object({create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]).optional(),connectOrCreate:t.lazy(()=>i6).optional(),upsert:t.lazy(()=>urt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>srt),t.lazy(()=>RD),t.lazy(()=>kD)]).optional()}).strict(),Slt=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Tlt=t.object({create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]).optional(),connectOrCreate:t.lazy(()=>l6).optional(),upsert:t.lazy(()=>yrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>drt),t.lazy(()=>xD),t.lazy(()=>jD)]).optional()}).strict(),Plt=t.object({create:t.union([t.lazy(()=>oZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),connect:t.lazy(()=>C).optional()}).strict(),CC=t.object({set:t.lazy(()=>de).optional()}).strict(),b=t.object({set:t.number().optional().nullable(),increment:t.number().optional(),decrement:t.number().optional(),multiply:t.number().optional(),divide:t.number().optional()}).strict(),Ult=t.object({create:t.union([t.lazy(()=>oZ),t.lazy(()=>nZ)]).optional(),connectOrCreate:t.lazy(()=>r6).optional(),upsert:t.lazy(()=>zrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>mrt),t.lazy(()=>MD),t.lazy(()=>ZD)]).optional()}).strict(),Wlt=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Rlt=t.object({create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]).optional(),connectOrCreate:t.lazy(()=>p6).optional(),upsert:t.lazy(()=>brt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>hrt),t.lazy(()=>vD),t.lazy(()=>OD)]).optional()}).strict(),klt=t.object({create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),connect:t.lazy(()=>C).optional()}).strict(),xlt=t.object({create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]).optional(),connectOrCreate:t.lazy(()=>c6).optional(),upsert:t.lazy(()=>Irt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>grt),t.lazy(()=>fD),t.lazy(()=>wD)]).optional()}).strict(),jlt=t.object({create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),connect:t.lazy(()=>C).optional()}).strict(),Mlt=t.object({create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]).optional(),connectOrCreate:t.lazy(()=>u6).optional(),upsert:t.lazy(()=>Crt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Art),t.lazy(()=>ND),t.lazy(()=>BD)]).optional()}).strict(),d2=t.object({create:t.union([t.lazy(()=>uZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),connect:t.lazy(()=>X).optional()}).strict(),z2=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>dZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),connect:t.lazy(()=>x).optional()}).strict(),m2=t.object({create:t.union([t.lazy(()=>uZ),t.lazy(()=>sZ)]).optional(),connectOrCreate:t.lazy(()=>s6).optional(),upsert:t.lazy(()=>Srt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>Trt),t.lazy(()=>qD),t.lazy(()=>FD)]).optional()}).strict(),b2=t.object({create:t.union([t.lazy(()=>yZ),t.lazy(()=>dZ)]).optional(),connectOrCreate:t.lazy(()=>y6).optional(),upsert:t.lazy(()=>Prt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>Urt),t.lazy(()=>DD),t.lazy(()=>_D)]).optional()}).strict(),h2=t.object({create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),connect:t.lazy(()=>Jt).optional()}).strict(),I2=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>bZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),g2=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),createMany:t.lazy(()=>bZ).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),C2=t.object({create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]).optional(),connectOrCreate:t.lazy(()=>d6).optional(),upsert:t.lazy(()=>Wrt).optional(),connect:t.lazy(()=>Jt).optional(),update:t.union([t.lazy(()=>Rrt),t.lazy(()=>ED),t.lazy(()=>LD)]).optional()}).strict(),A2=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),createMany:t.lazy(()=>bZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),updateMany:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),S2=t.object({create:t.union([t.lazy(()=>$p),t.lazy(()=>$p).array(),t.lazy(()=>Jp),t.lazy(()=>Jp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ob),t.lazy(()=>Ob).array()]).optional(),upsert:t.union([t.lazy(()=>gU),t.lazy(()=>gU).array()]).optional(),createMany:t.lazy(()=>bZ).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>CU),t.lazy(()=>CU).array()]).optional(),updateMany:t.union([t.lazy(()=>AU),t.lazy(()=>AU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),QT=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),connect:t.lazy(()=>C).optional()}).strict(),YT=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),GT=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),$T=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),connect:t.lazy(()=>M).optional()}).strict(),JT=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),connect:t.lazy(()=>M).optional()}).strict(),KT=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),XT=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),I=t.object({set:t.coerce.date().optional().nullable()}).strict(),tP=t.object({create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]).optional(),connectOrCreate:t.lazy(()=>z6).optional(),upsert:t.lazy(()=>krt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>xrt),t.lazy(()=>VD),t.lazy(()=>HD)]).optional()}).strict(),eP=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),updateMany:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),oP=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),nP=t.object({create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]).optional(),connectOrCreate:t.lazy(()=>m6).optional(),upsert:t.lazy(()=>jrt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Mrt),t.lazy(()=>QD),t.lazy(()=>YD)]).optional()}).strict(),aP=t.object({create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]).optional(),connectOrCreate:t.lazy(()=>b6).optional(),upsert:t.lazy(()=>Zrt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>vrt),t.lazy(()=>GD),t.lazy(()=>$D)]).optional()}).strict(),iP=t.object({create:t.union([t.lazy(()=>Kp),t.lazy(()=>Kp).array(),t.lazy(()=>Xp),t.lazy(()=>Xp).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fb),t.lazy(()=>fb).array()]).optional(),upsert:t.union([t.lazy(()=>SU),t.lazy(()=>SU).array()]).optional(),createMany:t.lazy(()=>gZ).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>TU),t.lazy(()=>TU).array()]).optional(),updateMany:t.union([t.lazy(()=>PU),t.lazy(()=>PU).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),lP=t.object({create:t.union([t.lazy(()=>tc),t.lazy(()=>tc).array(),t.lazy(()=>ec),t.lazy(()=>ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wb),t.lazy(()=>wb).array()]).optional(),upsert:t.union([t.lazy(()=>UU),t.lazy(()=>UU).array()]).optional(),createMany:t.lazy(()=>CZ).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>WU),t.lazy(()=>WU).array()]).optional(),updateMany:t.union([t.lazy(()=>RU),t.lazy(()=>RU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),qB=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),connect:t.lazy(()=>X).optional()}).strict(),FB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>RZ).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),DB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),_B=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),createMany:t.lazy(()=>RZ).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),EB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional()}).strict(),bp=t.object({set:t.lazy(()=>Ft).optional()}).strict(),LB=t.object({create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]).optional(),connectOrCreate:t.lazy(()=>h6).optional(),upsert:t.lazy(()=>Ort).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>frt),t.lazy(()=>JD),t.lazy(()=>KD)]).optional()}).strict(),VB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),createMany:t.lazy(()=>RZ).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),updateMany:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),HB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),updateMany:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),QB=t.object({create:t.union([t.lazy(()=>oc),t.lazy(()=>oc).array(),t.lazy(()=>nc),t.lazy(()=>nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nb),t.lazy(()=>Nb).array()]).optional(),upsert:t.union([t.lazy(()=>kU),t.lazy(()=>kU).array()]).optional(),createMany:t.lazy(()=>RZ).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>xU),t.lazy(()=>xU).array()]).optional(),updateMany:t.union([t.lazy(()=>jU),t.lazy(()=>jU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),YB=t.object({create:t.union([t.lazy(()=>ac),t.lazy(()=>ac).array(),t.lazy(()=>ic),t.lazy(()=>ic).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bb),t.lazy(()=>Bb).array()]).optional(),upsert:t.union([t.lazy(()=>MU),t.lazy(()=>MU).array()]).optional(),createMany:t.lazy(()=>kZ).optional(),set:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),disconnect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),delete:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),connect:t.union([t.lazy(()=>Ae),t.lazy(()=>Ae).array()]).optional(),update:t.union([t.lazy(()=>ZU),t.lazy(()=>ZU).array()]).optional(),updateMany:t.union([t.lazy(()=>vU),t.lazy(()=>vU).array()]).optional(),deleteMany:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional()}).strict(),GB=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),connect:t.lazy(()=>C).optional()}).strict(),$B=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),JB=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),connect:t.lazy(()=>ct).optional()}).strict(),KB=t.object({create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]).optional(),connectOrCreate:t.lazy(()=>I6).optional(),upsert:t.lazy(()=>wrt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Nrt),t.lazy(()=>XD),t.lazy(()=>t_)]).optional()}).strict(),XB=t.object({create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]).optional(),connectOrCreate:t.lazy(()=>g6).optional(),upsert:t.lazy(()=>Brt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>qrt),t.lazy(()=>e_),t.lazy(()=>o_)]).optional()}).strict(),tq=t.object({create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]).optional(),connectOrCreate:t.lazy(()=>C6).optional(),upsert:t.lazy(()=>Frt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Ne)]).optional(),connect:t.lazy(()=>ct).optional(),update:t.union([t.lazy(()=>Drt),t.lazy(()=>n_),t.lazy(()=>a_)]).optional()}).strict(),Zlt=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),connect:t.lazy(()=>Yt).optional()}).strict(),AC=t.object({set:t.lazy(()=>ce).optional()}).strict(),vlt=t.object({create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]).optional(),connectOrCreate:t.lazy(()=>A6).optional(),upsert:t.lazy(()=>_rt).optional(),connect:t.lazy(()=>Yt).optional(),update:t.union([t.lazy(()=>Ert),t.lazy(()=>i_),t.lazy(()=>l_)]).optional()}).strict(),eq=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),connect:t.lazy(()=>X).optional()}).strict(),oq=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),nq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>FZ).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),aq=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional()}).strict(),iq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),createMany:t.lazy(()=>FZ).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),hp=t.object({set:t.lazy(()=>Dt).optional()}).strict(),lq=t.object({create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]).optional(),connectOrCreate:t.lazy(()=>S6).optional(),upsert:t.lazy(()=>Lrt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>Vrt),t.lazy(()=>r_),t.lazy(()=>p_)]).optional()}).strict(),rq=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),updateMany:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),pq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),createMany:t.lazy(()=>FZ).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),updateMany:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),cq=t.object({create:t.union([t.lazy(()=>lc),t.lazy(()=>lc).array(),t.lazy(()=>rc),t.lazy(()=>rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qb),t.lazy(()=>qb).array()]).optional(),upsert:t.union([t.lazy(()=>OU),t.lazy(()=>OU).array()]).optional(),createMany:t.lazy(()=>qZ).optional(),set:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),disconnect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),delete:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),connect:t.union([t.lazy(()=>oe),t.lazy(()=>oe).array()]).optional(),update:t.union([t.lazy(()=>fU),t.lazy(()=>fU).array()]).optional(),updateMany:t.union([t.lazy(()=>wU),t.lazy(()=>wU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional()}).strict(),uq=t.object({create:t.union([t.lazy(()=>pc),t.lazy(()=>pc).array(),t.lazy(()=>cc),t.lazy(()=>cc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fb),t.lazy(()=>Fb).array()]).optional(),upsert:t.union([t.lazy(()=>NU),t.lazy(()=>NU).array()]).optional(),createMany:t.lazy(()=>FZ).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>BU),t.lazy(()=>BU).array()]).optional(),updateMany:t.union([t.lazy(()=>qU),t.lazy(()=>qU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),T2=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),P2=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),U2=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),Qm=t.object({set:t.lazy(()=>Ht).optional()}).strict(),W2=t.object({create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]).optional(),connectOrCreate:t.lazy(()=>T6).optional(),upsert:t.lazy(()=>Hrt).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Qrt),t.lazy(()=>c_),t.lazy(()=>u_)]).optional()}).strict(),R2=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),updateMany:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),k2=t.object({create:t.union([t.lazy(()=>uc),t.lazy(()=>uc).array(),t.lazy(()=>sc),t.lazy(()=>sc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Db),t.lazy(()=>Db).array()]).optional(),upsert:t.union([t.lazy(()=>FU),t.lazy(()=>FU).array()]).optional(),createMany:t.lazy(()=>EZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>DU),t.lazy(()=>DU).array()]).optional(),updateMany:t.union([t.lazy(()=>_U),t.lazy(()=>_U).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),sq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),connect:t.lazy(()=>Gt).optional()}).strict(),yq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),connect:t.lazy(()=>M).optional()}).strict(),dq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>YZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),zq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),createMany:t.lazy(()=>YZ).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional()}).strict(),mq=t.object({create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]).optional(),connectOrCreate:t.lazy(()=>P6).optional(),upsert:t.lazy(()=>Yrt).optional(),connect:t.lazy(()=>Gt).optional(),update:t.union([t.lazy(()=>Grt),t.lazy(()=>s_),t.lazy(()=>y_)]).optional()}).strict(),bq=t.object({create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]).optional(),connectOrCreate:t.lazy(()=>U6).optional(),upsert:t.lazy(()=>$rt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Jrt),t.lazy(()=>d_),t.lazy(()=>z_)]).optional()}).strict(),hq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),createMany:t.lazy(()=>YZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),updateMany:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Iq=t.object({create:t.union([t.lazy(()=>yc),t.lazy(()=>yc).array(),t.lazy(()=>dc),t.lazy(()=>dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_b),t.lazy(()=>_b).array()]).optional(),upsert:t.union([t.lazy(()=>EU),t.lazy(()=>EU).array()]).optional(),createMany:t.lazy(()=>YZ).optional(),set:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),disconnect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),delete:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),connect:t.union([t.lazy(()=>It),t.lazy(()=>It).array()]).optional(),update:t.union([t.lazy(()=>LU),t.lazy(()=>LU).array()]).optional(),updateMany:t.union([t.lazy(()=>VU),t.lazy(()=>VU).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional()}).strict(),Ym=t.object({set:t.string().array()}).strict(),x2=t.object({create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),connect:t.lazy(()=>rt).optional()}).strict(),j2=t.object({create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),connect:t.lazy(()=>oe).optional()}).strict(),Lz=t.object({set:t.lazy(()=>Vt).optional()}).strict(),Vz=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),M2=t.object({create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]).optional(),connectOrCreate:t.lazy(()=>W6).optional(),upsert:t.lazy(()=>Krt).optional(),connect:t.lazy(()=>rt).optional(),update:t.union([t.lazy(()=>Xrt),t.lazy(()=>m_),t.lazy(()=>b_)]).optional()}).strict(),Z2=t.object({create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]).optional(),connectOrCreate:t.lazy(()=>R6).optional(),upsert:t.lazy(()=>tpt).optional(),connect:t.lazy(()=>oe).optional(),update:t.union([t.lazy(()=>ept),t.lazy(()=>h_),t.lazy(()=>I_)]).optional()}).strict(),v2=t.object({create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),connect:t.lazy(()=>$t).optional()}).strict(),O2=t.object({create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),connect:t.lazy(()=>J).optional()}).strict(),f2=t.object({create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]).optional(),connectOrCreate:t.lazy(()=>k6).optional(),upsert:t.lazy(()=>opt).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>npt),t.lazy(()=>g_),t.lazy(()=>C_)]).optional()}).strict(),w2=t.object({create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]).optional(),connectOrCreate:t.lazy(()=>x6).optional(),upsert:t.lazy(()=>apt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>ipt),t.lazy(()=>A_),t.lazy(()=>S_)]).optional()}).strict(),lp=t.object({set:t.string().array()}).strict(),gq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),connect:t.lazy(()=>X).optional()}).strict(),Cq=t.object({create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),connect:t.lazy(()=>x).optional()}).strict(),Aq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Vr=t.object({set:t.lazy(()=>Zt).optional()}).strict(),Hr=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),Qr=t.object({set:t.lazy(()=>vt).optional()}).strict(),Sq=t.object({create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]).optional(),connectOrCreate:t.lazy(()=>j6).optional(),upsert:t.lazy(()=>lpt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>rpt),t.lazy(()=>T_),t.lazy(()=>P_)]).optional()}).strict(),Tq=t.object({create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]).optional(),connectOrCreate:t.lazy(()=>M6).optional(),upsert:t.lazy(()=>ppt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>cpt),t.lazy(()=>U_),t.lazy(()=>W_)]).optional()}).strict(),Pq=t.object({create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]).optional(),connectOrCreate:t.lazy(()=>Z6).optional(),upsert:t.lazy(()=>upt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>spt),t.lazy(()=>R_),t.lazy(()=>k_)]).optional()}).strict(),Uq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Wq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Rq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),kq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),xq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),jq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),Mq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),updateMany:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Zq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),updateMany:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),vq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),updateMany:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Oq=t.object({create:t.union([t.lazy(()=>zc),t.lazy(()=>zc).array(),t.lazy(()=>mc),t.lazy(()=>mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eb),t.lazy(()=>Eb).array()]).optional(),upsert:t.union([t.lazy(()=>HU),t.lazy(()=>HU).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>QU),t.lazy(()=>QU).array()]).optional(),updateMany:t.union([t.lazy(()=>YU),t.lazy(()=>YU).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),fq=t.object({create:t.union([t.lazy(()=>bc),t.lazy(()=>bc).array(),t.lazy(()=>hc),t.lazy(()=>hc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lb),t.lazy(()=>Lb).array()]).optional(),upsert:t.union([t.lazy(()=>GU),t.lazy(()=>GU).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>$U),t.lazy(()=>$U).array()]).optional(),updateMany:t.union([t.lazy(()=>JU),t.lazy(()=>JU).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),wq=t.object({create:t.union([t.lazy(()=>Ic),t.lazy(()=>Ic).array(),t.lazy(()=>gc),t.lazy(()=>gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vb),t.lazy(()=>Vb).array()]).optional(),upsert:t.union([t.lazy(()=>KU),t.lazy(()=>KU).array()]).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>XU),t.lazy(()=>XU).array()]).optional(),updateMany:t.union([t.lazy(()=>tW),t.lazy(()=>tW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),Olt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),flt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),wlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),updateMany:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),Nlt=t.object({create:t.union([t.lazy(()=>Cc),t.lazy(()=>Cc).array(),t.lazy(()=>Ac),t.lazy(()=>Ac).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hb),t.lazy(()=>Hb).array()]).optional(),upsert:t.union([t.lazy(()=>eW),t.lazy(()=>eW).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>oW),t.lazy(()=>oW).array()]).optional(),updateMany:t.union([t.lazy(()=>nW),t.lazy(()=>nW).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),Nq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),connect:t.lazy(()=>X).optional()}).strict(),Bq=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),connect:t.lazy(()=>x).optional()}).strict(),qq=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Fq=t.object({create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]).optional(),connectOrCreate:t.lazy(()=>v6).optional(),upsert:t.lazy(()=>ypt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>dpt),t.lazy(()=>x_),t.lazy(()=>j_)]).optional()}).strict(),Dq=t.object({create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]).optional(),connectOrCreate:t.lazy(()=>O6).optional(),upsert:t.lazy(()=>zpt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>mpt),t.lazy(()=>M_),t.lazy(()=>Z_)]).optional()}).strict(),_q=t.object({create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]).optional(),connectOrCreate:t.lazy(()=>f6).optional(),upsert:t.lazy(()=>bpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>hpt),t.lazy(()=>v_),t.lazy(()=>O_)]).optional()}).strict(),Eq=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),connect:t.lazy(()=>X).optional()}).strict(),Lq=t.object({create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),connect:t.lazy(()=>J).optional()}).strict(),Vq=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Hq=t.object({create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]).optional(),connectOrCreate:t.lazy(()=>w6).optional(),upsert:t.lazy(()=>Ipt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>gpt),t.lazy(()=>f_),t.lazy(()=>w_)]).optional()}).strict(),Qq=t.object({create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]).optional(),connectOrCreate:t.lazy(()=>N6).optional(),upsert:t.lazy(()=>Cpt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Apt),t.lazy(()=>N_),t.lazy(()=>B_)]).optional()}).strict(),Yq=t.object({create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]).optional(),connectOrCreate:t.lazy(()=>B6).optional(),upsert:t.lazy(()=>Spt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Tpt),t.lazy(()=>q_),t.lazy(()=>F_)]).optional()}).strict(),Gq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),connect:t.lazy(()=>X).optional()}).strict(),$q=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),connect:t.lazy(()=>M).optional()}).strict(),Jq=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Uv).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Kq=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),createMany:t.lazy(()=>Uv).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),rp=t.object({set:t.lazy(()=>wt).optional()}).strict(),Xq=t.object({create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]).optional(),connectOrCreate:t.lazy(()=>q6).optional(),upsert:t.lazy(()=>Ppt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>Upt),t.lazy(()=>D_),t.lazy(()=>__)]).optional()}).strict(),tF=t.object({create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]).optional(),connectOrCreate:t.lazy(()=>F6).optional(),upsert:t.lazy(()=>Wpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Rpt),t.lazy(()=>E_),t.lazy(()=>L_)]).optional()}).strict(),eF=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>Uv).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),updateMany:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),oF=t.object({create:t.union([t.lazy(()=>Sc),t.lazy(()=>Sc).array(),t.lazy(()=>Tc),t.lazy(()=>Tc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qb),t.lazy(()=>Qb).array()]).optional(),upsert:t.union([t.lazy(()=>aW),t.lazy(()=>aW).array()]).optional(),createMany:t.lazy(()=>Uv).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>iW),t.lazy(()=>iW).array()]).optional(),updateMany:t.union([t.lazy(()=>lW),t.lazy(()=>lW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),nF=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),connect:t.lazy(()=>pt).optional()}).strict(),aF=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),connect:t.lazy(()=>C).optional()}).strict(),iF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),connect:t.lazy(()=>M).optional()}).strict(),lF=t.object({create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]).optional(),connectOrCreate:t.lazy(()=>D6).optional(),upsert:t.lazy(()=>kpt).optional(),connect:t.lazy(()=>pt).optional(),update:t.union([t.lazy(()=>xpt),t.lazy(()=>V_),t.lazy(()=>H_)]).optional()}).strict(),rF=t.object({create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]).optional(),connectOrCreate:t.lazy(()=>_6).optional(),upsert:t.lazy(()=>jpt).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Mpt),t.lazy(()=>Q_),t.lazy(()=>Y_)]).optional()}).strict(),pF=t.object({create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]).optional(),connectOrCreate:t.lazy(()=>E6).optional(),upsert:t.lazy(()=>Zpt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>vpt),t.lazy(()=>G_),t.lazy(()=>$_)]).optional()}).strict(),Blt=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),connect:t.lazy(()=>ae).optional()}).strict(),SC=t.object({set:t.lazy(()=>ue).optional()}).strict(),qlt=t.object({create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]).optional(),connectOrCreate:t.lazy(()=>L6).optional(),upsert:t.lazy(()=>Opt).optional(),connect:t.lazy(()=>ae).optional(),update:t.union([t.lazy(()=>fpt),t.lazy(()=>J_),t.lazy(()=>K_)]).optional()}).strict(),Flt=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),connect:t.lazy(()=>M).optional()}).strict(),TC=t.object({set:t.lazy(()=>se).optional()}).strict(),Dlt=t.object({create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]).optional(),connectOrCreate:t.lazy(()=>V6).optional(),upsert:t.lazy(()=>wpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Npt),t.lazy(()=>X_),t.lazy(()=>tE)]).optional()}).strict(),_lt=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),connect:t.lazy(()=>M).optional()}).strict(),PC=t.object({set:t.lazy(()=>ye).optional()}).strict(),Elt=t.object({create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]).optional(),connectOrCreate:t.lazy(()=>H6).optional(),upsert:t.lazy(()=>Bpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>qpt),t.lazy(()=>eE),t.lazy(()=>oE)]).optional()}).strict(),cF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),connect:t.lazy(()=>w).optional()}).strict(),uF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),connect:t.lazy(()=>C).optional()}).strict(),sF=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),connect:t.lazy(()=>M).optional()}).strict(),yF=t.object({create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]).optional(),connectOrCreate:t.lazy(()=>Q6).optional(),upsert:t.lazy(()=>Fpt).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Dpt),t.lazy(()=>nE),t.lazy(()=>aE)]).optional()}).strict(),dF=t.object({create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]).optional(),connectOrCreate:t.lazy(()=>Y6).optional(),upsert:t.lazy(()=>_pt).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>O)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>O)]).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Ept),t.lazy(()=>iE),t.lazy(()=>lE)]).optional()}).strict(),zF=t.object({create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]).optional(),connectOrCreate:t.lazy(()=>G6).optional(),upsert:t.lazy(()=>Lpt).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>Vpt),t.lazy(()=>rE),t.lazy(()=>pE)]).optional()}).strict(),Llt=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Vlt=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),Hlt=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),updateMany:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),Qlt=t.object({create:t.union([t.lazy(()=>Pc),t.lazy(()=>Pc).array(),t.lazy(()=>Uc),t.lazy(()=>Uc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yb),t.lazy(()=>Yb).array()]).optional(),upsert:t.union([t.lazy(()=>rW),t.lazy(()=>rW).array()]).optional(),createMany:t.lazy(()=>Lv).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>pW),t.lazy(()=>pW).array()]).optional(),updateMany:t.union([t.lazy(()=>cW),t.lazy(()=>cW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),N2=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),connect:t.lazy(()=>J).optional()}).strict(),B2=t.object({create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),connect:t.lazy(()=>np).optional()}).strict(),q2=t.object({create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]).optional(),connectOrCreate:t.lazy(()=>$6).optional(),upsert:t.lazy(()=>Hpt).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Qpt),t.lazy(()=>cE),t.lazy(()=>uE)]).optional()}).strict(),F2=t.object({create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]).optional(),connectOrCreate:t.lazy(()=>J6).optional(),upsert:t.lazy(()=>Ypt).optional(),connect:t.lazy(()=>np).optional(),update:t.union([t.lazy(()=>Gpt),t.lazy(()=>sE),t.lazy(()=>yE)]).optional()}).strict(),Ylt=t.object({create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),connect:t.lazy(()=>x).optional()}).strict(),Glt=t.object({create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]).optional(),connectOrCreate:t.lazy(()=>K6).optional(),upsert:t.lazy(()=>$pt).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>Jpt),t.lazy(()=>dE),t.lazy(()=>zE)]).optional()}).strict(),D2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional()}).strict(),_2=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),E2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),connect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional()}).strict(),L2=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),V2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),disconnect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),delete:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),connect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),update:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),H2=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),updateMany:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Q2=t.object({create:t.union([t.lazy(()=>Wc),t.lazy(()=>Wc).array(),t.lazy(()=>Rc),t.lazy(()=>Rc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gb),t.lazy(()=>Gb).array()]).optional(),upsert:t.union([t.lazy(()=>uW),t.lazy(()=>uW).array()]).optional(),createMany:t.lazy(()=>Jv).optional(),set:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),disconnect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),delete:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),connect:t.union([t.lazy(()=>X),t.lazy(()=>X).array()]).optional(),update:t.union([t.lazy(()=>sW),t.lazy(()=>sW).array()]).optional(),updateMany:t.union([t.lazy(()=>yW),t.lazy(()=>yW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional()}).strict(),Y2=t.object({create:t.union([t.lazy(()=>kc),t.lazy(()=>kc).array(),t.lazy(()=>xc),t.lazy(()=>xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$b),t.lazy(()=>$b).array()]).optional(),upsert:t.union([t.lazy(()=>dW),t.lazy(()=>dW).array()]).optional(),createMany:t.lazy(()=>Kv).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>zW),t.lazy(()=>zW).array()]).optional(),updateMany:t.union([t.lazy(()=>mW),t.lazy(()=>mW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),wM=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),connect:t.lazy(()=>X).optional()}).strict(),NM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),BM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),qM=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>nO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),FM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),createMany:t.lazy(()=>eO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),DM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),createMany:t.lazy(()=>oO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),_M=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),createMany:t.lazy(()=>nO).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),pp=t.object({set:t.lazy(()=>qt).optional()}).strict(),EM=t.object({create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]).optional(),connectOrCreate:t.lazy(()=>X6).optional(),upsert:t.lazy(()=>Kpt).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>Xpt),t.lazy(()=>mE),t.lazy(()=>bE)]).optional()}).strict(),LM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),VM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),updateMany:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),HM=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),createMany:t.lazy(()=>nO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),updateMany:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),QM=t.object({create:t.union([t.lazy(()=>jc),t.lazy(()=>jc).array(),t.lazy(()=>Mc),t.lazy(()=>Mc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jb),t.lazy(()=>Jb).array()]).optional(),upsert:t.union([t.lazy(()=>bW),t.lazy(()=>bW).array()]).optional(),createMany:t.lazy(()=>eO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hW),t.lazy(()=>hW).array()]).optional(),updateMany:t.union([t.lazy(()=>IW),t.lazy(()=>IW).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),YM=t.object({create:t.union([t.lazy(()=>Zc),t.lazy(()=>Zc).array(),t.lazy(()=>vc),t.lazy(()=>vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kb),t.lazy(()=>Kb).array()]).optional(),upsert:t.union([t.lazy(()=>gW),t.lazy(()=>gW).array()]).optional(),createMany:t.lazy(()=>oO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>CW),t.lazy(()=>CW).array()]).optional(),updateMany:t.union([t.lazy(()=>AW),t.lazy(()=>AW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),GM=t.object({create:t.union([t.lazy(()=>Oc),t.lazy(()=>Oc).array(),t.lazy(()=>fc),t.lazy(()=>fc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xb),t.lazy(()=>Xb).array()]).optional(),upsert:t.union([t.lazy(()=>SW),t.lazy(()=>SW).array()]).optional(),createMany:t.lazy(()=>nO).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>TW),t.lazy(()=>TW).array()]).optional(),updateMany:t.union([t.lazy(()=>PW),t.lazy(()=>PW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),El=t.object({create:t.union([t.lazy(()=>aO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),Ll=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),Vl=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),Hl=t.object({create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)]).optional(),connectOrCreate:t.lazy(()=>pO).optional(),connect:t.lazy(()=>$n).optional()}).strict(),Ql=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),Yl=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Gl=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),$l=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Jl=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Kl=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Xl=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),tr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),er=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),or=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),nr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),createMany:t.lazy(()=>lO).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional()}).strict(),ar=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),createMany:t.lazy(()=>rO).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional()}).strict(),ir=t.object({create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)]).optional(),connectOrCreate:t.lazy(()=>pO).optional(),connect:t.lazy(()=>$n).optional()}).strict(),lr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),createMany:t.lazy(()=>cO).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),rr=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),createMany:t.lazy(()=>uO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),pr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),createMany:t.lazy(()=>sO).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional()}).strict(),cr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),createMany:t.lazy(()=>yO).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),ur=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),createMany:t.lazy(()=>dO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),sr=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),createMany:t.lazy(()=>zO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),yr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),createMany:t.lazy(()=>mO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),dr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),createMany:t.lazy(()=>bO).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional()}).strict(),zr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),createMany:t.lazy(()=>hO).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional()}).strict(),mr=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),createMany:t.lazy(()=>IO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),br=t.object({create:t.union([t.lazy(()=>aO),t.lazy(()=>iO)]).optional(),connectOrCreate:t.lazy(()=>t3).optional(),upsert:t.lazy(()=>tct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>ect),t.lazy(()=>hE),t.lazy(()=>IE)]).optional()}).strict(),hr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Ir=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),updateMany:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),gr=t.object({create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)]).optional(),connectOrCreate:t.lazy(()=>pO).optional(),upsert:t.lazy(()=>e3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>_t)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>_t)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>o3),t.lazy(()=>gO),t.lazy(()=>CO)]).optional()}).strict(),Cr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),updateMany:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Ar=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),updateMany:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),Sr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),updateMany:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),Tr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),updateMany:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Pr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),updateMany:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Ur=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),updateMany:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Wr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),updateMany:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),Rr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),updateMany:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),kr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),updateMany:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),xr=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),updateMany:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),jr=t.object({create:t.union([t.lazy(()=>wc),t.lazy(()=>wc).array(),t.lazy(()=>Nc),t.lazy(()=>Nc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>th),t.lazy(()=>th).array()]).optional(),upsert:t.union([t.lazy(()=>UW),t.lazy(()=>UW).array()]).optional(),createMany:t.lazy(()=>lO).optional(),set:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),disconnect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),delete:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),connect:t.union([t.lazy(()=>M),t.lazy(()=>M).array()]).optional(),update:t.union([t.lazy(()=>WW),t.lazy(()=>WW).array()]).optional(),updateMany:t.union([t.lazy(()=>RW),t.lazy(()=>RW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional()}).strict(),Mr=t.object({create:t.union([t.lazy(()=>Bc),t.lazy(()=>Bc).array(),t.lazy(()=>qc),t.lazy(()=>qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eh),t.lazy(()=>eh).array()]).optional(),upsert:t.union([t.lazy(()=>kW),t.lazy(()=>kW).array()]).optional(),createMany:t.lazy(()=>rO).optional(),set:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),disconnect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),delete:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),connect:t.union([t.lazy(()=>ne),t.lazy(()=>ne).array()]).optional(),update:t.union([t.lazy(()=>xW),t.lazy(()=>xW).array()]).optional(),updateMany:t.union([t.lazy(()=>jW),t.lazy(()=>jW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional()}).strict(),Zr=t.object({create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)]).optional(),connectOrCreate:t.lazy(()=>pO).optional(),upsert:t.lazy(()=>e3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>_t)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>_t)]).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>o3),t.lazy(()=>gO),t.lazy(()=>CO)]).optional()}).strict(),vr=t.object({create:t.union([t.lazy(()=>Fc),t.lazy(()=>Fc).array(),t.lazy(()=>Dc),t.lazy(()=>Dc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oh),t.lazy(()=>oh).array()]).optional(),upsert:t.union([t.lazy(()=>MW),t.lazy(()=>MW).array()]).optional(),createMany:t.lazy(()=>cO).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>ZW),t.lazy(()=>ZW).array()]).optional(),updateMany:t.union([t.lazy(()=>vW),t.lazy(()=>vW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),Or=t.object({create:t.union([t.lazy(()=>_c),t.lazy(()=>_c).array(),t.lazy(()=>Ec),t.lazy(()=>Ec).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nh),t.lazy(()=>nh).array()]).optional(),upsert:t.union([t.lazy(()=>OW),t.lazy(()=>OW).array()]).optional(),createMany:t.lazy(()=>uO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>fW),t.lazy(()=>fW).array()]).optional(),updateMany:t.union([t.lazy(()=>wW),t.lazy(()=>wW).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),fr=t.object({create:t.union([t.lazy(()=>Lc),t.lazy(()=>Lc).array(),t.lazy(()=>Vc),t.lazy(()=>Vc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ah),t.lazy(()=>ah).array()]).optional(),upsert:t.union([t.lazy(()=>NW),t.lazy(()=>NW).array()]).optional(),createMany:t.lazy(()=>sO).optional(),set:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),disconnect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),delete:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),connect:t.union([t.lazy(()=>Jt),t.lazy(()=>Jt).array()]).optional(),update:t.union([t.lazy(()=>BW),t.lazy(()=>BW).array()]).optional(),updateMany:t.union([t.lazy(()=>qW),t.lazy(()=>qW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional()}).strict(),wr=t.object({create:t.union([t.lazy(()=>Hc),t.lazy(()=>Hc).array(),t.lazy(()=>Qc),t.lazy(()=>Qc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ih),t.lazy(()=>ih).array()]).optional(),upsert:t.union([t.lazy(()=>FW),t.lazy(()=>FW).array()]).optional(),createMany:t.lazy(()=>yO).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>DW),t.lazy(()=>DW).array()]).optional(),updateMany:t.union([t.lazy(()=>_W),t.lazy(()=>_W).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Nr=t.object({create:t.union([t.lazy(()=>Yc),t.lazy(()=>Yc).array(),t.lazy(()=>Gc),t.lazy(()=>Gc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lh),t.lazy(()=>lh).array()]).optional(),upsert:t.union([t.lazy(()=>EW),t.lazy(()=>EW).array()]).optional(),createMany:t.lazy(()=>dO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>LW),t.lazy(()=>LW).array()]).optional(),updateMany:t.union([t.lazy(()=>VW),t.lazy(()=>VW).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Br=t.object({create:t.union([t.lazy(()=>$c),t.lazy(()=>$c).array(),t.lazy(()=>Jc),t.lazy(()=>Jc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rh),t.lazy(()=>rh).array()]).optional(),upsert:t.union([t.lazy(()=>HW),t.lazy(()=>HW).array()]).optional(),createMany:t.lazy(()=>zO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>QW),t.lazy(()=>QW).array()]).optional(),updateMany:t.union([t.lazy(()=>YW),t.lazy(()=>YW).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),qr=t.object({create:t.union([t.lazy(()=>Kc),t.lazy(()=>Kc).array(),t.lazy(()=>Xc),t.lazy(()=>Xc).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ph),t.lazy(()=>ph).array()]).optional(),upsert:t.union([t.lazy(()=>GW),t.lazy(()=>GW).array()]).optional(),createMany:t.lazy(()=>mO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>$W),t.lazy(()=>$W).array()]).optional(),updateMany:t.union([t.lazy(()=>JW),t.lazy(()=>JW).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),Fr=t.object({create:t.union([t.lazy(()=>tu),t.lazy(()=>tu).array(),t.lazy(()=>eu),t.lazy(()=>eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>ch),t.lazy(()=>ch).array()]).optional(),upsert:t.union([t.lazy(()=>KW),t.lazy(()=>KW).array()]).optional(),createMany:t.lazy(()=>bO).optional(),set:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),disconnect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),delete:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),connect:t.union([t.lazy(()=>Yt),t.lazy(()=>Yt).array()]).optional(),update:t.union([t.lazy(()=>XW),t.lazy(()=>XW).array()]).optional(),updateMany:t.union([t.lazy(()=>tR),t.lazy(()=>tR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional()}).strict(),Dr=t.object({create:t.union([t.lazy(()=>ou),t.lazy(()=>ou).array(),t.lazy(()=>nu),t.lazy(()=>nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uh),t.lazy(()=>uh).array()]).optional(),upsert:t.union([t.lazy(()=>eR),t.lazy(()=>eR).array()]).optional(),createMany:t.lazy(()=>hO).optional(),set:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),disconnect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),delete:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),connect:t.union([t.lazy(()=>Gt),t.lazy(()=>Gt).array()]).optional(),update:t.union([t.lazy(()=>oR),t.lazy(()=>oR).array()]).optional(),updateMany:t.union([t.lazy(()=>nR),t.lazy(()=>nR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional()}).strict(),_r=t.object({create:t.union([t.lazy(()=>au),t.lazy(()=>au).array(),t.lazy(()=>iu),t.lazy(()=>iu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sh),t.lazy(()=>sh).array()]).optional(),upsert:t.union([t.lazy(()=>aR),t.lazy(()=>aR).array()]).optional(),createMany:t.lazy(()=>IO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>iR),t.lazy(()=>iR).array()]).optional(),updateMany:t.union([t.lazy(()=>lR),t.lazy(()=>lR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Ya=t.object({create:t.union([t.lazy(()=>AO),t.lazy(()=>SO)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),connect:t.lazy(()=>Ol).optional()}).strict(),Ga=t.object({create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),connect:t.lazy(()=>X).optional()}).strict(),$a=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),Ja=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),Ka=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>RO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),Xa=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),ti=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),ei=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),oi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>MO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),ni=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),ai=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),ii=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),li=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),ri=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),pi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),ci=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ui=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),si=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),yi=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),di=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),zi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),createMany:t.lazy(()=>UO).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional()}).strict(),mi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),createMany:t.lazy(()=>WO).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),bi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),createMany:t.lazy(()=>RO).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),hi=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),createMany:t.lazy(()=>kO).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional()}).strict(),Ii=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),createMany:t.lazy(()=>xO).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional()}).strict(),gi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),createMany:t.lazy(()=>jO).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),Ci=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),createMany:t.lazy(()=>MO).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),Ai=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional()}).strict(),Si=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),createMany:t.lazy(()=>vO).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Ti=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),createMany:t.lazy(()=>OO).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional()}).strict(),Pi=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),createMany:t.lazy(()=>fO).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional()}).strict(),Ui=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),createMany:t.lazy(()=>wO).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),Wi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),createMany:t.lazy(()=>NO).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional()}).strict(),Ri=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),createMany:t.lazy(()=>BO).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),ki=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),createMany:t.lazy(()=>qO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),xi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),createMany:t.lazy(()=>FO).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),ji=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),createMany:t.lazy(()=>DO).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),Mi=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),createMany:t.lazy(()=>_O).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional()}).strict(),ft=t.object({set:t.lazy(()=>j).optional()}).strict(),Zi=t.object({create:t.union([t.lazy(()=>AO),t.lazy(()=>SO)]).optional(),connectOrCreate:t.lazy(()=>n3).optional(),upsert:t.lazy(()=>oct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Me)]).optional(),connect:t.lazy(()=>Ol).optional(),update:t.union([t.lazy(()=>nct),t.lazy(()=>gE),t.lazy(()=>CE)]).optional()}).strict(),vi=t.object({create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]).optional(),connectOrCreate:t.lazy(()=>a3).optional(),upsert:t.lazy(()=>act).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>B)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>B)]).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>ict),t.lazy(()=>AE),t.lazy(()=>SE)]).optional()}).strict(),Oi=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),disconnect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),delete:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),update:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),updateMany:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),fi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),wi=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),createMany:t.lazy(()=>RO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),updateMany:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),Ni=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),Bi=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),updateMany:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),qi=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),updateMany:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Fi=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),createMany:t.lazy(()=>MO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),Di=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),updateMany:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),_i=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),updateMany:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),Ei=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),updateMany:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),Li=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),updateMany:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),Vi=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),updateMany:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),Hi=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),updateMany:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),Qi=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),updateMany:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Yi=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),updateMany:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),Gi=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),updateMany:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),$i=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),updateMany:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),Ji=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),updateMany:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),Ki=t.object({create:t.union([t.lazy(()=>lu),t.lazy(()=>lu).array(),t.lazy(()=>ru),t.lazy(()=>ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yh),t.lazy(()=>yh).array()]).optional(),upsert:t.union([t.lazy(()=>rR),t.lazy(()=>rR).array()]).optional(),createMany:t.lazy(()=>UO).optional(),set:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),disconnect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),delete:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),connect:t.union([t.lazy(()=>ae),t.lazy(()=>ae).array()]).optional(),update:t.union([t.lazy(()=>pR),t.lazy(()=>pR).array()]).optional(),updateMany:t.union([t.lazy(()=>cR),t.lazy(()=>cR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional()}).strict(),Xi=t.object({create:t.union([t.lazy(()=>pu),t.lazy(()=>pu).array(),t.lazy(()=>cu),t.lazy(()=>cu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dh),t.lazy(()=>dh).array()]).optional(),upsert:t.union([t.lazy(()=>uR),t.lazy(()=>uR).array()]).optional(),createMany:t.lazy(()=>WO).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>sR),t.lazy(()=>sR).array()]).optional(),updateMany:t.union([t.lazy(()=>yR),t.lazy(()=>yR).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),tl=t.object({create:t.union([t.lazy(()=>uu),t.lazy(()=>uu).array(),t.lazy(()=>su),t.lazy(()=>su).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zh),t.lazy(()=>zh).array()]).optional(),upsert:t.union([t.lazy(()=>dR),t.lazy(()=>dR).array()]).optional(),createMany:t.lazy(()=>RO).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>zR),t.lazy(()=>zR).array()]).optional(),updateMany:t.union([t.lazy(()=>mR),t.lazy(()=>mR).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),el=t.object({create:t.union([t.lazy(()=>yu),t.lazy(()=>yu).array(),t.lazy(()=>du),t.lazy(()=>du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mh),t.lazy(()=>mh).array()]).optional(),upsert:t.union([t.lazy(()=>bR),t.lazy(()=>bR).array()]).optional(),createMany:t.lazy(()=>kO).optional(),set:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),disconnect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),delete:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),connect:t.union([t.lazy(()=>Re),t.lazy(()=>Re).array()]).optional(),update:t.union([t.lazy(()=>hR),t.lazy(()=>hR).array()]).optional(),updateMany:t.union([t.lazy(()=>IR),t.lazy(()=>IR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional()}).strict(),ol=t.object({create:t.union([t.lazy(()=>zu),t.lazy(()=>zu).array(),t.lazy(()=>mu),t.lazy(()=>mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bh),t.lazy(()=>bh).array()]).optional(),upsert:t.union([t.lazy(()=>gR),t.lazy(()=>gR).array()]).optional(),createMany:t.lazy(()=>xO).optional(),set:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),disconnect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),delete:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),connect:t.union([t.lazy(()=>ke),t.lazy(()=>ke).array()]).optional(),update:t.union([t.lazy(()=>CR),t.lazy(()=>CR).array()]).optional(),updateMany:t.union([t.lazy(()=>AR),t.lazy(()=>AR).array()]).optional(),deleteMany:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional()}).strict(),nl=t.object({create:t.union([t.lazy(()=>bu),t.lazy(()=>bu).array(),t.lazy(()=>hu),t.lazy(()=>hu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hh),t.lazy(()=>hh).array()]).optional(),upsert:t.union([t.lazy(()=>SR),t.lazy(()=>SR).array()]).optional(),createMany:t.lazy(()=>jO).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>TR),t.lazy(()=>TR).array()]).optional(),updateMany:t.union([t.lazy(()=>PR),t.lazy(()=>PR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),al=t.object({create:t.union([t.lazy(()=>Iu),t.lazy(()=>Iu).array(),t.lazy(()=>gu),t.lazy(()=>gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ih),t.lazy(()=>Ih).array()]).optional(),upsert:t.union([t.lazy(()=>UR),t.lazy(()=>UR).array()]).optional(),createMany:t.lazy(()=>MO).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>WR),t.lazy(()=>WR).array()]).optional(),updateMany:t.union([t.lazy(()=>RR),t.lazy(()=>RR).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),il=t.object({create:t.union([t.lazy(()=>Cu),t.lazy(()=>Cu).array(),t.lazy(()=>Au),t.lazy(()=>Au).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gh),t.lazy(()=>gh).array()]).optional(),upsert:t.union([t.lazy(()=>kR),t.lazy(()=>kR).array()]).optional(),createMany:t.lazy(()=>ZO).optional(),set:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),disconnect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),delete:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),connect:t.union([t.lazy(()=>pt),t.lazy(()=>pt).array()]).optional(),update:t.union([t.lazy(()=>xR),t.lazy(()=>xR).array()]).optional(),updateMany:t.union([t.lazy(()=>jR),t.lazy(()=>jR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional()}).strict(),ll=t.object({create:t.union([t.lazy(()=>Su),t.lazy(()=>Su).array(),t.lazy(()=>Tu),t.lazy(()=>Tu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ch),t.lazy(()=>Ch).array()]).optional(),upsert:t.union([t.lazy(()=>MR),t.lazy(()=>MR).array()]).optional(),createMany:t.lazy(()=>vO).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>ZR),t.lazy(()=>ZR).array()]).optional(),updateMany:t.union([t.lazy(()=>vR),t.lazy(()=>vR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),rl=t.object({create:t.union([t.lazy(()=>Pu),t.lazy(()=>Pu).array(),t.lazy(()=>Uu),t.lazy(()=>Uu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ah),t.lazy(()=>Ah).array()]).optional(),upsert:t.union([t.lazy(()=>OR),t.lazy(()=>OR).array()]).optional(),createMany:t.lazy(()=>OO).optional(),set:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),disconnect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),delete:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),connect:t.union([t.lazy(()=>Pe),t.lazy(()=>Pe).array()]).optional(),update:t.union([t.lazy(()=>fR),t.lazy(()=>fR).array()]).optional(),updateMany:t.union([t.lazy(()=>wR),t.lazy(()=>wR).array()]).optional(),deleteMany:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional()}).strict(),pl=t.object({create:t.union([t.lazy(()=>Wu),t.lazy(()=>Wu).array(),t.lazy(()=>Ru),t.lazy(()=>Ru).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Sh),t.lazy(()=>Sh).array()]).optional(),upsert:t.union([t.lazy(()=>NR),t.lazy(()=>NR).array()]).optional(),createMany:t.lazy(()=>fO).optional(),set:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),disconnect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),delete:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),connect:t.union([t.lazy(()=>Ue),t.lazy(()=>Ue).array()]).optional(),update:t.union([t.lazy(()=>BR),t.lazy(()=>BR).array()]).optional(),updateMany:t.union([t.lazy(()=>qR),t.lazy(()=>qR).array()]).optional(),deleteMany:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional()}).strict(),cl=t.object({create:t.union([t.lazy(()=>ku),t.lazy(()=>ku).array(),t.lazy(()=>xu),t.lazy(()=>xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Th),t.lazy(()=>Th).array()]).optional(),upsert:t.union([t.lazy(()=>FR),t.lazy(()=>FR).array()]).optional(),createMany:t.lazy(()=>wO).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>DR),t.lazy(()=>DR).array()]).optional(),updateMany:t.union([t.lazy(()=>_R),t.lazy(()=>_R).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),ul=t.object({create:t.union([t.lazy(()=>ju),t.lazy(()=>ju).array(),t.lazy(()=>Mu),t.lazy(()=>Mu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Ph),t.lazy(()=>Ph).array()]).optional(),upsert:t.union([t.lazy(()=>ER),t.lazy(()=>ER).array()]).optional(),createMany:t.lazy(()=>NO).optional(),set:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),disconnect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),delete:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),connect:t.union([t.lazy(()=>rt),t.lazy(()=>rt).array()]).optional(),update:t.union([t.lazy(()=>LR),t.lazy(()=>LR).array()]).optional(),updateMany:t.union([t.lazy(()=>VR),t.lazy(()=>VR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional()}).strict(),sl=t.object({create:t.union([t.lazy(()=>Zu),t.lazy(()=>Zu).array(),t.lazy(()=>vu),t.lazy(()=>vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Uh),t.lazy(()=>Uh).array()]).optional(),upsert:t.union([t.lazy(()=>HR),t.lazy(()=>HR).array()]).optional(),createMany:t.lazy(()=>BO).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>QR),t.lazy(()=>QR).array()]).optional(),updateMany:t.union([t.lazy(()=>YR),t.lazy(()=>YR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),yl=t.object({create:t.union([t.lazy(()=>Ou),t.lazy(()=>Ou).array(),t.lazy(()=>fu),t.lazy(()=>fu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Wh),t.lazy(()=>Wh).array()]).optional(),upsert:t.union([t.lazy(()=>GR),t.lazy(()=>GR).array()]).optional(),createMany:t.lazy(()=>qO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>$R),t.lazy(()=>$R).array()]).optional(),updateMany:t.union([t.lazy(()=>JR),t.lazy(()=>JR).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),dl=t.object({create:t.union([t.lazy(()=>wu),t.lazy(()=>wu).array(),t.lazy(()=>Nu),t.lazy(()=>Nu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Rh),t.lazy(()=>Rh).array()]).optional(),upsert:t.union([t.lazy(()=>KR),t.lazy(()=>KR).array()]).optional(),createMany:t.lazy(()=>FO).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>XR),t.lazy(()=>XR).array()]).optional(),updateMany:t.union([t.lazy(()=>tk),t.lazy(()=>tk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),zl=t.object({create:t.union([t.lazy(()=>Bu),t.lazy(()=>Bu).array(),t.lazy(()=>qu),t.lazy(()=>qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>kh),t.lazy(()=>kh).array()]).optional(),upsert:t.union([t.lazy(()=>ek),t.lazy(()=>ek).array()]).optional(),createMany:t.lazy(()=>DO).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>ok),t.lazy(()=>ok).array()]).optional(),updateMany:t.union([t.lazy(()=>nk),t.lazy(()=>nk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),ml=t.object({create:t.union([t.lazy(()=>Fu),t.lazy(()=>Fu).array(),t.lazy(()=>Du),t.lazy(()=>Du).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>xh),t.lazy(()=>xh).array()]).optional(),upsert:t.union([t.lazy(()=>ak),t.lazy(()=>ak).array()]).optional(),createMany:t.lazy(()=>_O).optional(),set:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),disconnect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),delete:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),connect:t.union([t.lazy(()=>ut),t.lazy(()=>ut).array()]).optional(),update:t.union([t.lazy(()=>ik),t.lazy(()=>ik).array()]).optional(),updateMany:t.union([t.lazy(()=>lk),t.lazy(()=>lk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional()}).strict(),$lt=t.object({create:t.union([t.lazy(()=>EO),t.lazy(()=>LO)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),connect:t.lazy(()=>M).optional()}).strict(),Jlt=t.object({create:t.union([t.lazy(()=>EO),t.lazy(()=>LO)]).optional(),connectOrCreate:t.lazy(()=>i3).optional(),upsert:t.lazy(()=>lct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>rct),t.lazy(()=>TE),t.lazy(()=>PE)]).optional()}).strict(),G2=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),$2=t.object({create:t.union([t.lazy(()=>HO),t.lazy(()=>QO)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),connect:t.lazy(()=>X).optional()}).strict(),J2=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),createMany:t.lazy(()=>VO).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),K2=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),updateMany:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),X2=t.object({create:t.union([t.lazy(()=>HO),t.lazy(()=>QO)]).optional(),connectOrCreate:t.lazy(()=>l3).optional(),upsert:t.lazy(()=>pct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>B)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>B)]).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>cct),t.lazy(()=>UE),t.lazy(()=>WE)]).optional()}).strict(),t5=t.object({create:t.union([t.lazy(()=>_u),t.lazy(()=>_u).array(),t.lazy(()=>Eu),t.lazy(()=>Eu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>jh),t.lazy(()=>jh).array()]).optional(),upsert:t.union([t.lazy(()=>rk),t.lazy(()=>rk).array()]).optional(),createMany:t.lazy(()=>VO).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>pk),t.lazy(()=>pk).array()]).optional(),updateMany:t.union([t.lazy(()=>ck),t.lazy(()=>ck).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),Ut=t.object({set:t.string().array()}).strict(),uo=t.object({create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),connect:t.lazy(()=>X).optional()}).strict(),so=t.object({create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),connect:t.lazy(()=>ne).optional()}).strict(),yo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),zo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),mo=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),ho=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),Io=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),connect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),go=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),Co=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),Ao=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),So=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),To=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Po=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),Uo=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Wo=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Ro=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),ko=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),xo=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),jo=t.object({create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)]).optional(),connectOrCreate:t.lazy(()=>yf).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Mo=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),Zo=t.object({create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)]).optional(),connectOrCreate:t.lazy(()=>zf).optional(),connect:t.lazy(()=>Fl).optional()}).strict(),vo=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),Oo=t.object({create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)]).optional(),connectOrCreate:t.lazy(()=>bf).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),fo=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),createMany:t.lazy(()=>KO).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),wo=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),createMany:t.lazy(()=>XO).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional()}).strict(),No=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),Bo=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),createMany:t.lazy(()=>tf).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional()}).strict(),qo=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),createMany:t.lazy(()=>ef).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional()}).strict(),Fo=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),connect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional()}).strict(),Do=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),createMany:t.lazy(()=>of).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),_o=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),createMany:t.lazy(()=>nf).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),Eo=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),createMany:t.lazy(()=>af).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional()}).strict(),Lo=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),createMany:t.lazy(()=>lf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),Vo=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional()}).strict(),Ho=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),createMany:t.lazy(()=>rf).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional()}).strict(),Qo=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),createMany:t.lazy(()=>pf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),Yo=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Go=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),createMany:t.lazy(()=>cf).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional()}).strict(),$o=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),createMany:t.lazy(()=>uf).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional()}).strict(),Jo=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),createMany:t.lazy(()=>sf).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional()}).strict(),Ko=t.object({create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)]).optional(),connectOrCreate:t.lazy(()=>yf).optional(),connect:t.lazy(()=>ql).optional()}).strict(),Xo=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),createMany:t.lazy(()=>df).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional()}).strict(),tn=t.object({create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)]).optional(),connectOrCreate:t.lazy(()=>zf).optional(),connect:t.lazy(()=>Fl).optional()}).strict(),en=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),createMany:t.lazy(()=>mf).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional()}).strict(),on=t.object({create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)]).optional(),connectOrCreate:t.lazy(()=>bf).optional(),connect:t.lazy(()=>Dl).optional()}).strict(),yt=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),dt=t.object({set:t.lazy(()=>W).optional()}).strict(),zt=t.object({set:t.lazy(()=>U).optional()}).strict(),nn=t.object({create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]).optional(),connectOrCreate:t.lazy(()=>r3).optional(),upsert:t.lazy(()=>uct).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>sct),t.lazy(()=>RE),t.lazy(()=>kE)]).optional()}).strict(),an=t.object({create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]).optional(),connectOrCreate:t.lazy(()=>p3).optional(),upsert:t.lazy(()=>yct).optional(),connect:t.lazy(()=>ne).optional(),update:t.union([t.lazy(()=>dct),t.lazy(()=>xE),t.lazy(()=>jE)]).optional()}).strict(),ln=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),rn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),updateMany:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),pn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),cn=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),updateMany:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),un=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),updateMany:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),sn=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),set:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),disconnect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),delete:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),connect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),yn=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),updateMany:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),dn=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),updateMany:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),zn=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),updateMany:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),mn=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),updateMany:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),bn=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),updateMany:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),hn=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),updateMany:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),In=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),updateMany:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),gn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),updateMany:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),Cn=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),updateMany:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),An=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),updateMany:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Sn=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),updateMany:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Tn=t.object({create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)]).optional(),connectOrCreate:t.lazy(()=>yf).optional(),upsert:t.lazy(()=>c3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>u3),t.lazy(()=>hf),t.lazy(()=>If)]).optional()}).strict(),Pn=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),updateMany:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),Un=t.object({create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)]).optional(),connectOrCreate:t.lazy(()=>zf).optional(),upsert:t.lazy(()=>s3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Fl).optional(),update:t.union([t.lazy(()=>y3),t.lazy(()=>gf),t.lazy(()=>Cf)]).optional()}).strict(),Wn=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),Rn=t.object({create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)]).optional(),connectOrCreate:t.lazy(()=>bf).optional(),upsert:t.lazy(()=>d3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>z3),t.lazy(()=>Af),t.lazy(()=>Sf)]).optional()}).strict(),kn=t.object({create:t.union([t.lazy(()=>Lu),t.lazy(()=>Lu).array(),t.lazy(()=>Vu),t.lazy(()=>Vu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Mh),t.lazy(()=>Mh).array()]).optional(),upsert:t.union([t.lazy(()=>uk),t.lazy(()=>uk).array()]).optional(),createMany:t.lazy(()=>KO).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>sk),t.lazy(()=>sk).array()]).optional(),updateMany:t.union([t.lazy(()=>yk),t.lazy(()=>yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),xn=t.object({create:t.union([t.lazy(()=>Hu),t.lazy(()=>Hu).array(),t.lazy(()=>Qu),t.lazy(()=>Qu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Zh),t.lazy(()=>Zh).array()]).optional(),upsert:t.union([t.lazy(()=>dk),t.lazy(()=>dk).array()]).optional(),createMany:t.lazy(()=>XO).optional(),set:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),disconnect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),delete:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),connect:t.union([t.lazy(()=>ct),t.lazy(()=>ct).array()]).optional(),update:t.union([t.lazy(()=>zk),t.lazy(()=>zk).array()]).optional(),updateMany:t.union([t.lazy(()=>mk),t.lazy(()=>mk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional()}).strict(),jn=t.object({create:t.union([t.lazy(()=>Yu),t.lazy(()=>Yu).array(),t.lazy(()=>Gu),t.lazy(()=>Gu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>vh),t.lazy(()=>vh).array()]).optional(),upsert:t.union([t.lazy(()=>bk),t.lazy(()=>bk).array()]).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>hk),t.lazy(()=>hk).array()]).optional(),updateMany:t.union([t.lazy(()=>Ik),t.lazy(()=>Ik).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),Mn=t.object({create:t.union([t.lazy(()=>$u),t.lazy(()=>$u).array(),t.lazy(()=>Ju),t.lazy(()=>Ju).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Oh),t.lazy(()=>Oh).array()]).optional(),upsert:t.union([t.lazy(()=>gk),t.lazy(()=>gk).array()]).optional(),createMany:t.lazy(()=>tf).optional(),set:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),disconnect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),delete:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),connect:t.union([t.lazy(()=>xe),t.lazy(()=>xe).array()]).optional(),update:t.union([t.lazy(()=>Ck),t.lazy(()=>Ck).array()]).optional(),updateMany:t.union([t.lazy(()=>Ak),t.lazy(()=>Ak).array()]).optional(),deleteMany:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional()}).strict(),Zn=t.object({create:t.union([t.lazy(()=>Ku),t.lazy(()=>Ku).array(),t.lazy(()=>Xu),t.lazy(()=>Xu).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>fh),t.lazy(()=>fh).array()]).optional(),upsert:t.union([t.lazy(()=>Sk),t.lazy(()=>Sk).array()]).optional(),createMany:t.lazy(()=>ef).optional(),set:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),disconnect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),delete:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),connect:t.union([t.lazy(()=>je),t.lazy(()=>je).array()]).optional(),update:t.union([t.lazy(()=>Tk),t.lazy(()=>Tk).array()]).optional(),updateMany:t.union([t.lazy(()=>Pk),t.lazy(()=>Pk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional()}).strict(),vn=t.object({create:t.union([t.lazy(()=>ts),t.lazy(()=>ts).array(),t.lazy(()=>es),t.lazy(()=>es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>wh),t.lazy(()=>wh).array()]).optional(),upsert:t.union([t.lazy(()=>Uk),t.lazy(()=>Uk).array()]).optional(),set:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),disconnect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),delete:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),connect:t.union([t.lazy(()=>ie),t.lazy(()=>ie).array()]).optional(),update:t.union([t.lazy(()=>Wk),t.lazy(()=>Wk).array()]).optional(),updateMany:t.union([t.lazy(()=>Rk),t.lazy(()=>Rk).array()]).optional(),deleteMany:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional()}).strict(),On=t.object({create:t.union([t.lazy(()=>os),t.lazy(()=>os).array(),t.lazy(()=>ns),t.lazy(()=>ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Nh),t.lazy(()=>Nh).array()]).optional(),upsert:t.union([t.lazy(()=>kk),t.lazy(()=>kk).array()]).optional(),createMany:t.lazy(()=>of).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>xk),t.lazy(()=>xk).array()]).optional(),updateMany:t.union([t.lazy(()=>jk),t.lazy(()=>jk).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),fn=t.object({create:t.union([t.lazy(()=>as),t.lazy(()=>as).array(),t.lazy(()=>is),t.lazy(()=>is).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Bh),t.lazy(()=>Bh).array()]).optional(),upsert:t.union([t.lazy(()=>Mk),t.lazy(()=>Mk).array()]).optional(),createMany:t.lazy(()=>nf).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>Zk),t.lazy(()=>Zk).array()]).optional(),updateMany:t.union([t.lazy(()=>vk),t.lazy(()=>vk).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),wn=t.object({create:t.union([t.lazy(()=>ls),t.lazy(()=>ls).array(),t.lazy(()=>rs),t.lazy(()=>rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>qh),t.lazy(()=>qh).array()]).optional(),upsert:t.union([t.lazy(()=>Ok),t.lazy(()=>Ok).array()]).optional(),createMany:t.lazy(()=>af).optional(),set:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),disconnect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),delete:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),connect:t.union([t.lazy(()=>L),t.lazy(()=>L).array()]).optional(),update:t.union([t.lazy(()=>fk),t.lazy(()=>fk).array()]).optional(),updateMany:t.union([t.lazy(()=>wk),t.lazy(()=>wk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional()}).strict(),Nn=t.object({create:t.union([t.lazy(()=>ps),t.lazy(()=>ps).array(),t.lazy(()=>cs),t.lazy(()=>cs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Fh),t.lazy(()=>Fh).array()]).optional(),upsert:t.union([t.lazy(()=>Nk),t.lazy(()=>Nk).array()]).optional(),createMany:t.lazy(()=>lf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Bk),t.lazy(()=>Bk).array()]).optional(),updateMany:t.union([t.lazy(()=>qk),t.lazy(()=>qk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),Bn=t.object({create:t.union([t.lazy(()=>us),t.lazy(()=>us).array(),t.lazy(()=>ss),t.lazy(()=>ss).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Dh),t.lazy(()=>Dh).array()]).optional(),upsert:t.union([t.lazy(()=>Fk),t.lazy(()=>Fk).array()]).optional(),set:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),disconnect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),delete:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),connect:t.union([t.lazy(()=>Se),t.lazy(()=>Se).array()]).optional(),update:t.union([t.lazy(()=>Dk),t.lazy(()=>Dk).array()]).optional(),updateMany:t.union([t.lazy(()=>_k),t.lazy(()=>_k).array()]).optional(),deleteMany:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional()}).strict(),qn=t.object({create:t.union([t.lazy(()=>ys),t.lazy(()=>ys).array(),t.lazy(()=>ds),t.lazy(()=>ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>_h),t.lazy(()=>_h).array()]).optional(),upsert:t.union([t.lazy(()=>Ek),t.lazy(()=>Ek).array()]).optional(),createMany:t.lazy(()=>rf).optional(),set:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),disconnect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),delete:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),connect:t.union([t.lazy(()=>N),t.lazy(()=>N).array()]).optional(),update:t.union([t.lazy(()=>Lk),t.lazy(()=>Lk).array()]).optional(),updateMany:t.union([t.lazy(()=>Vk),t.lazy(()=>Vk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional()}).strict(),Fn=t.object({create:t.union([t.lazy(()=>zs),t.lazy(()=>zs).array(),t.lazy(()=>ms),t.lazy(()=>ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Eh),t.lazy(()=>Eh).array()]).optional(),upsert:t.union([t.lazy(()=>Hk),t.lazy(()=>Hk).array()]).optional(),createMany:t.lazy(()=>pf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Qk),t.lazy(()=>Qk).array()]).optional(),updateMany:t.union([t.lazy(()=>Yk),t.lazy(()=>Yk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),Dn=t.object({create:t.union([t.lazy(()=>bs),t.lazy(()=>bs).array(),t.lazy(()=>hs),t.lazy(()=>hs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Lh),t.lazy(()=>Lh).array()]).optional(),upsert:t.union([t.lazy(()=>Gk),t.lazy(()=>Gk).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>$k),t.lazy(()=>$k).array()]).optional(),updateMany:t.union([t.lazy(()=>Jk),t.lazy(()=>Jk).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),_n=t.object({create:t.union([t.lazy(()=>Is),t.lazy(()=>Is).array(),t.lazy(()=>gs),t.lazy(()=>gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Vh),t.lazy(()=>Vh).array()]).optional(),upsert:t.union([t.lazy(()=>Kk),t.lazy(()=>Kk).array()]).optional(),createMany:t.lazy(()=>cf).optional(),set:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),disconnect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),delete:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),connect:t.union([t.lazy(()=>Ie),t.lazy(()=>Ie).array()]).optional(),update:t.union([t.lazy(()=>Xk),t.lazy(()=>Xk).array()]).optional(),updateMany:t.union([t.lazy(()=>tx),t.lazy(()=>tx).array()]).optional(),deleteMany:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional()}).strict(),En=t.object({create:t.union([t.lazy(()=>Cs),t.lazy(()=>Cs).array(),t.lazy(()=>As),t.lazy(()=>As).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Hh),t.lazy(()=>Hh).array()]).optional(),upsert:t.union([t.lazy(()=>ex),t.lazy(()=>ex).array()]).optional(),createMany:t.lazy(()=>uf).optional(),set:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),disconnect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),delete:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),connect:t.union([t.lazy(()=>ge),t.lazy(()=>ge).array()]).optional(),update:t.union([t.lazy(()=>ox),t.lazy(()=>ox).array()]).optional(),updateMany:t.union([t.lazy(()=>nx),t.lazy(()=>nx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional()}).strict(),Ln=t.object({create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ss).array(),t.lazy(()=>Ts),t.lazy(()=>Ts).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Qh),t.lazy(()=>Qh).array()]).optional(),upsert:t.union([t.lazy(()=>ax),t.lazy(()=>ax).array()]).optional(),createMany:t.lazy(()=>sf).optional(),set:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),disconnect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),delete:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),connect:t.union([t.lazy(()=>Ce),t.lazy(()=>Ce).array()]).optional(),update:t.union([t.lazy(()=>ix),t.lazy(()=>ix).array()]).optional(),updateMany:t.union([t.lazy(()=>lx),t.lazy(()=>lx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional()}).strict(),Vn=t.object({create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)]).optional(),connectOrCreate:t.lazy(()=>yf).optional(),upsert:t.lazy(()=>c3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Be)]).optional(),connect:t.lazy(()=>ql).optional(),update:t.union([t.lazy(()=>u3),t.lazy(()=>hf),t.lazy(()=>If)]).optional()}).strict(),Hn=t.object({create:t.union([t.lazy(()=>Ps),t.lazy(()=>Ps).array(),t.lazy(()=>Us),t.lazy(()=>Us).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Yh),t.lazy(()=>Yh).array()]).optional(),upsert:t.union([t.lazy(()=>rx),t.lazy(()=>rx).array()]).optional(),createMany:t.lazy(()=>df).optional(),set:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),disconnect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),delete:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),connect:t.union([t.lazy(()=>be),t.lazy(()=>be).array()]).optional(),update:t.union([t.lazy(()=>px),t.lazy(()=>px).array()]).optional(),updateMany:t.union([t.lazy(()=>cx),t.lazy(()=>cx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional()}).strict(),Qn=t.object({create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)]).optional(),connectOrCreate:t.lazy(()=>zf).optional(),upsert:t.lazy(()=>s3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>qe)]).optional(),connect:t.lazy(()=>Fl).optional(),update:t.union([t.lazy(()=>y3),t.lazy(()=>gf),t.lazy(()=>Cf)]).optional()}).strict(),Yn=t.object({create:t.union([t.lazy(()=>Ws),t.lazy(()=>Ws).array(),t.lazy(()=>Rs),t.lazy(()=>Rs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Gh),t.lazy(()=>Gh).array()]).optional(),upsert:t.union([t.lazy(()=>ux),t.lazy(()=>ux).array()]).optional(),createMany:t.lazy(()=>mf).optional(),set:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),disconnect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),delete:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),connect:t.union([t.lazy(()=>he),t.lazy(()=>he).array()]).optional(),update:t.union([t.lazy(()=>sx),t.lazy(()=>sx).array()]).optional(),updateMany:t.union([t.lazy(()=>yx),t.lazy(()=>yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional()}).strict(),Gn=t.object({create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)]).optional(),connectOrCreate:t.lazy(()=>bf).optional(),upsert:t.lazy(()=>d3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Fe)]).optional(),connect:t.lazy(()=>Dl).optional(),update:t.union([t.lazy(()=>z3),t.lazy(()=>Af),t.lazy(()=>Sf)]).optional()}).strict(),MI=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),ZI=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),vI=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),OI=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),fI=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),wI=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),NI=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),BI=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),qI=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional()}).strict(),FI=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional()}).strict(),DI=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),_I=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional()}).strict(),EI=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional()}).strict(),LI=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional()}).strict(),VI=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),createMany:t.lazy(()=>kf).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),HI=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),ta=t.object({set:t.lazy(()=>nt).optional().nullable()}).strict(),QI=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),updateMany:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),YI=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),GI=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),$I=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),updateMany:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),JI=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),KI=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),updateMany:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),XI=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),updateMany:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),tg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),updateMany:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),eg=t.object({create:t.union([t.lazy(()=>ks),t.lazy(()=>ks).array(),t.lazy(()=>xs),t.lazy(()=>xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>$h),t.lazy(()=>$h).array()]).optional(),upsert:t.union([t.lazy(()=>dx),t.lazy(()=>dx).array()]).optional(),createMany:t.lazy(()=>Tf).optional(),set:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),disconnect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),delete:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),connect:t.union([t.lazy(()=>H),t.lazy(()=>H).array()]).optional(),update:t.union([t.lazy(()=>zx),t.lazy(()=>zx).array()]).optional(),updateMany:t.union([t.lazy(()=>mx),t.lazy(()=>mx).array()]).optional(),deleteMany:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional()}).strict(),og=t.object({create:t.union([t.lazy(()=>js),t.lazy(()=>js).array(),t.lazy(()=>Ms),t.lazy(()=>Ms).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Jh),t.lazy(()=>Jh).array()]).optional(),upsert:t.union([t.lazy(()=>bx),t.lazy(()=>bx).array()]).optional(),createMany:t.lazy(()=>Pf).optional(),set:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),disconnect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),delete:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),connect:t.union([t.lazy(()=>w),t.lazy(()=>w).array()]).optional(),update:t.union([t.lazy(()=>hx),t.lazy(()=>hx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ix),t.lazy(()=>Ix).array()]).optional(),deleteMany:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional()}).strict(),ng=t.object({create:t.union([t.lazy(()=>Zs),t.lazy(()=>Zs).array(),t.lazy(()=>vs),t.lazy(()=>vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Kh),t.lazy(()=>Kh).array()]).optional(),upsert:t.union([t.lazy(()=>gx),t.lazy(()=>gx).array()]).optional(),createMany:t.lazy(()=>Uf).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Cx),t.lazy(()=>Cx).array()]).optional(),updateMany:t.union([t.lazy(()=>Ax),t.lazy(()=>Ax).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),ag=t.object({create:t.union([t.lazy(()=>Os),t.lazy(()=>Os).array(),t.lazy(()=>fs),t.lazy(()=>fs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>Xh),t.lazy(()=>Xh).array()]).optional(),upsert:t.union([t.lazy(()=>Sx),t.lazy(()=>Sx).array()]).optional(),set:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),disconnect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),delete:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),connect:t.union([t.lazy(()=>$t),t.lazy(()=>$t).array()]).optional(),update:t.union([t.lazy(()=>Tx),t.lazy(()=>Tx).array()]).optional(),updateMany:t.union([t.lazy(()=>Px),t.lazy(()=>Px).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional()}).strict(),ig=t.object({create:t.union([t.lazy(()=>ws),t.lazy(()=>ws).array(),t.lazy(()=>Ns),t.lazy(()=>Ns).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>tI),t.lazy(()=>tI).array()]).optional(),upsert:t.union([t.lazy(()=>Ux),t.lazy(()=>Ux).array()]).optional(),createMany:t.lazy(()=>Wf).optional(),set:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),disconnect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),delete:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),connect:t.union([t.lazy(()=>E),t.lazy(()=>E).array()]).optional(),update:t.union([t.lazy(()=>Wx),t.lazy(()=>Wx).array()]).optional(),updateMany:t.union([t.lazy(()=>Rx),t.lazy(()=>Rx).array()]).optional(),deleteMany:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional()}).strict(),lg=t.object({create:t.union([t.lazy(()=>Bs),t.lazy(()=>Bs).array(),t.lazy(()=>qs),t.lazy(()=>qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>eI),t.lazy(()=>eI).array()]).optional(),upsert:t.union([t.lazy(()=>kx),t.lazy(()=>kx).array()]).optional(),createMany:t.lazy(()=>Rf).optional(),set:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),disconnect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),delete:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),connect:t.union([t.lazy(()=>Ct),t.lazy(()=>Ct).array()]).optional(),update:t.union([t.lazy(()=>xx),t.lazy(()=>xx).array()]).optional(),updateMany:t.union([t.lazy(()=>jx),t.lazy(()=>jx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional()}).strict(),rg=t.object({create:t.union([t.lazy(()=>Fs),t.lazy(()=>Fs).array(),t.lazy(()=>Ds),t.lazy(()=>Ds).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>oI),t.lazy(()=>oI).array()]).optional(),upsert:t.union([t.lazy(()=>Mx),t.lazy(()=>Mx).array()]).optional(),createMany:t.lazy(()=>kf).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>Zx),t.lazy(()=>Zx).array()]).optional(),updateMany:t.union([t.lazy(()=>vx),t.lazy(()=>vx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),pg=t.object({create:t.union([t.lazy(()=>_s),t.lazy(()=>_s).array(),t.lazy(()=>Es),t.lazy(()=>Es).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>nI),t.lazy(()=>nI).array()]).optional(),upsert:t.union([t.lazy(()=>Ox),t.lazy(()=>Ox).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>fx),t.lazy(()=>fx).array()]).optional(),updateMany:t.union([t.lazy(()=>wx),t.lazy(()=>wx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),cp=t.object({set:t.number().array()}).strict(),mF=t.object({create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),connect:t.lazy(()=>C).optional()}).strict(),bF=t.object({create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),connect:t.lazy(()=>J).optional()}).strict(),hF=t.object({create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),connect:t.lazy(()=>N).optional()}).strict(),Yr=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),IF=t.object({create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]).optional(),connectOrCreate:t.lazy(()=>m3).optional(),upsert:t.lazy(()=>zct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>mct),t.lazy(()=>ME),t.lazy(()=>ZE)]).optional()}).strict(),gF=t.object({create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]).optional(),connectOrCreate:t.lazy(()=>b3).optional(),upsert:t.lazy(()=>bct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>hct),t.lazy(()=>vE),t.lazy(()=>OE)]).optional()}).strict(),CF=t.object({create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]).optional(),connectOrCreate:t.lazy(()=>h3).optional(),upsert:t.lazy(()=>Ict).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>le)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>le)]).optional(),connect:t.lazy(()=>N).optional(),update:t.union([t.lazy(()=>gct),t.lazy(()=>fE),t.lazy(()=>wE)]).optional()}).strict(),AF=t.object({create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),connect:t.lazy(()=>C).optional()}).strict(),SF=t.object({create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),connect:t.lazy(()=>N).optional()}).strict(),TF=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>qf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),PF=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),createMany:t.lazy(()=>qf).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional()}).strict(),UF=t.object({create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]).optional(),connectOrCreate:t.lazy(()=>I3).optional(),upsert:t.lazy(()=>Cct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Act),t.lazy(()=>NE),t.lazy(()=>BE)]).optional()}).strict(),WF=t.object({create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]).optional(),connectOrCreate:t.lazy(()=>g3).optional(),upsert:t.lazy(()=>Sct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>le)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>le)]).optional(),connect:t.lazy(()=>N).optional(),update:t.union([t.lazy(()=>Tct),t.lazy(()=>qE),t.lazy(()=>FE)]).optional()}).strict(),RF=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),createMany:t.lazy(()=>qf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),updateMany:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),kF=t.object({create:t.union([t.lazy(()=>Ls),t.lazy(()=>Ls).array(),t.lazy(()=>Vs),t.lazy(()=>Vs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>aI),t.lazy(()=>aI).array()]).optional(),upsert:t.union([t.lazy(()=>Nx),t.lazy(()=>Nx).array()]).optional(),createMany:t.lazy(()=>qf).optional(),set:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),disconnect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),delete:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),connect:t.union([t.lazy(()=>q),t.lazy(()=>q).array()]).optional(),update:t.union([t.lazy(()=>Bx),t.lazy(()=>Bx).array()]).optional(),updateMany:t.union([t.lazy(()=>qx),t.lazy(()=>qx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional()}).strict(),FS=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),DS=t.object({create:t.union([t.lazy(()=>_f),t.lazy(()=>Ef)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),connect:t.lazy(()=>J).optional()}).strict(),_S=t.object({create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),connect:t.lazy(()=>M).optional()}).strict(),ES=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),LS=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),VS=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),HS=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional()}).strict(),QS=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional()}).strict(),YS=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),GS=t.object({create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]).optional(),connectOrCreate:t.lazy(()=>C3).optional(),upsert:t.lazy(()=>Pct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Uct),t.lazy(()=>DE),t.lazy(()=>_E)]).optional()}).strict(),$S=t.object({create:t.union([t.lazy(()=>_f),t.lazy(()=>Ef)]).optional(),connectOrCreate:t.lazy(()=>A3).optional(),upsert:t.lazy(()=>Wct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Rct),t.lazy(()=>EE),t.lazy(()=>LE)]).optional()}).strict(),JS=t.object({create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]).optional(),connectOrCreate:t.lazy(()=>S3).optional(),upsert:t.lazy(()=>kct).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>v)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>v)]).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>xct),t.lazy(()=>VE),t.lazy(()=>HE)]).optional()}).strict(),KS=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),updateMany:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),XS=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),updateMany:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),tT=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),updateMany:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),eT=t.object({create:t.union([t.lazy(()=>Hs),t.lazy(()=>Hs).array(),t.lazy(()=>Qs),t.lazy(()=>Qs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>iI),t.lazy(()=>iI).array()]).optional(),upsert:t.union([t.lazy(()=>Fx),t.lazy(()=>Fx).array()]).optional(),createMany:t.lazy(()=>Hf).optional(),set:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),disconnect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),delete:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),connect:t.union([t.lazy(()=>Q),t.lazy(()=>Q).array()]).optional(),update:t.union([t.lazy(()=>Dx),t.lazy(()=>Dx).array()]).optional(),updateMany:t.union([t.lazy(()=>_x),t.lazy(()=>_x).array()]).optional(),deleteMany:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional()}).strict(),oT=t.object({create:t.union([t.lazy(()=>Ys),t.lazy(()=>Ys).array(),t.lazy(()=>Gs),t.lazy(()=>Gs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>lI),t.lazy(()=>lI).array()]).optional(),upsert:t.union([t.lazy(()=>Ex),t.lazy(()=>Ex).array()]).optional(),createMany:t.lazy(()=>Qf).optional(),set:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),disconnect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),delete:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),connect:t.union([t.lazy(()=>V),t.lazy(()=>V).array()]).optional(),update:t.union([t.lazy(()=>Lx),t.lazy(()=>Lx).array()]).optional(),updateMany:t.union([t.lazy(()=>Vx),t.lazy(()=>Vx).array()]).optional(),deleteMany:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional()}).strict(),nT=t.object({create:t.union([t.lazy(()=>$s),t.lazy(()=>$s).array(),t.lazy(()=>Js),t.lazy(()=>Js).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>rI),t.lazy(()=>rI).array()]).optional(),upsert:t.union([t.lazy(()=>Hx),t.lazy(()=>Hx).array()]).optional(),createMany:t.lazy(()=>Yf).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>Qx),t.lazy(()=>Qx).array()]).optional(),updateMany:t.union([t.lazy(()=>Yx),t.lazy(()=>Yx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),xF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),jF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),connect:t.lazy(()=>w).optional()}).strict(),MF=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),connect:t.lazy(()=>M).optional()}).strict(),Gr=t.object({set:t.lazy(()=>Ot).optional()}).strict(),ZF=t.object({create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]).optional(),connectOrCreate:t.lazy(()=>T3).optional(),upsert:t.lazy(()=>jct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Mct),t.lazy(()=>QE),t.lazy(()=>YE)]).optional()}).strict(),vF=t.object({create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]).optional(),connectOrCreate:t.lazy(()=>P3).optional(),upsert:t.lazy(()=>Zct).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>vct),t.lazy(()=>GE),t.lazy(()=>$E)]).optional()}).strict(),OF=t.object({create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]).optional(),connectOrCreate:t.lazy(()=>U3).optional(),upsert:t.lazy(()=>Oct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>fct),t.lazy(()=>JE),t.lazy(()=>KE)]).optional()}).strict(),fF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),connect:t.lazy(()=>$n).optional()}).strict(),wF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),connect:t.lazy(()=>M).optional()}).strict(),NF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),BF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),createMany:t.lazy(()=>iw).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional()}).strict(),up=t.object({set:t.lazy(()=>Nt).optional()}).strict(),qF=t.object({create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]).optional(),connectOrCreate:t.lazy(()=>W3).optional(),upsert:t.lazy(()=>wct).optional(),connect:t.lazy(()=>$n).optional(),update:t.union([t.lazy(()=>Nct),t.lazy(()=>XE),t.lazy(()=>tL)]).optional()}).strict(),FF=t.object({create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]).optional(),connectOrCreate:t.lazy(()=>R3).optional(),upsert:t.lazy(()=>Bct).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>qct),t.lazy(()=>eL),t.lazy(()=>oL)]).optional()}).strict(),DF=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),updateMany:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),_F=t.object({create:t.union([t.lazy(()=>Ks),t.lazy(()=>Ks).array(),t.lazy(()=>Xs),t.lazy(()=>Xs).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>pI),t.lazy(()=>pI).array()]).optional(),upsert:t.union([t.lazy(()=>Gx),t.lazy(()=>Gx).array()]).optional(),createMany:t.lazy(()=>iw).optional(),set:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),disconnect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),delete:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),connect:t.union([t.lazy(()=>At),t.lazy(()=>At).array()]).optional(),update:t.union([t.lazy(()=>$x),t.lazy(()=>$x).array()]).optional(),updateMany:t.union([t.lazy(()=>Jx),t.lazy(()=>Jx).array()]).optional(),deleteMany:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional()}).strict(),e5=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),connect:t.lazy(()=>ut).optional()}).strict(),o5=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),connect:t.lazy(()=>w).optional()}).strict(),n5=t.object({create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]).optional(),connectOrCreate:t.lazy(()=>k3).optional(),upsert:t.lazy(()=>Fct).optional(),connect:t.lazy(()=>ut).optional(),update:t.union([t.lazy(()=>Dct),t.lazy(()=>nL),t.lazy(()=>aL)]).optional()}).strict(),a5=t.object({create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]).optional(),connectOrCreate:t.lazy(()=>x3).optional(),upsert:t.lazy(()=>_ct).optional(),connect:t.lazy(()=>w).optional(),update:t.union([t.lazy(()=>Ect),t.lazy(()=>iL),t.lazy(()=>lL)]).optional()}).strict(),Klt=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),connect:t.lazy(()=>C).optional()}).strict(),Xlt=t.object({create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]).optional(),connectOrCreate:t.lazy(()=>j3).optional(),upsert:t.lazy(()=>Lct).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Vct),t.lazy(()=>rL),t.lazy(()=>pL)]).optional()}).strict(),EF=t.object({create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),connect:t.lazy(()=>X).optional()}).strict(),LF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),connect:t.lazy(()=>$t).optional()}).strict(),VF=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>bw).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),HF=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),createMany:t.lazy(()=>bw).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional()}).strict(),sp=t.object({set:t.lazy(()=>Bt).optional()}).strict(),QF=t.object({create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]).optional(),connectOrCreate:t.lazy(()=>M3).optional(),upsert:t.lazy(()=>Hct).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>Qct),t.lazy(()=>cL),t.lazy(()=>uL)]).optional()}).strict(),YF=t.object({create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]).optional(),connectOrCreate:t.lazy(()=>Z3).optional(),upsert:t.lazy(()=>Yct).optional(),connect:t.lazy(()=>$t).optional(),update:t.union([t.lazy(()=>Gct),t.lazy(()=>sL),t.lazy(()=>yL)]).optional()}).strict(),GF=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),createMany:t.lazy(()=>bw).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),updateMany:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),$F=t.object({create:t.union([t.lazy(()=>ty),t.lazy(()=>ty).array(),t.lazy(()=>ey),t.lazy(()=>ey).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>cI),t.lazy(()=>cI).array()]).optional(),upsert:t.union([t.lazy(()=>Kx),t.lazy(()=>Kx).array()]).optional(),createMany:t.lazy(()=>bw).optional(),set:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),disconnect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),delete:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),connect:t.union([t.lazy(()=>St),t.lazy(()=>St).array()]).optional(),update:t.union([t.lazy(()=>Xx),t.lazy(()=>Xx).array()]).optional(),updateMany:t.union([t.lazy(()=>tj),t.lazy(()=>tj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional()}).strict(),i5=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),connect:t.lazy(()=>st).optional()}).strict(),l5=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),connect:t.lazy(()=>J).optional()}).strict(),r5=t.object({create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]).optional(),connectOrCreate:t.lazy(()=>v3).optional(),upsert:t.lazy(()=>$ct).optional(),connect:t.lazy(()=>st).optional(),update:t.union([t.lazy(()=>Jct),t.lazy(()=>dL),t.lazy(()=>zL)]).optional()}).strict(),p5=t.object({create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]).optional(),connectOrCreate:t.lazy(()=>O3).optional(),upsert:t.lazy(()=>Kct).optional(),connect:t.lazy(()=>J).optional(),update:t.union([t.lazy(()=>Xct),t.lazy(()=>mL),t.lazy(()=>bL)]).optional()}).strict(),JF=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),KF=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),XF=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),tD=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional()}).strict(),eD=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional()}).strict(),oD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional()}).strict(),nD=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),updateMany:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),aD=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),updateMany:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),iD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),updateMany:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),lD=t.object({create:t.union([t.lazy(()=>oy),t.lazy(()=>oy).array(),t.lazy(()=>ny),t.lazy(()=>ny).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>uI),t.lazy(()=>uI).array()]).optional(),upsert:t.union([t.lazy(()=>ej),t.lazy(()=>ej).array()]).optional(),createMany:t.lazy(()=>Aw).optional(),set:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),disconnect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),delete:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),connect:t.union([t.lazy(()=>st),t.lazy(()=>st).array()]).optional(),update:t.union([t.lazy(()=>oj),t.lazy(()=>oj).array()]).optional(),updateMany:t.union([t.lazy(()=>nj),t.lazy(()=>nj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional()}).strict(),rD=t.object({create:t.union([t.lazy(()=>ay),t.lazy(()=>ay).array(),t.lazy(()=>iy),t.lazy(()=>iy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>sI),t.lazy(()=>sI).array()]).optional(),upsert:t.union([t.lazy(()=>aj),t.lazy(()=>aj).array()]).optional(),set:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),disconnect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),delete:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),connect:t.union([t.lazy(()=>J),t.lazy(()=>J).array()]).optional(),update:t.union([t.lazy(()=>ij),t.lazy(()=>ij).array()]).optional(),updateMany:t.union([t.lazy(()=>lj),t.lazy(()=>lj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional()}).strict(),pD=t.object({create:t.union([t.lazy(()=>ly),t.lazy(()=>ly).array(),t.lazy(()=>ry),t.lazy(()=>ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>yI),t.lazy(()=>yI).array()]).optional(),upsert:t.union([t.lazy(()=>rj),t.lazy(()=>rj).array()]).optional(),createMany:t.lazy(()=>Sw).optional(),set:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),disconnect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),delete:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),connect:t.union([t.lazy(()=>gt),t.lazy(()=>gt).array()]).optional(),update:t.union([t.lazy(()=>pj),t.lazy(()=>pj).array()]).optional(),updateMany:t.union([t.lazy(()=>cj),t.lazy(()=>cj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional()}).strict(),c5=t.object({create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),connect:t.lazy(()=>M).optional()}).strict(),u5=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Uw).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),s5=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),createMany:t.lazy(()=>Uw).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional()}).strict(),Gm=t.object({set:t.lazy(()=>Qt).optional()}).strict(),y5=t.object({create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]).optional(),connectOrCreate:t.lazy(()=>f3).optional(),upsert:t.lazy(()=>tut).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>eut),t.lazy(()=>hL),t.lazy(()=>IL)]).optional()}).strict(),d5=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),createMany:t.lazy(()=>Uw).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),z5=t.object({create:t.union([t.lazy(()=>py),t.lazy(()=>py).array(),t.lazy(()=>cy),t.lazy(()=>cy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>dI),t.lazy(()=>dI).array()]).optional(),upsert:t.union([t.lazy(()=>uj),t.lazy(()=>uj).array()]).optional(),createMany:t.lazy(()=>Uw).optional(),set:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),disconnect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),delete:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),connect:t.union([t.lazy(()=>Te),t.lazy(()=>Te).array()]).optional(),update:t.union([t.lazy(()=>sj),t.lazy(()=>sj).array()]).optional(),updateMany:t.union([t.lazy(()=>yj),t.lazy(()=>yj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional()}).strict(),m5=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),b5=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),h5=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),I5=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional()}).strict(),ea=t.object({set:t.lazy(()=>et).optional()}).strict(),g5=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),updateMany:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),C5=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),A5=t.object({create:t.union([t.lazy(()=>uy),t.lazy(()=>uy).array(),t.lazy(()=>sy),t.lazy(()=>sy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>zI),t.lazy(()=>zI).array()]).optional(),upsert:t.union([t.lazy(()=>dj),t.lazy(()=>dj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>zj),t.lazy(()=>zj).array()]).optional(),updateMany:t.union([t.lazy(()=>mj),t.lazy(()=>mj).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),S5=t.object({create:t.union([t.lazy(()=>yy),t.lazy(()=>yy).array(),t.lazy(()=>dy),t.lazy(()=>dy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>mI),t.lazy(()=>mI).array()]).optional(),upsert:t.union([t.lazy(()=>bj),t.lazy(()=>bj).array()]).optional(),createMany:t.lazy(()=>Ww).optional(),set:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),disconnect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),delete:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),connect:t.union([t.lazy(()=>Y),t.lazy(()=>Y).array()]).optional(),update:t.union([t.lazy(()=>hj),t.lazy(()=>hj).array()]).optional(),updateMany:t.union([t.lazy(()=>Ij),t.lazy(()=>Ij).array()]).optional(),deleteMany:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional()}).strict(),cD=t.object({create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),connect:t.lazy(()=>ie).optional()}).strict(),uD=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),connect:t.lazy(()=>C).optional()}).strict(),sD=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),connect:t.lazy(()=>M).optional()}).strict(),yD=t.object({create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]).optional(),connectOrCreate:t.lazy(()=>w3).optional(),upsert:t.lazy(()=>out).optional(),connect:t.lazy(()=>ie).optional(),update:t.union([t.lazy(()=>nut),t.lazy(()=>gL),t.lazy(()=>CL)]).optional()}).strict(),dD=t.object({create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]).optional(),connectOrCreate:t.lazy(()=>N3).optional(),upsert:t.lazy(()=>aut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>iut),t.lazy(()=>AL),t.lazy(()=>SL)]).optional()}).strict(),zD=t.object({create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]).optional(),connectOrCreate:t.lazy(()=>B3).optional(),upsert:t.lazy(()=>lut).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>rut),t.lazy(()=>TL),t.lazy(()=>PL)]).optional()}).strict(),trt=t.object({create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),connect:t.lazy(()=>M).optional()}).strict(),ert=t.object({create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]).optional(),connectOrCreate:t.lazy(()=>q3).optional(),upsert:t.lazy(()=>put).optional(),connect:t.lazy(()=>M).optional(),update:t.union([t.lazy(()=>cut),t.lazy(()=>UL),t.lazy(()=>WL)]).optional()}).strict(),mD=t.object({create:t.union([t.lazy(()=>fw),t.lazy(()=>ww)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),connect:t.lazy(()=>X).optional()}).strict(),bD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),hD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),ID=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional()}).strict(),gD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional()}).strict(),CD=t.object({create:t.union([t.lazy(()=>fw),t.lazy(()=>ww)]).optional(),connectOrCreate:t.lazy(()=>F3).optional(),upsert:t.lazy(()=>uut).optional(),connect:t.lazy(()=>X).optional(),update:t.union([t.lazy(()=>sut),t.lazy(()=>RL),t.lazy(()=>kL)]).optional()}).strict(),AD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),updateMany:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),SD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),updateMany:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),TD=t.object({create:t.union([t.lazy(()=>zy),t.lazy(()=>zy).array(),t.lazy(()=>my),t.lazy(()=>my).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>bI),t.lazy(()=>bI).array()]).optional(),upsert:t.union([t.lazy(()=>gj),t.lazy(()=>gj).array()]).optional(),createMany:t.lazy(()=>Nw).optional(),set:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),disconnect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),delete:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),connect:t.union([t.lazy(()=>x),t.lazy(()=>x).array()]).optional(),update:t.union([t.lazy(()=>Cj),t.lazy(()=>Cj).array()]).optional(),updateMany:t.union([t.lazy(()=>Aj),t.lazy(()=>Aj).array()]).optional(),deleteMany:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional()}).strict(),PD=t.object({create:t.union([t.lazy(()=>by),t.lazy(()=>by).array(),t.lazy(()=>hy),t.lazy(()=>hy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>hI),t.lazy(()=>hI).array()]).optional(),upsert:t.union([t.lazy(()=>Sj),t.lazy(()=>Sj).array()]).optional(),createMany:t.lazy(()=>Bw).optional(),set:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),disconnect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),delete:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),connect:t.union([t.lazy(()=>ee),t.lazy(()=>ee).array()]).optional(),update:t.union([t.lazy(()=>Tj),t.lazy(()=>Tj).array()]).optional(),updateMany:t.union([t.lazy(()=>Pj),t.lazy(()=>Pj).array()]).optional(),deleteMany:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional()}).strict(),T5=t.object({create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),connect:t.lazy(()=>x).optional()}).strict(),P5=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),connect:t.lazy(()=>C).optional()}).strict(),U5=t.object({create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]).optional(),connectOrCreate:t.lazy(()=>D3).optional(),upsert:t.lazy(()=>yut).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>dut),t.lazy(()=>xL),t.lazy(()=>jL)]).optional()}).strict(),W5=t.object({create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]).optional(),connectOrCreate:t.lazy(()=>_3).optional(),upsert:t.lazy(()=>zut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>mut),t.lazy(()=>ML),t.lazy(()=>ZL)]).optional()}).strict(),io=t.object({set:t.number().array()}).strict(),lo=t.object({set:t.number().array()}).strict(),ro=t.object({set:t.number().array()}).strict(),po=t.object({set:t.string().array()}).strict(),Hz=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),connect:t.lazy(()=>Jt).optional()}).strict(),Qz=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>L3).optional(),connect:t.lazy(()=>ee).optional()}).strict(),Yz=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),Gz=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),$z=t.object({create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)]).optional(),connectOrCreate:t.lazy(()=>Yw).optional(),connect:t.lazy(()=>_l).optional()}).strict(),Jz=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>Gw).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),Kz=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>$w).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),Xz=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),tm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),em=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),om=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional()}).strict(),nm=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional()}).strict(),am=t.object({create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)]).optional(),connectOrCreate:t.lazy(()=>Yw).optional(),connect:t.lazy(()=>_l).optional()}).strict(),im=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),createMany:t.lazy(()=>Gw).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional()}).strict(),lm=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),createMany:t.lazy(()=>$w).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional()}).strict(),rm=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional()}).strict(),pm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional()}).strict(),cm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional()}).strict(),Ee=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Le=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),Ve=t.object({set:t.number().array().optional(),push:t.union([t.number(),t.number().array()]).optional()}).strict(),He=t.object({set:t.string().array().optional(),push:t.union([t.string(),t.string().array()]).optional()}).strict(),um=t.object({create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]).optional(),connectOrCreate:t.lazy(()=>E3).optional(),upsert:t.lazy(()=>but).optional(),connect:t.lazy(()=>Jt).optional(),update:t.union([t.lazy(()=>hut),t.lazy(()=>vL),t.lazy(()=>OL)]).optional()}).strict(),sm=t.object({create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]).optional(),connectOrCreate:t.lazy(()=>L3).optional(),upsert:t.lazy(()=>Iut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>we)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>we)]).optional(),connect:t.lazy(()=>ee).optional(),update:t.union([t.lazy(()=>gut),t.lazy(()=>fL),t.lazy(()=>wL)]).optional()}).strict(),ym=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),dm=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),updateMany:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),zm=t.object({create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)]).optional(),connectOrCreate:t.lazy(()=>Yw).optional(),upsert:t.lazy(()=>V3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>_l).optional(),update:t.union([t.lazy(()=>H3),t.lazy(()=>Xw),t.lazy(()=>tN)]).optional()}).strict(),mm=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),createMany:t.lazy(()=>Gw).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),updateMany:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),bm=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),createMany:t.lazy(()=>$w).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),updateMany:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),hm=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),updateMany:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Im=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),updateMany:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),gm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),updateMany:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),Cm=t.object({create:t.union([t.lazy(()=>Iy),t.lazy(()=>Iy).array(),t.lazy(()=>gy),t.lazy(()=>gy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>II),t.lazy(()=>II).array()]).optional(),upsert:t.union([t.lazy(()=>Uj),t.lazy(()=>Uj).array()]).optional(),set:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),disconnect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),delete:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),connect:t.union([t.lazy(()=>C),t.lazy(()=>C).array()]).optional(),update:t.union([t.lazy(()=>Wj),t.lazy(()=>Wj).array()]).optional(),updateMany:t.union([t.lazy(()=>Rj),t.lazy(()=>Rj).array()]).optional(),deleteMany:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional()}).strict(),Am=t.object({create:t.union([t.lazy(()=>Cy),t.lazy(()=>Cy).array(),t.lazy(()=>Ay),t.lazy(()=>Ay).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>gI),t.lazy(()=>gI).array()]).optional(),upsert:t.union([t.lazy(()=>kj),t.lazy(()=>kj).array()]).optional(),createMany:t.lazy(()=>Qw).optional(),set:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),disconnect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),delete:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),connect:t.union([t.lazy(()=>Tt),t.lazy(()=>Tt).array()]).optional(),update:t.union([t.lazy(()=>xj),t.lazy(()=>xj).array()]).optional(),updateMany:t.union([t.lazy(()=>jj),t.lazy(()=>jj).array()]).optional(),deleteMany:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional()}).strict(),Sm=t.object({create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)]).optional(),connectOrCreate:t.lazy(()=>Yw).optional(),upsert:t.lazy(()=>V3).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>De)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>De)]).optional(),connect:t.lazy(()=>_l).optional(),update:t.union([t.lazy(()=>H3),t.lazy(()=>Xw),t.lazy(()=>tN)]).optional()}).strict(),Tm=t.object({create:t.union([t.lazy(()=>Sy),t.lazy(()=>Sy).array(),t.lazy(()=>Ty),t.lazy(()=>Ty).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>CI),t.lazy(()=>CI).array()]).optional(),upsert:t.union([t.lazy(()=>Mj),t.lazy(()=>Mj).array()]).optional(),createMany:t.lazy(()=>Gw).optional(),set:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),disconnect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),delete:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),connect:t.union([t.lazy(()=>We),t.lazy(()=>We).array()]).optional(),update:t.union([t.lazy(()=>Zj),t.lazy(()=>Zj).array()]).optional(),updateMany:t.union([t.lazy(()=>vj),t.lazy(()=>vj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional()}).strict(),Pm=t.object({create:t.union([t.lazy(()=>Py),t.lazy(()=>Py).array(),t.lazy(()=>Uy),t.lazy(()=>Uy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>AI),t.lazy(()=>AI).array()]).optional(),upsert:t.union([t.lazy(()=>Oj),t.lazy(()=>Oj).array()]).optional(),createMany:t.lazy(()=>$w).optional(),set:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),disconnect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),delete:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),connect:t.union([t.lazy(()=>ht),t.lazy(()=>ht).array()]).optional(),update:t.union([t.lazy(()=>fj),t.lazy(()=>fj).array()]).optional(),updateMany:t.union([t.lazy(()=>wj),t.lazy(()=>wj).array()]).optional(),deleteMany:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional()}).strict(),Um=t.object({create:t.union([t.lazy(()=>Wy),t.lazy(()=>Wy).array(),t.lazy(()=>Ry),t.lazy(()=>Ry).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>SI),t.lazy(()=>SI).array()]).optional(),upsert:t.union([t.lazy(()=>Nj),t.lazy(()=>Nj).array()]).optional(),createMany:t.lazy(()=>Jw).optional(),set:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),disconnect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),delete:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),connect:t.union([t.lazy(()=>_),t.lazy(()=>_).array()]).optional(),update:t.union([t.lazy(()=>Bj),t.lazy(()=>Bj).array()]).optional(),updateMany:t.union([t.lazy(()=>qj),t.lazy(()=>qj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional()}).strict(),Wm=t.object({create:t.union([t.lazy(()=>ky),t.lazy(()=>ky).array(),t.lazy(()=>xy),t.lazy(()=>xy).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>TI),t.lazy(()=>TI).array()]).optional(),upsert:t.union([t.lazy(()=>Fj),t.lazy(()=>Fj).array()]).optional(),createMany:t.lazy(()=>Kw).optional(),set:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),disconnect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),delete:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),connect:t.union([t.lazy(()=>F),t.lazy(()=>F).array()]).optional(),update:t.union([t.lazy(()=>Dj),t.lazy(()=>Dj).array()]).optional(),updateMany:t.union([t.lazy(()=>_j),t.lazy(()=>_j).array()]).optional(),deleteMany:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional()}).strict(),Rm=t.object({create:t.union([t.lazy(()=>jy),t.lazy(()=>jy).array(),t.lazy(()=>My),t.lazy(()=>My).array()]).optional(),connectOrCreate:t.union([t.lazy(()=>PI),t.lazy(()=>PI).array()]).optional(),upsert:t.union([t.lazy(()=>Ej),t.lazy(()=>Ej).array()]).optional(),set:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),disconnect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),delete:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),connect:t.union([t.lazy(()=>D),t.lazy(()=>D).array()]).optional(),update:t.union([t.lazy(()=>Lj),t.lazy(()=>Lj).array()]).optional(),updateMany:t.union([t.lazy(()=>Vj),t.lazy(()=>Vj).array()]).optional(),deleteMany:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional()}).strict(),ort=t.object({create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]).optional(),connectOrCreate:t.lazy(()=>Q3).optional(),connect:t.lazy(()=>x).optional()}).strict(),nrt=t.object({create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]).optional(),connectOrCreate:t.lazy(()=>Q3).optional(),upsert:t.lazy(()=>Cut).optional(),disconnect:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),delete:t.union([t.boolean(),t.lazy(()=>Pt)]).optional(),connect:t.lazy(()=>x).optional(),update:t.union([t.lazy(()=>Aut),t.lazy(()=>NL),t.lazy(()=>BL)]).optional()}).strict(),art=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>Y3).optional(),connect:t.lazy(()=>C).optional()}).strict(),irt=t.object({create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]).optional(),connectOrCreate:t.lazy(()=>Y3).optional(),upsert:t.lazy(()=>Sut).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Tut),t.lazy(()=>qL),t.lazy(()=>FL)]).optional()}).strict(),lrt=t.object({create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),connect:t.lazy(()=>C).optional()}).strict(),rrt=t.object({create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]).optional(),connectOrCreate:t.lazy(()=>G3).optional(),upsert:t.lazy(()=>Put).optional(),connect:t.lazy(()=>C).optional(),update:t.union([t.lazy(()=>Uut),t.lazy(()=>DL),t.lazy(()=>_L)]).optional()}).strict(),at=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>at)]).optional()}).strict(),Kr=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Kr)]).optional()}).strict(),GA=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>GA)]).optional()}).strict(),$A=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>$A)]).optional()}).strict(),R5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>R5)]).optional(),_count:t.lazy(()=>at).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>at).optional(),_min:t.lazy(()=>at).optional(),_max:t.lazy(()=>at).optional()}).strict(),k5=t.object({equals:t.number().optional(),in:t.number().array().optional(),notIn:t.number().array().optional(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>k5)]).optional(),_count:t.lazy(()=>at).optional(),_avg:t.lazy(()=>Kr).optional(),_sum:t.lazy(()=>Kr).optional(),_min:t.lazy(()=>Kr).optional(),_max:t.lazy(()=>Kr).optional()}).strict(),x5=t.object({equals:t.string().optional(),in:t.string().array().optional(),notIn:t.string().array().optional(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>x5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>GA).optional(),_max:t.lazy(()=>GA).optional()}).strict(),j5=t.object({equals:t.boolean().optional(),not:t.union([t.boolean(),t.lazy(()=>j5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>$A).optional(),_max:t.lazy(()=>$A).optional()}).strict(),Xr=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>Xr)]).optional().nullable()}).strict(),JA=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>JA)]).optional().nullable()}).strict(),KA=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>KA)]).optional()}).strict(),M5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>M5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_avg:t.lazy(()=>Xr).optional(),_sum:t.lazy(()=>Xr).optional(),_min:t.lazy(()=>Xr).optional(),_max:t.lazy(()=>Xr).optional()}).strict(),hl=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>hl)]).optional().nullable()}).strict(),Z5=t.object({equals:t.string().optional().nullable(),in:t.string().array().optional().nullable(),notIn:t.string().array().optional().nullable(),lt:t.string().optional(),lte:t.string().optional(),gt:t.string().optional(),gte:t.string().optional(),contains:t.string().optional(),startsWith:t.string().optional(),endsWith:t.string().optional(),not:t.union([t.string(),t.lazy(()=>Z5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>JA).optional(),_max:t.lazy(()=>JA).optional()}).strict(),v5=t.object({equals:t.coerce.date().optional(),in:t.coerce.date().array().optional(),notIn:t.coerce.date().array().optional(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>v5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>KA).optional(),_max:t.lazy(()=>KA).optional()}).strict(),XA=t.object({equals:t.lazy(()=>de).optional(),in:t.lazy(()=>de).array().optional(),notIn:t.lazy(()=>de).array().optional(),not:t.union([t.lazy(()=>de),t.lazy(()=>XA)]).optional()}).strict(),O5=t.object({equals:t.lazy(()=>de).optional(),in:t.lazy(()=>de).array().optional(),notIn:t.lazy(()=>de).array().optional(),not:t.union([t.lazy(()=>de),t.lazy(()=>O5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>XA).optional(),_max:t.lazy(()=>XA).optional()}).strict(),f5=t.object({equals:t.number().optional().nullable(),in:t.number().array().optional().nullable(),notIn:t.number().array().optional().nullable(),lt:t.number().optional(),lte:t.number().optional(),gt:t.number().optional(),gte:t.number().optional(),not:t.union([t.number(),t.lazy(()=>f5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_avg:t.lazy(()=>Xr).optional(),_sum:t.lazy(()=>hl).optional(),_min:t.lazy(()=>hl).optional(),_max:t.lazy(()=>hl).optional()}).strict(),tS=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>tS)]).optional().nullable()}).strict(),w5=t.object({equals:t.coerce.date().optional().nullable(),in:t.coerce.date().array().optional().nullable(),notIn:t.coerce.date().array().optional().nullable(),lt:t.coerce.date().optional(),lte:t.coerce.date().optional(),gt:t.coerce.date().optional(),gte:t.coerce.date().optional(),not:t.union([t.coerce.date(),t.lazy(()=>w5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>tS).optional(),_max:t.lazy(()=>tS).optional()}).strict(),eS=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>eS)]).optional()}).strict(),N5=t.object({equals:t.lazy(()=>Ft).optional(),in:t.lazy(()=>Ft).array().optional(),notIn:t.lazy(()=>Ft).array().optional(),not:t.union([t.lazy(()=>Ft),t.lazy(()=>N5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>eS).optional(),_max:t.lazy(()=>eS).optional()}).strict(),oS=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>oS)]).optional()}).strict(),B5=t.object({equals:t.lazy(()=>ce).optional(),in:t.lazy(()=>ce).array().optional(),notIn:t.lazy(()=>ce).array().optional(),not:t.union([t.lazy(()=>ce),t.lazy(()=>B5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>oS).optional(),_max:t.lazy(()=>oS).optional()}).strict(),nS=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>nS)]).optional()}).strict(),q5=t.object({equals:t.lazy(()=>Dt).optional(),in:t.lazy(()=>Dt).array().optional(),notIn:t.lazy(()=>Dt).array().optional(),not:t.union([t.lazy(()=>Dt),t.lazy(()=>q5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>nS).optional(),_max:t.lazy(()=>nS).optional()}).strict(),aS=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>aS)]).optional()}).strict(),F5=t.object({equals:t.lazy(()=>Ht).optional(),in:t.lazy(()=>Ht).array().optional(),notIn:t.lazy(()=>Ht).array().optional(),not:t.union([t.lazy(()=>Ht),t.lazy(()=>F5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>aS).optional(),_max:t.lazy(()=>aS).optional()}).strict(),iS=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>iS)]).optional()}).strict(),D5=t.object({equals:t.lazy(()=>Vt).optional(),in:t.lazy(()=>Vt).array().optional(),notIn:t.lazy(()=>Vt).array().optional(),not:t.union([t.lazy(()=>Vt),t.lazy(()=>D5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>iS).optional(),_max:t.lazy(()=>iS).optional()}).strict(),lS=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>lS)]).optional()}).strict(),rS=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>rS)]).optional()}).strict(),_5=t.object({equals:t.lazy(()=>Zt).optional(),in:t.lazy(()=>Zt).array().optional(),notIn:t.lazy(()=>Zt).array().optional(),not:t.union([t.lazy(()=>Zt),t.lazy(()=>_5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>lS).optional(),_max:t.lazy(()=>lS).optional()}).strict(),E5=t.object({equals:t.lazy(()=>vt).optional(),in:t.lazy(()=>vt).array().optional(),notIn:t.lazy(()=>vt).array().optional(),not:t.union([t.lazy(()=>vt),t.lazy(()=>E5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>rS).optional(),_max:t.lazy(()=>rS).optional()}).strict(),pS=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>pS)]).optional()}).strict(),L5=t.object({equals:t.lazy(()=>wt).optional(),in:t.lazy(()=>wt).array().optional(),notIn:t.lazy(()=>wt).array().optional(),not:t.union([t.lazy(()=>wt),t.lazy(()=>L5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>pS).optional(),_max:t.lazy(()=>pS).optional()}).strict(),cS=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>cS)]).optional()}).strict(),V5=t.object({equals:t.lazy(()=>ue).optional(),in:t.lazy(()=>ue).array().optional(),notIn:t.lazy(()=>ue).array().optional(),not:t.union([t.lazy(()=>ue),t.lazy(()=>V5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>cS).optional(),_max:t.lazy(()=>cS).optional()}).strict(),uS=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>uS)]).optional()}).strict(),H5=t.object({equals:t.lazy(()=>se).optional(),in:t.lazy(()=>se).array().optional(),notIn:t.lazy(()=>se).array().optional(),not:t.union([t.lazy(()=>se),t.lazy(()=>H5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>uS).optional(),_max:t.lazy(()=>uS).optional()}).strict(),sS=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>sS)]).optional()}).strict(),Q5=t.object({equals:t.lazy(()=>ye).optional(),in:t.lazy(()=>ye).array().optional(),notIn:t.lazy(()=>ye).array().optional(),not:t.union([t.lazy(()=>ye),t.lazy(()=>Q5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>sS).optional(),_max:t.lazy(()=>sS).optional()}).strict(),yS=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>yS)]).optional()}).strict(),Y5=t.object({equals:t.lazy(()=>qt).optional(),in:t.lazy(()=>qt).array().optional(),notIn:t.lazy(()=>qt).array().optional(),not:t.union([t.lazy(()=>qt),t.lazy(()=>Y5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>yS).optional(),_max:t.lazy(()=>yS).optional()}).strict(),dS=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>dS)]).optional()}).strict(),G5=t.object({equals:t.lazy(()=>j).optional(),in:t.lazy(()=>j).array().optional(),notIn:t.lazy(()=>j).array().optional(),not:t.union([t.lazy(()=>j),t.lazy(()=>G5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>dS).optional(),_max:t.lazy(()=>dS).optional()}).strict(),zS=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>zS)]).optional()}).strict(),mS=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>mS)]).optional()}).strict(),$5=t.object({equals:t.lazy(()=>W).optional(),in:t.lazy(()=>W).array().optional(),notIn:t.lazy(()=>W).array().optional(),not:t.union([t.lazy(()=>W),t.lazy(()=>$5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>zS).optional(),_max:t.lazy(()=>zS).optional()}).strict(),J5=t.object({equals:t.lazy(()=>U).optional(),in:t.lazy(()=>U).array().optional(),notIn:t.lazy(()=>U).array().optional(),not:t.union([t.lazy(()=>U),t.lazy(()=>J5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>mS).optional(),_max:t.lazy(()=>mS).optional()}).strict(),bS=t.object({equals:t.lazy(()=>nt).optional().nullable(),in:t.lazy(()=>nt).array().optional().nullable(),notIn:t.lazy(()=>nt).array().optional().nullable(),not:t.union([t.lazy(()=>nt),t.lazy(()=>bS)]).optional().nullable()}).strict(),K5=t.object({equals:t.lazy(()=>nt).optional().nullable(),in:t.lazy(()=>nt).array().optional().nullable(),notIn:t.lazy(()=>nt).array().optional().nullable(),not:t.union([t.lazy(()=>nt),t.lazy(()=>K5)]).optional().nullable(),_count:t.lazy(()=>hl).optional(),_min:t.lazy(()=>bS).optional(),_max:t.lazy(()=>bS).optional()}).strict(),hS=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>hS)]).optional()}).strict(),X5=t.object({equals:t.lazy(()=>Ot).optional(),in:t.lazy(()=>Ot).array().optional(),notIn:t.lazy(()=>Ot).array().optional(),not:t.union([t.lazy(()=>Ot),t.lazy(()=>X5)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>hS).optional(),_max:t.lazy(()=>hS).optional()}).strict(),IS=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>IS)]).optional()}).strict(),t6=t.object({equals:t.lazy(()=>Nt).optional(),in:t.lazy(()=>Nt).array().optional(),notIn:t.lazy(()=>Nt).array().optional(),not:t.union([t.lazy(()=>Nt),t.lazy(()=>t6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>IS).optional(),_max:t.lazy(()=>IS).optional()}).strict(),gS=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>gS)]).optional()}).strict(),e6=t.object({equals:t.lazy(()=>Bt).optional(),in:t.lazy(()=>Bt).array().optional(),notIn:t.lazy(()=>Bt).array().optional(),not:t.union([t.lazy(()=>Bt),t.lazy(()=>e6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>gS).optional(),_max:t.lazy(()=>gS).optional()}).strict(),CS=t.object({equals:t.lazy(()=>Qt).optional(),in:t.lazy(()=>Qt).array().optional(),notIn:t.lazy(()=>Qt).array().optional(),not:t.union([t.lazy(()=>Qt),t.lazy(()=>CS)]).optional()}).strict(),o6=t.object({equals:t.lazy(()=>Qt).optional(),in:t.lazy(()=>Qt).array().optional(),notIn:t.lazy(()=>Qt).array().optional(),not:t.union([t.lazy(()=>Qt),t.lazy(()=>o6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>CS).optional(),_max:t.lazy(()=>CS).optional()}).strict(),AS=t.object({equals:t.lazy(()=>et).optional(),in:t.lazy(()=>et).array().optional(),notIn:t.lazy(()=>et).array().optional(),not:t.union([t.lazy(()=>et),t.lazy(()=>AS)]).optional()}).strict(),n6=t.object({equals:t.lazy(()=>et).optional(),in:t.lazy(()=>et).array().optional(),notIn:t.lazy(()=>et).array().optional(),not:t.union([t.lazy(()=>et),t.lazy(()=>n6)]).optional(),_count:t.lazy(()=>at).optional(),_min:t.lazy(()=>AS).optional(),_max:t.lazy(()=>AS).optional()}).strict(),$M=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),JM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),a6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)])}).strict(),prt=t.object({update:t.union([t.lazy(()=>UD),t.lazy(()=>WD)]),create:t.union([t.lazy(()=>$M),t.lazy(()=>JM)]),where:t.lazy(()=>O).optional()}).strict(),crt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>UD),t.lazy(()=>WD)])}).strict(),UD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),WD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),KM=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),XM=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),i6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)])}).strict(),urt=t.object({update:t.union([t.lazy(()=>RD),t.lazy(()=>kD)]),create:t.union([t.lazy(()=>KM),t.lazy(()=>XM)]),where:t.lazy(()=>O).optional()}).strict(),srt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>RD),t.lazy(()=>kD)])}).strict(),RD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),kD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),tZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),eZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),l6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)])}).strict(),yrt=t.object({update:t.union([t.lazy(()=>xD),t.lazy(()=>jD)]),create:t.union([t.lazy(()=>tZ),t.lazy(()=>eZ)]),where:t.lazy(()=>O).optional()}).strict(),drt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>xD),t.lazy(()=>jD)])}).strict(),xD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),jD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),oZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),nZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),r6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>oZ),t.lazy(()=>nZ)])}).strict(),zrt=t.object({update:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)]),create:t.union([t.lazy(()=>oZ),t.lazy(()=>nZ)]),where:t.lazy(()=>O).optional()}).strict(),mrt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>MD),t.lazy(()=>ZD)])}).strict(),MD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ZD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),aZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),iZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),p6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)])}).strict(),brt=t.object({update:t.union([t.lazy(()=>vD),t.lazy(()=>OD)]),create:t.union([t.lazy(()=>aZ),t.lazy(()=>iZ)]),where:t.lazy(()=>O).optional()}).strict(),hrt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>vD),t.lazy(()=>OD)])}).strict(),vD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),OD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),lZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),rZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),c6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)])}).strict(),Irt=t.object({update:t.union([t.lazy(()=>fD),t.lazy(()=>wD)]),create:t.union([t.lazy(()=>lZ),t.lazy(()=>rZ)]),where:t.lazy(()=>O).optional()}).strict(),grt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>fD),t.lazy(()=>wD)])}).strict(),fD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),wD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),pZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),cZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),u6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)])}).strict(),Crt=t.object({update:t.union([t.lazy(()=>ND),t.lazy(()=>BD)]),create:t.union([t.lazy(()=>pZ),t.lazy(()=>cZ)]),where:t.lazy(()=>O).optional()}).strict(),Art=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>ND),t.lazy(()=>BD)])}).strict(),ND=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),BD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),uZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),sZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),s6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>uZ),t.lazy(()=>sZ)])}).strict(),yZ=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),dZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),y6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>yZ),t.lazy(()=>dZ)])}).strict(),Srt=t.object({update:t.union([t.lazy(()=>qD),t.lazy(()=>FD)]),create:t.union([t.lazy(()=>uZ),t.lazy(()=>sZ)]),where:t.lazy(()=>B).optional()}).strict(),Trt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>qD),t.lazy(()=>FD)])}).strict(),qD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),FD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),Prt=t.object({update:t.union([t.lazy(()=>DD),t.lazy(()=>_D)]),create:t.union([t.lazy(()=>yZ),t.lazy(()=>dZ)]),where:t.lazy(()=>Pt).optional()}).strict(),Urt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>DD),t.lazy(()=>_D)])}).strict(),DD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),_D=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),zZ=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>mD),menuItems:t.lazy(()=>bD).optional()}).strict(),mZ=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>ID).optional()}).strict(),d6=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)])}).strict(),$p=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Jp=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),Ob=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),bZ=t.object({data:t.union([t.lazy(()=>oH),t.lazy(()=>oH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wrt=t.object({update:t.union([t.lazy(()=>ED),t.lazy(()=>LD)]),create:t.union([t.lazy(()=>zZ),t.lazy(()=>mZ)]),where:t.lazy(()=>fe).optional()}).strict(),Rrt=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>ED),t.lazy(()=>LD)])}).strict(),ED=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>CD).optional(),menuItems:t.lazy(()=>AD).optional()}).strict(),LD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>TD).optional()}).strict(),gU=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>$3),t.lazy(()=>J3)]),create:t.union([t.lazy(()=>$p),t.lazy(()=>Jp)])}).strict(),CU=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>$3),t.lazy(()=>J3)])}).strict(),AU=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>PS),t.lazy(()=>Wut)])}).strict(),ao=t.object({AND:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),OR:t.lazy(()=>ao).array().optional(),NOT:t.union([t.lazy(()=>ao),t.lazy(()=>ao).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),price:t.union([t.lazy(()=>R),t.number()]).optional(),foodCost:t.union([t.lazy(()=>R),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),recipeIds:t.lazy(()=>jI).optional(),recipeServingsAmount:t.lazy(()=>vb).optional(),recipeServingsCost:t.lazy(()=>vb).optional(),allergens:t.lazy(()=>Il).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),categoryId:t.union([t.lazy(()=>it),t.number()]).optional().nullable()}).strict(),hZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),IZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),z6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)])}).strict(),Kp=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>mF),ingredient:t.lazy(()=>bF)}).strict(),Xp=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),fb=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),gZ=t.object({data:t.union([t.lazy(()=>nH),t.lazy(()=>nH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tc=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>AF),equipment:t.lazy(()=>TF).optional()}).strict(),ec=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>PF).optional()}).strict(),wb=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),CZ=t.object({data:t.union([t.lazy(()=>aH),t.lazy(()=>aH).array()]),skipDuplicates:t.boolean().optional()}).strict(),AZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),SZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),m6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)])}).strict(),TZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),PZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),b6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)])}).strict(),krt=t.object({update:t.union([t.lazy(()=>VD),t.lazy(()=>HD)]),create:t.union([t.lazy(()=>hZ),t.lazy(()=>IZ)]),where:t.lazy(()=>O).optional()}).strict(),xrt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>VD),t.lazy(()=>HD)])}).strict(),VD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),HD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),SU=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>K3),t.lazy(()=>X3)]),create:t.union([t.lazy(()=>Kp),t.lazy(()=>Xp)])}).strict(),TU=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>K3),t.lazy(()=>X3)])}).strict(),PU=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>ET),t.lazy(()=>Rut)])}).strict(),wa=t.object({AND:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),OR:t.lazy(()=>wa).array().optional(),NOT:t.union([t.lazy(()=>wa),t.lazy(()=>wa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),processingInstructions:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),substituteIngredients:t.lazy(()=>jI).optional(),isOptional:t.union([t.lazy(()=>mt),t.boolean()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),yield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),recipeVersionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable()}).strict(),UU=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>t8),t.lazy(()=>e8)]),create:t.union([t.lazy(()=>tc),t.lazy(()=>ec)])}).strict(),WU=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>t8),t.lazy(()=>e8)])}).strict(),RU=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>rM),t.lazy(()=>kut)])}).strict(),Cl=t.object({AND:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),OR:t.lazy(()=>Cl).array().optional(),NOT:t.union([t.lazy(()=>Cl),t.lazy(()=>Cl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),instruction:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeVersionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),timeInMinutes:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),temperature:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),temperatureUnit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),techniqueTips:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),warningNotes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),jrt=t.object({update:t.union([t.lazy(()=>QD),t.lazy(()=>YD)]),create:t.union([t.lazy(()=>AZ),t.lazy(()=>SZ)]),where:t.lazy(()=>v).optional()}).strict(),Mrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>QD),t.lazy(()=>YD)])}).strict(),QD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),YD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Zrt=t.object({update:t.union([t.lazy(()=>GD),t.lazy(()=>$D)]),create:t.union([t.lazy(()=>TZ),t.lazy(()=>PZ)]),where:t.lazy(()=>v).optional()}).strict(),vrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>GD),t.lazy(()=>$D)])}).strict(),GD=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),$D=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),UZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),WZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),h6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)])}).strict(),oc=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>GB),RecipeInstruction:t.lazy(()=>JB).optional()}).strict(),nc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Nb=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),RZ=t.object({data:t.union([t.lazy(()=>iH),t.lazy(()=>iH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ac=t.object({date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ic=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Bb=t.object({where:t.lazy(()=>Ae),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),kZ=t.object({data:t.union([t.lazy(()=>lH),t.lazy(()=>lH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ort=t.object({update:t.union([t.lazy(()=>JD),t.lazy(()=>KD)]),create:t.union([t.lazy(()=>UZ),t.lazy(()=>WZ)]),where:t.lazy(()=>B).optional()}).strict(),frt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>JD),t.lazy(()=>KD)])}).strict(),JD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),KD=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),kU=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>o8),t.lazy(()=>n8)]),create:t.union([t.lazy(()=>oc),t.lazy(()=>nc)])}).strict(),xU=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>o8),t.lazy(()=>n8)])}).strict(),jU=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>wT),t.lazy(()=>xut)])}).strict(),Na=t.object({AND:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),OR:t.lazy(()=>Na).array().optional(),NOT:t.union([t.lazy(()=>Na),t.lazy(()=>Na).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),recipeInstructionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable()}).strict(),MU=t.object({where:t.lazy(()=>Ae),update:t.union([t.lazy(()=>a8),t.lazy(()=>i8)]),create:t.union([t.lazy(()=>ac),t.lazy(()=>ic)])}).strict(),ZU=t.object({where:t.lazy(()=>Ae),data:t.union([t.lazy(()=>a8),t.lazy(()=>i8)])}).strict(),vU=t.object({where:t.lazy(()=>gp),data:t.union([t.lazy(()=>LN),t.lazy(()=>jut)])}).strict(),gp=t.object({AND:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),OR:t.lazy(()=>gp).array().optional(),NOT:t.union([t.lazy(()=>gp),t.lazy(()=>gp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),equipmentId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),type:t.union([t.lazy(()=>yB),t.lazy(()=>ce)]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),performedBy:t.union([t.lazy(()=>S),t.string()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),xZ=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),jZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),I6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)])}).strict(),MZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),maintenanceLogs:t.lazy(()=>DB).optional()}).strict(),ZZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),maintenanceLogs:t.lazy(()=>EB).optional()}).strict(),g6=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)])}).strict(),vZ=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),recipe:t.lazy(()=>AF),RecipeVersion:t.lazy(()=>SF).optional()}).strict(),OZ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),C6=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)])}).strict(),wrt=t.object({update:t.union([t.lazy(()=>XD),t.lazy(()=>t_)]),create:t.union([t.lazy(()=>xZ),t.lazy(()=>jZ)]),where:t.lazy(()=>O).optional()}).strict(),Nrt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>XD),t.lazy(()=>t_)])}).strict(),XD=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),t_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Brt=t.object({update:t.union([t.lazy(()=>e_),t.lazy(()=>o_)]),create:t.union([t.lazy(()=>MZ),t.lazy(()=>ZZ)]),where:t.lazy(()=>Ze).optional()}).strict(),qrt=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>e_),t.lazy(()=>o_)])}).strict(),e_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),maintenanceLogs:t.lazy(()=>HB).optional()}).strict(),o_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),maintenanceLogs:t.lazy(()=>YB).optional()}).strict(),Frt=t.object({update:t.union([t.lazy(()=>n_),t.lazy(()=>a_)]),create:t.union([t.lazy(()=>vZ),t.lazy(()=>OZ)]),where:t.lazy(()=>Ne).optional()}).strict(),Drt=t.object({where:t.lazy(()=>Ne).optional(),data:t.union([t.lazy(()=>n_),t.lazy(()=>a_)])}).strict(),n_=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>UF).optional(),RecipeVersion:t.lazy(()=>WF).optional()}).strict(),a_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),fZ=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>qB),recipes:t.lazy(()=>FB).optional()}).strict(),wZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>_B).optional()}).strict(),A6=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)])}).strict(),_rt=t.object({update:t.union([t.lazy(()=>i_),t.lazy(()=>l_)]),create:t.union([t.lazy(()=>fZ),t.lazy(()=>wZ)]),where:t.lazy(()=>Ze).optional()}).strict(),Ert=t.object({where:t.lazy(()=>Ze).optional(),data:t.union([t.lazy(()=>i_),t.lazy(()=>l_)])}).strict(),i_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>LB).optional(),recipes:t.lazy(()=>VB).optional()}).strict(),l_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>QB).optional()}).strict(),NZ=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),BZ=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),S6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)])}).strict(),lc=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>P2).optional()}).strict(),rc=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>U2).optional()}).strict(),qb=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),qZ=t.object({data:t.union([t.lazy(()=>rH),t.lazy(()=>rH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pc=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completedBy:t.lazy(()=>yq),items:t.lazy(()=>dq).optional()}).strict(),cc=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>zq).optional()}).strict(),Fb=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),FZ=t.object({data:t.union([t.lazy(()=>pH),t.lazy(()=>pH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lrt=t.object({update:t.union([t.lazy(()=>r_),t.lazy(()=>p_)]),create:t.union([t.lazy(()=>NZ),t.lazy(()=>BZ)]),where:t.lazy(()=>B).optional()}).strict(),Vrt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>r_),t.lazy(()=>p_)])}).strict(),r_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),p_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),OU=t.object({where:t.lazy(()=>oe),update:t.union([t.lazy(()=>l8),t.lazy(()=>r8)]),create:t.union([t.lazy(()=>lc),t.lazy(()=>rc)])}).strict(),fU=t.object({where:t.lazy(()=>oe),data:t.union([t.lazy(()=>l8),t.lazy(()=>r8)])}).strict(),wU=t.object({where:t.lazy(()=>Cp),data:t.union([t.lazy(()=>HN),t.lazy(()=>Mut)])}).strict(),Cp=t.object({AND:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),OR:t.lazy(()=>Cp).array().optional(),NOT:t.union([t.lazy(()=>Cp),t.lazy(()=>Cp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),order:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>zB),t.lazy(()=>Ht)]).optional(),requiredPhotos:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),NU=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>p8),t.lazy(()=>c8)]),create:t.union([t.lazy(()=>pc),t.lazy(()=>cc)])}).strict(),BU=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>p8),t.lazy(()=>c8)])}).strict(),qU=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>tM),t.lazy(()=>Zut)])}).strict(),Al=t.object({AND:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),OR:t.lazy(()=>Al).array().optional(),NOT:t.union([t.lazy(()=>Al),t.lazy(()=>Al).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistId:t.union([t.lazy(()=>s),t.number()]).optional(),completedById:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),DZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eq),completions:t.lazy(()=>nq).optional()}).strict(),_Z=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),completions:t.lazy(()=>iq).optional()}).strict(),T6=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)])}).strict(),uc=t.object({status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistComplete:t.lazy(()=>x2)}).strict(),sc=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Db=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>uc),t.lazy(()=>sc)])}).strict(),EZ=t.object({data:t.union([t.lazy(()=>cH),t.lazy(()=>cH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hrt=t.object({update:t.union([t.lazy(()=>c_),t.lazy(()=>u_)]),create:t.union([t.lazy(()=>DZ),t.lazy(()=>_Z)]),where:t.lazy(()=>ve).optional()}).strict(),Qrt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>c_),t.lazy(()=>u_)])}).strict(),c_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),completions:t.lazy(()=>pq).optional()}).strict(),u_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>uq).optional()}).strict(),FU=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>u8),t.lazy(()=>s8)]),create:t.union([t.lazy(()=>uc),t.lazy(()=>sc)])}).strict(),DU=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>u8),t.lazy(()=>s8)])}).strict(),_U=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>eM),t.lazy(()=>vut)])}).strict(),Sl=t.object({AND:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),OR:t.lazy(()=>Sl).array().optional(),NOT:t.union([t.lazy(()=>Sl),t.lazy(()=>Sl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),checklistCompleteId:t.union([t.lazy(()=>s),t.number()]).optional(),checklistItemId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>mB),t.lazy(()=>Vt)]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),photoUrls:t.lazy(()=>Il).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),LZ=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>eq),items:t.lazy(()=>oq).optional()}).strict(),VZ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),restaurantId:t.number().int(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>aq).optional()}).strict(),P6=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)])}).strict(),HZ=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),QZ=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),U6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)])}).strict(),yc=t.object({status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklistItem:t.lazy(()=>j2)}).strict(),dc=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_b=t.object({where:t.lazy(()=>It),create:t.union([t.lazy(()=>yc),t.lazy(()=>dc)])}).strict(),YZ=t.object({data:t.union([t.lazy(()=>uH),t.lazy(()=>uH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yrt=t.object({update:t.union([t.lazy(()=>s_),t.lazy(()=>y_)]),create:t.union([t.lazy(()=>LZ),t.lazy(()=>VZ)]),where:t.lazy(()=>ve).optional()}).strict(),Grt=t.object({where:t.lazy(()=>ve).optional(),data:t.union([t.lazy(()=>s_),t.lazy(()=>y_)])}).strict(),s_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>lq).optional(),items:t.lazy(()=>rq).optional()}).strict(),y_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>cq).optional()}).strict(),$rt=t.object({update:t.union([t.lazy(()=>d_),t.lazy(()=>z_)]),create:t.union([t.lazy(()=>HZ),t.lazy(()=>QZ)]),where:t.lazy(()=>v).optional()}).strict(),Jrt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>d_),t.lazy(()=>z_)])}).strict(),d_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),EU=t.object({where:t.lazy(()=>It),update:t.union([t.lazy(()=>y8),t.lazy(()=>d8)]),create:t.union([t.lazy(()=>yc),t.lazy(()=>dc)])}).strict(),LU=t.object({where:t.lazy(()=>It),data:t.union([t.lazy(()=>y8),t.lazy(()=>d8)])}).strict(),VU=t.object({where:t.lazy(()=>Sl),data:t.union([t.lazy(()=>eM),t.lazy(()=>Out)])}).strict(),GZ=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>sq),completedBy:t.lazy(()=>yq)}).strict(),$Z=t.object({id:t.number().int().optional(),checklistId:t.number().int(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),W6=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)])}).strict(),JZ=t.object({description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>T2)}).strict(),KZ=t.object({id:t.number().int().optional(),checklistId:t.number().int(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),R6=t.object({where:t.lazy(()=>oe),create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)])}).strict(),Krt=t.object({update:t.union([t.lazy(()=>m_),t.lazy(()=>b_)]),create:t.union([t.lazy(()=>GZ),t.lazy(()=>$Z)]),where:t.lazy(()=>Ye).optional()}).strict(),Xrt=t.object({where:t.lazy(()=>Ye).optional(),data:t.union([t.lazy(()=>m_),t.lazy(()=>b_)])}).strict(),m_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>mq).optional(),completedBy:t.lazy(()=>bq).optional()}).strict(),b_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tpt=t.object({update:t.union([t.lazy(()=>h_),t.lazy(()=>I_)]),create:t.union([t.lazy(()=>JZ),t.lazy(()=>KZ)]),where:t.lazy(()=>Qe).optional()}).strict(),ept=t.object({where:t.lazy(()=>Qe).optional(),data:t.union([t.lazy(()=>h_),t.lazy(()=>I_)])}).strict(),h_=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>W2).optional()}).strict(),I_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),XZ=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>JF).optional(),ingredients:t.lazy(()=>KF).optional()}).strict(),tv=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>tD).optional(),ingredients:t.lazy(()=>eD).optional()}).strict(),k6=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)])}).strict(),ev=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),ov=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),x6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)])}).strict(),opt=t.object({update:t.union([t.lazy(()=>g_),t.lazy(()=>C_)]),create:t.union([t.lazy(()=>XZ),t.lazy(()=>tv)]),where:t.lazy(()=>Oe).optional()}).strict(),npt=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>g_),t.lazy(()=>C_)])}).strict(),g_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>nD).optional(),ingredients:t.lazy(()=>aD).optional()}).strict(),C_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>lD).optional(),ingredients:t.lazy(()=>rD).optional()}).strict(),apt=t.object({update:t.union([t.lazy(()=>A_),t.lazy(()=>S_)]),create:t.union([t.lazy(()=>ev),t.lazy(()=>ov)]),where:t.lazy(()=>Mt).optional()}).strict(),ipt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>A_),t.lazy(()=>S_)])}).strict(),A_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),S_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),nv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional()}).strict(),av=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional()}).strict(),j6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>nv),t.lazy(()=>av)])}).strict(),iv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),lv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),M6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)])}).strict(),rv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),Z6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)])}).strict(),lpt=t.object({update:t.union([t.lazy(()=>T_),t.lazy(()=>P_)]),create:t.union([t.lazy(()=>nv),t.lazy(()=>av)]),where:t.lazy(()=>B).optional()}).strict(),rpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>T_),t.lazy(()=>P_)])}).strict(),T_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional()}).strict(),P_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional()}).strict(),ppt=t.object({update:t.union([t.lazy(()=>U_),t.lazy(()=>W_)]),create:t.union([t.lazy(()=>iv),t.lazy(()=>lv)]),where:t.lazy(()=>Pt).optional()}).strict(),cpt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>U_),t.lazy(()=>W_)])}).strict(),U_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),W_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),upt=t.object({update:t.union([t.lazy(()=>R_),t.lazy(()=>k_)]),create:t.union([t.lazy(()=>rv),t.lazy(()=>pv)]),where:t.lazy(()=>v).optional()}).strict(),spt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>R_),t.lazy(()=>k_)])}).strict(),R_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),k_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),zc=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional()}).strict(),mc=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional()}).strict(),Eb=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),bc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),hc=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Lb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),Ic=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional()}).strict(),gc=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional()}).strict(),Vb=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),HU=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>z8),t.lazy(()=>m8)]),create:t.union([t.lazy(()=>zc),t.lazy(()=>mc)])}).strict(),QU=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>z8),t.lazy(()=>m8)])}).strict(),YU=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>PS),t.lazy(()=>fut)])}).strict(),GU=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>b8),t.lazy(()=>h8)]),create:t.union([t.lazy(()=>bc),t.lazy(()=>hc)])}).strict(),$U=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>b8),t.lazy(()=>h8)])}).strict(),JU=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>wut)])}).strict(),pe=t.object({AND:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional(),OR:t.lazy(()=>pe).array().optional(),NOT:t.union([t.lazy(()=>pe),t.lazy(()=>pe).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrls:t.lazy(()=>Il).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),servings:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),cookBookId:t.union([t.lazy(()=>s),t.number()]).optional(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),isPublished:t.union([t.lazy(()=>mt),t.boolean()]).optional(),publishedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),language:t.union([t.lazy(()=>S),t.string()]).optional(),skillLevel:t.union([t.lazy(()=>MB),t.lazy(()=>W)]).optional(),category:t.union([t.lazy(()=>ZB),t.lazy(()=>U)]).optional()}).strict(),KU=t.object({where:t.lazy(()=>J),update:t.union([t.lazy(()=>I8),t.lazy(()=>g8)]),create:t.union([t.lazy(()=>Ic),t.lazy(()=>gc)])}).strict(),XU=t.object({where:t.lazy(()=>J),data:t.union([t.lazy(()=>I8),t.lazy(()=>g8)])}).strict(),tW=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>lM),t.lazy(()=>Nut)])}).strict(),Tl=t.object({AND:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),OR:t.lazy(()=>Tl).array().optional(),NOT:t.union([t.lazy(()=>Tl),t.lazy(()=>Tl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),category:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),density:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),dietaryRestrictionId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),calories:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),protein:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),carbohydrates:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fat:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),fiber:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sugar:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),sodium:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),usdaFoodId:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>OB),t.lazy(()=>nt)]).optional().nullable(),nutritionUpdatedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable()}).strict(),Cc=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Ac=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Hb=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),eW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>C8),t.lazy(()=>A8)]),create:t.union([t.lazy(()=>Cc),t.lazy(()=>Ac)])}).strict(),oW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>C8),t.lazy(()=>A8)])}).strict(),nW=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>But)])}).strict(),cv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),uv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),v6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)])}).strict(),sv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),yv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),O6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)])}).strict(),dv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),zv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),f6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)])}).strict(),ypt=t.object({update:t.union([t.lazy(()=>x_),t.lazy(()=>j_)]),create:t.union([t.lazy(()=>cv),t.lazy(()=>uv)]),where:t.lazy(()=>B).optional()}).strict(),dpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>x_),t.lazy(()=>j_)])}).strict(),x_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),j_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),zpt=t.object({update:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)]),create:t.union([t.lazy(()=>sv),t.lazy(()=>yv)]),where:t.lazy(()=>Pt).optional()}).strict(),mpt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>M_),t.lazy(()=>Z_)])}).strict(),M_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),Z_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),bpt=t.object({update:t.union([t.lazy(()=>v_),t.lazy(()=>O_)]),create:t.union([t.lazy(()=>dv),t.lazy(()=>zv)]),where:t.lazy(()=>v).optional()}).strict(),hpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>v_),t.lazy(()=>O_)])}).strict(),v_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),O_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),mv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),bv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),w6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)])}).strict(),hv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),Iv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),N6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)])}).strict(),gv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Cv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),B6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)])}).strict(),Ipt=t.object({update:t.union([t.lazy(()=>f_),t.lazy(()=>w_)]),create:t.union([t.lazy(()=>mv),t.lazy(()=>bv)]),where:t.lazy(()=>B).optional()}).strict(),gpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>f_),t.lazy(()=>w_)])}).strict(),f_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),w_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),Cpt=t.object({update:t.union([t.lazy(()=>N_),t.lazy(()=>B_)]),create:t.union([t.lazy(()=>hv),t.lazy(()=>Iv)]),where:t.lazy(()=>Mt).optional()}).strict(),Apt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>N_),t.lazy(()=>B_)])}).strict(),N_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),B_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),Spt=t.object({update:t.union([t.lazy(()=>q_),t.lazy(()=>F_)]),create:t.union([t.lazy(()=>gv),t.lazy(()=>Cv)]),where:t.lazy(()=>v).optional()}).strict(),Tpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>q_),t.lazy(()=>F_)])}).strict(),q_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),F_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Av=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),Sv=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),q6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)])}).strict(),Tv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Pv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),F6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)])}).strict(),Sc=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>aF),assignedTo:t.lazy(()=>iF).optional()}).strict(),Tc=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qb=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),Uv=t.object({data:t.union([t.lazy(()=>sH),t.lazy(()=>sH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ppt=t.object({update:t.union([t.lazy(()=>D_),t.lazy(()=>__)]),create:t.union([t.lazy(()=>Av),t.lazy(()=>Sv)]),where:t.lazy(()=>B).optional()}).strict(),Upt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>D_),t.lazy(()=>__)])}).strict(),D_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),__=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),Wpt=t.object({update:t.union([t.lazy(()=>E_),t.lazy(()=>L_)]),create:t.union([t.lazy(()=>Tv),t.lazy(()=>Pv)]),where:t.lazy(()=>v).optional()}).strict(),Rpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>E_),t.lazy(()=>L_)])}).strict(),E_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),L_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),aW=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>S8),t.lazy(()=>T8)]),create:t.union([t.lazy(()=>Sc),t.lazy(()=>Tc)])}).strict(),iW=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>S8),t.lazy(()=>T8)])}).strict(),lW=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>DT),t.lazy(()=>qut)])}).strict(),Ba=t.object({AND:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),OR:t.lazy(()=>Ba).array().optional(),NOT:t.union([t.lazy(()=>Ba),t.lazy(()=>Ba).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),productionPlanId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),assignedToId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Wv=t.object({date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Gq),createdBy:t.lazy(()=>$q)}).strict(),Rv=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),D6=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)])}).strict(),kv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),xv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),_6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)])}).strict(),jv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Mv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),E6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)])}).strict(),kpt=t.object({update:t.union([t.lazy(()=>V_),t.lazy(()=>H_)]),create:t.union([t.lazy(()=>Wv),t.lazy(()=>Rv)]),where:t.lazy(()=>Ge).optional()}).strict(),xpt=t.object({where:t.lazy(()=>Ge).optional(),data:t.union([t.lazy(()=>V_),t.lazy(()=>H_)])}).strict(),V_=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Xq).optional(),createdBy:t.lazy(()=>tF).optional()}).strict(),H_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jpt=t.object({update:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)]),create:t.union([t.lazy(()=>kv),t.lazy(()=>xv)]),where:t.lazy(()=>O).optional()}).strict(),Mpt=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>Q_),t.lazy(()=>Y_)])}).strict(),Q_=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),Y_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Zpt=t.object({update:t.union([t.lazy(()=>G_),t.lazy(()=>$_)]),create:t.union([t.lazy(()=>jv),t.lazy(()=>Mv)]),where:t.lazy(()=>v).optional()}).strict(),vpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>G_),t.lazy(()=>$_)])}).strict(),G_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),$_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Zv=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt),user:t.lazy(()=>c5)}).strict(),vv=t.object({id:t.number().int().optional(),userId:t.number().int(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt)}).strict(),L6=t.object({where:t.lazy(()=>ae),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)])}).strict(),Opt=t.object({update:t.union([t.lazy(()=>J_),t.lazy(()=>K_)]),create:t.union([t.lazy(()=>Zv),t.lazy(()=>vv)]),where:t.lazy(()=>Xe).optional()}).strict(),fpt=t.object({where:t.lazy(()=>Xe).optional(),data:t.union([t.lazy(()=>J_),t.lazy(()=>K_)])}).strict(),J_=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional(),user:t.lazy(()=>y5).optional()}).strict(),K_=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),userId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional()}).strict(),Ov=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),fv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),V6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)])}).strict(),wpt=t.object({update:t.union([t.lazy(()=>X_),t.lazy(()=>tE)]),create:t.union([t.lazy(()=>Ov),t.lazy(()=>fv)]),where:t.lazy(()=>v).optional()}).strict(),Npt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>X_),t.lazy(()=>tE)])}).strict(),X_=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),tE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),wv=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Nv=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),H6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)])}).strict(),Bpt=t.object({update:t.union([t.lazy(()=>eE),t.lazy(()=>oE)]),create:t.union([t.lazy(()=>wv),t.lazy(()=>Nv)]),where:t.lazy(()=>v).optional()}).strict(),qpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>eE),t.lazy(()=>oE)])}).strict(),eE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),oE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Bv=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),ingredient:t.lazy(()=>DS),lastUpdatedBy:t.lazy(()=>_S).optional(),transactions:t.lazy(()=>ES).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),qv=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),Q6=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)])}).strict(),Fv=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Dv=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Y6=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)])}).strict(),_v=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Ev=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),G6=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)])}).strict(),Fpt=t.object({update:t.union([t.lazy(()=>nE),t.lazy(()=>aE)]),create:t.union([t.lazy(()=>Bv),t.lazy(()=>qv)]),where:t.lazy(()=>re).optional()}).strict(),Dpt=t.object({where:t.lazy(()=>re).optional(),data:t.union([t.lazy(()=>nE),t.lazy(()=>aE)])}).strict(),nE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),ingredient:t.lazy(()=>$S).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),aE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),_pt=t.object({update:t.union([t.lazy(()=>iE),t.lazy(()=>lE)]),create:t.union([t.lazy(()=>Fv),t.lazy(()=>Dv)]),where:t.lazy(()=>O).optional()}).strict(),Ept=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>iE),t.lazy(()=>lE)])}).strict(),iE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),lE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Lpt=t.object({update:t.union([t.lazy(()=>rE),t.lazy(()=>pE)]),create:t.union([t.lazy(()=>_v),t.lazy(()=>Ev)]),where:t.lazy(()=>v).optional()}).strict(),Vpt=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>rE),t.lazy(()=>pE)])}).strict(),rE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),pE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Pc=t.object({ingredient:t.lazy(()=>N2)}).strict(),Uc=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),Yb=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),Lv=t.object({data:t.union([t.lazy(()=>yH),t.lazy(()=>yH).array()]),skipDuplicates:t.boolean().optional()}).strict(),rW=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>P8),t.lazy(()=>U8)]),create:t.union([t.lazy(()=>Pc),t.lazy(()=>Uc)])}).strict(),pW=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>P8),t.lazy(()=>U8)])}).strict(),cW=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>aM),t.lazy(()=>Fut)])}).strict(),Pl=t.object({AND:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),OR:t.lazy(()=>Pl).array().optional(),NOT:t.union([t.lazy(()=>Pl),t.lazy(()=>Pl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),allergenId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),Vv=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),Hv=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),$6=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)])}).strict(),Qv=t.object({name:t.string(),description:t.string().optional().nullable()}).strict(),Yv=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable()}).strict(),J6=t.object({where:t.lazy(()=>np),create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)])}).strict(),Hpt=t.object({update:t.union([t.lazy(()=>cE),t.lazy(()=>uE)]),create:t.union([t.lazy(()=>Vv),t.lazy(()=>Hv)]),where:t.lazy(()=>Mt).optional()}).strict(),Qpt=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>cE),t.lazy(()=>uE)])}).strict(),cE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),uE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),Ypt=t.object({update:t.union([t.lazy(()=>sE),t.lazy(()=>yE)]),create:t.union([t.lazy(()=>Qv),t.lazy(()=>Yv)]),where:t.lazy(()=>co).optional()}).strict(),Gpt=t.object({where:t.lazy(()=>co).optional(),data:t.union([t.lazy(()=>sE),t.lazy(()=>yE)])}).strict(),sE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),yE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Gv=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),$v=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),K6=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)])}).strict(),$pt=t.object({update:t.union([t.lazy(()=>dE),t.lazy(()=>zE)]),create:t.union([t.lazy(()=>Gv),t.lazy(()=>$v)]),where:t.lazy(()=>Pt).optional()}).strict(),Jpt=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>dE),t.lazy(()=>zE)])}).strict(),dE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),zE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),Wc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),Rc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),Gb=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),Jv=t.object({data:t.union([t.lazy(()=>dH),t.lazy(()=>dH).array()]),skipDuplicates:t.boolean().optional()}).strict(),kc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),xc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),$b=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),Kv=t.object({data:t.union([t.lazy(()=>zH),t.lazy(()=>zH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uW=t.object({where:t.lazy(()=>X),update:t.union([t.lazy(()=>W8),t.lazy(()=>R8)]),create:t.union([t.lazy(()=>Wc),t.lazy(()=>Rc)])}).strict(),sW=t.object({where:t.lazy(()=>X),data:t.union([t.lazy(()=>W8),t.lazy(()=>R8)])}).strict(),yW=t.object({where:t.lazy(()=>Ap),data:t.union([t.lazy(()=>KN),t.lazy(()=>Dut)])}).strict(),Ap=t.object({AND:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),OR:t.lazy(()=>Ap).array().optional(),NOT:t.union([t.lazy(()=>Ap),t.lazy(()=>Ap).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),address:t.union([t.lazy(()=>S),t.string()]).optional(),city:t.union([t.lazy(()=>S),t.string()]).optional(),zipCode:t.union([t.lazy(()=>S),t.string()]).optional(),state:t.union([t.lazy(()=>S),t.string()]).optional(),owner:t.union([t.lazy(()=>S),t.string()]).optional(),organizationId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),foodCost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),isDeleted:t.union([t.lazy(()=>mt),t.boolean()]).optional(),deleted:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable()}).strict(),dW=t.object({where:t.lazy(()=>M),update:t.union([t.lazy(()=>k8),t.lazy(()=>x8)]),create:t.union([t.lazy(()=>kc),t.lazy(()=>xc)])}).strict(),zW=t.object({where:t.lazy(()=>M),data:t.union([t.lazy(()=>k8),t.lazy(()=>x8)])}).strict(),mW=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>iM),t.lazy(()=>_ut)])}).strict(),Ul=t.object({AND:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),OR:t.lazy(()=>Ul).array().optional(),NOT:t.union([t.lazy(()=>Ul),t.lazy(()=>Ul).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),sub:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),passwordHash:t.union([t.lazy(()=>S),t.string()]).optional(),firstName:t.union([t.lazy(()=>S),t.string()]).optional(),lastName:t.union([t.lazy(()=>S),t.string()]).optional(),profileImage:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),verified:t.union([t.lazy(()=>mt),t.boolean()]).optional(),role:t.union([t.lazy(()=>kB),t.lazy(()=>j)]).optional(),organizationId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Xv=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),tO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),X6=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)])}).strict(),jc=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),ingredient:t.lazy(()=>DS),lastUpdatedBy:t.lazy(()=>_S).optional(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Mc=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),Jb=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),eO=t.object({data:t.union([t.lazy(()=>mH),t.lazy(()=>mH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zc=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),item:t.lazy(()=>jF),createdBy:t.lazy(()=>MF)}).strict(),vc=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),Kb=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),oO=t.object({data:t.union([t.lazy(()=>bH),t.lazy(()=>bH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Oc=t.object({status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdBy:t.lazy(()=>wF),items:t.lazy(()=>NF).optional()}).strict(),fc=t.object({id:t.number().int().optional(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable(),items:t.lazy(()=>BF).optional()}).strict(),Xb=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),nO=t.object({data:t.union([t.lazy(()=>hH),t.lazy(()=>hH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kpt=t.object({update:t.union([t.lazy(()=>mE),t.lazy(()=>bE)]),create:t.union([t.lazy(()=>Xv),t.lazy(()=>tO)]),where:t.lazy(()=>B).optional()}).strict(),Xpt=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>mE),t.lazy(()=>bE)])}).strict(),mE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),bE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),bW=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>j8),t.lazy(()=>M8)]),create:t.union([t.lazy(()=>jc),t.lazy(()=>Mc)])}).strict(),hW=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>j8),t.lazy(()=>M8)])}).strict(),IW=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>LT),t.lazy(()=>Eut)])}).strict(),qa=t.object({AND:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),OR:t.lazy(()=>qa).array().optional(),NOT:t.union([t.lazy(()=>qa),t.lazy(()=>qa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),minQuantity:t.union([t.lazy(()=>R),t.number()]).optional(),restockThreshold:t.union([t.lazy(()=>R),t.number()]).optional(),lastCountDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastOrderDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastUpdatedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),lastUpdated:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),par:t.union([t.lazy(()=>R),t.number()]).optional(),reorderPoint:t.union([t.lazy(()=>R),t.number()]).optional(),maxQuantity:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),barcode:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),currentPrice:t.union([t.lazy(()=>R),t.number()]).optional(),averageCost:t.union([t.lazy(()=>R),t.number()]).optional(),lastPurchasePrice:t.union([t.lazy(()=>ot),t.number()]).optional().nullable()}).strict(),gW=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)]),create:t.union([t.lazy(()=>Zc),t.lazy(()=>vc)])}).strict(),CW=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>Z8),t.lazy(()=>v8)])}).strict(),AW=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>VT),t.lazy(()=>Lut)])}).strict(),Fa=t.object({AND:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),OR:t.lazy(()=>Fa).array().optional(),NOT:t.union([t.lazy(()=>Fa),t.lazy(()=>Fa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),type:t.union([t.lazy(()=>fB),t.lazy(()=>Ot)]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),previousQty:t.union([t.lazy(()=>R),t.number()]).optional(),newQty:t.union([t.lazy(()=>R),t.number()]).optional(),cost:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),reference:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),SW=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>O8),t.lazy(()=>f8)]),create:t.union([t.lazy(()=>Oc),t.lazy(()=>fc)])}).strict(),TW=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>O8),t.lazy(()=>f8)])}).strict(),PW=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>pM),t.lazy(()=>Vut)])}).strict(),Wl=t.object({AND:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),OR:t.lazy(()=>Wl).array().optional(),NOT:t.union([t.lazy(()=>Wl),t.lazy(()=>Wl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>wB),t.lazy(()=>Nt)]).optional(),startedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),completedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),aO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>_2).optional()}).strict(),iO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),users:t.lazy(()=>L2).optional()}).strict(),t3=t.object({where:t.lazy(()=>Ol),create:t.union([t.lazy(()=>aO),t.lazy(()=>iO)])}).strict(),wc=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Nc=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),th=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),lO=t.object({data:t.union([t.lazy(()=>IH),t.lazy(()=>IH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bc=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>G2).optional()}).strict(),qc=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),recipes:t.lazy(()=>J2).optional()}).strict(),eh=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),rO=t.object({data:t.union([t.lazy(()=>gH),t.lazy(()=>gH).array()]),skipDuplicates:t.boolean().optional()}).strict(),aT=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>NM).optional(),transactions:t.lazy(()=>BM).optional(),stockCounts:t.lazy(()=>qM).optional()}).strict(),iT=t.object({id:t.number().int().optional(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>FM).optional(),transactions:t.lazy(()=>DM).optional(),stockCounts:t.lazy(()=>_M).optional()}).strict(),pO=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)])}).strict(),Fc=t.object({status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>LF),items:t.lazy(()=>VF).optional()}).strict(),Dc=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HF).optional()}).strict(),oh=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),cO=t.object({data:t.union([t.lazy(()=>CH),t.lazy(()=>CH).array()]),skipDuplicates:t.boolean().optional()}).strict(),_c=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Ec=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),nh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),uO=t.object({data:t.union([t.lazy(()=>AH),t.lazy(()=>AH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Lc=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>bD).optional(),MenuCategory:t.lazy(()=>hD).optional()}).strict(),Vc=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>ID).optional(),MenuCategory:t.lazy(()=>gD).optional()}).strict(),ah=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),sO=t.object({data:t.union([t.lazy(()=>SH),t.lazy(()=>SH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hc=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>z2)}).strict(),Qc=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ih=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),yO=t.object({data:t.union([t.lazy(()=>TH),t.lazy(()=>TH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yc=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Bq),recordedBy:t.lazy(()=>qq)}).strict(),Gc=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),dO=t.object({data:t.union([t.lazy(()=>PH),t.lazy(()=>PH).array()]),skipDuplicates:t.boolean().optional()}).strict(),$c=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingrediente:t.lazy(()=>Lq),recordedBy:t.lazy(()=>Vq)}).strict(),Jc=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rh=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),zO=t.object({data:t.union([t.lazy(()=>UH),t.lazy(()=>UH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Kc=t.object({date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),createdBy:t.lazy(()=>$q),items:t.lazy(()=>Jq).optional()}).strict(),Xc=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Kq).optional()}).strict(),ph=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),mO=t.object({data:t.union([t.lazy(()=>WH),t.lazy(()=>WH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tu=t.object({name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>FB).optional(),maintenanceLogs:t.lazy(()=>DB).optional()}).strict(),eu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>_B).optional(),maintenanceLogs:t.lazy(()=>EB).optional()}).strict(),ch=t.object({where:t.lazy(()=>Yt),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),bO=t.object({data:t.union([t.lazy(()=>RH),t.lazy(()=>RH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ou=t.object({name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>oq).optional(),completions:t.lazy(()=>nq).optional()}).strict(),nu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>aq).optional(),completions:t.lazy(()=>iq).optional()}).strict(),uh=t.object({where:t.lazy(()=>Gt),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),hO=t.object({data:t.union([t.lazy(()=>kH),t.lazy(()=>kH).array()]),skipDuplicates:t.boolean().optional()}).strict(),au=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItem:t.lazy(()=>Cq).optional(),respondedBy:t.lazy(()=>Aq).optional()}).strict(),iu=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),sh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),IO=t.object({data:t.union([t.lazy(()=>xH),t.lazy(()=>xH).array()]),skipDuplicates:t.boolean().optional()}).strict(),tct=t.object({update:t.union([t.lazy(()=>hE),t.lazy(()=>IE)]),create:t.union([t.lazy(()=>aO),t.lazy(()=>iO)]),where:t.lazy(()=>Me).optional()}).strict(),ect=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>hE),t.lazy(()=>IE)])}).strict(),hE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>H2).optional()}).strict(),IE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),users:t.lazy(()=>Y2).optional()}).strict(),UW=t.object({where:t.lazy(()=>M),update:t.union([t.lazy(()=>w8),t.lazy(()=>N8)]),create:t.union([t.lazy(()=>wc),t.lazy(()=>Nc)])}).strict(),WW=t.object({where:t.lazy(()=>M),data:t.union([t.lazy(()=>w8),t.lazy(()=>N8)])}).strict(),RW=t.object({where:t.lazy(()=>Ul),data:t.union([t.lazy(()=>iM),t.lazy(()=>Hut)])}).strict(),kW=t.object({where:t.lazy(()=>ne),update:t.union([t.lazy(()=>B8),t.lazy(()=>q8)]),create:t.union([t.lazy(()=>Bc),t.lazy(()=>qc)])}).strict(),xW=t.object({where:t.lazy(()=>ne),data:t.union([t.lazy(()=>B8),t.lazy(()=>q8)])}).strict(),jW=t.object({where:t.lazy(()=>Sp),data:t.union([t.lazy(()=>tB),t.lazy(()=>Qut)])}).strict(),Sp=t.object({AND:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),OR:t.lazy(()=>Sp).array().optional(),NOT:t.union([t.lazy(()=>Sp),t.lazy(()=>Sp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),imageUrl:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),category:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>it),t.number()]).optional().nullable()}).strict(),e3=t.object({update:t.union([t.lazy(()=>gO),t.lazy(()=>CO)]),create:t.union([t.lazy(()=>aT),t.lazy(()=>iT)]),where:t.lazy(()=>_t).optional()}).strict(),o3=t.object({where:t.lazy(()=>_t).optional(),data:t.union([t.lazy(()=>gO),t.lazy(()=>CO)])}).strict(),gO=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>LM).optional(),transactions:t.lazy(()=>VM).optional(),stockCounts:t.lazy(()=>HM).optional()}).strict(),CO=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QM).optional(),transactions:t.lazy(()=>YM).optional(),stockCounts:t.lazy(()=>GM).optional()}).strict(),MW=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>F8),t.lazy(()=>D8)]),create:t.union([t.lazy(()=>Fc),t.lazy(()=>Dc)])}).strict(),ZW=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>F8),t.lazy(()=>D8)])}).strict(),vW=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>uM),t.lazy(()=>Yut)])}).strict(),Rl=t.object({AND:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),OR:t.lazy(()=>Rl).array().optional(),NOT:t.union([t.lazy(()=>Rl),t.lazy(()=>Rl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>NB),t.lazy(()=>Bt)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),OW=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>_8),t.lazy(()=>E8)]),create:t.union([t.lazy(()=>_c),t.lazy(()=>Ec)])}).strict(),fW=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>_8),t.lazy(()=>E8)])}).strict(),wW=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>Gut)])}).strict(),NW=t.object({where:t.lazy(()=>Jt),update:t.union([t.lazy(()=>L8),t.lazy(()=>V8)]),create:t.union([t.lazy(()=>Lc),t.lazy(()=>Vc)])}).strict(),BW=t.object({where:t.lazy(()=>Jt),data:t.union([t.lazy(()=>L8),t.lazy(()=>V8)])}).strict(),qW=t.object({where:t.lazy(()=>Tp),data:t.union([t.lazy(()=>iB),t.lazy(()=>$ut)])}).strict(),Tp=t.object({AND:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),OR:t.lazy(()=>Tp).array().optional(),NOT:t.union([t.lazy(()=>Tp),t.lazy(()=>Tp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),FW=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)]),create:t.union([t.lazy(()=>Hc),t.lazy(()=>Qc)])}).strict(),DW=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>H8),t.lazy(()=>Q8)])}).strict(),_W=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Xj),t.lazy(()=>Jut)])}).strict(),kl=t.object({AND:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),OR:t.lazy(()=>kl).array().optional(),NOT:t.union([t.lazy(()=>kl),t.lazy(()=>kl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),posTransactionID:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),total:t.union([t.lazy(()=>R),t.number()]).optional(),transactionDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),EW=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)]),create:t.union([t.lazy(()=>Yc),t.lazy(()=>Gc)])}).strict(),LW=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>Y8),t.lazy(()=>G8)])}).strict(),VW=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>qT),t.lazy(()=>Kut)])}).strict(),Da=t.object({AND:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),OR:t.lazy(()=>Da).array().optional(),NOT:t.union([t.lazy(()=>Da),t.lazy(()=>Da).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),HW=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>$8),t.lazy(()=>J8)]),create:t.union([t.lazy(()=>$c),t.lazy(()=>Jc)])}).strict(),QW=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>$8),t.lazy(()=>J8)])}).strict(),YW=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>FT),t.lazy(()=>Xut)])}).strict(),_a=t.object({AND:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),OR:t.lazy(()=>_a).array().optional(),NOT:t.union([t.lazy(()=>_a),t.lazy(()=>_a).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),reason:t.union([t.lazy(()=>S),t.string()]).optional(),recordedById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),GW=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>K8),t.lazy(()=>X8)]),create:t.union([t.lazy(()=>Kc),t.lazy(()=>Xc)])}).strict(),$W=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>K8),t.lazy(()=>X8)])}).strict(),JW=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>nM),t.lazy(()=>tst)])}).strict(),xl=t.object({AND:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),OR:t.lazy(()=>xl).array().optional(),NOT:t.union([t.lazy(()=>xl),t.lazy(()=>xl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>IB),t.lazy(()=>wt)]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),KW=t.object({where:t.lazy(()=>Yt),update:t.union([t.lazy(()=>t7),t.lazy(()=>e7)]),create:t.union([t.lazy(()=>tu),t.lazy(()=>eu)])}).strict(),XW=t.object({where:t.lazy(()=>Yt),data:t.union([t.lazy(()=>t7),t.lazy(()=>e7)])}).strict(),tR=t.object({where:t.lazy(()=>Pp),data:t.union([t.lazy(()=>EN),t.lazy(()=>est)])}).strict(),Pp=t.object({AND:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),OR:t.lazy(()=>Pp).array().optional(),NOT:t.union([t.lazy(()=>Pp),t.lazy(()=>Pp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),model:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),serialNumber:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),purchaseDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),lastMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),nextMaintenance:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),status:t.union([t.lazy(()=>uB),t.lazy(()=>Ft)]).optional(),location:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),eR=t.object({where:t.lazy(()=>Gt),update:t.union([t.lazy(()=>o7),t.lazy(()=>n7)]),create:t.union([t.lazy(()=>ou),t.lazy(()=>nu)])}).strict(),oR=t.object({where:t.lazy(()=>Gt),data:t.union([t.lazy(()=>o7),t.lazy(()=>n7)])}).strict(),nR=t.object({where:t.lazy(()=>Up),data:t.union([t.lazy(()=>VN),t.lazy(()=>ost)])}).strict(),Up=t.object({AND:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),OR:t.lazy(()=>Up).array().optional(),NOT:t.union([t.lazy(()=>Up),t.lazy(()=>Up).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),frequency:t.union([t.lazy(()=>dB),t.lazy(()=>Dt)]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),aR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>a7),t.lazy(()=>i7)]),create:t.union([t.lazy(()=>au),t.lazy(()=>iu)])}).strict(),iR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>a7),t.lazy(()=>i7)])}).strict(),lR=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>NT),t.lazy(()=>nst)])}).strict(),Ea=t.object({AND:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional(),OR:t.lazy(()=>Ea).array().optional(),NOT:t.union([t.lazy(()=>Ea),t.lazy(()=>Ea).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),restaurantId:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),rating:t.union([t.lazy(()=>s),t.number()]).optional(),comment:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),source:t.union([t.lazy(()=>bB),t.lazy(()=>Zt)]).optional(),tags:t.lazy(()=>Il).optional(),status:t.union([t.lazy(()=>hB),t.lazy(()=>vt)]).optional(),responseText:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),respondedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),respondedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),AO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>D2).optional()}).strict(),SO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurants:t.lazy(()=>E2).optional()}).strict(),n3=t.object({where:t.lazy(()=>Ol),create:t.union([t.lazy(()=>AO),t.lazy(()=>SO)])}).strict(),TO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),PO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),a3=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)])}).strict(),lu=t.object({startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt),tasks:t.lazy(()=>u5).optional()}).strict(),ru=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt),tasks:t.lazy(()=>s5).optional()}).strict(),yh=t.object({where:t.lazy(()=>ae),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),UO=t.object({data:t.union([t.lazy(()=>jH),t.lazy(()=>jH).array()]),skipDuplicates:t.boolean().optional()}).strict(),pu=t.object({quantity:t.number().int(),status:t.lazy(()=>et),prepBoard:t.lazy(()=>cD),recipe:t.lazy(()=>uD)}).strict(),cu=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et)}).strict(),dh=t.object({where:t.lazy(()=>Y),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),WO=t.object({data:t.union([t.lazy(()=>MH),t.lazy(()=>MH).array()]),skipDuplicates:t.boolean().optional()}).strict(),uu=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),ingredient:t.lazy(()=>DS),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),su=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),zh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>uu),t.lazy(()=>su)])}).strict(),RO=t.object({data:t.union([t.lazy(()=>ZH),t.lazy(()=>ZH).array()]),skipDuplicates:t.boolean().optional()}).strict(),yu=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),du=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),mh=t.object({where:t.lazy(()=>Re),create:t.union([t.lazy(()=>yu),t.lazy(()=>du)])}).strict(),kO=t.object({data:t.union([t.lazy(()=>vH),t.lazy(()=>vH).array()]),skipDuplicates:t.boolean().optional()}).strict(),zu=t.object({token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),mu=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),bh=t.object({where:t.lazy(()=>ke),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),xO=t.object({data:t.union([t.lazy(()=>OH),t.lazy(()=>OH).array()]),skipDuplicates:t.boolean().optional()}).strict(),bu=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),menuItem:t.lazy(()=>Bq)}).strict(),hu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),hh=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),jO=t.object({data:t.union([t.lazy(()=>fH),t.lazy(()=>fH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Iu=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Eq),ingrediente:t.lazy(()=>Lq)}).strict(),gu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ih=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),MO=t.object({data:t.union([t.lazy(()=>wH),t.lazy(()=>wH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cu=t.object({date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Gq),items:t.lazy(()=>Jq).optional()}).strict(),Au=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>Kq).optional()}).strict(),gh=t.object({where:t.lazy(()=>pt),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),ZO=t.object({data:t.union([t.lazy(()=>NH),t.lazy(()=>NH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Su=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>nF),recipe:t.lazy(()=>aF)}).strict(),Tu=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ch=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),vO=t.object({data:t.union([t.lazy(()=>BH),t.lazy(()=>BH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pu=t.object({dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Uu=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ah=t.object({where:t.lazy(()=>Pe),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),OO=t.object({data:t.union([t.lazy(()=>qH),t.lazy(()=>qH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wu=t.object({date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ru=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Sh=t.object({where:t.lazy(()=>Ue),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),fO=t.object({data:t.union([t.lazy(()=>FH),t.lazy(()=>FH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ku=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>cF),recipe:t.lazy(()=>uF).optional()}).strict(),xu=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Th=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),wO=t.object({data:t.union([t.lazy(()=>DH),t.lazy(()=>DH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ju=t.object({date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),checklist:t.lazy(()=>sq),items:t.lazy(()=>dq).optional()}).strict(),Mu=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>zq).optional()}).strict(),Ph=t.object({where:t.lazy(()=>rt),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),NO=t.object({data:t.union([t.lazy(()=>_H),t.lazy(()=>_H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zu=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gq),menuItem:t.lazy(()=>Cq).optional()}).strict(),vu=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Uh=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),BO=t.object({data:t.union([t.lazy(()=>EH),t.lazy(()=>EH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ou=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>QT),ingredients:t.lazy(()=>YT).optional(),instructions:t.lazy(()=>GT).optional(),approvedBy:t.lazy(()=>JT).optional()}).strict(),fu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KT).optional(),instructions:t.lazy(()=>XT).optional()}).strict(),Wh=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),qO=t.object({data:t.union([t.lazy(()=>LH),t.lazy(()=>LH).array()]),skipDuplicates:t.boolean().optional()}).strict(),wu=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>QT),ingredients:t.lazy(()=>YT).optional(),instructions:t.lazy(()=>GT).optional(),createdBy:t.lazy(()=>$T)}).strict(),Nu=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KT).optional(),instructions:t.lazy(()=>XT).optional()}).strict(),Rh=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),FO=t.object({data:t.union([t.lazy(()=>VH),t.lazy(()=>VH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bu=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>xF),item:t.lazy(()=>jF)}).strict(),qu=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),kh=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),DO=t.object({data:t.union([t.lazy(()=>HH),t.lazy(()=>HH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fu=t.object({status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>fF),items:t.lazy(()=>NF).optional()}).strict(),Du=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),items:t.lazy(()=>BF).optional()}).strict(),xh=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),_O=t.object({data:t.union([t.lazy(()=>QH),t.lazy(()=>QH).array()]),skipDuplicates:t.boolean().optional()}).strict(),oct=t.object({update:t.union([t.lazy(()=>gE),t.lazy(()=>CE)]),create:t.union([t.lazy(()=>AO),t.lazy(()=>SO)]),where:t.lazy(()=>Me).optional()}).strict(),nct=t.object({where:t.lazy(()=>Me).optional(),data:t.union([t.lazy(()=>gE),t.lazy(()=>CE)])}).strict(),gE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>V2).optional()}).strict(),CE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurants:t.lazy(()=>Q2).optional()}).strict(),act=t.object({update:t.union([t.lazy(()=>AE),t.lazy(()=>SE)]),create:t.union([t.lazy(()=>TO),t.lazy(()=>PO)]),where:t.lazy(()=>B).optional()}).strict(),ict=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>AE),t.lazy(()=>SE)])}).strict(),AE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),SE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),rR=t.object({where:t.lazy(()=>ae),update:t.union([t.lazy(()=>l7),t.lazy(()=>r7)]),create:t.union([t.lazy(()=>lu),t.lazy(()=>ru)])}).strict(),pR=t.object({where:t.lazy(()=>ae),data:t.union([t.lazy(()=>l7),t.lazy(()=>r7)])}).strict(),cR=t.object({where:t.lazy(()=>Wp),data:t.union([t.lazy(()=>oB),t.lazy(()=>ast)])}).strict(),Wp=t.object({AND:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),OR:t.lazy(()=>Wp).array().optional(),NOT:t.union([t.lazy(()=>Wp),t.lazy(()=>Wp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),status:t.union([t.lazy(()=>BB),t.lazy(()=>Qt)]).optional()}).strict(),uR=t.object({where:t.lazy(()=>Y),update:t.union([t.lazy(()=>p7),t.lazy(()=>c7)]),create:t.union([t.lazy(()=>pu),t.lazy(()=>cu)])}).strict(),sR=t.object({where:t.lazy(()=>Y),data:t.union([t.lazy(()=>p7),t.lazy(()=>c7)])}).strict(),yR=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>HT),t.lazy(()=>ist)])}).strict(),La=t.object({AND:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional(),OR:t.lazy(()=>La).array().optional(),NOT:t.union([t.lazy(()=>La),t.lazy(()=>La).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),prepBoardId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),assignedToId:t.union([t.lazy(()=>s),t.number()]).optional()}).strict(),dR=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>u7),t.lazy(()=>s7)]),create:t.union([t.lazy(()=>uu),t.lazy(()=>su)])}).strict(),zR=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>u7),t.lazy(()=>s7)])}).strict(),mR=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>LT),t.lazy(()=>lst)])}).strict(),bR=t.object({where:t.lazy(()=>Re),update:t.union([t.lazy(()=>y7),t.lazy(()=>d7)]),create:t.union([t.lazy(()=>yu),t.lazy(()=>du)])}).strict(),hR=t.object({where:t.lazy(()=>Re),data:t.union([t.lazy(()=>y7),t.lazy(()=>d7)])}).strict(),IR=t.object({where:t.lazy(()=>Rp),data:t.union([t.lazy(()=>XN),t.lazy(()=>rst)])}).strict(),Rp=t.object({AND:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),OR:t.lazy(()=>Rp).array().optional(),NOT:t.union([t.lazy(()=>Rp),t.lazy(()=>Rp).array()]).optional(),id:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),code:t.union([t.lazy(()=>S),t.string()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),gR=t.object({where:t.lazy(()=>ke),update:t.union([t.lazy(()=>z7),t.lazy(()=>m7)]),create:t.union([t.lazy(()=>zu),t.lazy(()=>mu)])}).strict(),CR=t.object({where:t.lazy(()=>ke),data:t.union([t.lazy(()=>z7),t.lazy(()=>m7)])}).strict(),AR=t.object({where:t.lazy(()=>kp),data:t.union([t.lazy(()=>aB),t.lazy(()=>pst)])}).strict(),kp=t.object({AND:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),OR:t.lazy(()=>kp).array().optional(),NOT:t.union([t.lazy(()=>kp),t.lazy(()=>kp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),token:t.union([t.lazy(()=>S),t.string()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),expiresAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),SR=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>b7),t.lazy(()=>h7)]),create:t.union([t.lazy(()=>bu),t.lazy(()=>hu)])}).strict(),TR=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>b7),t.lazy(()=>h7)])}).strict(),PR=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>qT),t.lazy(()=>cst)])}).strict(),UR=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>I7),t.lazy(()=>g7)]),create:t.union([t.lazy(()=>Iu),t.lazy(()=>gu)])}).strict(),WR=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>I7),t.lazy(()=>g7)])}).strict(),RR=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>FT),t.lazy(()=>ust)])}).strict(),kR=t.object({where:t.lazy(()=>pt),update:t.union([t.lazy(()=>C7),t.lazy(()=>A7)]),create:t.union([t.lazy(()=>Cu),t.lazy(()=>Au)])}).strict(),xR=t.object({where:t.lazy(()=>pt),data:t.union([t.lazy(()=>C7),t.lazy(()=>A7)])}).strict(),jR=t.object({where:t.lazy(()=>xl),data:t.union([t.lazy(()=>nM),t.lazy(()=>sst)])}).strict(),MR=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>S7),t.lazy(()=>T7)]),create:t.union([t.lazy(()=>Su),t.lazy(()=>Tu)])}).strict(),ZR=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>S7),t.lazy(()=>T7)])}).strict(),vR=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>DT),t.lazy(()=>yst)])}).strict(),OR=t.object({where:t.lazy(()=>Pe),update:t.union([t.lazy(()=>P7),t.lazy(()=>U7)]),create:t.union([t.lazy(()=>Pu),t.lazy(()=>Uu)])}).strict(),fR=t.object({where:t.lazy(()=>Pe),data:t.union([t.lazy(()=>P7),t.lazy(()=>U7)])}).strict(),wR=t.object({where:t.lazy(()=>xp),data:t.union([t.lazy(()=>GN),t.lazy(()=>dst)])}).strict(),xp=t.object({AND:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),OR:t.lazy(()=>xp).array().optional(),NOT:t.union([t.lazy(()=>xp),t.lazy(()=>xp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),dayOfWeek:t.union([t.lazy(()=>AB),t.lazy(()=>se)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),NR=t.object({where:t.lazy(()=>Ue),update:t.union([t.lazy(()=>W7),t.lazy(()=>R7)]),create:t.union([t.lazy(()=>Wu),t.lazy(()=>Ru)])}).strict(),BR=t.object({where:t.lazy(()=>Ue),data:t.union([t.lazy(()=>W7),t.lazy(()=>R7)])}).strict(),qR=t.object({where:t.lazy(()=>jp),data:t.union([t.lazy(()=>$N),t.lazy(()=>zst)])}).strict(),jp=t.object({AND:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),OR:t.lazy(()=>jp).array().optional(),NOT:t.union([t.lazy(()=>jp),t.lazy(()=>jp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),userId:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),constraintsType:t.union([t.lazy(()=>SB),t.lazy(()=>ye)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),FR=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>k7),t.lazy(()=>x7)]),create:t.union([t.lazy(()=>ku),t.lazy(()=>xu)])}).strict(),DR=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>k7),t.lazy(()=>x7)])}).strict(),_R=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>_T),t.lazy(()=>mst)])}).strict(),Va=t.object({AND:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional(),OR:t.lazy(()=>Va).array().optional(),NOT:t.union([t.lazy(()=>Va),t.lazy(()=>Va).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),inventoryItemId:t.union([t.lazy(()=>s),t.number()]).optional(),dateTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),recipeId:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ER=t.object({where:t.lazy(()=>rt),update:t.union([t.lazy(()=>j7),t.lazy(()=>M7)]),create:t.union([t.lazy(()=>ju),t.lazy(()=>Mu)])}).strict(),LR=t.object({where:t.lazy(()=>rt),data:t.union([t.lazy(()=>j7),t.lazy(()=>M7)])}).strict(),VR=t.object({where:t.lazy(()=>Al),data:t.union([t.lazy(()=>tM),t.lazy(()=>bst)])}).strict(),HR=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)]),create:t.union([t.lazy(()=>Zu),t.lazy(()=>vu)])}).strict(),QR=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>Z7),t.lazy(()=>v7)])}).strict(),YR=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>NT),t.lazy(()=>hst)])}).strict(),GR=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>O7),t.lazy(()=>f7)]),create:t.union([t.lazy(()=>Ou),t.lazy(()=>fu)])}).strict(),$R=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>O7),t.lazy(()=>f7)])}).strict(),JR=t.object({where:t.lazy(()=>Ha),data:t.union([t.lazy(()=>fT),t.lazy(()=>Ist)])}).strict(),Ha=t.object({AND:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional(),OR:t.lazy(()=>Ha).array().optional(),NOT:t.union([t.lazy(()=>Ha),t.lazy(()=>Ha).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),versionNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),changes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdById:t.union([t.lazy(()=>s),t.number()]).optional(),approvedById:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),approvedAt:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),KR=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>w7),t.lazy(()=>N7)]),create:t.union([t.lazy(()=>wu),t.lazy(()=>Nu)])}).strict(),XR=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>w7),t.lazy(()=>N7)])}).strict(),tk=t.object({where:t.lazy(()=>Ha),data:t.union([t.lazy(()=>fT),t.lazy(()=>gst)])}).strict(),ek=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>B7),t.lazy(()=>q7)]),create:t.union([t.lazy(()=>Bu),t.lazy(()=>qu)])}).strict(),ok=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>B7),t.lazy(()=>q7)])}).strict(),nk=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>VT),t.lazy(()=>Cst)])}).strict(),ak=t.object({where:t.lazy(()=>ut),update:t.union([t.lazy(()=>F7),t.lazy(()=>D7)]),create:t.union([t.lazy(()=>Fu),t.lazy(()=>Du)])}).strict(),ik=t.object({where:t.lazy(()=>ut),data:t.union([t.lazy(()=>F7),t.lazy(()=>D7)])}).strict(),lk=t.object({where:t.lazy(()=>Wl),data:t.union([t.lazy(()=>pM),t.lazy(()=>Ast)])}).strict(),EO=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),LO=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),i3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>EO),t.lazy(()=>LO)])}).strict(),lct=t.object({update:t.union([t.lazy(()=>TE),t.lazy(()=>PE)]),create:t.union([t.lazy(()=>EO),t.lazy(()=>LO)]),where:t.lazy(()=>v).optional()}).strict(),rct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>TE),t.lazy(()=>PE)])}).strict(),TE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),PE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),_u=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),Eu=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),jh=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),VO=t.object({data:t.union([t.lazy(()=>YH),t.lazy(()=>YH).array()]),skipDuplicates:t.boolean().optional()}).strict(),HO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),QO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),l3=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>HO),t.lazy(()=>QO)])}).strict(),rk=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>_7),t.lazy(()=>E7)]),create:t.union([t.lazy(()=>_u),t.lazy(()=>Eu)])}).strict(),pk=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>_7),t.lazy(()=>E7)])}).strict(),ck=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>Sst)])}).strict(),pct=t.object({update:t.union([t.lazy(()=>UE),t.lazy(()=>WE)]),create:t.union([t.lazy(()=>HO),t.lazy(()=>QO)]),where:t.lazy(()=>B).optional()}).strict(),cct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>UE),t.lazy(()=>WE)])}).strict(),UE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),WE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),YO=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),GO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),r3=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)])}).strict(),$O=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurant:t.lazy(()=>$2).optional()}).strict(),JO=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string(),restaurantId:t.number().int().optional().nullable()}).strict(),p3=t.object({where:t.lazy(()=>ne),create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)])}).strict(),Lu=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),ingredient:t.lazy(()=>bF),recipeVersion:t.lazy(()=>hF).optional()}).strict(),Vu=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),Mh=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),KO=t.object({data:t.union([t.lazy(()=>GH),t.lazy(()=>GH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hu=t.object({stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),RecipeVersion:t.lazy(()=>SF).optional(),equipment:t.lazy(()=>TF).optional()}).strict(),Qu=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable(),equipment:t.lazy(()=>PF).optional()}).strict(),Zh=t.object({where:t.lazy(()=>ct),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),XO=t.object({data:t.union([t.lazy(()=>$H),t.lazy(()=>$H).array()]),skipDuplicates:t.boolean().optional()}).strict(),Yu=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Gu=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),vh=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),$u=t.object({cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ju=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Oh=t.object({where:t.lazy(()=>xe),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),tf=t.object({data:t.union([t.lazy(()=>JH),t.lazy(()=>JH).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ku=t.object({quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Xu=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fh=t.object({where:t.lazy(()=>je),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),ef=t.object({data:t.union([t.lazy(()=>KH),t.lazy(()=>KH).array()]),skipDuplicates:t.boolean().optional()}).strict(),ts=t.object({name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>b5).optional()}).strict(),es=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>I5).optional()}).strict(),wh=t.object({where:t.lazy(()=>ie),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),os=t.object({quantity:t.number().int(),status:t.lazy(()=>et),prepBoard:t.lazy(()=>cD),assignedTo:t.lazy(()=>sD)}).strict(),ns=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),Nh=t.object({where:t.lazy(()=>Y),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),of=t.object({data:t.union([t.lazy(()=>XH),t.lazy(()=>XH).array()]),skipDuplicates:t.boolean().optional()}).strict(),as=t.object({joinAt:t.coerce.date().optional(),menuItem:t.lazy(()=>T5)}).strict(),is=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),Bh=t.object({where:t.lazy(()=>Tt),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),nf=t.object({data:t.union([t.lazy(()=>tQ),t.lazy(()=>tQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ls=t.object({quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),productionPlan:t.lazy(()=>nF),assignedTo:t.lazy(()=>iF).optional()}).strict(),rs=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qh=t.object({where:t.lazy(()=>L),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),af=t.object({data:t.union([t.lazy(()=>eQ),t.lazy(()=>eQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ps=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),inventoryItem:t.lazy(()=>cF),createdBy:t.lazy(()=>sF)}).strict(),cs=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Fh=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),lf=t.object({data:t.union([t.lazy(()=>oQ),t.lazy(()=>oQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),us=t.object({name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ss=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Dh=t.object({where:t.lazy(()=>Se),create:t.union([t.lazy(()=>us),t.lazy(()=>ss)])}).strict(),ys=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>YT).optional(),instructions:t.lazy(()=>GT).optional(),createdBy:t.lazy(()=>$T),approvedBy:t.lazy(()=>JT).optional()}).strict(),ds=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KT).optional(),instructions:t.lazy(()=>XT).optional()}).strict(),_h=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>ys),t.lazy(()=>ds)])}).strict(),rf=t.object({data:t.union([t.lazy(()=>nQ),t.lazy(()=>nQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),zs=t.object({notes:t.string().optional().nullable(),equipment:t.lazy(()=>$B),RecipeInstruction:t.lazy(()=>JB).optional()}).strict(),ms=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),Eh=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),pf=t.object({data:t.union([t.lazy(()=>aQ),t.lazy(()=>aQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),bs=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Uq).optional(),ingredients:t.lazy(()=>Rq).optional()}).strict(),hs=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>kq).optional(),ingredients:t.lazy(()=>jq).optional()}).strict(),Lh=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),Is=t.object({stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gs=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Vh=t.object({where:t.lazy(()=>Ie),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),cf=t.object({data:t.union([t.lazy(()=>iQ),t.lazy(()=>iQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cs=t.object({expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),As=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Hh=t.object({where:t.lazy(()=>ge),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),uf=t.object({data:t.union([t.lazy(()=>lQ),t.lazy(()=>lQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ss=t.object({prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ts=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Qh=t.object({where:t.lazy(()=>Ce),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),sf=t.object({data:t.union([t.lazy(()=>rQ),t.lazy(()=>rQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),lT=t.object({servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),rT=t.object({id:t.number().int().optional(),servingSize:t.number(),servingUnit:t.string(),calories:t.number(),protein:t.number(),carbohydrates:t.number(),fat:t.number(),fiber:t.number(),sugar:t.number(),sodium:t.number(),containsGluten:t.boolean().optional(),containsDairy:t.boolean().optional(),containsNuts:t.boolean().optional(),containsEggs:t.boolean().optional(),containsSoy:t.boolean().optional(),containsFish:t.boolean().optional(),containsShellfish:t.boolean().optional(),containsSesame:t.boolean().optional()}).strict(),yf=t.object({where:t.lazy(()=>ql),create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)])}).strict(),Ps=t.object({stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Us=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Yh=t.object({where:t.lazy(()=>be),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),df=t.object({data:t.union([t.lazy(()=>pQ),t.lazy(()=>pQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),pT=t.object({temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cT=t.object({id:t.number().int().optional(),temperature:t.number().optional().nullable(),method:t.string(),shelfLife:t.number().int(),containerType:t.string().optional().nullable(),specialNotes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zf=t.object({where:t.lazy(()=>Fl),create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)])}).strict(),Ws=t.object({url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Rs=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Gh=t.object({where:t.lazy(()=>he),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),mf=t.object({data:t.union([t.lazy(()=>cQ),t.lazy(()=>cQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),uT=t.object({totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),sT=t.object({id:t.number().int().optional(),totalCost:t.number(),profitMargin:t.number(),averageRating:t.number(),preparationCount:t.number().int(),lastPrepared:t.coerce.date().optional().nullable()}).strict(),bf=t.object({where:t.lazy(()=>Dl),create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)])}).strict(),uct=t.object({update:t.union([t.lazy(()=>RE),t.lazy(()=>kE)]),create:t.union([t.lazy(()=>YO),t.lazy(()=>GO)]),where:t.lazy(()=>B).optional()}).strict(),sct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>RE),t.lazy(()=>kE)])}).strict(),RE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),kE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),yct=t.object({update:t.union([t.lazy(()=>xE),t.lazy(()=>jE)]),create:t.union([t.lazy(()=>$O),t.lazy(()=>JO)]),where:t.lazy(()=>$e).optional()}).strict(),dct=t.object({where:t.lazy(()=>$e).optional(),data:t.union([t.lazy(()=>xE),t.lazy(()=>jE)])}).strict(),xE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurant:t.lazy(()=>X2).optional()}).strict(),jE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),uk=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>L7),t.lazy(()=>V7)]),create:t.union([t.lazy(()=>Lu),t.lazy(()=>Vu)])}).strict(),sk=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>L7),t.lazy(()=>V7)])}).strict(),yk=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>ET),t.lazy(()=>Tst)])}).strict(),dk=t.object({where:t.lazy(()=>ct),update:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)]),create:t.union([t.lazy(()=>Hu),t.lazy(()=>Qu)])}).strict(),zk=t.object({where:t.lazy(()=>ct),data:t.union([t.lazy(()=>H7),t.lazy(()=>Q7)])}).strict(),mk=t.object({where:t.lazy(()=>Cl),data:t.union([t.lazy(()=>rM),t.lazy(()=>Pst)])}).strict(),bk=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)]),create:t.union([t.lazy(()=>Yu),t.lazy(()=>Gu)])}).strict(),hk=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>Y7),t.lazy(()=>G7)])}).strict(),Ik=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>PS),t.lazy(()=>Ust)])}).strict(),gk=t.object({where:t.lazy(()=>xe),update:t.union([t.lazy(()=>$7),t.lazy(()=>J7)]),create:t.union([t.lazy(()=>$u),t.lazy(()=>Ju)])}).strict(),Ck=t.object({where:t.lazy(()=>xe),data:t.union([t.lazy(()=>$7),t.lazy(()=>J7)])}).strict(),Ak=t.object({where:t.lazy(()=>Mp),data:t.union([t.lazy(()=>lB),t.lazy(()=>Wst)])}).strict(),Mp=t.object({AND:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),OR:t.lazy(()=>Mp).array().optional(),NOT:t.union([t.lazy(()=>Mp),t.lazy(()=>Mp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),cost:t.union([t.lazy(()=>R),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Sk=t.object({where:t.lazy(()=>je),update:t.union([t.lazy(()=>K7),t.lazy(()=>X7)]),create:t.union([t.lazy(()=>Ku),t.lazy(()=>Xu)])}).strict(),Tk=t.object({where:t.lazy(()=>je),data:t.union([t.lazy(()=>K7),t.lazy(()=>X7)])}).strict(),Pk=t.object({where:t.lazy(()=>Zp),data:t.union([t.lazy(()=>rB),t.lazy(()=>Rst)])}).strict(),Zp=t.object({AND:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),OR:t.lazy(()=>Zp).array().optional(),NOT:t.union([t.lazy(()=>Zp),t.lazy(()=>Zp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>s),t.number()]).optional(),date:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Uk=t.object({where:t.lazy(()=>ie),update:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)]),create:t.union([t.lazy(()=>ts),t.lazy(()=>es)])}).strict(),Wk=t.object({where:t.lazy(()=>ie),data:t.union([t.lazy(()=>tJ),t.lazy(()=>eJ)])}).strict(),Rk=t.object({where:t.lazy(()=>vp),data:t.union([t.lazy(()=>nB),t.lazy(()=>kst)])}).strict(),vp=t.object({AND:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),OR:t.lazy(()=>vp).array().optional(),NOT:t.union([t.lazy(()=>vp),t.lazy(()=>vp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),status:t.union([t.lazy(()=>qS),t.lazy(()=>et)]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),kk=t.object({where:t.lazy(()=>Y),update:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)]),create:t.union([t.lazy(()=>os),t.lazy(()=>ns)])}).strict(),xk=t.object({where:t.lazy(()=>Y),data:t.union([t.lazy(()=>oJ),t.lazy(()=>nJ)])}).strict(),jk=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>HT),t.lazy(()=>xst)])}).strict(),Mk=t.object({where:t.lazy(()=>Tt),update:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)]),create:t.union([t.lazy(()=>as),t.lazy(()=>is)])}).strict(),Zk=t.object({where:t.lazy(()=>Tt),data:t.union([t.lazy(()=>aJ),t.lazy(()=>iJ)])}).strict(),vk=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>yM),t.lazy(()=>jst)])}).strict(),jl=t.object({AND:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),OR:t.lazy(()=>jl).array().optional(),NOT:t.union([t.lazy(()=>jl),t.lazy(()=>jl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),joinAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ok=t.object({where:t.lazy(()=>L),update:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)]),create:t.union([t.lazy(()=>ls),t.lazy(()=>rs)])}).strict(),fk=t.object({where:t.lazy(()=>L),data:t.union([t.lazy(()=>lJ),t.lazy(()=>rJ)])}).strict(),wk=t.object({where:t.lazy(()=>Ba),data:t.union([t.lazy(()=>DT),t.lazy(()=>Mst)])}).strict(),Nk=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)]),create:t.union([t.lazy(()=>ps),t.lazy(()=>cs)])}).strict(),Bk=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>pJ),t.lazy(()=>cJ)])}).strict(),qk=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>_T),t.lazy(()=>Zst)])}).strict(),Fk=t.object({where:t.lazy(()=>Se),update:t.union([t.lazy(()=>uJ),t.lazy(()=>sJ)]),create:t.union([t.lazy(()=>us),t.lazy(()=>ss)])}).strict(),Dk=t.object({where:t.lazy(()=>Se),data:t.union([t.lazy(()=>uJ),t.lazy(()=>sJ)])}).strict(),_k=t.object({where:t.lazy(()=>Op),data:t.union([t.lazy(()=>QN),t.lazy(()=>vst)])}).strict(),Op=t.object({AND:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),OR:t.lazy(()=>Op).array().optional(),NOT:t.union([t.lazy(()=>Op),t.lazy(()=>Op).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ek=t.object({where:t.lazy(()=>N),update:t.union([t.lazy(()=>yJ),t.lazy(()=>dJ)]),create:t.union([t.lazy(()=>ys),t.lazy(()=>ds)])}).strict(),Lk=t.object({where:t.lazy(()=>N),data:t.union([t.lazy(()=>yJ),t.lazy(()=>dJ)])}).strict(),Vk=t.object({where:t.lazy(()=>Ha),data:t.union([t.lazy(()=>fT),t.lazy(()=>Ost)])}).strict(),Hk=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)]),create:t.union([t.lazy(()=>zs),t.lazy(()=>ms)])}).strict(),Qk=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>zJ),t.lazy(()=>mJ)])}).strict(),Yk=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>wT),t.lazy(()=>fst)])}).strict(),Gk=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)]),create:t.union([t.lazy(()=>bs),t.lazy(()=>hs)])}).strict(),$k=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>bJ),t.lazy(()=>hJ)])}).strict(),Jk=t.object({where:t.lazy(()=>Qa),data:t.union([t.lazy(()=>BT),t.lazy(()=>wst)])}).strict(),Qa=t.object({AND:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional(),OR:t.lazy(()=>Qa).array().optional(),NOT:t.union([t.lazy(()=>Qa),t.lazy(()=>Qa).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),icon:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Kk=t.object({where:t.lazy(()=>Ie),update:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)]),create:t.union([t.lazy(()=>Is),t.lazy(()=>gs)])}).strict(),Xk=t.object({where:t.lazy(()=>Ie),data:t.union([t.lazy(()=>IJ),t.lazy(()=>gJ)])}).strict(),tx=t.object({where:t.lazy(()=>fp),data:t.union([t.lazy(()=>qN),t.lazy(()=>Nst)])}).strict(),fp=t.object({AND:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),OR:t.lazy(()=>fp).array().optional(),NOT:t.union([t.lazy(()=>fp),t.lazy(()=>fp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),minTemp:t.union([t.lazy(()=>R),t.number()]).optional(),maxTemp:t.union([t.lazy(()=>R),t.number()]).optional(),isCritical:t.union([t.lazy(()=>mt),t.boolean()]).optional(),holdTime:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ex=t.object({where:t.lazy(()=>ge),update:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)]),create:t.union([t.lazy(()=>Cs),t.lazy(()=>As)])}).strict(),ox=t.object({where:t.lazy(()=>ge),data:t.union([t.lazy(()=>CJ),t.lazy(()=>AJ)])}).strict(),nx=t.object({where:t.lazy(()=>wp),data:t.union([t.lazy(()=>FN),t.lazy(()=>Bst)])}).strict(),wp=t.object({AND:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),OR:t.lazy(()=>wp).array().optional(),NOT:t.union([t.lazy(()=>wp),t.lazy(()=>wp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedYield:t.union([t.lazy(()=>R),t.number()]).optional(),actualYield:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),wastagePercent:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),ax=t.object({where:t.lazy(()=>Ce),update:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)]),create:t.union([t.lazy(()=>Ss),t.lazy(()=>Ts)])}).strict(),ix=t.object({where:t.lazy(()=>Ce),data:t.union([t.lazy(()=>SJ),t.lazy(()=>TJ)])}).strict(),lx=t.object({where:t.lazy(()=>Np),data:t.union([t.lazy(()=>DN),t.lazy(()=>qst)])}).strict(),Np=t.object({AND:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),OR:t.lazy(()=>Np).array().optional(),NOT:t.union([t.lazy(()=>Np),t.lazy(()=>Np).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),prepTime:t.union([t.lazy(()=>s),t.number()]).optional(),cookTime:t.union([t.lazy(()=>s),t.number()]).optional(),laborRate:t.union([t.lazy(()=>R),t.number()]).optional(),totalLaborCost:t.union([t.lazy(()=>R),t.number()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),c3=t.object({update:t.union([t.lazy(()=>hf),t.lazy(()=>If)]),create:t.union([t.lazy(()=>lT),t.lazy(()=>rT)]),where:t.lazy(()=>Be).optional()}).strict(),u3=t.object({where:t.lazy(()=>Be).optional(),data:t.union([t.lazy(()=>hf),t.lazy(()=>If)])}).strict(),hf=t.object({servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional()}).strict(),If=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),servingSize:t.union([t.number(),t.lazy(()=>r)]).optional(),servingUnit:t.union([t.string(),t.lazy(()=>a)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),containsGluten:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsDairy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsNuts:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsEggs:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSoy:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsFish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsShellfish:t.union([t.boolean(),t.lazy(()=>y)]).optional(),containsSesame:t.union([t.boolean(),t.lazy(()=>y)]).optional()}).strict(),rx=t.object({where:t.lazy(()=>be),update:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)]),create:t.union([t.lazy(()=>Ps),t.lazy(()=>Us)])}).strict(),px=t.object({where:t.lazy(()=>be),data:t.union([t.lazy(()=>PJ),t.lazy(()=>UJ)])}).strict(),cx=t.object({where:t.lazy(()=>Bp),data:t.union([t.lazy(()=>NN),t.lazy(()=>Fst)])}).strict(),Bp=t.object({AND:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),OR:t.lazy(()=>Bp).array().optional(),NOT:t.union([t.lazy(()=>Bp),t.lazy(()=>Bp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),stepNumber:t.union([t.lazy(()=>s),t.number()]).optional(),description:t.union([t.lazy(()=>S),t.string()]).optional(),threshold:t.union([t.lazy(()=>ot),t.number()]).optional().nullable(),unit:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),action:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),s3=t.object({update:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)]),create:t.union([t.lazy(()=>pT),t.lazy(()=>cT)]),where:t.lazy(()=>qe).optional()}).strict(),y3=t.object({where:t.lazy(()=>qe).optional(),data:t.union([t.lazy(()=>gf),t.lazy(()=>Cf)])}).strict(),gf=t.object({temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),method:t.union([t.string(),t.lazy(()=>a)]).optional(),shelfLife:t.union([t.number().int(),t.lazy(()=>n)]).optional(),containerType:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),specialNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ux=t.object({where:t.lazy(()=>he),update:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)]),create:t.union([t.lazy(()=>Ws),t.lazy(()=>Rs)])}).strict(),sx=t.object({where:t.lazy(()=>he),data:t.union([t.lazy(()=>WJ),t.lazy(()=>RJ)])}).strict(),yx=t.object({where:t.lazy(()=>qp),data:t.union([t.lazy(()=>BN),t.lazy(()=>Dst)])}).strict(),qp=t.object({AND:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),OR:t.lazy(()=>qp).array().optional(),NOT:t.union([t.lazy(()=>qp),t.lazy(()=>qp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),recipeId:t.union([t.lazy(()=>s),t.number()]).optional(),url:t.union([t.lazy(()=>S),t.string()]).optional(),type:t.union([t.lazy(()=>pB),t.lazy(()=>de)]).optional(),stepNumber:t.union([t.lazy(()=>it),t.number()]).optional().nullable(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),d3=t.object({update:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)]),create:t.union([t.lazy(()=>uT),t.lazy(()=>sT)]),where:t.lazy(()=>Fe).optional()}).strict(),z3=t.object({where:t.lazy(()=>Fe).optional(),data:t.union([t.lazy(()=>Af),t.lazy(()=>Sf)])}).strict(),Af=t.object({totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),Sf=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),totalCost:t.union([t.number(),t.lazy(()=>r)]).optional(),profitMargin:t.union([t.number(),t.lazy(()=>r)]).optional(),averageRating:t.union([t.number(),t.lazy(()=>r)]).optional(),preparationCount:t.union([t.number().int(),t.lazy(()=>n)]).optional(),lastPrepared:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),ks=t.object({quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>mF),recipeVersion:t.lazy(()=>hF).optional()}).strict(),xs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),$h=t.object({where:t.lazy(()=>H),create:t.union([t.lazy(()=>ks),t.lazy(()=>xs)])}).strict(),Tf=t.object({data:t.union([t.lazy(()=>uQ),t.lazy(()=>uQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),js=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),lastUpdatedBy:t.lazy(()=>_S).optional(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Ms=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),Jh=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>js),t.lazy(()=>Ms)])}).strict(),Pf=t.object({data:t.union([t.lazy(()=>sQ),t.lazy(()=>sQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Zs=t.object({quantity:t.number(),unit:t.string(),price:t.number(),order:t.lazy(()=>i5)}).strict(),vs=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),Kh=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>Zs),t.lazy(()=>vs)])}).strict(),Uf=t.object({data:t.union([t.lazy(()=>yQ),t.lazy(()=>yQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Os=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>JF).optional(),supplierPriceHistory:t.lazy(()=>XF).optional()}).strict(),fs=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),orders:t.lazy(()=>tD).optional(),supplierPriceHistory:t.lazy(()=>oD).optional()}).strict(),Xh=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>Os),t.lazy(()=>fs)])}).strict(),ws=t.object({date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Eq),recordedBy:t.lazy(()=>Vq)}).strict(),Ns=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),tI=t.object({where:t.lazy(()=>E),create:t.union([t.lazy(()=>ws),t.lazy(()=>Ns)])}).strict(),Wf=t.object({data:t.union([t.lazy(()=>dQ),t.lazy(()=>dQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Bs=t.object({allergen:t.lazy(()=>B2)}).strict(),qs=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),eI=t.object({where:t.lazy(()=>Ct),create:t.union([t.lazy(()=>Bs),t.lazy(()=>qs)])}).strict(),Rf=t.object({data:t.union([t.lazy(()=>zQ),t.lazy(()=>zQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Fs=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),vendor:t.lazy(()=>v2)}).strict(),Ds=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>Fs),t.lazy(()=>Ds)])}).strict(),kf=t.object({data:t.union([t.lazy(()=>mQ),t.lazy(()=>mQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),_s=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>Uq).optional(),recipes:t.lazy(()=>Wq).optional()}).strict(),Es=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>kq).optional(),recipes:t.lazy(()=>xq).optional()}).strict(),nI=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>_s),t.lazy(()=>Es)])}).strict(),dx=t.object({where:t.lazy(()=>H),update:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)]),create:t.union([t.lazy(()=>ks),t.lazy(()=>xs)])}).strict(),zx=t.object({where:t.lazy(()=>H),data:t.union([t.lazy(()=>kJ),t.lazy(()=>xJ)])}).strict(),mx=t.object({where:t.lazy(()=>wa),data:t.union([t.lazy(()=>ET),t.lazy(()=>_st)])}).strict(),bx=t.object({where:t.lazy(()=>w),update:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)]),create:t.union([t.lazy(()=>js),t.lazy(()=>Ms)])}).strict(),hx=t.object({where:t.lazy(()=>w),data:t.union([t.lazy(()=>jJ),t.lazy(()=>MJ)])}).strict(),Ix=t.object({where:t.lazy(()=>qa),data:t.union([t.lazy(()=>LT),t.lazy(()=>Est)])}).strict(),gx=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)]),create:t.union([t.lazy(()=>Zs),t.lazy(()=>vs)])}).strict(),Cx=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>ZJ),t.lazy(()=>vJ)])}).strict(),Ax=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>sM),t.lazy(()=>Lst)])}).strict(),Ml=t.object({AND:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),OR:t.lazy(()=>Ml).array().optional(),NOT:t.union([t.lazy(()=>Ml),t.lazy(()=>Ml).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),orderId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),quantity:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional()}).strict(),Sx=t.object({where:t.lazy(()=>$t),update:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)]),create:t.union([t.lazy(()=>Os),t.lazy(()=>fs)])}).strict(),Tx=t.object({where:t.lazy(()=>$t),data:t.union([t.lazy(()=>OJ),t.lazy(()=>fJ)])}).strict(),Px=t.object({where:t.lazy(()=>Fp),data:t.union([t.lazy(()=>eB),t.lazy(()=>Vst)])}).strict(),Fp=t.object({AND:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),OR:t.lazy(()=>Fp).array().optional(),NOT:t.union([t.lazy(()=>Fp),t.lazy(()=>Fp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),contact:t.union([t.lazy(()=>S),t.string()]).optional(),email:t.union([t.lazy(()=>S),t.string()]).optional(),phone:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ux=t.object({where:t.lazy(()=>E),update:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)]),create:t.union([t.lazy(()=>ws),t.lazy(()=>Ns)])}).strict(),Wx=t.object({where:t.lazy(()=>E),data:t.union([t.lazy(()=>wJ),t.lazy(()=>NJ)])}).strict(),Rx=t.object({where:t.lazy(()=>_a),data:t.union([t.lazy(()=>FT),t.lazy(()=>Hst)])}).strict(),kx=t.object({where:t.lazy(()=>Ct),update:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)]),create:t.union([t.lazy(()=>Bs),t.lazy(()=>qs)])}).strict(),xx=t.object({where:t.lazy(()=>Ct),data:t.union([t.lazy(()=>BJ),t.lazy(()=>qJ)])}).strict(),jx=t.object({where:t.lazy(()=>Pl),data:t.union([t.lazy(()=>aM),t.lazy(()=>Qst)])}).strict(),Mx=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)]),create:t.union([t.lazy(()=>Fs),t.lazy(()=>Ds)])}).strict(),Zx=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>FJ),t.lazy(()=>DJ)])}).strict(),vx=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>oM),t.lazy(()=>Yst)])}).strict(),Zl=t.object({AND:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),OR:t.lazy(()=>Zl).array().optional(),NOT:t.union([t.lazy(()=>Zl),t.lazy(()=>Zl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),vendorId:t.union([t.lazy(()=>s),t.number()]).optional(),ingredientId:t.union([t.lazy(()=>s),t.number()]).optional(),price:t.union([t.lazy(()=>R),t.number()]).optional(),unit:t.union([t.lazy(()=>S),t.string()]).optional(),startDate:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endDate:t.union([t.lazy(()=>Kt),t.coerce.date()]).optional().nullable(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Ox=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)]),create:t.union([t.lazy(()=>_s),t.lazy(()=>Es)])}).strict(),fx=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>_J),t.lazy(()=>EJ)])}).strict(),wx=t.object({where:t.lazy(()=>Qa),data:t.union([t.lazy(()=>BT),t.lazy(()=>Gst)])}).strict(),xf=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),jf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),m3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)])}).strict(),Mf=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),Zf=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),b3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)])}).strict(),vf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>QT),instructions:t.lazy(()=>GT).optional(),createdBy:t.lazy(()=>$T),approvedBy:t.lazy(()=>JT).optional()}).strict(),Of=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),instructions:t.lazy(()=>XT).optional()}).strict(),h3=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)])}).strict(),zct=t.object({update:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)]),create:t.union([t.lazy(()=>xf),t.lazy(()=>jf)]),where:t.lazy(()=>O).optional()}).strict(),mct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>ME),t.lazy(()=>ZE)])}).strict(),ME=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ZE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),bct=t.object({update:t.union([t.lazy(()=>vE),t.lazy(()=>OE)]),create:t.union([t.lazy(()=>Mf),t.lazy(()=>Zf)]),where:t.lazy(()=>Mt).optional()}).strict(),hct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>vE),t.lazy(()=>OE)])}).strict(),vE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),OE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),Ict=t.object({update:t.union([t.lazy(()=>fE),t.lazy(()=>wE)]),create:t.union([t.lazy(()=>vf),t.lazy(()=>Of)]),where:t.lazy(()=>le).optional()}).strict(),gct=t.object({where:t.lazy(()=>le).optional(),data:t.union([t.lazy(()=>fE),t.lazy(()=>wE)])}).strict(),fE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tP).optional(),instructions:t.lazy(()=>oP).optional(),createdBy:t.lazy(()=>nP).optional(),approvedBy:t.lazy(()=>aP).optional()}).strict(),wE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),instructions:t.lazy(()=>lP).optional()}).strict(),ff=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),wf=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),I3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)])}).strict(),Nf=t.object({versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>QT),ingredients:t.lazy(()=>YT).optional(),createdBy:t.lazy(()=>$T),approvedBy:t.lazy(()=>JT).optional()}).strict(),Bf=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KT).optional()}).strict(),g3=t.object({where:t.lazy(()=>N),create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)])}).strict(),Ls=t.object({notes:t.string().optional().nullable(),recipe:t.lazy(()=>GB),equipment:t.lazy(()=>$B)}).strict(),Vs=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),aI=t.object({where:t.lazy(()=>q),create:t.union([t.lazy(()=>Ls),t.lazy(()=>Vs)])}).strict(),qf=t.object({data:t.union([t.lazy(()=>bQ),t.lazy(()=>bQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Cct=t.object({update:t.union([t.lazy(()=>NE),t.lazy(()=>BE)]),create:t.union([t.lazy(()=>ff),t.lazy(()=>wf)]),where:t.lazy(()=>O).optional()}).strict(),Act=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>NE),t.lazy(()=>BE)])}).strict(),NE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),BE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Sct=t.object({update:t.union([t.lazy(()=>qE),t.lazy(()=>FE)]),create:t.union([t.lazy(()=>Nf),t.lazy(()=>Bf)]),where:t.lazy(()=>le).optional()}).strict(),Tct=t.object({where:t.lazy(()=>le).optional(),data:t.union([t.lazy(()=>qE),t.lazy(()=>FE)])}).strict(),qE=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tP).optional(),ingredients:t.lazy(()=>eP).optional(),createdBy:t.lazy(()=>nP).optional(),approvedBy:t.lazy(()=>aP).optional()}).strict(),FE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>iP).optional()}).strict(),Nx=t.object({where:t.lazy(()=>q),update:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)]),create:t.union([t.lazy(()=>Ls),t.lazy(()=>Vs)])}).strict(),Bx=t.object({where:t.lazy(()=>q),data:t.union([t.lazy(()=>LJ),t.lazy(()=>VJ)])}).strict(),qx=t.object({where:t.lazy(()=>Na),data:t.union([t.lazy(()=>wT),t.lazy(()=>$st)])}).strict(),Ff=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>wM),transactions:t.lazy(()=>BM).optional(),stockCounts:t.lazy(()=>qM).optional()}).strict(),Df=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),transactions:t.lazy(()=>DM).optional(),stockCounts:t.lazy(()=>_M).optional()}).strict(),C3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)])}).strict(),_f=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),orderItems:t.lazy(()=>vI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),Ef=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),orderItems:t.lazy(()=>DI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),A3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>_f),t.lazy(()=>Ef)])}).strict(),Lf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Vf=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),S3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)])}).strict(),Hs=t.object({type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),inventory:t.lazy(()=>xF),createdBy:t.lazy(()=>MF)}).strict(),Qs=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),iI=t.object({where:t.lazy(()=>Q),create:t.union([t.lazy(()=>Hs),t.lazy(()=>Qs)])}).strict(),Hf=t.object({data:t.union([t.lazy(()=>hQ),t.lazy(()=>hQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Ys=t.object({dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipe:t.lazy(()=>uF).optional(),createdBy:t.lazy(()=>sF)}).strict(),Gs=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lI=t.object({where:t.lazy(()=>V),create:t.union([t.lazy(()=>Ys),t.lazy(()=>Gs)])}).strict(),Qf=t.object({data:t.union([t.lazy(()=>IQ),t.lazy(()=>IQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),$s=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),stockCount:t.lazy(()=>e5)}).strict(),Js=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),rI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>$s),t.lazy(()=>Js)])}).strict(),Yf=t.object({data:t.union([t.lazy(()=>gQ),t.lazy(()=>gQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Pct=t.object({update:t.union([t.lazy(()=>DE),t.lazy(()=>_E)]),create:t.union([t.lazy(()=>Ff),t.lazy(()=>Df)]),where:t.lazy(()=>_t).optional()}).strict(),Uct=t.object({where:t.lazy(()=>_t).optional(),data:t.union([t.lazy(()=>DE),t.lazy(()=>_E)])}).strict(),DE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>EM).optional(),transactions:t.lazy(()=>VM).optional(),stockCounts:t.lazy(()=>HM).optional()}).strict(),_E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),transactions:t.lazy(()=>YM).optional(),stockCounts:t.lazy(()=>GM).optional()}).strict(),Wct=t.object({update:t.union([t.lazy(()=>EE),t.lazy(()=>LE)]),create:t.union([t.lazy(()=>_f),t.lazy(()=>Ef)]),where:t.lazy(()=>Mt).optional()}).strict(),Rct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>EE),t.lazy(()=>LE)])}).strict(),EE=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),LE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),kct=t.object({update:t.union([t.lazy(()=>VE),t.lazy(()=>HE)]),create:t.union([t.lazy(()=>Lf),t.lazy(()=>Vf)]),where:t.lazy(()=>v).optional()}).strict(),xct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>VE),t.lazy(()=>HE)])}).strict(),VE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),HE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Fx=t.object({where:t.lazy(()=>Q),update:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)]),create:t.union([t.lazy(()=>Hs),t.lazy(()=>Qs)])}).strict(),Dx=t.object({where:t.lazy(()=>Q),data:t.union([t.lazy(()=>HJ),t.lazy(()=>QJ)])}).strict(),_x=t.object({where:t.lazy(()=>Fa),data:t.union([t.lazy(()=>VT),t.lazy(()=>Jst)])}).strict(),Ex=t.object({where:t.lazy(()=>V),update:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)]),create:t.union([t.lazy(()=>Ys),t.lazy(()=>Gs)])}).strict(),Lx=t.object({where:t.lazy(()=>V),data:t.union([t.lazy(()=>YJ),t.lazy(()=>GJ)])}).strict(),Vx=t.object({where:t.lazy(()=>Va),data:t.union([t.lazy(()=>_T),t.lazy(()=>Kst)])}).strict(),Hx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)]),create:t.union([t.lazy(()=>$s),t.lazy(()=>Js)])}).strict(),Qx=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>$J),t.lazy(()=>JJ)])}).strict(),Yx=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>cM),t.lazy(()=>Xst)])}).strict(),vl=t.object({AND:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),OR:t.lazy(()=>vl).array().optional(),NOT:t.union([t.lazy(()=>vl),t.lazy(()=>vl).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),stockCountId:t.union([t.lazy(()=>s),t.number()]).optional(),itemId:t.union([t.lazy(()=>s),t.number()]).optional(),expectedQty:t.union([t.lazy(()=>R),t.number()]).optional(),actualQty:t.union([t.lazy(()=>R),t.number()]).optional(),difference:t.union([t.lazy(()=>R),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable()}).strict(),Gf=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>wM),items:t.lazy(()=>NM).optional(),stockCounts:t.lazy(()=>qM).optional()}).strict(),$f=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>FM).optional(),stockCounts:t.lazy(()=>_M).optional()}).strict(),T3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)])}).strict(),Jf=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),ingredient:t.lazy(()=>DS),lastUpdatedBy:t.lazy(()=>_S).optional(),withdrawals:t.lazy(()=>LS).optional(),stockCounts:t.lazy(()=>VS).optional()}).strict(),Kf=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),withdrawals:t.lazy(()=>QS).optional(),stockCounts:t.lazy(()=>YS).optional()}).strict(),P3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)])}).strict(),Xf=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),tw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),U3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)])}).strict(),jct=t.object({update:t.union([t.lazy(()=>QE),t.lazy(()=>YE)]),create:t.union([t.lazy(()=>Gf),t.lazy(()=>$f)]),where:t.lazy(()=>_t).optional()}).strict(),Mct=t.object({where:t.lazy(()=>_t).optional(),data:t.union([t.lazy(()=>QE),t.lazy(()=>YE)])}).strict(),QE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>EM).optional(),items:t.lazy(()=>LM).optional(),stockCounts:t.lazy(()=>HM).optional()}).strict(),YE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QM).optional(),stockCounts:t.lazy(()=>GM).optional()}).strict(),Zct=t.object({update:t.union([t.lazy(()=>GE),t.lazy(()=>$E)]),create:t.union([t.lazy(()=>Jf),t.lazy(()=>Kf)]),where:t.lazy(()=>re).optional()}).strict(),vct=t.object({where:t.lazy(()=>re).optional(),data:t.union([t.lazy(()=>GE),t.lazy(()=>$E)])}).strict(),GE=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),ingredient:t.lazy(()=>$S).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),withdrawals:t.lazy(()=>XS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),$E=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),withdrawals:t.lazy(()=>oT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),Oct=t.object({update:t.union([t.lazy(()=>JE),t.lazy(()=>KE)]),create:t.union([t.lazy(()=>Xf),t.lazy(()=>tw)]),where:t.lazy(()=>v).optional()}).strict(),fct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>JE),t.lazy(()=>KE)])}).strict(),JE=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),KE=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),ew=t.object({name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>wM),items:t.lazy(()=>NM).optional(),transactions:t.lazy(()=>BM).optional()}).strict(),ow=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),name:t.string().optional().nullable(),type:t.lazy(()=>qt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>FM).optional(),transactions:t.lazy(()=>DM).optional()}).strict(),W3=t.object({where:t.lazy(()=>$n),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)])}).strict(),nw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional()}).strict(),aw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional()}).strict(),R3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)])}).strict(),Ks=t.object({expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable(),item:t.lazy(()=>o5)}).strict(),Xs=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),pI=t.object({where:t.lazy(()=>At),create:t.union([t.lazy(()=>Ks),t.lazy(()=>Xs)])}).strict(),iw=t.object({data:t.union([t.lazy(()=>CQ),t.lazy(()=>CQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),wct=t.object({update:t.union([t.lazy(()=>XE),t.lazy(()=>tL)]),create:t.union([t.lazy(()=>ew),t.lazy(()=>ow)]),where:t.lazy(()=>_t).optional()}).strict(),Nct=t.object({where:t.lazy(()=>_t).optional(),data:t.union([t.lazy(()=>XE),t.lazy(()=>tL)])}).strict(),XE=t.object({name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>EM).optional(),items:t.lazy(()=>LM).optional(),transactions:t.lazy(()=>VM).optional()}).strict(),tL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),type:t.union([t.lazy(()=>qt),t.lazy(()=>pp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>QM).optional(),transactions:t.lazy(()=>YM).optional()}).strict(),Bct=t.object({update:t.union([t.lazy(()=>eL),t.lazy(()=>oL)]),create:t.union([t.lazy(()=>nw),t.lazy(()=>aw)]),where:t.lazy(()=>v).optional()}).strict(),qct=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>eL),t.lazy(()=>oL)])}).strict(),eL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional()}).strict(),oL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional()}).strict(),Gx=t.object({where:t.lazy(()=>At),update:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)]),create:t.union([t.lazy(()=>Ks),t.lazy(()=>Xs)])}).strict(),$x=t.object({where:t.lazy(()=>At),data:t.union([t.lazy(()=>KJ),t.lazy(()=>XJ)])}).strict(),Jx=t.object({where:t.lazy(()=>vl),data:t.union([t.lazy(()=>cM),t.lazy(()=>tyt)])}).strict(),lw=t.object({status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),inventory:t.lazy(()=>fF),createdBy:t.lazy(()=>wF)}).strict(),rw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),k3=t.object({where:t.lazy(()=>ut),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)])}).strict(),pw=t.object({quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),inventory:t.lazy(()=>FS),ingredient:t.lazy(()=>DS),lastUpdatedBy:t.lazy(()=>_S).optional(),transactions:t.lazy(()=>ES).optional(),withdrawals:t.lazy(()=>LS).optional()}).strict(),cw=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable(),transactions:t.lazy(()=>HS).optional(),withdrawals:t.lazy(()=>QS).optional()}).strict(),x3=t.object({where:t.lazy(()=>w),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)])}).strict(),Fct=t.object({update:t.union([t.lazy(()=>nL),t.lazy(()=>aL)]),create:t.union([t.lazy(()=>lw),t.lazy(()=>rw)]),where:t.lazy(()=>Je).optional()}).strict(),Dct=t.object({where:t.lazy(()=>Je).optional(),data:t.union([t.lazy(()=>nL),t.lazy(()=>aL)])}).strict(),nL=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>qF).optional(),createdBy:t.lazy(()=>FF).optional()}).strict(),aL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),_ct=t.object({update:t.union([t.lazy(()=>iL),t.lazy(()=>lL)]),create:t.union([t.lazy(()=>pw),t.lazy(()=>cw)]),where:t.lazy(()=>re).optional()}).strict(),Ect=t.object({where:t.lazy(()=>re).optional(),data:t.union([t.lazy(()=>iL),t.lazy(()=>lL)])}).strict(),iL=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),ingredient:t.lazy(()=>$S).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>XS).optional()}).strict(),lL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),withdrawals:t.lazy(()=>oT).optional()}).strict(),uw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional()}).strict(),sw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional()}).strict(),j3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)])}).strict(),Lct=t.object({update:t.union([t.lazy(()=>rL),t.lazy(()=>pL)]),create:t.union([t.lazy(()=>uw),t.lazy(()=>sw)]),where:t.lazy(()=>O).optional()}).strict(),Vct=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>rL),t.lazy(()=>pL)])}).strict(),rL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional()}).strict(),pL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional()}).strict(),yw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),recipes:t.lazy(()=>Yl).optional(),menus:t.lazy(()=>Gl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),dw=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),recipes:t.lazy(()=>rr).optional(),menus:t.lazy(()=>pr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),M3=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)])}).strict(),zw=t.object({name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>KF).optional(),supplierPriceHistory:t.lazy(()=>XF).optional()}).strict(),mw=t.object({id:t.number().int().optional(),name:t.string(),contact:t.string(),email:t.string(),phone:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredients:t.lazy(()=>eD).optional(),supplierPriceHistory:t.lazy(()=>oD).optional()}).strict(),Z3=t.object({where:t.lazy(()=>$t),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)])}).strict(),ty=t.object({quantity:t.number(),unit:t.string(),price:t.number(),ingredient:t.lazy(()=>l5)}).strict(),ey=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),cI=t.object({where:t.lazy(()=>St),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),bw=t.object({data:t.union([t.lazy(()=>AQ),t.lazy(()=>AQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Hct=t.object({update:t.union([t.lazy(()=>cL),t.lazy(()=>uL)]),create:t.union([t.lazy(()=>yw),t.lazy(()=>dw)]),where:t.lazy(()=>B).optional()}).strict(),Qct=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>cL),t.lazy(()=>uL)])}).strict(),cL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),uL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),Yct=t.object({update:t.union([t.lazy(()=>sL),t.lazy(()=>yL)]),create:t.union([t.lazy(()=>zw),t.lazy(()=>mw)]),where:t.lazy(()=>Oe).optional()}).strict(),Gct=t.object({where:t.lazy(()=>Oe).optional(),data:t.union([t.lazy(()=>sL),t.lazy(()=>yL)])}).strict(),sL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>aD).optional(),supplierPriceHistory:t.lazy(()=>iD).optional()}).strict(),yL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>rD).optional(),supplierPriceHistory:t.lazy(()=>pD).optional()}).strict(),Kx=t.object({where:t.lazy(()=>St),update:t.union([t.lazy(()=>tK),t.lazy(()=>eK)]),create:t.union([t.lazy(()=>ty),t.lazy(()=>ey)])}).strict(),Xx=t.object({where:t.lazy(()=>St),data:t.union([t.lazy(()=>tK),t.lazy(()=>eK)])}).strict(),tj=t.object({where:t.lazy(()=>Ml),data:t.union([t.lazy(()=>sM),t.lazy(()=>eyt)])}).strict(),hw=t.object({status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>EF),vendor:t.lazy(()=>LF)}).strict(),Iw=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),vendorId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),v3=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)])}).strict(),gw=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),vendors:t.lazy(()=>OI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),Cw=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),vendors:t.lazy(()=>_I).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),O3=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)])}).strict(),$ct=t.object({update:t.union([t.lazy(()=>dL),t.lazy(()=>zL)]),create:t.union([t.lazy(()=>hw),t.lazy(()=>Iw)]),where:t.lazy(()=>Ke).optional()}).strict(),Jct=t.object({where:t.lazy(()=>Ke).optional(),data:t.union([t.lazy(()=>dL),t.lazy(()=>zL)])}).strict(),dL=t.object({status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>QF).optional(),vendor:t.lazy(()=>YF).optional()}).strict(),zL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kct=t.object({update:t.union([t.lazy(()=>mL),t.lazy(()=>bL)]),create:t.union([t.lazy(()=>gw),t.lazy(()=>Cw)]),where:t.lazy(()=>Mt).optional()}).strict(),Xct=t.object({where:t.lazy(()=>Mt).optional(),data:t.union([t.lazy(()=>mL),t.lazy(()=>bL)])}).strict(),mL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),bL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),oy=t.object({status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>EF),items:t.lazy(()=>VF).optional()}).strict(),ny=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),items:t.lazy(()=>HF).optional()}).strict(),uI=t.object({where:t.lazy(()=>st),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),Aw=t.object({data:t.union([t.lazy(()=>SQ),t.lazy(()=>SQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ay=t.object({name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>MI).optional(),inventoryItems:t.lazy(()=>ZI).optional(),orderItems:t.lazy(()=>vI).optional(),WasteRecords:t.lazy(()=>fI).optional(),IngredientAllergens:t.lazy(()=>wI).optional(),priceHistory:t.lazy(()=>NI).optional(),DietaryRestrictions:t.lazy(()=>BI).optional()}).strict(),iy=t.object({id:t.number().int().optional(),name:t.string(),category:t.string(),price:t.number(),density:t.number().optional().nullable(),dietaryRestrictionId:t.number().int().optional().nullable(),calories:t.number().optional().nullable(),protein:t.number().optional().nullable(),carbohydrates:t.number().optional().nullable(),fat:t.number().optional().nullable(),fiber:t.number().optional().nullable(),sugar:t.number().optional().nullable(),sodium:t.number().optional().nullable(),usdaFoodId:t.string().optional().nullable(),nutritionSource:t.lazy(()=>nt).optional().nullable(),nutritionUpdatedAt:t.coerce.date().optional().nullable(),recipeIngredients:t.lazy(()=>qI).optional(),inventoryItems:t.lazy(()=>FI).optional(),orderItems:t.lazy(()=>DI).optional(),WasteRecords:t.lazy(()=>EI).optional(),IngredientAllergens:t.lazy(()=>LI).optional(),priceHistory:t.lazy(()=>VI).optional(),DietaryRestrictions:t.lazy(()=>HI).optional()}).strict(),sI=t.object({where:t.lazy(()=>J),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),ly=t.object({price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),ingredient:t.lazy(()=>O2)}).strict(),ry=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),yI=t.object({where:t.lazy(()=>gt),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),Sw=t.object({data:t.union([t.lazy(()=>TQ),t.lazy(()=>TQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ej=t.object({where:t.lazy(()=>st),update:t.union([t.lazy(()=>oK),t.lazy(()=>nK)]),create:t.union([t.lazy(()=>oy),t.lazy(()=>ny)])}).strict(),oj=t.object({where:t.lazy(()=>st),data:t.union([t.lazy(()=>oK),t.lazy(()=>nK)])}).strict(),nj=t.object({where:t.lazy(()=>Rl),data:t.union([t.lazy(()=>uM),t.lazy(()=>oyt)])}).strict(),aj=t.object({where:t.lazy(()=>J),update:t.union([t.lazy(()=>aK),t.lazy(()=>iK)]),create:t.union([t.lazy(()=>ay),t.lazy(()=>iy)])}).strict(),ij=t.object({where:t.lazy(()=>J),data:t.union([t.lazy(()=>aK),t.lazy(()=>iK)])}).strict(),lj=t.object({where:t.lazy(()=>Tl),data:t.union([t.lazy(()=>lM),t.lazy(()=>nyt)])}).strict(),rj=t.object({where:t.lazy(()=>gt),update:t.union([t.lazy(()=>lK),t.lazy(()=>rK)]),create:t.union([t.lazy(()=>ly),t.lazy(()=>ry)])}).strict(),pj=t.object({where:t.lazy(()=>gt),data:t.union([t.lazy(()=>lK),t.lazy(()=>rK)])}).strict(),cj=t.object({where:t.lazy(()=>Zl),data:t.union([t.lazy(()=>oM),t.lazy(()=>ayt)])}).strict(),Tw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Pw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),f3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)])}).strict(),py=t.object({taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cy=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dI=t.object({where:t.lazy(()=>Te),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),Uw=t.object({data:t.union([t.lazy(()=>PQ),t.lazy(()=>PQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),tut=t.object({update:t.union([t.lazy(()=>hL),t.lazy(()=>IL)]),create:t.union([t.lazy(()=>Tw),t.lazy(()=>Pw)]),where:t.lazy(()=>v).optional()}).strict(),eut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>hL),t.lazy(()=>IL)])}).strict(),hL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),IL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),uj=t.object({where:t.lazy(()=>Te),update:t.union([t.lazy(()=>pK),t.lazy(()=>cK)]),create:t.union([t.lazy(()=>py),t.lazy(()=>cy)])}).strict(),sj=t.object({where:t.lazy(()=>Te),data:t.union([t.lazy(()=>pK),t.lazy(()=>cK)])}).strict(),yj=t.object({where:t.lazy(()=>Dp),data:t.union([t.lazy(()=>YN),t.lazy(()=>iyt)])}).strict(),Dp=t.object({AND:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),OR:t.lazy(()=>Dp).array().optional(),NOT:t.union([t.lazy(()=>Dp),t.lazy(()=>Dp).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),shiftId:t.union([t.lazy(()=>s),t.number()]).optional(),taskType:t.union([t.lazy(()=>CB),t.lazy(()=>ue)]).optional(),startTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),endTime:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),duration:t.union([t.lazy(()=>s),t.number()]).optional(),notes:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),uy=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),sy=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),zI=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>uy),t.lazy(()=>sy)])}).strict(),yy=t.object({quantity:t.number().int(),status:t.lazy(()=>et),recipe:t.lazy(()=>uD),assignedTo:t.lazy(()=>sD)}).strict(),dy=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),mI=t.object({where:t.lazy(()=>Y),create:t.union([t.lazy(()=>yy),t.lazy(()=>dy)])}).strict(),Ww=t.object({data:t.union([t.lazy(()=>UQ),t.lazy(()=>UQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),dj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>uK),t.lazy(()=>sK)]),create:t.union([t.lazy(()=>uy),t.lazy(()=>sy)])}).strict(),zj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>uK),t.lazy(()=>sK)])}).strict(),mj=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>lyt)])}).strict(),bj=t.object({where:t.lazy(()=>Y),update:t.union([t.lazy(()=>yK),t.lazy(()=>dK)]),create:t.union([t.lazy(()=>yy),t.lazy(()=>dy)])}).strict(),hj=t.object({where:t.lazy(()=>Y),data:t.union([t.lazy(()=>yK),t.lazy(()=>dK)])}).strict(),Ij=t.object({where:t.lazy(()=>La),data:t.union([t.lazy(()=>HT),t.lazy(()=>ryt)])}).strict(),Rw=t.object({name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>m5).optional()}).strict(),kw=t.object({id:t.number().int().optional(),name:t.string(),status:t.lazy(()=>et),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>h5).optional()}).strict(),w3=t.object({where:t.lazy(()=>ie),create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)])}).strict(),xw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),jw=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),N3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)])}).strict(),Mw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),passwordResets:t.lazy(()=>ti).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Zw=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),passwordResets:t.lazy(()=>Ii).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),B3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)])}).strict(),out=t.object({update:t.union([t.lazy(()=>gL),t.lazy(()=>CL)]),create:t.union([t.lazy(()=>Rw),t.lazy(()=>kw)]),where:t.lazy(()=>to).optional()}).strict(),nut=t.object({where:t.lazy(()=>to).optional(),data:t.union([t.lazy(()=>gL),t.lazy(()=>CL)])}).strict(),gL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>g5).optional()}).strict(),CL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>A5).optional()}).strict(),aut=t.object({update:t.union([t.lazy(()=>AL),t.lazy(()=>SL)]),create:t.union([t.lazy(()=>xw),t.lazy(()=>jw)]),where:t.lazy(()=>O).optional()}).strict(),iut=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>AL),t.lazy(()=>SL)])}).strict(),AL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),SL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),lut=t.object({update:t.union([t.lazy(()=>TL),t.lazy(()=>PL)]),create:t.union([t.lazy(()=>Mw),t.lazy(()=>Zw)]),where:t.lazy(()=>v).optional()}).strict(),rut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>TL),t.lazy(()=>PL)])}).strict(),TL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),PL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),vw=t.object({email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),organization:t.lazy(()=>Ya).optional(),restaurant:t.lazy(()=>Ga).optional(),shifts:t.lazy(()=>$a).optional(),prepItems:t.lazy(()=>Ja).optional(),inventoryUpdates:t.lazy(()=>Ka).optional(),sessions:t.lazy(()=>Xa).optional(),leftoverItems:t.lazy(()=>ei).optional(),wasteRecords:t.lazy(()=>oi).optional(),productionPlans:t.lazy(()=>ni).optional(),productionPlanItems:t.lazy(()=>ai).optional(),availability:t.lazy(()=>ii).optional(),schedulingConstraints:t.lazy(()=>li).optional(),inventoryWithdrawals:t.lazy(()=>ri).optional(),checklistCompletes:t.lazy(()=>pi).optional(),customerFeedbackResponses:t.lazy(()=>ci).optional(),recipeVersionsCreated:t.lazy(()=>ui).optional(),recipeVersionsApproved:t.lazy(()=>si).optional(),InventoryTransactions:t.lazy(()=>yi).optional(),StockCounts:t.lazy(()=>di).optional()}).strict(),Ow=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),shifts:t.lazy(()=>zi).optional(),prepItems:t.lazy(()=>mi).optional(),inventoryUpdates:t.lazy(()=>bi).optional(),sessions:t.lazy(()=>hi).optional(),leftoverItems:t.lazy(()=>gi).optional(),wasteRecords:t.lazy(()=>Ci).optional(),productionPlans:t.lazy(()=>Ai).optional(),productionPlanItems:t.lazy(()=>Si).optional(),availability:t.lazy(()=>Ti).optional(),schedulingConstraints:t.lazy(()=>Pi).optional(),inventoryWithdrawals:t.lazy(()=>Ui).optional(),checklistCompletes:t.lazy(()=>Wi).optional(),customerFeedbackResponses:t.lazy(()=>Ri).optional(),recipeVersionsCreated:t.lazy(()=>ki).optional(),recipeVersionsApproved:t.lazy(()=>xi).optional(),InventoryTransactions:t.lazy(()=>ji).optional(),StockCounts:t.lazy(()=>Mi).optional()}).strict(),q3=t.object({where:t.lazy(()=>M),create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)])}).strict(),put=t.object({update:t.union([t.lazy(()=>UL),t.lazy(()=>WL)]),create:t.union([t.lazy(()=>vw),t.lazy(()=>Ow)]),where:t.lazy(()=>v).optional()}).strict(),cut=t.object({where:t.lazy(()=>v).optional(),data:t.union([t.lazy(()=>UL),t.lazy(()=>WL)])}).strict(),UL=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),WL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),fw=t.object({name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),organization:t.lazy(()=>El).optional(),users:t.lazy(()=>Ll).optional(),cookbooks:t.lazy(()=>Vl).optional(),inventory:t.lazy(()=>Hl).optional(),orders:t.lazy(()=>Ql).optional(),recipes:t.lazy(()=>Yl).optional(),salesTransactions:t.lazy(()=>$l).optional(),leftoverItems:t.lazy(()=>Jl).optional(),wasteRecords:t.lazy(()=>Kl).optional(),productionPlans:t.lazy(()=>Xl).optional(),equipments:t.lazy(()=>tr).optional(),qualityChecklists:t.lazy(()=>er).optional(),customerFeedbacks:t.lazy(()=>or).optional()}).strict(),ww=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),organizationId:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable(),users:t.lazy(()=>nr).optional(),cookbooks:t.lazy(()=>ar).optional(),inventory:t.lazy(()=>ir).optional(),orders:t.lazy(()=>lr).optional(),recipes:t.lazy(()=>rr).optional(),salesTransactions:t.lazy(()=>cr).optional(),leftoverItems:t.lazy(()=>ur).optional(),wasteRecords:t.lazy(()=>sr).optional(),productionPlans:t.lazy(()=>yr).optional(),equipments:t.lazy(()=>dr).optional(),qualityChecklists:t.lazy(()=>zr).optional(),customerFeedbacks:t.lazy(()=>mr).optional()}).strict(),F3=t.object({where:t.lazy(()=>X),create:t.union([t.lazy(()=>fw),t.lazy(()=>ww)])}).strict(),zy=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),my=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),bI=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Nw=t.object({data:t.union([t.lazy(()=>WQ),t.lazy(()=>WQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),by=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>I2).optional()}).strict(),hy=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menuItems:t.lazy(()=>g2).optional()}).strict(),hI=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),Bw=t.object({data:t.union([t.lazy(()=>RQ),t.lazy(()=>RQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),uut=t.object({update:t.union([t.lazy(()=>RL),t.lazy(()=>kL)]),create:t.union([t.lazy(()=>fw),t.lazy(()=>ww)]),where:t.lazy(()=>B).optional()}).strict(),sut=t.object({where:t.lazy(()=>B).optional(),data:t.union([t.lazy(()=>RL),t.lazy(()=>kL)])}).strict(),RL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),organization:t.lazy(()=>br).optional(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),kL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),gj=t.object({where:t.lazy(()=>x),update:t.union([t.lazy(()=>zK),t.lazy(()=>mK)]),create:t.union([t.lazy(()=>zy),t.lazy(()=>my)])}).strict(),Cj=t.object({where:t.lazy(()=>x),data:t.union([t.lazy(()=>zK),t.lazy(()=>mK)])}).strict(),Aj=t.object({where:t.lazy(()=>ao),data:t.union([t.lazy(()=>PS),t.lazy(()=>pyt)])}).strict(),Sj=t.object({where:t.lazy(()=>ee),update:t.union([t.lazy(()=>bK),t.lazy(()=>hK)]),create:t.union([t.lazy(()=>by),t.lazy(()=>hy)])}).strict(),Tj=t.object({where:t.lazy(()=>ee),data:t.union([t.lazy(()=>bK),t.lazy(()=>hK)])}).strict(),Pj=t.object({where:t.lazy(()=>_p),data:t.union([t.lazy(()=>_N),t.lazy(()=>cyt)])}).strict(),_p=t.object({AND:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),OR:t.lazy(()=>_p).array().optional(),NOT:t.union([t.lazy(()=>_p),t.lazy(()=>_p).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),name:t.union([t.lazy(()=>S),t.string()]).optional(),description:t.union([t.lazy(()=>T),t.string()]).optional().nullable(),displayOrder:t.union([t.lazy(()=>s),t.number()]).optional(),menuId:t.union([t.lazy(()=>s),t.number()]).optional(),isActive:t.union([t.lazy(()=>mt),t.boolean()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),qw=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),nutritionalInfo:t.lazy(()=>$z).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),Fw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),nutritionalInfo:t.lazy(()=>am).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),D3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)])}).strict(),Dw=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),_w=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),_3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)])}).strict(),yut=t.object({update:t.union([t.lazy(()=>xL),t.lazy(()=>jL)]),create:t.union([t.lazy(()=>qw),t.lazy(()=>Fw)]),where:t.lazy(()=>Pt).optional()}).strict(),dut=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>xL),t.lazy(()=>jL)])}).strict(),xL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),jL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),zut=t.object({update:t.union([t.lazy(()=>ML),t.lazy(()=>ZL)]),create:t.union([t.lazy(()=>Dw),t.lazy(()=>_w)]),where:t.lazy(()=>O).optional()}).strict(),mut=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>ML),t.lazy(()=>ZL)])}).strict(),ML=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),ZL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Ew=t.object({name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>mD),MenuCategory:t.lazy(()=>hD).optional()}).strict(),Lw=t.object({id:t.number().int().optional(),name:t.string(),restaurantId:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),MenuCategory:t.lazy(()=>gD).optional()}).strict(),E3=t.object({where:t.lazy(()=>Jt),create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)])}).strict(),Vw=t.object({name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),menu:t.lazy(()=>h2)}).strict(),Hw=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),menuId:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L3=t.object({where:t.lazy(()=>ee),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)])}).strict(),Iy=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),gy=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),II=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Cy=t.object({joinAt:t.coerce.date().optional(),recipe:t.lazy(()=>P5)}).strict(),Ay=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),gI=t.object({where:t.lazy(()=>Tt),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),Qw=t.object({data:t.union([t.lazy(()=>kQ),t.lazy(()=>kQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),yT=t.object({calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),dT=t.object({id:t.number().int().optional(),calories:t.number(),fat:t.number(),saturatedFat:t.number(),transFat:t.number(),cholesterol:t.number(),sodium:t.number(),carbohydrates:t.number(),fiber:t.number(),sugar:t.number(),protein:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Yw=t.object({where:t.lazy(()=>_l),create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)])}).strict(),Sy=t.object({recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),Ty=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),CI=t.object({where:t.lazy(()=>We),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Gw=t.object({data:t.union([t.lazy(()=>xQ),t.lazy(()=>xQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Py=t.object({posTransactionID:t.string().optional().nullable(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>d2)}).strict(),Uy=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AI=t.object({where:t.lazy(()=>ht),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),$w=t.object({data:t.union([t.lazy(()=>jQ),t.lazy(()=>jQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),Wy=t.object({date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>Nq),recordedBy:t.lazy(()=>qq)}).strict(),Ry=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),SI=t.object({where:t.lazy(()=>_),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),Jw=t.object({data:t.union([t.lazy(()=>MQ),t.lazy(()=>MQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),ky=t.object({rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),restaurant:t.lazy(()=>gq),respondedBy:t.lazy(()=>Aq).optional()}).strict(),xy=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TI=t.object({where:t.lazy(()=>F),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),Kw=t.object({data:t.union([t.lazy(()=>ZQ),t.lazy(()=>ZQ).array()]),skipDuplicates:t.boolean().optional()}).strict(),jy=t.object({name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>Wq).optional(),ingredients:t.lazy(()=>Rq).optional()}).strict(),My=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),icon:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),recipes:t.lazy(()=>xq).optional(),ingredients:t.lazy(()=>jq).optional()}).strict(),PI=t.object({where:t.lazy(()=>D),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),but=t.object({update:t.union([t.lazy(()=>vL),t.lazy(()=>OL)]),create:t.union([t.lazy(()=>Ew),t.lazy(()=>Lw)]),where:t.lazy(()=>fe).optional()}).strict(),hut=t.object({where:t.lazy(()=>fe).optional(),data:t.union([t.lazy(()=>vL),t.lazy(()=>OL)])}).strict(),vL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>CD).optional(),MenuCategory:t.lazy(()=>SD).optional()}).strict(),OL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),MenuCategory:t.lazy(()=>PD).optional()}).strict(),Iut=t.object({update:t.union([t.lazy(()=>fL),t.lazy(()=>wL)]),create:t.union([t.lazy(()=>Vw),t.lazy(()=>Hw)]),where:t.lazy(()=>we).optional()}).strict(),gut=t.object({where:t.lazy(()=>we).optional(),data:t.union([t.lazy(()=>fL),t.lazy(()=>wL)])}).strict(),fL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menu:t.lazy(()=>C2).optional()}).strict(),wL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Uj=t.object({where:t.lazy(()=>C),update:t.union([t.lazy(()=>IK),t.lazy(()=>gK)]),create:t.union([t.lazy(()=>Iy),t.lazy(()=>gy)])}).strict(),Wj=t.object({where:t.lazy(()=>C),data:t.union([t.lazy(()=>IK),t.lazy(()=>gK)])}).strict(),Rj=t.object({where:t.lazy(()=>pe),data:t.union([t.lazy(()=>WI),t.lazy(()=>uyt)])}).strict(),kj=t.object({where:t.lazy(()=>Tt),update:t.union([t.lazy(()=>CK),t.lazy(()=>AK)]),create:t.union([t.lazy(()=>Cy),t.lazy(()=>Ay)])}).strict(),xj=t.object({where:t.lazy(()=>Tt),data:t.union([t.lazy(()=>CK),t.lazy(()=>AK)])}).strict(),jj=t.object({where:t.lazy(()=>jl),data:t.union([t.lazy(()=>yM),t.lazy(()=>syt)])}).strict(),V3=t.object({update:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)]),create:t.union([t.lazy(()=>yT),t.lazy(()=>dT)]),where:t.lazy(()=>De).optional()}).strict(),H3=t.object({where:t.lazy(()=>De).optional(),data:t.union([t.lazy(()=>Xw),t.lazy(()=>tN)])}).strict(),Xw=t.object({calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tN=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),calories:t.union([t.number(),t.lazy(()=>r)]).optional(),fat:t.union([t.number(),t.lazy(()=>r)]).optional(),saturatedFat:t.union([t.number(),t.lazy(()=>r)]).optional(),transFat:t.union([t.number(),t.lazy(()=>r)]).optional(),cholesterol:t.union([t.number(),t.lazy(()=>r)]).optional(),sodium:t.union([t.number(),t.lazy(()=>r)]).optional(),carbohydrates:t.union([t.number(),t.lazy(()=>r)]).optional(),fiber:t.union([t.number(),t.lazy(()=>r)]).optional(),sugar:t.union([t.number(),t.lazy(()=>r)]).optional(),protein:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Mj=t.object({where:t.lazy(()=>We),update:t.union([t.lazy(()=>SK),t.lazy(()=>TK)]),create:t.union([t.lazy(()=>Sy),t.lazy(()=>Ty)])}).strict(),Zj=t.object({where:t.lazy(()=>We),data:t.union([t.lazy(()=>SK),t.lazy(()=>TK)])}).strict(),vj=t.object({where:t.lazy(()=>Ep),data:t.union([t.lazy(()=>JN),t.lazy(()=>yyt)])}).strict(),Ep=t.object({AND:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),OR:t.lazy(()=>Ep).array().optional(),NOT:t.union([t.lazy(()=>Ep),t.lazy(()=>Ep).array()]).optional(),id:t.union([t.lazy(()=>s),t.number()]).optional(),menuItemId:t.union([t.lazy(()=>s),t.number()]).optional(),recommendation:t.union([t.lazy(()=>S),t.string()]).optional(),createdAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional(),updatedAt:t.union([t.lazy(()=>z),t.coerce.date()]).optional()}).strict(),Oj=t.object({where:t.lazy(()=>ht),update:t.union([t.lazy(()=>PK),t.lazy(()=>UK)]),create:t.union([t.lazy(()=>Py),t.lazy(()=>Uy)])}).strict(),fj=t.object({where:t.lazy(()=>ht),data:t.union([t.lazy(()=>PK),t.lazy(()=>UK)])}).strict(),wj=t.object({where:t.lazy(()=>kl),data:t.union([t.lazy(()=>Xj),t.lazy(()=>dyt)])}).strict(),Nj=t.object({where:t.lazy(()=>_),update:t.union([t.lazy(()=>WK),t.lazy(()=>RK)]),create:t.union([t.lazy(()=>Wy),t.lazy(()=>Ry)])}).strict(),Bj=t.object({where:t.lazy(()=>_),data:t.union([t.lazy(()=>WK),t.lazy(()=>RK)])}).strict(),qj=t.object({where:t.lazy(()=>Da),data:t.union([t.lazy(()=>qT),t.lazy(()=>zyt)])}).strict(),Fj=t.object({where:t.lazy(()=>F),update:t.union([t.lazy(()=>kK),t.lazy(()=>xK)]),create:t.union([t.lazy(()=>ky),t.lazy(()=>xy)])}).strict(),Dj=t.object({where:t.lazy(()=>F),data:t.union([t.lazy(()=>kK),t.lazy(()=>xK)])}).strict(),_j=t.object({where:t.lazy(()=>Ea),data:t.union([t.lazy(()=>NT),t.lazy(()=>myt)])}).strict(),Ej=t.object({where:t.lazy(()=>D),update:t.union([t.lazy(()=>jK),t.lazy(()=>MK)]),create:t.union([t.lazy(()=>jy),t.lazy(()=>My)])}).strict(),Lj=t.object({where:t.lazy(()=>D),data:t.union([t.lazy(()=>jK),t.lazy(()=>MK)])}).strict(),Vj=t.object({where:t.lazy(()=>Qa),data:t.union([t.lazy(()=>BT),t.lazy(()=>byt)])}).strict(),eN=t.object({name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menu:t.lazy(()=>Hz),category:t.lazy(()=>Qz).optional(),recipes:t.lazy(()=>Yz).optional(),menuItemRecipes:t.lazy(()=>Gz).optional(),recommendations:t.lazy(()=>Jz).optional(),salesTransactions:t.lazy(()=>Kz).optional(),leftoverItems:t.lazy(()=>Xz).optional(),feedback:t.lazy(()=>tm).optional(),dietaryRestrictions:t.lazy(()=>em).optional()}).strict(),oN=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int(),categoryId:t.number().int().optional().nullable(),recipes:t.lazy(()=>om).optional(),menuItemRecipes:t.lazy(()=>nm).optional(),recommendations:t.lazy(()=>im).optional(),salesTransactions:t.lazy(()=>lm).optional(),leftoverItems:t.lazy(()=>rm).optional(),feedback:t.lazy(()=>pm).optional(),dietaryRestrictions:t.lazy(()=>cm).optional()}).strict(),Q3=t.object({where:t.lazy(()=>x),create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)])}).strict(),Cut=t.object({update:t.union([t.lazy(()=>NL),t.lazy(()=>BL)]),create:t.union([t.lazy(()=>eN),t.lazy(()=>oN)]),where:t.lazy(()=>Pt).optional()}).strict(),Aut=t.object({where:t.lazy(()=>Pt).optional(),data:t.union([t.lazy(()=>NL),t.lazy(()=>BL)])}).strict(),NL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),BL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),nN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),prepHistory:t.lazy(()=>ho).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),aN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),prepHistory:t.lazy(()=>qo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),Y3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)])}).strict(),Sut=t.object({update:t.union([t.lazy(()=>qL),t.lazy(()=>FL)]),create:t.union([t.lazy(()=>nN),t.lazy(()=>aN)]),where:t.lazy(()=>O).optional()}).strict(),Tut=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>qL),t.lazy(()=>FL)])}).strict(),qL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),FL=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),iN=t.object({name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),restaurant:t.lazy(()=>uo),cookBook:t.lazy(()=>so),ingredients:t.lazy(()=>yo).optional(),instructions:t.lazy(()=>zo).optional(),menuItems:t.lazy(()=>mo).optional(),foodCostHistory:t.lazy(()=>bo).optional(),prepBoards:t.lazy(()=>Io).optional(),prepItems:t.lazy(()=>go).optional(),menuItemRecipes:t.lazy(()=>Co).optional(),productionPlanItems:t.lazy(()=>Ao).optional(),withdrawals:t.lazy(()=>So).optional(),tags:t.lazy(()=>To).optional(),versions:t.lazy(()=>Po).optional(),equipments:t.lazy(()=>Uo).optional(),dietaryRestrictions:t.lazy(()=>Wo).optional(),temperatures:t.lazy(()=>Ro).optional(),yields:t.lazy(()=>ko).optional(),laborCosts:t.lazy(()=>xo).optional(),nutritionalInfo:t.lazy(()=>jo).optional(),criticalPoints:t.lazy(()=>Mo).optional(),storage:t.lazy(()=>Zo).optional(),photos:t.lazy(()=>vo).optional(),recipeStats:t.lazy(()=>Oo).optional()}).strict(),lN=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional(),ingredients:t.lazy(()=>fo).optional(),instructions:t.lazy(()=>wo).optional(),menuItems:t.lazy(()=>No).optional(),foodCostHistory:t.lazy(()=>Bo).optional(),prepBoards:t.lazy(()=>Fo).optional(),prepItems:t.lazy(()=>Do).optional(),menuItemRecipes:t.lazy(()=>_o).optional(),productionPlanItems:t.lazy(()=>Eo).optional(),withdrawals:t.lazy(()=>Lo).optional(),tags:t.lazy(()=>Vo).optional(),versions:t.lazy(()=>Ho).optional(),equipments:t.lazy(()=>Qo).optional(),dietaryRestrictions:t.lazy(()=>Yo).optional(),temperatures:t.lazy(()=>Go).optional(),yields:t.lazy(()=>$o).optional(),laborCosts:t.lazy(()=>Jo).optional(),nutritionalInfo:t.lazy(()=>Ko).optional(),criticalPoints:t.lazy(()=>Xo).optional(),storage:t.lazy(()=>tn).optional(),photos:t.lazy(()=>en).optional(),recipeStats:t.lazy(()=>on).optional()}).strict(),G3=t.object({where:t.lazy(()=>C),create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)])}).strict(),Put=t.object({update:t.union([t.lazy(()=>DL),t.lazy(()=>_L)]),create:t.union([t.lazy(()=>iN),t.lazy(()=>lN)]),where:t.lazy(()=>O).optional()}).strict(),Uut=t.object({where:t.lazy(()=>O).optional(),data:t.union([t.lazy(()=>DL),t.lazy(()=>_L)])}).strict(),DL=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),_L=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),oH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),menuId:t.number().int()}).strict(),$3=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),J3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),Wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),nH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional()}).strict(),aH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),K3=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>IF).optional(),ingredient:t.lazy(()=>gF).optional()}).strict(),X3=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t8=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>UF).optional(),equipment:t.lazy(()=>RF).optional()}).strict(),e8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>kF).optional()}).strict(),kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),iH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),lH=t.object({id:t.number().int().optional(),date:t.coerce.date().optional(),type:t.lazy(()=>ce),description:t.string(),cost:t.number().optional().nullable(),performedBy:t.string(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),o8=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>KB).optional(),RecipeInstruction:t.lazy(()=>tq).optional()}).strict(),n8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),a8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),i8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),type:t.union([t.lazy(()=>ce),t.lazy(()=>AC)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),performedBy:t.union([t.string(),t.lazy(()=>a)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rH=t.object({id:t.number().int().optional(),description:t.string(),order:t.number().int(),type:t.lazy(()=>Ht),requiredPhotos:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pH=t.object({id:t.number().int().optional(),completedById:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),l8=t.object({description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>R2).optional()}).strict(),r8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completions:t.lazy(()=>k2).optional()}).strict(),Mut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),order:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ht),t.lazy(()=>Qm)]).optional(),requiredPhotos:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),p8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedBy:t.lazy(()=>bq).optional(),items:t.lazy(()=>hq).optional()}).strict(),c8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Iq).optional()}).strict(),Zut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),completedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cH=t.object({id:t.number().int().optional(),checklistCompleteId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),u8=t.object({status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistComplete:t.lazy(()=>M2).optional()}).strict(),s8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistCompleteId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uH=t.object({id:t.number().int().optional(),checklistItemId:t.number().int(),status:t.lazy(()=>Vt),notes:t.string().optional().nullable(),photoUrls:t.union([t.lazy(()=>Ym),t.string().array()]).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),y8=t.object({status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklistItem:t.lazy(()=>Z2).optional()}).strict(),d8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Out=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Vt),t.lazy(()=>Lz)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),photoUrls:t.union([t.lazy(()=>Vz),t.string().array()]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional()}).strict(),m8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional()}).strict(),fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),b8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),h8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),wut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),I8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),vendors:t.lazy(()=>$I).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional()}).strict(),g8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),vendors:t.lazy(()=>ag).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional()}).strict(),Nut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),C8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),A8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),But=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),sH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),S8=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>rF).optional(),assignedTo:t.lazy(()=>pF).optional()}).strict(),T8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yH=t.object({id:t.number().int().optional(),ingredientId:t.number().int()}).strict(),P8=t.object({ingredient:t.lazy(()=>q2).optional()}).strict(),U8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Fut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),dH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),address:t.string(),city:t.string(),zipCode:t.string(),state:t.string(),owner:t.string(),foodCost:t.number().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional(),isDeleted:t.boolean().optional(),deleted:t.coerce.date().optional().nullable()}).strict(),zH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),restaurantId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),W8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>hr).optional(),cookbooks:t.lazy(()=>Ir).optional(),inventory:t.lazy(()=>gr).optional(),orders:t.lazy(()=>Cr).optional(),recipes:t.lazy(()=>Ar).optional(),menus:t.lazy(()=>Sr).optional(),salesTransactions:t.lazy(()=>Tr).optional(),leftoverItems:t.lazy(()=>Pr).optional(),wasteRecords:t.lazy(()=>Ur).optional(),productionPlans:t.lazy(()=>Wr).optional(),equipments:t.lazy(()=>Rr).optional(),qualityChecklists:t.lazy(()=>kr).optional(),customerFeedbacks:t.lazy(()=>xr).optional()}).strict(),R8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),users:t.lazy(()=>jr).optional(),cookbooks:t.lazy(()=>Mr).optional(),inventory:t.lazy(()=>Zr).optional(),orders:t.lazy(()=>vr).optional(),recipes:t.lazy(()=>Or).optional(),menus:t.lazy(()=>fr).optional(),salesTransactions:t.lazy(()=>wr).optional(),leftoverItems:t.lazy(()=>Nr).optional(),wasteRecords:t.lazy(()=>Br).optional(),productionPlans:t.lazy(()=>qr).optional(),equipments:t.lazy(()=>Fr).optional(),qualityChecklists:t.lazy(()=>Dr).optional(),customerFeedbacks:t.lazy(()=>_r).optional()}).strict(),Dut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),address:t.union([t.string(),t.lazy(()=>a)]).optional(),city:t.union([t.string(),t.lazy(()=>a)]).optional(),zipCode:t.union([t.string(),t.lazy(()=>a)]).optional(),state:t.union([t.string(),t.lazy(()=>a)]).optional(),owner:t.union([t.string(),t.lazy(()=>a)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),deleted:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),k8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>vi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),x8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),_ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),bH=t.object({id:t.number().int().optional(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),hH=t.object({id:t.number().int().optional(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),createdById:t.number().int(),notes:t.string().optional().nullable()}).strict(),j8=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),ingredient:t.lazy(()=>$S).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>XS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),M8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),withdrawals:t.lazy(()=>oT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),Eut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),Z8=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),item:t.lazy(()=>vF).optional(),createdBy:t.lazy(()=>OF).optional()}).strict(),v8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Lut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O8=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdBy:t.lazy(()=>FF).optional(),items:t.lazy(()=>DF).optional()}).strict(),f8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>_F).optional()}).strict(),Vut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),IH=t.object({id:t.number().int().optional(),email:t.string(),sub:t.number().int().optional().nullable(),passwordHash:t.string(),firstName:t.string(),lastName:t.string(),profileImage:t.string().optional().nullable(),verified:t.boolean().optional(),role:t.lazy(()=>j),organizationId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gH=t.object({id:t.number().int().optional(),name:t.string(),imageUrl:t.string().optional().nullable(),category:t.string()}).strict(),CH=t.object({id:t.number().int().optional(),vendorId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),AH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),cookBookId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),SH=t.object({id:t.number().int().optional(),name:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TH=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),menuItemId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),PH=t.object({id:t.number().int().optional(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),UH=t.object({id:t.number().int().optional(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),WH=t.object({id:t.number().int().optional(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),RH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),model:t.string().optional().nullable(),serialNumber:t.string().optional().nullable(),purchaseDate:t.coerce.date().optional().nullable(),lastMaintenance:t.coerce.date().optional().nullable(),nextMaintenance:t.coerce.date().optional().nullable(),status:t.lazy(()=>Ft).optional(),location:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kH=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),frequency:t.lazy(()=>Dt).optional(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),xH=t.object({id:t.number().int().optional(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),w8=t.object({email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),organization:t.lazy(()=>Zi).optional(),shifts:t.lazy(()=>Oi).optional(),prepItems:t.lazy(()=>fi).optional(),inventoryUpdates:t.lazy(()=>wi).optional(),sessions:t.lazy(()=>Ni).optional(),passwordResets:t.lazy(()=>Bi).optional(),leftoverItems:t.lazy(()=>qi).optional(),wasteRecords:t.lazy(()=>Fi).optional(),productionPlans:t.lazy(()=>Di).optional(),productionPlanItems:t.lazy(()=>_i).optional(),availability:t.lazy(()=>Ei).optional(),schedulingConstraints:t.lazy(()=>Li).optional(),inventoryWithdrawals:t.lazy(()=>Vi).optional(),checklistCompletes:t.lazy(()=>Hi).optional(),customerFeedbackResponses:t.lazy(()=>Qi).optional(),recipeVersionsCreated:t.lazy(()=>Yi).optional(),recipeVersionsApproved:t.lazy(()=>Gi).optional(),InventoryTransactions:t.lazy(()=>$i).optional(),StockCounts:t.lazy(()=>Ji).optional()}).strict(),N8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),shifts:t.lazy(()=>Ki).optional(),prepItems:t.lazy(()=>Xi).optional(),inventoryUpdates:t.lazy(()=>tl).optional(),sessions:t.lazy(()=>el).optional(),passwordResets:t.lazy(()=>ol).optional(),leftoverItems:t.lazy(()=>nl).optional(),wasteRecords:t.lazy(()=>al).optional(),productionPlans:t.lazy(()=>il).optional(),productionPlanItems:t.lazy(()=>ll).optional(),availability:t.lazy(()=>rl).optional(),schedulingConstraints:t.lazy(()=>pl).optional(),inventoryWithdrawals:t.lazy(()=>cl).optional(),checklistCompletes:t.lazy(()=>ul).optional(),customerFeedbackResponses:t.lazy(()=>sl).optional(),recipeVersionsCreated:t.lazy(()=>yl).optional(),recipeVersionsApproved:t.lazy(()=>dl).optional(),InventoryTransactions:t.lazy(()=>zl).optional(),StockCounts:t.lazy(()=>ml).optional()}).strict(),Hut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),sub:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),passwordHash:t.union([t.string(),t.lazy(()=>a)]).optional(),firstName:t.union([t.string(),t.lazy(()=>a)]).optional(),lastName:t.union([t.string(),t.lazy(()=>a)]).optional(),profileImage:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),verified:t.union([t.boolean(),t.lazy(()=>y)]).optional(),role:t.union([t.lazy(()=>j),t.lazy(()=>ft)]).optional(),organizationId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>K2).optional()}).strict(),q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),recipes:t.lazy(()=>t5).optional()}).strict(),Qut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),category:t.union([t.string(),t.lazy(()=>a)]).optional()}).strict(),F8=t.object({status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>YF).optional(),items:t.lazy(()=>GF).optional()}).strict(),D8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>$F).optional()}).strict(),Yut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),E8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Gut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),L8=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>AD).optional(),MenuCategory:t.lazy(()=>SD).optional()}).strict(),V8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>TD).optional(),MenuCategory:t.lazy(()=>PD).optional()}).strict(),$ut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),H8=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>b2).optional()}).strict(),Q8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Y8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Dq).optional(),recordedBy:t.lazy(()=>_q).optional()}).strict(),G8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingrediente:t.lazy(()=>Qq).optional(),recordedBy:t.lazy(()=>Yq).optional()}).strict(),J8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Xut=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K8=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdBy:t.lazy(()=>tF).optional(),items:t.lazy(()=>eF).optional()}).strict(),X8=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oF).optional()}).strict(),tst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),t7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>VB).optional(),maintenanceLogs:t.lazy(()=>HB).optional()}).strict(),e7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>QB).optional(),maintenanceLogs:t.lazy(()=>YB).optional()}).strict(),est=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),model:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),serialNumber:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),purchaseDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),nextMaintenance:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),status:t.union([t.lazy(()=>Ft),t.lazy(()=>bp)]).optional(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),o7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>rq).optional(),completions:t.lazy(()=>pq).optional()}).strict(),n7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>cq).optional(),completions:t.lazy(()=>uq).optional()}).strict(),ost=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),frequency:t.union([t.lazy(()=>Dt),t.lazy(()=>hp)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),a7=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>Tq).optional(),respondedBy:t.lazy(()=>Pq).optional()}).strict(),i7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),nst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jH=t.object({id:t.number().int().optional(),startTime:t.coerce.date(),endTime:t.coerce.date(),status:t.lazy(()=>Qt)}).strict(),MH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et)}).strict(),ZH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),vH=t.object({id:t.string().uuid().optional(),code:t.string(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional()}).strict(),OH=t.object({id:t.number().int().optional(),token:t.string(),expiresAt:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),fH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),menuItemId:t.number().int(),quantity:t.number().int(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),wH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),reason:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),NH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),status:t.lazy(()=>wt).optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),BH=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),recipeId:t.number().int(),quantity:t.number().int(),unit:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),qH=t.object({id:t.number().int().optional(),dayOfWeek:t.lazy(()=>se),startTime:t.coerce.date(),endTime:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),FH=t.object({id:t.number().int().optional(),date:t.coerce.date(),constraintsType:t.lazy(()=>ye),startTime:t.coerce.date(),endTime:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),DH=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),_H=t.object({id:t.number().int().optional(),checklistId:t.number().int(),date:t.coerce.date(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),EH=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),menuItemId:t.number().int().optional().nullable(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),LH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),VH=t.object({id:t.number().int().optional(),recipeId:t.number().int(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),HH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),itemId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional()}).strict(),QH=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),status:t.lazy(()=>Nt),startedAt:t.coerce.date(),completedAt:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable()}).strict(),l7=t.object({startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional(),tasks:t.lazy(()=>d5).optional()}).strict(),r7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional(),tasks:t.lazy(()=>z5).optional()}).strict(),ast=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>Qt),t.lazy(()=>Gm)]).optional()}).strict(),p7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>yD).optional(),recipe:t.lazy(()=>dD).optional()}).strict(),c7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional()}).strict(),ist=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional()}).strict(),u7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),ingredient:t.lazy(()=>$S).optional(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>XS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),s7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),withdrawals:t.lazy(()=>oT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),lst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),y7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),d7=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),rst=t.object({id:t.union([t.string().uuid(),t.lazy(()=>a)]).optional(),code:t.union([t.string(),t.lazy(()=>a)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),z7=t.object({token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),m7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),token:t.union([t.string(),t.lazy(()=>a)]).optional(),expiresAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),b7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Fq).optional(),menuItem:t.lazy(()=>Dq).optional()}).strict(),h7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),I7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Hq).optional(),ingrediente:t.lazy(()=>Qq).optional()}).strict(),g7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ust=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),C7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Xq).optional(),items:t.lazy(()=>eF).optional()}).strict(),A7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>oF).optional()}).strict(),sst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),status:t.union([t.lazy(()=>wt),t.lazy(()=>rp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),S7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>lF).optional(),recipe:t.lazy(()=>rF).optional()}).strict(),T7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),P7=t.object({dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),U7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dayOfWeek:t.union([t.lazy(()=>se),t.lazy(()=>TC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),W7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),R7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),constraintsType:t.union([t.lazy(()=>ye),t.lazy(()=>PC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),k7=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>yF).optional(),recipe:t.lazy(()=>dF).optional()}).strict(),x7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),mst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),j7=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),checklist:t.lazy(()=>mq).optional(),items:t.lazy(()=>hq).optional()}).strict(),M7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>Iq).optional()}).strict(),bst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),checklistId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Z7=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Sq).optional(),menuItem:t.lazy(()=>Tq).optional()}).strict(),v7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),hst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),O7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tP).optional(),ingredients:t.lazy(()=>eP).optional(),instructions:t.lazy(()=>oP).optional(),approvedBy:t.lazy(()=>aP).optional()}).strict(),f7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>iP).optional(),instructions:t.lazy(()=>lP).optional()}).strict(),Ist=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),w7=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>tP).optional(),ingredients:t.lazy(()=>eP).optional(),instructions:t.lazy(()=>oP).optional(),createdBy:t.lazy(()=>nP).optional()}).strict(),N7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>iP).optional(),instructions:t.lazy(()=>lP).optional()}).strict(),gst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),B7=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>ZF).optional(),item:t.lazy(()=>vF).optional()}).strict(),q7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Cst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),F7=t.object({status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),inventory:t.lazy(()=>qF).optional(),items:t.lazy(()=>DF).optional()}).strict(),D7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),items:t.lazy(()=>_F).optional()}).strict(),Ast=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Nt),t.lazy(()=>up)]).optional(),startedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),completedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),YH=t.object({id:t.number().int().optional(),name:t.string(),imageUrls:t.union([t.lazy(()=>Ut),t.string().array()]).optional(),description:t.string().optional().nullable(),servings:t.number().int(),cookTime:t.number().int(),prepTime:t.number().int(),frequency:t.number().int().optional().nullable(),restaurantId:t.number().int(),foodCost:t.number().optional().nullable(),isDeleted:t.boolean().optional(),isPublished:t.boolean().optional(),publishedAt:t.coerce.date().optional().nullable(),language:t.string().optional(),skillLevel:t.lazy(()=>W).optional(),category:t.lazy(()=>U).optional()}).strict(),_7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),E7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),Sst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),GH=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),$H=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),instruction:t.string(),imageUrl:t.string().optional().nullable(),recipeVersionId:t.number().int().optional().nullable(),timeInMinutes:t.number().int().optional().nullable(),temperature:t.number().optional().nullable(),temperatureUnit:t.string().optional().nullable(),isCritical:t.boolean().optional(),techniqueTips:t.string().optional().nullable(),warningNotes:t.string().optional().nullable()}).strict(),JH=t.object({id:t.number().int().optional(),cost:t.number(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),KH=t.object({id:t.number().int().optional(),quantity:t.number().int(),date:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),XH=t.object({id:t.number().int().optional(),prepBoardId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),tQ=t.object({id:t.number().int().optional(),menuItemId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),eQ=t.object({id:t.number().int().optional(),productionPlanId:t.number().int(),quantity:t.number().int(),unit:t.string(),assignedToId:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oQ=t.object({id:t.number().int().optional(),inventoryItemId:t.number().int(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),nQ=t.object({id:t.number().int().optional(),versionNumber:t.number().int(),description:t.string().optional().nullable(),changes:t.string().optional().nullable(),isActive:t.boolean().optional(),createdById:t.number().int(),approvedById:t.number().int().optional().nullable(),approvedAt:t.coerce.date().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),aQ=t.object({id:t.number().int().optional(),equipmentId:t.number().int(),notes:t.string().optional().nullable(),recipeInstructionId:t.number().int().optional().nullable()}).strict(),iQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),minTemp:t.number(),maxTemp:t.number(),isCritical:t.boolean().optional(),holdTime:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),lQ=t.object({id:t.number().int().optional(),expectedYield:t.number(),actualYield:t.number().optional().nullable(),unit:t.string(),wastagePercent:t.number().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),rQ=t.object({id:t.number().int().optional(),prepTime:t.number().int(),cookTime:t.number().int(),laborRate:t.number(),totalLaborCost:t.number(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pQ=t.object({id:t.number().int().optional(),stepNumber:t.number().int(),description:t.string(),threshold:t.number().optional().nullable(),unit:t.string().optional().nullable(),action:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),cQ=t.object({id:t.number().int().optional(),url:t.string(),type:t.lazy(()=>de),stepNumber:t.number().int().optional().nullable(),description:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),L7=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>gF).optional(),recipeVersion:t.lazy(()=>CF).optional()}).strict(),V7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),Tst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),H7=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),RecipeVersion:t.lazy(()=>WF).optional(),equipment:t.lazy(()=>RF).optional()}).strict(),Q7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>kF).optional()}).strict(),Pst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),instruction:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrl:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),timeInMinutes:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),temperature:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),temperatureUnit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),techniqueTips:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),warningNotes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Y7=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menu:t.lazy(()=>um).optional(),category:t.lazy(()=>sm).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),G7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),Ust=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),menuId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),$7=t.object({cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),J7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Wst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cost:t.union([t.number(),t.lazy(()=>r)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),K7=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),X7=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Rst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),tJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>C5).optional()}).strict(),eJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),prepItems:t.lazy(()=>S5).optional()}).strict(),kst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),oJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),prepBoard:t.lazy(()=>yD).optional(),assignedTo:t.lazy(()=>zD).optional()}).strict(),nJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),xst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepBoardId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),aJ=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItem:t.lazy(()=>U5).optional()}).strict(),iJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),menuItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),lJ=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),productionPlan:t.lazy(()=>lF).optional(),assignedTo:t.lazy(()=>pF).optional()}).strict(),rJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Mst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),productionPlanId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),pJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventoryItem:t.lazy(()=>yF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),cJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Zst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryItemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),sJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),vst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yJ=t.object({versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>eP).optional(),instructions:t.lazy(()=>oP).optional(),createdBy:t.lazy(()=>nP).optional(),approvedBy:t.lazy(()=>aP).optional()}).strict(),dJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredients:t.lazy(()=>iP).optional(),instructions:t.lazy(()=>lP).optional()}).strict(),Ost=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),versionNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),changes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),approvedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),approvedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),equipment:t.lazy(()=>XB).optional(),RecipeInstruction:t.lazy(()=>tq).optional()}).strict(),mJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),fst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipeInstructionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),bJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Mq).optional(),ingredients:t.lazy(()=>vq).optional()}).strict(),hJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Oq).optional(),ingredients:t.lazy(()=>wq).optional()}).strict(),wst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),IJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),gJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Nst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),minTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),maxTemp:t.union([t.number(),t.lazy(()=>r)]).optional(),isCritical:t.union([t.boolean(),t.lazy(()=>y)]).optional(),holdTime:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),CJ=t.object({expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),AJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Bst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedYield:t.union([t.number(),t.lazy(()=>r)]).optional(),actualYield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),wastagePercent:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SJ=t.object({prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),qst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),laborRate:t.union([t.number(),t.lazy(()=>r)]).optional(),totalLaborCost:t.union([t.number(),t.lazy(()=>r)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PJ=t.object({stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Fst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>n)]).optional(),description:t.union([t.string(),t.lazy(()=>a)]).optional(),threshold:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),unit:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),action:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WJ=t.object({url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),RJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Dst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),url:t.union([t.string(),t.lazy(()=>a)]).optional(),type:t.union([t.lazy(()=>de),t.lazy(()=>CC)]).optional(),stepNumber:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),uQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number(),unit:t.string(),processingInstructions:t.string().optional().nullable(),substituteIngredients:t.union([t.lazy(()=>cp),t.number().int().array()]).optional(),isOptional:t.boolean().optional(),notes:t.string().optional().nullable(),cost:t.number().optional().nullable(),density:t.number().optional().nullable(),yield:t.number().optional().nullable(),joinAt:t.coerce.date().optional(),recipeVersionId:t.number().int().optional().nullable()}).strict(),sQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),quantity:t.number(),unit:t.string(),minQuantity:t.number(),restockThreshold:t.number(),lastCountDate:t.coerce.date().optional().nullable(),lastOrderDate:t.coerce.date().optional().nullable(),lastUpdatedById:t.number().int().optional().nullable(),lastUpdated:t.coerce.date().optional(),par:t.number(),reorderPoint:t.number(),maxQuantity:t.number().optional().nullable(),location:t.string().optional().nullable(),barcode:t.string().optional().nullable(),notes:t.string().optional().nullable(),currentPrice:t.number(),averageCost:t.number(),lastPurchasePrice:t.number().optional().nullable()}).strict(),yQ=t.object({id:t.number().int().optional(),orderId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),dQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number(),unit:t.string(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zQ=t.object({id:t.number().int().optional(),allergenId:t.number().int()}).strict(),mQ=t.object({id:t.number().int().optional(),vendorId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),kJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>IF).optional(),recipeVersion:t.lazy(()=>CF).optional()}).strict(),xJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),_st=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),processingInstructions:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),substituteIngredients:t.union([t.lazy(()=>Yr),t.number().int().array()]).optional(),isOptional:t.union([t.boolean(),t.lazy(()=>y)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),yield:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipeVersionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),jJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),inventory:t.lazy(()=>GS).optional(),lastUpdatedBy:t.lazy(()=>JS).optional(),transactions:t.lazy(()=>KS).optional(),withdrawals:t.lazy(()=>XS).optional(),stockCounts:t.lazy(()=>tT).optional()}).strict(),MJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),transactions:t.lazy(()=>eT).optional(),withdrawals:t.lazy(()=>oT).optional(),stockCounts:t.lazy(()=>nT).optional()}).strict(),Est=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),minQuantity:t.union([t.number(),t.lazy(()=>r)]).optional(),restockThreshold:t.union([t.number(),t.lazy(()=>r)]).optional(),lastCountDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastOrderDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),lastUpdatedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),lastUpdated:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),par:t.union([t.number(),t.lazy(()=>r)]).optional(),reorderPoint:t.union([t.number(),t.lazy(()=>r)]).optional(),maxQuantity:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),location:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),barcode:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),currentPrice:t.union([t.number(),t.lazy(()=>r)]).optional(),averageCost:t.union([t.number(),t.lazy(()=>r)]).optional(),lastPurchasePrice:t.union([t.number(),t.lazy(()=>u)]).optional().nullable()}).strict(),ZJ=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),order:t.lazy(()=>r5).optional()}).strict(),vJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),Lst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),orderId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),OJ=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>nD).optional(),supplierPriceHistory:t.lazy(()=>iD).optional()}).strict(),fJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),orders:t.lazy(()=>lD).optional(),supplierPriceHistory:t.lazy(()=>pD).optional()}).strict(),Vst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),contact:t.union([t.string(),t.lazy(()=>a)]).optional(),email:t.union([t.string(),t.lazy(()=>a)]).optional(),phone:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),wJ=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Hq).optional(),recordedBy:t.lazy(()=>Yq).optional()}).strict(),NJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Hst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),BJ=t.object({allergen:t.lazy(()=>F2).optional()}).strict(),qJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),Qst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),allergenId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),FJ=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),vendor:t.lazy(()=>f2).optional()}).strict(),DJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Yst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),vendorId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),_J=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Mq).optional(),recipes:t.lazy(()=>Zq).optional()}).strict(),EJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>Oq).optional(),recipes:t.lazy(()=>fq).optional()}).strict(),Gst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),bQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),equipmentId:t.number().int(),notes:t.string().optional().nullable()}).strict(),LJ=t.object({notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),recipe:t.lazy(()=>KB).optional(),equipment:t.lazy(()=>XB).optional()}).strict(),VJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),$st=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),equipmentId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),hQ=t.object({id:t.number().int().optional(),inventoryId:t.number().int(),type:t.lazy(()=>Ot),quantity:t.number(),unit:t.string(),previousQty:t.number(),newQty:t.number(),cost:t.number().optional().nullable(),reference:t.string().optional().nullable(),notes:t.string().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional()}).strict(),IQ=t.object({id:t.number().int().optional(),dateTime:t.coerce.date(),quantity:t.number(),unit:t.string(),recipeId:t.number().int().optional().nullable(),createdById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),gQ=t.object({id:t.number().int().optional(),stockCountId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),HJ=t.object({type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),inventory:t.lazy(()=>ZF).optional(),createdBy:t.lazy(()=>OF).optional()}).strict(),QJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Jst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),inventoryId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),type:t.union([t.lazy(()=>Ot),t.lazy(()=>Gr)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),previousQty:t.union([t.number(),t.lazy(()=>r)]).optional(),newQty:t.union([t.number(),t.lazy(()=>r)]).optional(),cost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),reference:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),YJ=t.object({dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>dF).optional(),createdBy:t.lazy(()=>zF).optional()}).strict(),GJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),Kst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),dateTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),$J=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),stockCount:t.lazy(()=>n5).optional()}).strict(),JJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),Xst=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),stockCountId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),CQ=t.object({id:t.number().int().optional(),itemId:t.number().int(),expectedQty:t.number(),actualQty:t.number(),difference:t.number(),notes:t.string().optional().nullable()}).strict(),KJ=t.object({expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),item:t.lazy(()=>a5).optional()}).strict(),XJ=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),tyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),itemId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),expectedQty:t.union([t.number(),t.lazy(()=>r)]).optional(),actualQty:t.union([t.number(),t.lazy(()=>r)]).optional(),difference:t.union([t.number(),t.lazy(()=>r)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable()}).strict(),AQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),quantity:t.number(),unit:t.string(),price:t.number()}).strict(),tK=t.object({quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),ingredient:t.lazy(()=>p5).optional()}).strict(),eK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),eyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional()}).strict(),SQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),status:t.lazy(()=>Bt),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),TQ=t.object({id:t.number().int().optional(),ingredientId:t.number().int(),price:t.number(),unit:t.string(),startDate:t.coerce.date(),endDate:t.coerce.date().optional().nullable(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),oK=t.object({status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>QF).optional(),items:t.lazy(()=>GF).optional()}).strict(),nK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),items:t.lazy(()=>$F).optional()}).strict(),oyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>Bt),t.lazy(()=>sp)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),aK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>QI).optional(),inventoryItems:t.lazy(()=>YI).optional(),orderItems:t.lazy(()=>GI).optional(),WasteRecords:t.lazy(()=>JI).optional(),IngredientAllergens:t.lazy(()=>KI).optional(),priceHistory:t.lazy(()=>XI).optional(),DietaryRestrictions:t.lazy(()=>tg).optional()}).strict(),iK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),recipeIngredients:t.lazy(()=>eg).optional(),inventoryItems:t.lazy(()=>og).optional(),orderItems:t.lazy(()=>ng).optional(),WasteRecords:t.lazy(()=>ig).optional(),IngredientAllergens:t.lazy(()=>lg).optional(),priceHistory:t.lazy(()=>rg).optional(),DietaryRestrictions:t.lazy(()=>pg).optional()}).strict(),nyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),category:t.union([t.string(),t.lazy(()=>a)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),density:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),dietaryRestrictionId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),calories:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),protein:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),carbohydrates:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fat:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),fiber:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sugar:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),sodium:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),usdaFoodId:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),nutritionSource:t.union([t.lazy(()=>nt),t.lazy(()=>ta)]).optional().nullable(),nutritionUpdatedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable()}).strict(),lK=t.object({price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),ingredient:t.lazy(()=>w2).optional()}).strict(),rK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),ayt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),ingredientId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),unit:t.union([t.string(),t.lazy(()=>a)]).optional(),startDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endDate:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PQ=t.object({id:t.number().int().optional(),taskType:t.lazy(()=>ue),startTime:t.coerce.date(),endTime:t.coerce.date(),duration:t.number().int(),notes:t.string().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),pK=t.object({taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),cK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),iyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),taskType:t.union([t.lazy(()=>ue),t.lazy(()=>SC)]).optional(),startTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),endTime:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),duration:t.union([t.number().int(),t.lazy(()=>n)]).optional(),notes:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),UQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),quantity:t.number().int(),status:t.lazy(()=>et),assignedToId:t.number().int()}).strict(),uK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),menuItems:t.lazy(()=>pn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),sK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),menuItems:t.lazy(()=>jn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),lyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),yK=t.object({quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),recipe:t.lazy(()=>dD).optional(),assignedTo:t.lazy(()=>zD).optional()}).strict(),dK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),ryt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),status:t.union([t.lazy(()=>et),t.lazy(()=>ea)]).optional(),assignedToId:t.union([t.number().int(),t.lazy(()=>n)]).optional()}).strict(),WQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),price:t.number(),foodCost:t.number(),isActive:t.boolean().optional(),recipeIds:t.union([t.lazy(()=>io),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>lo),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>ro),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>po),t.string().array()]).optional(),categoryId:t.number().int().optional().nullable()}).strict(),RQ=t.object({id:t.number().int().optional(),name:t.string(),description:t.string().optional().nullable(),displayOrder:t.number().int(),isActive:t.boolean().optional(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),zK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),category:t.lazy(()=>sm).optional(),recipes:t.lazy(()=>ym).optional(),menuItemRecipes:t.lazy(()=>dm).optional(),nutritionalInfo:t.lazy(()=>zm).optional(),recommendations:t.lazy(()=>mm).optional(),salesTransactions:t.lazy(()=>bm).optional(),leftoverItems:t.lazy(()=>hm).optional(),feedback:t.lazy(()=>Im).optional(),dietaryRestrictions:t.lazy(()=>gm).optional()}).strict(),mK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),recipes:t.lazy(()=>Cm).optional(),menuItemRecipes:t.lazy(()=>Am).optional(),nutritionalInfo:t.lazy(()=>Sm).optional(),recommendations:t.lazy(()=>Tm).optional(),salesTransactions:t.lazy(()=>Pm).optional(),leftoverItems:t.lazy(()=>Um).optional(),feedback:t.lazy(()=>Wm).optional(),dietaryRestrictions:t.lazy(()=>Rm).optional()}).strict(),pyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>r)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),recipeIds:t.union([t.lazy(()=>Ee),t.number().int().array()]).optional(),recipeServingsAmount:t.union([t.lazy(()=>Le),t.number().array()]).optional(),recipeServingsCost:t.union([t.lazy(()=>Ve),t.number().array()]).optional(),allergens:t.union([t.lazy(()=>He),t.string().array()]).optional(),categoryId:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable()}).strict(),bK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>A2).optional()}).strict(),hK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),menuItems:t.lazy(()=>S2).optional()}).strict(),cyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),displayOrder:t.union([t.number().int(),t.lazy(()=>n)]).optional(),isActive:t.union([t.boolean(),t.lazy(()=>y)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kQ=t.object({id:t.number().int().optional(),recipeId:t.number().int(),joinAt:t.coerce.date().optional()}).strict(),xQ=t.object({id:t.number().int().optional(),recommendation:t.string(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),jQ=t.object({id:t.number().int().optional(),posTransactionID:t.string().optional().nullable(),restaurantId:t.number().int(),price:t.number(),total:t.number(),transactionDate:t.coerce.date(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),MQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),date:t.coerce.date(),quantity:t.number().int(),reason:t.string(),recordedById:t.number().int(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),ZQ=t.object({id:t.number().int().optional(),restaurantId:t.number().int(),rating:t.number().int(),comment:t.string().optional().nullable(),source:t.lazy(()=>Zt),tags:t.union([t.lazy(()=>lp),t.string().array()]).optional(),status:t.lazy(()=>vt).optional(),responseText:t.string().optional().nullable(),respondedAt:t.coerce.date().optional().nullable(),respondedById:t.number().int().optional().nullable(),createdAt:t.coerce.date().optional(),updatedAt:t.coerce.date().optional()}).strict(),IK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),restaurant:t.lazy(()=>nn).optional(),cookBook:t.lazy(()=>an).optional(),ingredients:t.lazy(()=>ln).optional(),instructions:t.lazy(()=>rn).optional(),foodCostHistory:t.lazy(()=>cn).optional(),prepHistory:t.lazy(()=>un).optional(),prepBoards:t.lazy(()=>sn).optional(),prepItems:t.lazy(()=>yn).optional(),menuItemRecipes:t.lazy(()=>dn).optional(),productionPlanItems:t.lazy(()=>zn).optional(),withdrawals:t.lazy(()=>mn).optional(),tags:t.lazy(()=>bn).optional(),versions:t.lazy(()=>hn).optional(),equipments:t.lazy(()=>In).optional(),dietaryRestrictions:t.lazy(()=>gn).optional(),temperatures:t.lazy(()=>Cn).optional(),yields:t.lazy(()=>An).optional(),laborCosts:t.lazy(()=>Sn).optional(),nutritionalInfo:t.lazy(()=>Tn).optional(),criticalPoints:t.lazy(()=>Pn).optional(),storage:t.lazy(()=>Un).optional(),photos:t.lazy(()=>Wn).optional(),recipeStats:t.lazy(()=>Rn).optional()}).strict(),gK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional(),ingredients:t.lazy(()=>kn).optional(),instructions:t.lazy(()=>xn).optional(),foodCostHistory:t.lazy(()=>Mn).optional(),prepHistory:t.lazy(()=>Zn).optional(),prepBoards:t.lazy(()=>vn).optional(),prepItems:t.lazy(()=>On).optional(),menuItemRecipes:t.lazy(()=>fn).optional(),productionPlanItems:t.lazy(()=>wn).optional(),withdrawals:t.lazy(()=>Nn).optional(),tags:t.lazy(()=>Bn).optional(),versions:t.lazy(()=>qn).optional(),equipments:t.lazy(()=>Fn).optional(),dietaryRestrictions:t.lazy(()=>Dn).optional(),temperatures:t.lazy(()=>_n).optional(),yields:t.lazy(()=>En).optional(),laborCosts:t.lazy(()=>Ln).optional(),nutritionalInfo:t.lazy(()=>Vn).optional(),criticalPoints:t.lazy(()=>Hn).optional(),storage:t.lazy(()=>Qn).optional(),photos:t.lazy(()=>Yn).optional(),recipeStats:t.lazy(()=>Gn).optional()}).strict(),uyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),imageUrls:t.union([t.lazy(()=>yt),t.string().array()]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),servings:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),prepTime:t.union([t.number().int(),t.lazy(()=>n)]).optional(),frequency:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),cookBookId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),foodCost:t.union([t.number(),t.lazy(()=>u)]).optional().nullable(),isDeleted:t.union([t.boolean(),t.lazy(()=>y)]).optional(),isPublished:t.union([t.boolean(),t.lazy(()=>y)]).optional(),publishedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),language:t.union([t.string(),t.lazy(()=>a)]).optional(),skillLevel:t.union([t.lazy(()=>W),t.lazy(()=>dt)]).optional(),category:t.union([t.lazy(()=>U),t.lazy(()=>zt)]).optional()}).strict(),CK=t.object({joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipe:t.lazy(()=>W5).optional()}).strict(),AK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),syt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recipeId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),joinAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),SK=t.object({recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),TK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),yyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),recommendation:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),PK=t.object({posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>m2).optional()}).strict(),UK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),dyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),posTransactionID:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),price:t.union([t.number(),t.lazy(()=>r)]).optional(),total:t.union([t.number(),t.lazy(()=>r)]).optional(),transactionDate:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),WK=t.object({date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Fq).optional(),recordedBy:t.lazy(()=>_q).optional()}).strict(),RK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zyt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),date:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),quantity:t.union([t.number().int(),t.lazy(()=>n)]).optional(),reason:t.union([t.string(),t.lazy(()=>a)]).optional(),recordedById:t.union([t.number().int(),t.lazy(()=>n)]).optional(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),kK=t.object({rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),restaurant:t.lazy(()=>Sq).optional(),respondedBy:t.lazy(()=>Pq).optional()}).strict(),xK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),myt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),restaurantId:t.union([t.number().int(),t.lazy(()=>n)]).optional(),rating:t.union([t.number().int(),t.lazy(()=>n)]).optional(),comment:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),source:t.union([t.lazy(()=>Zt),t.lazy(()=>Vr)]).optional(),tags:t.union([t.lazy(()=>Hr),t.string().array()]).optional(),status:t.union([t.lazy(()=>vt),t.lazy(()=>Qr)]).optional(),responseText:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),respondedAt:t.union([t.coerce.date(),t.lazy(()=>I)]).optional().nullable(),respondedById:t.union([t.number().int(),t.lazy(()=>b)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),jK=t.object({name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>Zq).optional(),ingredients:t.lazy(()=>vq).optional()}).strict(),MK=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),recipes:t.lazy(()=>fq).optional(),ingredients:t.lazy(()=>wq).optional()}).strict(),byt=t.object({id:t.union([t.number().int(),t.lazy(()=>n)]).optional(),name:t.union([t.string(),t.lazy(()=>a)]).optional(),description:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),icon:t.union([t.string(),t.lazy(()=>l)]).optional().nullable(),createdAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional(),updatedAt:t.union([t.coerce.date(),t.lazy(()=>o)]).optional()}).strict(),zmt=t.object({select:vy.optional(),include:Zy.optional(),where:Be.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),mmt=t.object({select:vy.optional(),include:Zy.optional(),where:Be.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),bmt=t.object({select:vy.optional(),include:Zy.optional(),where:Be.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dg,dg.array()]).optional()}).strict(),hmt=t.object({where:Be.optional(),orderBy:t.union([jm.array(),jm]).optional(),cursor:ql.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Imt=t.object({where:Be.optional(),orderBy:t.union([GL.array(),GL]).optional(),by:dg.array(),having:DC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gmt=t.object({select:vy.optional(),include:Zy.optional(),where:ql}).strict(),Cmt=t.object({select:vy.optional(),include:Zy.optional(),where:ql}).strict(),Amt=t.object({select:fy.optional(),include:Oy.optional(),where:oa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),Smt=t.object({select:fy.optional(),include:Oy.optional(),where:oa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),ZK=t.object({select:fy.optional(),include:Oy.optional(),where:oa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zg,zg.array()]).optional()}).strict(),Tmt=t.object({where:oa.optional(),orderBy:t.union([tb.array(),tb]).optional(),cursor:be.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pmt=t.object({where:oa.optional(),orderBy:t.union([$L.array(),$L]).optional(),by:zg.array(),having:_C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Umt=t.object({select:fy.optional(),include:Oy.optional(),where:be}).strict(),Wmt=t.object({select:fy.optional(),include:Oy.optional(),where:be}).strict(),Rmt=t.object({select:Ny.optional(),include:wy.optional(),where:qe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),kmt=t.object({select:Ny.optional(),include:wy.optional(),where:qe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),xmt=t.object({select:Ny.optional(),include:wy.optional(),where:qe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mg,mg.array()]).optional()}).strict(),jmt=t.object({where:qe.optional(),orderBy:t.union([Mm.array(),Mm]).optional(),cursor:Fl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Mmt=t.object({where:qe.optional(),orderBy:t.union([JL.array(),JL]).optional(),by:mg.array(),having:EC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Zmt=t.object({select:Ny.optional(),include:wy.optional(),where:Fl}).strict(),vmt=t.object({select:Ny.optional(),include:wy.optional(),where:Fl}).strict(),Omt=t.object({select:qy.optional(),include:By.optional(),where:na.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),fmt=t.object({select:qy.optional(),include:By.optional(),where:na.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),vK=t.object({select:qy.optional(),include:By.optional(),where:na.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bg,bg.array()]).optional()}).strict(),wmt=t.object({where:na.optional(),orderBy:t.union([eb.array(),eb]).optional(),cursor:he.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Nmt=t.object({where:na.optional(),orderBy:t.union([KL.array(),KL]).optional(),by:bg.array(),having:LC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Bmt=t.object({select:qy.optional(),include:By.optional(),where:he}).strict(),qmt=t.object({select:qy.optional(),include:By.optional(),where:he}).strict(),Fmt=t.object({select:Dy.optional(),include:Fy.optional(),where:aa.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),Dmt=t.object({select:Dy.optional(),include:Fy.optional(),where:aa.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),OK=t.object({select:Dy.optional(),include:Fy.optional(),where:aa.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hg,hg.array()]).optional()}).strict(),_mt=t.object({where:aa.optional(),orderBy:t.union([ob.array(),ob]).optional(),cursor:Ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Emt=t.object({where:aa.optional(),orderBy:t.union([XL.array(),XL]).optional(),by:hg.array(),having:VC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Lmt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ie}).strict(),Vmt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ie}).strict(),Hmt=t.object({select:Ey.optional(),include:_y.optional(),where:ia.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Qmt=t.object({select:Ey.optional(),include:_y.optional(),where:ia.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),fK=t.object({select:Ey.optional(),include:_y.optional(),where:ia.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ig,Ig.array()]).optional()}).strict(),Ymt=t.object({where:ia.optional(),orderBy:t.union([nb.array(),nb]).optional(),cursor:ge.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Gmt=t.object({where:ia.optional(),orderBy:t.union([tV.array(),tV]).optional(),by:Ig.array(),having:HC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$mt=t.object({select:Ey.optional(),include:_y.optional(),where:ge}).strict(),Jmt=t.object({select:Ey.optional(),include:_y.optional(),where:ge}).strict(),Kmt=t.object({select:Vy.optional(),include:Ly.optional(),where:la.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),Xmt=t.object({select:Vy.optional(),include:Ly.optional(),where:la.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),wK=t.object({select:Vy.optional(),include:Ly.optional(),where:la.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gg,gg.array()]).optional()}).strict(),tbt=t.object({where:la.optional(),orderBy:t.union([ab.array(),ab]).optional(),cursor:Ce.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ebt=t.object({where:la.optional(),orderBy:t.union([eV.array(),eV]).optional(),by:gg.array(),having:QC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),obt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ce}).strict(),nbt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ce}).strict(),abt=t.object({select:Qy.optional(),include:Hy.optional(),where:ra.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),ibt=t.object({select:Qy.optional(),include:Hy.optional(),where:ra.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),rN=t.object({select:Qy.optional(),include:Hy.optional(),where:ra.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Cg,Cg.array()]).optional()}).strict(),lbt=t.object({where:ra.optional(),orderBy:t.union([ib.array(),ib]).optional(),cursor:ht.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rbt=t.object({where:ra.optional(),orderBy:t.union([oV.array(),oV]).optional(),by:Cg.array(),having:YC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pbt=t.object({select:Qy.optional(),include:Hy.optional(),where:ht}).strict(),cbt=t.object({select:Qy.optional(),include:Hy.optional(),where:ht}).strict(),ubt=t.object({select:Gy.optional(),include:Yy.optional(),where:we.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),sbt=t.object({select:Gy.optional(),include:Yy.optional(),where:we.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),NK=t.object({select:Gy.optional(),include:Yy.optional(),where:we.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ag,Ag.array()]).optional()}).strict(),ybt=t.object({where:we.optional(),orderBy:t.union([Zm.array(),Zm]).optional(),cursor:ee.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dbt=t.object({where:we.optional(),orderBy:t.union([nV.array(),nV]).optional(),by:Ag.array(),having:GC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zbt=t.object({select:Gy.optional(),include:Yy.optional(),where:ee}).strict(),mbt=t.object({select:Gy.optional(),include:Yy.optional(),where:ee}).strict(),bbt=t.object({select:Jy.optional(),include:$y.optional(),where:le.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),hbt=t.object({select:Jy.optional(),include:$y.optional(),where:le.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),SS=t.object({select:Jy.optional(),include:$y.optional(),where:le.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Sg,Sg.array()]).optional()}).strict(),Ibt=t.object({where:le.optional(),orderBy:t.union([Lp.array(),Lp]).optional(),cursor:N.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gbt=t.object({where:le.optional(),orderBy:t.union([aV.array(),aV]).optional(),by:Sg.array(),having:$C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Cbt=t.object({select:Jy.optional(),include:$y.optional(),where:N}).strict(),Abt=t.object({select:Jy.optional(),include:$y.optional(),where:N}).strict(),Sbt=t.object({select:Xy.optional(),include:Ky.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),Tbt=t.object({select:Xy.optional(),include:Ky.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),BK=t.object({select:Xy.optional(),include:Ky.optional(),where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Tg,Tg.array()]).optional()}).strict(),Pbt=t.object({where:Ze.optional(),orderBy:t.union([Vp.array(),Vp]).optional(),cursor:Yt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ubt=t.object({where:Ze.optional(),orderBy:t.union([iV.array(),iV]).optional(),by:Tg.array(),having:JC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Wbt=t.object({select:Xy.optional(),include:Ky.optional(),where:Yt}).strict(),Rbt=t.object({select:Xy.optional(),include:Ky.optional(),where:Yt}).strict(),kbt=t.object({select:ed.optional(),include:td.optional(),where:pa.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),xbt=t.object({select:ed.optional(),include:td.optional(),where:pa.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),zT=t.object({select:ed.optional(),include:td.optional(),where:pa.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Pg,Pg.array()]).optional()}).strict(),jbt=t.object({where:pa.optional(),orderBy:t.union([lb.array(),lb]).optional(),cursor:q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Mbt=t.object({where:pa.optional(),orderBy:t.union([lV.array(),lV]).optional(),by:Pg.array(),having:KC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Zbt=t.object({select:ed.optional(),include:td.optional(),where:q}).strict(),vbt=t.object({select:ed.optional(),include:td.optional(),where:q}).strict(),Obt=t.object({select:nd.optional(),include:od.optional(),where:ca.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),fbt=t.object({select:nd.optional(),include:od.optional(),where:ca.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),qK=t.object({select:nd.optional(),include:od.optional(),where:ca.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ug,Ug.array()]).optional()}).strict(),wbt=t.object({where:ca.optional(),orderBy:t.union([rb.array(),rb]).optional(),cursor:Ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Nbt=t.object({where:ca.optional(),orderBy:t.union([rV.array(),rV]).optional(),by:Ug.array(),having:XC.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Bbt=t.object({select:nd.optional(),include:od.optional(),where:Ae}).strict(),qbt=t.object({select:nd.optional(),include:od.optional(),where:Ae}).strict(),Fbt=t.object({select:id.optional(),include:ad.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),Dbt=t.object({select:id.optional(),include:ad.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),FK=t.object({select:id.optional(),include:ad.optional(),where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Wg,Wg.array()]).optional()}).strict(),_bt=t.object({where:ve.optional(),orderBy:t.union([Hp.array(),Hp]).optional(),cursor:Gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ebt=t.object({where:ve.optional(),orderBy:t.union([pV.array(),pV]).optional(),by:Wg.array(),having:tA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Lbt=t.object({select:id.optional(),include:ad.optional(),where:Gt}).strict(),Vbt=t.object({select:id.optional(),include:ad.optional(),where:Gt}).strict(),Hbt=t.object({select:rd.optional(),include:ld.optional(),where:Qe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Qbt=t.object({select:rd.optional(),include:ld.optional(),where:Qe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),DK=t.object({select:rd.optional(),include:ld.optional(),where:Qe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Rg,Rg.array()]).optional()}).strict(),Ybt=t.object({where:Qe.optional(),orderBy:t.union([vm.array(),vm]).optional(),cursor:oe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Gbt=t.object({where:Qe.optional(),orderBy:t.union([cV.array(),cV]).optional(),by:Rg.array(),having:eA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$bt=t.object({select:rd.optional(),include:ld.optional(),where:oe}).strict(),Jbt=t.object({select:rd.optional(),include:ld.optional(),where:oe}).strict(),Kbt=t.object({select:cd.optional(),include:pd.optional(),where:Ye.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),Xbt=t.object({select:cd.optional(),include:pd.optional(),where:Ye.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),pN=t.object({select:cd.optional(),include:pd.optional(),where:Ye.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([kg,kg.array()]).optional()}).strict(),tht=t.object({where:Ye.optional(),orderBy:t.union([Om.array(),Om]).optional(),cursor:rt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eht=t.object({where:Ye.optional(),orderBy:t.union([uV.array(),uV]).optional(),by:kg.array(),having:oA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oht=t.object({select:cd.optional(),include:pd.optional(),where:rt}).strict(),nht=t.object({select:cd.optional(),include:pd.optional(),where:rt}).strict(),aht=t.object({select:sd.optional(),include:ud.optional(),where:ua.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),iht=t.object({select:sd.optional(),include:ud.optional(),where:ua.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),cN=t.object({select:sd.optional(),include:ud.optional(),where:ua.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([xg,xg.array()]).optional()}).strict(),lht=t.object({where:ua.optional(),orderBy:t.union([pb.array(),pb]).optional(),cursor:It.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rht=t.object({where:ua.optional(),orderBy:t.union([sV.array(),sV]).optional(),by:xg.array(),having:nA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pht=t.object({select:sd.optional(),include:ud.optional(),where:It}).strict(),cht=t.object({select:sd.optional(),include:ud.optional(),where:It}).strict(),uht=t.object({select:dd.optional(),include:yd.optional(),where:sa.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),sht=t.object({select:dd.optional(),include:yd.optional(),where:sa.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),uN=t.object({select:dd.optional(),include:yd.optional(),where:sa.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([jg,jg.array()]).optional()}).strict(),yht=t.object({where:sa.optional(),orderBy:t.union([cb.array(),cb]).optional(),cursor:gt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dht=t.object({where:sa.optional(),orderBy:t.union([yV.array(),yV]).optional(),by:jg.array(),having:aA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zht=t.object({select:dd.optional(),include:yd.optional(),where:gt}).strict(),mht=t.object({select:dd.optional(),include:yd.optional(),where:gt}).strict(),bht=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),hht=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),mT=t.object({select:md.optional(),include:zd.optional(),where:ya.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Mg,Mg.array()]).optional()}).strict(),Iht=t.object({where:ya.optional(),orderBy:t.union([ub.array(),ub]).optional(),cursor:F.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ght=t.object({where:ya.optional(),orderBy:t.union([dV.array(),dV]).optional(),by:Mg.array(),having:iA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Cht=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),Aht=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),Sht=t.object({select:hd.optional(),include:bd.optional(),where:da.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),Tht=t.object({select:hd.optional(),include:bd.optional(),where:da.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),bT=t.object({select:hd.optional(),include:bd.optional(),where:da.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Zg,Zg.array()]).optional()}).strict(),Pht=t.object({where:da.optional(),orderBy:t.union([sb.array(),sb]).optional(),cursor:D.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Uht=t.object({where:da.optional(),orderBy:t.union([zV.array(),zV]).optional(),by:Zg.array(),having:lA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Wht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),Rht=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),kht=t.object({select:gd.optional(),include:Id.optional(),where:za.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),xht=t.object({select:gd.optional(),include:Id.optional(),where:za.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),_K=t.object({select:gd.optional(),include:Id.optional(),where:za.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([vg,vg.array()]).optional()}).strict(),jht=t.object({where:za.optional(),orderBy:t.union([yb.array(),yb]).optional(),cursor:Se.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Mht=t.object({where:za.optional(),orderBy:t.union([mV.array(),mV]).optional(),by:vg.array(),having:rA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Zht=t.object({select:gd.optional(),include:Id.optional(),where:Se}).strict(),vht=t.object({select:gd.optional(),include:Id.optional(),where:Se}).strict(),Oht=t.object({select:Ad.optional(),include:Cd.optional(),where:ma.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),fht=t.object({select:Ad.optional(),include:Cd.optional(),where:ma.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),hT=t.object({select:Ad.optional(),include:Cd.optional(),where:ma.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Og,Og.array()]).optional()}).strict(),wht=t.object({where:ma.optional(),orderBy:t.union([db.array(),db]).optional(),cursor:_.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Nht=t.object({where:ma.optional(),orderBy:t.union([bV.array(),bV]).optional(),by:Og.array(),having:pA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Bht=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),qht=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),Fht=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),Dht=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),IT=t.object({select:Td.optional(),include:Sd.optional(),where:ba.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([fg,fg.array()]).optional()}).strict(),_ht=t.object({where:ba.optional(),orderBy:t.union([zb.array(),zb]).optional(),cursor:E.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Eht=t.object({where:ba.optional(),orderBy:t.union([hV.array(),hV]).optional(),by:fg.array(),having:cA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Lht=t.object({select:Td.optional(),include:Sd.optional(),where:E}).strict(),Vht=t.object({select:Td.optional(),include:Sd.optional(),where:E}).strict(),Hht=t.object({select:Ud.optional(),include:Pd.optional(),where:Ge.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),Qht=t.object({select:Ud.optional(),include:Pd.optional(),where:Ge.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),sN=t.object({select:Ud.optional(),include:Pd.optional(),where:Ge.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([wg,wg.array()]).optional()}).strict(),Yht=t.object({where:Ge.optional(),orderBy:t.union([fm.array(),fm]).optional(),cursor:pt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ght=t.object({where:Ge.optional(),orderBy:t.union([IV.array(),IV]).optional(),by:wg.array(),having:uA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$ht=t.object({select:Ud.optional(),include:Pd.optional(),where:pt}).strict(),Jht=t.object({select:Ud.optional(),include:Pd.optional(),where:pt}).strict(),Kht=t.object({select:Rd.optional(),include:Wd.optional(),where:ha.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),Xht=t.object({select:Rd.optional(),include:Wd.optional(),where:ha.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),gT=t.object({select:Rd.optional(),include:Wd.optional(),where:ha.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Ng,Ng.array()]).optional()}).strict(),tIt=t.object({where:ha.optional(),orderBy:t.union([mb.array(),mb]).optional(),cursor:L.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eIt=t.object({where:ha.optional(),orderBy:t.union([gV.array(),gV]).optional(),by:Ng.array(),having:sA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oIt=t.object({select:Rd.optional(),include:Wd.optional(),where:L}).strict(),nIt=t.object({select:Rd.optional(),include:Wd.optional(),where:L}).strict(),aIt=t.object({select:xd.optional(),include:kd.optional(),where:Ia.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),iIt=t.object({select:xd.optional(),include:kd.optional(),where:Ia.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),EK=t.object({select:xd.optional(),include:kd.optional(),where:Ia.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Bg,Bg.array()]).optional()}).strict(),lIt=t.object({where:Ia.optional(),orderBy:t.union([bb.array(),bb]).optional(),cursor:Te.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rIt=t.object({where:Ia.optional(),orderBy:t.union([CV.array(),CV]).optional(),by:Bg.array(),having:yA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pIt=t.object({select:xd.optional(),include:kd.optional(),where:Te}).strict(),cIt=t.object({select:xd.optional(),include:kd.optional(),where:Te}).strict(),uIt=t.object({select:Md.optional(),include:jd.optional(),where:ga.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),sIt=t.object({select:Md.optional(),include:jd.optional(),where:ga.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),LK=t.object({select:Md.optional(),include:jd.optional(),where:ga.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([qg,qg.array()]).optional()}).strict(),yIt=t.object({where:ga.optional(),orderBy:t.union([hb.array(),hb]).optional(),cursor:Pe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dIt=t.object({where:ga.optional(),orderBy:t.union([AV.array(),AV]).optional(),by:qg.array(),having:dA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),zIt=t.object({select:Md.optional(),include:jd.optional(),where:Pe}).strict(),mIt=t.object({select:Md.optional(),include:jd.optional(),where:Pe}).strict(),bIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ca.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),hIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ca.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),VK=t.object({select:vd.optional(),include:Zd.optional(),where:Ca.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Fg,Fg.array()]).optional()}).strict(),IIt=t.object({where:Ca.optional(),orderBy:t.union([Ib.array(),Ib]).optional(),cursor:Ue.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gIt=t.object({where:Ca.optional(),orderBy:t.union([SV.array(),SV]).optional(),by:Fg.array(),having:zA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),CIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ue}).strict(),AIt=t.object({select:vd.optional(),include:Zd.optional(),where:Ue}).strict(),SIt=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),TIt=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),CT=t.object({select:fd.optional(),include:Od.optional(),where:Aa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Dg,Dg.array()]).optional()}).strict(),PIt=t.object({where:Aa.optional(),orderBy:t.union([gb.array(),gb]).optional(),cursor:V.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UIt=t.object({where:Aa.optional(),orderBy:t.union([TV.array(),TV]).optional(),by:Dg.array(),having:mA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),WIt=t.object({select:fd.optional(),include:Od.optional(),where:V}).strict(),RIt=t.object({select:fd.optional(),include:Od.optional(),where:V}).strict(),kIt=t.object({select:Nd.optional(),include:wd.optional(),where:co.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:np.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),xIt=t.object({select:Nd.optional(),include:wd.optional(),where:co.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:np.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),jIt=t.object({select:Nd.optional(),include:wd.optional(),where:co.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:np.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([_g,_g.array()]).optional()}).strict(),MIt=t.object({where:co.optional(),orderBy:t.union([wm.array(),wm]).optional(),cursor:np.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ZIt=t.object({where:co.optional(),orderBy:t.union([PV.array(),PV]).optional(),by:_g.array(),having:bA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),vIt=t.object({select:Nd.optional(),include:wd.optional(),where:np}).strict(),OIt=t.object({select:Nd.optional(),include:wd.optional(),where:np}).strict(),fIt=t.object({select:qd.optional(),include:Bd.optional(),where:Sa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),wIt=t.object({select:qd.optional(),include:Bd.optional(),where:Sa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),yN=t.object({select:qd.optional(),include:Bd.optional(),where:Sa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Eg,Eg.array()]).optional()}).strict(),NIt=t.object({where:Sa.optional(),orderBy:t.union([Cb.array(),Cb]).optional(),cursor:Ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),BIt=t.object({where:Sa.optional(),orderBy:t.union([UV.array(),UV]).optional(),by:Eg.array(),having:hA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),qIt=t.object({select:qd.optional(),include:Bd.optional(),where:Ct}).strict(),FIt=t.object({select:qd.optional(),include:Bd.optional(),where:Ct}).strict(),DIt=t.object({select:Dd.optional(),include:Fd.optional(),where:Ta.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),_It=t.object({select:Dd.optional(),include:Fd.optional(),where:Ta.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),HK=t.object({select:Dd.optional(),include:Fd.optional(),where:Ta.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Lg,Lg.array()]).optional()}).strict(),EIt=t.object({where:Ta.optional(),orderBy:t.union([Ab.array(),Ab]).optional(),cursor:We.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),LIt=t.object({where:Ta.optional(),orderBy:t.union([WV.array(),WV]).optional(),by:Lg.array(),having:IA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),VIt=t.object({select:Dd.optional(),include:Fd.optional(),where:We}).strict(),HIt=t.object({select:Dd.optional(),include:Fd.optional(),where:We}).strict(),QIt=t.object({select:Vm.optional(),where:bl.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Hm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),YIt=t.object({select:Vm.optional(),where:bl.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Hm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),GIt=t.object({select:Vm.optional(),where:bl.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Hm.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Vg,Vg.array()]).optional()}).strict(),$It=t.object({where:bl.optional(),orderBy:t.union([Sb.array(),Sb]).optional(),cursor:Hm.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),JIt=t.object({where:bl.optional(),orderBy:t.union([RV.array(),RV]).optional(),by:Vg.array(),having:gA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),KIt=t.object({select:Vm.optional(),where:Hm}).strict(),XIt=t.object({select:Vm.optional(),where:Hm}).strict(),tgt=t.object({select:Ed.optional(),include:_d.optional(),where:Me.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),egt=t.object({select:Ed.optional(),include:_d.optional(),where:Me.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),ogt=t.object({select:Ed.optional(),include:_d.optional(),where:Me.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Hg,Hg.array()]).optional()}).strict(),ngt=t.object({where:Me.optional(),orderBy:t.union([Qp.array(),Qp]).optional(),cursor:Ol.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),agt=t.object({where:Me.optional(),orderBy:t.union([kV.array(),kV]).optional(),by:Hg.array(),having:CA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),igt=t.object({select:Ed.optional(),include:_d.optional(),where:Ol}).strict(),lgt=t.object({select:Ed.optional(),include:_d.optional(),where:Ol}).strict(),rgt=t.object({select:Vd.optional(),include:Ld.optional(),where:_t.optional(),orderBy:t.union([tp.array(),tp]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),pgt=t.object({select:Vd.optional(),include:Ld.optional(),where:_t.optional(),orderBy:t.union([tp.array(),tp]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),cgt=t.object({select:Vd.optional(),include:Ld.optional(),where:_t.optional(),orderBy:t.union([tp.array(),tp]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Qg,Qg.array()]).optional()}).strict(),ugt=t.object({where:_t.optional(),orderBy:t.union([tp.array(),tp]).optional(),cursor:$n.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sgt=t.object({where:_t.optional(),orderBy:t.union([xV.array(),xV]).optional(),by:Qg.array(),having:AA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ygt=t.object({select:Vd.optional(),include:Ld.optional(),where:$n}).strict(),dgt=t.object({select:Vd.optional(),include:Ld.optional(),where:$n}).strict(),zgt=t.object({select:Qd.optional(),include:Hd.optional(),where:B.optional(),orderBy:t.union([fa.array(),fa]).optional(),cursor:X.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),mgt=t.object({select:Qd.optional(),include:Hd.optional(),where:B.optional(),orderBy:t.union([fa.array(),fa]).optional(),cursor:X.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),QK=t.object({select:Qd.optional(),include:Hd.optional(),where:B.optional(),orderBy:t.union([fa.array(),fa]).optional(),cursor:X.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Yg,Yg.array()]).optional()}).strict(),bgt=t.object({where:B.optional(),orderBy:t.union([fa.array(),fa]).optional(),cursor:X.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hgt=t.object({where:B.optional(),orderBy:t.union([jV.array(),jV]).optional(),by:Yg.array(),having:SA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Igt=t.object({select:Qd.optional(),include:Hd.optional(),where:X}).strict(),ggt=t.object({select:Qd.optional(),include:Hd.optional(),where:X}).strict(),Cgt=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),Agt=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),dN=t.object({select:Gd.optional(),include:Yd.optional(),where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Gg,Gg.array()]).optional()}).strict(),Sgt=t.object({where:v.optional(),orderBy:t.union([eo.array(),eo]).optional(),cursor:M.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Tgt=t.object({where:v.optional(),orderBy:t.union([MV.array(),MV]).optional(),by:Gg.array(),having:TA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Pgt=t.object({select:Gd.optional(),include:Yd.optional(),where:M}).strict(),Ugt=t.object({select:Gd.optional(),include:Yd.optional(),where:M}).strict(),Wgt=t.object({select:Jd.optional(),include:$d.optional(),where:Pa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),Rgt=t.object({select:Jd.optional(),include:$d.optional(),where:Pa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),YK=t.object({select:Jd.optional(),include:$d.optional(),where:Pa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([$g,$g.array()]).optional()}).strict(),kgt=t.object({where:Pa.optional(),orderBy:t.union([Tb.array(),Tb]).optional(),cursor:Re.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xgt=t.object({where:Pa.optional(),orderBy:t.union([ZV.array(),ZV]).optional(),by:$g.array(),having:PA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jgt=t.object({select:Jd.optional(),include:$d.optional(),where:Re}).strict(),Mgt=t.object({select:Jd.optional(),include:$d.optional(),where:Re}).strict(),Zgt=t.object({select:Xd.optional(),include:Kd.optional(),where:$e.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),vgt=t.object({select:Xd.optional(),include:Kd.optional(),where:$e.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),GK=t.object({select:Xd.optional(),include:Kd.optional(),where:$e.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Jg,Jg.array()]).optional()}).strict(),Ogt=t.object({where:$e.optional(),orderBy:t.union([Nm.array(),Nm]).optional(),cursor:ne.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),fgt=t.object({where:$e.optional(),orderBy:t.union([vV.array(),vV]).optional(),by:Jg.array(),having:UA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wgt=t.object({select:Xd.optional(),include:Kd.optional(),where:ne}).strict(),Ngt=t.object({select:Xd.optional(),include:Kd.optional(),where:ne}).strict(),Bgt=t.object({select:ez.optional(),include:tz.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),qgt=t.object({select:ez.optional(),include:tz.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),yp=t.object({select:ez.optional(),include:tz.optional(),where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Kg,Kg.array()]).optional()}).strict(),Fgt=t.object({where:O.optional(),orderBy:t.union([oo.array(),oo]).optional(),cursor:C.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Dgt=t.object({where:O.optional(),orderBy:t.union([OV.array(),OV]).optional(),by:Kg.array(),having:WA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_gt=t.object({select:ez.optional(),include:tz.optional(),where:C}).strict(),Egt=t.object({select:ez.optional(),include:tz.optional(),where:C}).strict(),Lgt=t.object({select:nz.optional(),include:oz.optional(),where:Mt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),Vgt=t.object({select:nz.optional(),include:oz.optional(),where:Mt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),zN=t.object({select:nz.optional(),include:oz.optional(),where:Mt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([Xg,Xg.array()]).optional()}).strict(),Hgt=t.object({where:Mt.optional(),orderBy:t.union([Nl.array(),Nl]).optional(),cursor:J.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Qgt=t.object({where:Mt.optional(),orderBy:t.union([fV.array(),fV]).optional(),by:Xg.array(),having:RA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Ygt=t.object({select:nz.optional(),include:oz.optional(),where:J}).strict(),Ggt=t.object({select:nz.optional(),include:oz.optional(),where:J}).strict(),$gt=t.object({select:iz.optional(),include:az.optional(),where:Ua.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),Jgt=t.object({select:iz.optional(),include:az.optional(),where:Ua.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),AT=t.object({select:iz.optional(),include:az.optional(),where:Ua.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([tC,tC.array()]).optional()}).strict(),Kgt=t.object({where:Ua.optional(),orderBy:t.union([Pb.array(),Pb]).optional(),cursor:H.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),Xgt=t.object({where:Ua.optional(),orderBy:t.union([wV.array(),wV]).optional(),by:tC.array(),having:kA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tCt=t.object({select:iz.optional(),include:az.optional(),where:H}).strict(),eCt=t.object({select:iz.optional(),include:az.optional(),where:H}).strict(),oCt=t.object({select:rz.optional(),include:lz.optional(),where:Ne.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),nCt=t.object({select:rz.optional(),include:lz.optional(),where:Ne.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),mN=t.object({select:rz.optional(),include:lz.optional(),where:Ne.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([eC,eC.array()]).optional()}).strict(),aCt=t.object({where:Ne.optional(),orderBy:t.union([Bm.array(),Bm]).optional(),cursor:ct.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),iCt=t.object({where:Ne.optional(),orderBy:t.union([NV.array(),NV]).optional(),by:eC.array(),having:xA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lCt=t.object({select:rz.optional(),include:lz.optional(),where:ct}).strict(),rCt=t.object({select:rz.optional(),include:lz.optional(),where:ct}).strict(),pCt=t.object({select:cz.optional(),include:pz.optional(),where:re.optional(),orderBy:t.union([mp.array(),mp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),cCt=t.object({select:cz.optional(),include:pz.optional(),where:re.optional(),orderBy:t.union([mp.array(),mp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),ST=t.object({select:cz.optional(),include:pz.optional(),where:re.optional(),orderBy:t.union([mp.array(),mp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([oC,oC.array()]).optional()}).strict(),uCt=t.object({where:re.optional(),orderBy:t.union([mp.array(),mp]).optional(),cursor:w.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),sCt=t.object({where:re.optional(),orderBy:t.union([BV.array(),BV]).optional(),by:oC.array(),having:jA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yCt=t.object({select:cz.optional(),include:pz.optional(),where:w}).strict(),dCt=t.object({select:cz.optional(),include:pz.optional(),where:w}).strict(),zCt=t.object({select:sz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),mCt=t.object({select:sz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),TT=t.object({select:sz.optional(),include:uz.optional(),where:Wa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([nC,nC.array()]).optional()}).strict(),bCt=t.object({where:Wa.optional(),orderBy:t.union([Ub.array(),Ub]).optional(),cursor:Q.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),hCt=t.object({where:Wa.optional(),orderBy:t.union([qV.array(),qV]).optional(),by:nC.array(),having:MA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ICt=t.object({select:sz.optional(),include:uz.optional(),where:Q}).strict(),gCt=t.object({select:sz.optional(),include:uz.optional(),where:Q}).strict(),CCt=t.object({select:dz.optional(),include:yz.optional(),where:Je.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),ACt=t.object({select:dz.optional(),include:yz.optional(),where:Je.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),bN=t.object({select:dz.optional(),include:yz.optional(),where:Je.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([aC,aC.array()]).optional()}).strict(),SCt=t.object({where:Je.optional(),orderBy:t.union([qm.array(),qm]).optional(),cursor:ut.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),TCt=t.object({where:Je.optional(),orderBy:t.union([FV.array(),FV]).optional(),by:aC.array(),having:ZA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PCt=t.object({select:dz.optional(),include:yz.optional(),where:ut}).strict(),UCt=t.object({select:dz.optional(),include:yz.optional(),where:ut}).strict(),WCt=t.object({select:mz.optional(),include:zz.optional(),where:Ra.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),RCt=t.object({select:mz.optional(),include:zz.optional(),where:Ra.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),hN=t.object({select:mz.optional(),include:zz.optional(),where:Ra.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([iC,iC.array()]).optional()}).strict(),kCt=t.object({where:Ra.optional(),orderBy:t.union([Wb.array(),Wb]).optional(),cursor:At.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),xCt=t.object({where:Ra.optional(),orderBy:t.union([DV.array(),DV]).optional(),by:iC.array(),having:vA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jCt=t.object({select:mz.optional(),include:zz.optional(),where:At}).strict(),MCt=t.object({select:mz.optional(),include:zz.optional(),where:At}).strict(),ZCt=t.object({select:hz.optional(),include:bz.optional(),where:Fe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),vCt=t.object({select:hz.optional(),include:bz.optional(),where:Fe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),OCt=t.object({select:hz.optional(),include:bz.optional(),where:Fe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([lC,lC.array()]).optional()}).strict(),fCt=t.object({where:Fe.optional(),orderBy:t.union([Fm.array(),Fm]).optional(),cursor:Dl.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wCt=t.object({where:Fe.optional(),orderBy:t.union([_V.array(),_V]).optional(),by:lC.array(),having:OA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NCt=t.object({select:hz.optional(),include:bz.optional(),where:Dl}).strict(),BCt=t.object({select:hz.optional(),include:bz.optional(),where:Dl}).strict(),qCt=t.object({select:gz.optional(),include:Iz.optional(),where:Ke.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),FCt=t.object({select:gz.optional(),include:Iz.optional(),where:Ke.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),IN=t.object({select:gz.optional(),include:Iz.optional(),where:Ke.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([rC,rC.array()]).optional()}).strict(),DCt=t.object({where:Ke.optional(),orderBy:t.union([Dm.array(),Dm]).optional(),cursor:st.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_Ct=t.object({where:Ke.optional(),orderBy:t.union([EV.array(),EV]).optional(),by:rC.array(),having:fA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),ECt=t.object({select:gz.optional(),include:Iz.optional(),where:st}).strict(),LCt=t.object({select:gz.optional(),include:Iz.optional(),where:st}).strict(),VCt=t.object({select:Az.optional(),include:Cz.optional(),where:ka.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),HCt=t.object({select:Az.optional(),include:Cz.optional(),where:ka.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),gN=t.object({select:Az.optional(),include:Cz.optional(),where:ka.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([pC,pC.array()]).optional()}).strict(),QCt=t.object({where:ka.optional(),orderBy:t.union([Rb.array(),Rb]).optional(),cursor:St.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),YCt=t.object({where:ka.optional(),orderBy:t.union([LV.array(),LV]).optional(),by:pC.array(),having:wA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),GCt=t.object({select:Az.optional(),include:Cz.optional(),where:St}).strict(),$Ct=t.object({select:Az.optional(),include:Cz.optional(),where:St}).strict(),JCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Oe.optional(),orderBy:t.union([Yp.array(),Yp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),KCt=t.object({select:Tz.optional(),include:Sz.optional(),where:Oe.optional(),orderBy:t.union([Yp.array(),Yp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),$K=t.object({select:Tz.optional(),include:Sz.optional(),where:Oe.optional(),orderBy:t.union([Yp.array(),Yp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([cC,cC.array()]).optional()}).strict(),XCt=t.object({where:Oe.optional(),orderBy:t.union([Yp.array(),Yp]).optional(),cursor:$t.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),tAt=t.object({where:Oe.optional(),orderBy:t.union([VV.array(),VV]).optional(),by:cC.array(),having:NA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eAt=t.object({select:Tz.optional(),include:Sz.optional(),where:$t}).strict(),oAt=t.object({select:Tz.optional(),include:Sz.optional(),where:$t}).strict(),nAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Xe.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),aAt=t.object({select:Uz.optional(),include:Pz.optional(),where:Xe.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),JK=t.object({select:Uz.optional(),include:Pz.optional(),where:Xe.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([uC,uC.array()]).optional()}).strict(),iAt=t.object({where:Xe.optional(),orderBy:t.union([_m.array(),_m]).optional(),cursor:ae.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),lAt=t.object({where:Xe.optional(),orderBy:t.union([HV.array(),HV]).optional(),by:uC.array(),having:BA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ae}).strict(),pAt=t.object({select:Uz.optional(),include:Pz.optional(),where:ae}).strict(),cAt=t.object({select:Rz.optional(),include:Wz.optional(),where:to.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),uAt=t.object({select:Rz.optional(),include:Wz.optional(),where:to.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),KK=t.object({select:Rz.optional(),include:Wz.optional(),where:to.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:ie.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([sC,sC.array()]).optional()}).strict(),sAt=t.object({where:to.optional(),orderBy:t.union([Em.array(),Em]).optional(),cursor:ie.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),yAt=t.object({where:to.optional(),orderBy:t.union([QV.array(),QV]).optional(),by:sC.array(),having:qA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),dAt=t.object({select:Rz.optional(),include:Wz.optional(),where:ie}).strict(),zAt=t.object({select:Rz.optional(),include:Wz.optional(),where:ie}).strict(),mAt=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Y.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),bAt=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Y.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),PT=t.object({select:xz.optional(),include:kz.optional(),where:xa.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Y.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([yC,yC.array()]).optional()}).strict(),hAt=t.object({where:xa.optional(),orderBy:t.union([kb.array(),kb]).optional(),cursor:Y.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),IAt=t.object({where:xa.optional(),orderBy:t.union([YV.array(),YV]).optional(),by:yC.array(),having:FA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),gAt=t.object({select:xz.optional(),include:kz.optional(),where:Y}).strict(),CAt=t.object({select:xz.optional(),include:kz.optional(),where:Y}).strict(),AAt=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),SAt=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),XK=t.object({select:Mz.optional(),include:jz.optional(),where:ja.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([dC,dC.array()]).optional()}).strict(),TAt=t.object({where:ja.optional(),orderBy:t.union([xb.array(),xb]).optional(),cursor:ke.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),PAt=t.object({where:ja.optional(),orderBy:t.union([GV.array(),GV]).optional(),by:dC.array(),having:DA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),UAt=t.object({select:Mz.optional(),include:jz.optional(),where:ke}).strict(),WAt=t.object({select:Mz.optional(),include:jz.optional(),where:ke}).strict(),RAt=t.object({select:vz.optional(),include:Zz.optional(),where:fe.optional(),orderBy:t.union([Gp.array(),Gp]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),kAt=t.object({select:vz.optional(),include:Zz.optional(),where:fe.optional(),orderBy:t.union([Gp.array(),Gp]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),tX=t.object({select:vz.optional(),include:Zz.optional(),where:fe.optional(),orderBy:t.union([Gp.array(),Gp]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([zC,zC.array()]).optional()}).strict(),xAt=t.object({where:fe.optional(),orderBy:t.union([Gp.array(),Gp]).optional(),cursor:Jt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),jAt=t.object({where:fe.optional(),orderBy:t.union([$V.array(),$V]).optional(),by:zC.array(),having:_A.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),MAt=t.object({select:vz.optional(),include:Zz.optional(),where:Jt}).strict(),ZAt=t.object({select:vz.optional(),include:Zz.optional(),where:Jt}).strict(),vAt=t.object({select:fz.optional(),include:Oz.optional(),where:Ma.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),OAt=t.object({select:fz.optional(),include:Oz.optional(),where:Ma.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),CN=t.object({select:fz.optional(),include:Oz.optional(),where:Ma.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([mC,mC.array()]).optional()}).strict(),fAt=t.object({where:Ma.optional(),orderBy:t.union([jb.array(),jb]).optional(),cursor:Tt.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),wAt=t.object({where:Ma.optional(),orderBy:t.union([JV.array(),JV]).optional(),by:mC.array(),having:EA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),NAt=t.object({select:fz.optional(),include:Oz.optional(),where:Tt}).strict(),BAt=t.object({select:fz.optional(),include:Oz.optional(),where:Tt}).strict(),qAt=t.object({select:Nz.optional(),include:wz.optional(),where:Pt.optional(),orderBy:t.union([Bl.array(),Bl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),FAt=t.object({select:Nz.optional(),include:wz.optional(),where:Pt.optional(),orderBy:t.union([Bl.array(),Bl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),cg=t.object({select:Nz.optional(),include:wz.optional(),where:Pt.optional(),orderBy:t.union([Bl.array(),Bl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([bC,bC.array()]).optional()}).strict(),DAt=t.object({where:Pt.optional(),orderBy:t.union([Bl.array(),Bl]).optional(),cursor:x.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),_At=t.object({where:Pt.optional(),orderBy:t.union([KV.array(),KV]).optional(),by:bC.array(),having:LA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),EAt=t.object({select:Nz.optional(),include:wz.optional(),where:x}).strict(),LAt=t.object({select:Nz.optional(),include:wz.optional(),where:x}).strict(),VAt=t.object({select:qz.optional(),include:Bz.optional(),where:De.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:_l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),HAt=t.object({select:qz.optional(),include:Bz.optional(),where:De.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:_l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),QAt=t.object({select:qz.optional(),include:Bz.optional(),where:De.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:_l.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([hC,hC.array()]).optional()}).strict(),YAt=t.object({where:De.optional(),orderBy:t.union([Lm.array(),Lm]).optional(),cursor:_l.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),GAt=t.object({where:De.optional(),orderBy:t.union([XV.array(),XV]).optional(),by:hC.array(),having:VA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),$At=t.object({select:qz.optional(),include:Bz.optional(),where:_l}).strict(),JAt=t.object({select:qz.optional(),include:Bz.optional(),where:_l}).strict(),KAt=t.object({select:Dz.optional(),include:Fz.optional(),where:Za.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),XAt=t.object({select:Dz.optional(),include:Fz.optional(),where:Za.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),eX=t.object({select:Dz.optional(),include:Fz.optional(),where:Za.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([IC,IC.array()]).optional()}).strict(),tSt=t.object({where:Za.optional(),orderBy:t.union([Mb.array(),Mb]).optional(),cursor:xe.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),eSt=t.object({where:Za.optional(),orderBy:t.union([tH.array(),tH]).optional(),by:IC.array(),having:HA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),oSt=t.object({select:Dz.optional(),include:Fz.optional(),where:xe}).strict(),nSt=t.object({select:Dz.optional(),include:Fz.optional(),where:xe}).strict(),aSt=t.object({select:Ez.optional(),include:_z.optional(),where:va.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),iSt=t.object({select:Ez.optional(),include:_z.optional(),where:va.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),oX=t.object({select:Ez.optional(),include:_z.optional(),where:va.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional(),distinct:t.union([gC,gC.array()]).optional()}).strict(),lSt=t.object({where:va.optional(),orderBy:t.union([Zb.array(),Zb]).optional(),cursor:je.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),rSt=t.object({where:va.optional(),orderBy:t.union([eH.array(),eH]).optional(),by:gC.array(),having:QA.optional(),take:t.number().optional(),skip:t.number().optional()}).strict(),pSt=t.object({select:Ez.optional(),include:_z.optional(),where:je}).strict(),cSt=t.object({select:Ez.optional(),include:_z.optional(),where:je}).strict(),uSt=t.object({select:vy.optional(),include:Zy.optional(),data:t.union([C0,A0])}).strict(),sSt=t.object({select:vy.optional(),include:Zy.optional(),where:ql,create:t.union([C0,A0]),update:t.union([S0,T0])}).strict(),ySt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dSt=t.object({data:t.union([yP,yP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zSt=t.object({select:vy.optional(),include:Zy.optional(),where:ql}).strict(),mSt=t.object({select:vy.optional(),include:Zy.optional(),data:t.union([S0,T0]),where:ql}).strict(),bSt=t.object({data:t.union([P0,U0]),where:Be.optional(),limit:t.number().optional()}).strict(),hSt=t.object({data:t.union([P0,U0]),where:Be.optional(),limit:t.number().optional()}).strict(),ISt=t.object({where:Be.optional(),limit:t.number().optional()}).strict(),gSt=t.object({select:fy.optional(),include:Oy.optional(),data:t.union([W0,R0])}).strict(),CSt=t.object({select:fy.optional(),include:Oy.optional(),where:be,create:t.union([W0,R0]),update:t.union([k0,x0])}).strict(),ASt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SSt=t.object({data:t.union([dP,dP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TSt=t.object({select:fy.optional(),include:Oy.optional(),where:be}).strict(),PSt=t.object({select:fy.optional(),include:Oy.optional(),data:t.union([k0,x0]),where:be}).strict(),USt=t.object({data:t.union([NN,j0]),where:oa.optional(),limit:t.number().optional()}).strict(),WSt=t.object({data:t.union([NN,j0]),where:oa.optional(),limit:t.number().optional()}).strict(),RSt=t.object({where:oa.optional(),limit:t.number().optional()}).strict(),kSt=t.object({select:Ny.optional(),include:wy.optional(),data:t.union([M0,Z0])}).strict(),xSt=t.object({select:Ny.optional(),include:wy.optional(),where:Fl,create:t.union([M0,Z0]),update:t.union([v0,O0])}).strict(),jSt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MSt=t.object({data:t.union([zP,zP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZSt=t.object({select:Ny.optional(),include:wy.optional(),where:Fl}).strict(),vSt=t.object({select:Ny.optional(),include:wy.optional(),data:t.union([v0,O0]),where:Fl}).strict(),OSt=t.object({data:t.union([f0,w0]),where:qe.optional(),limit:t.number().optional()}).strict(),fSt=t.object({data:t.union([f0,w0]),where:qe.optional(),limit:t.number().optional()}).strict(),wSt=t.object({where:qe.optional(),limit:t.number().optional()}).strict(),NSt=t.object({select:qy.optional(),include:By.optional(),data:t.union([N0,B0])}).strict(),BSt=t.object({select:qy.optional(),include:By.optional(),where:he,create:t.union([N0,B0]),update:t.union([q0,F0])}).strict(),qSt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FSt=t.object({data:t.union([mP,mP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DSt=t.object({select:qy.optional(),include:By.optional(),where:he}).strict(),_St=t.object({select:qy.optional(),include:By.optional(),data:t.union([q0,F0]),where:he}).strict(),ESt=t.object({data:t.union([BN,D0]),where:na.optional(),limit:t.number().optional()}).strict(),LSt=t.object({data:t.union([BN,D0]),where:na.optional(),limit:t.number().optional()}).strict(),VSt=t.object({where:na.optional(),limit:t.number().optional()}).strict(),HSt=t.object({select:Dy.optional(),include:Fy.optional(),data:t.union([_0,E0])}).strict(),QSt=t.object({select:Dy.optional(),include:Fy.optional(),where:Ie,create:t.union([_0,E0]),update:t.union([L0,V0])}).strict(),YSt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GSt=t.object({data:t.union([bP,bP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$St=t.object({select:Dy.optional(),include:Fy.optional(),where:Ie}).strict(),JSt=t.object({select:Dy.optional(),include:Fy.optional(),data:t.union([L0,V0]),where:Ie}).strict(),KSt=t.object({data:t.union([qN,H0]),where:aa.optional(),limit:t.number().optional()}).strict(),XSt=t.object({data:t.union([qN,H0]),where:aa.optional(),limit:t.number().optional()}).strict(),tTt=t.object({where:aa.optional(),limit:t.number().optional()}).strict(),eTt=t.object({select:Ey.optional(),include:_y.optional(),data:t.union([Q0,Y0])}).strict(),oTt=t.object({select:Ey.optional(),include:_y.optional(),where:ge,create:t.union([Q0,Y0]),update:t.union([G0,$0])}).strict(),nTt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aTt=t.object({data:t.union([hP,hP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iTt=t.object({select:Ey.optional(),include:_y.optional(),where:ge}).strict(),lTt=t.object({select:Ey.optional(),include:_y.optional(),data:t.union([G0,$0]),where:ge}).strict(),rTt=t.object({data:t.union([FN,J0]),where:ia.optional(),limit:t.number().optional()}).strict(),pTt=t.object({data:t.union([FN,J0]),where:ia.optional(),limit:t.number().optional()}).strict(),cTt=t.object({where:ia.optional(),limit:t.number().optional()}).strict(),uTt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([K0,X0])}).strict(),sTt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ce,create:t.union([K0,X0]),update:t.union([tY,eY])}).strict(),yTt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dTt=t.object({data:t.union([IP,IP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zTt=t.object({select:Vy.optional(),include:Ly.optional(),where:Ce}).strict(),mTt=t.object({select:Vy.optional(),include:Ly.optional(),data:t.union([tY,eY]),where:Ce}).strict(),bTt=t.object({data:t.union([DN,oY]),where:la.optional(),limit:t.number().optional()}).strict(),hTt=t.object({data:t.union([DN,oY]),where:la.optional(),limit:t.number().optional()}).strict(),ITt=t.object({where:la.optional(),limit:t.number().optional()}).strict(),gTt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([nY,aY])}).strict(),CTt=t.object({select:Qy.optional(),include:Hy.optional(),where:ht,create:t.union([nY,aY]),update:t.union([iY,lY])}).strict(),ATt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),STt=t.object({data:t.union([gP,gP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TTt=t.object({select:Qy.optional(),include:Hy.optional(),where:ht}).strict(),PTt=t.object({select:Qy.optional(),include:Hy.optional(),data:t.union([iY,lY]),where:ht}).strict(),UTt=t.object({data:t.union([Xj,rY]),where:ra.optional(),limit:t.number().optional()}).strict(),WTt=t.object({data:t.union([Xj,rY]),where:ra.optional(),limit:t.number().optional()}).strict(),RTt=t.object({where:ra.optional(),limit:t.number().optional()}).strict(),kTt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([pY,cY])}).strict(),xTt=t.object({select:Gy.optional(),include:Yy.optional(),where:ee,create:t.union([pY,cY]),update:t.union([uY,sY])}).strict(),jTt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MTt=t.object({data:t.union([CP,CP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZTt=t.object({select:Gy.optional(),include:Yy.optional(),where:ee}).strict(),vTt=t.object({select:Gy.optional(),include:Yy.optional(),data:t.union([uY,sY]),where:ee}).strict(),OTt=t.object({data:t.union([_N,yY]),where:we.optional(),limit:t.number().optional()}).strict(),fTt=t.object({data:t.union([_N,yY]),where:we.optional(),limit:t.number().optional()}).strict(),wTt=t.object({where:we.optional(),limit:t.number().optional()}).strict(),NTt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([dY,zY])}).strict(),BTt=t.object({select:Jy.optional(),include:$y.optional(),where:N,create:t.union([dY,zY]),update:t.union([mY,bY])}).strict(),qTt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FTt=t.object({data:t.union([AP,AP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DTt=t.object({select:Jy.optional(),include:$y.optional(),where:N}).strict(),_Tt=t.object({select:Jy.optional(),include:$y.optional(),data:t.union([mY,bY]),where:N}).strict(),ETt=t.object({data:t.union([fT,hY]),where:le.optional(),limit:t.number().optional()}).strict(),LTt=t.object({data:t.union([fT,hY]),where:le.optional(),limit:t.number().optional()}).strict(),VTt=t.object({where:le.optional(),limit:t.number().optional()}).strict(),HTt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([IY,gY])}).strict(),QTt=t.object({select:Xy.optional(),include:Ky.optional(),where:Yt,create:t.union([IY,gY]),update:t.union([CY,AY])}).strict(),YTt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GTt=t.object({data:t.union([SP,SP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Tt=t.object({select:Xy.optional(),include:Ky.optional(),where:Yt}).strict(),JTt=t.object({select:Xy.optional(),include:Ky.optional(),data:t.union([CY,AY]),where:Yt}).strict(),KTt=t.object({data:t.union([EN,SY]),where:Ze.optional(),limit:t.number().optional()}).strict(),XTt=t.object({data:t.union([EN,SY]),where:Ze.optional(),limit:t.number().optional()}).strict(),tPt=t.object({where:Ze.optional(),limit:t.number().optional()}).strict(),ePt=t.object({select:ed.optional(),include:td.optional(),data:t.union([TY,PY])}).strict(),oPt=t.object({select:ed.optional(),include:td.optional(),where:q,create:t.union([TY,PY]),update:t.union([UY,WY])}).strict(),nPt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aPt=t.object({data:t.union([TP,TP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iPt=t.object({select:ed.optional(),include:td.optional(),where:q}).strict(),lPt=t.object({select:ed.optional(),include:td.optional(),data:t.union([UY,WY]),where:q}).strict(),rPt=t.object({data:t.union([wT,RY]),where:pa.optional(),limit:t.number().optional()}).strict(),pPt=t.object({data:t.union([wT,RY]),where:pa.optional(),limit:t.number().optional()}).strict(),cPt=t.object({where:pa.optional(),limit:t.number().optional()}).strict(),uPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([kY,xY])}).strict(),sPt=t.object({select:nd.optional(),include:od.optional(),where:Ae,create:t.union([kY,xY]),update:t.union([jY,MY])}).strict(),yPt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dPt=t.object({data:t.union([PP,PP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zPt=t.object({select:nd.optional(),include:od.optional(),where:Ae}).strict(),mPt=t.object({select:nd.optional(),include:od.optional(),data:t.union([jY,MY]),where:Ae}).strict(),bPt=t.object({data:t.union([LN,ZY]),where:ca.optional(),limit:t.number().optional()}).strict(),hPt=t.object({data:t.union([LN,ZY]),where:ca.optional(),limit:t.number().optional()}).strict(),IPt=t.object({where:ca.optional(),limit:t.number().optional()}).strict(),gPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([vY,OY])}).strict(),CPt=t.object({select:id.optional(),include:ad.optional(),where:Gt,create:t.union([vY,OY]),update:t.union([fY,wY])}).strict(),APt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SPt=t.object({data:t.union([UP,UP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TPt=t.object({select:id.optional(),include:ad.optional(),where:Gt}).strict(),PPt=t.object({select:id.optional(),include:ad.optional(),data:t.union([fY,wY]),where:Gt}).strict(),UPt=t.object({data:t.union([VN,NY]),where:ve.optional(),limit:t.number().optional()}).strict(),WPt=t.object({data:t.union([VN,NY]),where:ve.optional(),limit:t.number().optional()}).strict(),RPt=t.object({where:ve.optional(),limit:t.number().optional()}).strict(),kPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([BY,qY])}).strict(),xPt=t.object({select:rd.optional(),include:ld.optional(),where:oe,create:t.union([BY,qY]),update:t.union([FY,DY])}).strict(),jPt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MPt=t.object({data:t.union([WP,WP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZPt=t.object({select:rd.optional(),include:ld.optional(),where:oe}).strict(),vPt=t.object({select:rd.optional(),include:ld.optional(),data:t.union([FY,DY]),where:oe}).strict(),OPt=t.object({data:t.union([HN,_Y]),where:Qe.optional(),limit:t.number().optional()}).strict(),fPt=t.object({data:t.union([HN,_Y]),where:Qe.optional(),limit:t.number().optional()}).strict(),wPt=t.object({where:Qe.optional(),limit:t.number().optional()}).strict(),NPt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([EY,LY])}).strict(),BPt=t.object({select:cd.optional(),include:pd.optional(),where:rt,create:t.union([EY,LY]),update:t.union([VY,HY])}).strict(),qPt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FPt=t.object({data:t.union([RP,RP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DPt=t.object({select:cd.optional(),include:pd.optional(),where:rt}).strict(),_Pt=t.object({select:cd.optional(),include:pd.optional(),data:t.union([VY,HY]),where:rt}).strict(),EPt=t.object({data:t.union([tM,QY]),where:Ye.optional(),limit:t.number().optional()}).strict(),LPt=t.object({data:t.union([tM,QY]),where:Ye.optional(),limit:t.number().optional()}).strict(),VPt=t.object({where:Ye.optional(),limit:t.number().optional()}).strict(),HPt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([YY,GY])}).strict(),QPt=t.object({select:sd.optional(),include:ud.optional(),where:It,create:t.union([YY,GY]),update:t.union([$Y,JY])}).strict(),YPt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GPt=t.object({data:t.union([kP,kP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Pt=t.object({select:sd.optional(),include:ud.optional(),where:It}).strict(),JPt=t.object({select:sd.optional(),include:ud.optional(),data:t.union([$Y,JY]),where:It}).strict(),KPt=t.object({data:t.union([eM,KY]),where:ua.optional(),limit:t.number().optional()}).strict(),XPt=t.object({data:t.union([eM,KY]),where:ua.optional(),limit:t.number().optional()}).strict(),tUt=t.object({where:ua.optional(),limit:t.number().optional()}).strict(),eUt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([XY,tG])}).strict(),oUt=t.object({select:dd.optional(),include:yd.optional(),where:gt,create:t.union([XY,tG]),update:t.union([eG,oG])}).strict(),nUt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aUt=t.object({data:t.union([xP,xP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iUt=t.object({select:dd.optional(),include:yd.optional(),where:gt}).strict(),lUt=t.object({select:dd.optional(),include:yd.optional(),data:t.union([eG,oG]),where:gt}).strict(),rUt=t.object({data:t.union([oM,nG]),where:sa.optional(),limit:t.number().optional()}).strict(),pUt=t.object({data:t.union([oM,nG]),where:sa.optional(),limit:t.number().optional()}).strict(),cUt=t.object({where:sa.optional(),limit:t.number().optional()}).strict(),uUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([aG,iG])}).strict(),sUt=t.object({select:md.optional(),include:zd.optional(),where:F,create:t.union([aG,iG]),update:t.union([lG,rG])}).strict(),yUt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dUt=t.object({data:t.union([jP,jP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zUt=t.object({select:md.optional(),include:zd.optional(),where:F}).strict(),mUt=t.object({select:md.optional(),include:zd.optional(),data:t.union([lG,rG]),where:F}).strict(),bUt=t.object({data:t.union([NT,pG]),where:ya.optional(),limit:t.number().optional()}).strict(),hUt=t.object({data:t.union([NT,pG]),where:ya.optional(),limit:t.number().optional()}).strict(),IUt=t.object({where:ya.optional(),limit:t.number().optional()}).strict(),gUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([cG,uG])}).strict(),CUt=t.object({select:hd.optional(),include:bd.optional(),where:D,create:t.union([cG,uG]),update:t.union([sG,yG])}).strict(),AUt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SUt=t.object({data:t.union([MP,MP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TUt=t.object({select:hd.optional(),include:bd.optional(),where:D}).strict(),PUt=t.object({select:hd.optional(),include:bd.optional(),data:t.union([sG,yG]),where:D}).strict(),UUt=t.object({data:t.union([BT,dG]),where:da.optional(),limit:t.number().optional()}).strict(),WUt=t.object({data:t.union([BT,dG]),where:da.optional(),limit:t.number().optional()}).strict(),RUt=t.object({where:da.optional(),limit:t.number().optional()}).strict(),kUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([zG,mG])}).strict(),xUt=t.object({select:gd.optional(),include:Id.optional(),where:Se,create:t.union([zG,mG]),update:t.union([bG,hG])}).strict(),jUt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MUt=t.object({data:t.union([ZP,ZP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZUt=t.object({select:gd.optional(),include:Id.optional(),where:Se}).strict(),vUt=t.object({select:gd.optional(),include:Id.optional(),data:t.union([bG,hG]),where:Se}).strict(),OUt=t.object({data:t.union([QN,IG]),where:za.optional(),limit:t.number().optional()}).strict(),fUt=t.object({data:t.union([QN,IG]),where:za.optional(),limit:t.number().optional()}).strict(),wUt=t.object({where:za.optional(),limit:t.number().optional()}).strict(),NUt=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([gG,CG])}).strict(),BUt=t.object({select:Ad.optional(),include:Cd.optional(),where:_,create:t.union([gG,CG]),update:t.union([AG,SG])}).strict(),qUt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FUt=t.object({data:t.union([vP,vP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DUt=t.object({select:Ad.optional(),include:Cd.optional(),where:_}).strict(),_Ut=t.object({select:Ad.optional(),include:Cd.optional(),data:t.union([AG,SG]),where:_}).strict(),EUt=t.object({data:t.union([qT,TG]),where:ma.optional(),limit:t.number().optional()}).strict(),LUt=t.object({data:t.union([qT,TG]),where:ma.optional(),limit:t.number().optional()}).strict(),VUt=t.object({where:ma.optional(),limit:t.number().optional()}).strict(),HUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([PG,UG])}).strict(),QUt=t.object({select:Td.optional(),include:Sd.optional(),where:E,create:t.union([PG,UG]),update:t.union([WG,RG])}).strict(),YUt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GUt=t.object({data:t.union([OP,OP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Ut=t.object({select:Td.optional(),include:Sd.optional(),where:E}).strict(),JUt=t.object({select:Td.optional(),include:Sd.optional(),data:t.union([WG,RG]),where:E}).strict(),KUt=t.object({data:t.union([FT,kG]),where:ba.optional(),limit:t.number().optional()}).strict(),XUt=t.object({data:t.union([FT,kG]),where:ba.optional(),limit:t.number().optional()}).strict(),tWt=t.object({where:ba.optional(),limit:t.number().optional()}).strict(),eWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([xG,jG])}).strict(),oWt=t.object({select:Ud.optional(),include:Pd.optional(),where:pt,create:t.union([xG,jG]),update:t.union([MG,ZG])}).strict(),nWt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aWt=t.object({data:t.union([fP,fP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iWt=t.object({select:Ud.optional(),include:Pd.optional(),where:pt}).strict(),lWt=t.object({select:Ud.optional(),include:Pd.optional(),data:t.union([MG,ZG]),where:pt}).strict(),rWt=t.object({data:t.union([nM,vG]),where:Ge.optional(),limit:t.number().optional()}).strict(),pWt=t.object({data:t.union([nM,vG]),where:Ge.optional(),limit:t.number().optional()}).strict(),cWt=t.object({where:Ge.optional(),limit:t.number().optional()}).strict(),uWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([OG,fG])}).strict(),sWt=t.object({select:Rd.optional(),include:Wd.optional(),where:L,create:t.union([OG,fG]),update:t.union([wG,NG])}).strict(),yWt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dWt=t.object({data:t.union([wP,wP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zWt=t.object({select:Rd.optional(),include:Wd.optional(),where:L}).strict(),mWt=t.object({select:Rd.optional(),include:Wd.optional(),data:t.union([wG,NG]),where:L}).strict(),bWt=t.object({data:t.union([DT,BG]),where:ha.optional(),limit:t.number().optional()}).strict(),hWt=t.object({data:t.union([DT,BG]),where:ha.optional(),limit:t.number().optional()}).strict(),IWt=t.object({where:ha.optional(),limit:t.number().optional()}).strict(),gWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([qG,FG])}).strict(),CWt=t.object({select:xd.optional(),include:kd.optional(),where:Te,create:t.union([qG,FG]),update:t.union([DG,_G])}).strict(),AWt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SWt=t.object({data:t.union([NP,NP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TWt=t.object({select:xd.optional(),include:kd.optional(),where:Te}).strict(),PWt=t.object({select:xd.optional(),include:kd.optional(),data:t.union([DG,_G]),where:Te}).strict(),UWt=t.object({data:t.union([YN,EG]),where:Ia.optional(),limit:t.number().optional()}).strict(),WWt=t.object({data:t.union([YN,EG]),where:Ia.optional(),limit:t.number().optional()}).strict(),RWt=t.object({where:Ia.optional(),limit:t.number().optional()}).strict(),kWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([LG,VG])}).strict(),xWt=t.object({select:Md.optional(),include:jd.optional(),where:Pe,create:t.union([LG,VG]),update:t.union([HG,QG])}).strict(),jWt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MWt=t.object({data:t.union([BP,BP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZWt=t.object({select:Md.optional(),include:jd.optional(),where:Pe}).strict(),vWt=t.object({select:Md.optional(),include:jd.optional(),data:t.union([HG,QG]),where:Pe}).strict(),OWt=t.object({data:t.union([GN,YG]),where:ga.optional(),limit:t.number().optional()}).strict(),fWt=t.object({data:t.union([GN,YG]),where:ga.optional(),limit:t.number().optional()}).strict(),wWt=t.object({where:ga.optional(),limit:t.number().optional()}).strict(),NWt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([GG,$G])}).strict(),BWt=t.object({select:vd.optional(),include:Zd.optional(),where:Ue,create:t.union([GG,$G]),update:t.union([JG,KG])}).strict(),qWt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FWt=t.object({data:t.union([qP,qP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DWt=t.object({select:vd.optional(),include:Zd.optional(),where:Ue}).strict(),_Wt=t.object({select:vd.optional(),include:Zd.optional(),data:t.union([JG,KG]),where:Ue}).strict(),EWt=t.object({data:t.union([$N,XG]),where:Ca.optional(),limit:t.number().optional()}).strict(),LWt=t.object({data:t.union([$N,XG]),where:Ca.optional(),limit:t.number().optional()}).strict(),VWt=t.object({where:Ca.optional(),limit:t.number().optional()}).strict(),HWt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([t1,e1])}).strict(),QWt=t.object({select:fd.optional(),include:Od.optional(),where:V,create:t.union([t1,e1]),update:t.union([o1,n1])}).strict(),YWt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GWt=t.object({data:t.union([FP,FP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Wt=t.object({select:fd.optional(),include:Od.optional(),where:V}).strict(),JWt=t.object({select:fd.optional(),include:Od.optional(),data:t.union([o1,n1]),where:V}).strict(),KWt=t.object({data:t.union([_T,a1]),where:Aa.optional(),limit:t.number().optional()}).strict(),XWt=t.object({data:t.union([_T,a1]),where:Aa.optional(),limit:t.number().optional()}).strict(),tRt=t.object({where:Aa.optional(),limit:t.number().optional()}).strict(),eRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([i1,l1])}).strict(),oRt=t.object({select:Nd.optional(),include:wd.optional(),where:np,create:t.union([i1,l1]),update:t.union([r1,p1])}).strict(),nRt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),aRt=t.object({data:t.union([DP,DP.array()]),skipDuplicates:t.boolean().optional()}).strict(),iRt=t.object({select:Nd.optional(),include:wd.optional(),where:np}).strict(),lRt=t.object({select:Nd.optional(),include:wd.optional(),data:t.union([r1,p1]),where:np}).strict(),rRt=t.object({data:t.union([c1,u1]),where:co.optional(),limit:t.number().optional()}).strict(),pRt=t.object({data:t.union([c1,u1]),where:co.optional(),limit:t.number().optional()}).strict(),cRt=t.object({where:co.optional(),limit:t.number().optional()}).strict(),uRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([s1,y1])}).strict(),sRt=t.object({select:qd.optional(),include:Bd.optional(),where:Ct,create:t.union([s1,y1]),update:t.union([d1,z1])}).strict(),yRt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),dRt=t.object({data:t.union([_P,_P.array()]),skipDuplicates:t.boolean().optional()}).strict(),zRt=t.object({select:qd.optional(),include:Bd.optional(),where:Ct}).strict(),mRt=t.object({select:qd.optional(),include:Bd.optional(),data:t.union([d1,z1]),where:Ct}).strict(),bRt=t.object({data:t.union([aM,m1]),where:Sa.optional(),limit:t.number().optional()}).strict(),hRt=t.object({data:t.union([aM,m1]),where:Sa.optional(),limit:t.number().optional()}).strict(),IRt=t.object({where:Sa.optional(),limit:t.number().optional()}).strict(),gRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([b1,h1])}).strict(),CRt=t.object({select:Dd.optional(),include:Fd.optional(),where:We,create:t.union([b1,h1]),update:t.union([I1,g1])}).strict(),ARt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),SRt=t.object({data:t.union([EP,EP.array()]),skipDuplicates:t.boolean().optional()}).strict(),TRt=t.object({select:Dd.optional(),include:Fd.optional(),where:We}).strict(),PRt=t.object({select:Dd.optional(),include:Fd.optional(),data:t.union([I1,g1]),where:We}).strict(),URt=t.object({data:t.union([JN,C1]),where:Ta.optional(),limit:t.number().optional()}).strict(),WRt=t.object({data:t.union([JN,C1]),where:Ta.optional(),limit:t.number().optional()}).strict(),RRt=t.object({where:Ta.optional(),limit:t.number().optional()}).strict(),kRt=t.object({select:Vm.optional(),data:t.union([A1,S1])}).strict(),xRt=t.object({select:Vm.optional(),where:Hm,create:t.union([A1,S1]),update:t.union([T1,P1])}).strict(),jRt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),MRt=t.object({data:t.union([LP,LP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZRt=t.object({select:Vm.optional(),where:Hm}).strict(),vRt=t.object({select:Vm.optional(),data:t.union([T1,P1]),where:Hm}).strict(),ORt=t.object({data:t.union([U1,W1]),where:bl.optional(),limit:t.number().optional()}).strict(),fRt=t.object({data:t.union([U1,W1]),where:bl.optional(),limit:t.number().optional()}).strict(),wRt=t.object({where:bl.optional(),limit:t.number().optional()}).strict(),NRt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([R1,k1])}).strict(),BRt=t.object({select:Ed.optional(),include:_d.optional(),where:Ol,create:t.union([R1,k1]),update:t.union([x1,j1])}).strict(),qRt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),FRt=t.object({data:t.union([VP,VP.array()]),skipDuplicates:t.boolean().optional()}).strict(),DRt=t.object({select:Ed.optional(),include:_d.optional(),where:Ol}).strict(),_Rt=t.object({select:Ed.optional(),include:_d.optional(),data:t.union([x1,j1]),where:Ol}).strict(),ERt=t.object({data:t.union([M1,Z1]),where:Me.optional(),limit:t.number().optional()}).strict(),LRt=t.object({data:t.union([M1,Z1]),where:Me.optional(),limit:t.number().optional()}).strict(),VRt=t.object({where:Me.optional(),limit:t.number().optional()}).strict(),HRt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([v1,O1])}).strict(),QRt=t.object({select:Vd.optional(),include:Ld.optional(),where:$n,create:t.union([v1,O1]),update:t.union([f1,w1])}).strict(),YRt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),GRt=t.object({data:t.union([HP,HP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Rt=t.object({select:Vd.optional(),include:Ld.optional(),where:$n}).strict(),JRt=t.object({select:Vd.optional(),include:Ld.optional(),data:t.union([f1,w1]),where:$n}).strict(),KRt=t.object({data:t.union([N1,B1]),where:_t.optional(),limit:t.number().optional()}).strict(),XRt=t.object({data:t.union([N1,B1]),where:_t.optional(),limit:t.number().optional()}).strict(),tkt=t.object({where:_t.optional(),limit:t.number().optional()}).strict(),ekt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([q1,F1])}).strict(),okt=t.object({select:Qd.optional(),include:Hd.optional(),where:X,create:t.union([q1,F1]),update:t.union([D1,_1])}).strict(),nkt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),akt=t.object({data:t.union([QP,QP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ikt=t.object({select:Qd.optional(),include:Hd.optional(),where:X}).strict(),lkt=t.object({select:Qd.optional(),include:Hd.optional(),data:t.union([D1,_1]),where:X}).strict(),rkt=t.object({data:t.union([KN,E1]),where:B.optional(),limit:t.number().optional()}).strict(),pkt=t.object({data:t.union([KN,E1]),where:B.optional(),limit:t.number().optional()}).strict(),ckt=t.object({where:B.optional(),limit:t.number().optional()}).strict(),ukt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([L1,V1])}).strict(),skt=t.object({select:Gd.optional(),include:Yd.optional(),where:M,create:t.union([L1,V1]),update:t.union([H1,Q1])}).strict(),ykt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),dkt=t.object({data:t.union([YP,YP.array()]),skipDuplicates:t.boolean().optional()}).strict(),zkt=t.object({select:Gd.optional(),include:Yd.optional(),where:M}).strict(),mkt=t.object({select:Gd.optional(),include:Yd.optional(),data:t.union([H1,Q1]),where:M}).strict(),bkt=t.object({data:t.union([iM,Y1]),where:v.optional(),limit:t.number().optional()}).strict(),hkt=t.object({data:t.union([iM,Y1]),where:v.optional(),limit:t.number().optional()}).strict(),Ikt=t.object({where:v.optional(),limit:t.number().optional()}).strict(),gkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([G1,$1])}).strict(),Ckt=t.object({select:Jd.optional(),include:$d.optional(),where:Re,create:t.union([G1,$1]),update:t.union([J1,K1])}).strict(),Akt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Skt=t.object({data:t.union([GP,GP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tkt=t.object({select:Jd.optional(),include:$d.optional(),where:Re}).strict(),Pkt=t.object({select:Jd.optional(),include:$d.optional(),data:t.union([J1,K1]),where:Re}).strict(),Ukt=t.object({data:t.union([XN,X1]),where:Pa.optional(),limit:t.number().optional()}).strict(),Wkt=t.object({data:t.union([XN,X1]),where:Pa.optional(),limit:t.number().optional()}).strict(),Rkt=t.object({where:Pa.optional(),limit:t.number().optional()}).strict(),kkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([t9,e9])}).strict(),xkt=t.object({select:Xd.optional(),include:Kd.optional(),where:ne,create:t.union([t9,e9]),update:t.union([o9,n9])}).strict(),jkt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mkt=t.object({data:t.union([$P,$P.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zkt=t.object({select:Xd.optional(),include:Kd.optional(),where:ne}).strict(),vkt=t.object({select:Xd.optional(),include:Kd.optional(),data:t.union([o9,n9]),where:ne}).strict(),Okt=t.object({data:t.union([tB,a9]),where:$e.optional(),limit:t.number().optional()}).strict(),fkt=t.object({data:t.union([tB,a9]),where:$e.optional(),limit:t.number().optional()}).strict(),wkt=t.object({where:$e.optional(),limit:t.number().optional()}).strict(),Nkt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([i9,l9])}).strict(),Bkt=t.object({select:ez.optional(),include:tz.optional(),where:C,create:t.union([i9,l9]),update:t.union([r9,p9])}).strict(),qkt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fkt=t.object({data:t.union([JP,JP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dkt=t.object({select:ez.optional(),include:tz.optional(),where:C}).strict(),_kt=t.object({select:ez.optional(),include:tz.optional(),data:t.union([r9,p9]),where:C}).strict(),Ekt=t.object({data:t.union([WI,c9]),where:O.optional(),limit:t.number().optional()}).strict(),Lkt=t.object({data:t.union([WI,c9]),where:O.optional(),limit:t.number().optional()}).strict(),Vkt=t.object({where:O.optional(),limit:t.number().optional()}).strict(),Hkt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([u9,s9])}).strict(),Qkt=t.object({select:nz.optional(),include:oz.optional(),where:J,create:t.union([u9,s9]),update:t.union([y9,d9])}).strict(),Ykt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gkt=t.object({data:t.union([KP,KP.array()]),skipDuplicates:t.boolean().optional()}).strict(),$kt=t.object({select:nz.optional(),include:oz.optional(),where:J}).strict(),Jkt=t.object({select:nz.optional(),include:oz.optional(),data:t.union([y9,d9]),where:J}).strict(),Kkt=t.object({data:t.union([lM,z9]),where:Mt.optional(),limit:t.number().optional()}).strict(),Xkt=t.object({data:t.union([lM,z9]),where:Mt.optional(),limit:t.number().optional()}).strict(),txt=t.object({where:Mt.optional(),limit:t.number().optional()}).strict(),ext=t.object({select:iz.optional(),include:az.optional(),data:t.union([m9,b9])}).strict(),oxt=t.object({select:iz.optional(),include:az.optional(),where:H,create:t.union([m9,b9]),update:t.union([h9,I9])}).strict(),nxt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),axt=t.object({data:t.union([XP,XP.array()]),skipDuplicates:t.boolean().optional()}).strict(),ixt=t.object({select:iz.optional(),include:az.optional(),where:H}).strict(),lxt=t.object({select:iz.optional(),include:az.optional(),data:t.union([h9,I9]),where:H}).strict(),rxt=t.object({data:t.union([ET,g9]),where:Ua.optional(),limit:t.number().optional()}).strict(),pxt=t.object({data:t.union([ET,g9]),where:Ua.optional(),limit:t.number().optional()}).strict(),cxt=t.object({where:Ua.optional(),limit:t.number().optional()}).strict(),uxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([C9,A9])}).strict(),sxt=t.object({select:rz.optional(),include:lz.optional(),where:ct,create:t.union([C9,A9]),update:t.union([S9,T9])}).strict(),yxt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),dxt=t.object({data:t.union([tU,tU.array()]),skipDuplicates:t.boolean().optional()}).strict(),zxt=t.object({select:rz.optional(),include:lz.optional(),where:ct}).strict(),mxt=t.object({select:rz.optional(),include:lz.optional(),data:t.union([S9,T9]),where:ct}).strict(),bxt=t.object({data:t.union([rM,P9]),where:Ne.optional(),limit:t.number().optional()}).strict(),hxt=t.object({data:t.union([rM,P9]),where:Ne.optional(),limit:t.number().optional()}).strict(),Ixt=t.object({where:Ne.optional(),limit:t.number().optional()}).strict(),gxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([U9,W9])}).strict(),Cxt=t.object({select:cz.optional(),include:pz.optional(),where:w,create:t.union([U9,W9]),update:t.union([R9,k9])}).strict(),Axt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sxt=t.object({data:t.union([eU,eU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Txt=t.object({select:cz.optional(),include:pz.optional(),where:w}).strict(),Pxt=t.object({select:cz.optional(),include:pz.optional(),data:t.union([R9,k9]),where:w}).strict(),Uxt=t.object({data:t.union([LT,x9]),where:re.optional(),limit:t.number().optional()}).strict(),Wxt=t.object({data:t.union([LT,x9]),where:re.optional(),limit:t.number().optional()}).strict(),Rxt=t.object({where:re.optional(),limit:t.number().optional()}).strict(),kxt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([j9,M9])}).strict(),xxt=t.object({select:sz.optional(),include:uz.optional(),where:Q,create:t.union([j9,M9]),update:t.union([Z9,v9])}).strict(),jxt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mxt=t.object({data:t.union([oU,oU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zxt=t.object({select:sz.optional(),include:uz.optional(),where:Q}).strict(),vxt=t.object({select:sz.optional(),include:uz.optional(),data:t.union([Z9,v9]),where:Q}).strict(),Oxt=t.object({data:t.union([VT,O9]),where:Wa.optional(),limit:t.number().optional()}).strict(),fxt=t.object({data:t.union([VT,O9]),where:Wa.optional(),limit:t.number().optional()}).strict(),wxt=t.object({where:Wa.optional(),limit:t.number().optional()}).strict(),Nxt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([f9,w9])}).strict(),Bxt=t.object({select:dz.optional(),include:yz.optional(),where:ut,create:t.union([f9,w9]),update:t.union([N9,B9])}).strict(),qxt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fxt=t.object({data:t.union([nU,nU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Dxt=t.object({select:dz.optional(),include:yz.optional(),where:ut}).strict(),_xt=t.object({select:dz.optional(),include:yz.optional(),data:t.union([N9,B9]),where:ut}).strict(),Ext=t.object({data:t.union([pM,q9]),where:Je.optional(),limit:t.number().optional()}).strict(),Lxt=t.object({data:t.union([pM,q9]),where:Je.optional(),limit:t.number().optional()}).strict(),Vxt=t.object({where:Je.optional(),limit:t.number().optional()}).strict(),Hxt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([F9,D9])}).strict(),Qxt=t.object({select:mz.optional(),include:zz.optional(),where:At,create:t.union([F9,D9]),update:t.union([_9,E9])}).strict(),Yxt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gxt=t.object({data:t.union([aU,aU.array()]),skipDuplicates:t.boolean().optional()}).strict(),$xt=t.object({select:mz.optional(),include:zz.optional(),where:At}).strict(),Jxt=t.object({select:mz.optional(),include:zz.optional(),data:t.union([_9,E9]),where:At}).strict(),Kxt=t.object({data:t.union([cM,L9]),where:Ra.optional(),limit:t.number().optional()}).strict(),Xxt=t.object({data:t.union([cM,L9]),where:Ra.optional(),limit:t.number().optional()}).strict(),tjt=t.object({where:Ra.optional(),limit:t.number().optional()}).strict(),ejt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([V9,H9])}).strict(),ojt=t.object({select:hz.optional(),include:bz.optional(),where:Dl,create:t.union([V9,H9]),update:t.union([Q9,Y9])}).strict(),njt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ajt=t.object({data:t.union([iU,iU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ijt=t.object({select:hz.optional(),include:bz.optional(),where:Dl}).strict(),ljt=t.object({select:hz.optional(),include:bz.optional(),data:t.union([Q9,Y9]),where:Dl}).strict(),rjt=t.object({data:t.union([G9,$9]),where:Fe.optional(),limit:t.number().optional()}).strict(),pjt=t.object({data:t.union([G9,$9]),where:Fe.optional(),limit:t.number().optional()}).strict(),cjt=t.object({where:Fe.optional(),limit:t.number().optional()}).strict(),ujt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([J9,K9])}).strict(),sjt=t.object({select:gz.optional(),include:Iz.optional(),where:st,create:t.union([J9,K9]),update:t.union([X9,t$])}).strict(),yjt=t.object({data:t.union([lU,lU.array()]),skipDuplicates:t.boolean().optional()}).strict(),djt=t.object({data:t.union([lU,lU.array()]),skipDuplicates:t.boolean().optional()}).strict(),zjt=t.object({select:gz.optional(),include:Iz.optional(),where:st}).strict(),mjt=t.object({select:gz.optional(),include:Iz.optional(),data:t.union([X9,t$]),where:st}).strict(),bjt=t.object({data:t.union([uM,e$]),where:Ke.optional(),limit:t.number().optional()}).strict(),hjt=t.object({data:t.union([uM,e$]),where:Ke.optional(),limit:t.number().optional()}).strict(),Ijt=t.object({where:Ke.optional(),limit:t.number().optional()}).strict(),gjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([o$,n$])}).strict(),Cjt=t.object({select:Az.optional(),include:Cz.optional(),where:St,create:t.union([o$,n$]),update:t.union([a$,i$])}).strict(),Ajt=t.object({data:t.union([rU,rU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Sjt=t.object({data:t.union([rU,rU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Tjt=t.object({select:Az.optional(),include:Cz.optional(),where:St}).strict(),Pjt=t.object({select:Az.optional(),include:Cz.optional(),data:t.union([a$,i$]),where:St}).strict(),Ujt=t.object({data:t.union([sM,l$]),where:ka.optional(),limit:t.number().optional()}).strict(),Wjt=t.object({data:t.union([sM,l$]),where:ka.optional(),limit:t.number().optional()}).strict(),Rjt=t.object({where:ka.optional(),limit:t.number().optional()}).strict(),kjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([r$,p$])}).strict(),xjt=t.object({select:Tz.optional(),include:Sz.optional(),where:$t,create:t.union([r$,p$]),update:t.union([c$,u$])}).strict(),jjt=t.object({data:t.union([pU,pU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Mjt=t.object({data:t.union([pU,pU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Zjt=t.object({select:Tz.optional(),include:Sz.optional(),where:$t}).strict(),vjt=t.object({select:Tz.optional(),include:Sz.optional(),data:t.union([c$,u$]),where:$t}).strict(),Ojt=t.object({data:t.union([eB,s$]),where:Oe.optional(),limit:t.number().optional()}).strict(),fjt=t.object({data:t.union([eB,s$]),where:Oe.optional(),limit:t.number().optional()}).strict(),wjt=t.object({where:Oe.optional(),limit:t.number().optional()}).strict(),Njt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([y$,d$])}).strict(),Bjt=t.object({select:Uz.optional(),include:Pz.optional(),where:ae,create:t.union([y$,d$]),update:t.union([z$,m$])}).strict(),qjt=t.object({data:t.union([cU,cU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Fjt=t.object({data:t.union([cU,cU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Djt=t.object({select:Uz.optional(),include:Pz.optional(),where:ae}).strict(),_jt=t.object({select:Uz.optional(),include:Pz.optional(),data:t.union([z$,m$]),where:ae}).strict(),Ejt=t.object({data:t.union([oB,b$]),where:Xe.optional(),limit:t.number().optional()}).strict(),Ljt=t.object({data:t.union([oB,b$]),where:Xe.optional(),limit:t.number().optional()}).strict(),Vjt=t.object({where:Xe.optional(),limit:t.number().optional()}).strict(),Hjt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([h$,I$])}).strict(),Qjt=t.object({select:Rz.optional(),include:Wz.optional(),where:ie,create:t.union([h$,I$]),update:t.union([g$,C$])}).strict(),Yjt=t.object({data:t.union([uU,uU.array()]),skipDuplicates:t.boolean().optional()}).strict(),Gjt=t.object({data:t.union([uU,uU.array()]),skipDuplicates:t.boolean().optional()}).strict(),$jt=t.object({select:Rz.optional(),include:Wz.optional(),where:ie}).strict(),Jjt=t.object({select:Rz.optional(),include:Wz.optional(),data:t.union([g$,C$]),where:ie}).strict(),Kjt=t.object({data:t.union([nB,A$]),where:to.optional(),limit:t.number().optional()}).strict(),Xjt=t.object({data:t.union([nB,A$]),where:to.optional(),limit:t.number().optional()}).strict(),tMt=t.object({where:to.optional(),limit:t.number().optional()}).strict(),eMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([S$,T$])}).strict(),oMt=t.object({select:xz.optional(),include:kz.optional(),where:Y,create:t.union([S$,T$]),update:t.union([P$,U$])}).strict(),nMt=t.object({data:t.union([sU,sU.array()]),skipDuplicates:t.boolean().optional()}).strict(),aMt=t.object({data:t.union([sU,sU.array()]),skipDuplicates:t.boolean().optional()}).strict(),iMt=t.object({select:xz.optional(),include:kz.optional(),where:Y}).strict(),lMt=t.object({select:xz.optional(),include:kz.optional(),data:t.union([P$,U$]),where:Y}).strict(),rMt=t.object({data:t.union([HT,W$]),where:xa.optional(),limit:t.number().optional()}).strict(),pMt=t.object({data:t.union([HT,W$]),where:xa.optional(),limit:t.number().optional()}).strict(),cMt=t.object({where:xa.optional(),limit:t.number().optional()}).strict(),uMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([R$,k$])}).strict(),sMt=t.object({select:Mz.optional(),include:jz.optional(),where:ke,create:t.union([R$,k$]),update:t.union([x$,j$])}).strict(),yMt=t.object({data:t.union([yU,yU.array()]),skipDuplicates:t.boolean().optional()}).strict(),dMt=t.object({data:t.union([yU,yU.array()]),skipDuplicates:t.boolean().optional()}).strict(),zMt=t.object({select:Mz.optional(),include:jz.optional(),where:ke}).strict(),mMt=t.object({select:Mz.optional(),include:jz.optional(),data:t.union([x$,j$]),where:ke}).strict(),bMt=t.object({data:t.union([aB,M$]),where:ja.optional(),limit:t.number().optional()}).strict(),hMt=t.object({data:t.union([aB,M$]),where:ja.optional(),limit:t.number().optional()}).strict(),IMt=t.object({where:ja.optional(),limit:t.number().optional()}).strict(),gMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([Z$,v$])}).strict(),CMt=t.object({select:vz.optional(),include:Zz.optional(),where:Jt,create:t.union([Z$,v$]),update:t.union([O$,f$])}).strict(),AMt=t.object({data:t.union([dU,dU.array()]),skipDuplicates:t.boolean().optional()}).strict(),SMt=t.object({data:t.union([dU,dU.array()]),skipDuplicates:t.boolean().optional()}).strict(),TMt=t.object({select:vz.optional(),include:Zz.optional(),where:Jt}).strict(),PMt=t.object({select:vz.optional(),include:Zz.optional(),data:t.union([O$,f$]),where:Jt}).strict(),UMt=t.object({data:t.union([iB,w$]),where:fe.optional(),limit:t.number().optional()}).strict(),WMt=t.object({data:t.union([iB,w$]),where:fe.optional(),limit:t.number().optional()}).strict(),RMt=t.object({where:fe.optional(),limit:t.number().optional()}).strict(),kMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([N$,B$])}).strict(),xMt=t.object({select:fz.optional(),include:Oz.optional(),where:Tt,create:t.union([N$,B$]),update:t.union([q$,F$])}).strict(),jMt=t.object({data:t.union([zU,zU.array()]),skipDuplicates:t.boolean().optional()}).strict(),MMt=t.object({data:t.union([zU,zU.array()]),skipDuplicates:t.boolean().optional()}).strict(),ZMt=t.object({select:fz.optional(),include:Oz.optional(),where:Tt}).strict(),vMt=t.object({select:fz.optional(),include:Oz.optional(),data:t.union([q$,F$]),where:Tt}).strict(),OMt=t.object({data:t.union([yM,D$]),where:Ma.optional(),limit:t.number().optional()}).strict(),fMt=t.object({data:t.union([yM,D$]),where:Ma.optional(),limit:t.number().optional()}).strict(),wMt=t.object({where:Ma.optional(),limit:t.number().optional()}).strict(),NMt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([_$,E$])}).strict(),BMt=t.object({select:Nz.optional(),include:wz.optional(),where:x,create:t.union([_$,E$]),update:t.union([L$,V$])}).strict(),qMt=t.object({data:t.union([mU,mU.array()]),skipDuplicates:t.boolean().optional()}).strict(),FMt=t.object({data:t.union([mU,mU.array()]),skipDuplicates:t.boolean().optional()}).strict(),DMt=t.object({select:Nz.optional(),include:wz.optional(),where:x}).strict(),_Mt=t.object({select:Nz.optional(),include:wz.optional(),data:t.union([L$,V$]),where:x}).strict(),EMt=t.object({data:t.union([PS,H$]),where:Pt.optional(),limit:t.number().optional()}).strict(),LMt=t.object({data:t.union([PS,H$]),where:Pt.optional(),limit:t.number().optional()}).strict(),VMt=t.object({where:Pt.optional(),limit:t.number().optional()}).strict(),HMt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([Q$,Y$])}).strict(),QMt=t.object({select:qz.optional(),include:Bz.optional(),where:_l,create:t.union([Q$,Y$]),update:t.union([G$,$$])}).strict(),YMt=t.object({data:t.union([bU,bU.array()]),skipDuplicates:t.boolean().optional()}).strict(),GMt=t.object({data:t.union([bU,bU.array()]),skipDuplicates:t.boolean().optional()}).strict(),$Mt=t.object({select:qz.optional(),include:Bz.optional(),where:_l}).strict(),JMt=t.object({select:qz.optional(),include:Bz.optional(),data:t.union([G$,$$]),where:_l}).strict(),KMt=t.object({data:t.union([J$,K$]),where:De.optional(),limit:t.number().optional()}).strict(),XMt=t.object({data:t.union([J$,K$]),where:De.optional(),limit:t.number().optional()}).strict(),tZt=t.object({where:De.optional(),limit:t.number().optional()}).strict(),eZt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([X$,t4])}).strict(),oZt=t.object({select:Dz.optional(),include:Fz.optional(),where:xe,create:t.union([X$,t4]),update:t.union([e4,o4])}).strict(),nZt=t.object({data:t.union([hU,hU.array()]),skipDuplicates:t.boolean().optional()}).strict(),aZt=t.object({data:t.union([hU,hU.array()]),skipDuplicates:t.boolean().optional()}).strict(),iZt=t.object({select:Dz.optional(),include:Fz.optional(),where:xe}).strict(),lZt=t.object({select:Dz.optional(),include:Fz.optional(),data:t.union([e4,o4]),where:xe}).strict(),rZt=t.object({data:t.union([lB,n4]),where:Za.optional(),limit:t.number().optional()}).strict(),pZt=t.object({data:t.union([lB,n4]),where:Za.optional(),limit:t.number().optional()}).strict(),cZt=t.object({where:Za.optional(),limit:t.number().optional()}).strict(),uZt=t.object({select:Ez.optional(),include:_z.optional(),data:t.union([a4,i4])}).strict(),sZt=t.object({select:Ez.optional(),include:_z.optional(),where:je,create:t.union([a4,i4]),update:t.union([l4,r4])}).strict(),yZt=t.object({data:t.union([IU,IU.array()]),skipDuplicates:t.boolean().optional()}).strict(),dZt=t.object({data:t.union([IU,IU.array()]),skipDuplicates:t.boolean().optional()}).strict(),zZt=t.object({select:Ez.optional(),include:_z.optional(),where:je}).strict(),mZt=t.object({select:Ez.optional(),include:_z.optional(),data:t.union([l4,r4]),where:je}).strict(),bZt=t.object({data:t.union([rB,p4]),where:va.optional(),limit:t.number().optional()}).strict(),hZt=t.object({data:t.union([rB,p4]),where:va.optional(),limit:t.number().optional()}).strict(),IZt=t.object({where:va.optional(),limit:t.number().optional()}).strict();export{hyt as zodSchemas};